- en: Privilege Escalation and Maintaining Access
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特权升级和保持访问
- en: In the previous chapter, we exploited a target machine using the vulnerabilities
    found during the vulnerabilities-scanning process. However, the level of access
    you have when you exploit a system is dependent on the service you exploit. For
    example, if you exploit a vulnerability in a web application, you'll  most likely
    have the same level of access of the account that runs that service; say, `www` data.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们利用了在漏洞扫描过程中发现的漏洞来攻击目标机器。然而，当你利用系统时所获得的访问级别取决于你所利用的服务。例如，如果你利用了Web应用程序中的漏洞，你很可能会获得与运行该服务的帐户相同的访问级别；比如`www`数据。
- en: In this chapter, we'll escalate our access to the system and then implement
    ways to maintain our access to the compromised system, should we lose connection
    or need to return to it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将提升对系统的访问权限，然后实施方法来保持对被攻击系统的访问权限，以防失去连接或需要返回到该系统。
- en: Technical requirements
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter will require Kali Linux, Metasploitable 2, and Nmap to be installed
    on our system.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将需要Kali Linux、Metasploitable 2和Nmap安装在我们的系统上。
- en: Privilege-escalation
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特权升级
- en: Privilege-escalation can be defined as the process of exploiting a vulnerability
    to gain elevated access to the system.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 特权升级可以定义为利用漏洞来获取对系统的提升访问权限的过程。
- en: 'There are two types of privilege-escalation:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种特权升级：
- en: '**Vertical privilege-escalation**: In this type, a user with a lower privilege
    is able to access the application functions designed for the user with the highest
    privilege, for example, a content-management system where a user is able to access
    the system administrator functions.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**垂直特权升级**：在这种类型中，权限较低的用户能够访问为权限最高的用户设计的应用程序功能，例如，内容管理系统，其中用户能够访问系统管理员功能。'
- en: '**Horizontal privilege-escalation**: This happens when a normal user is able
    to access functions designed for other normal users. For example, in an internet-banking
    application, user A is able to access the menu of user B.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**水平特权升级**：当普通用户能够访问为其他普通用户设计的功能时发生。例如，在一个互联网银行应用程序中，用户A能够访问用户B的菜单。'
- en: 'The following are the privilege-escalation vectors that can be used to gain
    unauthorized access to the target:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可以用来获取未经授权访问目标的特权升级向量：
- en: Local exploits
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地利用
- en: Exploiting a misconfiguration, such as a home directory, that is accessible,
    and that contains an SSH private key allowing access to other machines
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用配置错误，比如一个可访问的家目录，其中包含一个允许访问其他机器的SSH私钥
- en: Exploiting weak passwords on the target
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用目标上的弱密码
- en: Sniffing network traffic to capture credentials
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嗅探网络流量以捕获凭据
- en: Spoofing network packets
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欺骗网络数据包
- en: Local escalation
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地提升
- en: In this section, we are going to use a local exploit to escalate our privilege.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用本地利用来提升我们的特权。
- en: 'To demonstrate this, we will use the following virtual machines:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了证明这一点，我们将使用以下虚拟机：
- en: Metasploitable 2 as our victim machine
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploitable 2作为我们的受害机
- en: Kali Linux as our attacking machine
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux作为我们的攻击机
- en: 'First, we will identify the open network services available on the victim machine.
    For this, we utilize the Nmap port scanner with the following command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将识别受害机器上可用的开放网络服务。为此，我们使用Nmap端口扫描仪并使用以下命令：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We configure Nmap to scan for all of the ports (from port `1` to port `65,535`)
    using the `-p-` option.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们配置Nmap使用`-p-`选项扫描所有端口（从端口`1`到端口`65,535`）。
- en: 'The following screenshot shows the brief result of the preceding command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的简要结果：
- en: '![](img/d9ea1e22-cd82-4f17-91ba-00d2755f769e.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d9ea1e22-cd82-4f17-91ba-00d2755f769e.png)'
- en: After doing some research on the internet, we found that the `distccd` service
    has a vulnerability that may allow a malicious user to execute arbitrary commands.
    The `distccd` service is used to scale large compiler jobs across a farm of similarly-configured
    systems.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在互联网上做了一些研究后，我们发现`distccd`服务存在一个漏洞，可能允许恶意用户执行任意命令。`distccd`服务用于在一组相似配置的系统中扩展大型编译作业。
- en: 'Next, we search in Metasploit to find whether it has the exploit for this vulnerable
    service:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在Metasploit中搜索是否有这个易受攻击服务的利用：
- en: '![](img/4b32f523-f400-407a-98d6-1bcd59fca582.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b32f523-f400-407a-98d6-1bcd59fca582.png)'
- en: From the preceding screenshot, we can see that Metasploit has the exploit for
    the vulnerable `distccd` service.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的截图中，我们可以看到Metasploit有对易受攻击的`distccd`服务的利用。
- en: 'Let''s try to exploit the service, as shown in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试利用该服务，如下图所示：
- en: '![](img/ad666f84-d41f-4b46-80db-b0fe1bbb7533.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ad666f84-d41f-4b46-80db-b0fe1bbb7533.png)'
- en: 'We are able to exploit the service and issue an operating system command to
    find our privilege: `daemon`.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够利用该服务并发出操作系统命令来查找我们的特权：`daemon`。
- en: 'The next step is to explore the system to get more information about it. Now,
    let''s see the kernel version used by issuing the following command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是探索系统以获取更多关于它的信息。现在，让我们通过发出以下命令来查看内核版本：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The kernel version used is `2.6.24-16-server`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的内核版本是`2.6.24-16-server`。
- en: 'We searched the `exploit-db` database and found an exploit ([http://www.exploit-db.com/exploits/8572/](http://www.exploit-db.com/exploits/8572/))
    that will allow us to escalate our privilege to `root`. We then conduct a search
    of the Kali Linux exploit using the term `udev`, which matches the exploit in
    the `exploit-db` webpage, using the following command:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们搜索了`exploit-db`数据库，并找到了一个漏洞利用（[http://www.exploit-db.com/exploits/8572/](http://www.exploit-db.com/exploits/8572/)），可以让我们提升特权到`root`。然后我们使用以下命令搜索Kali
    Linux漏洞利用术语`udev`，这与`exploit-db`网页中的漏洞利用匹配：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This command produces the following output:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令产生以下输出：
- en: '![](img/961435be-2b38-4812-8b1e-6fb23e698d2a.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/961435be-2b38-4812-8b1e-6fb23e698d2a.png)'
- en: 'Next, we need to get this exploit from our attacking machine to the compromised
    machine. We can do this using the compromised machine''s `wget` command. First,
    we transfer the exploit to the folder on our machine where the compromised machine
    will look for the file. Use the command line to copy the exploit by typing the
    following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要将这个利用程序从攻击机器传输到受损机器。我们可以使用受损机器的`wget`命令来做到这一点。首先，将利用程序传输到我们的机器上受损机器将查找文件的文件夹。使用命令行复制利用程序，输入以下命令：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Next, make sure the `apache2` server is running by typing this:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，确保`apache2`服务器正在运行，输入以下命令：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can download the exploit from our attacking machine using the `wget` command
    on the compromised machine, which looks for the file in the attacking machine''s
    `/var/www/html folder`:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用受损机器上的`wget`命令从攻击机器下载利用程序，该命令会在攻击机器的`/var/www/html`文件夹中查找文件：
- en: '![](img/47166511-3a04-48ac-9b53-244b474e98ee.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/47166511-3a04-48ac-9b53-244b474e98ee.png)'
- en: 'After successfully downloading the exploit, we compile it on the victim machine
    using the following `gcc` command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 成功下载利用程序后，我们使用以下`gcc`命令在受害机器上编译它：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now our exploit is ready to be used. From the source code, we found that this
    exploit needs the **Process Identifier** (**PID**) of the `udevd netlink` socket
    as the argument. We can get this value by issuing the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的利用程序已经准备好使用了。根据源代码，我们发现这个利用程序需要`udevd netlink`套接字的**进程标识符**（**PID**）作为参数。我们可以通过发出以下命令来获取这个值：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following screenshot shows the result of this command:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了这个命令的结果：
- en: '![](img/c6cf2b1a-be4f-45fd-af44-e5ebfaee662e.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c6cf2b1a-be4f-45fd-af44-e5ebfaee662e.png)'
- en: 'You can also get the `udev` service PID, `1`, by issuing the following command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过发出以下命令来获取`udev`服务的PID，即`1`：
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following command-line screenshot is the result of the preceding command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令行截图是前面命令的结果：
- en: '![](img/161d8c29-c038-4bbe-9f59-81a642284182.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/161d8c29-c038-4bbe-9f59-81a642284182.png)'
- en: In a real penetration-testing engagement, you may want to set up a test machine
    that has the same kernel version as the target to test the exploit.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在真实的渗透测试过程中，您可能希望设置一个具有与目标相同内核版本的测试机器来测试利用程序。
- en: 'From our information-gathering on the victim machine, we know that this machine
    has Netcat installed. We will use Netcat to connect back to our machine once the
    exploit runs in order to give us root access to the victim machine. Based on the
    exploit source code information, we need to save our payload in a file called
    `run`:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们对受害者机器的信息收集，我们知道这台机器安装了Netcat。一旦利用运行，我们将使用Netcat连接回我们的机器，以便给我们root访问权限。根据利用源代码信息，我们需要将有效载荷保存在一个名为`run`的文件中：
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We also need to start the Netcat listener on our attacking machine by issuing
    the following command:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要通过发出以下命令在攻击机器上启动Netcat监听器：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The one thing left to do is to run the exploit with the required argument:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一剩下的事情就是使用所需的参数运行利用程序：
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In our attacking machine, we can see the following messages:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的攻击机器上，我们可以看到以下消息：
- en: '![](img/f178e1ca-9f8c-46dc-86da-db2de856fa83.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f178e1ca-9f8c-46dc-86da-db2de856fa83.png)'
- en: After issuing the `whoami` command, we can see that we have successfully escalated
    our privilege to root.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在发出`whoami`命令后，我们可以看到我们已成功将特权提升为root。
- en: Password-attack tools
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码攻击工具
- en: Passwords are currently used as the main method to authenticate a user to the
    system. After a user submits the correct username and password, the system will
    allow a user to log in and access its functionality based on the authorization
    given to that username.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 目前密码被用作认证用户登录系统的主要方法。用户提交正确的用户名和密码后，系统将允许用户登录并根据该用户名的授权访问其功能。
- en: 'The following three factors can be used to categorize authentication types:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下三个因素可以用来对认证类型进行分类：
- en: '**Something you know**: This is usually called the first factor of authentication.
    A password is categorized in this type. In theory, this factor should only be
    known by the authorized person. In reality, this factor can easily be leaked or
    captured; therefore it is not advisable to use this method to authenticate users
    to a sensitive system.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你知道的东西**：这通常被称为认证的第一因素。密码属于这种类型。理论上，这个因素应该只有被授权的人知道。但在现实中，这个因素很容易泄露或被捕获；因此不建议使用这种方法对用户进行敏感系统的认证。'
- en: '**Something you have**: This is usually called the second factor of authentication,
    examples of this factor include security tokens and cards. After you prove to
    the system that you have the authentication factor, you are allowed to log in.
    The drawback of this factor is that it is prone to the cloning process.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你拥有的东西**：这通常被称为认证的第二因素，这个因素的例子包括安全令牌和卡片。在您向系统证明您拥有认证因素之后，您将被允许登录。这个因素的缺点是容易被克隆。'
- en: '**Something you are**: This is usually called the third factor of authentication,
    examples include biometric and retina scans. This factor is the most secure one,
    but already there are several published attacks against this factor.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你是的东西**：这通常被称为认证的第三因素，例如生物识别和视网膜扫描。这个因素是最安全的，但已经有几种已公开的攻击针对这个因素。'
- en: To have more security, people usually use more than one factor. The most common
    combination is to use the first and second factors of authentication. As this
    combination uses two factors of authentication, it is usually called a two-factor
    authentication.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更安全，人们通常使用多于一个因素。最常见的组合是使用第一和第二因素的认证。由于这种组合使用了两个认证因素，通常被称为双因素认证。
- en: Unfortunately, based on our penetration-testing experiences, password-based
    authentication is still widely used. As a penetration tester, you should check
    for password security during your penetration testing engagement.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 很遗憾，根据我们的渗透测试经验，基于密码的身份验证仍然被广泛使用。作为一名渗透测试人员，在渗透测试过程中，您应该检查密码安全性。
- en: 'According to how the password attack is done, this process can be differentiated
    into the following types:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 根据密码攻击的方式，这个过程可以分为以下类型：
- en: '**Offline attack**: In this method, the attacker gets the hash file from the
    target machine and copies it to the attacker''s machine. The attacker then uses
    the password cracking tool to crack the password. The advantage of using this
    method is that the attacker doesn''t need to worry about the password-blocking
    mechanism available in the target machine because the process is done locally.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**离线攻击**：在这种方法中，攻击者从目标机器获取哈希文件并将其复制到攻击者的机器上。然后，攻击者使用密码破解工具来破解密码。使用此方法的优势在于，攻击者无需担心目标机器中可用的密码阻止机制，因为该过程是在本地完成的。'
- en: '**Online attack**: In this method, the attacker tries to log into the remote
    machine by guessing the credentials. This technique may trigger the remote machine
    to block the attacker machine after several failed attempts to guess the password.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在线攻击**：在这种方法中，攻击者尝试通过猜测凭据来登录远程机器。这种技术可能会触发远程机器在多次尝试猜测密码失败后阻止攻击者机器。'
- en: Offline attack tools
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 离线攻击工具
- en: The tools in this category are used for offline password attacks. Usually, these
    tools are used to do vertical privilege-escalation because you may need a privileged
    account to get the password files.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此类别中的工具用于离线密码攻击。通常，这些工具用于进行垂直特权升级，因为您可能需要特权帐户来获取密码文件。
- en: Why do you need other credentials when you already have a privilege credential?
    When doing penetration testing on a system, you may find that the privileged account
    may not have the configuration to run the application. If this is the case, you
    can't test it. However, after you log in as a regular user, you are able to run
    the application correctly. This is one of the reasons you need to get other credentials.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当您已经拥有特权凭据时，为什么还需要其他凭据？在对系统进行渗透测试时，您可能会发现特权帐户可能没有配置来运行应用程序。如果是这种情况，您就无法测试它。但是，在您以普通用户身份登录后，您就能够正确运行应用程序。这就是您需要获取其他凭据的原因之一。
- en: Another case is where, after you have exploited a SQL injection vulnerability,
    you are able to dump a database and find that the credentials are stored using
    hashing. To help you get information from the hash, you can use the tools in this
    category.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个案例是，在利用SQL注入漏洞后，您能够转储数据库并发现凭据是使用哈希存储的。为了帮助您从哈希中获取信息，您可以使用此类别中的工具。
- en: John the Ripper
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: John the Ripper
- en: John the Ripper ([http://www.openwall.com/john/](http://www.openwall.com/john/))
    is a tool that can be used to crack the password hash. Currently, it can crack
    more than 40 password hash types, such as DES, MD5, LM, NT, crypt, NETLM, and
    NETNTLM. One of the reasons to use John instead of the other password-cracking
    tools described in this chapter is that John is able to work with the DES and
    crypt encryption algorithms.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: John the Ripper ([http://www.openwall.com/john/](http://www.openwall.com/john/))
    是一个可以用来破解密码哈希的工具。目前，它可以破解40多种密码哈希类型，如DES、MD5、LM、NT、crypt、NETLM和NETNTLM。使用John而不是本章中描述的其他密码破解工具的原因之一是，John能够使用DES和crypt加密算法。
- en: 'To start the John tool, use the console to execute the following command:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动John工具，请使用控制台执行以下命令：
- en: '[PRE11]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will display the John usage instructions on your screen.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在屏幕上显示John的使用说明。
- en: 'John supports the following four password-cracking modes:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: John支持以下四种密码破解模式：
- en: '**Wordlist mode**: In this mode, you only need to supply the wordlist file
    and the password file to be cracked. A wordlist file is a text file containing
    the possible passwords. There is only one word on each line. You can also use
    a rule to instruct John to modify the words contained in the wordlist according
    to the rule. To use wordlist, just use the `--wordlist=<wordlist_name>` option.
    You can create your own wordlist or you can obtain one from other people. There
    are many sites that provide wordlists. For example, there is the wordlist from
    the Openwall Project, which can be downloaded from [http://download.openwall.net/pub/wordlists/](http://download.openwall.net/pub/wordlists/).'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单词列表模式**：在这种模式下，您只需要提供单词列表文件和要破解的密码文件。单词列表文件是一个包含可能密码的文本文件。每行只有一个单词。您还可以使用规则指示John根据规则修改单词列表中包含的单词。要使用单词列表，只需使用`--wordlist=<wordlist_name>`选项。您可以创建自己的单词列表，也可以从其他人那里获取。有许多网站提供单词列表。例如，有来自Openwall
    Project的单词列表，可以从[http://download.openwall.net/pub/wordlists/](http://download.openwall.net/pub/wordlists/)下载。'
- en: '**Single-crack mode**: This mode has been suggested by the author of John and
    is to be tried first. In this mode, John will use the login names, Full Name field,
    and user''s home directory as the password candidates. These password candidates
    are then used to crack the password of the account they were taken from or to
    crack the password hash with the same salt. As a result, it is much faster than
    the wordlist mode.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单破解模式**：这种模式是由John的作者建议首先尝试的。在这种模式下，John将使用登录名、全名字段和用户的主目录作为密码候选项。然后，这些密码候选项被用来破解它们所取自的帐户的密码，或者用来破解具有相同盐的密码哈希。因此，它比单词列表模式要快得多。'
- en: '**Incremental mode**: In this mode, John will try all of the possible character
    combinations as the password. Although it is the most powerful cracking method,
    if you don''t set the termination condition, the process will take a very long
    time. Examples of termination conditions are setting a short password limit and
    using a small character set. To use this mode, you need to assign the incremental
    mode in the configuration file of John. The predefined modes are All, Alnum, Alpha,
    Digits, and Lanman or you can define your own mode.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**递增模式**：在这种模式下，John将尝试所有可能的字符组合作为密码。虽然这是最强大的破解方法，但如果您不设置终止条件，该过程将需要很长时间。终止条件的示例是设置短密码限制和使用小字符集。要使用此模式，您需要在John的配置文件中分配递增模式。预定义的模式有All、Alnum、Alpha、Digits和Lanman，或者您可以定义自己的模式。'
- en: '**External mode**: With this mode, you can use the external cracking mode used
    by John. You need to create a configuration file section called `[List.External:MODE]`,
    where `MODE` is the name you assign. This section should contain functions programmed
    in a subset the of the C programming language. Later, John will compile and use
    this mode. You can read more about this mode at [http://www.openwall.com/john/doc/EXTERNAL.shtml](http://www.openwall.com/john/doc/EXTERNAL.shtml).'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部模式**：使用此模式，您可以使用John使用的外部破解模式。您需要创建一个名为`[List.External:MODE]`的配置文件部分，其中`MODE`是您分配的名称。此部分应包含用C编程语言的子集编程的函数。稍后，John将编译并使用此模式。您可以在[http://www.openwall.com/john/doc/EXTERNAL.shtml](http://www.openwall.com/john/doc/EXTERNAL.shtml)上阅读更多关于此模式的信息。'
- en: If you don't give the cracking mode as an argument to John in the command line,
    it will use the default order. First, it will use the single-crack mode, then
    the wordlist mode, and after that it will use the incremental mode.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在命令行中没有指定John的破解模式作为参数，它将使用默认顺序。首先，它将使用单破解模式，然后是字典模式，之后将使用增量模式。
- en: Before you can use John, you need to obtain the password files. In the Unix
    world, most systems use the `shadow` and `passwd` files. You may need to log in
    as root to be able to read the shadow file.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在您可以使用John之前，您需要获取密码文件。在Unix世界中，大多数系统使用`shadow`和`passwd`文件。您可能需要以root用户身份登录才能读取shadow文件。
- en: After you get the password files, you need to combine these files so that John
    can use them. To help you, John provides you with a tool called `unshadow`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 获取密码文件后，您需要将这些文件组合起来，以便John可以使用它们。为了帮助您，John为您提供了一个名为`unshadow`的工具。
- en: 'The following is the command to combine the shadow and `passwd` files. For
    this, I use the `/etc/shadow` and `/etc/passwd` files from the Metasploitable
    2 virtual machine and put them in a directory called `pwd` with the names `etc-shadow`
    and `etc-passwd`, respectively:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是组合shadow和`passwd`文件的命令。为此，我使用Metasploitable 2虚拟机中的`/etc/shadow`和`/etc/passwd`文件，并将它们放在一个名为`pwd`的目录中，分别命名为`etc-shadow`和`etc-passwd`：
- en: '[PRE12]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following is a snippet of the `pass` file content:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`pass`文件内容的片段：
- en: '[PRE13]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To crack the password file, just give the following command, where `pass` is
    the password list file you have just generated:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要破解密码文件，只需给出以下命令，其中`pass`是您刚生成的密码列表文件：
- en: '[PRE14]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If John managed to crack the passwords, it will store those passwords in the
    `john.pot` file. To see the passwords, you can issue the following command:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果John成功破解了密码，它将把这些密码存储在`john.pot`文件中。要查看密码，您可以发出以下命令：
- en: '[PRE15]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In this case, John cracks the passwords quickly, as shown in the following
    screenshot:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，John很快地破解了密码，如下面的屏幕截图所示：
- en: '![](img/372cbf42-bdaf-4c7e-82cf-b14ff7de696a.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/372cbf42-bdaf-4c7e-82cf-b14ff7de696a.png)'
- en: 'The following table is the list of cracked passwords:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格是破解密码的列表：
- en: '| **Username** | **Password** |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| **用户名** | **密码** |'
- en: '| `postgres` | `postgres` |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `postgres` | `postgres` |'
- en: '| `user` | `user` |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `user` | `user` |'
- en: '| `msfadmin` | `msfadmin` |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| `msfadmin` | `msfadmin` |'
- en: '| `service` | `service` |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| `service` | `service` |'
- en: '| `klog` | `123456789` |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| `klog` | `123456789` |'
- en: '| `sys` | `batman` |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| `sys` | `batman` |'
- en: Of the seven passwords listed in the `pass` file, John managed to crack six
    passwords. Only the password of `root` cannot be cracked instantly.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在`pass`文件中列出的七个密码中，John设法破解了六个密码。只有`root`的密码无法立即破解。
- en: If you want to crack the Windows password, first you need to extract the Windows
    password hashes (LM and/or NTLM) in the `pwdump` output format from the Windows
    system and SAM files. You can consult [http://www.openwall.com/passwords/microsoft-windows-nt-2000-xp-2003-vista-7#pwdump](http://www.openwall.com/passwords/microsoft-windows-nt-2000-xp-2003-vista-7#pwdump) to
    see several of these utilities. One of them is `samdump2`, provided in Kali Linux.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想破解Windows密码，首先需要从Windows系统和SAM文件中提取Windows密码哈希（LM和/或NTLM）以`pwdump`输出格式。您可以查阅[http://www.openwall.com/passwords/microsoft-windows-nt-2000-xp-2003-vista-7#pwdump](http://www.openwall.com/passwords/microsoft-windows-nt-2000-xp-2003-vista-7#pwdump)来了解其中几种实用程序。其中之一是Kali
    Linux中提供的`samdump2`。
- en: 'To crack the Windows hash obtained from `samdump2` using a `password.lst` wordlist,
    you can use the following command and the obtained output is displayed on the
    following screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`password.lst`字典破解从`samdump2`获取的Windows哈希，您可以使用以下命令，并且获取的输出显示在以下屏幕截图中：
- en: '[PRE16]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](img/848debf5-9e90-4090-8a16-b8fc522b8db3.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/848debf5-9e90-4090-8a16-b8fc522b8db3.png)'
- en: 'The `password.lst` file content is as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`password.lst`文件内容如下：'
- en: '[PRE17]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'To see the result, give the following command:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看结果，请给出以下命令：
- en: '[PRE18]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following screenshot shows a snippet of the password obtained:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了获取的密码片段：
- en: '![](img/327cffc1-76a7-43de-8faf-4787367f5fe2.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/327cffc1-76a7-43de-8faf-4787367f5fe2.png)'
- en: John was able to obtain the administrator password of a Windows machine, but
    was unable to crack the password for the `tedi` user.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: John能够获取Windows机器的管理员密码，但无法破解`tedi`用户的密码。
- en: If a GUI is more your thing, there's a graphical interface for John and it's called
    Johnny.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果GUI更适合您，John还有一个名为Johnny的图形界面。
- en: 'To start Johnny, open a console and type the following command:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Johnny，请打开控制台并输入以下命令：
- en: '[PRE19]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: You will then see the Johnny window.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您将看到Johnny窗口。
- en: 'The following screenshot shows the result of cracking the same Metasploitable
    2 hashes:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了破解相同Metasploitable 2哈希的结果：
- en: '![](img/df46faad-5ffa-40d1-a802-578749d62715.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/df46faad-5ffa-40d1-a802-578749d62715.png)'
- en: Ophcrack
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ophcrack
- en: Ophcrack is a rainbow tables-based password cracker that can be used to crack
    the Windows LM and NTLM password hashes. It comes as a command-line and graphical-user
    interface program. Just like the RainbowCrack tool, Ophcrack is based on the time-memory
    tradeoff method.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Ophcrack是基于彩虹表的密码破解程序，可用于破解Windows LM和NTLM密码哈希。它作为命令行和图形用户界面程序提供。就像RainbowCrack工具一样，Ophcrack基于时间-内存折衷方法。
- en: 'To start the `ophcrack` command line, use the console to execute the following
    command:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动`ophcrack`命令行，请使用控制台执行以下命令：
- en: '[PRE20]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This will display the Ophcrack usage instructions and example on your screen.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您的屏幕上显示Ophcrack的使用说明和示例。
- en: 'To start Ophcrack GUI, use the console to execute the following command:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Ophcrack GUI，请使用控制台执行以下命令：
- en: '[PRE21]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This will display the Ophcrack GUI page.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示Ophcrack GUI页面。
- en: 'Before you can use Ophcrack, you need to grab the rainbow tables from the Ophcrack
    site ([http://ophcrack.sourceforge.net/tables.php](http://ophcrack.sourceforge.net/tables.php)).
    Currently, there are three tables that can be downloaded for free:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Ophcrack之前，您需要从Ophcrack网站（[http://ophcrack.sourceforge.net/tables.php](http://ophcrack.sourceforge.net/tables.php)）获取彩虹表。目前，有三个可以免费下载的表：
- en: '**Small XP table**: This comes as a 308 MB compressed file. It has a 99.9 percent
    success rate and contains the character set of numeric, small, and capital letters.
    You can download it from [http://downloads.sourceforge.net/ophcrack/tables_xp_free_small.zip](http://downloads.sourceforge.net/ophcrack/tables_xp_free_small.zip).'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小型XP表**：这是一个308 MB的压缩文件。成功率为99.9％，包含数字、小写和大写字母字符集。您可以从[http://downloads.sourceforge.net/ophcrack/tables_xp_free_small.zip](http://downloads.sourceforge.net/ophcrack/tables_xp_free_small.zip)下载。'
- en: '**Fast XP table**: This has the same success rate and character set as the
    small XP tables, but it is faster compared to the small XP tables. You can get
    it from [http://downloads.sourceforge.net/ophcrack/tables_xp_free_fast.zip](http://downloads.sourceforge.net/ophcrack/tables_xp_free_fast.zip).'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速XP表**：与小型XP表具有相同的成功率和字符集，但与小型XP表相比速度更快。您可以从[http://downloads.sourceforge.net/ophcrack/tables_xp_free_fast.zip](http://downloads.sourceforge.net/ophcrack/tables_xp_free_fast.zip)获取。'
- en: '**Vista table**: This has a 99.9 percent success rate and is currently based
    on the dictionary words with variations. It is a 461 MB compressed file. You can
    get it from [http://downloads.sourceforge.net/ophcrack/tables_vista_free.zip](http://downloads.sourceforge.net/ophcrack/tables_vista_free.zip).'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vista表**：成功率为99.9％，目前基于带有变体的字典词。这是一个461 MB的压缩文件。您可以从[http://downloads.sourceforge.net/ophcrack/tables_vista_free.zip](http://downloads.sourceforge.net/ophcrack/tables_vista_free.zip)获取。'
- en: As an example, we use the `xp_free_fast` tables, and I have extracted and put
    the files in the `xp_free_small` directory. The Windows XP password hash file
    is stored in the `test-sam` file in the `pwdump` format.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们使用`xp_free_fast`表，并且已提取并将文件放在`xp_free_small`目录中。Windows XP密码哈希文件存储在`pwdump`格式的`test-sam`文件中。
- en: 'We used the following command to crack the Windows password hashes obtained
    earlier:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用以下命令来破解先前获得的Windows密码哈希：
- en: '[PRE22]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following output shows the cracking process:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出显示了破解过程：
- en: '[PRE23]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The following are the results of `ophrack`:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`ophrack`的结果：
- en: '[PRE24]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: You can see that Ophcrack is able to obtain all of the passwords for the corresponding
    users.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到Ophcrack能够获取相应用户的所有密码。
- en: Another tool to look at is RainbowCrack. In Kali, RainbowCrack comes with three
    tools: `rtgen`, `rtsort`, and `rcrack`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个要查看的工具是RainbowCrack。在Kali中，RainbowCrack带有三个工具：`rtgen`，`rtsort`和`rcrack`。
- en: 'To use the RainbowCrack or OphCrack tools, you will need rainbow tables. You
    can get some free tables at the following:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用RainbowCrack或OphCrack工具，您将需要彩虹表。您可以在以下位置获取一些免费表：
- en: '[http://www.freerainbowtables.com/en/tables/](http://www.freerainbowtables.com/en/tables/)'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.freerainbowtables.com/en/tables/](http://www.freerainbowtables.com/en/tables/)'
- en: '[http://rainbowtables.shmoo.com/](http://rainbowtables.shmoo.com/)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://rainbowtables.shmoo.com/](http://rainbowtables.shmoo.com/)'
- en: '[http://ophcrack.sourceforge.net/tables.php](http://ophcrack.sourceforge.net/tables.php)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://ophcrack.sourceforge.net/tables.php](http://ophcrack.sourceforge.net/tables.php)'
- en: samdump2
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: samdump2
- en: To extract password hashes from the Windows 2K/NT/XP/Vista SAM database registry
    file, you can use `samdump2` ([http://sourceforge.net/projects/ophcrack/files/samdump2/](https://sourceforge.net/projects/ophcrack/files/samdump2/)).
    With `samdump2`, you don't need to give the **System Key** (**SysKey**) first
    to get the password hash. SysKey is a key used to encrypt the hashes in the **Security
    Accounts Manager** (**SAM**) file. It was introduced and enabled in Windows NT
    Service Pack 3.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Windows 2K/NT/XP/Vista SAM数据库注册表文件中提取密码哈希，您可以使用`samdump2`（[http://sourceforge.net/projects/ophcrack/files/samdump2/](https://sourceforge.net/projects/ophcrack/files/samdump2/)）。使用`samdump2`，您无需首先提供**系统密钥**（SysKey）即可获取密码哈希。SysKey是用于加密**安全帐户管理器**（SAM）文件中哈希的密钥。它是在Windows
    NT Service Pack 3中引入和启用的。
- en: 'To start `samdump2`, use the console to execute the following command:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动`samdump2`，请使用控制台执行以下命令：
- en: '[PRE25]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: This will display simple usage instructions on your screen.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在您的屏幕上显示简单的使用说明。
- en: 'There are several ways to get the Windows password hash:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以获取Windows密码哈希：
- en: The first method is by using the `samdump2` program utilizing the Windows `system`
    and SAM files. These are located in the `c:%windows%system32config` directory.
    This folder is locked for all accounts if Windows is running. To overcome this
    problem, you need to boot up a Linux Live CD, such as Kali Linux, and mount the
    disk partition containing the Windows system. After this, you can copy the system
    and SAM files to your Kali machine.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一种方法是使用`samdump2`程序利用Windows`system`和SAM文件。这些文件位于`c:%windows%system32config`目录中。如果Windows正在运行，此文件夹对所有帐户都是锁定的。要解决此问题，您需要启动Linux
    Live CD，例如Kali Linux，并挂载包含Windows系统的磁盘分区。之后，您可以将系统和SAM文件复制到您的Kali机器上。
- en: The second method is by using the `pwdump` program and its related variant tools
    from the Windows machine to get the password hash file.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二种方法是使用`pwdump`程序及其相关的变体工具从Windows机器获取密码哈希文件。
- en: The third method is by using the hashdump command from the meterpreter script
    as shown in the previous chapter. To be able to use this method, you need to exploit
    the system and upload the meterpreter script first.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三种方法是使用meterpreter脚本中显示的`hashdump`命令。要使用此方法，您需要利用系统并首先上传meterpreter脚本。
- en: For our exercise, we are going to dump the Windows XP SP3 password hash. We
    assume that you already have the system and SAM files and have stored them on
    your home directory as system and `sam`.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的练习中，我们将转储Windows XP SP3密码哈希。我们假设您已经拥有系统和SAM文件，并已将它们存储在您的主目录中，如system和`sam`。
- en: 'The following command is used to dump the password hash using `samdump2`:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于使用`samdump2`转储密码哈希：
- en: '[PRE26]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The output is saved to the `test-sam` file. The following is the `test-sam` file
    content:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 输出保存在“test-sam”文件中。以下是“test-sam”文件内容：
- en: '[PRE27]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: You can then supply the `test-sam` file to the password crackers, such as John
    or Ophcrack.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以将“test-sam”文件提供给密码破解工具，如John或Ophcrack。
- en: Online attack tools
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在线攻击工具
- en: In the previous section, we discussed several tools that can be used to crack
    passwords in the offline mode. In this section, we will discuss some password
    attacking tools that must be used while you are connected to the target machine.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们讨论了几种可以用于离线模式下破解密码的工具。在本节中，我们将讨论一些必须在连接到目标机器时使用的密码攻击工具。
- en: 'We will discuss the tools that can be used for the following purposes:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论可用于以下目的的工具：
- en: Generating wordlists
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成单词列表
- en: Finding the password hash
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找密码哈希
- en: Online password attack tool
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线密码攻击工具
- en: The first two tools are used to generate wordlists from the information gathered
    in the target website, while the other one is used to search the password hash
    in the online password hash service database.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 前两个工具用于从目标网站收集的信息生成单词列表，而另一个工具用于在在线密码哈希服务数据库中搜索密码哈希。
- en: The online password attack tool will try to log into the remote service, just
    like a user login, using the credentials provided. The tool will try to log in
    many times until the correct credentials are found.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在线密码攻击工具将尝试登录到远程服务，就像用户登录一样，使用提供的凭据。该工具将尝试多次登录，直到找到正确的凭据为止。
- en: The drawback of this technique is that, because you connect directly to the
    target server, your action may be noticed and blocked. Also, because the tool
    utilizes the login process, it will take longer to run compared to the offline
    attack tools.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术的缺点是，因为您直接连接到目标服务器，您的操作可能会被注意到并被阻止。此外，由于该工具利用了登录过程，因此与离线攻击工具相比，运行时间会更长。
- en: Even though the tool is slow and may trigger a blocking mechanism, network services
    such as SSH, Telnet, and FTP usually can't be cracked using offline password-cracking
    tools. You may want to be very careful when doing an online password attack; in
    particular, when you brute-force an **Active Directory** (**AD**) server, you
    may block all of the user accounts. You need to check the password and lockout
    policy first, and then try only one password for all accounts, so you do not end
    up blocking accounts.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管该工具速度较慢且可能触发阻止机制，但通常无法使用离线密码破解工具破解网络服务，如SSH、Telnet和FTP。在进行在线密码攻击时，您可能需要非常小心；特别是在对Active
    Directory（AD）服务器进行暴力破解时，可能会阻止所有用户帐户。您需要首先检查密码和锁定策略，然后尝试为所有帐户仅使用一个密码，以免阻止帐户。
- en: CeWL
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CeWL
- en: The **Custom Word List** (**CeWL**) ([http://www.digininja.org/projects/cewl.php](http://www.digininja.org/projects/cewl.php))
    generator is a tool that will spider a target **Uniform Resource Locator** (**URL**)
    and create a unique list of the words found on that URL. This list can then be
    used by password-cracking tools such as John the Ripper.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义单词列表（CeWL）（[http://www.digininja.org/projects/cewl.php](http://www.digininja.org/projects/cewl.php)）生成器是一个工具，它将爬取目标统一资源定位符（URL）并创建在该URL上找到的单词的唯一列表。然后可以将此列表用于密码破解工具，如John
    the Ripper。
- en: 'The following are several useful options in CeWL:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是CeWL中几个有用的选项：
- en: '`depth N` or `-d N`: This sets the spider depth to `N`; the default value is `2`'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`depth N`或`-d N`：这将设置蜘蛛深度为`N`；默认值为`2`'
- en: '`min_word_length N` or `-m N`: This is the minimum word length; the default
    length is `3`'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min_word_length N`或`-m N`：这是最小单词长度；默认长度为`3`'
- en: '`verbose or -v`: This gives a verbose output'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`verbose`或`-v`：这会提供详细输出'
- en: '`write or -w`: This is to write output to a file'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`write`或`-w`：这是将输出写入文件'
- en: 'If you get a problem running CeWL in Kali with an error message, `Error: zip/zip
    gem not installed`, use `gem install zip/zip` to install the required gem. To
    fix this problem, just follow the suggestions to install `zip gem`:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '如果在Kali中运行CeWL时出现错误消息“Error: zip/zip gem not installed”，请使用“gem install zip/zip”安装所需的gem来解决此问题。要解决此问题，只需按照安装“zip
    gem”的建议进行操作：'
- en: '[PRE28]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Let''s try to create a custom wordlist from a target website. In this case,
    we will use the built-in website in Metasploitable. To create the wordlist, the
    following is the `cewl` command to be used:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试从目标网站创建自定义单词列表。在这种情况下，我们将使用Metasploitable中的内置网站。要创建单词列表，将使用以下`cewl`命令：
- en: '[PRE29]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: After some time, the result will be created. In Kali, the output is stored in
    the root directory.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 一段时间后，结果将被创建。在Kali中，输出存储在根目录中。
- en: 'The following is the abridged content of the `target.txt` file:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是“target.txt”文件的摘要内容：
- en: '[PRE30]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Hydra
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hydra
- en: Hydra is a tool that can be used to guess or crack the login username and password.
    It supports numerous network protocols, such as HTTP, FTP, POP3, and SMB. It works
    by using the username and password provided and tries to log into the network
    service in parallel; by default, it will log in using 16 connections to the same
    host.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra是一个可以用于猜测或破解登录用户名和密码的工具。它支持许多网络协议，如HTTP、FTP、POP3和SMB。它通过使用提供的用户名和密码并尝试并行登录到网络服务来工作；默认情况下，它将使用16个连接登录到同一主机。
- en: 'To start Hydra, use the console to execute the following command:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Hydra，请使用控制台执行以下命令：
- en: '[PRE31]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This will display the Hydra usage instructions on your screen.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在屏幕上显示Hydra的使用说明。
- en: 'In our exercise, we will brute-force the password for a VNC server located
    at `172.16.43.156` and use the passwords contained in the `password.lst` file.
    The command to do this is as follows:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的练习中，我们将对位于“172.16.43.156”的VNC服务器的密码进行暴力破解，并使用包含在“password.lst”文件中的密码。执行此操作的命令如下：
- en: '[PRE32]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following screenshot shows the result of this command:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了此命令的结果：
- en: '![](img/403cd67e-0ad1-410b-9c20-35e7c3011c19.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/403cd67e-0ad1-410b-9c20-35e7c3011c19.png)
- en: From the preceding screenshot, we can see that Hydra was able to find the VNC
    passwords. The passwords used on the target server are `password01` and `password`.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图中，我们可以看到Hydra能够找到VNC密码。在目标服务器上使用的密码是`password01`和`password`。
- en: To verify whether the passwords obtained by Hydra are correct, just run `vncviewer`
    to the remote machine and use the passwords found.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证Hydra获取的密码是否正确，只需运行`vncviewer`到远程机器并使用找到的密码。
- en: 'The following screenshot shows the result of running `vncviewer`:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了运行`vncviewer`的结果：
- en: '![](img/e9d2711d-d351-4bc9-a0ca-8769d3a6609c.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e9d2711d-d351-4bc9-a0ca-8769d3a6609c.png)'
- en: From the preceding screenshot, we can see that we are able to log into the VNC
    server using the cracked passwords, and we got the VNC root credential. Fantastic!
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图中，我们可以看到我们能够使用破解的密码登录VNC服务器，并获得VNC根凭据。太棒了！
- en: 'Besides using the Hydra command line, you can also use the Hydra GUI by executing
    the following command:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用Hydra命令行，还可以通过执行以下命令使用Hydra GUI：
- en: '[PRE33]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The following screenshot shows the result of running the Hydra GTK to attack
    an SSH service on the target:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了运行Hydra GTK攻击目标上的SSH服务的结果：
- en: '![](img/ce3c4146-e8fb-4d34-9006-78af331c6b12.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ce3c4146-e8fb-4d34-9006-78af331c6b12.png)'
- en: Mimikatz
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mimikatz
- en: 'Mimikatz is a post-exploitation tool written to give pentesters the ability
    to maintain access and compromise credentials once a foothold has been obtained.
    While a standalone program, it has been made part of the Metasploit Framework.
    Mimikatz allows for the gathering of credentials in a compromised system without
    having to leave the Metasploit framework. Once system level access has been obtained,
    Mimikatz can be started within a meterpreter shell using the following command:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: Mimikatz是一个后渗透工具，旨在为渗透测试人员提供在获得立足点后保持访问权限和破坏凭据的能力。虽然是一个独立的程序，但它已经成为Metasploit框架的一部分。Mimikatz允许在不离开Metasploit框架的情况下在受损系统中收集凭据。一旦获得系统级别访问权限，可以使用以下命令在meterpreter
    shell中启动Mimikatz：
- en: '[PRE34]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Once Mimikatz is loaded, type in the following to obtain a list of the different
    commands available:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦加载了Mimikatz，输入以下内容以获取可用命令的列表：
- en: '[PRE35]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The following screenshot shows the output:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了输出：
- en: '![](img/c51fddac-4092-48fe-8092-40764353d289.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c51fddac-4092-48fe-8092-40764353d289.png)'
- en: 'There are two ways that Mimikatz can be used with Metasploit. The first is
    with the full range of Mimikatz features. These start with `mimikatz_command`.
    For example, if we wanted to dump the hashes from the compromised system, type
    the following command:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Mimikatz有两种与Metasploit一起使用的方式。第一种是使用Mimikatz的全部功能。这些从`mimikatz_command`开始。例如，如果我们想要从受损系统中转储哈希值，输入以下命令：
- en: '[PRE36]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'This produces the following output:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这会产生以下输出：
- en: '![](img/cd453913-956f-4485-82a6-441ee628dac3.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd453913-956f-4485-82a6-441ee628dac3.png)'
- en: 'Another feature is the ability to search for credentials on the compromised
    machine. Here we use the following command:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个功能是在受损机器上搜索凭据的能力。在这里，我们使用以下命令：
- en: '[PRE37]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The output shows how Mimikatz was able to obtain the `Administrator` password
    for the compromised system:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示了Mimikatz如何能够获取受损系统的`Administrator`密码：
- en: '![](img/898e252c-3c17-42a1-8e0b-1833db497b2b.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![](img/898e252c-3c17-42a1-8e0b-1833db497b2b.png)'
- en: 'Metasploit also contains several commands that utilize Mimikatz to perform
    post-exploitation activities. Much like the hash `dump` command, the following
    command will dump the hashes from the compromised system:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit还包含几个利用Mimikatz执行后渗透活动的命令。与哈希`dump`命令类似，以下命令将从受损系统中转储哈希值：
- en: '[PRE38]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This produces the following output:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这会产生以下输出：
- en: '![](img/78855f2b-5240-4ebf-8ed9-39c43bcfc221.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![](img/78855f2b-5240-4ebf-8ed9-39c43bcfc221.png)'
- en: 'Another Metasploit command that leverages Mimikatz is the `Kerberos` command,
    which will obtain cleartext credentials on the compromised machine:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit的另一个命令利用Mimikatz的是`Kerberos`命令，它将在受损机器上获取明文凭据：
- en: '[PRE39]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The command then produces the following output:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 然后命令产生以下输出：
- en: '![](img/d1ca0847-37ae-4df6-9cea-829c72ffb5b1.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d1ca0847-37ae-4df6-9cea-829c72ffb5b1.png)'
- en: Maintaining access
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维持访问
- en: After escalating the privilege to the target machines, the next step we should
    take is to create a mechanism to maintain our access to the target machines. So,
    in the future, if the vulnerability you exploited gets patched or turned off,
    you can still access the system. You may need to consult with your customer about
    this, before you do it on your customers' systems. In addition, it is critical
    during penetration testing that you ensure all backdoors that are placed are properly
    documented so that they can be removed after the test.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在提升特权到目标机器之后，我们应该采取的下一步是创建一种机制来保持我们对目标机器的访问权限。因此，将来，如果您利用的漏洞被修补或关闭，您仍然可以访问系统。在执行此操作之前，您可能需要与客户进行咨询。此外，在渗透测试期间，确保所有放置的后门都得到适当记录是非常重要的，以便在测试结束后将其删除。
- en: 'Now, let''s take a look at some of the tools that can help us maintain our
    access on the target machines. The tools are categorized as follows:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一些可以帮助我们在目标机器上保持访问权限的工具。这些工具被分类如下：
- en: Operating system backdoors
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统后门
- en: Tunneling tools
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隧道工具
- en: Web backdoors
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web后门
- en: Operating-system backdoors
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作系统后门
- en: In simple terms, a backdoor is a method that allows us to maintain access to
    a target machine, without using normal authentication processes and remaining
    undetected. In this section, we will discuss several tools that can be used as
    backdoors to the operating system.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，后门是一种方法，允许我们在目标机器上保持访问权限，而不使用正常的身份验证过程并保持不被发现。在本节中，我们将讨论几种可以用作操作系统后门的工具。
- en: Cymothoa
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cymothoa
- en: '**Cymothoa** is a backdoor tool that allows you to inject its shellcode into
    an existing process. The reason for this is to disguise it as a regular process.
    The backdoor should be able to coexist with the injected process in order to not
    arouse the suspicion of the administrator. Injecting shellcode into the process
    also has another advantage; if the target system has security tools that only
    monitor the integrity of executable files but do not perform checks of the memory,
    the process''s backdoor will not be detected.'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cymothoa**是一个后门工具，允许你将其shellcode注入到现有进程中。这样做的原因是为了将其伪装成一个常规进程。后门应该能够与注入的进程共存，以免引起管理员的怀疑。将shellcode注入到进程中还有另一个优势；如果目标系统有安全工具，只监视可执行文件的完整性，而不检查内存，那么进程的后门就不会被检测到。'
- en: 'To run Cymothoa, just type the following command:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行Cymothoa，只需输入以下命令：
- en: '[PRE40]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: You will see the Cymothoa helper page. The mandatory options are the **Process
    ID** (**PID**), `-p`, to be injected and the shellcode number, `-s`.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到Cymothoa助手页面。强制选项是**进程ID**（**PID**），`-p`，要注入的和shellcode编号，`-s`。
- en: 'To determine the PID, you can use the `ps` command in the target machine. You
    can determine the shellcode number by using the `-S` (list available shellcode)
    option:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定PID，您可以在目标机器上使用`ps`命令。您可以使用`-S`（列出可用的shellcode）选项来确定shellcode编号：
- en: '![](img/788bb596-84bb-4923-88f6-da957a063948.png)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](img/788bb596-84bb-4923-88f6-da957a063948.png)'
- en: Once you have compromised the target, you can copy the Cymothoa binary file
    to the target machine to generate the backdoor.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你成功入侵目标，你可以将Cymothoa二进制文件复制到目标机器上生成后门。
- en: After the Cymothoa binary file is available in the target machine, you need
    to find out the process you want to inject and the shellcode type.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: Cymothoa二进制文件在目标机器上可用后，您需要找出要注入的进程和shellcode类型。
- en: 'To list the running process in a Linux system, we can use the `ps` command
    with the `-aux` options. The following screenshot displays the result of running
    that command. There are several columns available in the output, but for this
    purpose, we only need the following columns:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出Linux系统中运行的进程，我们可以使用带有`-aux`选项的`ps`命令。以下截图显示了运行该命令的结果。输出中有几列可用，但为了这个目的，我们只需要以下列：
- en: '`USER` (the first column)'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`用户`（第一列）'
- en: '`PID` (the second column)'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PID`（第二列）'
- en: '`COMMAND` (the eleventh  column)'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`命令`（第十一列）'
- en: '![](img/8796c99d-334c-4e5c-ae36-5be189131ed9.png)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8796c99d-334c-4e5c-ae36-5be189131ed9.png)'
- en: 'In this exercise, we will inject into the `2765` (`udevd`) PID and we will
    use payload number `1`. We need to set the port number for the payload using the `-y` option [port
    number `4444`]. The following is the Cymothoa command for this scenario:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将注入到`2765`（`udevd`）PID中，并且我们将使用载荷编号`1`。我们需要使用`-y`选项设置载荷的端口号[port number
    `4444`]。以下是这种情况下的Cymothoa命令：
- en: '[PRE41]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The following is the result of this command:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此命令的结果：
- en: '![](img/5b628fca-ba34-4dbf-8a66-b9e23e78a142.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b628fca-ba34-4dbf-8a66-b9e23e78a142.png)'
- en: 'Let''s try to log into our backdoor (port `4444`) from another machine by issuing
    the following command:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试从另一台机器登录到我们的后门（端口`4444`）上，发出以下命令：
- en: '[PRE42]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Here, `172.31.99.244` is the IP address of the target server.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`172.31.99.244`是目标服务器的IP地址。
- en: 'The following is the result:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是结果：
- en: '![](img/326cb464-6131-4344-9903-18ad5f0389f2.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](img/326cb464-6131-4344-9903-18ad5f0389f2.png)'
- en: We have successfully connected to our backdoor in the remote machine and we
    were able to issue several commands to the remote machine.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已成功连接到远程机器上的后门，并且能够向远程机器发出多个命令。
- en: Due to the backdoor being attached to a running process, you should be aware
    that this backdoor will not be available after the process is killed or when the
    remote machine has been rebooted. For this purpose, you need a persistent backdoor.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 由于后门附加到运行的进程，您应该意识到一旦进程被终止或远程机器被重新启动，此后门将不可用。出于这个目的，您需要一个持久的后门。
- en: The Meterpreter backdoor
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Meterpreter后门
- en: The Metasploit meterpreter has the `metsvc` backdoor, which will allow you to
    get the meterpreter shell at any time.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit meterpreter具有`metsvc`后门，这将允许您随时获取meterpreter shell。
- en: Be aware that the `metsvc` backdoor doesn't have authentication, so anyone who
    can access the backdoor's port will be able to use it.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`metsvc`后门没有身份验证，因此任何能够访问后门端口的人都可以使用它。
- en: For our example, we will use a Windows XP operating system as the victim machine,
    whose IP address is `192.168.2.21`; our attacking machine has the IP address of `192.168.2.22`.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的示例，我们将使用Windows XP操作系统作为受害机器，其IP地址为`192.168.2.21`；我们的攻击机器的IP地址为`192.168.2.22`。
- en: 'To enable the `metsvc` backdoor, you first need to exploit the system and get
    the meterpreter shell. After this, migrate the process using the meterpreter''s
    migrate command to other processes such as `explorer.exe (2)`, so you still have
    access to the system even though the victim closed your `payload (1)`:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用`metsvc`后门，您首先需要利用系统并获取meterpreter shell。之后，使用meterpreter的migrate命令将进程迁移到其他进程，如`explorer.exe（2）`，这样即使受害者关闭了您的`payload（1）`，您仍然可以访问系统：
- en: '![](img/d6bbeb7b-9637-4e6d-bf0c-5ebb6f69a646.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6bbeb7b-9637-4e6d-bf0c-5ebb6f69a646.png)'
- en: 'To install the `metsvc` service, we just need to type the following command:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装`metsvc`服务，我们只需要输入以下命令：
- en: '[PRE43]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The following is the result of that command:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该命令的结果：
- en: '![](img/2e4d9f20-1776-466f-99aa-af126cede739.png)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e4d9f20-1776-466f-99aa-af126cede739.png)'
- en: Now let's go to the victim machine. The backdoor is available at `C:Documents
    and SettingsAdministratorLocal SettingsTempPvtgZxEAL`.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们去受害者机器。后门位于`C:Documents and SettingsAdministratorLocal SettingsTempPvtgZxEAL`。
- en: You can see the `metsvc` EXE and DLL files there. Now, let's restart the victim
    machine to see whether the backdoor will work.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在那里看到`metsvc` EXE和DLL文件。现在，让我们重新启动受害者机器，看看后门是否能够工作。
- en: 'In the attacking machine, we start the multihandler with the `metsvc` payload
    using the following options, which are shown here:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在攻击机器上，我们使用以下选项启动multihandler，使用`metsvc`载荷，如下所示：
- en: '![](img/c96383e6-e320-41ac-bfbf-b6b83cb9a81b.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c96383e6-e320-41ac-bfbf-b6b83cb9a81b.png)'
- en: 'After all the options have been set, just type `execute` to run the attack:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 设置所有选项后，只需输入`execute`来运行攻击：
- en: '![](img/ef3c4727-2d7d-45a5-9b05-f9414916cf8f.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ef3c4727-2d7d-45a5-9b05-f9414916cf8f.png)'
- en: The attack was executed successfully; we now have the meterpreter session again.
    You can do anything with the meterpreter session.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击成功执行；我们现在再次拥有了meterpreter会话。您可以利用meterpreter会话做任何事情。
- en: 'To remove the `metsvc` service from the victim machine, you can run the following
    command from the meterpreter shell:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 要从受害者机器中删除`metsvc`服务，您可以从meterpreter shell运行以下命令：
- en: '[PRE44]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: After that, remove the `metsvc` files from the victim machine.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，从受害者机器中删除`metsvc`文件。
- en: Summary
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we attempted to escalate the current access level and compromise
    other accounts on the system with the help of many tools. In the next chapter,
    we will attack web applications and websites in order to exploit poorly-configured
    security checkpoints to gain access to the network and systems in the backend,
    enabling the exfil of data.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们尝试提升当前访问级别，并借助许多工具来 compromise 系统上的其他账户。在下一章中，我们将攻击网络应用程序和网站，以利用配置不当的安全检查点来获取对网络和后端系统的访问权限，从而实现数据的外泄。
