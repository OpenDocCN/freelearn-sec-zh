- en: Public Key Infrastructure-SSL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公钥基础设施-SSL
- en: In the previous chapter, we learned about network mapping tools and port scanning
    techniques used to detect the remote OS.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了用于检测远程操作系统的网络映射工具和端口扫描技术。
- en: In today's digital era, more and more internet users are growing web businesses.
    Small to large businesses are coming up with higher numbers of marketing tools
    such as ads, web services, emails, social media, digital content, online banking,
    online cell phone apps and, of course, online shopping. However, no one wants
    to store or send information on the internet until information security is guaranteed.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天的数字时代，越来越多的互联网用户正在开展网络业务。小型到大型企业推出了更多的营销工具，例如广告、网页服务、电子邮件、社交媒体、数字内容、网上银行、手机应用程序，当然还有在线购物。然而，直到信息安全得到保障，没有人愿意在互联网上存储或传输信息。
- en: '**Secure Socket Layer** (**SSL**) provides transport layer security for web-based
    applications and also provides end users or customers with a secure browsing experience.
    In this chapter we are going to discuss what SSL is, how it works and who needs
    it. We will also discuss the evolution of SSL, focusing on what you need to know
    in order to implement it. This will include looking at current threats and verification
    methods.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全套接字层**（**SSL**）为基于网页的应用程序提供传输层安全性，并为最终用户或客户提供安全的浏览体验。在本章中，我们将讨论什么是SSL，它如何工作以及谁需要它。我们还将讨论SSL的发展，重点介绍你需要知道的内容，以便实施它。这将包括了解当前的威胁和验证方法。'
- en: 'We will be covering the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: Foundation of SSL
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL的基础
- en: TLS versus SSL
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TLS与SSL
- en: '**Public Key Infrastructure** (**PKI**)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公钥基础设施**（**PKI**）'
- en: Attacks against PKI
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对PKI的攻击
- en: Microsoft Windows and IIS
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软Windows和IIS
- en: OpenSSL
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSSL
- en: SSL Management tools
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL管理工具
- en: Foundation of SSL
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL的基础
- en: In this section, we will learn the basics of SSL from the point of view of the
    end user, focusing on what users should know about SSL for the purpose of safe
    browsing. Having an SSL certificate stamp on your website is very important for
    security. In order to protect data from attackers, SSL technology is used to create
    an encrypted connection between an end user (typically a web browser) and the
    web server. SSL allows sensitive information such as credit card numbers, social
    security numbers, and login credentials to be transmitted securely in an encrypted
    format. Even if an attacker is able to intercept all of the data sent between
    a client and a web server, they still cannot read and use the information in encrypted
    data.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将从最终用户的角度学习SSL的基础知识，重点是用户在安全浏览时应该了解的SSL内容。在你的网站上拥有SSL证书标志对安全性至关重要。为了保护数据免受攻击者的侵害，SSL技术用于在最终用户（通常是一个网页浏览器）和网页服务器之间创建加密连接。SSL允许像信用卡号、社会安全号码和登录凭证等敏感信息以加密格式安全地传输。即使攻击者能够拦截客户端和网页服务器之间发送的所有数据，他们仍然无法读取和使用加密数据中的信息。
- en: 'To understand where SSL fits into a TCP/IP or OSI model, let''s take a look
    at the following diagram. For secure applications such as HTTPs, SSL/TLS comes
    in between the application and the Layer 4 transport layer:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解SSL在TCP/IP或OSI模型中的位置，让我们看看下图。对于像HTTPs这样的安全应用程序，SSL/TLS位于应用程序和第四层传输层之间：
- en: '![](Images/6c0b2db3-8277-4f42-8120-9a1134fbaf21.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6c0b2db3-8277-4f42-8120-9a1134fbaf21.png)'
- en: How do I know that SSL is working?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我怎么知道SSL是否正常工作？
- en: 'Before exchanging any information, it is very important for users to know that
    the area of a website they are on is safe and secure. Different browsers have
    different ways of showing SSL status but you can usually find it by checking the
    address bar at the top of the browser. Let''s take a look at a few browsers:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在交换任何信息之前，用户必须知道他们所访问的网站区域是否安全和受保护。不同的浏览器展示SSL状态的方式各不相同，但通常可以通过检查浏览器顶部的地址栏来查看SSL状态。让我们看一下几个浏览器：
- en: '**Microsoft Edge:**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**微软Edge：**'
- en: '![](Images/ea3bfa5e-9d0a-4da8-9839-f081ca88bfcf.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/ea3bfa5e-9d0a-4da8-9839-f081ca88bfcf.png)'
- en: '**Microsoft IE:**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**微软IE：**'
- en: '![](Images/56a38bc8-cf40-4807-b14d-b712c50df092.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/56a38bc8-cf40-4807-b14d-b712c50df092.png)'
- en: '**Google Chrome:**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**谷歌Chrome：**'
- en: '![](Images/efb1a16f-0d17-441b-9aeb-fc4901bd01ef.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/efb1a16f-0d17-441b-9aeb-fc4901bd01ef.png)'
- en: We can clearly observe that each is similar in the sense that they all have
    a green accent color, a padlock symbol and the information is displayed in the
    status bar, which tells you that this is a secure site.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以清楚地观察到，所有浏览器的共同点是它们都有绿色的突出显示色、锁头符号，并且信息显示在状态栏中，告诉你这是一个安全站点。
- en: Why no PadLock?
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么没有锁头？
- en: 'Browsers are smart enough nowadays. Let''s take a look at the alarming error
    message I was getting when accessing a banking website. In this situation, you
    should not share your information:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的浏览器足够智能。让我们来看一下我在访问银行网站时收到的警告错误信息。在这种情况下，你不应该分享你的信息：
- en: '![](Images/6ccfa3df-0b1d-407b-9768-9c2568b08f33.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6ccfa3df-0b1d-407b-9768-9c2568b08f33.png)'
- en: Here, you can clearly see that there is no green color and no padlock sign on
    the status bar. The browser also indicates a reason why this site is not secure.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以清楚地看到状态栏没有绿色和锁形图标，浏览器还会显示该网站不安全的原因。
- en: SSL certificate
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL证书
- en: An SSL certificate is a digital public document that binds a cryptographic key
    to the details of an owner or organization such as through domain name, host name
    or location. This verifies that a legitimate company owns the website which is
    being accessed.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: SSL证书是一个数字公共文档，将加密密钥与所有者或组织的详细信息绑定，如通过域名、主机名或位置。这验证了访问的网页确实属于合法公司所有。
- en: 'An SSL certificate has three specific functions:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: SSL证书有三个特定功能：
- en: Authentication
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份认证
- en: Verification
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证
- en: Data Encryption
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据加密
- en: In other words, the SSL certificate will have information about who has issued
    the certificate and to whom it is issued. This is not limited to web servers,
    it can also be used for end user machines, mobile phones and many more applications.
    Every SSL certificate will have an expiry date attached to it, which is similar
    to how an exam certificate cannot be used after its expiry date. Consequently,
    to extend the validity of the certificate, it must be renewed. An SSL certificate
    will also have a public key and digital signatures. As the name suggests, a public
    key is incorporated into the SSL certificate shared with web browsers and a digital
    certificate is a process that guarantees that the contents of a message have not
    been altered in transit.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，SSL证书将包含关于证书颁发者以及证书颁发对象的信息。这不仅限于网页服务器，它还可以用于终端用户机器、手机及更多应用程序。每个SSL证书都会附有一个到期日期，就像考试证书在到期后不能再使用一样。因此，要延长证书的有效期，必须进行续期。SSL证书还将包含公钥和数字签名。如其名称所示，公钥被纳入SSL证书中，并与网页浏览器共享；而数字证书是一种过程，保证消息的内容在传输过程中没有被篡改。
- en: The evolution of SSL and TLS
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL和TLS的演变
- en: '**Transport Layer Security** (**TLS**) protocol is the most widely used protocol
    on the internet today. SSL was originally developed by Netscape in 1993\. Let''s
    take a look at the history of the SSL protocol:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**传输层安全性**（**TLS**）协议是目前互联网上最广泛使用的协议。SSL最初由Netscape在1993年开发。让我们来看看SSL协议的历史：'
- en: '**SSL 1.0**: This was the first specification by Netscape in early 1994, which
    was never released for public use. This is because it was heavily criticized by
    the cryptographic community for the implementation of weak cryptographic algorithms.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL 1.0**：这是Netscape在1994年初发布的第一个规范，但从未公开发布。这是因为它在加密社区中遭到了广泛的批评，原因是其采用了弱加密算法。'
- en: '**SSL 2.0**: In early 1995, Netscape released SSL 2.0, an improved version
    of the original. However, this also did not succeed. In this version, message
    authentication used MD5, which most security-aware users had already moved away
    from. Handshake messages are not protected. This permits a MITM attack to trick
    the client into picking a weaker cipher suite than it would normally choose.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL 2.0**：1995年初，Netscape发布了SSL 2.0，这是原版的改进版本。然而，这个版本同样没有成功。在这个版本中，消息认证使用了MD5，大多数注重安全的用户已经不再使用该算法。握手消息没有受到保护，这使得MITM（中间人）攻击能够欺骗客户端选择比正常情况下更弱的密码套件。'
- en: '**SSL 3.0**:SSL version 3 was released by Netscape in 1996 to enhance SSL version
    2 and to support more algorithms. Many SSL version 2 platforms were already deployed
    at the time so there was no clean way to cut over to SSL version 3\. This forced
    SSL version 3 to allow the backward compatibility to SSL version 2\. Therefore,
    unless you definitely know which SSL versions the server supports, your SSL application
    should run in both SSL version 2 and SSL version 3 mode. This enables a client
    to communicate with both SSL version 2 and SSL version 3 servers. This also allows
    the server to have connections with SSL version 2 and SSL version 3 clients. However,
    if either the client or the server supports only SSL version 2, only that version
    will be used.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL 3.0**：SSL 版本 3 由 Netscape 于 1996 年发布，用以增强 SSL 版本 2 并支持更多的算法。当时，许多 SSL
    版本 2 平台已被部署，因此没有简单的方式可以切换到 SSL 版本 3。这迫使 SSL 版本 3 允许与 SSL 版本 2 的向后兼容性。因此，除非你明确知道服务器支持哪些
    SSL 版本，否则你的 SSL 应用程序应该在 SSL 版本 2 和 SSL 版本 3 模式下运行。这使得客户端可以与 SSL 版本 2 和 SSL 版本
    3 的服务器进行通信，也允许服务器与 SSL 版本 2 和 SSL 版本 3 的客户端建立连接。然而，如果客户端或服务器仅支持 SSL 版本 2，则仅会使用该版本。'
- en: SSL 3.0 was vulnerable to the POODLE attack, marking the end to the SSL 3.0
    era. This was discovered by the Google security team and disclosed to the public
    on October 14, 2014.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: SSL 3.0 易受 POODLE 攻击的影响，标志着 SSL 3.0 时代的结束。此漏洞由 Google 安全团队发现，并于 2014 年 10 月
    14 日公开披露。
- en: '**TLS 1.0**:The TLS protocol itself is based on the SSL 3.0 specification as
    published by Netscape in January 1999\. The differences between this protocol
    and SSL 3.0 are not dramatic, but they are significant enough that TLS 1.0 and
    SSL 3.0 do not inter-operate.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TLS 1.0**：TLS 协议本身基于 Netscape 于 1999 年 1 月发布的 SSL 3.0 规范。这个协议与 SSL 3.0 之间的差异并不显著，但足够重要，TLS
    1.0 和 SSL 3.0 无法互操作。'
- en: '**TLS 1.1, TLS 1.2 and TLS 1.3**: RFC 4346 was released in April 2006 and TLS
    1.1 is an update to TLS 1.0\. The changes that were brought about included replacing
    the implicit **initialization vector** (**IV**) with an explicit IV to protect
    against **Cipher block chaining** (**CBC**) attacks. In August 2008, TLS 1.2 was
    based on TLS 1.1.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TLS 1.1、TLS 1.2 和 TLS 1.3**：RFC 4346 于 2006 年 4 月发布，TLS 1.1 是 TLS 1.0 的更新版本。所做的更改包括用显式的
    **初始化向量**（**IV**）替代隐式的 IV，以防止 **密码块链式连接**（**CBC**）攻击。2008 年 8 月，TLS 1.2 基于 TLS
    1.1。'
- en: As of January 2018, TLS 1.3 is the latest protocol, though it is a working draft.
    Let's take a look on a browser (Internet Explorer) for current supported version
    of SSL and TLS.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 截至 2018 年 1 月，TLS 1.3 是最新的协议，尽管它仍是一个工作草案。让我们通过浏览器（Internet Explorer）查看当前支持的
    SSL 和 TLS 版本。
- en: Current Supported Standard
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当前支持的标准
- en: 'For Microsoft Internet Explorer, follow these steps: Tools|Internet Options|Advance.
    In the following screenshot, we can see that TLS 1.o to TLS 1.2 options are checked
    while SSL 3.0 is disabled or unchecked:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Microsoft Internet Explorer，按照以下步骤操作：工具|Internet 选项|高级。在以下截图中，我们可以看到 TLS
    1.0 到 TLS 1.2 的选项已被勾选，而 SSL 3.0 被禁用或未勾选：
- en: '![](Images/31de327e-4e4b-4f38-bc4c-c2a54eb4358a.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/31de327e-4e4b-4f38-bc4c-c2a54eb4358a.png)'
- en: Why hasn't TLS 1.3 been implemented yet?
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么 TLS 1.3 还没有实施？
- en: Such security upgrades are complex in nature. In a multi-vendor internet environment,
    you need to update both client and servers to support a new security standard.
    So far, no major browsers have TLS 1.3 enabled by default. It cannot be assumed
    that by a specific date, every server and end user device will support all new
    security standards. Furthermore, TLS 1.3 is not an extension but a major change
    with complete revamping. The way TLS or SSL version negotiation works is that
    an end user device sends the latest version of a supported protocol to a server,
    which responds with the latest version and chooses something which is supported
    by both of them.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这种安全升级本质上很复杂。在多厂商的互联网环境中，你需要更新客户端和服务器以支持新的安全标准。到目前为止，没有主流浏览器默认启用 TLS 1.3。不能假设在某个特定日期，所有服务器和终端设备都会支持所有新的安全标准。此外，TLS
    1.3 并不是一个扩展，而是一个完全重构的重大变化。TLS 或 SSL 版本协商的工作方式是，终端用户设备将最新支持的协议版本发送给服务器，服务器回应以其支持的最新版本，并选择双方都支持的版本。
- en: Time to say goodbye to SSL and early TLS
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是时候告别 SSL 和早期的 TLS 了。
- en: According to **PCI Data Security Standard** (**PCI DSS**) for safeguarding payment
    data, 30 June 2018 is the deadline for disabling SSL/early TLS and implementing
    a more secure encryption protocol of TLS 1.1 or higher. There are many vulnerabilities
    in SSL and early TLS that, left unaddressed, put organizations at risk of being
    breached. The widespread POODLE and BEAST exploits are just a couple of examples
    of how attackers have taken advantage of weaknesses in SSL and early TLS to compromise
    organizations.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 **PCI 数据安全标准** (**PCI DSS**) 保护支付数据，2018 年 6 月 30 日是禁用 SSL/早期 TLS 并实施更安全的
    TLS 1.1 或更高版本加密协议的最后期限。SSL 和早期 TLS 存在许多漏洞，如果不加以解决，将使组织面临被攻击的风险。广泛存在的 POODLE 和
    BEAST 漏洞就是攻击者利用 SSL 和早期 TLS 弱点入侵组织的两个例子。
- en: 'Visit the following website for more information:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 访问以下网站获取更多信息：
- en: '[https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls](https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls](https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls)'
- en: SSL certificate component
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL 证书组件
- en: Let's first discuss client side SSL, and then we will focus on server side.
    Your browser comes pre-installed with trusted CAs. Every time we visit a website,
    your browser verifies a trust chain and, during handshake, ends with one of the
    locally trusted root certificates.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们先讨论客户端 SSL，然后再关注服务器端。您的浏览器预装了受信任的 CA。每次访问网站时，浏览器都会验证信任链，并在握手过程中以本地受信根证书之一结束。
- en: Root certificate
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根证书
- en: 'Let''s take a look at Microsoft IE pre-installed CAs. You can check this in
    the browsing directory through Tools|Internet Options|Content|Certificates|Trusted
    Root Certification Authorities:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下微软 IE 预装的 CA。您可以通过工具|Internet 选项|内容|证书|受信根证书颁发机构来检查此内容：
- en: '![](Images/bb6072b8-53af-44a6-9cd8-7ceb08f7164b.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/bb6072b8-53af-44a6-9cd8-7ceb08f7164b.png)'
- en: Root certificates do have an expiry date, but they tend to have exceptionally
    long validity times (often between 10-20 years). As part of a browser or operating
    system update patch, you will get fresh root certificates before the old ones
    expire. Lacking a CAs root certificate, no browser would know whether to accept
    an SSL certificate issued by that CA. These SSL certificates are known as *single
    root* certificates.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 根证书确实有到期日期，但它们通常有非常长的有效期（通常在 10 至 20 年之间）。作为浏览器或操作系统更新补丁的一部分，您将在旧证书过期之前获得新的根证书。如果没有
    CA 的根证书，浏览器就无法知道是否接受该 CA 签发的 SSL 证书。这些 SSL 证书被称为 *单根* 证书。
- en: Intermediate certificate
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中间证书
- en: From a security point of view, the private key of the root certificate is critical
    and should be kept in the certificate provider's secure data center. Furthermore,
    the public key of the root certificate is given to browsers such as Microsoft
    and Google to be added to their list of trusted roots. Any compromise of the root
    certificate's key would deem the complete certificate chain built by the certificate
    provider as untrustworthy.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从安全角度来看，根证书的私钥至关重要，应保存在证书提供商的安全数据中心。此外，根证书的公钥会交给像微软和谷歌这样的浏览器，以便将其加入到它们的受信根列表中。如果根证书的密钥被泄露，证书提供商构建的整个证书链将被视为不可信。
- en: An intermediate certificate authority is an entity that is authorized to sign
    certificates. Logically, the root CA must sign all certificates. For security
    reasons, the intermediate CA signs certificates on behalf of the root CA, but
    intermediate certificates are signed by the root CA.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 中间证书颁发机构是被授权签发证书的实体。从逻辑上讲，根 CA 必须签署所有证书。出于安全原因，中间 CA 代表根 CA 签署证书，但中间证书仍然是由根
    CA 签署的。
- en: 'Let''s browse a few sites and look at an intermediate certificate. In this
    example, I have opened [www.google.com](http://www.google.com) in IE. I have mentioned
    that GeoTrust Global CA [Root] reflects root signing authority, Google Internet
    Authority G2 [Intermediate] reflects Intermediate Certificate and, finally, *.google.com
    [End Host] is the End host identity:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们浏览几个网站，查看一个中间证书。在这个例子中，我已经在 IE 中打开了 [www.google.com](http://www.google.com)。我提到过，GeoTrust
    Global CA [Root] 反映了根签名权限，Google Internet Authority G2 [Intermediate] 反映了中间证书，最后，*.google.com
    [End Host] 是终端主机身份：
- en: '![](Images/9dc68e93-18c8-4c5e-a63c-4fe81cd53ec5.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/9dc68e93-18c8-4c5e-a63c-4fe81cd53ec5.png)'
- en: 'Let''s take another example. This time we have [www.flipkart.com](http://www.flipkart.com).
    Here, there are two intermediate certificates and, by logic, there can be multiple
    since these are a subset of a main certificate. The confusing aspect comes in
    when you try to relate different classes and groups associated with a certificate:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再来看一个例子。这一次是[www.flipkart.com](http://www.flipkart.com)。这里有两个中间证书，并且按照逻辑，可能会有多个，因为它们是主证书的一个子集。困惑的地方在于当你试图将不同类别和与证书相关的群体进行关联时：
- en: '![](Images/471227e6-ab2b-4f45-b5df-474f11f63a05.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/471227e6-ab2b-4f45-b5df-474f11f63a05.png)'
- en: These classes are vendors defined but pretty much consistent across all top
    level certificate authorities. Let's take a look at the different possible classes
    of certificates that CAs will offer to their clients and what these classes mean
    to the client.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类别由供应商定义，但在所有顶级证书颁发机构中基本一致。我们来看看证书颁发机构（CA）向客户提供的不同类别的证书以及这些类别对客户意味着什么。
- en: SSL certificates classes
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL证书类别
- en: CA uses the concept of classes for different types of digital certificates,
    but these classes are not specified in any SSL/TLS RFC. Let's try to understand
    what different classes mean to SSL end users.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: CA使用类的概念来定义不同类型的数字证书，但这些类别并未在任何SSL/TLS RFC中明确说明。我们来尝试理解不同类别对SSL终端用户的意义。
- en: '**Class 1**: Class 1 certificates are delivered without any prior verification.
    This is also known as a **Domain Validation** (**DV**) certificate and relies
    on the `WHOIS` information database (you must prove you own the domain). A DV
    certificate is a low authentication product which does not guarantee the identity
    of the website''s owner nor the actual existence of the organization. This simply
    refers to two entities talking over an encrypted channel without knowing each
    other.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1类**：1类证书在没有任何验证的情况下交付。这也称为**域验证**（**DV**）证书，依赖于`WHOIS`信息数据库（你必须证明你拥有该域）。DV证书是低认证产品，不保证网站所有者的身份，也不保证组织的实际存在。它仅表示两个实体通过加密通道进行通信，而彼此互不认识。'
- en: 'Note: This can be heavily misused by attackers by launching phishing sites.
    Users assume that the website has a valid certificate issued by a major certificate
    authority.Never use low—authentication certificates for web based applications.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：攻击者可以通过发起钓鱼网站来严重滥用这一点。用户会假设网站拥有由主要证书颁发机构颁发的有效证书。永远不要对基于网页的应用程序使用低验证的证书。
- en: '**Class 2**: ForClass 2 certificates, (Medium Security Level) a background
    check is required which includes looking at the organization, business, or person
    who owns the domain, and confirming its existence. These are typically called
    the organization validated certs.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**2类**：对于2类证书（中等安全级别），需要进行背景调查，包括查看拥有该域名的组织、企业或个人，并确认其存在。这些通常被称为组织验证证书。'
- en: '**Class 3**: These are client certificates (Extended validation High Security)
    that are delivered after an audit. They check details of the organization, including
    verifying the physical address using multiple sources of truth and the certificate''s
    owner.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3类**：这些是客户端证书（扩展验证高安全性），在审核后交付。它们会检查组织的详细信息，包括通过多个可信来源验证物理地址和证书所有者。'
- en: '**Class 4**: Class 4 certificates are intended for online business transactions
    between companies.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**4类**：4类证书用于公司之间的在线商务交易。'
- en: '**Class 5**: Class 5 certificates are intended for private organizations or
    governmental security.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**5类**：5类证书是为私营组织或政府安全而设计的。'
- en: TLS versus SSL
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TLS与SSL
- en: Both TLS and SSL are security frameworks that provide data encryption and authentication
    for web based applications to ensure data protection. An SSL and TLS handshake
    is a mechanism for web based applications which takes place just after the TCP
    handshake occurs between a client and a server. The handshake doesn’t encrypt
    anything on its own, but actually negotiates for a shared secret and encryption
    type which both sides agree on.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: TLS和SSL都是为基于Web的应用程序提供数据加密和身份验证的安全框架，以确保数据保护。SSL和TLS握手是一个Web应用程序的机制，它发生在客户端和服务器之间的TCP握手之后。握手本身并不加密任何内容，而是实际协商一个共享的密钥和加密类型，双方达成一致。
- en: 'In the diagram below, we can see that just after the TCP and SSL handshake
    starts, a secure client sends a ''hello'' message to the server with a supported
    set of ciphers. The server responds with a top support cipher and also shares
    its certificate with the public key:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到，在 TCP 和 SSL 握手开始后，安全客户端向服务器发送了一个带有支持加密算法的“hello”消息。服务器响应一个支持的最高加密算法，并分享其证书及公钥：
- en: '![](Images/965fe4f0-54d0-4d40-8abb-87aa82f7b48a.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/965fe4f0-54d0-4d40-8abb-87aa82f7b48a.png)'
- en: 'Let''s take a look  at Wireshark to validate. A client sends all available
    cipher suits to a server marked in the black box:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下 Wireshark 来验证。客户端将所有可用的加密套件发送给服务器，标记在黑框中：
- en: '![](Images/6e79f3fe-d239-4476-8dc2-848b62bc17ad.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6e79f3fe-d239-4476-8dc2-848b62bc17ad.png)'
- en: 'In server hello, the sever sends the top cipher it can use for security, shown
    in the black box:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器的 hello 消息中，服务器会发送它能用于安全的最高加密算法，显示在黑框中：
- en: '![](Images/efd89ff1-fd94-4c5e-b584-4769ba637400.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/efd89ff1-fd94-4c5e-b584-4769ba637400.png)'
- en: Public Key Infrastructure
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公钥基础设施
- en: PKI refers to processes and technologies which provide a secure data exchange
    between two nodes over unsecured infrastructure. It uses private and public key
    pairs to achieve the underlying security service.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 公钥基础设施（PKI）是指提供两个节点在不安全的基础设施上进行安全数据交换的过程和技术。它通过使用私钥和公钥对来实现基础的安全服务。
- en: 'There are three types of cryptography algorithms:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种类型的加密算法：
- en: Symmetric
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对称
- en: Asymmetric
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非对称
- en: Hash function.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希函数。
- en: Symmetric encryption
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对称加密
- en: In symmetric encryption, a single key is used both to encrypt and decrypt traffic.
    Symmetric encryptions are fast, simple and easy to implement. However, some easy
    ciphers are vulnerable to brute-force attacks, making management a complex job.
    If the key is compromised, then the whole system becomes vulnerable. **Data encryption
    standard** (**DES**) and **Advance encryption standard** (**AES**) are symmetric
    systems, but AES is much more reliable than DES.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在对称加密中，使用一个密钥同时进行加密和解密。对称加密速度快，简单且易于实现。然而，一些简单的加密算法容易受到暴力破解攻击，使得管理变得复杂。如果密钥被泄露，整个系统都会变得脆弱。**数据加密标准**（**DES**）和**高级加密标准**（**AES**）是对称加密系统，但
    AES 比 DES 更加可靠。
- en: 'The symmetric encryption scheme has five elements:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对称加密方案有五个要素：
- en: '**Plain-text**: Refers to the original data that needs to be encrypted'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**明文**：指需要加密的原始数据。'
- en: '**Encryption Algorithm**: Refers to a combination of ciphers used to encrypt
    data'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加密算法**：指的是用于加密数据的密码组合。'
- en: '**Secure Key**: Refers to input in the encryption algorithm'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全密钥**：指的是加密算法中的输入。'
- en: '**Cipher-text**: Refers to output and format, which is dependent upon plain-text
    and key input'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密文**：指的是输出和格式，它取决于明文和密钥输入。'
- en: '**Decryption Algorithm**: This works in reverse of encryption - the cipher
    test becomes input data and the output becomes plain-text original input:'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**解密算法**：该算法与加密相反 - 密文变为输入数据，输出变为原始明文：'
- en: '![](Images/424a0987-21c0-4764-83a1-81d5d9c12e9c.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/424a0987-21c0-4764-83a1-81d5d9c12e9c.png)'
- en: Asymmetric encryption
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 非对称加密
- en: 'Asymmetrical encryption is also known as public key cryptography, which is
    a relatively secure method compared to symmetric encryption. In this method, two
    keys are used. One key is used for encryption and the other key is used for decryption. The
    public key is what its name suggests— public. It is made available to a browser
    when accessing the web server during the SSL handshake process. On the other hand,
    the private key must remain confidential and secure to its respective owner. Let''s
    assume that the client generates the secret, encrypts it using the server''s RSA
    public key and sends it to the server, which decrypts it using its private key. It
    is very important to protect the private key, because if the key is lost, then
    the system becomes void:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 非对称加密也称为公钥加密，相较于对称加密，这是一种相对安全的方法。在这种方法中，使用两个密钥，一个用于加密，另一个用于解密。公钥顾名思义是公开的。它会在
    SSL 握手过程中提供给浏览器。当访问 Web 服务器时，公钥会被使用。另一方面，私钥必须保持机密，并且对其拥有者保密。假设客户端生成了一个密钥，使用服务器的
    RSA 公钥加密后发送给服务器，服务器再用其私钥解密。保护私钥非常重要，因为如果密钥丢失，系统将无法使用：
- en: '![](Images/4a7d8759-5630-4215-9881-ed79cd5f5822.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/4a7d8759-5630-4215-9881-ed79cd5f5822.png)'
- en: 'Two of the most popular Asymmetric Encryption Algorithms are:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 两种最流行的非对称加密算法是：
- en: '**Rivest-Shamir-Adleman (RSA)**: This is the most widely used asymmetric algorithm.
    Let''s take a look at the SSL certificate to verify what algorithm is being used.
    Under certificate details, you can see that the Public Key value is RSA (2048)
    and this indicates RSA encryption:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rivest-Shamir-Adleman (RSA)**：这是最广泛使用的非对称加密算法。让我们查看 SSL 证书来验证正在使用的算法。在证书详情下，你可以看到公钥值是
    RSA (2048)，这表示使用 RSA 加密：'
- en: '![](Images/e98ec20c-6b8e-4ebf-8163-61589637591e.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/e98ec20c-6b8e-4ebf-8163-61589637591e.png)'
- en: '**Elliptic Curve Cryptography (ECC)**: In the second example, you can see that
    the Public Key value is ECC by viewing certificate details. ECC is gaining fame
    within the industry as an alternative to RSA:'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**椭圆曲线密码学 (ECC)**：在第二个示例中，你可以通过查看证书详情看到公钥值是 ECC。ECC 正在业界逐渐获得关注，作为 RSA 的替代方案：'
- en: '![](Images/ff82e4f8-f056-47c4-8003-09a8eebfbdad.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/ff82e4f8-f056-47c4-8003-09a8eebfbdad.png)'
- en: Hash function
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈希函数
- en: 'A hash is a number generated from the information inside a file, maybe a clear
    text file. The resulting string is a fixed length, and will vary widely with small
    variations in input. Hashing differs from encryption and does not use a process
    to encrypt and decrypt data. Hashing, however, is a one-way function that scrambles
    plain text to produce a unique message digest. With a properly designed algorithm,
    it works in a one-way direction, hence there is no way to reverse the hashing
    process to reveal the original password:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希是从文件内部信息生成的数字，可能是一个明文文件。生成的字符串长度固定，并且在输入发生微小变化时，输出结果会有很大不同。哈希与加密不同，它不使用加密和解密数据的过程。然而，哈希是一个单向函数，它将明文数据混淆成一个独特的消息摘要。通过合理设计的算法，哈希过程是单向的，因此无法反转哈希过程以揭示原始密码：
- en: '![](Images/828c9e62-8de9-476b-9cc9-be9589578067.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/828c9e62-8de9-476b-9cc9-be9589578067.png)'
- en: Let's understand the working.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们理解其工作原理。
- en: A user enters a password and a User ID in a browser and sends it to the authentication
    server over a secure channel. The server uses the User ID to look up the associated
    message digest. The password submitted by the user is then hashed with the same
    algorithm, and if the resulting message digest matches the one stored on the server,
    it is then authenticated.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 用户在浏览器中输入密码和用户 ID，并通过安全通道将其发送到认证服务器。服务器使用用户 ID 查找相关的消息摘要。用户提交的密码将使用相同的算法进行哈希处理，如果生成的消息摘要与服务器上存储的相匹配，则密码验证成功。
- en: 'Some of the popular Hashing Algorithms are:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一些流行的哈希算法包括：
- en: '**MD Family**: MD2, MD4 and MD5 (1989 -1992). All of these were 128 bit hash
    functions. MD5 is the most famous hash algorithm. MD6 also came into the industry
    but never gained popularity and was replaced by SHA3.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MD 家族**：MD2、MD4 和 MD5（1989 -1992）。这些都是 128 位的哈希函数。MD5 是最著名的哈希算法。MD6 也曾进入业界，但从未获得广泛使用，最终被
    SHA3 取代。'
- en: '**SHA Family**: There are four versions of SHA. This includes SHA0 (most vulnerable),
    SHA1 (most popular), SHA2 (widely deployed) and SHA3, which was introduced in
    2012.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SHA 家族**：SHA 有四个版本，包括 SHA0（最脆弱）、SHA1（最流行）、SHA2（广泛部署）和 SHA3，后者在 2012 年推出。'
- en: '**AES Family**: AES comes with three block ciphers. This includes AES-128,
    AES-192 and AES-256\. Each cipher encrypts and decrypts data in blocks of 128
    bits using cryptographic keys of 128, 192 and 256 bits.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AES 家族**：AES 有三个块密码，包括 AES-128、AES-192 和 AES-256。每个密码算法使用 128、192 和 256 位的加密密钥，以
    128 位块对数据进行加密和解密。'
- en: Attacks against PKI
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 针对 PKI 的攻击
- en: If you ask any security expert if PKI is 100% safe, the answer would be a big
    *NO *- there are a few concerns that are raised by security experts from time
    to time. I will begin by looking at the management of CA certificates and private
    keys. The internet is full of billions of websites and services, and so there
    are multiple certificate authorities. Rolling out new standards takes many years
    since this affects the whole security ecosystem.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你问任何安全专家 PKI 是否 100% 安全，答案将是一个大大的 *不*——安全专家时不时会提出一些问题和担忧。我将从 CA 证书和私钥的管理开始讨论。互联网充斥着数十亿的网站和服务，因此存在多个证书颁发机构。推出新标准需要多年时间，因为这会影响整个安全生态系统。
- en: As a system, PKI is nothing but mathematics. Once someone cracks the formula,
    a new formula will be introduced to the industry, which looks stronger and more
    secure. But for how long would this be the case?  Another major issue comes with
    securing private keys. The normal scenario is that you, as a client, generate
    your private key pair on your own machine, then send the CSR to the CA as part
    of a certificate request. In some cases, it is a good idea to let the CA generate
    the key pair and send it to you. In case of private key loss, your CA can provide
    you with a private key.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个系统，PKI不过是数学而已。一旦有人破解了这个公式，行业将推出一个新的公式，看起来更强大、更安全。但这能维持多久呢？另一个主要问题是私钥的安全。通常情况下，你作为客户端会在自己的机器上生成私钥对，然后将CSR发送给CA，作为证书请求的一部分。在某些情况下，允许CA生成密钥对并发送给你也是个不错的选择。如果私钥丢失，CA可以为你提供私钥。
- en: Let's take a look at a recent incident in which this happened. Thousands of
    customers received emails from the security firm DigiCert to say that their SSL
    certificates were being revoked because of a security compromise at Trustico. If
    the certificate is currently in an active state, this would mean that customers
    would begin receiving untrusted certificate warnings. According to an official
    statement, 23,000 private keys were compromised. This mainly affected customers
    who used Trustico's website to generate both their private/public keys and their
    CSRs.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下最近发生的一起事件。在这起事件中，成千上万的客户收到了来自安全公司DigiCert的邮件，告知他们的SSL证书由于Trustico的安全漏洞而被吊销。如果证书当前处于有效状态，这将意味着客户开始收到不受信任的证书警告。根据官方声明，23,000个私钥已被泄露。此事件主要影响了使用Trustico网站生成私钥/公钥和CSR的客户。
- en: You should never trust anyone with your private keys. They should be generated
    and kept safe only on the servers upon which you wish to install the certificates.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你永远不应当信任任何人你的私钥。私钥应该仅在你希望安装证书的服务器上生成并妥善保管。
- en: You can also visit [https://www.ssllabs.com/ssl-pulse. ](https://www.ssllabs.com/ssl-pulse)SSL
    pulse is a continuous and global dashboard for monitoring the quality of SSL/TLS
    support over time across 150,000 SSL and TLS-enabled websites, based on Alexa's
    list of the most popular sites in the world.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以访问[https://www.ssllabs.com/ssl-pulse.](https://www.ssllabs.com/ssl-pulse)
    SSL Pulse是一个持续更新的全球仪表盘，用于监控150,000个启用了SSL和TLS的网站的SSL/TLS支持质量，数据来源于Alexa世界上最受欢迎的网站列表。
- en: Microsoft Windows and IIS
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 微软Windows和IIS
- en: 'In this section, we will discuss SSL certificate installation with Microsoft
    IIS:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论使用Microsoft IIS安装SSL证书：
- en: Start IIS manager and double click server certificate.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动IIS管理器并双击服务器证书。
- en: 'Select Actions menu (on the right) and click on Create Certificate Request:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择操作菜单（右侧），点击创建证书请求：
- en: '![](Images/e9ffe029-73e3-418f-af6d-b6e2a9e7ee63.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/e9ffe029-73e3-418f-af6d-b6e2a9e7ee63.png)'
- en: 'This will open the Request Certificate wizard:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开请求证书向导：
- en: '![](Images/07d1cb3b-824c-4341-886d-492b71909e7f.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/07d1cb3b-824c-4341-886d-492b71909e7f.png)'
- en: 'In the Cryptographic Service Provider Properties window, leave both settings
    at their default values (Microsoft RSA SChannel and 2048) and then click Next:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在加密服务提供者属性窗口中，保持两个设置为默认值（Microsoft RSA SChannel和2048），然后点击下一步：
- en: '![](Images/911c39b8-3ca6-42d5-87a4-d8e482f82a21.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/911c39b8-3ca6-42d5-87a4-d8e482f82a21.png)'
- en: 'Enter a filename and location to save your CSR:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 输入一个文件名和保存CSR的位置：
- en: '![](Images/f0913621-55a0-48db-bf7c-6f3104afd9f1.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/f0913621-55a0-48db-bf7c-6f3104afd9f1.png)'
- en: 'You can now open the text file to check the CSR request. This file should go
    to CA to receive a signature:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以打开文本文件来检查CSR请求。此文件应提交给CA以接收签名：
- en: '![](Images/29f59753-a127-461e-9256-be755a3b3b44.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/29f59753-a127-461e-9256-be755a3b3b44.png)'
- en: OpenSSL
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenSSL
- en: OpenSSL is an open source project that consists of a cryptographic library and
    an SSL toolkit.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSSL是一个开源项目，包含一个加密库和一个SSL工具包。
- en: 'According to the project''s website itself, the OpenSSL Project is:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 根据该项目官网的描述，OpenSSL项目是：
- en: '"A collaborative effort to develop a robust, commercial-grade,'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: “一个合作努力，旨在开发一个强大、商业级的，
- en: full-featured, and Open Source toolkit implementing the **Secure Sockets Layer**
    (**SSL**) and **Transport Layer Security** (**TLS**) protocols as well as a full-strength
    general purpose cryptography library. The project is managed by a worldwide community
    of volunteers that use the Internet to communicate, plan, and develop the OpenSSL
    toolkit and its related documentation."
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 功能齐全且开源的工具包，实施 **安全套接层**（**SSL**）和 **传输层安全性**（**TLS**）协议，以及一个全功能的通用加密库。该项目由一个全球性的志愿者社区管理，社区成员通过互联网沟通、计划并开发
    OpenSSL 工具包及其相关文档。
- en: OpenSSL libraries can be used to create a certificate request (CSR), a self-signed
    certificate and even to issue a certificate as a CA. If you are running a small or
    corporate organization  and have the ability to import a root trust certificate
    to all computer systems, you can become your own CA and issue certificates yourself.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSSL 库可以用来创建证书请求（CSR）、自签名证书，甚至作为 CA 签发证书。如果你在运行一个小型或企业组织，并且能够将根信任证书导入所有计算机系统，你就可以成为自己的
    CA，并自行签发证书。
- en: 'For example, I will be using my Ubuntu server. This is an old release but of
    course you have the choice to upgrade it:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我将使用我的 Ubuntu 服务器。这是一个较旧的版本，但当然你可以选择升级它：
- en: '![](Images/249bedcf-beb7-48bb-afd9-cf43217ef3f2.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/249bedcf-beb7-48bb-afd9-cf43217ef3f2.png)'
- en: 'The latest version can be downloaded from the OpenSSL official website: [https://www.openssl.org/source/](https://www.openssl.org/source/):'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最新版本可以从 OpenSSL 官方网站下载：[https://www.openssl.org/source/](https://www.openssl.org/source/)：
- en: '![](Images/6b4fb64f-567e-41b2-80cb-31742111bdca.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6b4fb64f-567e-41b2-80cb-31742111bdca.png)'
- en: 'On the Ubuntu server, you can locate files under the `/usr/lib/ssl` path:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 服务器上，你可以在 `/usr/lib/ssl` 路径下找到文件：
- en: '![](Images/634f8b3f-abe4-4e49-b5b1-0dce18908b67.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/634f8b3f-abe4-4e49-b5b1-0dce18908b67.png)'
- en: 'Let''s take a look at how to generate a private key and the CSR:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何生成私钥和 CSR：
- en: 'First we will generate the private key. This will be an RSA 2048 key. However,
    you have the option to choose DSA or EC keys. The fields which ask for your email
    address, optional company name and challenge password can be left blank:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将生成私钥。这将是一个 RSA 2048 密钥。不过，你也可以选择 DSA 或 EC 密钥。要求提供电子邮件地址、可选的公司名称和挑战密码的字段可以留空：
- en: '![](Images/9ab59c42-d987-4d88-a90c-aa088fd86803.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/9ab59c42-d987-4d88-a90c-aa088fd86803.png)'
- en: 'In step two you will be asked for the information required for the certificate,
    organization, state, organization name, FQDN and email address:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二步中，你将被要求提供证书所需的信息，如组织、州、组织名称、FQDN 和电子邮件地址：
- en: '![](Images/c25e5fd3-089f-4429-ba9c-77989a573795.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/c25e5fd3-089f-4429-ba9c-77989a573795.png)'
- en: 'The private key and CSR can now be located in same folder:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，私钥和 CSR 可以在同一文件夹中找到：
- en: '![](Images/b7b608f0-0b53-49b6-b01c-9953083d527b.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/b7b608f0-0b53-49b6-b01c-9953083d527b.png)'
- en: This is just an overview. For more information, you can visit [https://www.openssl.org/](https://www.openssl.org/) or
    main pages.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个概述。欲了解更多信息，可以访问 [https://www.openssl.org/](https://www.openssl.org/) 或官方网站。
- en: SSL Management tools
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL 管理工具
- en: In my personal experience, the most common issue with managing certificates
    is the certificate expiry. For small organizations, manual tracking is possible,
    but this would be a strenuous exercise. It is better to have an automated framework
    to monitor the certificate expiry/renewal across all service assets.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我个人的经验，管理证书时最常见的问题是证书到期。对于小型组织来说，手动跟踪是可能的，但这会是一项繁重的工作。最好有一个自动化框架来监控所有服务资产的证书到期/续期。
- en: 'A few of the very famous SSL management tools include:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一些非常著名的 SSL 管理工具包括：
- en: '**SolarWinds SSL Certificate Management**'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SolarWinds SSL 证书管理**'
- en: '**Qualys CertView**'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Qualys CertView**'
- en: Summary
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter served as an introduction to understanding the world of PKI. The
    chapter began with the basic fundamentals of SSL from a user's point of view and
    discussed how SSL works for web-based applications. We also covered what functions
    and algorithms are available for us to generate a strong certificate. In addition,
    we have seen how certificates are generated for Windows IIS and looked at how
    to use the OpenSSL tool. This chapter also gave you an insight into the threats
    to PKI and how to safeguard against them for a better user experience.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 本章作为了解 PKI 世界的导论。章节从用户的角度出发，介绍了 SSL 的基本原理，并讨论了 SSL 如何用于基于 Web 的应用程序。我们还介绍了可以用来生成强证书的功能和算法。此外，我们还看到了如何为
    Windows IIS 生成证书，并了解了如何使用 OpenSSL 工具。本章还让你了解了 PKI 面临的威胁，以及如何采取防护措施来提升用户体验。
- en: In the next chapter, we will discuss firewall as a security appliance and explore
    its place in network infrastructure.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论防火墙作为一种安全设备，并探讨它在网络基础设施中的作用。
- en: Questions
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'The full form of SSL is:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SSL的全称是：
- en: Serial Session Layer
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 串行会话层
- en: Secure Socket Layer
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安全套接字层
- en: Session Secure Layer
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会话安全层
- en: Series Socket Layer
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系列套接字层
- en: What provides security at the transport layer?
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运输层提供安全性的是哪个？
- en: SSL
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SSL
- en: TLS
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: TLS
- en: either (1) or (2)
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: （1）或（2）
- en: both (1) and (2)
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: （1）和（2）两者都
- en: What is the standard TCP port for an SSL supported application?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SSL支持的应用程序的标准TCP端口是什么？
- en: '`420`'
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`420`'
- en: '`1032`'
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`1032`'
- en: '`443`'
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`443`'
- en: '`322`'
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`322`'
- en: How do you identify a secure site? Select all correct answers.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何识别一个安全网站？选择所有正确的答案。
- en: '`http`'
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`http`'
- en: '`https`'
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`https`'
- en: the open padlock
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开放的挂锁
- en: the locked padlock
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 锁定的挂锁
- en: Further reading
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'For more information, refer to the following links:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参考以下链接：
- en: '[https://tools.ietf.org/html/rfc6101](https://tools.ietf.org/html/rfc6101)'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://tools.ietf.org/html/rfc6101](https://tools.ietf.org/html/rfc6101)'
- en: '[https://tools.ietf.org/html/rfc5246](https://tools.ietf.org/html/rfc5246)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://tools.ietf.org/html/rfc5246](https://tools.ietf.org/html/rfc5246)'
- en: '[https://www.ssllabs.com/](https://www.ssllabs.com/)'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.ssllabs.com/](https://www.ssllabs.com/)'
- en: '[https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls](https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls](https://blog.pcisecuritystandards.org/are-you-ready-for-30-june-2018-sayin-goodbye-to-ssl-early-tls)'
- en: '[https://www.openssl.org/](https://www.openssl.org/)'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.openssl.org/](https://www.openssl.org/)'
