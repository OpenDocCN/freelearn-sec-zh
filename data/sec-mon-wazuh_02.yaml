- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Malware Detection Using Wazuh
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Wazuh 进行恶意软件检测
- en: '**Malware** is short for **malicious software**, and it is installed on a computer
    without the user’s permission. Attackers can use malware to encrypt, steal computer
    data, or spy on system activity. **Malware detection** is a process of monitoring
    and analyzing computer systems and networks for the presence of malicious software
    and files. Security products detect malware by matching the signature of known
    malware samples and also by monitoring anomalous behavior. However, some malware
    can evade detection using multiple techniques once it enters the system. Wazuh
    utilizes a wide range of approaches to address and counter those techniques to
    detect malicious files and suspicious activities. In this chapter, we will learn
    about different Wazuh modules to detect malicious files and integrate some third-party
    tools to enhance its detection capabilities.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**恶意软件** 是 **恶意软件**（malicious software）的缩写，指在未经过用户许可的情况下安装到计算机上的软件。攻击者可以利用恶意软件加密、窃取计算机数据或监控系统活动。**恶意软件检测**
    是监控和分析计算机系统及网络中是否存在恶意软件和文件的过程。安全产品通过匹配已知恶意软件样本的签名以及监控异常行为来检测恶意软件。然而，一些恶意软件在进入系统后使用多种技术规避检测。Wazuh
    通过多种方法应对和反制这些技术，检测恶意文件和可疑活动。在本章中，我们将学习如何使用不同的 Wazuh 模块来检测恶意文件，并集成一些第三方工具以增强其检测能力。'
- en: 'In this chapter, we’ll cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Types of malware
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意软件类型
- en: Wazuh’s capabilities for malware detection
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 的恶意软件检测能力
- en: Malware detection using **file integrity** **monitoring** (**FIM**)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **文件完整性** **监控** (**FIM**) 进行恶意软件检测
- en: '**VirusTotal** Integration'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VirusTotal** 集成'
- en: The CDB list
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CDB 列表
- en: Integrating Windows Defender logs
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成 Windows Defender 日志
- en: Integrating **System Monitor** (**Sysmon**) to detect fileless malware
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成 **系统监视器** (**Sysmon**) 以检测无文件恶意软件
- en: Note
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In this chapter, we will utilize a real malware sample for testing; please make
    sure your system is running in isolation or in a controlled environment.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用一个真实的恶意软件样本进行测试；请确保你的系统处于隔离状态或在受控环境中运行。
- en: Types of malware
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恶意软件类型
- en: 'Malware can take many forms, each with its own distinct capabilities and objectives.
    Some common types of malware include the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件有多种形式，每种形式都有其独特的功能和目的。以下是一些常见的恶意软件类型：
- en: '**Viruses**: Malware that attaches itself to legitimate files and programs
    and spreads by infecting other files. Viruses can cause damage by corrupting or
    destroying data. Examples include ILOVEYOU, Mydoom, and Anna Kournikova.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**病毒**：一种附着在合法文件和程序上的恶意软件，通过感染其他文件来传播。病毒通过破坏或销毁数据来造成损害。示例包括 ILOVEYOU、Mydoom
    和 Anna Kournikova。'
- en: '**Worms**: Malware that copies itself and spreads through networks by taking
    advantage of security holes to infect other connected systems. Examples include
    Blaster, Mydoom, and Slammer.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**蠕虫**：一种复制自身并通过网络传播的恶意软件，利用安全漏洞感染其他连接的系统。示例包括 Blaster、Mydoom 和 Slammer。'
- en: '**Trojans**: Malicious software that looks like legitimate files or programs.
    Once installed, Trojans can let cybercriminals in without permission, which can
    lead to data theft, espionage, or more damage. Examples are Zeus (designed to
    steal financial information such as credit or debit cards), SpyEye (targets online
    banking information), and Poison Ivy (controls the victim machine remotely).'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**木马**：看起来像合法文件或程序的恶意软件。安装后，木马可以让网络犯罪分子在未授权的情况下进入系统，从而可能导致数据盗窃、间谍活动或更多的破坏。示例有
    Zeus（设计用来窃取如信用卡或借记卡等金融信息）、SpyEye（针对网上银行信息）和 Poison Ivy（远程控制受害者的计算机）。'
- en: '**Ransomware**: Malware that encrypts the data of a victim, making it impossible
    to access until a ransom is paid to the attackers. Businesses and people can suffer
    a lot from ransomware attacks. Examples include Locky, WannaCry, and Ryuk.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**勒索软件**：一种加密受害者数据的恶意软件，直到向攻击者支付赎金后才能恢复访问。勒索软件攻击可能给企业和个人带来极大的损失。示例包括 Locky、WannaCry
    和 Ryuk。'
- en: '**Spyware**: Malware that is designed to covertly monitor and collect information
    from an infected system, including sensitive data, passwords, and browsing habits.
    Examples include CoolWebSearch (delivered through pop-up ads) and FinSpy (used
    by law enforcement agencies to capture screenshots and intercept communications).'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**间谍软件**：一种旨在秘密监控并收集感染系统信息的恶意软件，包括敏感数据、密码和浏览习惯。示例包括 CoolWebSearch（通过弹窗广告传播）和
    FinSpy（由执法机构使用，用于截取截图和拦截通讯）。'
- en: '**Rootkits**: Malware that gets privileged access to a system without being
    noticed. This lets attackers hide their presence and keep control of the system
    that has been compromised. Examples include Sony BMG Rootkit, Alureon, and ZeroAccess.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rootkits**：恶意软件能够在不被察觉的情况下获取系统的特权访问权限。这使得攻击者能够隐藏其存在，并保持对已被攻破系统的控制。示例包括 Sony
    BMG Rootkit、Alureon 和 ZeroAccess。'
- en: Malware is usually spread through different ways, such as phishing emails, malicious
    downloads, infected websites, and external devices such as USB drives that have
    been hacked. Cybercriminals are always changing their methods to avoid being caught
    and take advantage of new weaknesses. Now, let’s learn about some of the important
    Wazuh capabilities for malware detection.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件通常通过不同的方式传播，例如钓鱼邮件、恶意下载、感染的网站，以及已经被攻击的外部设备，如 USB 驱动器。网络犯罪分子总是在不断改变他们的方法，以避免被捕并利用新的弱点。现在，让我们了解一些
    Wazuh 在恶意软件检测方面的重要功能。
- en: Wazuh capabilities for malware detection
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wazuh 的恶意软件检测功能
- en: 'Wazuh offers several capabilities that contribute to its effectiveness in detecting
    malware. This is accomplished through the use of a combination of log analysis,
    intrusion detection, and threat intelligence. It also provides real-time alerting,
    event correlation, and the ability to execute custom scripts for automated reaction
    activities, making it a powerful tool for effectively identifying and responding
    to malware attacks. The following are some of Wazuh’s methods for malware detection:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 提供了几项功能，增强了其在检测恶意软件方面的效果。这是通过日志分析、入侵检测和威胁情报的结合来实现的。它还提供实时警报、事件关联和执行自定义脚本以进行自动响应活动的功能，使其成为有效识别和响应恶意软件攻击的强大工具。以下是
    Wazuh 在恶意软件检测方面的一些方法：
- en: '**Threat detection rules and FIM**: In this method, Wazuh utilizes its built-in
    capability to detect any critical file modification. Some of the capabilities
    are:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**威胁检测规则和 FIM**：在这种方法中，Wazuh 利用其内置功能来检测任何关键文件的修改。其一些功能包括：'
- en: Wazuh employs a set of predefined, continuously monitored threat detection principles.
    The purpose of these principles is to identify suspicious activities, events,
    and patterns that may indicate malware infections or security breaches.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 运用一套预定义、持续监控的威胁检测原则。其目的是识别可疑活动、事件和模式，这些可能表明恶意软件感染或安全漏洞。
- en: Wazuh’s malware detection relies heavily on FIM. It monitors modifications to
    files and directories, such as additions and deletions. Wazuh generates an alert
    when an unauthorized or unanticipated change occurs, which may indicate malware
    activity.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 的恶意软件检测主要依赖于 FIM（文件完整性监控）。它监控文件和目录的修改，例如添加和删除。当发生未经授权或意外的变化时，Wazuh 会生成警报，这可能表明恶意软件活动。
- en: '**Rootkit behavior detection**: Wazuh uses the rootcheck function to detect
    anomalies that might indicate the presence of malware in an endpoint:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rootkit 行为检测**：Wazuh 使用 rootcheck 功能来检测可能表明恶意软件存在的异常：'
- en: Rootkits are a form of malware that can conceal their presence and other malicious
    actions on a compromised system. Wazuh identifies rootkit-like activities using
    behavior-based detection techniques.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rootkits 是一种恶意软件，可以在被攻破的系统上隐藏其存在和其他恶意行为。Wazuh 使用基于行为的检测技术来识别类 Rootkit 的活动。
- en: Wazuh searches for suspicious system behavior, such as unauthorized privilege
    escalation, attempts to conceal files or processes, and other activities that
    are typically associated with rootkits. When such conduct is identified, an alert
    is triggered.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 寻找可疑的系统行为，例如未经授权的特权提升、试图隐藏文件或进程，以及通常与 Rootkit 相关的其他活动。当检测到此类行为时，会触发警报。
- en: '**VirusTotal integration**: Wazuh detects malicious files through integration
    with VirusTotal:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VirusTotal 集成**：Wazuh 通过与 VirusTotal 集成来检测恶意文件：'
- en: VirusTotal is a web-based service that scans files and URLs for potential hazards
    using multiple antivirus engines and threat intelligence sources. Wazuh incorporates
    VirusTotal to improve its malware detection capabilities.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VirusTotal 是一项基于网络的服务，利用多个杀毒引擎和威胁情报源扫描文件和网址，以检测潜在的危险。Wazuh 集成了 VirusTotal 来提升其恶意软件检测能力。
- en: When Wazuh encounters a file or URL that it suspects to be malicious, it can
    automatically submit the sample for analysis by VirusTotal. The result includes
    findings from multiple antivirus engines, which are then integrated into Wazuh’s
    alerting mechanism. If the file is identified as malicious by multiple engines,
    the confidence in the alert is increased.
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 Wazuh 遇到怀疑为恶意的文件或 URL 时，它可以自动将样本提交给 VirusTotal 进行分析。结果包括来自多个杀毒引擎的发现，然后这些信息将被整合到
    Wazuh 的警报机制中。如果多个引擎将文件识别为恶意文件，那么该警报的置信度就会增加。
- en: '**YARA integration**: Wazuh detects malware samples using YARA, which is an
    open-source tool that identifies and classifies malware artifacts based on their
    binary patterns:'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YARA 集成**：Wazuh 使用 YARA 检测恶意软件样本，YARA 是一个开源工具，通过其二进制模式识别和分类恶意软件痕迹：'
- en: YARA is a powerful tool that lets you write your own rules to find malware and
    certain patterns in files and processes. Wazuh works with YARA, so users can make
    their own rules for YARA to use to find malware that fits their needs.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: YARA 是一款强大的工具，可以让你编写自己的规则，以在文件和进程中查找恶意软件和特定模式。Wazuh 与 YARA 配合使用，因此用户可以编写自己的规则供
    YARA 使用，以便根据需求查找恶意软件。
- en: Security professionals can use YARA integration to create custom signatures
    that detect specific malware strains or behaviors that are not covered by the
    normal Wazuh rules. These custom rules can be added to the Wazuh ruleset and used
    to monitor the environment.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全专家可以利用 YARA 集成创建自定义签名，检测特定的恶意软件变种或行为，这些是正常 Wazuh 规则无法覆盖的。这些自定义规则可以添加到 Wazuh
    规则集中，并用于监控环境。
- en: Now that we understand some important malware detection capabilities of the
    Wazuh platform, we can start to learn about different use cases with Wazuh. In
    the next section, we will learn how to detect malware using the FIM module of
    Wazuh.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了 Wazuh 平台的一些重要恶意软件检测功能，我们可以开始学习 Wazuh 的不同使用案例。在下一部分，我们将学习如何使用 Wazuh
    的 FIM 模块检测恶意软件。
- en: Malware detection using FIM
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 FIM 进行恶意软件检测
- en: 'When a system gets compromised by malware, it may create new files or modify
    existing files, such as the following file types:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统被恶意软件入侵时，它可能会创建新文件或修改现有文件，例如以下文件类型：
- en: Executable files (`.exe`, `.dll`, `.bat`, and `.vbs`)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可执行文件（`.exe`、`.dll`、`.bat` 和 `.vbs`）
- en: Configuration files (`.cfg` and `.ini`)
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置文件（`.cfg` 和 `.ini`）
- en: Temporary files (`.tmp`)
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 临时文件（`.tmp`）
- en: Registry entries
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册表项
- en: Log files (`.log`)
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志文件（`.log`）
- en: Payload files
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有害负载文件
- en: Hidden files and directories
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏文件和目录
- en: Batch scripts (`.bat`)
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 批处理脚本（`.bat`）
- en: PowerShell (`.ps1`)
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell (`.ps1`)
- en: Specially crafted documents with a malicious payload (`.doc`, `.xls`, and `.pdf`)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特殊构造的包含恶意负载的文档（`.doc`、`.xls` 和 `.pdf`）
- en: Using this information, we can create an FIM rule in Wazuh to detect any file
    changes. However, we will get a high number of false positive alerts, too. To
    solve this problem, we can focus on a specific directory or folder. We will learn
    more in this section.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 利用这些信息，我们可以在 Wazuh 中创建 FIM 规则来检测任何文件的更改。然而，我们也会收到大量的误报警报。为了解决这个问题，我们可以专注于某个特定目录或文件夹。我们将在本节中进一步学习。
- en: In this section, we’ll learn how to create Wazuh rules to detect some of the
    common malware patterns.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何创建 Wazuh 规则来检测一些常见的恶意软件模式。
- en: 'We’ll cover the following use cases:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下使用案例：
- en: Configuring and testing FIM on an Ubuntu machine
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Ubuntu 机器上配置和测试 FIM
- en: Detecting suspicious files on a **PHP** server using the FIM module
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 FIM 模块在 **PHP** 服务器上检测可疑文件
- en: Configuring and testing FIM on an Ubuntu machine
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Ubuntu 机器上配置和测试 FIM
- en: FIM is a technology that monitors the integrity of system and application files.
    It safeguards sensitive data, application, and device files by routinely monitoring,
    scanning, and confirming their integrity. It works by detecting changes to mission-critical
    files in the network and as a result, it brings down the risk associated with
    data breaches.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: FIM 是一项技术，用于监控系统和应用程序文件的完整性。它通过定期监控、扫描并确认文件的完整性，保护敏感数据、应用程序和设备文件。它通过检测网络中关键任务文件的变化，从而减少与数据泄露相关的风险。
- en: The good news is that Wazuh has a built-in capability for FIM. This is possible
    because Wazuh uses an **Open Source HIDS Security** (**OSSEC**) agent. OSSEC is
    a free, open-source host-based intrusion detection system. When a user or process
    creates, modifies, or deletes a monitored file, the Wazuh FIM module initiates
    an alert. Let’s understand a file integrity check by setting up a FIM module on
    an Ubuntu machine. In order to test this use case, you need to follow these steps.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，Wazuh 内置了 FIM 功能。这得益于 Wazuh 使用 **开源 HIDS 安全**（**OSSEC**）代理。OSSEC 是一个免费的开源基于主机的入侵检测系统。当用户或进程创建、修改或删除受监控的文件时，Wazuh
    FIM 模块会触发警报。我们通过在 Ubuntu 机器上设置 FIM 模块来了解文件完整性检查。为了测试这个用例，您需要按照以下步骤操作。
- en: Requirements
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 要求
- en: 'To test the FIM use case, we would require the following:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 测试 FIM 用例时，我们需要以下内容：
- en: The Wazuh manager
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 管理器
- en: An Ubuntu machine (with the Wazuh agent installed)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台安装了 Wazuh 代理的 Ubuntu 机器
- en: Step 1 – Setting up the Wazuh agent on an Ubuntu machine
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1 – 在 Ubuntu 机器上设置 Wazuh 代理
- en: 'By default, the FIM module is enabled on the Wazuh agent. The configuration
    of the FIM module is present in the `<syscheck>` tag under the `ossec.conf` file
    located at `/var/ossec/etc`. We only need to add directories (to be monitored)
    under the `<syscheck>` block. The following configuration will monitor specified
    files and directories for any types of changes or modifications:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Wazuh 代理已启用 FIM 模块。FIM 模块的配置位于 `/var/ossec/etc` 路径下的 `ossec.conf` 文件中的
    `<syscheck>` 标签下。我们只需要在 `<syscheck>` 块中添加需要监控的目录。以下配置将监控指定的文件和目录，以便检测任何类型的更改或修改：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s break down the preceding configuration:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析一下前面的配置：
- en: The `<disabled>` tag is set to `no` to enable the syscheck module on Wazuh.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<disabled>` 标签被设置为 `no`，以启用 Wazuh 的 syscheck 模块。'
- en: The `<scan_on_start>` tag is set to `yes` to conduct the initial scan when the
    Wazuh agent shows up.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<scan_on_start>` 标签被设置为 `yes`，以便在 Wazuh 代理启动时进行初始扫描。'
- en: The `<frequency>` tag is set to `720` to conduct a file monitoring scan every
    720 minutes.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<frequency>` 标签设置为 `720`，以便每 720 分钟进行一次文件监控扫描。'
- en: The `<directories>` tags talk about all the directories to monitor. In this
    example, we’re monitoring important system directories such as `/etc`, `/bin`,
    `/sbin`, `/lib`, `/lib64`, `/usr/lib`, `/usr/lib64`, `/var/www`, `/var/log`, and
    `/var/named`.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<directories>` 标签指定了所有需要监控的目录。在这个例子中，我们监控的是重要的系统目录，如 `/etc`、`/bin`、`/sbin`、`/lib`、`/lib64`、`/usr/lib`、`/usr/lib64`、`/var/www`、`/var/log`
    和 `/var/named`。'
- en: The `<ignore>` tags indicate files or directories to ignore during the monitoring
    process. These are common system files that are not generally important for FIM
    analysis.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ignore>` 标签表示在监控过程中需要忽略的文件或目录。这些通常是系统文件，对于 FIM 分析来说并不重要。'
- en: Step 2 – Restart the Wazuh agent
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2 – 重启 Wazuh 代理
- en: 'For the configuration changes to take effect, we need to restart the `wazuh-agent`
    service as shown in the following:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使配置更改生效，我们需要重启 `wazuh-agent` 服务，如下所示：
- en: '[PRE1]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Step 3 – Visualizing the alerts
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 3 – 可视化警报
- en: 'To visualize the alerts, you can navigate to **Security Alerts** or the **Integrity
    Monitoring** module in the Wazuh dashboard and check for the file-added alerts
    as shown in the following figure:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看警报，您可以导航到 Wazuh 仪表板的 **安全警报** 或 **完整性监控** 模块，并查看如图所示的文件添加警报：
- en: '![Figure 2.1 – Visualizing the file-added alert on the Wazuh manager](img/B19549_2_01.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – 在 Wazuh 管理器中可视化文件添加警报](img/B19549_2_01.jpg)'
- en: Figure 2.1 – Visualizing the file-added alert on the Wazuh manager
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 在 Wazuh 管理器中可视化文件添加警报
- en: 'Let’s break this down:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来分解一下：
- en: '`decoder.name: syscheck_new_entry`: This field represents a new entry related
    to system checks or FIM that have been detected by the Wazuh agent. In this case,
    a file has been added.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoder.name: syscheck_new_entry`：此字段表示 Wazuh 代理检测到的与系统检查或 FIM 相关的新条目。在这种情况下，表示一个文件已被添加。'
- en: '`full.log: File ''/root/infectedfile.txt''added`: This represents that a new
    file called `infectedfile.txt` has been added.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full.log: File ''/root/infectedfile.txt'' added`：这表示一个名为 `infectedfile.txt`
    的新文件已被添加。'
- en: In this use case, we have learned to detect file changes in `/root` using the
    FIM module of Wazuh. In the next section, we will learn to detect possible malware
    in the PHP server.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个用例中，我们已经学会了如何使用 Wazuh 的 FIM 模块检测 `/root` 中的文件更改。在下一部分，我们将学习如何检测 PHP 服务器中的潜在恶意软件。
- en: Detecting suspicious files in the PHP server using the FIM module
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 FIM 模块检测 PHP 服务器中的可疑文件
- en: PHP is known for its simplicity, speed, and flexibility. Currently, there are
    more than 33 million websites that use PHP. The most common PHP file extensions
    are `.php`, `.phtml`, `.php3`, `.php4`, `.php5`, `.php7`, and `.phps`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 因其简单性、速度和灵活性而闻名。目前，有超过 3300万个网站使用 PHP。最常见的 PHP 文件扩展名包括 `.php`、`.phtml`、`.php3`、`.php4`、`.php5`、`.php7`
    和 `.phps`。
- en: These files are commonly found in the `/var/www/html/`, `/var/www/public_html/`,
    and root directory. In order to test possible malware using the FIM module in
    the PHP server, you need to follow these steps.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这些文件通常出现在 `/var/www/html/`、`/var/www/public_html/` 和根目录中。为了测试 PHP 服务器中的可能恶意软件，您需要按照以下步骤操作，使用
    FIM 模块。
- en: Requirements
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 要求
- en: 'To detect possible malicious files in the PHP server using Wazuh’s FIM module,
    you need the following system requirements:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Wazuh 的 FIM 模块检测 PHP 服务器中可能的恶意文件，您需要以下系统要求：
- en: The Wazuh manager
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 管理器
- en: An Ubuntu server, which should have the PHP server package and Wazuh agent installed
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台安装了 PHP 服务器包和 Wazuh 代理的 Ubuntu 服务器
- en: Creating a Wazuh rule
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Wazuh 规则
- en: 'We will create a Wazuh rule to detect file creation and modification on the
    PHP server. We will add different types of PHP file extensions under the `<field>`
    tag of the Wazuh rule. We will cover this use case along with testing and finally,
    we will visualize the alerts on the Wazuh manager:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个 Wazuh 规则，检测 PHP 服务器中的文件创建和修改。我们将在 Wazuh 规则的 `<field>` 标签下添加不同类型的 PHP
    文件扩展名。我们将通过此用例进行讲解并进行测试，最后，我们将在 Wazuh 管理器中可视化警报：
- en: Create a Wazuh rule to detect PHP file creation/modification
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建一个 Wazuh 规则来检测 PHP 文件的创建/修改
- en: 'To create a Wazuh rule, go to `custom_fim.xml` and add the following rule:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个 Wazuh 规则，请进入 `custom_fim.xml` 并添加以下规则：
- en: '[PRE2]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let’s break this code down:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来分析一下这段代码：
- en: '`<if_sid>554</if_sid>`: This tag represents a list of rule IDs. This rule will
    match when a rule ID on the list has previously been matched. In this case, rule
    ID `100500` will match when rule ID `554` gets triggered. Rule ID `554` is fired
    when a file is added, and rule ID `550` represents the change in the integrity
    checksum.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>554</if_sid>`：该标签表示规则 ID 列表。当列表中的规则 ID 被触发时，该规则将匹配。在此情况下，当规则 ID `554`
    被触发时，规则 ID `100500` 会匹配。规则 ID `554` 在文件添加时触发，规则 ID `550` 代表完整性校验和的变化。'
- en: '`<field name="file" type="pcre2">(?i).php$|.phtml$|.php3$|.php4$|.php5$|.phps$|.phar$|.asp$|.aspx$|.jsp$|.cshtml$|.vbhtml$</field>`:
    This is used as a requisite to trigger the rule. It will check for a match in
    the content of a file extracted by the decoder. In this case, the content is the
    list of all possible PHP file extensions.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="file" type="pcre2">(?i).php$|.phtml$|.php3$|.php4$|.php5$|.phps$|.phar$|.asp$|.aspx$|.jsp$|.cshtml$|.vbhtml$</field>`：这是触发规则所需的条件。它将在解码器提取的文件内容中检查是否有匹配项。在此情况下，内容是所有可能的
    PHP 文件扩展名列表。'
- en: Testing
  id: totrans-96
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 测试
- en: To test our FIM rule, we will add a new file called `antivirusupdate.php` in
    the root directory using the `touch` command as shown in the following figure.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试我们的 FIM 规则，我们将在根目录中使用 `touch` 命令添加一个名为 `antivirusupdate.php` 的新文件，如下图所示。
- en: '![Figure 2.2  – Creating  a blank file in the root directory](img/B19549_2_02.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – 在根目录中创建一个空文件](img/B19549_2_02.jpg)'
- en: Figure 2.2 – Creating a blank file in the root directory
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 在根目录中创建一个空文件
- en: Visualizing the alerts
  id: totrans-100
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 可视化警报
- en: To visualize the FIM alerts, navigate to the **Security Alerts** module of the
    Wazuh dashboard and you will find the alert as shown in the following figure.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要可视化 FIM 警报，请导航到 Wazuh 仪表板中的 **安全警报** 模块，您将看到如下图所示的警报。
- en: '![Figure 2.3 – Visualizing possible web shell alerts on the Wazuh manager](img/B19549_2_03.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 在 Wazuh 管理器中可视化可能的 web shell 警报](img/B19549_2_03.jpg)'
- en: Figure 2.3 – Visualizing possible web shell alerts on the Wazuh manager
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 在 Wazuh 管理器中可视化可能的 web shell 警报
- en: 'Let’s break this down:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来分析一下：
- en: '`full.log`: `File ''/root/antivirusupdate.php'' added Mode`: This represents
    the full logs on the Wazuh manager'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full.log`：`File ''/root/antivirusupdate.php'' added Mode`：这代表了 Wazuh 管理器中的完整日志'
- en: '`rule.description`: This represents the triggered rule ID. In this case, the
    rule ID is 100500'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rule.description`：这代表触发的规则 ID。在此情况下，规则 ID 是 100500'
- en: Note
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This FIM rule may lead to a lot of false positive alerts on the Wazuh dashboard.
    To overcome this situation, you can fine-tune your `<syscheck>` block by adding
    more `<``ignore>` tags.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 FIM 规则可能会导致 Wazuh 仪表板中出现大量的误报。为了解决这个问题，您可以通过添加更多 `<ignore>` 标签来微调 `<syscheck>`
    块。
- en: In the next section, we will detect malicious files using the CDB list in the
    Wazuh manager.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将使用 Wazuh 管理器中的 CDB 列表检测恶意文件。
- en: The CDB list
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CDB 列表
- en: 'The CDB list in Wazuh serves as a repository for distinct hashes or checksums
    of malicious and benign files. The Wazuh security platform can precisely compare
    the files’ cryptographic representations on a system and those kept in the CDB.
    The CDB list consists of lists of users, file hashes, IP addresses, domain names,
    and so on. In this section, we will cover the following topics:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 中的 CDB 列表作为恶意和良性文件的独特哈希值或校验和的存储库。Wazuh 安全平台可以精确地将系统中文件的加密表示与存储在 CDB 中的表示进行比较。CDB
    列表包括用户、文件哈希、IP 地址、域名等列表。在本节中，我们将涵盖以下主题：
- en: The workings of the CDB list
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CDB 列表的工作原理
- en: Setting up the Wazuh server
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Wazuh 服务器
- en: Configuring Windows endpoints
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Windows 终端
- en: Testing
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试
- en: Visualizing the alerts
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化警报
- en: The workings of the CDB list
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CDB 列表的工作原理
- en: 'You can save a list of users, file hashes, IP addresses, and domain names in
    a text file called a CDB list. A CDB list can have entries added in a `key:value`
    pair or a `key:only` format. Lists on CDBs can function as allow or deny lists.
    Wazuh processes the CDB list in the process mentioned here:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将用户、文件哈希、IP 地址和域名的列表保存在名为 CDB 列表的文本文件中。CDB 列表可以采用 `key:value` 配对或 `key:only`
    格式添加条目。CDB 上的列表可以作为允许列表或拒绝列表。Wazuh 按照此处提到的过程处理 CDB 列表：
- en: '**Hash generation**: CDB lists consist of hashes of both good and bad content
    such as IP addresses, malware hashes, and domain names. A hash is a unique fixed-length
    value generated based on the CDB list content.'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**哈希生成**：CDB 列表由良好和不良内容（如 IP 地址、恶意软件哈希和域名）的哈希组成。哈希是基于 CDB 列表内容生成的唯一固定长度值。'
- en: '**File comparison**: Wazuh computes file hashes during a system scan and compares
    them to the CDB entries.'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**文件比较**：Wazuh 在系统扫描过程中计算文件的哈希，并将其与 CDB 条目进行比较。'
- en: '**Identification**: Wazuh marks a file as possibly malicious if its hash matches
    a known malicious hash in the CDB.'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**识别**：如果文件的哈希值与 CDB 中已知的恶意哈希匹配，Wazuh 会标记该文件为可能是恶意的。'
- en: '**Alerts and reactions**: Based on the set policies, Wazuh has the ability
    to trigger alerts or responses upon detection.'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**警报和响应**：根据设定的策略，Wazuh 能够在检测到时触发警报或响应。'
- en: We’ve learned about how Wazuh processes the CDB list. Now, let’s go through
    the first practical use case of the CDB list wherein we will detect malicious
    IP addresses using the CDB list.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了 Wazuh 如何处理 CDB 列表。现在，让我们通过 CDB 列表的第一个实际用例，使用 CDB 列表来检测恶意 IP 地址。
- en: Setting up the Wazuh server
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Wazuh 服务器
- en: 'We need to set up our Wazuh server with the CDB list of malware hashes and
    create the required rules to trigger alerts when a file with a hash matches CDB
    malware hashes. We need to follow these steps to accomplish that:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要设置 Wazuh 服务器，并配置包含恶意软件哈希的 CDB 列表，同时创建必要的规则，以便当文件的哈希值与 CDB 恶意软件哈希匹配时触发警报。我们需要按照以下步骤完成此操作：
- en: '`/ossec/etc/lists` directory on the Wazuh server. To add a new CDB list for
    malware hashes, create a new file with the name `malware-hashes` using the following
    command:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/ossec/etc/lists` 目录，在 Wazuh 服务器上。要为恶意软件哈希添加新的 CDB 列表，请使用以下命令创建一个名为 `malware-hashes`
    的新文件：'
- en: '[PRE3]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: nano /var/ossec/etc/lists/malware-hashes
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: nano /var/ossec/etc/lists/malware-hashes
- en: '[PRE4]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure 2.4 – The CDB list of malware hashes](img/B19549_2_04.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – 恶意软件哈希的 CDB 列表](img/B19549_2_04.jpg)'
- en: Figure 2.4 – The CDB list of malware hashes
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 恶意软件哈希的 CDB 列表
- en: 'In the preceding image, we have the hash of three types of malware: `mirai`,
    `Xbash`, and `fanny`.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图像中，我们有三种类型恶意软件的哈希：`mirai`、`Xbash` 和 `fanny`。
- en: '`<ruleset>` block, you may add a reference to the CDB list in the `/var/ossec/etc/ossec.conf`
    Wazuh manager configuration file:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<ruleset>` 块中，您可以在 `/var/ossec/etc/ossec.conf` Wazuh 管理器配置文件中添加对 CDB 列表的引用：'
- en: '[PRE5]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`/var/ossec/etc/rules/local_rules.xml` file. When Wazuh finds a match between
    the MD5 hash of a recently created or updated file and a malware hash in the CDB
    list, this rule triggers. When an event occurs that indicates a newly created
    or modified file exists, rules `554` and `550` will be triggered:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/ossec/etc/rules/local_rules.xml` 文件。当 Wazuh 在最近创建或更新的文件的 MD5 哈希与 CDB
    列表中的恶意软件哈希匹配时，这条规则会触发。当发生表示有新创建或修改的文件的事件时，规则 `554` 和 `550` 将被触发：'
- en: '[PRE6]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Restart the manager**: We have to restart the Wazuh manager to apply the
    changes:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**重启管理器**：我们必须重启 Wazuh 管理器以应用更改：'
- en: '[PRE7]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We have successfully created a CDB list of malware hashes and security rules
    to compare it with the hash of each file in the Wazuh agent. In the next step,
    we will set up a Windows endpoint to detect any file changes so that it can trigger
    the CDB list to perform a comparison of file hashes.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已成功创建了一个包含恶意软件哈希值和安全规则的 CDB 列表，并与 Wazuh 代理中每个文件的哈希值进行比较。接下来的步骤是设置一个 Windows
    端点，检测任何文件更改，以便触发 CDB 列表进行文件哈希的比较。
- en: Configuring the Windows endpoint
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 Windows 端点
- en: 'We need to set up our Windows endpoint to detect file changes. We will configure
    `<syscheck>` to track file changes in the `Downloads` folder. You can choose any
    folder:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要设置 Windows 端点来检测文件更改。我们将配置 `<syscheck>` 以跟踪 `Downloads` 文件夹中的文件更改。你可以选择任何文件夹：
- en: '[PRE8]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Let’s break this code down:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下这段代码：
- en: '`check_all="yes"`: This ensures that Wazuh verifies every aspect of the file,
    such as its size, permissions, owner, last modification date, inode, and hash
    sums'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check_all="yes"`: 这确保 Wazuh 验证文件的各个方面，如文件大小、权限、所有者、最后修改日期、inode 和哈希值。'
- en: '`realtime="yes`”: Wazuh will perform real-time monitoring and trigger alerts'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`realtime="yes"`: Wazuh 将进行实时监控并触发警报。'
- en: 'Next, restart the Wazuh agent using the following command:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令重新启动 Wazuh 代理：
- en: '[PRE9]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Testing
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: Download the Mirai malware sample and put it in the area that the FIM module
    is monitoring to make sure everything is working right. In our case, it is a `Downloads`
    folder.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 Mirai 恶意软件样本并将其放入 FIM 模块监控的区域，以确保一切正常运行。在我们的案例中，这是一个`Downloads`文件夹。
- en: Note
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Be careful as these malicious files are harmful, so only use them for tests.
    Do not put them in places where they will be used.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 请小心，这些恶意文件是有害的，所以只能用于测试。不要将它们放置在会被使用的地方。
- en: 'Use the following PowerShell command to download the Mirai malware sample and
    store it in the `Downloads` folder:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下 PowerShell 命令下载 Mirai 恶意软件样本并将其存储在 `Downloads` 文件夹中：
- en: '[PRE10]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Visualizing the alerts
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化警报
- en: 'Wazuh immediately detects the malware sample. As you can see in the following
    figure, we have an alert with the `Known Malware File Hash is` `detected` description:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 立即检测到恶意软件样本。如以下图所示，我们收到了描述为 `已检测到已知恶意软件文件哈希` 的警报：
- en: '![Figure 2.5 – Know Malware File Hash is detected](img/B19549_2_05.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.5 – 检测到已知恶意软件文件哈希](img/B19549_2_05.jpg)'
- en: Figure 2.5 – Know Malware File Hash is detected
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – 检测到已知恶意软件文件哈希
- en: 'If you expand the alert, you can see the full log, rule ID, and other information
    as shown in the following figure:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你展开警报，你可以看到完整的日志、规则 ID 和其他信息，如下图所示：
- en: '![Figure 2.6 – Visualizing the Mirai malware alerts](img/B19549_2_06.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.6 – 可视化 Mirai 恶意软件警报](img/B19549_2_06.jpg)'
- en: Figure 2.6 – Visualizing the Mirai malware alerts
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – 可视化 Mirai 恶意软件警报
- en: 'Let’s break this down:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下：
- en: '`rule.description:` `Know Malware File Hash is detected`: This represents the
    description of rule ID 11002'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rule.description:` `已检测到已知恶意软件文件哈希`: 这是规则 ID 11002 的描述。'
- en: '`full.log:` `File ''c:\users\administrator\downloads\mirai'' modified`: This
    shows the full log information with the location, mode, attributes, and old/new
    modifications'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full.log:` `File ''c:\users\administrator\downloads\mirai'' modified`: 这显示了完整的日志信息，包括位置、模式、属性以及旧/新修改。'
- en: We have successfully tested the CDB list to detect known malware using file
    hashes stored in the form of `key:value` pairs within the CDB list. Moreover,
    there are some more use cases of the CDB list such as detecting unknown users
    and detecting blacklisted IP addresses. In the next section, we will learn to
    detect malware using the VirusTotal API.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已成功测试 CDB 列表，通过将已知恶意软件的文件哈希存储为 `key:value` 键值对的形式，从而进行检测。此外，CDB 列表还有其他用途，比如检测未知用户和黑名单
    IP 地址。在下一节中，我们将学习如何使用 VirusTotal API 检测恶意软件。
- en: VirusTotal integration
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VirusTotal 集成
- en: VirusTotal is a free online service that analyzes files and URLs to detect malware
    and other malicious content. It uses over 70 types of antivirus software and URL
    blocklisting engineers to provide detailed information about the submitted file,
    URL, or IP address. VirusTotal allows users to contribute their own findings and
    submit comments on files and URLs. These contributions can help improve the service’s
    accuracy and provide valuable insights to other users. VirusTotal provides an
    API with multiple paid plans. However, it also has a free plan where you can request
    four lookups per minute with a daily quote of 500 lookups.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: VirusTotal 是一个免费的在线服务，用于分析文件和 URL 以检测恶意软件和其他恶意内容。它使用超过 70 种类型的防病毒软件和 URL 屏蔽工程师来提供提交文件、URL
    或 IP 地址的详细信息。VirusTotal 允许用户贡献他们自己的发现并对文件和 URL 提交评论。这些贡献可以帮助提高服务的准确性，并为其他用户提供有价值的见解。VirusTotal
    提供了多个付费计划的 API，但它也有一个免费计划，允许每分钟请求四次查询，每天可查询 500 次。
- en: 'In this use case of malware detection, we will use a FIM module to monitor
    the changes and then trigger VirusTotal to scan the files in that directory. We
    will cover the following points:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在此恶意软件检测的应用案例中，我们将使用 FIM 模块来监控更改，然后触发 VirusTotal 扫描该目录中的文件。我们将涵盖以下几点：
- en: Set up a VirusTotal account
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 VirusTotal 账户
- en: Integrate VirusTotal with the Wazuh manager
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 VirusTotal 集成到 Wazuh 管理器
- en: Create a Wazuh rule on the Wazuh manager
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Wazuh 管理器上创建 Wazuh 规则
- en: Set up a FIM check on Ubuntu Server
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Ubuntu Server 上设置 FIM 检查
- en: Testing malware detection
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试恶意软件检测
- en: Set up VirusTotal account
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 VirusTotal 账户
- en: 'In order to set up the VirusTotal account, simply visit [VirusTotal.com](http://VirusTotal.com)
    and sign up. After signing up, go to your profile and click **API key**. Copy
    the API key safely as shown in the following figure:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置 VirusTotal 账户，只需访问 [VirusTotal.com](http://VirusTotal.com) 并注册账户。注册后，进入你的个人资料页面并点击
    **API 密钥**。将 API 密钥安全地复制，如下图所示：
- en: '![Figure 2.7 – Retrieving the VirusTotal API key](img/B19549_2_07.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.7 – 获取 VirusTotal API 密钥](img/B19549_2_07.jpg)'
- en: Figure 2.7 – Retrieving the VirusTotal API key
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – 获取 VirusTotal API 密钥
- en: Integrate VirusTotal with the Wazuh manager
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 VirusTotal 集成到 Wazuh 管理器
- en: 'Wazuh has prebuilt VirusTotal integration scripts located in `/var/ossec/integrations`.
    Now, all you have to do is to call this VirusTotal script in `/var/ossec/etc/ossec.conf`
    file, and to do that, add a `<integration>` tag as shown in the following:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 在 `/var/ossec/integrations` 目录中已经预构建了 VirusTotal 集成脚本。现在，你只需要在 `/var/ossec/etc/ossec.conf`
    文件中调用这个 VirusTotal 脚本，具体操作是在文件中添加一个 `<integration>` 标签，示例如下：
- en: '[PRE11]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Let’s break this code down:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来解析一下这段代码：
- en: '`<api_key>`: This represents the VirusTotal API key. You need to replace the
    `YOUR_VIRUS_TOTAL_API_KEY` text with your API key.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<api_key>`：这代表 VirusTotal 的 API 密钥。你需要将 `YOUR_VIRUS_TOTAL_API_KEY` 文本替换为你的
    API 密钥。'
- en: '`<rule_id>100200,100201</rule_id>`: This represents the rule that triggers
    the VirusTotal inspection. In this case, we have rule ID 100200 and `100201`.
    We haven’t created these rules yet; we will write these rules to detect file changes
    in a specific folder of the endpoint. This will be covered in the next step.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<rule_id>100200,100201</rule_id>`：这表示触发 VirusTotal 检查的规则。在此案例中，我们有规则 ID `100200`
    和 `100201`。我们还没有创建这些规则；我们将编写这些规则以检测端点中特定文件夹的文件变化。这将在下一步中进行介绍。'
- en: Create a Wazuh rule on the Wazuh manager
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Wazuh 管理器上创建 Wazuh 规则
- en: 'Now, we want to trigger VirusTotal scanning only when any file is changed,
    added, or deleted to avoid tons of false positive alerts. We will create an FIM
    rule with an ID of `100200` and `100201` in the `local_rule.xml` file located
    at `/var/ossec/etc/rules` in the Wazuh manager. The Wazuh rules can be written
    as shown in the following:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们希望仅当文件发生更改、添加或删除时才触发 VirusTotal 扫描，以避免大量的误报警报。我们将在 Wazuh 管理器中位于 `/var/ossec/etc/rules`
    的 `local_rule.xml` 文件中创建 ID 为 `100200` 和 `100201` 的 FIM 规则。Wazuh 规则可以按照以下方式编写：
- en: '[PRE12]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Let’s break this down:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来解析一下：
- en: '`<if_sid>550</if_sid>`: This specifies a condition that triggers this rule.
    It’s triggered when the event ID (SID) `550` occurs. The Wazuh rule `550` indicates
    that the integrity checksum changed.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>550</if_sid>`：这是一个触发此规则的条件。当事件 ID (SID) `550` 发生时，这条规则会被触发。Wazuh 规则
    `550` 表示完整性校验和发生了变化。'
- en: '`<if_sid>554</if_sid>`: This rule triggers when the event ID `554` occurs.
    The Wazuh rule indicates that a file has been added to the system.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>554</if_sid>`：当事件 ID `554` 发生时，这条规则会触发。Wazuh 规则表明有一个文件被添加到系统中。'
- en: Set up an FIM check on Ubuntu Server
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Ubuntu Server 上设置 FIM 检查
- en: 'We want the Wazuh agent to first detect any file changes in the `/root` directory
    and this will trigger the Wazuh rule ID `100200` and `100201`. To enable syscheck
    to detect any file changes in the `/root` directory, we need to make the following
    changes:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望 Wazuh 代理首先检测到 `/root` 目录中的任何文件更改，这将触发 Wazuh 规则 ID `100200` 和 `100201`。为了启用
    syscheck 检测 `/root` 目录中的任何文件更改，我们需要进行以下更改：
- en: '`<syscheck>` block in the `/var/ossec/etc/ossec.conf` Wazuh agent configuration
    file. Make sure that `<disabled>` is set to `no`. This enables the Wazuh FIM to
    monitor directory changes.'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/ossec/etc/ossec.conf` Wazuh 代理配置文件中的 `<syscheck>` 块。确保 `<disabled>` 设置为
    `no`。这会启用 Wazuh FIM 监控目录更改。'
- en: '`/root` directory to enable an FIM check of `<directories check_all="yes"`
    `report_changes="yes" realtime="yes">/root</directories>`.'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/root` 目录以启用对 `<directories check_all="yes"` `report_changes="yes" realtime="yes">/root</directories>`
    的 FIM 检查。'
- en: '`ossec.conf` file, we need to restart the Wazuh agent with the following command:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `ossec.conf` 文件中，我们需要使用以下命令重新启动 Wazuh 代理：
- en: '[PRE13]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This completes the Wazuh agent restart process. In the next step, we will test
    VirusTotal using a sample malware file.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了 Wazuh 代理重启过程。在下一步中，我们将使用示例恶意软件文件测试 VirusTotal。
- en: Testing malware detection
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试恶意软件检测
- en: 'To test malware detection using VirusTotal, we will use the **European Institute
    for Computer Antivirus Research** (**EICAR**) test file. An EICAR test file is
    used to test the response of antivirus software and it is built by the European
    Institute for Computer Antivirus Research (hence, EICAR) and the **Computer Antivirus
    Research Organization** (**CARO**). You can download the test file from their
    official website: [https://www.eicar.org/download-anti-malware-testfile/](https://www.eicar.org/download-anti-malware-testfile/).'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 VirusTotal 测试恶意软件检测，我们将使用 **欧洲计算机杀毒研究所**（**EICAR**）测试文件。EICAR 测试文件用于测试杀毒软件的响应，由欧洲计算机杀毒研究所（因此称为
    EICAR）和 **计算机杀毒研究组织**（**CARO**）开发。您可以从他们的官方网站下载测试文件：[https://www.eicar.org/download-anti-malware-testfile/](https://www.eicar.org/download-anti-malware-testfile/)。
- en: Note
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you are testing this for a Windows machine, you need to disable the **Enhanced
    security** option on Google Chrome and **Real-time protection** on Windows Defender
    to allow the download.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在为 Windows 机器进行测试，您需要禁用 Google Chrome 上的 **增强安全性** 选项以及 Windows Defender
    上的 **实时保护**，以允许下载。
- en: Once the EICAR file is downloaded, move it to the root directory.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦下载了 EICAR 文件，将其移动到根目录。
- en: Visualizing the alerts
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化警报
- en: To view the alerts, navigate to the **Security Alerts** module of the Wazuh
    dashboard and you should find the alerts as shown in the following figure.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看警报，请导航到 Wazuh 仪表盘的 **安全警报** 模块，您应该能看到如图所示的警报。
- en: '![Figure 2.8 – Visualizing the VirusTotal alert on the Wazuh dashboard](img/B19549_2_08.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.8 – 在 Wazuh 仪表盘上可视化 VirusTotal 警报](img/B19549_2_08.jpg)'
- en: Figure 2.8 – Visualizing the VirusTotal alert on the Wazuh dashboard
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – 在 Wazuh 仪表盘上可视化 VirusTotal 警报
- en: 'Let’s break this down:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来分解一下：
- en: '`data.integration:` `virustotal`: This represents the third-party integration
    used in Wazuh. In this case, it is VirusTotal.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data.integration:` `virustotal`：这表示 Wazuh 中使用的第三方集成。在本例中，它是 VirusTotal。'
- en: '`data.virustotal.permalink`: This represents the URL of the VirusTotal detection
    page.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data.virustotal.permalink`：这表示 VirusTotal 检测页面的 URL。'
- en: We have successfully detected an EICAR file using VirusTotal and Wazuh. In the
    next section, we will learn how to integrate Windows Defender (an antivirus solution)
    with the Wazuh platform.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功通过 VirusTotal 和 Wazuh 检测到一个 EICAR 文件。在接下来的部分，我们将学习如何将 Windows Defender（一种杀毒解决方案）与
    Wazuh 平台集成。
- en: Integrating Windows Defender logs
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成 Windows Defender 日志
- en: 'Windows Defender is an antivirus software module of Microsoft Windows. As per
    the *2023 Antivirus Market Report*, Windows Defender is the most common free antivirus
    product for PC users, with around 40% of the market share of free antivirus software.
    For more information on this, you can check the following link: [https://www.security.org/antivirus/antivirus-consumer-report-annual/](https://www.security.org/antivirus/antivirus-consumer-report-annual/).
    Additionally, Microsoft also offers endpoint security solutions for enterprises
    called Windows Defender for Endpoint. This makes us put more attention on integrating
    Windows Defender with Wazuh. By default, Wazuh cannot read the Windows Defender
    logs. Hence, it is important for us to put extra effort into making it possible.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Defender 是微软 Windows 的一款杀毒软件模块。根据*2023 年杀毒软件市场报告*，Windows Defender 是
    PC 用户最常见的免费杀毒产品，占免费杀毒软件市场份额的约 40%。有关更多信息，请查看以下链接：[https://www.security.org/antivirus/antivirus-consumer-report-annual/](https://www.security.org/antivirus/antivirus-consumer-report-annual/)。此外，微软还为企业提供名为
    Windows Defender for Endpoint 的终端安全解决方案。这使得我们更加关注将 Windows Defender 与 Wazuh 集成。默认情况下，Wazuh
    无法读取 Windows Defender 日志。因此，我们需要额外的努力来实现这一功能。
- en: 'In this section, we’ll learn to push Windows Defender logs to the Wazuh manager.
    You will learn about the following:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何将 Windows Defender 日志推送到 Wazuh 管理器。你将了解以下内容：
- en: How to get started with Windows Defender logs
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何开始使用 Windows Defender 日志
- en: Setting up the Wazuh agent to collect Windows Defender logs
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Wazuh 代理收集 Windows Defender 日志
- en: Testing for malware detection
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意软件检测测试
- en: Visualizing the alerts
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化警报
- en: Getting started with Windows Defender logs
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用 Windows Defender 日志
- en: Windows Defender logs help SOC analysts understand the security status of endpoints,
    identify potential cyber threats, and also help them investigate any security
    incidents. Windows Defender logs encompass several pieces of information such
    as scan activities, threat detection, updates, quarantine, remediation, firewall
    and network activities, and real-time protection.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Defender 日志帮助 SOC 分析员了解终端的安全状态，识别潜在的网络威胁，并帮助他们调查任何安全事件。Windows Defender
    日志包含多个信息点，例如扫描活动、威胁检测、更新、隔离、修复、防火墙和网络活动以及实时保护。
- en: Let’s first understand where the Defender logs are stored. Well, You can view
    the logs in **Event Viewer**.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们了解一下 Defender 日志存储的位置。你可以在**事件查看器**中查看日志。
- en: Go to **Event Viewer** | **Applications and Services Logs** | **Microsoft**
    | **Windows** | **Windows Defender** | **Operational**.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 转到 **事件查看器** | **应用程序和服务日志** | **Microsoft** | **Windows** | **Windows Defender**
    | **操作**。
- en: The general tab will give you information about the scan type and user information.
    However, the **Details** tab will give you complete information on that threat
    detection.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 一般标签将为你提供有关扫描类型和用户信息的信息。然而，**详细信息** 标签将为你提供该威胁检测的完整信息。
- en: '![Figure 2.9 – Visualizing Windows Event Viewer](img/B19549_2_09.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9 – 可视化 Windows 事件查看器](img/B19549_2_09.jpg)'
- en: Figure 2.9 – Visualizing Windows Event Viewer
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9 – 可视化 Windows 事件查看器
- en: 'To get more detailed information about this event, you can navigate to the
    **Details** tab shown in the following figure:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关此事件的更多详细信息，可以导航到下图所示的 **详细信息** 标签：
- en: '![Figure 2.10 – Details of the Windows Defender event](img/B19549_2_10.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.10 – Windows Defender 事件的详细信息](img/B19549_2_10.jpg)'
- en: Figure 2.10 – Details of the Windows Defender event
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10 – Windows Defender 事件的详细信息
- en: Setting up the Wazuh agent to collect Windows Defender logs
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 Wazuh 代理收集 Windows Defender 日志
- en: We need to push the Defender logs in the `ossec.conf` file of the Wazuh agent.
    To collect Windows Defender logs, you must configure the Wazuh agent using the
    Wazuh manager or locally using the `ossec.conf` agent file located at `C:\Program`
    `Files (x86)\ossec-agent`.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在 Wazuh 代理的 `ossec.conf` 文件中推送 Defender 日志。要收集 Windows Defender 日志，必须使用
    Wazuh 管理器配置 Wazuh 代理，或者在位于 `C:\Program` `Files (x86)\ossec-agent` 的 `ossec.conf`
    代理文件中进行本地配置。
- en: In a large network, manually going to each Wazuh agent and making the changes
    in each agent is a cumbersome task. Wazuh helps us with the `agent.conf` file,
    which pushes the configuration to specific agent groups.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在大型网络中，手动进入每个 Wazuh 代理并进行更改是一个繁琐的任务。Wazuh 通过 `agent.conf` 文件帮助我们，允许将配置推送到特定的代理组。
- en: 'Login to the Wazuh dashboard, go to `<localfile>` tag in the `agent.conf` file
    as shown in the following:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到 Wazuh 仪表板，在 `agent.conf` 文件中找到 `<localfile>` 标签，如下所示：
- en: '[PRE14]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Let’s break this down:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下：
- en: '`<localfile>`: This tag is used to define the local log file or file path that
    the Wazuh agent should monitor.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<localfile>`：此标签用于定义 Wazuh 代理应监控的本地日志文件或文件路径。'
- en: '`<location> Microsoft-Windows-Windows Defender/Operational</location>`: This
    represents the location or path of the log file that Wazuh should monitor. In
    this case, it is monitoring the `Microsoft-Windows-Windows Defender/Operational`
    log location.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<location> Microsoft-Windows-Windows Defender/Operational</location>`：这表示
    Wazuh 应该监控的日志文件的位置或路径。在这种情况下，它正在监控 `Microsoft-Windows-Windows Defender/Operational`
    日志位置。'
- en: '`<log_format>`: This tag specifies the format.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<log_format>`：此标签指定日志格式。'
- en: 'Now, for these changes to take effect, you need to restart the Wazuh agent
    using the following command:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了使这些更改生效，你需要使用以下命令重新启动 Wazuh 代理：
- en: '[PRE15]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Note:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: To verify the location of Windows Defender events, you can also navigate to
    the `Microsoft-Windows-Windows Defender/Operational` location under **Event Viewer**
    and check for the log name as shown in the following figure.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证 Windows Defender 事件的位置，你还可以在 **事件查看器** 中导航到 `Microsoft-Windows-Windows
    Defender/Operational` 位置，并检查下图所示的日志名称。
- en: '![Figure 2.11 – Checking Log Name for Windows Defender events](img/B19549_2_11.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.11 – 检查 Windows Defender 事件的日志名称](img/B19549_2_11.jpg)'
- en: Figure 2.11 – Checking Log Name for Windows Defender events
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11 – 检查 Windows Defender 事件的日志名称
- en: Testing for malware detection
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试恶意软件检测
- en: 'To test the malware detection using VirusTotal, we will use an EICAR test file.
    You can download the EICAR test file from their official website: [https://www.eicar.org/download-anti-malware-testfile/](https://www.eicar.org/download-anti-malware-testfile/).'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 VirusTotal 测试恶意软件检测，我们将使用 EICAR 测试文件。你可以从他们的官方网站下载 EICAR 测试文件：[https://www.eicar.org/download-anti-malware-testfile/](https://www.eicar.org/download-anti-malware-testfile/)。
- en: Note
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You need to disable the **Enhanced security** option on Google Chrome and **Real-time
    protection** on Windows Defender to allow the download.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要禁用 Google Chrome 上的 **增强安全性** 选项以及 Windows Defender 上的 **实时保护**，以允许下载。
- en: Visualizing the alerts
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化警报
- en: 'To visualize the alerts related to the EICAR test file, you can navigate to
    **Security Alerts** in the Wazuh manager and check for the Windows Defender alerts
    as shown in the following figure:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 为了可视化与 EICAR 测试文件相关的警报，你可以在 Wazuh 管理器中导航到 **安全警报**，并检查下图所示的 Windows Defender
    警报：
- en: '![Figure 2.12 – Visualizing Windows Defender alerts in the Wazuh manager](img/B19549_2_12.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.12 – 在 Wazuh 管理器中可视化 Windows Defender 警报](img/B19549_2_12.jpg)'
- en: Figure 2.12 – Visualizing Windows Defender alerts in the Wazuh manager
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – 在 Wazuh 管理器中可视化 Windows Defender 警报
- en: 'Let’s break this down:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步分析：
- en: '`data.win.eventdata.product Name:` `Microsoft Defender Antivirus`: This represents
    the name of the product that generated the alert. In this case, it is Microsoft
    Defender Antivirus.'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data.win.eventdata.product Name:` `Microsoft Defender Antivirus`：这表示生成警报的产品名称。在这种情况下，它是
    Microsoft Defender Antivirus。'
- en: '`data.win.system.channel:` `Microsoft-Windows-Windows Defender/Operational`:
    This indicates the channel or source from where the alert originated. In this
    case, it is the `Microsoft-Windows-Windows` `Defender/Operational` channel.'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data.win.system.channel:` `Microsoft-Windows-Windows Defender/Operational`：这表示警报来源的频道或源。在这种情况下，它是
    `Microsoft-Windows-Windows Defender/Operational` 频道。'
- en: '`rule.description:` `Windows Defender: Antimalware platform detected potentially
    unwanted software ()`: This provides the description of the triggered rule.'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rule.description:` `Windows Defender: Antimalware platform detected potentially
    unwanted software ()`：这是触发的规则描述。'
- en: '`rule.groups:` `windows, windows_defender`: This field specifies the groups
    or categories to which the rule or alert belongs. In this case, we have `Windows`
    and `Windows_defender` indicating that it’s a Windows-specific alert related to
    Windows Defender.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rule.groups:` `windows, windows_defender`：此字段指定规则或警报所属的组或类别。在这种情况下，我们有 `Windows`
    和 `Windows_defender`，表示这是与 Windows Defender 相关的 Windows 特定警报。'
- en: We have successfully collected and visualized the alerts from the Windows Defender
    solution. In the next section, we will learn to install and integrate Sysmon modules
    on a Windows machine to enhance the detection capabilities of the Wazuh platform.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功收集并可视化了来自 Windows Defender 解决方案的警报。在下一部分中，我们将学习如何在 Windows 机器上安装并集成 Sysmon
    模块，以增强 Wazuh 平台的检测能力。
- en: Integrating Sysmon to detect fileless malware
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成 Sysmon 以检测无文件恶意软件
- en: Malicious code that operates directly within a computer’s memory rather than
    the hard drive is known as fileless malware. It is “fileless” in the sense that
    no files are downloaded to your hard drive when your machine is infected. This
    makes it more difficult to detect using traditional antivirus or anti-malware
    tools, which primarily scan disk files.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 直接在计算机内存中运行而不是硬盘上的恶意代码称为无文件恶意软件。它之所以“无文件”，是因为在感染计算机时，没有文件被下载到硬盘中。这使得传统的杀毒或反恶意软件工具难以检测到无文件恶意软件，因为这些工具主要扫描磁盘文件。
- en: '**Sysmon** is a device driver and Windows system service that provides advanced
    monitoring and logging capabilities. It was created by Microsoft’s Sysinternals
    team to monitor various aspects of system activity, such as processes, network
    connections, and file changes. While Sysmon does not specifically focus on detecting
    fileless malware, its comprehensive monitoring capabilities can undoubtedly assist
    in identifying and mitigating the impact of fileless malware attacks. We can enhance
    Wazuh’s malware detection capabilities by installing Sysmon on each Windows machine.
    To test the fileless attack detection, we will use the APTSimulator tool to simulate
    the attack and visualize them on the Wazuh manager.'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sysmon**是一个设备驱动程序和Windows系统服务，提供高级的监控和日志记录功能。它是由微软的Sysinternals团队创建的，用于监视系统活动的各个方面，如进程、网络连接和文件变化。虽然Sysmon并不专门用于检测无文件恶意软件，但其全面的监控功能无疑能帮助识别并减轻无文件恶意软件攻击的影响。我们可以通过在每台Windows机器上安装Sysmon来增强Wazuh的恶意软件检测能力。为了测试无文件攻击检测，我们将使用APTSimulator工具来模拟攻击，并将其可视化在Wazuh管理器上。'
- en: 'In this section, we will learn how to detect fileless malware using Sysmon
    and finally, we will visualize them on the Wazuh dashboard. We will cover the
    following items in this section:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何使用Sysmon检测无文件恶意软件，并最终将在Wazuh仪表盘上可视化它们。我们将涵盖本节中的以下内容：
- en: How do fileless attacks work?
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无文件攻击是如何工作的？
- en: Requirements for lab setup
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验室设置要求
- en: Setting up Sysmon on a Windows machine
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows机器上设置Sysmon
- en: Configure the Wazuh agent to monitor Sysmon events
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Wazuh代理以监视Sysmon事件
- en: Creating Sysmon rules on the Wazuh manager
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Wazuh管理器上创建Sysmon规则
- en: Testing malware detection
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试恶意软件检测
- en: Visualizing the alerts
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化警报
- en: How do fileless malware attacks work?
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无文件恶意软件攻击是如何工作的？
- en: In its operation, a fileless malware attack is fairly unique. Understanding
    how it works can help an organization protect against future fileless malware
    attacks. Let’s learn about the different stages involved in the fileless malware
    attack. Each attack stage will be explained, and the techniques and tools used
    by the attackers will be explained in the following subsections.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在其操作过程中，无文件恶意软件攻击是相当独特的。了解其工作原理有助于组织防范未来的无文件恶意软件攻击。让我们了解无文件恶意软件攻击的不同阶段。每个攻击阶段将被解释，攻击者使用的技术和工具将在以下小节中讲解。
- en: Stage 1 – Gain access
  id: totrans-268
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阶段 1 – 获取访问权限
- en: 'Threat actors must first gain access to the target machine in order to carry
    out an attack. Some of the common techniques and tools involved in this stage
    are mentioned here:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 威胁行为者必须首先获得目标机器的访问权限才能进行攻击。以下是本阶段中涉及的一些常见技术和工具：
- en: '**Techniques**: Remotely exploit a vulnerability and gain remote access via
    web scripting or a social engineering scheme such as phishing emails'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术**：通过Web脚本或社交工程方案（如钓鱼邮件）远程利用漏洞并获得远程访问权限'
- en: '**Tools**: ProLock and Bumblebee'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**：ProLock和Bumblebee'
- en: Stage 2 – Steal credentials
  id: totrans-272
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阶段 2 – 窃取凭据
- en: 'Using the access gained in the previous step, the attacker now attempts to
    obtain credentials for the environment he has compromised, which will allow him
    to easily move to other systems in that environment. Some of the techniques and
    tools that he could have used are as follows:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 利用在前一步中获得的访问权限，攻击者现在试图获取他所破坏的环境的凭据，这将使他能够轻松地转移到该环境中的其他系统。一些他可能使用的技术和工具如下：
- en: '**Techniques**: Remotely exploit a vulnerability and gain remote access via
    web scripting (e.g., Mimikatz)'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术**：通过Web脚本（如Mimikatz）远程利用漏洞并获得远程访问权限'
- en: '**Tools**: Mimikatz and Kessel'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**：Mimikatz和Kessel'
- en: Stage 3 – Maintain persistence
  id: totrans-276
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阶段 3 – 维持持久性
- en: 'Now, the attacker creates a backdoor that will allow him to return to this
    environment at any time without having to repeat the initial steps of the attack.
    Some of the techniques and tools are as follows:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，攻击者创建了一个后门，使他能够随时返回此环境，而无需重复攻击的初始步骤。以下是一些技术和工具：
- en: '**Techniques**: Modify the registry to create a backdoor'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术**：修改注册表以创建后门'
- en: '**Tools**: Sticky Keys Bypass, Chinoxy, HALFBAKED, HiKit, and ShimRat'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**：Sticky Keys Bypass、Chinoxy、HALFBAKED、HiKit 和 ShimRat'
- en: Stage 4 – Exfiltrate data
  id: totrans-280
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阶段 4 – 数据外泄
- en: 'In the final step, the attacker collects the data he desires and prepares it
    for exfiltration by copying it to a single location and then compressing it with
    commonly available system tools such as Compact. The attacker then uploads the
    data via FTP to remove it from the victim’s environment. Some of the techniques
    and tools are as follows:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一步，攻击者收集他所需的数据，并通过将其复制到一个位置然后使用常用系统工具（如 Compact）进行压缩，准备将数据外泄。然后，攻击者通过 FTP
    上传数据，将其从受害者的环境中移除。一些技术和工具如下：
- en: '**Techniques**: Using DNS tunneling, traffic normalization, use of an encrypted
    channel, and so on'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术**：使用 DNS 隧道、流量规范化、加密通道等'
- en: '**Tools**: FTP, SoreFang, and SPACESHIP'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**：FTP、SoreFang 和 SPACESHIP'
- en: Requirement for the lab
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实验室要求
- en: 'To test the fileless malware detection, we need the following system:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试无文件恶意软件检测，我们需要以下系统：
- en: The Wazuh server
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 服务器
- en: Windows 10 or 11 or Windows Server 2016 or 2019, which should have the Wazuh
    agent installed
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10 或 11 或 Windows Server 2016 或 2019，且应已安装 Wazuh 代理
- en: Setting up Sysmon on a Windows machine
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Windows 机器上设置 Sysmon
- en: In this step, we’ll set up our Windows 11 endpoint with the Sysmon package.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤中，我们将为 Windows 11 终端设置 Sysmon 包。
- en: Sysmon offers comprehensive data about process creation, network connections,
    and file creation time changes. Sysmon generates events and stores them in `Applications`
    and `Services Logs/Microsoft/Windows/Sysmon/Operational`. To install Sysmon on
    a Windows machine, you need to follow the steps as explained in the following
    sections.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 提供有关进程创建、网络连接和文件创建时间更改的全面数据。Sysmon 会生成事件并将其存储在 `Applications` 和 `Services
    Logs/Microsoft/Windows/Sysmon/Operational` 中。要在 Windows 机器上安装 Sysmon，您需要按照以下各节中解释的步骤进行操作。
- en: Step 1 – Download and extract Sysmon
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1 – 下载并解压 Sysmon
- en: 'To download Sysmon on your Windows machine, visit its official website: [https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon](https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon).
    Once downloaded, extract the Sysmon archive to a folder of your choice on your
    Windows machine.'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您的 Windows 机器上下载 Sysmon，请访问其官方网站：[https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon](https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon)。下载完成后，将
    Sysmon 压缩包解压到您选择的文件夹中。
- en: Step 2 – Download the SwiftOnSecurity Sysmon configuration
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2 – 下载 SwiftOnSecurity Sysmon 配置
- en: SwiftOnSecurity’s Sysmon configuration is a well-known and simple configuration
    file created by popular security professionals. Using this configuration can enhance
    our Windows monitoring capabilities. To download the SwiftOnSecurity Sysmon configuration
    file, visit their official GitHub repository ([https://github.com/SwiftOnSecurity/sysmon-config](https://github.com/SwiftOnSecurity/sysmon-config))
    and download the latest version of the configuration file called `SysmonConfig.xml`.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: SwiftOnSecurity 的 Sysmon 配置是由知名安全专家创建的一个著名且简单的配置文件。使用此配置可以增强我们的 Windows 监控能力。要下载
    SwiftOnSecurity Sysmon 配置文件，请访问他们的官方 GitHub 仓库（[https://github.com/SwiftOnSecurity/sysmon-config](https://github.com/SwiftOnSecurity/sysmon-config)），并下载最新版本的配置文件
    `SysmonConfig.xml`。
- en: Note
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure you place the `SysmonConfig.xml` file in the same folder where you
    extracted Sysmon.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将 `SysmonConfig.xml` 文件放置在您解压 Sysmon 的同一文件夹中。
- en: Step 3 – Install Sysmon with the SwiftOnSecurity configuration
  id: totrans-297
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 3 – 使用 SwiftOnSecurity 配置安装 Sysmon
- en: 'To install Sysmon using the SwiftOnSecurity configuration file called `SysmonConfig.xml`,
    you need to follow some steps as explained here:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用名为 `SysmonConfig.xml` 的 SwiftOnSecurity 配置文件安装 Sysmon，您需要按照此处解释的步骤进行操作：
- en: Open a command prompt or PowerShell with administrative privileges.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个具有管理员权限的命令提示符或 PowerShell。
- en: Navigate to the folder where Sysmon is extracted.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到解压 Sysmon 的文件夹。
- en: 'Now, run the following command to install Sysmon with the SwiftOnSecurity configuration:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行以下命令使用 SwiftOnSecurity 配置安装 Sysmon：
- en: '[PRE16]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Verify installation
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证安装
- en: 'After the installation, you can verify that Sysmon is running properly by checking
    `Applications and Services Logs/Microsoft/Windows/Sysmon/Operational`, and you
    should start getting Sysmon-related events as shown in the following figure:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您可以通过检查 `Applications and Services Logs/Microsoft/Windows/Sysmon/Operational`
    来验证 Sysmon 是否正常运行，并且您应开始看到 Sysmon 相关事件，如下图所示：
- en: '![Figure 2.13 – Visualizing Sysmon events in Event Viewer](img/B19549_2_13.jpg)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.13 – 在事件查看器中可视化 Sysmon 事件](img/B19549_2_13.jpg)'
- en: Figure 2.13 – Visualizing Sysmon events in Event Viewer
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – 在事件查看器中可视化 Sysmon 事件
- en: 'Let’s break this down:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来逐步解析：
- en: '**Level**: This refers to the severity of an event. The levels are usually
    categorized as follows:'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**级别**：指示事件的严重性。级别通常按以下方式分类：'
- en: '**0**: Information'
  id: totrans-309
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**0**：信息'
- en: '**1**: Warning'
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1**：警告'
- en: '**2**: Error'
  id: totrans-311
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**2**：错误'
- en: '**3**: Critical'
  id: totrans-312
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3**：严重'
- en: '**Source**: This field indicates the software or component that generated the
    event. In this case, it is Sysmon.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**来源**：此字段指示生成事件的软件或组件。在此案例中是 Sysmon。'
- en: '**Event ID**: It is a unique value assigned to each type of event. Sysmon uses
    different event IDs for various purposes:'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID**：它是分配给每种事件类型的唯一值。Sysmon 使用不同的事件ID来处理各种用途：'
- en: '**Event ID 1**: Process creation'
  id: totrans-315
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 1**：进程创建'
- en: '**Event ID 2**: File creation'
  id: totrans-316
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 2**：文件创建'
- en: '**Event ID 3**: Network connection'
  id: totrans-317
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3**：网络连接'
- en: '**Event ID 7**: Image loaded'
  id: totrans-318
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 7**：加载图像'
- en: '**Event ID 10**: Process access'
  id: totrans-319
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 10**：进程访问'
- en: '**Event ID 11**: File creation'
  id: totrans-320
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 11**：文件创建'
- en: '**Event ID 12**: Registry event (object create and delete)'
  id: totrans-321
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 12**：注册表事件（对象创建和删除）'
- en: '**Event ID 13**: Registry event (value set)'
  id: totrans-322
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 13**：注册表事件（值设置）'
- en: '**Event ID 14**: Registry event (key and value rename)'
  id: totrans-323
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 14**：注册表事件（键和值重命名）'
- en: '**Event ID 15**: File creation stream hash'
  id: totrans-324
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 15**：文件创建流哈希'
- en: '**Event ID 17**: Pipe event (pipe created)'
  id: totrans-325
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 17**：管道事件（管道创建）'
- en: '**Event ID 18**: Pipe event (pipe connected)'
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 18**：管道事件（管道连接）'
- en: '**Event ID 22**: DNS request'
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 22**：DNS 请求'
- en: '**Task Category**: This provdes the classification for the events. It is the
    name of the event IDs as listed earlier.'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务类别**：此项提供事件的分类。它是之前列出的事件ID名称。'
- en: Configure the Wazuh agent to monitor Sysmon events
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 Wazuh 代理以监控 Sysmon 事件
- en: 'Assuming the Wazuh agent is already installed and running, you need to inform
    the agent to monitor Sysmon events. To do that, we need to include the following
    block in the `ossec.conf` file:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 Wazuh 代理已经安装并运行，你需要告知代理监控 Sysmon 事件。为此，我们需要在 `ossec.conf` 文件中包含以下内容：
- en: '[PRE17]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: To ensure our changes take effect, we need to restart the agent.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保更改生效，我们需要重启代理。
- en: Configure the Wazuh manager
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 Wazuh 管理器
- en: We are required to create a custom rule in the Wazuh manager to match the Sysmon
    events generated by the Windows machine. This rule will ensure that the Wazuh
    manager triggers an alert every time it gets a Sysmon-related event.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在 Wazuh 管理器中创建一个自定义规则，以匹配 Windows 计算机生成的 Sysmon 事件。这个规则将确保每次收到与 Sysmon 相关的事件时，Wazuh
    管理器触发警报。
- en: 'To create a rule, go to the Wazuh dashboard and navigate to `custom_sysmon.xml`),
    and paste the following rules:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个规则，请转到 Wazuh 仪表板，导航至 `custom_sysmon.xml`，然后粘贴以下规则：
- en: '[PRE18]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let’s break this down:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来逐步解析：
- en: '`<group>`: This tag is used to organize rules and helps in managing and categorizing
    rules based on their functionality.'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<group>`：此标签用于组织规则，有助于根据功能对规则进行管理和分类。'
- en: '`<rule>`: This defines the individual rule with the `id` and `level` attributes.
    In the preceding ruleset, the rule ID ranges from 101100 to 101107 with `level=5`.'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<rule>`：定义了具有`id`和`level`属性的单个规则。在前面的规则集中，规则ID的范围从101100到101107，`level=5`。'
- en: '`<if_sid>`: This tag is used as a requisite to trigger any rule when a rule
    ID has previously matched. Let’s look at a couple of the following rules:'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>`：此标签用作触发任何规则的前提条件，当先前已匹配某个规则 ID 时。让我们看几个后续规则：'
- en: '`Rule ID "101100"` with `if_sid "61650"` will be checked when the requisites
    of rule ID 61650 are satisfied'
  id: totrans-341
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`规则 ID "101100"` 与 `if_sid "61650"` 将在规则 ID 61650 的条件满足时被检查'
- en: '`Rule ID "101101"` with `if_sid "61603"` will be checked when the requisites
    of rule ID 61603 are satisfied'
  id: totrans-342
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`规则 ID "101101"` 与 `if_sid "61603"` 将在规则 ID 61603 的条件满足时被检查'
- en: '`Rule ID "101102"` with `if_sid "61604"` will be checked when the requisites
    of rule ID 61604 are satisfied'
  id: totrans-343
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`规则 ID "101102"` 与 `if_sid "61604"` 将在规则 ID 61604 的条件满足时被检查'
- en: '`Rule ID "101103"` with `if_sid "61605"` will be checked when the requisites
    of rule ID 61605 are satisfied'
  id: totrans-344
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`规则 ID "101103"` 与 `if_sid "61605"` 将在规则 ID 61605 的条件满足时被检查'
- en: '`Rule ID "101104"` with `IF_SID "61606"` will be checked when the requisites
    of rule ID 61606 are satisfied'
  id: totrans-345
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`规则 ID "101104"` 与 `IF_SID "61606"` 将在规则 ID 61606 的条件满足时被检查'
- en: '`Rule ID "101105"` with `IF_SID "61607"` will be checked when the requisites
    of rule ID 61607 are satisfied'
  id: totrans-346
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`规则 ID "101105"` 与 `IF_SID "61607"` 将在规则 ID 61607 的条件满足时被检查'
- en: '`Rule ID "101106"` with `IF_SID "61608"` will be checked when the requisites
    of rule ID 61608 are satisfied'
  id: totrans-347
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`规则ID "101106"` 和 `IF_SID "61608"` 会在满足规则ID 61608的要求时被检查'
- en: '`Rule ID "101107"` with `IF_SID "61609"` will be checked when the requisites
    of rule ID 61609 are satisfied'
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`规则ID "101107"` 和 `IF_SID "61609"` 会在满足规则ID 61609的要求时被检查'
- en: Note
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can review the details of each of the mentioned `IF_SID` under the Wazuh
    rule file called `0595-win-sysmon_rules.xml`. You can find this file under the
    **Rules** section of the Wazuh dashboard or in the Wazuh’s official GitHub repository
    located at [https://github.com/wazuh/wazuh-ruleset/tree/master/rules](https://github.com/wazuh/wazuh-ruleset/tree/master/rules).
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Wazuh规则文件`0595-win-sysmon_rules.xml`中查看每个提到的`IF_SID`的详细信息。你可以在Wazuh仪表板的**规则**部分找到这个文件，或者在Wazuh的官方GitHub仓库中找到它，位置为[https://github.com/wazuh/wazuh-ruleset/tree/master/rules](https://github.com/wazuh/wazuh-ruleset/tree/master/rules)。
- en: 'For changes to take effect, you have to restart the Wazuh manager on the dashboard
    as shown in the following figure:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使更改生效，你必须重启仪表板上的Wazuh管理器，如下图所示：
- en: '![Figure 2.14 – Restarting the Wazuh manager](img/B19549_2_14.jpg)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.14 – 重启Wazuh管理器](img/B19549_2_14.jpg)'
- en: Figure 2.14 – Restarting the Wazuh manager
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.14 – 重启Wazuh管理器
- en: 'To restart the Wazuh manager using the command line, you can enter the following
    command:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用命令行重启Wazuh管理器，你可以输入以下命令：
- en: '[PRE19]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In the next step, we will test our Wazuh rules by initiating attacks simulated
    by the APTSimulator tool and will visualize the alerts on the Wazuh dashboard.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将通过启动APTSimulator工具模拟的攻击来测试我们的Wazuh规则，并将在Wazuh仪表板中可视化这些警报。
- en: Testing
  id: totrans-357
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: To test a fileless malware scenario, we will use the APTSimulator tool developed
    by Florian Roth. It is a Windows batch script that employs several tools and output
    files to make a system appear to be compromised. To execute this APTSimulator
    script, download the file on a Windows machine and execute the `.``bat` file.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试无文件恶意软件场景，我们将使用由Florian Roth开发的APTSimulator工具。它是一个Windows批处理脚本，使用多个工具和输出文件使系统看起来像被攻破。要执行这个APTSimulator脚本，请将文件下载到Windows机器上并执行`.bat`文件。
- en: 'Here is the link to download: [https://github.com/NextronSystems/APTSimulator](https://github.com/NextronSystems/APTSimulator).'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是下载链接：[https://github.com/NextronSystems/APTSimulator](https://github.com/NextronSystems/APTSimulator)。
- en: Once you download this script on your Windows Server, open the command prompt,
    go to the `APTSimulator-0.9.4` folder, and execute the bat file `APTSimulator.bat`,
    as shown in the following figure.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在Windows Server上下载了这个脚本，打开命令提示符，进入`APTSimulator-0.9.4`文件夹，执行bat文件`APTSimulator.bat`，如下图所示。
- en: '![Figure 2.15 – Executing APTSimulator for testing Sysmon alerts](img/B19549_2_15.jpg)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.15 – 执行APTSimulator测试Sysmon警报](img/B19549_2_15.jpg)'
- en: Figure 2.15 – Executing APTSimulator for testing Sysmon alerts
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.15 – 执行APTSimulator测试Sysmon警报
- en: Type `0`. This will run every test including Collection, Command and Control,
    **Credential Access**, **Defense Evasion**, **Discovery**, **Execution**, **Lateral
    Movement**, **Persistence**, and **Privilege Escalation**.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`0`。这将运行所有测试，包括收集、命令与控制、**凭证访问**、**防御规避**、**发现**、**执行**、**横向移动**、**持久性**和**权限提升**。
- en: Note
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Some of the attacks might not work so you can skip them.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 有些攻击可能无法成功，因此你可以跳过它们。
- en: Visualizing the alerts
  id: totrans-366
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化警报
- en: 'To visualize the Sysmon alerts from the Windows machine, navigate to the **Security
    Alerts** module in the Wazuh dashboard and you should see multiple alerts as shown
    in the following figure:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 为了可视化来自Windows机器的Sysmon警报，请导航到Wazuh仪表板中的**安全警报**模块，你应该能看到多个警报，如下图所示：
- en: '![Figure 2.16 – Visualizing the Sysmon alerts in the Wazuh dashboard](img/B19549_2_16.jpg)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.16 – 在Wazuh仪表板中可视化Sysmon警报](img/B19549_2_16.jpg)'
- en: Figure 2.16 – Visualizing the Sysmon alerts in the Wazuh dashboard
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.16 – 在Wazuh仪表板中可视化Sysmon警报
- en: Here, you can see that we got a wide range of Sysmon events such as **Process
    Creation (Event 1)**, **DNS Query (Event 22)**, **Network Connection (Event 3)**,
    and **RegistryEvent (Event 13)**. All these Sysmon events can be used to conduct
    further analysis.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到我们获得了各种Sysmon事件，如**进程创建（事件1）**、**DNS查询（事件22）**、**网络连接（事件3）**和**注册表事件（事件13）**。所有这些Sysmon事件都可以用于进一步的分析。
- en: Summary
  id: totrans-371
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter introduced us to the synergy between Wazuh and malware detection,
    covering its capabilities in FIM and using VirusTotal for enhanced threat intelligence
    and the CDB list to build a list of known malware hashes. The integration of Windows
    Defender logs with Wazuh provided us with a unified look at security events on
    a Windows machine. In the end, we talked about the integration of Sysmon with
    a Windows machine to detect fileless malware on the Windows machine.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 本章向我们介绍了Wazuh与恶意软件检测的协同作用，涵盖了其在FIM中的能力、使用VirusTotal增强威胁情报，以及利用CDB列表构建已知恶意软件哈希值的列表。将Windows
    Defender日志与Wazuh集成后，我们可以统一查看Windows机器上的安全事件。最后，我们讨论了将Sysmon与Windows机器集成，以检测Windows机器上的无文件恶意软件。
- en: In the next chapter, we will learn how to enhance Wazuh’s threat intelligence
    capabilities by integrating the **Malware Information Sharing Platform** (**MISP**).
    To build a scalable system, we will also integrate TheHive and Cortex with the
    MISP platform.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何通过集成**恶意软件信息共享平台**（**MISP**）来增强Wazuh的威胁情报能力。为了构建可扩展的系统，我们还将与MISP平台集成TheHive和Cortex。
- en: 'Part 2: Threat Intelligence, Automation, Incident Response, and Threat Hunting'
  id: totrans-374
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：威胁情报、自动化、事件响应与威胁狩猎
- en: In this part, you will learn how to extend the Wazuh threat intelligence capability
    by integrating the MISP platform. You will learn to integrate TheHive with Wazuh
    and MISP to perform threat analysis. In addition to that, you will learn how to
    automate security operations and management of the Wazuh platform using the **security
    orchestration, automation, and response** (**SOAR**) tool, **Shuffle**. You will
    also learn to perform automated incident responses using a Wazuh-native feature
    called Active Response such as blocking brute force attempts and automatically
    isolating infected machines. Lastly, we will learn how to leverage the Wazuh platform
    to conduct proactive threat hunting.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分中，您将学习如何通过集成MISP平台扩展Wazuh的威胁情报能力。您将学习如何将TheHive与Wazuh和MISP集成，以执行威胁分析。此外，您还将学习如何使用**安全编排、自动化与响应**（**SOAR**）工具**Shuffle**自动化安全操作和Wazuh平台的管理。您还将学习如何使用Wazuh本地功能“主动响应”执行自动化事件响应，例如阻止暴力破解攻击和自动隔离感染的机器。最后，我们将学习如何利用Wazuh平台进行主动的威胁狩猎。
- en: 'This part includes the following chapters:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 3*](B19549_03.xhtml#_idTextAnchor077), *Threat Intelligence and Analysis*'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B19549_03.xhtml#_idTextAnchor077), *威胁情报与分析*'
- en: '[*Chapter 4*](B19549_04.xhtml#_idTextAnchor116), *Security Automation and Orchestration
    Using Shuffle*'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B19549_04.xhtml#_idTextAnchor116), *使用Shuffle进行安全自动化与编排*'
- en: '[*Chapter 5*](B19549_05.xhtml#_idTextAnchor136)*: Incident Response with Wazuh*'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B19549_05.xhtml#_idTextAnchor136)*: 使用Wazuh进行事件响应*'
- en: '[*Chapter 6*](B19549_06.xhtml#_idTextAnchor163)*: Threat Hunting with Wazuh*'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B19549_06.xhtml#_idTextAnchor163)*: 使用Wazuh进行威胁狩猎*'
