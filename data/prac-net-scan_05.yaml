- en: Application Security Design
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用安全设计
- en: In the previous chapter, we discussed data protection and security techniques
    for cloud hosted applications. In this chapter, we will discuss application security
    for web-based applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了云托管应用程序的数据保护和安全技术。在本章中，我们将讨论基于 Web 的应用程序的安全性。
- en: While applications can provide efficiency, risks still remain. This is a result
    of the fact that there are a number of new security threats which could potentially
    pose significant risks to an organization's IT infrastructure. It is essential
    to understand the vulnerabilities commonly found in various applications and provide
    users with a better experience. In this chapter, we will focus on the security
    aspect of web-based applications with **General Data Protection Regulation** (**GDPR**)
    around the corner.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管应用程序可以提高效率，但风险仍然存在。这是因为存在一些新的安全威胁，这些威胁可能对组织的 IT 基础设施造成重大风险。了解各种应用程序中常见的漏洞，并为用户提供更好的体验至关重要。本章将重点讨论基于
    Web 的应用程序的安全性，**通用数据保护条例**(**GDPR**)即将到来。
- en: 'We are going to cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将讨论以下主题：
- en: GDPR
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GDPR
- en: SQL Injection
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 注入
- en: Web Application Firewall and security
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 应用防火墙和安全性
- en: Blacklisting and whitelisting
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 黑名单与白名单
- en: Using HTTPS for everything
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 HTTPS 做为一切的基础
- en: GDPR
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GDPR
- en: In a digital transformation era, customers' sensitive personal information held
    by business organizations pose a significant risk if they are stolen and misused.
    The data protection laws across the globe have a common goal to protect the privacy
    of individuals. The general data protection regulation was introduced, which specifies
    how customer data should be used and protected. Most of us share our personal
    information on many web portals by clicking I Agree or I Accept the Terms and
    Conditions. Personal data contains information about the individual, including
    who they are, what they do, and where they go. Each of us leaves a digital footprint
    of our personal data in the cyber world. Data mining is new oil to the industry;
    it provides insights and a competitive advantage.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在数字化转型的时代，商业组织持有的客户敏感个人信息一旦被盗用或滥用，将构成重大风险。全球的数据保护法律有一个共同的目标，即保护个人的隐私。为此，推出了通用数据保护条例，明确规定了如何使用和保护客户数据。我们大多数人在多个网页门户上分享个人信息，并点击“我同意”或“我接受”条款与条件。个人数据包含有关个人的信息，包括他们是谁、做什么以及去哪里。我们每个人在网络世界中都会留下数字足迹。数据挖掘是行业中的新石油，它提供洞察力并带来竞争优势。
- en: The GDPR compliance deadline is May 25, 2018\. Every organization that keeps
    or uses European personal data inside or outside of Europe—regardless of the nature
    of the business in which it operates—is affected by the new data protection law.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: GDPR 合规期限为2018年5月25日。任何存储或使用欧洲个人数据的组织，无论其业务性质如何，都将受到新数据保护法的影响。
- en: Let's look at an example of how this impacts organizations worldwide.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子，了解这如何影响全球组织。
- en: A US organisation which collects data from EU personnel would be under the same
    legal obligations as the organisation's head-office which is anywhere within the
    EU. Even though they do not have an actual physical server or office in the EU,
    the basic idea was that if the data was not physically located in the EU zone,
    then the rules didn't even apply. For example, any social networking portal has
    to keep user information and if the user belongs to the EU, the information is
    stored on a server which is outside of EU boundaries.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 收集来自欧盟人员数据的美国公司将承担与其欧盟总部相同的法律义务。即使他们在欧盟没有实际的物理服务器或办公室，基本的原则是，如果数据没有实际存放在欧盟区域，那么这些规则也不适用。例如，任何社交网络门户都必须保存用户信息，如果用户属于欧盟，该信息将存储在欧盟边界之外的服务器上。
- en: Legislation has to be enforced by 25th May 2018 and this may result in huge
    penalties for organizations that fail to comply. The maximum penalty is €20 million
    or 4% of an organization's global turnover. This amount would be enough to close
    down many businesses. To avoid these steep consequences, preparation is the key
    to success.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 法规必须在2018年5月25日前强制执行，未能遵守的组织可能会面临巨额罚款。最高罚款为2000万欧元或公司全球营业额的4%。这一金额足以让许多企业关闭。为了避免这些严厉的后果，准备工作是成功的关键。
- en: Getting consent
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取同意
- en: Consent is a key factor of GDPR legislation, which offers individuals a choice
    and control over how their data is used, with a desire to build their trust and
    engagement. Your web-portal which collects personal data must make visitors understand
    exactly how you are planning on using their personal information. They must then
    agree to each specific purpose. Even if you have someone's email address, phone
    number, and credit card information after they use a shopping cart feature, you
    are not allowed to share this information without their agreement.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 同意是GDPR法规的一个关键因素，它为个人提供了选择和控制自己数据使用方式的权利，旨在建立信任和参与感。您的收集个人数据的Web门户必须让访问者清楚了解您计划如何使用他们的个人信息。然后，他们必须同意每一个具体的目的。即使您在某人使用购物车功能后获得了他们的电子邮件地址、电话号码和信用卡信息，在没有他们的同意下，您也不允许分享这些信息。
- en: WhatsApp now lets users see the data that it collects from them.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: WhatsApp现在允许用户查看它从他们那里收集的数据。
- en: Access to data
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据访问
- en: Another key feature of GDPR is to make it possible to view who has access to
    the personal data that is stored on your website and backend system. The first
    thing to understand is who these entities are and if they have a valid reason
    to get access to this data. Also, all data collected from individuals must be
    linked and a one-click job should be enough to delete all system data which is
    no longer required.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: GDPR的另一个关键特性是使用户能够查看谁有权限访问存储在您网站和后台系统中的个人数据。首先需要了解的是，这些实体是谁，并且他们是否有正当理由访问这些数据。此外，所有从个人收集的数据必须是关联的，且一键操作应该足以删除所有不再需要的系统数据。
- en: Encryption
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密
- en: Any data that is submitted to your website must be encrypted in order to comply
    with GDPR. An SSL/TLS certificate must be installed on your site to encrypt the
    data in order to avoid man-in-the-middle attacks.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 提交到您的网站的任何数据都必须加密，以符合GDPR的要求。必须在您的站点上安装SSL/TLS证书以加密数据，避免中间人攻击。
- en: For more information on GDPR you can visit [https://www.eugdpr.org](https://www.eugdpr.org).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解更多有关GDPR的信息，您可以访问[https://www.eugdpr.org](https://www.eugdpr.org)。
- en: SQL Injection
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQL注入
- en: 'SQL Injection is one of the oldest and most widely used application layer vulnerabilities
    used by attackers to steal valuable data from SQL based databases. Attackers leverage
    an SQL Injection vulnerability to bypass a web application''s authentication system
    and to retrieve information. SQL Injection can also be used to make changes like
    adding, deleting, and modifying data records. The following diagram shows a 3-Tier
    application architecture:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: SQL注入是攻击者用来从基于SQL的数据库中窃取有价值数据的最古老且最广泛使用的应用层漏洞之一。攻击者利用SQL注入漏洞绕过Web应用程序的身份验证系统并检索信息。SQL注入还可以用于进行更改，如添加、删除和修改数据记录。下图展示了3层架构应用程序：
- en: '![](Images/3f6891e5-a423-46bc-97d7-5f8e58587090.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/3f6891e5-a423-46bc-97d7-5f8e58587090.png)'
- en: 'The 3-Tier application has the following components:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 3层架构应用程序包含以下组件：
- en: '**User Interface**: **User Interface** (**UI**) is basically a user friendly
    way to interact with an actual application. This can be a mobile application,
    web UI or API method to interact with applications. A UI layer requests data from
    a business layer.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户界面**：**用户界面**（**UI**）基本上是与实际应用程序交互的一种用户友好的方式。它可以是移动应用程序、Web UI或API方法来与应用程序交互。UI层请求来自业务层的数据。'
- en: '**Business Logic**: A business logic can be considered an application layer
    which is responsible for handling data validation, business rules and task-specific
    behavior. Business rules fetch or insert data into the database layer.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务逻辑**：业务逻辑可以被视为一个应用层，负责处理数据验证、业务规则和特定任务的行为。业务规则从数据库层提取或插入数据。'
- en: '**Database Layer**: This is the third and most critical layer of the 3-Tiers,
    which hosts the actual data and is responsible for feeding data to the other above-mentioned
    two layers.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库层**：这是3层架构中第三层也是最关键的一层，承载实际的数据，并负责将数据提供给上述两个层。'
- en: It's worth mentioning here that running a SQLi attack against a website without
    the owner's permission could well land you in legal trouble with the state law
    enforcement.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在此值得一提的是，在没有网站所有者许可的情况下对网站发起SQLi攻击，可能会导致您面临法律麻烦，并受到国家执法机关的追究。
- en: 'Let''s discuss how SQLi works in detail:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细讨论SQLi的工作原理：
- en: 'On a web portal login page, when you submit a username and password, the SQL
    query will look like the following. If the correct credentials have been provided,
    everything will work fine:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网站登录页面，当您提交用户名和密码时，SQL查询将如下所示。如果提供了正确的凭据，一切将正常工作：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The same method becomes vulnerable due to a small trick which bypasses the
    login forms on web portals:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于一个小技巧绕过了 Web 门户的登录表单，同样的方法变得脆弱：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can see that the username field is empty and the password field has a closed
    apostrophe. The magic starts here with the `OR` statement `'1'= '1'` which will
    always return true and the whole query returns all `username` and `password` from
    the entire database.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到用户名字段为空，密码字段有一个闭合的引号。魔法从这里开始，`OR` 语句 `'1' = '1'` 总是返回 true，整个查询返回了整个数据库的所有
    `username` 和 `password`。
- en: We have discussed the basic idea of what an SQL Injection is and how it works.
    The preceding example is a very basic attack that can run very complicated queries
    to crack databases. It is highly recommended to test the system or a website with
    databases against this type of attack every time it is launched for public access.
    Just think, if you can play tricks with a banking system which is vulnerable to
    SQLi, you can probably rob the bank by manipulating the amount reflected on your
    account or by transferring an amount to someone else.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了 SQL 注入的基本概念及其工作原理。前面的例子是一个非常基本的攻击，能够运行非常复杂的查询来破解数据库。强烈建议每次将系统或包含数据库的网站发布到公共访问时，都对其进行这类攻击的测试。试想，如果你能在一个易受
    SQL 注入攻击的银行系统上捣乱，你可能通过操纵账户显示的金额或向别人转账来抢劫银行。
- en: Do remember that this SQL Injection test should only be tested in the test environment.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这个 SQL 注入测试应该只在测试环境中进行。
- en: Prevention of SQL Injection attack on web applications
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防止对 Web 应用程序的 SQL 注入攻击
- en: 'The good news is that there is actually a lot that website owners can do to
    prevent SQL Injection. The bad news is that there is not one complete, foolproof
    solution to database security:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，网站所有者实际上可以做很多事情来防止 SQL 注入。坏消息是，数据库安全没有一个完整、万无一失的解决方案：
- en: '![](Images/dbab3a48-cfcd-4149-834b-7da42873065e.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/dbab3a48-cfcd-4149-834b-7da42873065e.png)'
- en: Employing comprehensive data sanitization
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施全面的数据清理
- en: It is very important for all websites to filter all user inputs and to exploit
    works because of weak input filtering or no filtering at all. You can also call
    this *validation*. For example, if the input field is supposed to be a cell phone
    number, you can certainly validate that field to make sure that it contains only
    numbers and, of course, is the length of a cell phone number. This will not just
    protect your application from SQLi but it will also protect you from undesired
    behavior.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有网站来说，过滤所有用户输入非常重要，利用弱输入过滤或根本没有过滤的漏洞也很常见。你也可以把这个叫做*验证*。例如，如果输入字段应该是手机号码，你当然可以验证这个字段，确保它只包含数字，且长度符合手机号码的标准。这不仅可以保护你的应用免受
    SQL 注入攻击，还可以保护你免受不必要的行为。
- en: Deploying a Web Application Firewall
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署 Web 应用防火墙
- en: '**Web Application Firewalls** (**WAFs**) are essential security mechanisms
    used on almost all commercial websites today. Using a WAF is a very effective
    way of preventing known attacks. The WAF combats commonly known attacks against
    web servers using a number of security checks to filter inbound HTTP/HTTPS requests.
    In addition to managing requests, you can apply WAF security checks to modify
    the responses sent back to users. Despite the excellent protection they offer
    against many types of attacks, WAF is inadequate for protecting against today''s
    sophisticated **SQL Injection** (**SQLi**) attacks. You can consider WAF a rule-based
    second layer of defense for protecting web servers against known threats XSS,
    SQLi, and DDoS attacks.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**Web 应用防火墙**（**WAFs**）是如今几乎所有商业网站上都使用的重要安全机制。使用 WAF 是防止已知攻击的非常有效的方式。WAF 通过多种安全检查来过滤传入的
    HTTP/HTTPS 请求，抵御常见的针对 Web 服务器的攻击。除了管理请求，你还可以对返回给用户的响应应用 WAF 安全检查。尽管 WAF 对许多类型的攻击提供了优秀的保护，但它对当前复杂的**SQL
    注入**（**SQLi**）攻击并不充分防护。你可以将 WAF 视为一种基于规则的第二层防御，用于保护 Web 服务器免受已知威胁，如 XSS、SQLi 和
    DDoS 攻击。'
- en: Limit database privileges
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制数据库权限
- en: The key element of database security is access control privileges for everyone,
    from DBA to application schema. To limit database privileges, create multiple
    database user accounts with a minimum level of privilege for their usage environments.
    You should also grant an application with the minimum possible access to the database.
    Unless absolutely necessary, do not allow DROP, DELETE, and so on.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库安全的关键要素是每个人的访问控制权限，从DBA到应用程序架构。为了限制数据库权限，应为每个使用环境创建多个具有最低权限的数据库用户账户。还应为应用程序授予最低的数据库访问权限。除非绝对必要，否则不要允许DROP、DELETE等操作。
- en: Finding vulnerabilities
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 漏洞发现
- en: Once you have written your application, we do not know if it is vulnerable to
    SQL Injection. Obviously, you could examine the source code and find any instances
    of concatenating user input with SQL, but that could be very tedious and time
    consuming. You must use a good, updated vulnerability scanner to find the most
    frequently found vulnerabilities. Performing SQL Injection generates high network
    bandwidth and sends a lot of data, so make sure you are the owner of the website
    you are testing. If not, make sure you have taken prior permission from the owner.
    A few famous tools such as sqlmap, Acunetix, Vega, and Netsparker can be used
    for scanning.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你编写了应用程序，我们无法知道它是否容易受到SQL注入攻击。显然，你可以检查源代码，找出任何将用户输入与SQL拼接的实例，但这可能非常繁琐且耗时。你必须使用一个优秀且更新的漏洞扫描器来查找最常见的漏洞。执行SQL注入攻击会产生高网络带宽并发送大量数据，因此确保你是你正在测试的网站的所有者。如果不是，确保已从网站所有者处获得事先许可。像sqlmap、Acunetix、Vega和Netsparker等一些著名工具可以用于扫描。
- en: WAFs
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WAF
- en: WAFs provide additional security between users and web applications to protect
    web servers from unauthorized access and malicious attacks. WAF vendors offer
    hardware, software, virtual, and cloud-based firewall solutions. Web applications
    are extremely vulnerable and are also the backbone of business, so they must be
    protected. The biggest challenge in application security is detecting a vulnerability
    in your application, at which point the trouble begins when you are patching and
    fixing the code, as these are time-consuming tasks. This is where WAFs come in;
    as soon as a vulnerability is detected, you can apply patches to WAF. Any request
    which comes after the WAF patches are updated will stop attacks associated with
    the vulnerability that has been found.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: WAF提供额外的安全防护，位于用户和Web应用程序之间，保护Web服务器免受未经授权的访问和恶意攻击。WAF供应商提供硬件、软件、虚拟和基于云的防火墙解决方案。Web应用程序极其脆弱，同时又是业务的支柱，因此必须保护它们。应用程序安全的最大挑战是检测应用程序中的漏洞，此时修补和修复代码的工作才开始，因为这些都是耗时的任务。这时WAF发挥作用；一旦发现漏洞，你可以将补丁应用到WAF中。所有在WAF补丁更新后发出的请求都会阻止与已发现漏洞相关的攻击。
- en: 'Let''s take a look at the following diagram. Non-HTTP/HTTPS attacks are blocked
    by a perimeter firewall, but the perimeter firewall does allow HTTP/HTTPS connections.
    These HTTP/HTTPS connections can also become attacks and are therefore blocked
    by WAF, which acts as a second layer of security. Consequently, only a clean connection
    is passed by both layers and reaches the application server:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下下面的图示。非HTTP/HTTPS攻击会被外围防火墙阻止，但外围防火墙确实允许HTTP/HTTPS连接。这些HTTP/HTTPS连接也可能成为攻击，因此会被WAF阻止，WAF作为第二层安全防护。因此，只有通过这两层的干净连接才能到达应用服务器：
- en: '![](Images/94d3d922-4516-45f7-a26c-ecf1856be5c9.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/94d3d922-4516-45f7-a26c-ecf1856be5c9.png)'
- en: WAF protection against common web attacks
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WAF防护常见的Web攻击
- en: 'A WAF protects your web servers from common threats which can compromise the
    security of websites. We will list the common threats and WAF security checks
    you can use to counter these attacks:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: WAF保护你的Web服务器免受可能危害网站安全的常见威胁。我们将列出常见的威胁和你可以使用的WAF安全检查，以应对这些攻击：
- en: Buffer overflow attacks
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓冲区溢出攻击
- en: Cookie tampering
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cookie篡改
- en: Forceful browsing
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强制浏览
- en: Web form security attacks
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web表单安全攻击
- en: Request protection
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求保护
- en: Bot check
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人检测
- en: Brute force and credential stuffing
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 暴力破解和凭证填充
- en: Layer-7 DoS
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第7层DoS攻击
- en: Cross-site scripting (XSS)
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨站脚本攻击（XSS）
- en: Blacklisting and whitelisting
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 黑名单和白名单
- en: 'A simple approach and fundamental principle in IT security is to allow what
    is really needed. Security is all about access control and keeping track of activity
    with identity. In cyber security, access is granted based on identity and intent.
    Whitelists are identities with good intent and blacklists are identities with
    bad intent. This is a debatable topic and we will discuss it further with regards
    to requirements and implementation:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: IT安全中的一个简单方法和基本原则是只允许真正需要的内容。安全就是访问控制和通过身份追踪活动。在网络安全中，访问是基于身份和意图授予的。白名单是具有良好意图的身份，而黑名单是具有恶意意图的身份。这是一个有争议的话题，我们将根据需求和实施进一步讨论：
- en: '![](Images/27eafffc-3d16-4932-bb63-f6be4ee27ec2.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/27eafffc-3d16-4932-bb63-f6be4ee27ec2.png)'
- en: What is blacklisting?
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是黑名单？
- en: Most of the antivirus suites on the market work with a blacklist approach to
    detecting and preventing viruses and malware. In the 1980s, antivirus was first
    introduced with blacklist. Today, the antivirus industry still follows the same
    principle. This works similar to creating a list of all cyber criminals in the
    world. However, what happens if you miss a few criminals, or if they are new and
    are not on the list? Depending on the IT environment, blacklisted entities might
    extend to users, applications, processes, IP addresses, and organizations known
    to carry threats to an individual or other organization.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 市面上大多数杀毒软件套件都采用黑名单方法来检测和防止病毒及恶意软件。1980年代，杀毒软件首次使用黑名单。如今，杀毒行业仍然遵循这一原则。这就像是创建一个全球所有网络罪犯的名单。然而，如果漏掉了几个罪犯，或者他们是新出现的并且不在名单上，那该怎么办呢？根据IT环境的不同，黑名单中的实体可能包括已知会对个人或其他组织构成威胁的用户、应用程序、进程、IP地址和组织。
- en: Blacklisting delivers almost no value against zero-day threats.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 黑名单几乎对零日威胁毫无价值。
- en: Benefit and disadvantage of blacklisting
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 黑名单的优缺点
- en: The primary advantage of blacklisting is its simplicity. You can exclude known
    threats from the system and the intelligence lies with the software vendor. Its
    effectiveness totally depends on how often the vendor releases or updates the
    known threat database. From a user's point of view, all of the updates are fetched
    automatically. Users do not have an option to differentiate between good and bad
    data traffic until the software says it's bad. The major drawback of blacklisting
    architecture is knowing how to deal with unknown threats. For example, ransomware
    continues to evolve with new patterns and variants that have not been seen before.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 黑名单的主要优势在于其简单性。你可以将已知威胁排除在系统之外，情报掌握在软件供应商手中。其有效性完全取决于供应商发布或更新已知威胁数据库的频率。从用户的角度来看，所有更新都是自动获取的。用户无法区分好坏数据流，直到软件标识为恶意。黑名单架构的主要缺点是如何应对未知威胁。例如，勒索软件不断发展，出现了许多前所未见的新模式和变种。
- en: What is whitelisting?
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是白名单？
- en: Application whitelisting uses the reverse logic. Here, you can create a list
    of trusted entities such as applications, emails, users, trusted partners, services
    and IPs. These are allowed to access IT resources and block everything which seems
    to be unwanted for your business. With whitelisting architecture, you must have
    a tight access control policy and grant appropriate permission to users. Since
    you block all unwanted entities, this reduces the attack surface which gives automatic
    protection from zero-day attacks.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序白名单使用的是反向逻辑。在这里，你可以创建一个受信任实体的名单，例如应用程序、电子邮件、用户、可信伙伴、服务和IP地址。这些实体被允许访问IT资源，而所有看似不必要的内容则被阻止。使用白名单架构时，你必须有严格的访问控制策略，并为用户授予适当的权限。由于你阻止了所有不需要的实体，这样可以减少攻击面，从而自动防御零日攻击。
- en: Benefit and disadvantage of whitelisting
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 白名单的优缺点
- en: The primary goal of whitelisting is to protect high-risk security environments.
    This approach only allows trusted software, applications, users and IPs, which
    drastically reduces intrusion. The main advantage is that nothing comes inside
    the network which is outside of the list, and nothing that is not on the list
    can come inside the network. A good example would be the way the salesforce application
    portal operates. With this, you gain access to an application only for the allowed
    IP range and users. We all know that salesforce is a critical application. This
    does not scale well for a large network or every time you need to add new entries,
    making it tough to manage.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 白名单的主要目标是保护高风险的安全环境。此方法只允许可信的软件、应用程序、用户和IP，这大大减少了入侵的风险。主要优势在于，任何不在列表上的东西都无法进入网络。一个很好的例子是Salesforce应用程序门户的运作方式。通过此方法，你只能从允许的IP范围和用户中访问应用程序。我们都知道，Salesforce是一个关键应用程序。对于大型网络来说，这种方式的扩展性不好，每次需要添加新条目时也很麻烦，因此难以管理。
- en: Which is better?
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哪个更好？
- en: Each approach to security has its advantages and disadvantages. It may sound
    strange, but you need both. A typical business organization which uses a limited
    number of applications and knows about the users and network connections required
    for this application should follow a whitelisting approach. The next step is to
    combine this approach with blacklisting to ensure that if authorized users enter
    the network with a known threat, your network will still be protected. Of course,
    there is less of an administrative effort involved in blacklisting compared to
    whitelisting, and the difference increases with the size of the whitelist. You
    can take a whitelist approach for applications which can be opened from all over
    the world, such as banking web portals and online shopping carts.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 每种安全方法都有其优缺点。听起来可能有些奇怪，但你需要两者。一个典型的商业组织使用有限数量的应用程序，并且了解这些应用程序所需的用户和网络连接，应采用白名单方法。下一步是将此方法与黑名单结合，确保如果授权用户带着已知威胁进入网络，你的网络仍然可以得到保护。当然，相比白名单，黑名单的管理工作量较小，而且随着白名单规模的增大，差距也会更加明显。你可以对那些可以全球访问的应用程序采取白名单方法，比如银行门户网站和在线购物车。
- en: Using HTTPS for everything
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对所有内容使用HTTPS
- en: Around two billion people are connected to the internet all across the globe,
    and the internet world has become the backbone of the species. HTTP is one of
    the most famous protocols which has become critical in today's digital era and
    it is the primary protocol for applications used on computers, tablets, smartphones,
    and many other devices. You should always protect all of your websites with HTTPS,
    even if they don't handle sensitive communications. This is because in today's
    world, there is no such thing as non-sensitive web traffic.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 全球约有二十亿人连接到互联网，互联网世界已成为人类的支柱。HTTP是最著名的协议之一，在今天的数字时代中变得至关重要，它是计算机、平板、智能手机及其他许多设备上应用程序的主要协议。你应该始终用HTTPS保护你所有的网站，即使它们不处理敏感信息。因为在今天的世界中，没有所谓的非敏感网络流量。
- en: Beginning in July 2018 with the release of Chrome 68, Chrome will mark all HTTP
    sites as *not secure*.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 从2018年7月起，随着Chrome 68的发布，Chrome将标记所有HTTP网站为*不安全*。
- en: HTTPS is a very serious and sensitive subject, and in this section we will discuss
    website security.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: HTTPS是一个非常严肃和敏感的话题，在本节中我们将讨论网站安全。
- en: HTTP versus HTTPS
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTTP与HTTPS的比较
- en: '**Hypertext Transfer Protocol** (**HTTP**) is a protocol that allows communications
    between client and server. Most commonly, it is used for transferring data from
    a web server to a browser to view web contents. The main problem is that HTTP
    does not encrypt the data being transmitted and can be snooped by someone else.
    As the first part of the diagram shows, a web server running on service port `80`
    and all the content being transferred between client and server are in plain text.
    In the next section of the diagram, the web service is running on the service
    port `443` and data is being transferred in encrypted mode:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**超文本传输协议**（**HTTP**）是一种允许客户端和服务器之间进行通信的协议。最常见的用途是将数据从网页服务器传输到浏览器，以查看网页内容。主要的问题在于，HTTP不会加密传输的数据，可能会被他人窃听。如图表的第一部分所示，运行在服务端口`80`上的网页服务器以及客户端和服务器之间传输的所有内容都是明文的。在图表的下一部分，网页服务运行在服务端口`443`上，并且数据以加密模式传输：'
- en: '![](Images/2e31c94a-2731-4d41-99f7-1103792bc99d.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/2e31c94a-2731-4d41-99f7-1103792bc99d.png)'
- en: HTTPS is the secure form of HTTP, which simply means that the information being
    exchanged between the browser and web server you are visiting is encrypted. Any
    web servers currently using HTTP can be migrated to HTTPS. However, there is a
    small cost if a **Secure Sockets Layer** (**SSL**) certificate must be purchased.
    HTTPS helps to prevent attackers from hijacking communication sessions between
    your web-server and user browsers when using public infrastructures such as public
    Wi-Fi, ISPs, or hotels.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: HTTPS是HTTP的安全版本，这意味着你访问的浏览器和web服务器之间交换的信息是加密的。目前使用HTTP的任何web服务器都可以迁移到HTTPS。然而，如果必须购买**安全套接字层**（**SSL**）证书，可能会有一定成本。HTTPS有助于防止攻击者在使用公共基础设施（如公共Wi-Fi、互联网服务提供商或酒店）时劫持你的web服务器与用户浏览器之间的通信会话。
- en: Web application security
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web应用安全
- en: Every developer wishes their application could be more secure. This section
    highlights some of the top security considerations and best practices when designing
    or migrating to HTTPS.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 每个开发者都希望他们的应用能够更安全。本节重点介绍了在设计或迁移到HTTPS时的一些顶级安全考虑和最佳实践。
- en: SSL/TLS deployment
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL/TLS部署
- en: Choose a **Certification Authority** (**CA**) that is reliable and serious about
    its certificate business, security and reputation. A reliable CA will also provide
    a wide variety of certificate types and flexible licensing models.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个**认证机构**（**CA**），该机构可靠且严肃对待其证书业务、安全性和声誉。可靠的CA还会提供各种证书类型和灵活的许可模型。
- en: SSL/TLS key size
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSL/TLS密钥大小
- en: It is always preferable to have longer key lengths, but for public-key cryptography
    (asymmetric ciphers), 2048-bit keys have the same sort of property, so longer
    keys are meaningless. **National Institute of Standards and Technology** (**NIST**)
    suggests that a 2048-bit RSA key has a strength of 112 bits, therefore there are
    theoretically two thousand, one hundred and twelve possibilities to crack the
    private key. RSA claims that 1024-bit (asymmetric) keys are likely to be cracked
    sometime between 2006 and 2010, and 2048-bit keys are sufficient until 2030\.
    At the same time, longer key sizes like 4096 significantly decrease server performance,
    which directly impacts browser response time.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 长度更长的密钥总是更为理想，但对于公钥密码学（非对称密码），2048位密钥具有相同的性质，因此更长的密钥没有意义。**国家标准与技术研究院**（**NIST**）建议，2048位RSA密钥的强度相当于112位，因此理论上有2112种可能性来破解私钥。RSA声明，1024位（非对称）密钥可能会在2006年至2010年之间被破解，而2048位密钥足以保持安全直到2030年。同时，像4096位这样的更长密钥会显著降低服务器性能，直接影响浏览器的响应时间。
- en: The NIST recommends 2048-bit keys for RSA.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: NIST建议使用2048位的RSA密钥。
- en: Signing algorithm
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 签名算法
- en: '**Secure Hash Algorithm** (**SHA**) is a hashing algorithm used in secured
    connections to provide the integrity and authenticity of a message to the receiver.
    SHA algorithm is the default hash algorithm set in SSL/TLS certificates. SHA-2
    is a set of hash functions including SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224
    and SHA-512/256\. The most common hash function used is SHA-256\. Generally speaking,
    SHA-2 = SHA-256 and that is the minimum requirement.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全哈希算法**（**SHA**）是一种用于确保连接安全的哈希算法，用于提供消息的完整性和接收方的真实性。SHA算法是SSL/TLS证书中的默认哈希算法。SHA-2是一组哈希函数，包括SHA-224、SHA-256、SHA-384、SHA-512、SHA-512/224和SHA-512/256。最常用的哈希函数是SHA-256。一般来说，SHA-2
    = SHA-256，这也是最低要求。'
- en: '**Secure Hash Algorithm 3** (**SHA-3**) is the latest member of the Secure
    Hash Algorithm family of standards, released by NIST on August 5, 2015\. A wider
    implementation for SHA-3 is probably many years away.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全哈希算法 3**（**SHA-3**）是安全哈希算法系列标准中的最新成员，于2015年8月5日由NIST发布。SHA-3的广泛应用可能还需要许多年。'
- en: Secure protocol
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全协议
- en: Do not use SSL 3.0\. For secure implementation, configure a server and software
    that supports the latest versions of the TLS standards TLS 1.1 and TLS 1.2.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 不要使用SSL 3.0。为了安全实现，配置支持最新版本TLS标准（TLS 1.1和TLS 1.2）的服务器和软件。
- en: Preventing an authentication hacking attack
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防止认证攻击
- en: 'Authentication plays a very critical role in the security of web applications.
    Attackers will try to find passwords or session IDs and get access to the desired
    information. Here are a few ways to prevent an authentication hacking attack:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 认证在web应用安全中扮演着非常关键的角色。攻击者会尝试寻找密码或会话ID，并获得访问所需信息的权限。以下是一些防止认证攻击的方法：
- en: Prevent an automated brute force attack by adding CAPTCHA. However, this is
    not perfect. Along with CAPTCHA, use account lock-down. This is a very effective
    deterrent against brute force attacks.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过添加验证码来防止自动化的暴力破解攻击。然而，这并不完美。除了验证码，还要使用账户锁定功能。这是防范暴力破解攻击的一个非常有效的威慑手段。
- en: Transfer session keys in cookies (do not show session IDs in the URL) and session
    keys should be unpredictable. Showing session IDs with the URL is a method that
    is normally used when cookies are blocked by client side or a fallback method.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Cookies 中传输会话密钥（不要在 URL 中显示会话 ID），并确保会话密钥是不可预测的。将会话 ID 显示在 URL 中通常是当客户端阻止
    Cookies 或作为备用方法时使用的。
- en: Keep the duration shorter for session IDs and ensure that they are rejected
    by the server after logout.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩短会话 ID 的持续时间，并确保在登出后服务器会拒绝它们。
- en: Use two-factor authentication.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用双因素认证。
- en: During a session fixation, the attacker wants you to access your account with
    a Session ID of his choosing. An easy fix for this problem is to not let a client
    choose session IDs.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在会话固定攻击中，攻击者希望你使用他选择的会话 ID 登录账户。解决此问题的一个简单方法是不要让客户端选择会话 ID。
- en: Do not leave your session active once you are done with your activity; ensure
    that you log out at the end of every session. Session logout also forces attackers
    to log out automatically.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦完成操作，切勿保持会话处于活动状态；确保在每次会话结束时登出。会话登出也会迫使攻击者自动登出。
- en: Use cookies securely
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全使用 Cookies
- en: 'Cookies are a set of information stored on the client browser, which are then
    sent to the server with every subsequent request made by the client during the
    session. Cookies are primarily used for authentication and maintaining sessions.
    It becomes very important to secure cookies effectively in order to avoid session
    hijacking. Cookies can be secured by properly setting cookie attributes. These
    attributes are:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Cookies 是存储在客户端浏览器中的一组信息，在客户端每次发出后续请求时都会将这些信息发送到服务器。Cookies 主要用于身份验证和保持会话状态。为了避免会话劫持，确保有效地保护
    Cookies 变得非常重要。可以通过正确设置 Cookie 属性来保护 Cookies。这些属性包括：
- en: Secure
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全
- en: Domain
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 域名
- en: Path
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路径
- en: HTTPOnly
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTPOnly
- en: Expires
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过期
- en: A developer only encrypts the main login page. Other sensitive and non-sensitive
    information is sent to the server in an unencrypted format. Keep in mind that
    cookies are also sent along with these requests. If they are unencrypted then
    this gives an attacker the opportunity to sniff data to steal session information
    from these cookies. To avoid leaking session information to attackers, make sure
    that the cookies are also only transmitted over HTTPS connections, not HTTP connections.
    This can be done with the help of the secure attribute of a cookie. You can also
    play with all other attributes such as HTTPOnly. This protects you from XSS cross
    site scripting, which can steal data from cookies.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员仅对主登录页面进行加密。其他敏感和非敏感信息以未加密的格式发送到服务器。请记住，Cookies 也会与这些请求一起发送。如果这些 Cookies
    没有加密，就会给攻击者提供嗅探数据的机会，从而窃取这些 Cookies 中的会话信息。为了避免会话信息泄露给攻击者，确保 Cookies 也只能通过 HTTPS
    连接进行传输，而非 HTTP 连接。这可以通过 Cookie 的安全属性来实现。你还可以调整其他属性，如 HTTPOnly。这样可以保护你免受 XSS（跨站脚本攻击），防止从
    Cookies 中窃取数据。
- en: Vulnerabilities scan
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 漏洞扫描
- en: With the adoption of digital transformation by businesses and organizations,
    web applications have become a lucrative target for attackers. Web applications
    are often plagued by vulnerabilities and misconfigurations due to poor coding
    and broken hardening policies. Network and security admins must use web application
    security scanners to perform testing on a web application and identify security
    vulnerabilities. Scanners do not access the actual source code, they only perform
    functional testing and try to find security vulnerabilities.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 随着企业和组织采用数字化转型，Web 应用程序已成为攻击者的有利目标。由于编码不当和硬化策略失效，Web 应用程序通常会受到漏洞和错误配置的困扰。网络和安全管理员必须使用
    Web 应用安全扫描器对 Web 应用程序进行测试，并识别安全漏洞。扫描器不会访问实际的源代码，它们仅进行功能测试并尝试寻找安全漏洞。
- en: Server security
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器安全
- en: 'Prepare your server for safe and secure operations. Here are a few steps you
    need to perform:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 为服务器做好安全运行的准备。以下是你需要执行的几个步骤：
- en: Update the server to the latest operating system
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将服务器更新至最新操作系统
- en: Turn on inbuilt firewall
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开启内置防火墙
- en: Enable automatic critical updates for OS security
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用操作系统安全的自动关键更新
- en: Enable logging or integrate with SIEM system
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用日志记录或与 SIEM 系统集成
- en: Introduce a bug bounty program
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引入漏洞赏金计划
- en: Bug bounty programs are incentive-based and result-oriented programs designed
    to encourage security researchers to find the vulnerabilities and security risks
    associated with a product. They are then encouraged to report them to the sponsoring
    organization. These programs are considered highly beneficial as they represent
    a global community of professionals and researchers that are available all the
    time.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞奖励计划是基于激励并以结果为导向的计划，旨在鼓励安全研究人员发现与产品相关的漏洞和安全风险。然后，鼓励他们将这些问题报告给赞助组织。这些计划被认为非常有益，因为它们代表了一个全球的专业人员和研究人员社区，随时可用。
- en: Summary
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: By now, you are familiar with the basics of application security. We have covered
    enough background information in this chapter to understand a multi-layer security
    approach. Although web applications can efficiently exchange information, the
    fact still remains that these applications can be attacked. A number of new security
    threats have also arisen. If not handled properly, these issues could potentially
    pose significant risks to an organization's information technology infrastructure.
    Since it is all about data security, individual data is very important. Consequently,
    it becomes very important for organizations to design a robust web system aligned
    with GDPR to protect users' information.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经熟悉了应用安全的基础知识。我们在这一章中提供了足够的背景信息，帮助你理解多层安全方法。虽然Web应用能够高效地交换信息，但这些应用依然存在被攻击的风险。许多新的安全威胁也随之出现。如果处理不当，这些问题可能对组织的信息技术基础设施构成重大风险。由于涉及到数据安全，个人数据至关重要。因此，设计一个符合GDPR的稳健Web系统以保护用户信息变得尤为重要。
- en: In the next chapter, we will discuss an overall approach for infrastructure
    security and future technology.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论基础设施安全和未来技术的整体方法。
- en: Questions
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which of the following is not a factor in securing the environment against a
    security attack?
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项不是保护环境免受安全攻击的因素？
- en: The education of the attacker
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击者的教育
- en: The system configuration
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统配置
- en: The network architecture
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络架构
- en: The business strategy of the company
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公司的商业策略
- en: The level of access provided to DBA
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库管理员（DBA）提供的访问权限级别
- en: What does the `http` you type at the beginning of any site's address stand for?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在任何网站地址开头输入的`http`代表什么？
- en: Hyper Text Transfer Protocol
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 超文本传输协议
- en: HTML Transfer Technology Process
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: HTML传输技术过程
- en: Hyperspace Terms and Technology Protocol
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 超空间术语与技术协议
- en: Hyperspace Techniques and Technology Progress
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 超空间技术与技术进展
- en: SQL Injection is an attack in which what kind of code is processed to the database
    server?
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQL注入是一种什么样的攻击，处理什么样的代码发送到数据库服务器？
- en: Malicious
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 恶意
- en: Redundant
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 冗余
- en: Clean
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清洁
- en: Non-malicious
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 非恶意
- en: Which of the following is not a security exploit?
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项不是一种安全漏洞？
- en: Eavesdropping
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 窃听
- en: Cross-site scripting
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跨站脚本攻击
- en: Authentication
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 身份验证
- en: SQL Injection
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQL注入
- en: None of the above
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上都不是
- en: Which of the following is the most vulnerable to injection attacks?
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项最容易受到注入攻击？
- en: Session IDs
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会话ID
- en: Registry keys
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册表键值
- en: Network communications
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络通信
- en: SQL queries based on user input
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于用户输入的SQL查询
- en: None of the above are vulnerable to injection attacks
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上都不容易受到注入攻击
- en: Further reading
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 延伸阅读
- en: 'For more information, please refer to the following links:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请参考以下链接：
- en: '[https://www.sans.org/reading-room/whitepapers/analyst/started-web-application-security-36735](https://www.sans.org/reading-room/whitepapers/analyst/started-web-application-security-36735)'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.sans.org/reading-room/whitepapers/analyst/started-web-application-security-36735](https://www.sans.org/reading-room/whitepapers/analyst/started-web-application-security-36735)'
- en: '[https://www.eugdpr.org/](https://www.eugdpr.org/)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.eugdpr.org/](https://www.eugdpr.org/)'
- en: '[https://www.sans.org/reading-room/whitepapers/application/web-application-firewalls-35817](https://www.sans.org/reading-room/whitepapers/application/web-application-firewalls-35817)'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.sans.org/reading-room/whitepapers/application/web-application-firewalls-35817](https://www.sans.org/reading-room/whitepapers/application/web-application-firewalls-35817)'
- en: '[https://www.cisecurity.org/wp-content/uploads/2017/05/SQL-Injection-White-Paper2.pdf](https://www.cisecurity.org/wp-content/uploads/2017/05/SQL-Injection-White-Paper2.pdf)'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.cisecurity.org/wp-content/uploads/2017/05/SQL-Injection-White-Paper2.pdf](https://www.cisecurity.org/wp-content/uploads/2017/05/SQL-Injection-White-Paper2.pdf)'
