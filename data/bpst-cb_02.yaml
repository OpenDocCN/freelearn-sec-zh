- en: Getting to Know the Burp Suite of Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解Burp Suite工具
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下内容：
- en: Setting the Target Site Map
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置目标站点地图
- en: Understanding Message Editor
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解消息编辑器
- en: Repeating with Repeater
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用重复器进行重复
- en: Decoding with Decoder
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用解码器进行解码
- en: Intruding with Intruder
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用入侵者进行入侵
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: This chapter provides overviews of the most commonly used tools within Burp
    Suite. The chapter begins by establishing the Target scope within the Target Site
    Map. This is followed by an introduction to the Message Editor. Then, there will
    be some hands-on recipes using **OWASP Mutillidae II** to get acquainted with
    Proxy, Repeater, Decoder, and Intruder.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了Burp Suite中最常用的工具。该章节首先在目标站点地图中建立目标范围。然后，介绍消息编辑器。接下来，将使用**OWASP Mutillidae
    II**进行一些实际操作，以熟悉代理、重复器、解码器和入侵者。
- en: Software tool requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件工具要求
- en: 'To complete the recipes in this chapter, you will need the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本章的实际操作，您需要以下内容：
- en: Burp Proxy Community or Professional ([https://portswigger.net/burp/](https://portswigger.net/burp/))
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Burp代理社区或专业版（[https://portswigger.net/burp/](https://portswigger.net/burp/)）
- en: The Firefox browser configured to allow Burp to proxy traffic ([https://www.mozilla.org/en-US/firefox/new/](https://www.mozilla.org/en-US/firefox/new/))
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置为允许Burp代理流量的Firefox浏览器（[https://www.mozilla.org/en-US/firefox/new/](https://www.mozilla.org/en-US/firefox/new/)）
- en: Setting the Target Site Map
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置目标站点地图
- en: Now that we have traffic flowing between your browser, Burp, and the OWASP BWA
    virtual machine, we can begin setting the scope of our test. For this recipe,
    we will use the OWASP Mutillidae II link (`http://<Your_VM_Assigned_IP_Address>/mutillidae/`)
    available in the OWASP BWA VM as our target application.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的浏览器、Burp和OWASP BWA虚拟机之间有流量流动，我们可以开始设置我们测试的范围。对于本教程，我们将使用OWASP BWA VM中提供的OWASP
    Mutillidae II链接（`http://<Your_VM_Assigned_IP_Address>/mutillidae/`）作为我们的目标应用程序。
- en: 'Looking more closely at the Target tab, you will notice there are two subtabs
    available: Site map and Scope. From the initial proxy setup between your browser,
    Burp, and the web server, you should now have some URLs, folders, and files shown
    in the Target | Site map tab. You may find the amount of information overwhelming,
    but setting the scope for our project will help to focus our attention better.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 更仔细地查看目标选项卡，您会注意到有两个可用的子选项卡：站点地图和范围。从浏览器、Burp和Web服务器之间的初始代理设置开始，您现在应该在目标|站点地图选项卡中看到一些URL、文件夹和文件。您可能会发现信息量很大，但为我们的项目设置范围将有助于更好地集中我们的注意力。
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Using the Target | Site map and Target | Scope tab, we will assign the URL for
    mutillidae (`http://<Your_VM_Assigned_IP_Address>/mutillidae/`) as the** scope.**
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用目标|站点地图和目标|范围选项卡，我们将为mutillidae（`http://<Your_VM_Assigned_IP_Address>/mutillidae/`）分配URL作为**范围。**
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Execute the following steps to set the Target Site Map:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤设置目标站点地图：
- en: 'Search for the folder `mutillidae` and right-click onAdd to scope. Notice the
    brief highlighting of the Target | Scope subtab, as follows:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索文件夹`mutillidae`，右键单击“添加到范围”。注意目标|范围子选项卡的简要高亮显示，如下所示：
- en: '![](img/00026.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00026.jpeg)'
- en: 'Upon adding the folder `mutillidae` to your scope, you may be presented with
    a Proxy history logging dialog box, as follows. You may choose to avoid collecting
    messages out of your cope by clicking Yes. Or you may choose to continue to have
    the **Proxy HTTP History** table collect any messages passing through Burp, even
    if those messages fall outside the scope you''ve identified. For our purposes,
    we will select **Yes**:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件夹`mutillidae`添加到您的范围后，您可能会看到一个代理历史记录对话框，如下所示。您可以通过单击“是”来避免收集超出范围的消息。或者，您可以选择继续使**代理HTTP历史**表收集通过Burp传递的任何消息，即使这些消息超出了您已识别的范围。对于我们的目的，我们将选择**是**：
- en: '![](img/00027.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00027.jpeg)'
- en: 'Flipping over the Target | Scope tab, you should now see the full URL for the
    OWASP Mutillidae II, shown in the Include in scope table, as follows:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到目标|范围选项卡，您现在应该在包含范围表中看到OWASP Mutillidae II的完整URL，如下所示：
- en: '![](img/00028.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00028.jpeg)'
- en: How it works...
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Message Editor displays detailed information any HTTP message flowing through
    the Proxy listener. After setting up Proxy to capture HTTP traffic, as seen in
    your Target | Site map and Burp Proxy | HTTP history tab, you are able to select
    any single message to reveal the Message Editor. Each editor contains the request
    and response sides of the message, so long as the message is properly proxied
    through Burp.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 消息编辑器显示通过代理侦听器流经的任何HTTP消息的详细信息。设置代理以捕获HTTP流量后，如在目标|站点地图和Burp代理|HTTP历史选项卡中所见，您可以选择任何单个消息以显示消息编辑器。每个编辑器都包含消息的请求和响应方面，只要消息通过Burp正确代理。
- en: Understanding the Message Editor
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解消息编辑器
- en: On almost every tool and tab within Burp Suite that display an HTTP message,
    you will see an editor identifying the request and response. This is commonly
    referred to as the Message Editor. The Message Editor allows viewing and editing
    HTTP requests and responses with specialties.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在Burp Suite中几乎每个显示HTTP消息的工具和选项卡中，您都会看到一个标识请求和响应的编辑器。这通常被称为消息编辑器。消息编辑器允许查看和编辑具有特殊功能的HTTP请求和响应。
- en: 'Within the Message Editor are multiple subtabs. The subtabs for a request message, at
    a minimum, include the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 消息编辑器中有多个子选项卡。请求消息的子选项卡至少包括以下内容：
- en: '**Raw**'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原始**'
- en: '**Headers**'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标头**'
- en: '**Hex**'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**十六进制**'
- en: 'The subtabs for a response message include the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 响应消息的子选项卡包括以下内容：
- en: '**Raw**'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原始**'
- en: '**Headers**'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标头**'
- en: '**Hex**'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**十六进制**'
- en: '**HTML** (sometimes)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTML**（有时）'
- en: '**Render** (sometimes)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**渲染**（有时）'
- en: The Raw tab gives you the message in its raw HTTP form. The Headers tab displays
    HTTP header parameters in tabular format. The parameters are editable, and columns
    can be added, removed, or modified in the table within tools such as Proxy and
    Repeater.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 原始选项卡以原始HTTP形式显示消息。标头选项卡以表格格式显示HTTP标头参数。这些参数是可编辑的，并且可以在工具（如代理和重复器）的表格中添加、删除或修改列。
- en: For requests containing parameters or cookies, the Params tab is present. Parameters
    are editable, and columns can be added, removed, or modified in the table within
    tools such as Proxy and Repeater.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于包含参数或cookie的请求，参数选项卡是存在的。参数是可编辑的，并且可以在工具（如代理和Repeater）中的表格中添加、删除或修改列。
- en: Finally, there's the Hex tab, which presents the message in hexadecimal format;
    it is, in essence, a hex editor. You are permitted to edit individual bytes within
    tools such as Proxy and Repeater, but those values must be given in two-digit
    hexadecimal form, from 00 through FF.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，还有十六进制选项卡，以十六进制格式呈现消息；实质上是一个十六进制编辑器。您可以在工具（如代理和Repeater）中编辑单个字节，但这些值必须以两位十六进制形式给出，从00到FF。
- en: Getting ready
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Let's explore the multiple tabs available in the Message Editor for each request
    and response captured in Burp.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索Burp中捕获的每个请求和响应的消息编辑器中可用的多个选项卡。
- en: How to do it...
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: Ensure you have traffic flowing between your browser, Burp, and the OWASP BWA
    virtual machine.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您的浏览器、Burp和OWASP BWA虚拟机之间有流量流动。
- en: 'Looking at the Target | Site map tab, notice the Message Editor section:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看目标 | 站点地图选项卡，注意消息编辑器部分：
- en: '![](img/00029.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00029.jpeg)'
- en: 'When viewing a request, note that the subtabs available include Raw, Headers,
    and Hex, at a minimum. However, in the case of a request containing parameters
    or cookies, the Params subtab is also available:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看请求时，请注意可用的子选项卡至少包括原始、标头和十六进制。然而，在包含参数或cookie的请求的情况下，参数子选项卡也是可用的：
- en: '![](img/00030.jpeg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00030.jpeg)'
- en: 'The other side of the message is the **Response** tab, containing the **Raw**,
    **Headers**, **Hex** subtabs, and sometimes **HTML** and **Render**. These are
    the various formats provided for the HTTP response to the request. If the content
    is HTML, then the tab will appear. Likewise, the **Render** tab enables HTML display
    as it would be presented in a browser but without any JavaScript executed:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 消息的另一侧是**响应**选项卡，包括**原始**，**标头**，**十六进制**子选项卡，有时还包括**HTML**和**渲染**。这些是提供给HTTP响应的各种格式。如果内容是HTML，那么选项卡将出现。同样，**渲染**选项卡使HTML显示为在浏览器中呈现的样子，但不执行任何JavaScript：
- en: '![](img/00031.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00031.jpeg)'
- en: Repeating with Repeater
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Repeater重复
- en: Repeater allows for slight changes or tweaks to the request, and it is displayed
    in the left-hand window. A **Go** button allows the request to be reissued, and
    the response is displayed in the right-hand window.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Repeater允许对请求进行轻微更改或调整，并显示在左侧窗口中。**Go**按钮允许重新发出请求，并在右侧窗口中显示响应。
- en: Details related to your HTTP request include standard Message Editor details
    such as **Raw**, **Params** (for requests with parameters or cookies), **Headers**,
    and **Hex**.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与您的HTTP请求相关的详细信息包括标准的消息编辑器详细信息，如**原始**，**参数**（对于带有参数或cookie的请求），**标头**和**十六进制**。
- en: Details related to the HTTP Response include standard Message Editor details
    including **Raw**, **Headers**, **Hex**, and, sometimes, **HTML** and **Render**.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 与HTTP响应相关的详细信息包括标准的消息编辑器详细信息，包括**原始**，**标头**，**十六进制**，有时还包括**HTML**和**渲染**。
- en: At the bottom of each panel is a search-text box, allowing the tester to quickly
    find a value present in a message.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个面板的底部都有一个搜索文本框，允许测试人员快速找到消息中存在的值。
- en: Getting ready
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Repeater allows you to manually modify and then re-issue an individual HTTP
    request, analyzing the response that you receive.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Repeater允许您手动修改并重新发出单个HTTP请求，分析您收到的响应。
- en: How to do it...
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'From the **Target** | **Site map** or from **Proxy** | **HTTP history** tabs
    (shown in the following screenshot), right-click a message and select **Send to
    Repeater**:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**目标** | **站点地图**或从**代理** | **HTTP历史**选项卡（如下截图所示）中，右键单击消息，然后选择**发送到Repeater**：
- en: '![](img/00032.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00032.jpeg)'
- en: Switch over to the **Repeater** tab. Note the **HTTP Request** is ready for
    the tester to tweak parameters, and then send the request to the application via
    the **Go** button.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**Repeater**选项卡。注意**HTTP请求**已准备好供测试人员调整参数，然后通过**Go**按钮将请求发送到应用程序。
- en: 'Note the search boxes at the bottom of each panel:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意每个面板底部的搜索框：
- en: '![](img/00033.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00033.jpeg)'
- en: We will use Repeater quite a bit throughout this book. This chapter is just
    an introduction to the Repeater and to understand its purpose.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本书中经常使用Repeater。本章只是对Repeater的介绍，以及了解其目的。
- en: Decoding with Decoder
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用解码器进行解码
- en: '**Burp Decoder** is a tool that allows the tester to convert raw data into
    encoded data or to take encoded data and convert it back to plain text. Decoder
    supports several formats including URL encoding, HTML encoding, Base64 encoding,
    binary code, hashed data, and others. Decoder also includes a built-in hex editor.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**Burp解码器**是一个工具，允许测试人员将原始数据转换为编码数据，或者将编码数据转换回纯文本。解码器支持包括URL编码、HTML编码、Base64编码、二进制代码、哈希数据等在内的多种格式。解码器还包括内置的十六进制编辑器。'
- en: Getting ready
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: As a web penetration test progresses, a tester might happen upon an encoded
    value. Burp eases the decoding process by allowing the tester to send the encoded
    value to Decoder and try the various decoding functions available.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 随着网络渗透测试的进行，测试人员可能会遇到编码值。Burp通过允许测试人员将编码值发送到解码器并尝试各种可用的解码功能来简化解码过程。
- en: How to do it...
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: Let's try to decode the value of the session token PHPSESSID found in the OWASP
    Mutillidae II application. When a user initially browses to the URL (`http://<Your_VM_Assigned_IP_Address>/mutillidae/`),
    that user will be assigned a PHPSESSID cookie. The PHPSESSID value appears to
    be encrypted and then wrapped in base 64 encoding. Using Decoder, we can unwrap
    the value.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试解码在OWASP Mutillidae II应用程序中找到的会话令牌PHPSESSID的值。当用户最初浏览到URL（`http://<Your_VM_Assigned_IP_Address>/mutillidae/`）时，该用户将被分配一个PHPSESSID
    cookie。PHPSESSID值似乎被加密，然后包裹在base 64编码中。使用解码器，我们可以解开该值。
- en: Browse to the `http://<Your_VM_Assigned_IP_Address>/mutillidae/` application.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到`http://<Your_VM_Assigned_IP_Address>/mutillidae/`应用程序。
- en: 'Find the HTTP request you just generated from your browse within the **Proxy**
    | **HTTP history** tab (shown in the next screenshot). Highlight the PHPSESSID
    value, not the parameter name, right-click, and select **Send to Decoder**:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**代理** | **HTTP历史**选项卡中找到您刚刚从浏览器生成的HTTP请求（如下一张截图所示）。突出显示PHPSESSID值，而不是参数名称，右键单击，并选择**发送到解码器**：
- en: '![](img/00034.jpeg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00034.jpeg)'
- en: 'In the **Decoder** tab, in the **Decode as…** drop-down as follows, select
    **Base 64**. Note the results are viewed in the **Hex** editor and are encrypted:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**解码器**选项卡中，在**解码为...**下拉菜单中，选择**Base 64**。注意结果在**Hex**编辑器中查看并且已加密：
- en: '![](img/00035.jpeg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00035.jpeg)'
- en: In this example, we cannot proceed any further. We can confirm the value was,
    indeed, wrapped in Base 64\. However, the value that is unwrapped is encrypted.
    The purpose of this recipe is to show you how you can use Decoder to manipulate
    encoded values.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们无法进一步进行。我们可以确认值确实被包裹在Base 64中。然而，解包的值是加密的。本示例的目的是向您展示如何使用解码器来操作编码的值。
- en: Intruding with Intruder
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Burp Intruder进行攻击
- en: The Burp Intruder allows a tester to brute-force or fuzz specific portions of
    an HTTP message, using customized payloads.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Intruder允许测试人员对HTTP消息的特定部分进行暴力破解或模糊测试，使用定制的负载。
- en: 'To properly set up customized attacks in Intruder, a tester will need to use
    the settings available in the four subtabs of **Intruder**:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确设置Intruder中的定制攻击，测试人员需要使用**Intruder**的四个子选项卡中提供的设置：
- en: '![](img/00036.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00036.jpeg)'
- en: Getting ready
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: A tester may wish to fuzz or brute-force parameter values within a message.
    Burp Intruder eases this process by providing various intruder attack styles,
    payloads, and options.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 测试人员可能希望在消息中模糊测试或暴力破解参数值。Burp Intruder通过提供各种入侵者攻击样式、负载和选项来简化这个过程。
- en: How to do it...
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: Browse to the login screen of Mutillidae and attempt to log into the application.
    For example, type a username of `admin` and a password of `adminpass`.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到Mutillidae的登录界面，并尝试登录应用程序。例如，输入用户名`admin`和密码`adminpass`。
- en: Find the login attempt in the **Proxy** | **HTTP history** tab. Your request
    number (that is, the **#** sign on the left-hand side) will be different from
    the one shown next.  Select the message that captured your attempt to log in.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**代理** | **HTTP历史**选项卡中找到登录尝试。您的请求编号（即左侧的**#**标志）将与下面显示的不同。选择捕获您尝试登录的消息。
- en: 'As the login attempt message is highlighted in the **HTTP history** table,
    right-click the **Request** tab, and select **Send to Intruder**:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当登录尝试消息在**HTTP历史**表中被突出显示时，右键单击**请求**选项卡，并选择**发送到Intruder**：
- en: '![](img/00037.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00037.jpeg)'
- en: Target
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标
- en: 'The Intruder **Target** tab defines your targeted web application. These settings
    are pre-populated for you by Burp:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Intruder的**目标**选项卡定义了您的目标Web应用程序。这些设置由Burp预先为您填充：
- en: '![](img/00038.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00038.jpeg)'
- en: Positions
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 位置
- en: 'The **Positions** tab identifies where the payload markers are to be defined
    within the **Payload** | **Positions** section. For our purposes, click the **Clear
    §** (that is, payload markers) from the right-hand side menu. Manually select
    the password field by highlighting it with your cursor. Now click the **Add §**
    button on the right-hand side menu. You should have the payload markers wrapping
    around the password field as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**位置**选项卡标识出**负载** | **位置**部分中的负载标记的位置。对于我们的目的，从右侧菜单中点击**清除§**（即负载标记）。使用鼠标手动选择密码字段。现在点击右侧菜单中的**添加§**按钮。您应该看到负载标记包裹在密码字段周围，如下所示：'
- en: '![](img/00039.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00039.jpeg)'
- en: Payloads
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 负载
- en: After the **Positions** tab is the **Payloads** tab. The **Payloads** tab identifies
    wordlist values or numbers you wish to be inserted into the positions you identified
    on the previous tab. There are several sections within the **Payloads** tab, including
    **Payload Sets**, **Payload Options**, **Payload Processing**, and **Payload Encoding**.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**位置**选项卡之后是**负载**选项卡。**负载**选项卡标识出您希望插入到上一个选项卡中标识的位置的单词列表值或数字。**负载**选项卡中有几个部分，包括**负载集**、**负载选项**、**负载处理**和**负载编码**。'
- en: Payload Sets
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 负载集
- en: '**Payload Sets** allows for the setting of the number of payloads as well as
    the type. For our purposes, we will use the default settings for Sniper, allowing
    us to use one payload with a **Payload type** of **Simple list**:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**负载集**允许设置负载的数量和类型。对于我们的目的，我们将使用Sniper的默认设置，允许我们使用一个**负载类型**为**简单列表**的负载：'
- en: '![](img/00040.jpeg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00040.jpeg)'
- en: Payload Options
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 负载选项
- en: In the **Payload Options** section, a tester can configure a custom payload
    or load a preconfigured one from a file.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在**负载选项**部分，测试人员可以配置自定义负载或从文件中加载预配置的负载。
- en: 'For our purposes, we will add one value to our payload. In the text box, type
    `admin`, and then click the **Add** button to create our custom payload:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了我们的目的，我们将向我们的负载添加一个值。在文本框中输入`admin`，然后单击**添加**按钮来创建我们的自定义负载：
- en: '![](img/00041.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00041.jpeg)'
- en: Payload Processing
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 负载处理
- en: 'Payload Processing is useful when configuring special rules to be used while
    Intruder substitutes payloads into payload marker positions. For this recipe,
    we do not need any special payload-processing rules:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 负载处理在配置特殊规则用于替换负载标记位置时非常有用。对于这个示例，我们不需要任何特殊的负载处理规则：
- en: '![](img/00042.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00042.jpeg)'
- en: Payload Encoding
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 负载编码
- en: Payload Encoding is applied to the payload value prior to sending the request
    to the web server. Many web servers may block offensive payloads (for example,
    `<script>` tags), so the encoding feature is a means to circumvent any blacklist
    blocking.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 负载编码是在将请求发送到Web服务器之前应用于负载值的。许多Web服务器可能会阻止攻击性的负载（例如`<script>`标签），因此编码功能是绕过任何黑名单阻止的手段。
- en: 'For the purpose of this recipe, leave the default box checked:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 出于本示例的目的，保持默认框被选中：
- en: '![](img/00043.jpeg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00043.jpeg)'
- en: Options
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选项
- en: 'Finally, the **Intruder** | **Options** tab provides attack table customizations,
    particularly related to responses captured such as specific error messages. There
    are several sections within the **Intruder** | **Options** tab, including **Request
    Headers**, **Request Engine**, **Attack Results**, **Grep-Match**, **Grep-Extract**,
    **Grep - Payloads**, and **Redirections**:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，**Intruder** | **选项**选项卡提供了攻击表的自定义设置，特别是与捕获的响应相关的特定错误消息。**Intruder** | **选项**选项卡中有几个部分，包括**请求头**、**请求引擎**、**攻击结果**、**Grep-Match**、**Grep-Extract**、**Grep
    - Payloads**和**重定向**：
- en: '![](img/00044.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00044.jpeg)'
- en: Request Headers
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 请求头
- en: '**Request Headers** offers configurations specific to header parameters while
    Intruder is running attacks. For the purpose of this recipe, leave the default
    boxes checked:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**请求头**提供了在Intruder运行攻击时特定于头部参数的配置。为了这个食谱的目的，保持默认复选框选中：'
- en: '![](img/00045.jpeg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00045.jpeg)'
- en: Request Engine
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 请求引擎
- en: '**Request Engine** should be modified if a tester wishes to create less noise
    on the network while running Intruder. For example, a tester can throttle attack
    requests using variable timings so they seem more random to network devices. This
    is also the location for lowering the number of threads Intruder will run against
    the target application.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**请求引擎**应该被修改，如果测试人员希望在运行Intruder时在网络上减少噪音。例如，测试人员可以使用可变的时间间隔来限制攻击请求，使它们对网络设备看起来更随机。这也是降低Intruder对目标应用程序运行的线程数的位置。'
- en: 'For purpose of this recipe, leave the default setting as-is:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个食谱的目的，保持默认设置不变：
- en: '![](img/00046.jpeg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00046.jpeg)'
- en: Attack Results
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击结果
- en: After starting the attack, Intruder creates an attack table. The **Attack Results**
    section offers some settings around what is captured within that table.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 开始攻击后，Intruder创建了一个攻击表。**攻击结果**部分提供了一些关于在表中捕获的内容的设置。
- en: 'For the purpose of this recipe, leave the default settings as-is:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个食谱的目的，保持默认设置不变：
- en: '![](img/00047.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00047.jpeg)'
- en: Grep - Match
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Grep - Match
- en: '**Grep - Match** is a highly useful feature that, when enabled, creates additional
    columns in the attack table results to quickly identify errors, exceptions, or
    even a custom string within the response.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**Grep - Match**是一个非常有用的功能，当启用时，会在攻击表结果中创建额外的列，以快速识别错误、异常，甚至是响应中的自定义字符串。'
- en: 'For the purpose of this recipe, leave the default settings as-is:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个食谱的目的，保持默认设置不变：
- en: '![](img/00048.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00048.jpeg)'
- en: Grep - Extract
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Grep - Extract
- en: '**Grep - Extract**, when enabled, is another option for adding a column in
    the attack table whose label is specific to a string found in the response. This
    option differs from **Grep - Match**, since Grep - Extract values are taken from
    an actual  HTTP response, as opposed to an arbitrary string.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**Grep - Extract**，当启用时，是在攻击表中添加一个列的另一个选项，其标签是在响应中找到的特定字符串。这个选项不同于**Grep -
    Match**，因为Grep - Extract的值是从实际的HTTP响应中取得的，而不是任意字符串。'
- en: 'For the purpose of this recipe, leave the default settings as-is:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个食谱的目的，保持默认设置不变：
- en: '![](img/00049.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00049.jpeg)'
- en: Grep - Payloads
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Grep - Payloads
- en: '**Grep - Payloads** provides a tester the ability to add columns in the attack
    table in which responses contain reflections of payloads.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**Grep - Payloads**提供了测试人员在攻击表中添加列的能力，其中响应包含负载的反射。'
- en: 'For the purpose of this recipe, leave the default settings as-is:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个食谱的目的，保持默认设置不变：
- en: '![](img/00050.jpeg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00050.jpeg)'
- en: Redirections
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重定向
- en: '**Redirections** instructs Intruder to never, conditionally, or always follow
    redirections. This feature is very useful, particularly when brute-forcing logins,
    since a 302 redirect is generally an indication of entry.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**重定向**指示Intruder永远不要、有条件地或总是跟随重定向。这个功能非常有用，特别是在暴力破解登录时，因为302重定向通常表示进入的迹象。'
- en: 'For the purpose of this recipe, leave the default settings as-is:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个食谱的目的，保持默认设置不变：
- en: '![](img/00051.jpeg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.jpeg)'
- en: Start attack button
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始攻击按钮
- en: 'Finally, we are ready to start Intruder. On either the **Payloads** or the **Options**
    tabs, click the **Start attack** button to begin:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们准备开始Intruder。在**负载**或**选项**选项卡上，单击**开始攻击**按钮开始：
- en: '![](img/00052.jpeg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00052.jpeg)'
- en: When the attack has started, an attack results table will appear. This allows
    the tester to review all requests using the payloads within the payload marker
    positions. It also allows us to review of all responses and columns showing **Status**,
    **Error**, **Timeout**, **Length**, and **Comment**.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击开始后，将出现一个攻击结果表。这允许测试人员使用负载标记位置内的负载来审查所有请求。它还允许我们审查所有响应和显示**状态**、**错误**、**超时**、**长度**和**注释**的列。
- en: 'For the purpose of this recipe, we note that the payload of admin in the `password`
    parameter produced a status code of `302`, which is a redirect. This means we
    logged into the Mutillidae application successfully:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 为了这个食谱的目的，我们注意到在`password`参数的admin负载产生了状态码`302`，这是一个重定向。这意味着我们成功登录了Mutillidae应用程序：
- en: '![](img/00053.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.jpeg)'
- en: 'Looking at **Response** | **Render** within the attack table allows us to see
    how the web application responded to our payload. As you can see, we are successfully
    logged in as an admin:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在攻击表中查看**响应** | **渲染**，可以让我们看到Web应用程序如何响应我们的负载。正如你所看到的，我们成功地以管理员身份登录了：
- en: '![](img/00054.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00054.jpeg)'
