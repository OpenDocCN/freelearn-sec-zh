- en: 'Chapter 3: Windows Memory Acquisition'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章：Windows 内存获取
- en: You already know some theory, but as you may know, in essence, there's no difference
    between *theory* and *practice*, but in reality *there is*. So, let's move on
    and dive into some practical tasks, starting with **Windows memory acquisition**,
    as Windows is the most widely used operating system.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经掌握了一些理论知识，但正如你所知道的，理论和实践本质上是没有区别的，但实际上*是有差别的*。所以，让我们继续深入实际任务，从**Windows 内存获取**开始，因为
    Windows 是最广泛使用的操作系统。
- en: What does it mean? It's the most common target for threat actors! It also means
    that you will face it very often during your incident response engagements (and
    some criminal cases, of course). Therefore it's a very good idea to start from
    learning how to acquire memory from a Windows host.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着什么？它是威胁行为者最常见的目标！这也意味着在你处理事件响应时，你会经常遇到它（当然，也包括一些刑事案件）。因此，了解如何从 Windows 主机获取内存是一个非常好的起点。
- en: This chapter will introduce you to the four most common tools used for Windows
    memory acquisition, and—of course—you'll learn how to use them and obtain memory
    images for further analysis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向你介绍用于 Windows 内存获取的四种最常见工具，当然，你还将学习如何使用它们并获取内存镜像，以供后续分析。
- en: 'We''ll cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论以下主题：
- en: Understanding Windows memory-acquisition issues
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 Windows 内存获取问题
- en: Preparing for Windows memory acquisition
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备进行 Windows 内存获取
- en: Acquiring memory with **FTK Imager**
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **FTK Imager** 获取内存
- en: Acquiring memory with **WinPmem**
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **WinPmem** 获取内存
- en: Acquiring memory with **Belkasoft Live RAM Capturer**
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **Belkasoft Live RAM Capturer** 获取内存
- en: Acquiring memory with **Magnet RAM Capture**
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **Magnet RAM Capture** 获取内存
- en: Understanding Windows memory-acquisition issues
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Windows 内存获取问题
- en: In the previous chapter, we covered the general concepts of memory dumping in
    detail and discussed possible issues. However, each operating system has its particular
    peculiarities. The main peculiarity related to memory extraction in Windows is
    the access to **random-access memory** (**RAM**), but first things first.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们详细介绍了内存转储的基本概念，并讨论了可能出现的问题。然而，每个操作系统都有其特殊性。与 Windows 内存提取相关的主要特点是访问**随机访问内存**（**RAM**），但首先还是从基础开始。
- en: Remember that earlier, we talked about **device memory**, which is the area
    of physical memory that is reserved for devices? Such devices include video cards,
    audio cards, Peripheral Component Interconnect (**PCI**) cards, and so on. Their
    direct access to the physical memory is vital for their qualitative and effective
    operation. And do you remember what trying to access device memory can lead to?
    That's right—it can lead to *unpredictable consequences*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 还记得我们之前谈到过的**设备内存**吗？那是为设备保留的物理内存区域。这些设备包括显卡、声卡、外部组件互联（**PCI**）卡等等。它们直接访问物理内存对其高效且质量良好的运行至关重要。你还记得尝试访问设备内存可能会导致什么吗？没错——它可能会导致*不可预测的后果*。
- en: The thing is, attempts to access or write to device memory are translated into
    requests sent to the corresponding device. However, different devices may react
    differently to an attempt to interact with a piece of physical memory reserved
    by them. In some cases, this can lead to changes in the critical data on which
    a device's functionality depends. From a forensic point of view, however, the
    consequence can be the loss of significant evidence, or, in the worst case, the
    freezing or shutting down of the system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，尝试访问或写入设备内存会被转换为发送到相应设备的请求。然而，不同的设备可能会对试图与它们保留的物理内存交互的尝试做出不同的反应。在某些情况下，这可能会导致依赖于设备功能的关键信息发生变化。然而，从法医角度来看，这种后果可能是重要证据的丧失，或者在最坏的情况下，系统的冻结或关闭。
- en: Access to physical memory in the Windows operating system is implemented through
    a `\Device\PhysicalMemory` kernel object. Previously, this file was easy to work
    with, since it was fully accessible to the user-space programs. However, if we
    consider all the preceding information, it is quite clear that this approach was
    not entirely safe.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 操作系统中，访问物理内存是通过 `\Device\PhysicalMemory` 内核对象实现的。以前，这个文件很容易操作，因为它对用户空间程序完全可访问。然而，如果我们考虑之前的信息，很明显这种方法并不是完全安全的。
- en: This has all changed with the release of **Windows Server 2003 Service Pack
    2 (SP2)**. Of course, user-space programs can still read this file, but write
    access is now possible exclusively from the kernel space. Now, acquisition tools
    must work at the kernel level or use special drivers to create memory dumps.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切都随着**Windows Server 2003 Service Pack 2 (SP2)**的发布发生了变化。当然，用户空间程序仍然可以读取这个文件，但写入访问现在只能从内核空间进行。因此，获取工具必须在内核级别工作，或者使用特殊的驱动程序来创建内存转储。
- en: Another thing that has influenced the change in memory extraction tools is the
    widespread use of *virtualization*. This has resulted in a system crash when such
    tools are run on systems with **Virtual Secure Mode** (**VSM**) enabled. Nevertheless,
    the latest versions of the most used tools have already managed to deal with this
    issue.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个影响内存提取工具变化的因素是*虚拟化*的广泛使用。这导致当在启用**虚拟安全模式**（**VSM**）的系统上运行这些工具时，系统会崩溃。尽管如此，最常用工具的最新版本已经成功解决了这个问题。
- en: Despite these changes, the number of tools for Windows memory acquisition is
    still large.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些变化发生了，但用于 Windows 内存获取的工具数量仍然很大。
- en: Let's look at some of the most commonly used tools in the next sections.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在接下来的章节中看一下最常用的一些工具。
- en: Preparing for Windows memory acquisition
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备 Windows 内存获取
- en: Before we start to work with the imaging tools, we need to prepare a couple
    of things. Firstly, you need to find a flash drive that you will use to store
    both the tool itself and the created memory dump, so make sure it has enough space.
    Secondly, you need to sanitize it. This means that you need to *forensically wipe*
    the drive.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用映像工具之前，我们需要准备一些东西。首先，你需要找到一个闪存驱动器，用来存储工具本身和创建的内存转储，所以确保它有足够的空间。其次，你需要对它进行清理。这意味着你需要*法证擦除*驱动器。
- en: Important note
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: During the standard deletion process, metadata related to the *deleted* files
    is changed and the space where these files are located is marked as *available
    for reuse*. In other words, after deletion, the content of the files will reside
    on the drive and can be recovered. The formatting process is quite similar. A
    few certain master files are rewritten, but information can still be obtained
    from the drive. Thus, to delete files securely, you need to overwrite the content
    with zeros or random data.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在标准删除过程中，与*已删除*文件相关的元数据会被更改，并且这些文件所在的空间会被标记为*可供重用*。换句话说，删除后，文件的内容仍会保留在驱动器上，并且可以恢复。格式化过程也非常相似。一些特定的主文件会被重写，但信息仍然可以从驱动器中提取。因此，要安全地删除文件，你需要用零或随机数据覆盖内容。
- en: 'To wipe drives, different tools and methods can be used, depending on the type
    of removable media. We already decided to use a flash drive; in this case, there
    are two quite effective and fast options, outlined as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要擦除驱动器，可以根据可移动介质的类型使用不同的工具和方法。我们已经决定使用闪存驱动器；在这种情况下，有两种非常有效且快速的选项，概述如下：
- en: Write a pre-prepared file proportional to the entire volume of the flash drive.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入一个与闪存驱动器整个容量成比例的预先准备好的文件。
- en: Use the **Secure Erase** option.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**Secure Erase（安全擦除）**选项。
- en: Unfortunately, not all vendors have their own utilities that allow you to securely
    wipe their drives with the Secure Erase option. You can check this information
    on the official web page of the vendor of your flash drive.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，并不是所有厂商都有自己的工具，允许你使用安全擦除选项来安全地擦除他们的驱动器。你可以在闪存驱动器厂商的官方网站上查看这些信息。
- en: When you have your flash drive sanitized, you can add some imaging tools there.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的闪存驱动器被清理干净后，你可以在其中添加一些映像工具。
- en: Acquiring memory with FTK imager
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 FTK Imager 获取内存
- en: '**AccessData FTK Imager** is one of the most popular free tools. It''s commonly
    used both by forensic analysts and incident responders for disk image previews,
    or even live response, so it can be used not only for bit-by-bit imaging, but
    also for creating custom content images and, of course, memory images. Let''s
    get a closer look! Follow these next steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**AccessData FTK Imager**是最受欢迎的免费工具之一。它通常被法证分析师和事件响应人员用来查看磁盘映像预览，甚至进行实时响应，因此它不仅可以用于按位映像，还可以用于创建自定义内容映像，当然也可以用于创建内存映像。让我们更详细地了解一下！请按照以下步骤操作：'
- en: To get **FTK Imager**, go to the *AccessData* official web page at [https://accessdata.com/products-services/forensic-toolkit-ftk/ftkimager](https://accessdata.com/products-services/forensic-toolkit-ftk/ftkimager).
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取**FTK Imager**，请访问*AccessData*的官方网站：[https://accessdata.com/products-services/forensic-toolkit-ftk/ftkimager](https://accessdata.com/products-services/forensic-toolkit-ftk/ftkimager)。
- en: Choose **Products & Services** | **FTK® Imager**. Follow the **Download FTK
    Imager today!** link and press **Download now**. You will be asked to fill in
    a short form with your contact information. After that, a link will be sent to
    the email address you specified.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**产品与服务** | **FTK® Imager**。点击**立即下载 FTK Imager！**链接并按下**立即下载**。你将被要求填写一份包含你联系信息的简短表格。之后，一个链接将发送到你提供的电子邮件地址。
- en: Now, you need to install FTK Imager on your flash drive. You can use the **InstallShield
    Wizard** tool, which provides step-by-step installation instructions.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你需要在闪存驱动器上安装 FTK Imager。你可以使用**InstallShield 向导**工具，它提供了逐步安装说明。
- en: 'To create memory dumps, FTK Imager loads a device driver into the kernel and
    starts to subsequently read memory through mapping the `\Device\PhysicalMemory`
    kernel object. From a user''s point of view, the process of memory acquisition
    with FTK Imager is very simple and intuitive. Follow these instructions to create
    your memory image:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建内存转储，FTK Imager 会将设备驱动程序加载到内核中，并随后通过映射 `\Device\PhysicalMemory` 内核对象来读取内存。从用户的角度来看，使用
    FTK Imager 进行内存获取非常简单直观。按照以下步骤创建你的内存映像：
- en: 'Connect the flash drive to the target system and run FTK Imager. The main window
    will appear, as shown here:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将闪存驱动器连接到目标系统，并运行 FTK Imager。主窗口将出现，如下所示：
- en: '![Figure 3.1 – FTK Imager main window'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.1 – FTK Imager 主窗口'
- en: '](img/Fig_3.1.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.1.jpg)'
- en: Figure 3.1 – FTK Imager main window
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – FTK Imager 主窗口
- en: 'Go to **File** and click on **Capture Memory…**, or find the associated icon
    on the toolbar. The following screenshot illustrates the former option:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入**文件**，点击**捕获内存…**，或者在工具栏上找到相关图标。下图展示了前一种选项：
- en: '![Figure 3.2 – FTK Imager File menu'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.2 – FTK Imager 文件菜单'
- en: '](img/Fig_3.2.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.2.jpg)'
- en: Figure 3.2 – FTK Imager File menu
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – FTK Imager 文件菜单
- en: 'In the dialog window, click `memdump.mem`. We also recommend you check the
    **Include pagefile** checkbox, as shown here:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在对话框中，点击 `memdump.mem`。我们还建议你勾选**包括页面文件**复选框，如下所示：
- en: '![Figure 3.3 – Memory Capture dialog window'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.3 – 内存捕获对话框窗口'
- en: '](img/Fig_3.3.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.3.jpg)'
- en: Figure 3.3 – Memory Capture dialog window
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – 内存捕获对话框窗口
- en: 'Press the **Capture Memory** button. As a result, you will see a dialog like
    the one in the following screenshot, illustrating the progress of dump creation:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下**捕获内存**按钮。结果，你将看到如下所示的对话框，展示了转储创建的进度：
- en: '![Figure 3.4 – Imaging progress'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.4 – 映像进度'
- en: '](img/Fig_3.4.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.4.jpg)'
- en: Figure 3.4 – Imaging progress
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – 映像进度
- en: After a few minutes of waiting, we get our memory dump, which is a file with
    a `.mem` extension. The image is ready to be analyzed with your tool of choice—for
    example, the **Volatility Framework**.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 等待几分钟后，我们获得了内存转储，这是一个 `.mem` 扩展名的文件。该映像已准备好使用你选择的工具进行分析——例如，**Volatility 框架**。
- en: FTK Imager is a powerful tool with a wide range of functionality, but we want
    you to have a choice, so let's look at some other tools.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: FTK Imager 是一款功能强大的工具，具有广泛的功能，但我们希望你有选择权，所以让我们看看其他一些工具。
- en: Acquiring memory with WinPmem
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 WinPmem 获取内存
- en: '**WinPmem** was originally developed by Google and was a part of the **Rekall
    Framework**, but has now been released as a standalone memory acquisition tool.
    The tool supports a wide range of Windows versions—from **XP** to **10**—and has
    standalone executables both for 32- and 64-bit systems.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**WinPmem**最初由谷歌开发，并作为**Rekall 框架**的一部分发布，但现在已作为独立的内存获取工具发布。该工具支持从**XP**到**10**的各种
    Windows 版本，并且为 32 位和 64 位系统提供独立的可执行文件。'
- en: 'WinPmem utilizes three independent methods to create memory dumps, outlined
    as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: WinPmem 使用三种独立的方法来创建内存转储，具体如下：
- en: '**Page table entry** (**PTE**) remapping'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页面表项** (**PTE**) 重映射'
- en: Use of the `MMMapIoSpace` kernel **application programming interface** (**API**)
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `MMMapIoSpace` 内核 **应用程序编程接口** (**API**)
- en: Traditional `\Device\PhysicalMemory` mapping
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传统的 `\Device\PhysicalMemory` 映射
- en: The first of the preceding methods is used by default as it is considered the
    most stable. However, users can choose any other method manually.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 上述方法中的第一种方法默认使用，因为它被认为是最稳定的。然而，用户可以手动选择其他任何方法。
- en: To download this tool, go to the `WinPmem` repository on the *Velocidex* GitHub
    page, at [https://github.com/Velocidex/WinPmem](https://github.com/Velocidex/WinPmem).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载此工具，请访问 *Velocidex* GitHub 页面上的 `WinPmem` 仓库，[https://github.com/Velocidex/WinPmem](https://github.com/Velocidex/WinPmem)。
- en: 'The page looks like this:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 页面如下所示：
- en: '![Figure 3.5 – WinPmem GitHub repository'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.5 – WinPmem GitHub 仓库'
- en: '](img/Fig_3.5.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.5.jpg)'
- en: Figure 3.5 – WinPmem GitHub repository
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – WinPmem GitHub 仓库
- en: On the right side of the page, go to `winpmem_mini_x64.exe`. Copy this executable
    to your flash drive. This program does not require any additional dependencies
    and is self-contained. Also, you don't need to worry about x64 and x86 differences.
    WinPmem will load the correct driver automatically.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面的右侧，找到`winpmem_mini_x64.exe`。将该可执行文件复制到你的闪存驱动器。此程序无需任何额外的依赖项，且是独立运行的。同时，你不必担心
    x64 和 x86 的区别，WinPmem 会自动加载正确的驱动程序。
- en: 'The following instructions will help you to acquire memory with WinPmem:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下说明将帮助你使用 WinPmem 获取内存：
- en: 'Connect the flash drive to the target system. Run `cmd` or `PowerShell` as
    `Administrator`, which is shown in the following screenshot:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将闪存驱动器连接到目标系统。以`管理员`身份运行`cmd`或`PowerShell`，如下图所示：
- en: '![Figure 3.6 – Running PowerShell from the search box'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.6 – 从搜索框运行 PowerShell'
- en: '](img/Fig_3.6.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.6.jpg)'
- en: Figure 3.6 – Running PowerShell from the search box
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 从搜索框运行 PowerShell
- en: 'Move to your flash drive and run `winpmem_mini_x64.exe` with the name of the
    memory dump as the *argument*. As shown in the following screenshot, `memdump.raw`
    is the argument provided:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移动到你的闪存驱动器，并以内存转储文件名作为*参数*运行`winpmem_mini_x64.exe`。如下面的截图所示，`memdump.raw`是提供的参数：
- en: '![Figure 3.7 – WinPmem execution'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.7 – WinPmem 执行'
- en: '](img/Fig_3.7.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.7.jpg)'
- en: Figure 3.7 – WinPmem execution
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – WinPmem 执行
- en: 'During the memory-dump process, you will be able to see all the related information,
    as shown in the following screenshot:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内存转储过程中，你将能够看到所有相关信息，如下图所示：
- en: '![Figure 3.8 – Dump creation with WinPmem'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.8 – 使用 WinPmem 创建转储'
- en: '](img/Fig_3.8.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.8.jpg)'
- en: Figure 3.8 – Dump creation with WinPmem
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8 – 使用 WinPmem 创建转储
- en: After a while, we will get a raw memory dump with the specified name.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一会儿后，我们将得到一个指定名称的原始内存转储。
- en: This is how we can extract Windows memory using PowerShell and WinPmem, but
    there is more to this. Let's add a couple more tools to our collection.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们如何使用 PowerShell 和 WinPmem 提取 Windows 内存的方法，但这还不止这些。让我们再添加几个工具到我们的工具集。
- en: Acquiring memory with Belkasoft RAM Capturer
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Belkasoft RAM Capturer 获取内存
- en: '**Belkasoft RAM Capturer** is another free tool for memory acquisition. As
    with the previous tools outlined, it uses kernel drivers to extract the physical
    memory and create dumps. This tool is compatible with all 32- and 64-bit versions
    of Windows, including Windows **XP**, Windows **Vista**, Windows **7** and **8**,
    Server 2003 and 2008, and Windows **10**.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**Belkasoft RAM Capturer**是另一个免费的内存获取工具。与前述工具类似，它使用内核驱动程序提取物理内存并创建转储。该工具兼容所有
    32 位和 64 位版本的 Windows，包括 Windows **XP**、Windows **Vista**、Windows **7** 和 **8**、Server
    2003 和 2008 以及 Windows **10**。'
- en: 'You will need to take the following steps:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要采取以下步骤：
- en: To get this tool, go to the **Download** tab on the official *Belkasoft* web
    page at https://belkasoft.com/.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取此工具，请访问官方*Belkasoft*网页的**下载**标签：https://belkasoft.com/。
- en: Choose `x64` and `x86` folders, which should be extracted to a flash drive.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`x64`和`x86`文件夹，这些文件夹应当被提取到闪存驱动器中。
- en: 'This time, you need to find out if you''re dealing with an x64 or an x86 system.
    To do so, use the `system` and run the **System Information** application, as
    shown in the following screenshot:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这次，你需要找出你正在处理的是 x64 还是 x86 系统。为此，使用`system`并运行**系统信息**应用程序，如下图所示：
- en: '![Figure 3.9 – Running System Information from the search box'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.9 – 从搜索框运行系统信息'
- en: '](img/Fig_3.9.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.9.jpg)'
- en: Figure 3.9 – Running System Information from the search box
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9 – 从搜索框运行系统信息
- en: 'In the opened window, search for **System Type** under **System Summary**,
    as shown in the following screenshot. The **x64-based PC** value identifies 64-bit
    systems:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在打开的窗口中，搜索**系统类型**，位于**系统摘要**下，如下图所示。**x64 基础 PC**值表示 64 位系统：
- en: '![Figure 3.10 – System-type detection'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.10 – 系统类型检测'
- en: '](img/Fig_3.10.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.10.jpg)'
- en: Figure 3.10 – System-type detection
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.10 – 系统类型检测
- en: 'In the case of an `x64` folder; otherwise, choose another one from `x86`. You
    are ready to create a memory dump. Please take the following steps:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是`x64`文件夹，请选择它；否则，选择`x86`文件夹中的其他一个。你准备好创建内存转储了。请按照以下步骤操作：
- en: Connect the flash drive to the target system and run the `RamCapture` executable.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将闪存驱动器连接到目标系统并运行`RamCapture`可执行文件。
- en: Type the output folder path in the specified field and press the **Capture!**
    button.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在指定字段中输入输出文件夹路径，并按下**Capture!**按钮。
- en: 'The process of dump creation will look like this:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 转储创建过程将如下所示：
- en: '![Figure 3.11 – Imaging with Belkasoft RAM Capturer'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.11 – 使用 Belkasoft RAM Capturer 进行成像'
- en: '](img/Fig_3.11.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.11.jpg)'
- en: Figure 3.11 – Imaging with Belkasoft RAM Capturer
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.11 – 使用 Belkasoft RAM Capturer 进行成像
- en: Finally, we get the memory dump with a `.mem` extension. By default, the filename
    consists of the acquisition date, but you can always replace it with something
    more descriptive.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我们得到一个 `.mem` 扩展名的内存转储。默认情况下，文件名由采集日期组成，但你可以将其替换为更具描述性的名称。
- en: You can now create memory dumps using three different tools. Let's take a look
    at the last tool, but not the least one.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用三种不同的工具创建内存转储。让我们来看看最后一个工具，虽然它并不是最不重要的。
- en: Acquiring memory with Magnet RAM Capture
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Magnet RAM Capture 获取内存
- en: '**Magnet Forensics** also released its own free memory acquisition tool, called
    **Magnet RAM Capture**, which can be used to acquire memory from Windows systems.
    To extract the physical memory, Magnet RAM Capture uses a kernel-mode driver.
    It creates memory dumps in raw format, which is supported by both open source
    memory forensic tools and full-featured digital forensic suites.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**Magnet Forensics** 也发布了自己的免费内存获取工具，名为 **Magnet RAM Capture**，它可以用来从 Windows
    系统中获取内存。为了提取物理内存，Magnet RAM Capture 使用内核模式驱动程序。它创建的是原始格式的内存转储，这种格式既可以被开源内存取证工具支持，也可以被功能完整的数字取证套件支持。'
- en: 'To download Magnet RAM Capture, take the following steps:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 Magnet RAM Capture 时，按照以下步骤操作：
- en: Go to the **RESOURCES** tab and then the **FREE TOOLS** tab on the official
    *Magnet Forensics* web page at [https://www.magnetforensics.com/](https://www.magnetforensics.com/).
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问官方 *Magnet Forensics* 网页的 **RESOURCES** 标签页，然后点击 **FREE TOOLS** 标签页：[https://www.magnetforensics.com/](https://www.magnetforensics.com/)。
- en: Choose `MRCv120.exe` to your flash drive.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 `MRCv120.exe` 文件到你的闪存驱动器。
- en: 'Dumping memory with Magnet RAM Capture is very easy and straightforward, as
    the following instructions show:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Magnet RAM Capture 进行内存转储非常简单，按照以下步骤操作即可：
- en: Connect the flash drive to the target system and run `MRCv120.exe` as Administrator.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将闪存驱动器连接到目标系统，并以管理员身份运行 `MRCv120.exe`。
- en: Choose a **Segment size** option in the drop-down menu (the default is **Don't
    Split**, and it's the recommended mode).
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下拉菜单中选择一个 **Segment size** 选项（默认值为 **Don't Split**，这是推荐的模式）。
- en: Click on the **Browse…** button and choose the memory image filename and location.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Browse…** 按钮，选择内存镜像的文件名和保存位置。
- en: Click on the **Start** button.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Start** 按钮。
- en: 'The imaging process will start; you should wait for the progress bar to get
    to `100%`. Here is an example of an imaging process with Magnet RAM Capture:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 成像过程将开始；你应该等待进度条达到 `100%`。这是使用 Magnet RAM Capture 进行成像过程的一个例子：
- en: '![Figure 3.12 – Imaging process with Magnet RAM Capture'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.12 – 使用 Magnet RAM Capture 进行成像过程'
- en: '](img/Fig_3.12.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig_3.12.jpg)'
- en: Figure 3.12 – Imaging process with Magnet RAM Capture
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.12 – 使用 Magnet RAM Capture 进行成像过程
- en: Once the process is finished, you'll find a raw memory image under the location
    you specified previously.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 处理完成后，你将在之前指定的位置找到一个原始内存镜像文件。
- en: Summary
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: When creating memory images, you must consider not only the general concept
    but also factors unique to each individual operating system. For the Windows operating
    system, such a factor is access to the `/Devices/PhysicalMemory` kernel object.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建内存镜像时，你不仅需要考虑一般概念，还需要考虑每个操作系统独有的因素。对于 Windows 操作系统来说，一个重要因素就是访问 `/Devices/PhysicalMemory`
    内核对象。
- en: Most modern tools use kernel drivers to create dumps, but some tools have their
    own unique approach, manifested by using alternatives to the classic `/Devices/PhysicalMemory`
    mapping.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代工具使用内核驱动程序来创建转储，但一些工具有自己独特的方法，表现为使用与经典的 `/Devices/PhysicalMemory` 映射不同的替代方案。
- en: Despite the variety of tools for Windows memory extraction, it is worth remembering
    that the best tool is the one that has been successfully tested on systems identical—or
    at least, very similar—to the target.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有多种 Windows 内存提取工具，但值得记住的是，最好的工具是那些已经在与目标系统相同或至少非常相似的系统上经过成功测试的工具。
- en: In this chapter, we have learned how to create memory dumps using various free
    tools. Now, it's time to start looking inside them! In the next chapter, we will
    get to know the tools for Windows memory-dump analysis and learn how to search
    for traces of user activity.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经学习了如何使用各种免费工具创建内存转储。现在，到了深入查看这些转储内容的时候了！在下一章，我们将了解 Windows 内存转储分析工具，并学习如何搜索用户活动的痕迹。
