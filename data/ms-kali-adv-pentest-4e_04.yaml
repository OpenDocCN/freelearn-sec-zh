- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Vulnerability Assessment
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 漏洞评估
- en: The goal of passive and active reconnaissance is to identify an exploitable
    target, and the goal of vulnerability assessment is to find the security flaws
    that are most likely to support the tester’s or attacker’s objective (unauthorized
    access, modification of data, or denial of service). The vulnerability assessment
    during the exploit phase of the kill chain focuses on creating the access to achieve
    the objective mapping of the vulnerabilities to line up the exploits and maintain
    persistent access to the target.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 被动和主动侦察的目标是识别可利用的目标，而漏洞评估的目标是找出最可能支持测试人员或攻击者目标的安全漏洞（未经授权的访问、数据修改或拒绝服务）。在攻击链的利用阶段，漏洞评估专注于创建访问权限，映射漏洞并将漏洞与攻击结合起来，保持对目标的持续访问。
- en: Thousands of exploitable vulnerabilities have been identified, and most are
    associated with at least one proof-of-concept code file or technique to allow
    the system to be compromised. Nevertheless, the underlying principles that govern
    success are the same across networks, operating systems, and applications.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 已经识别出了成千上万的可利用漏洞，大多数漏洞都有至少一个概念验证代码文件或技术，能够让系统受到攻击。然而，成功的基本原理在不同的网络、操作系统和应用程序中是相同的。
- en: 'In this chapter, you will learn about the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章内容将介绍以下内容：
- en: Using online and local vulnerability resources
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用在线和本地漏洞资源
- en: Vulnerability scanning with Nmap
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nmap进行漏洞扫描
- en: Lua scripting
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lua脚本
- en: Writing your own Nmap script using the **Nmap Scripting Engine** (**NSE**)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**Nmap脚本引擎**（**NSE**）编写你自己的Nmap脚本
- en: Selecting and customizing multiple vulnerability scanners
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择和定制多个漏洞扫描器
- en: Installing Nessus in Kali and exploring Qualys’ online community scanner
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Kali中安装Nessus并探索Qualys的在线社区扫描器
- en: Web- and application-specific scanners
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专用于Web和应用程序的扫描器
- en: Threat modeling in general
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般的威胁建模
- en: Vulnerability nomenclature
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 漏洞命名法
- en: Vulnerability scanning employs automated processes and applications to identify
    vulnerabilities in a network, system, operating system, or application that may
    be exploitable.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞扫描通过自动化的过程和应用程序来识别网络、系统、操作系统或应用程序中可能被利用的漏洞。
- en: When performed correctly, a vulnerability scan delivers an inventory of devices
    (both authorized and rogue devices), known vulnerabilities that have been actively
    scanned for, and usually a confirmation of how compliant the devices are with
    various policies and regulations.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当正确执行时，漏洞扫描能够提供设备清单（包括授权设备和恶意设备）、已主动扫描的已知漏洞，并通常会确认设备是否符合各种政策和规定。
- en: 'Unfortunately, vulnerability scans are loud; they deliver multiple packets
    that are easily detected by most network controls and make stealth almost impossible
    to achieve. They also suffer from the following limitations:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，漏洞扫描非常“响亮”；它们会发送大量数据包，容易被大多数网络控制检测到，这使得隐蔽几乎不可能实现。它们还存在以下限制：
- en: For the most part, vulnerability scanners are signature-based; they can only
    detect known vulnerabilities, and only if there is an existing recognition signature
    that the scanner can apply to the target. To a penetration tester, the most effective
    scanners are open source; they allow the tester to rapidly modify code to detect
    new vulnerabilities.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在大多数情况下，漏洞扫描器是基于特征的；它们只能检测已知的漏洞，并且只能在存在扫描器可以应用于目标的识别签名时检测到漏洞。对于渗透测试人员来说，最有效的扫描器是开源的；它们允许测试人员快速修改代码以检测新漏洞。
- en: Scanners produce large volumes of output, frequently containing false-positive
    results that can lead a tester astray; in particular, networks with different
    operating systems can produce false positives with a rate as high as 70 percent.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描器会产生大量输出，常常包含虚假的正向结果，这可能会误导测试人员；尤其是，当网络中使用不同的操作系统时，虚假正向结果的发生率可高达70%。
- en: Scanners may have a negative impact on the network; they can create network
    latency or cause the failure of some devices. It is recommended to tweak the scan
    by removing denial-of-service type plugins during initial scans.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描器可能会对网络造成负面影响；它们可能会产生网络延迟或导致某些设备故障。建议在初次扫描时，通过移除拒绝服务类型的插件来调整扫描。
- en: In certain jurisdictions, scanning is considered hacking, and may constitute
    an illegal act.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些司法管辖区，扫描被视为黑客行为，可能构成非法行为。
- en: There are multiple commercial and open-source products that perform vulnerability
    scans.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 有多个商业和开源产品可以执行漏洞扫描。
- en: Local and online vulnerability databases
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地和在线漏洞数据库
- en: Together, passive and active reconnaissance identify the attack surface of the
    target, that is, the total number of points that can be assessed for vulnerabilities.
    A server with just an operating system installed can only be exploited if there
    are vulnerabilities in that particular operating system; however, the number of
    potential vulnerabilities increases with each application that is installed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 被动与主动侦察共同识别目标的攻击面，也就是可以评估漏洞的所有点的总数。仅安装操作系统的服务器只有在该操作系统存在漏洞时才可能被利用；然而，随着每个安装的应用程序，潜在的漏洞数量会增加。
- en: Penetration testers and attackers must find the particular exploits that will
    compromise known and suspected vulnerabilities. The first place to start the search
    is at vendor sites; most hardware and application vendors release vulnerability
    information when they release patches and upgrades. If an exploit for a particular
    weakness is known, most vendors will highlight this to their customers.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员和攻击者必须找到可以利用已知和疑似漏洞的特定漏洞。开始搜索的第一步是访问供应商网站；大多数硬件和应用程序供应商在发布补丁和升级时会发布漏洞信息。如果已知某个弱点的漏洞，供应商通常会将此信息突出显示给他们的客户。
- en: Although their intent is to allow customers to test for the presence of the
    vulnerability themselves, attackers and penetration testers will take advantage
    of this information as well.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它们的目的是让客户自行测试漏洞的存在，攻击者和渗透测试人员也会利用这些信息。
- en: 'Other online sites that collect, analyze, and share information about vulnerabilities
    are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 其他收集、分析并共享漏洞信息的在线站点如下：
- en: The National Vulnerability Database, which consolidates all public vulnerability
    data released by the US Government, available at [http://web.nvd.nist.gov/view/vuln/search](http://web.nvd.nist.gov/view/vuln/search)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 国家漏洞数据库，汇集了美国政府发布的所有公共漏洞数据，网址：[http://web.nvd.nist.gov/view/vuln/search](http://web.nvd.nist.gov/view/vuln/search)
- en: Packet Storm Security, available at [https://packetstormsecurity.com/](https://packetstormsecurity.com/)
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Packet Storm Security，网址：[https://packetstormsecurity.com/](https://packetstormsecurity.com/)
- en: SecurityFocus, available at [http://www.securityfocus.com/vulnerabilities](http://www.securityfocus.com/vulnerabilities)
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SecurityFocus，网址：[http://www.securityfocus.com/vulnerabilities](http://www.securityfocus.com/vulnerabilities)
- en: The Exploit database maintained by Offensive Security, available at [https://www.exploit-db.com/](https://www.exploit-db.com/)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由Offensive Security维护的漏洞数据库，网址：[https://www.exploit-db.com/](https://www.exploit-db.com/)
- en: For some 0-day vulnerabilities, penetration testers can also keep an eye on
    [https://0day.today/](https://0day.today/)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于一些0-day漏洞，渗透测试人员也可以关注[https://0day.today/](https://0day.today/)
- en: The Exploit database is also copied locally to Kali, and it can be found in
    the `/usr/share/exploitdb` directory.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞数据库也被本地复制到Kali，并可以在`/usr/share/exploitdb`目录中找到。
- en: 'To search the local copy of `exploitdb`, open a Terminal window and enter `searchsploit`
    and the desired search term(s) in the command prompt. This will invoke a script
    that searches a database file (`.csv`) that contains a list of all exploits. The
    search will return a description of known vulnerabilities as well as the path
    to a relevant exploit. The exploit can be extracted, compiled, and run against
    specific vulnerabilities. Take a look at *Figure 4.1*, which shows the description
    of the `exchange windows` vulnerabilities:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要搜索本地的`exploitdb`副本，请打开终端窗口，在命令提示符中输入`searchsploit`和所需的搜索词。这将调用一个脚本，该脚本会搜索包含所有漏洞列表的数据库文件（`.csv`）。搜索结果将返回已知漏洞的描述，以及相关漏洞的路径。该漏洞可以提取、编译并针对特定漏洞执行。请看一下*图4.1*，它展示了`exchange
    windows`漏洞的描述：
- en: '![](../Images/B17765_04_01.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_01.png)'
- en: 'Figure 4.1: Searching in searchsploit with keywords'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1：在searchsploit中使用关键字进行搜索
- en: The search script scans for each line in the CSV file from left to right, so
    the order of the search terms is important; a search for `Oracle 10g` will return
    several exploits, but `10g Oracle` will not return any.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索脚本从左到右扫描CSV文件中的每一行，因此搜索词的顺序非常重要；搜索`Oracle 10g`会返回多个漏洞，但`10g Oracle`则不会返回任何结果。
- en: Also, the script is weirdly case sensitive; although you are instructed to use
    lowercase characters in the search term, a search for `vsFTPd` returns no hits,
    but `vs FTPd` returns more hits with a space between `vs` and `FTPd`. More effective
    searches of the CSV file can be conducted using the `grep` command or a search
    tool such as `KWrite` (`apt-get install kwrite`).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，脚本对大小写非常敏感；尽管你被指示在搜索词中使用小写字符，但搜索 `vsFTPd` 并没有结果，而搜索 `vs FTPd`（在 `vs` 和 `FTPd`
    之间有空格）则返回了更多的结果。可以使用 `grep` 命令或诸如 `KWrite`（`apt-get install kwrite`）这样的搜索工具来更有效地搜索
    CSV 文件。
- en: A search of the local database may identify several possible exploits with a
    description and a path listing; however, these will have to be customized to your
    environment, and then compiled prior to use. Copy the exploit to the `/tmp` directory
    (the given path does not take into account that the `/windows/remote` directory
    resides in the `/platforms` directory).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本地数据库的搜索可能会识别出几个可能的漏洞，并列出描述和路径；然而，这些漏洞需要根据你的环境进行定制，然后在使用前进行编译。将漏洞复制到 `/tmp`
    目录（给定路径未考虑到 `/windows/remote` 目录位于 `/platforms` 目录下的情况）。
- en: 'Exploits presented as scripts such as Perl, Ruby, and PHP authentication are
    relatively easy to implement. For example, if the target is a Microsoft Exchange
    2019 server that may be vulnerable to remote code execution using valid credentials,
    copy the exploit to the `root` directory and then execute as a standard Python
    file, as shown in *Figure 4.2*:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以脚本形式呈现的漏洞，例如 Perl、Ruby 和 PHP 认证漏洞，比较容易实现。例如，如果目标是一个可能容易受到远程代码执行攻击的 Microsoft
    Exchange 2019 服务器，且需要有效的凭证，可以将漏洞复制到 `root` 目录，然后像标准的 Python 文件一样执行，如 *图 4.2* 所示：
- en: '![](../Images/B17765_04_02.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_02.png)'
- en: 'Figure 4.2: Running the Python script from exploit-db for the Microsoft exchange
    server vulnerability'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2：从 exploit-db 运行 Python 脚本，针对 Microsoft Exchange 服务器的漏洞
- en: Many of the exploits are available as source code that must be compiled before
    use. For example, a search for Windows RPC-specific vulnerabilities identifies
    several possible exploits.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 许多漏洞以源代码形式提供，使用前需要编译。例如，针对 Windows RPC 特定漏洞的搜索会识别出几个可能的漏洞。
- en: 'The RPC DCOM vulnerability identified as `76.c` is known from practice to be
    relatively stable. So, we will use it as an example. To compile this exploit,
    copy it from the storage directory to the `/tmp` directory. In that location,
    compile it using GCC with the command that follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 被识别为 `76.c` 的 RPC DCOM 漏洞在实践中被证明是相对稳定的。因此，我们将其作为示例。为了编译这个漏洞，将其从存储目录复制到 `/tmp`
    目录。在该目录下，使用以下命令通过 GCC 编译：
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This will use the GNU Compiler Collection application to compile `76.c` to
    a file with the output (`-o`) name of `76.exe`, as shown in *Figure 4.3*:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使用 GNU 编译器集合应用程序将 `76.c` 编译成一个名为 `76.exe` 的输出文件，如 *图 4.3* 所示：
- en: '![](../Images/B17765_04_03.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_03.png)'
- en: 'Figure 4.3: Compiling the c file to create the exploit executable'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3：编译 C 文件以创建漏洞可执行文件
- en: 'Although we get some warnings and a note, the compilation was successful without
    any error messages. When you invoke the application against the target, you must
    call the executable (which is not stored in the `/tmp` directory) using a symbolic
    link as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们收到了一些警告和备注，编译成功并没有出现任何错误消息。当你在目标上调用应用程序时，必须使用符号链接调用可执行文件（该文件不存储在 `/tmp`
    目录中），如下所示：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The source code for this exploit is well documented and the required parameters
    are clear at execution, as shown in *Figure 4.4*:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这个漏洞的源代码有详细的文档，所需的参数在执行时也很清楚，如 *图 4.4* 所示：
- en: '![](../Images/B17765_04_04.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_04.png)'
- en: 'Figure 4.4: Running the compiled exploit'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4：运行已编译的漏洞
- en: 'Unfortunately, not all exploits from the Exploit database and other public
    sources compile as readily as `76.c`. There are several issues that make the use
    of such exploits problematic, even dangerous, for penetration testers, which are
    listed as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，并非所有来自 Exploit 数据库和其他公共来源的漏洞都能像 `76.c` 那样轻松编译。有几个问题使得这些漏洞对于渗透测试人员来说，使用起来既有问题甚至是危险的，具体问题如下：
- en: Deliberate errors or incomplete source code are commonly encountered as experienced
    developers attempt to keep exploits away from inexperienced users, especially
    beginners who are trying to compromise systems without knowing the risks that
    go with their actions.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有意的错误或不完整的源代码通常会遇到，因为有经验的开发人员试图将漏洞隔离开，避免不熟悉风险的初学者尝试在不知晓风险的情况下入侵系统。
- en: Exploits are not always sufficiently documented; after all, there is no standard
    that governs the creation and use of code intended to be used to compromise a
    data system. As a result, they can be difficult to use, particularly for testers
    who lack expertise in application development.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 漏洞利用并不总是有足够的文档说明；毕竟，没有标准来规范用于攻破数据系统的代码的创建和使用。因此，这些漏洞利用工具可能很难使用，特别是对于缺乏应用开发经验的测试人员。
- en: Inconsistent behaviors due to changing environments (new patches applied to
    the target system and language variations in the target application) may require
    significant alterations to the source code; again, this may require a skilled
    developer.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于环境的变化（如对目标系统应用的新补丁和目标应用中的语言变化）可能导致不一致的行为，这可能需要对源代码进行重大修改；同样，这可能需要一位熟练的开发者。
- en: There is always the risk of freely available code containing malicious functionalities.
    A penetration tester may think that they are conducting a **proof of concept**
    (**POC**) exercise and will be unaware that the exploit has also created a backdoor
    in the application being tested that could be used by the developer.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总是存在免费代码包含恶意功能的风险。渗透测试人员可能以为自己正在进行**概念验证**（**POC**）测试，但却未意识到漏洞利用工具还在被测试的应用中创建了一个后门，开发者可能利用该后门。
- en: To ensure consistent results and create a community of coders who follow consistent
    practices, several exploit frameworks have been developed. The most popular exploitation
    framework is the Metasploit framework, and we will explore more about Metasploit
    in *Chapter 10*, *Exploitation*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保一致的结果并创建一个遵循一致实践的编码社区，已经开发了多个漏洞利用框架。最流行的漏洞利用框架是 Metasploit 框架，我们将在*第 10
    章*《漏洞利用》中进一步探讨 Metasploit。
- en: Next, let’s explore the different tools that penetration testers can leverage
    during vulnerability scanning.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们探讨渗透测试人员在漏洞扫描过程中可以利用的不同工具。
- en: Vulnerability scanning with Nmap
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Nmap 进行漏洞扫描
- en: 'There are no security operating distributions without Nmap. So far, we have
    discussed how to utilize Nmap during active reconnaissance, but attackers don’t
    just use Nmap to find open ports and services, but also engage Nmap to perform
    the vulnerability assessment. As of December 21, 2021, the latest version of Nmap
    is 7.92 and it ships with 600+ NSE scripts, as shown in *Figure 4.5*:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 没有 Nmap 的安全操作系统发行版是不存在的。到目前为止，我们已经讨论了如何在主动侦察过程中使用 Nmap，但攻击者不仅仅使用 Nmap 来寻找开放端口和服务，还利用
    Nmap 执行漏洞评估。截至 2021 年 12 月 21 日，Nmap 的最新版本是 7.92，随附有 600 多个 NSE 脚本，如*图 4.5*所示：
- en: '![](../Images/B17765_04_05.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_05.png)'
- en: 'Figure 4.5: Viewing all the scripts in the /usr/share/nmap/scripts folder'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5：查看 /usr/share/nmap/scripts 文件夹中的所有脚本
- en: 'Penetration testers utilize Nmap’s most powerful and flexible features, which
    allow them to write their own scripts and also automate them to simplify the exploitation.
    Primarily, the NSE was developed for the following reasons:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员利用 Nmap 最强大、最灵活的功能，它们允许他们编写自己的脚本，并且还可以自动化脚本以简化漏洞利用过程。NSE 的主要开发目的如下：
- en: '**Network discovery**: The primary purpose that attackers utilize Nmap for
    is network discovery, as we learned in the active reconnaissance section in *Chapter
    3*, *Active Reconnaissance of External and Internal Networks*.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络发现**：攻击者利用 Nmap 的主要目的就是网络发现，正如我们在*第 3 章*《外部与内部网络的主动侦察》中学到的那样。'
- en: '**Classier version detection of a service**: There are thousands of services
    with multiple version details for the same service, so Nmap makes it easier to
    identify the service.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务的版本分类检测**：同一个服务有成千上万的服务版本，Nmap 使得识别这些服务变得更加容易。'
- en: '**Vulnerability detection**: To automatically identify vulnerability in a vast
    network range; however, Nmap cannot be a full vulnerability scanner in itself.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漏洞检测**：自动识别广泛网络范围内的漏洞；然而，Nmap 本身不能完全充当漏洞扫描器。'
- en: '**Backdoor detection**: Some of the scripts are written to identify the pattern
    of backdoors. If there are any worms infecting the network, it makes the attacker’s
    job easy to narrow down and focus on taking over the machine remotely.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后门检测**：一些脚本被编写用来识别后门模式。如果网络中有任何蠕虫感染，它会使攻击者的工作变得容易，能够缩小范围并集中精力远程控制机器。'
- en: '**Vulnerability exploitation**: Attackers can also potentially utilize Nmap
    to perform exploitation in combination with other tools, such as Metasploit, or
    write custom reverse shell code and combine Nmap’s capability with them for exploitation.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漏洞利用**：攻击者也可以利用 Nmap 与其他工具（如 Metasploit）结合进行漏洞利用，或者编写自定义的反向 shell 代码，并将 Nmap
    的功能与这些工具结合使用进行利用。'
- en: 'Before firing up Nmap to perform a vulnerability scan, penetration testers
    must update the Nmap script database to see whether there are any new scripts
    added to the database, so that they don’t miss the vulnerability identification:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动 Nmap 执行漏洞扫描之前，渗透测试人员必须更新 Nmap 脚本数据库，以查看是否有新脚本被添加到数据库中，确保不会错过漏洞识别：
- en: '[PRE2]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Use the following to run all the scripts against the target host:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令对目标主机运行所有脚本：
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Introduction to Lua scripting
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lua 脚本介绍
- en: Lua is a lightweight embeddable scripting language that is built on top of the
    C programming language, was created in Brazil in 1993, and is still actively developed.
    It is a powerful and fast programming language mostly used in gaming applications
    and image processing. The complete source code, manual, and binaries for some
    platforms do not go beyond 1.44 MB (which is less than a floppy disk). Some of
    the security tools that are developed in Lua are Nmap, Wireshark, and Snort 3.0.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Lua 是一种轻量级的嵌入式脚本语言，基于 C 语言开发，创建于 1993 年的巴西，至今仍在积极开发中。它是一种功能强大且快速的编程语言，主要用于游戏应用和图像处理。其完整的源代码、手册和一些平台的二进制文件不超过
    1.44 MB（小于一张软盘）。一些用 Lua 开发的安全工具包括 Nmap、Wireshark 和 Snort 3.0。
- en: One of the reasons why Lua was chosen to be the scripting language in information
    security is its compactness, no buffer overflows and format string vulnerabilities,
    and because it can be interpreted.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Lua 被选择作为信息安全脚本语言的原因之一是其紧凑性，没有缓冲区溢出和格式字符串漏洞，而且它是可解释的。
- en: 'Lua can be installed directly in Kali Linux by issuing the `sudo apt install
    lua5.4` command in the terminal. The following code extract is the sample script
    to read the file and print the first line:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在终端输入`sudo apt install lua5.4`命令直接在 Kali Linux 上安装 Lua。以下代码提取是读取文件并打印第一行的示例脚本：
- en: '[PRE4]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Lua is similar to any other scripting, such as Bash and Perl scripting. The
    preceding script should produce the output shown in *Figure 4.6*:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Lua 与其他脚本语言类似，如 Bash 和 Perl 脚本。前面的脚本应该会产生如*图 4.6*所示的输出：
- en: '![](../Images/B17765_04_06.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_06.png)'
- en: 'Figure 4.6: Running a Lua script to display the /etc/shadow file'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6：运行 Lua 脚本以显示 /etc/shadow 文件
- en: Customizing NSE scripts
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定制 NSE 脚本
- en: 'To achieve maximum effectiveness, the customization of scripts helps penetration
    testers to find the right vulnerabilities in a timely fashion. However, most of
    the time, attackers do not have the time to write one. The following code extract
    is a Lua NSE script to identify a specific file location that we will search for
    on the entire subnet using Nmap:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 为了达到最大效果，脚本的定制化帮助渗透测试人员及时发现正确的漏洞。然而，大多数时候，攻击者没有时间编写脚本。以下代码提取是一个 Lua NSE 脚本，用于识别特定的文件位置，我们将使用
    Nmap 在整个子网中进行搜索：
- en: '[PRE5]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Save the file into the `/usr/share/nmap/scripts/` folder. Finally, your script
    is ready to be tested, as shown in *Figure 4.7*; you must be able to run your
    own NSE script without any problems:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存到`/usr/share/nmap/scripts/`文件夹中。最终，你的脚本已经准备好进行测试，如*图 4.7*所示；你应该能够顺利运行自己的
    NSE 脚本：
- en: '![](../Images/B17765_04_07.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_07.png)'
- en: 'Figure 4.7: Running our newly created Nmap script'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7：运行我们新创建的 Nmap 脚本
- en: 'To completely understand the preceding NSE script, here is a description of
    what is in the code:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完全理解前面的 NSE 脚本，以下是代码中内容的描述：
- en: '`local http: require''http''`: This calls the right library from Lua; this
    line calls the HTTP script and makes it a local request.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local http: require''http''`：这行调用 Lua 中的正确库；此行调用 HTTP 脚本并将其作为本地请求。'
- en: '`description`: This is where testers/researchers can enter the description
    of the script.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`：这是测试人员/研究人员可以输入脚本描述的地方。'
- en: '`categories`: This typically has two variables, one of which declares whether
    it is safe or intrusive.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`categories`：通常包含两个变量，其中一个声明它是否是安全的或具侵入性的。'
- en: Web application vulnerability scanners
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web 应用漏洞扫描器
- en: Vulnerability scanners suffer from the common shortcomings of all scanners (scanners
    can only detect the signature of a known vulnerability; they cannot determine
    if the vulnerability can actually be exploited; there is a high incidence of false-positive
    reports). Furthermore, web vulnerability scanners cannot identify complex errors
    in business logic, and they do not accurately simulate the complex chained attacks
    used by hackers.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞扫描器存在所有扫描器的常见缺点（扫描器只能检测已知漏洞的特征，无法判断漏洞是否能够被实际利用；假阳性报告的发生率较高）。此外，Web漏洞扫描器无法识别业务逻辑中的复杂错误，也无法准确模拟黑客使用的复杂链式攻击。
- en: In an effort to increase reliability, most penetration testers use multiple
    tools to scan web services. When multiple tools report that a particular vulnerability
    may exist, this consensus will direct the tester to areas that may require manually
    verifying the findings.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高可靠性，大多数渗透测试人员使用多种工具扫描Web服务。当多个工具报告某个特定漏洞可能存在时，这种共识会指引测试人员检查可能需要手动验证的区域。
- en: 'Kali comes with an extensive number of vulnerability scanners for web services
    and provides a stable platform for installing new scanners and extending their
    capabilities. This allows penetration testers to increase the effectiveness of
    testing by selecting scanning tools that do the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Kali附带了大量的Web服务漏洞扫描器，并提供了一个稳定的平台来安装新扫描器并扩展其功能。这使得渗透测试人员可以通过选择以下类型的扫描工具来提高测试的有效性：
- en: Maximize the completeness (the total number of vulnerabilities that are identified)
    and accuracy (the vulnerabilities that are real and not false-positive results)
    of testing.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大化测试的完整性（识别的漏洞总数）和准确性（漏洞为真实漏洞而非假阳性结果）。
- en: Minimize the time required to obtain usable results.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量减少获得可用结果所需的时间。
- en: Minimize the negative impacts on the web services being tested. This can include
    slowing down the system due to an increase in traffic throughput. For example,
    one of the most common negative effects is a result of testing forms that input
    data to a database, and then emailing an individual providing an update of the
    change that has been made; uncontrolled testing of such forms can result in more
    than 30,000 emails being sent!
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量减少对被测试Web服务的负面影响。这可能包括由于流量吞吐量增加而导致系统变慢。例如，最常见的负面影响之一是测试表单向数据库输入数据，并将更新内容通过邮件发送给个人；不受控的此类表单测试可能会导致超过30,000封邮件被发送！
- en: 'There is significant complexity in choosing the most effective tool. In addition
    to the factors already listed, some vulnerability scanners will also launch the
    appropriate exploit and support post-exploit activities. For our purposes, we
    will consider all tools that scan for exploitable weaknesses to be vulnerability
    scanners. Kali provides access to several different vulnerability scanners, including
    the following:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 选择最有效工具的过程具有显著复杂性。除了已列出的因素外，一些漏洞扫描器还会发起相应的漏洞利用并支持利用后活动。就我们的目的而言，所有扫描可被利用的弱点的工具都将被视为漏洞扫描器。Kali提供了多种不同的漏洞扫描器，包括以下几种：
- en: Scanners that extend the functionality of traditional vulnerability scanners
    to include websites and associated services (for example, the Metasploit framework
    and Websploit)
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展传统漏洞扫描器功能，包括网站及相关服务的扫描工具（例如，Metasploit框架和Websploit）。
- en: Scanners that extend the functionality of non-traditional applications, such
    as web browsers, to support web service vulnerability scanning (OWASP Mantra)
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展非传统应用程序（如Web浏览器）功能以支持Web服务漏洞扫描的扫描器（OWASP Mantra）。
- en: Scanners that are specifically developed to support reconnaissance and exploit
    detection in websites and web services (Arachni, Nikto, Skipfish, WPScan, joomscan,
    and so on)
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专门开发用于支持网站和Web服务中侦察和漏洞利用检测的扫描器（如Arachni、Nikto、Skipfish、WPScan、joomscan等）。
- en: Nikto
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Nikto
- en: Nikto is one of the most utilized active web application scanners. It performs
    comprehensive tests against web servers. Its basic functionality is to check for
    6,700+ potentially dangerous files or programs, along with outdated versions of
    servers and vulnerabilities specific to versions of over 270 servers. Nikto identifies
    server misconfiguration, index files, and HTTP methods, and also finds the installed
    web server and the software version. Nikto is released based on Open-General Public
    License versions ([https://opensource.org/licenses/gpl-license](https://opensource.org/licenses/gpl-license)).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto 是最常用的主动 web 应用扫描器之一。它对 web 服务器进行全面的测试。其基本功能是检查 6,700 多个潜在危险的文件或程序，以及过时的服务器版本和
    270 多个服务器版本的特定漏洞。Nikto 识别服务器配置错误、索引文件和 HTTP 方法，还能找到已安装的 web 服务器和软件版本。Nikto 是基于开放公共许可证版本发布的
    ([https://opensource.org/licenses/gpl-license](https://opensource.org/licenses/gpl-license))。
- en: Nikto is a Perl-based open-source scanner that allows IDS evasion and user changes
    to scan modules; however, this original web scanner is beginning to show its age
    and is not as accurate as some of the more modern scanners.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Nikto 是一个基于 Perl 的开源扫描器，支持 IDS 规避和用户自定义扫描模块；然而，这个原始的网页扫描器已经显得有些过时，不如一些现代扫描器那么准确。
- en: 'Most testers start testing a website by using Nikto, a simple scanner (particularly
    concerning reporting) that generally provides accurate but limited results; a
    sample output of this scan is shown in *Figure 4.8*:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数测试人员在测试网站时首先使用 Nikto，这是一个简单的扫描器（特别是在报告方面），通常提供准确但有限的结果；此扫描的样本输出如 *图 4.8*
    所示：
- en: '![](../Images/B17765_04_08.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_08.png)'
- en: 'Figure 4.8: Running Nikto against the target on port 80'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8：在端口 80 上运行 Nikto 对目标进行扫描
- en: Customizing Nikto
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义 Nikto
- en: 'The latest version of Nikto is 2.1.6\. The community allowed developers to
    debug and call specific plugins. These plugins can be customized accordingly from
    the previous version. You can acquire a listing of all the plugins, and then you
    specify a specific plugin to perform the scan. There are currently around 35 plugins
    that can be utilized by penetration testers; *Figure 4.9* provides the list of
    plugins that are currently available in the latest version of Nikto:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 最新版本的 Nikto 是 2.1.6。社区允许开发者调试并调用特定的插件。这些插件可以根据以前的版本进行自定义。你可以获取所有插件的列表，然后指定一个特定的插件来执行扫描。目前大约有
    35 个插件可供渗透测试人员使用；*图 4.9* 提供了最新版本的 Nikto 中可用的插件列表：
- en: '![](../Images/B17765_04_09.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_09.png)'
- en: 'Figure 4.9: Listing all the plugins in Nikto'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9：列出 Nikto 中的所有插件
- en: 'For example, if attackers find banner information denoting Apache server 2.4.0, Nikto
    can be customized to run specific plugins for Apache user enumeration by running
    the following command:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果攻击者发现显示 Apache 服务器 2.4.0 的横幅信息，Nikto 可以通过运行以下命令来进行自定义，运行 Apache 用户枚举的特定插件：
- en: '[PRE6]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Penetration testers should be able to see the following information:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员应能够看到以下信息：
- en: '![](../Images/B17765_04_10.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_10.png)'
- en: 'Figure 4.10: Running Nikto with a specific plugin'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10：使用特定插件运行 Nikto
- en: When the Nikto plugin is run successfully, the `apacheusers.xml` output file should
    include the active users on the target host.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Nikto 插件成功运行时，`apacheusers.xml` 输出文件应包含目标主机上的活动用户。
- en: Attackers can also point Nikto scans to Burp or any proxy tool with `nikto.pl
    -host <hostaddress> -port <hostport> -useragentnikto -useproxy http://127.0.0.1:8080`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者还可以将 Nikto 扫描指向 Burp 或任何代理工具，使用命令 `nikto.pl -host <hostaddress> -port <hostport>
    -useragentnikto -useproxy http://127.0.0.1:8080`。
- en: The next step is to use more advanced scanners that scan a larger number of
    vulnerabilities; in turn, they can take significantly longer to run to completion.
    It is not uncommon for complex vulnerability scans (as determined by the number
    of pages to be scanned as well as the site’s complexity, which can include multiple
    pages that permit user input, such as search functions or forms that gather data
    from the user for a backend database) to take several days to be completed.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用更先进的扫描器，扫描更多的漏洞；这些扫描器可能需要更长的时间才能完成。复杂的漏洞扫描（根据要扫描的页面数量以及网站的复杂性来确定，其中可能包括允许用户输入的多个页面，如搜索功能或用于从用户收集数据并存入后端数据库的表单）通常需要几天才能完成。
- en: OWASP ZAP
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OWASP ZAP
- en: 'One of the most effective scanners based on the number of verified vulnerabilities
    discovered is OWASP ZAP. This tool is not preinstalled in Kali Linux 2021\. This
    tool is based on the fork from the Paros proxy tool. The latest version is 2.11.1
    and was released on 11 December 2021\. It can be installed by running `sudo apt
    install zaproxy` from a terminal and opened by running `zaproxy`, which should
    lead us to *Figure 4.11*:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 基于已验证的漏洞数量，OWASP ZAP 是最有效的扫描器之一。这个工具未预装在 Kali Linux 2021 中。该工具基于 Paros 代理工具的分支。最新版本是
    2.11.1，发布于 2021 年 12 月 11 日。您可以通过在终端上运行 `sudo apt install zaproxy` 进行安装，并通过运行
    `zaproxy` 打开，这应该引导我们到*图 4.11*：
- en: '![Graphical user interface, application  Description automatically generated](../Images/B17765_04_11.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，应用程序  自动生成描述](../Images/B17765_04_11.png)'
- en: 'Figure 4.11: Loading the OWASP ZAP 2.11.1'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11：加载 OWASP ZAP 2.11.1
- en: 'Once the application is launched, it should ask if you want the session to
    be persistent or temporary. Make the most appropriate choice for your situation.
    One of the features of this scanner is that it can be used as a standalone automatic
    scanner and as a proxy tool to test only the relevant sections of the web application
    under test. Update all the plugins before we kick off the scanning activity to
    maximize the output. If you choose to use the automated scanner, the tool should
    present you with the following screen to enter the target URL and the option to
    use the traditional spider and/or the AJAX Spider. If the AJAX Spider is chosen,
    then the application is going to use the browser to crawl through every link on
    the website and capture them for the next phase: performing an active scan. Use
    the manual/proxy approach to keep the network traffic/web requests low and focus
    the testing without creating huge noise at the target web server logs, which can
    trigger alarms or cause denial of service. Unlike any other scanners, this tool
    may produce false positives:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序启动后，它应该询问您是否希望会话是持久的还是临时的。根据您的情况做出最合适的选择。这个扫描器的一个特点是它可以作为独立的自动扫描器使用，也可以作为代理工具来测试被测试的网络应用程序的相关部分。在开始扫描活动之前，更新所有插件以最大化输出。如果选择使用自动扫描器，该工具应该显示以下屏幕，以输入目标
    URL 并选择使用传统爬虫和/或 AJAX 爬虫。如果选择了 AJAX 爬虫，则该应用程序将使用浏览器遍历网站上的每个链接，并为下一阶段（执行主动扫描）捕获它们。使用手动/代理方法来保持网络流量/网页请求低，并集中在不创建巨大噪音的情况下测试，避免触发警报或导致拒绝服务。与其他扫描器不同，此工具可能产生虚警：
- en: '![Graphical user interface, text, application, email  Description automatically
    generated](../Images/B17765_04_12.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面，文本，应用程序，电子邮件  自动生成描述](../Images/B17765_04_12.png)'
- en: 'Figure 4.12: Initiating an OWASP ZAP automated scan'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12：启动 OWASP ZAP 自动扫描
- en: 'To test for specific vulnerabilities, you can choose which modules to enable
    by navigating to **Analyse and Scan Policy Manager** from the main menu. This
    should bring you to the **Scan Policy Manager** window. Select **Default Policy**
    and click on **Modify**, which should bring you to *Figure 4.13*. You should now
    be able to modify the relevant attacks:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试特定的漏洞，您可以从主菜单中导航到**分析和扫描策略管理器**，选择**默认策略**，然后点击**修改**，这将引导您到*图 4.13*。现在您应该能够修改相关的攻击：
- en: '![](../Images/B17765_04_13.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_13.png)'
- en: 'Figure 4.13: Customizing the scan policy for the automated scan'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13：自定义自动扫描策略
- en: 'ZAP scans a target and classifies the vulnerabilities as high, medium, low,
    and informational in the form of alerts. You can click on the identified results
    to drill down to specific findings. OWASP ZAP can help you find vulnerabilities
    such as reflected cross-site scripting, stored cross-site scripting, SQL injection,
    and remote OS command injection. Once the scan is complete, you should be able
    to see the following screen with the folder structure of the target, alerts, and
    other activities (active scan/spider/AJAX Spider) that are performed by the scanner:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: ZAP 对目标进行扫描，并将漏洞分类为高、中、低和信息警报。您可以点击识别的结果以深入具体发现。OWASP ZAP 可帮助您发现漏洞，如反射型跨站脚本、存储型跨站脚本、SQL
    注入和远程操作系统命令注入。扫描完成后，您应该能够看到以下屏幕，显示目标的文件夹结构、警报和扫描器执行的其他活动（主动扫描/蜘蛛/AJAX 蜘蛛）：
- en: '![](../Images/B17765_04_14.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_14.png)'
- en: 'Figure 4.14: Listing all the vulnerabilities identified by OWASP ZAP in the
    Alerts section'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14：在警报部分列出 OWASP ZAP 发现的所有漏洞
- en: Also, OWASP ZAP provides special features in the **Proxy** section, which allow
    penetration testers to query the request and observe the response to perform the
    validation, which we call manual PoC.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，OWASP ZAP在**代理**部分提供了特殊功能，允许渗透测试人员查询请求并观察响应，以执行验证，这被我们称为手动PoC。
- en: Tools such as OWASP DirBuster can also be utilized by the attackers to define
    their own user agent or mimic any well-known user agent headers, such as an IRC
    bot or Googlebot, and also configure the maximum number of total descendants and
    sub-processes, and the number of paths that can be traversed. For example, if
    the spider reveals `www.target.com/admin/`, there is a dictionary to add to the
    URL as `www.target.com/admin/secret/`, and the maximum by default is set to `16`,
    which means the tool will scan up to 16 folder possibilities. But attackers would
    be able to drill down by utilizing other tools to maximize the effectiveness of
    the tool and would select precisely the right number of paths. Also, if any protection
    mechanisms were in place, such as WAF or network-level IPS, penetration testers
    can select to scan the target with a small number of connections per second to
    send to the target.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 像OWASP DirBuster这样的工具也可以被攻击者用来定义自己的用户代理或模拟任何知名的用户代理头部，如IRC bot或Googlebot，并且可以配置最大子进程数量、总后代数以及可遍历路径的数量。例如，如果爬虫发现了`www.target.com/admin/`，则可以在URL中添加字典项，如`www.target.com/admin/secret/`，默认最大值为`16`，意味着工具将扫描最多16个文件夹路径。然而，攻击者可以利用其他工具进一步深入挖掘，最大化工具的有效性，并精确选择路径数量。如果存在保护机制，如WAF或网络级IPS，渗透测试人员可以选择每秒发送少量连接请求来扫描目标。
- en: Other tools include Burp Suite Community Edition, which is preinstalled in Kali
    Linux and is considered one of the best proxy tools. It has a variety of options
    that can be utilized by testers. However, the free version of the tool lacks the
    ability to scan and save the output. The commercial version of the tool allows
    testers to add additional plugins and perform passive scans while exploring web
    applications.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 其他工具包括Burp Suite Community Edition，它在Kali Linux中预安装，是被认为最好的代理工具之一。它提供了多种选项，测试人员可以使用。然而，工具的免费版无法扫描并保存输出。商业版的工具允许测试人员添加额外的插件，并在探索Web应用程序时执行被动扫描。
- en: Vulnerability scanners for mobile applications
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用程序漏洞扫描器
- en: Penetration testers often ignore mobile applications in app stores (Apple, Google,
    and others); however, these applications also serve as a network entry point.
    In this section, we will run through how quickly one can set up a mobile application
    scanner and how one can combine the results from this mobile application scanner
    and utilize the information to identify more vulnerabilities and achieve the goal
    of the penetration test.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员通常忽视应用商店（如Apple、Google等）中的移动应用程序；然而，这些应用程序也充当了网络的入口点。在本节中，我们将介绍如何快速设置移动应用扫描器，以及如何将扫描器的结果结合起来，利用这些信息识别更多的漏洞并实现渗透测试的目标。
- en: '**Mobile Security Framework** (**MobSF**) is an open-source, automated penetration
    testing framework for all the mobile platforms, including Android, iOS, and Windows.
    The entire framework is written in the Django Python framework.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**移动安全框架**（**MobSF**）是一个开源的、自动化的渗透测试框架，适用于所有移动平台，包括Android、iOS和Windows。整个框架是用Django
    Python框架编写的。'
- en: This framework can be directly downloaded from [https://github.com/MobSF/Mobile-Security-Framework-MobSF](https://github.com/MobSF/Mobile-Security-Framework-MobSF),
    or it can be cloned in Kali Linux by issuing the `git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF`
    command.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 该框架可以直接从[https://github.com/MobSF/Mobile-Security-Framework-MobSF](https://github.com/MobSF/Mobile-Security-Framework-MobSF)下载，或者通过在Kali
    Linux中运行`git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF`命令来克隆。
- en: 'Once the framework is cloned, use the following steps to bring up the mobile
    application scanner:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦框架被克隆，使用以下步骤启动移动应用扫描器：
- en: '`cd` into the `Mobile-Security-Framework-MobSF` folder:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入`Mobile-Security-Framework-MobSF`文件夹：
- en: '[PRE7]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Install the dependencies using the following command:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装依赖项：
- en: '[PRE8]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Testers might get a `python3:No module named pip` error message if they are
    running this for the first time. To fix the error, simply run `sudo apt install
    python3-pip` from your terminal and continue with the steps.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '如果测试人员第一次运行时，可能会遇到`python3: No module named pip`的错误信息。要解决此错误，只需在终端中运行`sudo
    apt install python3-pip`命令，然后继续后续步骤。'
- en: Once all the installation is complete, check the configuration settings by entering
    `sudo ./setup.sh` or `sudo python3 setup.py install`. That should set up all the
    prerequisites and also do all the migration seeding to the database.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，检查配置设置，输入 `sudo ./setup.sh` 或 `sudo python3 setup.py install`。这将设置所有前提条件，并完成数据库的所有迁移种子。
- en: Run the vulnerability scanner using `sudo ./run.sh yourIPaddress:portnumber`,
    as shown in *Figure 4.15*:![](../Images/B17765_04_15.png)
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `sudo ./run.sh yourIPaddress:portnumber` 命令运行漏洞扫描器，如 *图 4.15* 所示：![](../Images/B17765_04_15.png)
- en: 'Figure 4.15: Running the MobSF framework on port 8080'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.15：在端口 8080 上运行 MobSF 框架
- en: Access the URL `http://yourIPaddress:Portnumber` in the browser and upload any
    mobile applications found during the reconnaissance to the scanner to identify
    the entry points.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中访问 URL `http://yourIPaddress:Portnumber`，并将侦察过程中发现的任何移动应用上传到扫描器，以识别入口点。
- en: Once the files are uploaded, penetration testers can identify the disassembled
    file in the scanner, along with all the other important information:![](../Images/B17765_04_16.png)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件上传后，渗透测试人员可以在扫描器中识别出反汇编后的文件，以及所有其他重要信息：![](../Images/B17765_04_16.png)
- en: 'Figure 4.16: Successful installation and execution of the MobSF scanner on
    a sample APK file'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.16：成功安装并执行 MobSF 扫描器在示例 APK 文件上
- en: The scan output will provide all the mobile application configuration information,
    such as activities, services, receivers, and providers. Sometimes, this configuration
    information provides hardcoded credentials or cloud API keys that can be utilized
    on other identified services and vulnerabilities. During a penetration testing
    exercise, we found a developer account username and Base64 password in one of
    the Java files that was commented on the target’s mobile application, and that
    allowed access to the external VPN of the organization.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描输出将提供所有移动应用的配置信息，如活动、服务、接收器和提供者。有时，这些配置信息提供了硬编码的凭证或云 API 密钥，可在其他已识别的服务和漏洞中使用。在一次渗透测试过程中，我们在目标的移动应用中的一个
    Java 文件中发现了一个开发者账户的用户名和 Base64 编码的密码，该文件被注释掉，允许访问该组织的外部 VPN。
- en: The more important portions of the mobile security framework are in the URLs,
    malware, and strings.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 移动安全框架中更重要的部分在于 URL、恶意软件和字符串。
- en: The OpenVAS network vulnerability scanner
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenVAS 网络漏洞扫描器
- en: '**Open Vulnerability Assessment System** (**OpenVAS**) is an open-source vulnerability
    assessment scanner and also a vulnerability management tool often utilized by
    attackers to scan a wide range of networks, which includes 80,000+ vulnerabilities
    in its database. However, this is considered a slow network vulnerability scanner
    compared with other commercial tools, such as Nessus, Nexpose, and Qualys.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**开放漏洞评估系统**（**OpenVAS**）是一个开源漏洞评估扫描器，同时也是一个漏洞管理工具，通常被攻击者用来扫描广泛的网络，其数据库中包含超过
    80,000 个漏洞。然而，和其他商业工具（如 Nessus、Nexpose 和 Qualys）相比，这被认为是一个较慢的网络漏洞扫描器。'
- en: 'This tool is not preinstalled within Kali Linux 2021.4, hence it needs to be
    installed manually. Ensure your Kali is up to date and install the latest version
    of OpenVAS by running the `sudo apt install gvm` command. Once this is done, run
    the `sudo gvm-setup` command to set up OpenVAS. This setup will run all the relevant
    vulnerability databases (SCAP/NVT/CERT) and, once the script has successfully
    executed, it should create an admin user and generate a random password, as shown
    in *Figure 4.17*:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具在 Kali Linux 2021.4 中没有预装，因此需要手动安装。确保你的 Kali 系统是最新的，并通过运行 `sudo apt install
    gvm` 命令来安装 OpenVAS 的最新版本。完成后，运行 `sudo gvm-setup` 命令来设置 OpenVAS。此设置将运行所有相关的漏洞数据库（SCAP/NVT/CERT），并且当脚本成功执行后，它应创建一个管理员用户并生成一个随机密码，如
    *图 4.17* 所示：
- en: '![](../Images/B17765_04_17.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_17.png)'
- en: 'Figure 4.17: Confirmation of admin user creation and the temporary password
    during the installation'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17：安装过程中确认管理员用户创建和临时密码
- en: 'Finally, to make sure the installation is OK, run the `sudo gvm-check-setup`
    command and it will list the top 10 items that are required to run OpenVAS effectively.
    Once the installation is successful, testers should be able to see the following:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为确保安装正常，运行 `sudo gvm-check-setup` 命令，它将列出运行 OpenVAS 所需的前 10 项。如果安装成功，测试人员应该能够看到以下内容：
- en: '![](../Images/B17765_04_18.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_18.png)'
- en: 'Figure 4.18: Successful installation of the OpenVAS vulnerability scanner'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.18：成功安装 OpenVAS 漏洞扫描器
- en: The next task is to start up the OpenVAS scanner by running the `sudo gvm-start`
    command from the prompt. Depending on bandwidth and computer resources, this could
    take a while. Once the installation and update are complete, penetration testers
    should be able to access the OpenVAS server on port `9392` with SSL ([https://localhost:9392](https://localhost:9392))
    by entering the username and password.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是通过在命令行提示符中运行`sudo gvm-start`命令来启动OpenVAS扫描器。根据带宽和计算机资源的不同，这可能需要一些时间。一旦安装和更新完成，渗透测试人员应该能够通过输入用户名和密码，在端口`9392`上使用SSL访问OpenVAS服务器（[https://localhost:9392](https://localhost:9392)）。
- en: 'One of the important things to check is that you have the latest feeds of the
    vulnerabilities by navigating to `Administration->Feedstatus` from the main menu,
    and you should see what’s shown in *Figure 4.19*:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 需要检查的一个重要事项是，通过从主菜单导航到`Administration->Feedstatus`，确保你有最新的漏洞源，你应该看到*图4.19*所示内容：
- en: '![](../Images/B17765_04_19.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_19.png)'
- en: 'Figure 4.19: Checking the feed status of OpenVAS to update the current feeds'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.19：检查OpenVAS的源状态，以更新当前的源
- en: Attackers are now set to utilize OpenVAS by entering the target information
    by navigating to **Configuration**, clicking on **Targets**, and then clicking
    on **New Target**. Once the details of the new target are entered, attackers can
    navigate to **Scans**, click on **Tasks**, click on **New task**, enter the details,
    see the scan targets as entered previously, set the scanner and scan configuration,
    and save. Finally, you are all ready to fire the scan by clicking on the name
    of the task and then clicking **Start Scan** from the scanner portal.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者现在准备利用OpenVAS，方法是通过导航到**配置**，点击**目标**，然后点击**新建目标**，输入目标信息。输入新目标的详细信息后，攻击者可以导航到**扫描**，点击**任务**，点击**新建任务**，输入详细信息，查看之前输入的扫描目标，设置扫描器和扫描配置，并保存。最后，点击任务名称，然后从扫描器门户点击**开始扫描**，即可启动扫描。
- en: Customizing OpenVAS
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义OpenVAS
- en: 'Unlike other scanners, OpenVAS is also customizable for scan configuration:
    it allows testers to add credentials, disable particular plugins, set the maximum
    and minimum number of connections that can be made, and so on. To stop this service,
    testers can run `sudo gvm-stop`.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他扫描器不同，OpenVAS还可以自定义扫描配置：它允许测试人员添加凭证、禁用特定插件、设置最大和最小连接数等。要停止此服务，测试人员可以运行`sudo
    gvm-stop`命令。
- en: Commercial vulnerability scanners
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 商业漏洞扫描器
- en: Most threat actors utilize open-source tools to launch attacks; however, commercial
    vulnerability scanners come with their own advantages and disadvantages in the
    penetration testing process. In this section, we will learn how to install Nessus
    and Nexpose in Kali Linux, and since these scanners are backed up by respectable
    companies, they have comprehensive documentation, so we will not be taking a deep
    dive into configuring these tools.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数威胁行为者利用开源工具发起攻击；然而，商业漏洞扫描器在渗透测试过程中有其自身的优缺点。在本节中，我们将学习如何在Kali Linux上安装Nessus和Nexpose，并且由于这些扫描器得到了有声望的公司支持，因此它们拥有全面的文档，所以我们不会深入配置这些工具。
- en: Nessus
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Nessus
- en: Nessus is one of the old vulnerability scanners that was started by Renaud Deraison
    in 1998\. It was an open-source project till 2005 when the project was taken over
    by Tenable Network Security (co-founded by Renaud). Nessus is one of the most
    commonly used commercial vulnerability scanners in the security community for
    network infrastructure scanning. Note that Tenable has multiple security products.
    In this section, we will explore the installation of Nessus Essential.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: Nessus是由Renaud Deraison于1998年启动的老牌漏洞扫描工具。它是一个开源项目，直到2005年，该项目被Tenable Network
    Security（由Renaud共同创立）接管。Nessus是安全社区中最常用的商业漏洞扫描器之一，主要用于网络基础设施扫描。请注意，Tenable拥有多个安全产品。在本节中，我们将探讨如何安装Nessus
    Essential。
- en: 'The following provides step-by-step instructions on how to install Nessus on
    Kali Linux:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何在Kali Linux上安装Nessus的逐步说明：
- en: Register as a normal user by visiting [https://www.tenable.com/try](https://www.tenable.com/try) and
    selecting **TRY NESSUS PRO FOR FREE**.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问[https://www.tenable.com/try](https://www.tenable.com/try)并选择**免费试用Nessus
    PRO**，注册为普通用户。
- en: Download the right version of Nessus from [https://www.tenable.com/downloads/](https://www.tenable.com/downloads/).
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://www.tenable.com/downloads/](https://www.tenable.com/downloads/)下载适合的Nessus版本。
- en: 'Once Nessus is downloaded, run the installer, as shown in the following command:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦下载完Nessus，运行安装程序，如下命令所示：
- en: '[PRE9]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The next step is to start the `nessus` service by running `sudo systemctl start
    nessusd.service`, which should bring Nessus up on our system.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是通过运行 `sudo systemctl start nessusd.service` 启动 `nessus` 服务，这样 Nessus 就会在我们的系统上启动。
- en: By default, the Nessus scanner runs on port `8834` over SSL. Following a successful
    installation, attackers should be able to see the following:![](../Images/B17765_04_20.png)
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，Nessus 扫描器通过 SSL 在端口 `8834` 上运行。在成功安装后，攻击者应该能够看到以下内容：![](../Images/B17765_04_20.png)
- en: 'Figure 4.20: Successful installation of Nessus on our Kali Linux'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.20：在 Kali Linux 上成功安装 Nessus
- en: Add a new user and activate the license; your scanner will download all the
    relevant plugins, based on your license.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个新用户并激活许可证；你的扫描器将根据你的许可证下载所有相关插件。
- en: Finally, you should be able to see Nessus up and running, as shown in *Figure
    4.21*, where it is ready to launch a scan against the target system/network:![](../Images/B17765_04_21.png)
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你应该能够看到 Nessus 已经运行，如 *图 4.21* 所示，它准备好对目标系统/网络进行扫描：![](../Images/B17765_04_21.png)
- en: 'Figure 4.21: Selecting the policy to launch the Nessus scans'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 4.21：选择策略以启动 Nessus 扫描
- en: Attackers can leverage all of Nessus’ capabilities to quickly identify the vulnerabilities
    that can be utilized to select the right target for exploitation. We will explore
    other commercial and specialized scanners in a later section.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以利用 Nessus 的所有功能，快速识别可以用于选择正确目标进行利用的漏洞。我们将在后续章节中探讨其他商业和专用扫描器。
- en: Qualys
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Qualys
- en: Qualys is another player in the vulnerability management commercial market.
    They also provide a community edition of the online scanner that can certainly
    be handy during a penetration test/RTE.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: Qualys 是漏洞管理商业市场中的另一大玩家。他们还提供了一个社区版在线扫描器，在渗透测试/RTE中肯定会非常有用。
- en: 'Penetration testers can get the free community edition by accessing [https://www.qualys.com/community-edition/](https://www.qualys.com/community-edition/)
    once the registration is complete. The testers should have their own custom portal
    with login credentials, and the free edition should allow us to scan up to 16
    IP addresses. A sample external completed scan in Qualys will be as shown in *Figure
    4.22*:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员可以通过访问 [https://www.qualys.com/community-edition/](https://www.qualys.com/community-edition/)
    来获取免费的社区版。一旦注册完成，测试人员将拥有自己的自定义门户，并且登录凭证应该允许我们扫描最多 16 个 IP 地址。Qualys 中一个外部扫描完成的示例将如
    *图 4.22* 所示：
- en: '![](../Images/B17765_04_22.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_22.png)'
- en: 'Figure 4.22: Successfully launching the scan using Qualys community edition'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.22：成功启动使用 Qualys 社区版进行扫描
- en: You should note that the scans will originate from the Qualys-hosted public
    IP address, and it is recommended you customize the scan policy, such as disabling
    the denial-of-service type checks, before initiating the Qualys scan.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该注意到，扫描将来自于 Qualys 托管的公共 IP 地址，建议在启动 Qualys 扫描之前自定义扫描策略，例如禁用拒绝服务类型的检查。
- en: Specialized scanners
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 专用扫描器
- en: The exploitation phase of the kill chain is the most dangerous one for the penetration
    tester or attacker; they are directly interacting with the target network or system,
    and there is a high chance that their activity will be logged or their identity
    discovered. Again, stealth must be employed to minimize the risks to the tester.
    Although no specific methodology or tool is undetectable, there are some configuration
    changes and specific tools that will make detection more difficult.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 杀链的利用阶段是对渗透测试人员或攻击者最危险的阶段；他们直接与目标网络或系统互动，并且很可能会被记录下活动或暴露身份。因此，必须采取隐蔽措施来减少测试人员的风险。尽管没有任何特定的工具或方法是无法被发现的，但一些配置变化和特定工具会使得检测变得更加困难。
- en: In the previous editions, we discussed the **Web Application Attack and Audit
    Framework** (**w3af**) scanner, a Python-based open-source web application security
    scanner, which is no longer available in the Kali Linux distribution due to a
    lack of updates to the product.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的版本中，我们讨论了 **Web 应用攻击与审计框架** (**w3af**) 扫描器，这是一个基于 Python 的开源 Web 应用安全扫描器，但由于该产品缺乏更新，现已不再包含在
    Kali Linux 发行版中。
- en: Kali also includes some application-specific vulnerability scanners such as
    WPScan and VoIP Hopper. Let us explore WPScan, commonly known as the WordPress
    security scanner, which can be utilized by attackers to automatically detect 22,800+
    WordPress vulnerabilities.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: Kali 还包括一些特定应用的漏洞扫描器，如 WPScan 和 VoIP Hopper。让我们探索一下 WPScan，它通常被称为 WordPress
    安全扫描器，攻击者可以利用它自动检测超过 22,800 个 WordPress 漏洞。
- en: 'This application is written in Ruby and it is preinstalled on Kali. The scan
    can be simply initiated by running `wpscan --url target.com` as shown in *Figure
    4.23*:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这个应用程序是用 Ruby 编写的，并且已经预安装在 Kali 上。扫描可以通过运行 `wpscan --url target.com` 来简单启动，如
    *图 4.23* 所示：
- en: '![A screenshot of a computer  Description automatically generated with medium
    confidence](../Images/B17765_04_23.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![A screenshot of a computer  Description automatically generated with medium
    confidence](../Images/B17765_04_23.png)'
- en: 'Figure 4.23: Scanning a web application using WPScan'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.23：使用 WPScan 扫描 Web 应用程序
- en: Threat modeling
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 威胁建模
- en: The passive and active reconnaissance phases map the target network and system
    and identify vulnerabilities that may be exploitable to achieve the attacker’s
    objective. During this stage of the attacker’s kill chain, there is a strong desire
    for action; testers want to immediately launch exploits and demonstrate that they
    can compromise the target. However, an unplanned attack may not be the most effective
    means of achieving the objective, and it may sacrifice the stealth that is needed
    to achieve it.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 被动和主动侦察阶段绘制目标网络和系统的图，并识别可能被利用的漏洞，以实现攻击者的目标。在攻击者的击杀链的这一阶段，有强烈的行动欲望；测试人员希望立即发起利用攻击并证明他们能够攻破目标。然而，未经过计划的攻击可能不是实现目标的最有效手段，且可能牺牲成功所需的隐秘性。
- en: Penetration testers have adopted (formally or informally) a process known as
    threat modeling, which was originally developed by network planners to develop
    defensive countermeasures against an attack.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员已经采用（正式或非正式）一种被称为威胁建模的过程，该过程最初是由网络规划人员开发的，用于制定防御性对策来应对攻击。
- en: 'Penetration testers and attackers have turned this defensive threat modeling
    methodology on its head to improve the success of an attack. Offensive threat
    modeling is a formal approach that combines the results of reconnaissance and
    research to develop an attack strategy. An attacker has to consider the available
    targets and identify the types of targets, listed as follows:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员和攻击者已经将这种防御性威胁建模方法颠倒过来，以提高攻击的成功率。进攻性威胁建模是一种正式的方法，结合了侦察和研究的结果来制定攻击策略。攻击者必须考虑可用的目标，并识别目标类型，具体如下：
- en: '**Primary targets**: These are the primary entry point targets to any organization,
    and when compromised, they serve the objective of a penetration test'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主要目标**：这些是任何组织的主要入口点目标，当被攻破时，它们成为渗透测试的目标。'
- en: '**Secondary targets**: These targets may provide information (security controls,
    password and logging policies, and local and domain administrator names and passwords)
    to support an attack or allow access to a primary target'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**次要目标**：这些目标可能提供信息（安全控制、密码和日志政策、本地及域管理员的用户名和密码），以支持攻击或允许访问主要目标。'
- en: '**Tertiary targets**: These targets may be unrelated to the testing or attack
    objective, but are relatively easy to compromise and may provide information or
    a distraction from the actual attack'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**三级目标**：这些目标可能与测试或攻击目标无关，但相对容易被攻破，并且可能提供信息或分散对实际攻击的注意力。'
- en: For each target type, you have to determine the approach to use. A single vulnerability
    can be attacked using stealth techniques, or multiple targets can be attacked
    using a volume of attacks to rapidly exploit a target. If a large-scale attack
    is implemented, the noise in the defender’s control devices will frequently cause
    them to minimize logging on the router and firewall or even fully disable it.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每种目标类型，您必须确定使用哪种方法。单一漏洞可以通过隐秘技术进行攻击，或者可以通过大量攻击来快速利用多个目标。如果实施大规模攻击，防御者的控制设备中的噪音将频繁导致他们最小化路由器和防火墙上的日志记录，甚至完全禁用它。
- en: 'The approach to be used will guide the selection of the exploit. Generally,
    attackers follow an attack tree methodology when creating a threat model, shown
    in *Figure 4.24*:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的方法将指导漏洞的选择。通常，攻击者在创建威胁模型时会遵循攻击树方法，如 *图 4.24* 所示：
- en: '![](../Images/B17765_04_24.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_24.png)'
- en: 'Figure 4.24: A sample attack tree for an objective'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.24：一个示例攻击树，展示攻击目标
- en: The attack tree approach allows the tester to easily visualize the attack options
    that are available and the alternative options that can be employed if a selected
    attack is not successful. Once an attack tree has been generated, the next step
    of the exploit phase is to identify the exploits that may be used to compromise
    vulnerabilities in the target. In the preceding attack tree, we visualize the
    objective of obtaining engineering documents, which are crucial for organizations
    that provide engineering services.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击树方法使测试员能够轻松可视化可用的攻击选项，以及如果选定的攻击未成功时可采用的替代选项。一旦生成攻击树，漏洞利用阶段的下一步是识别可能用于利用目标中漏洞的攻击方式。在前述攻击树中，我们可视化了获取工程文档的目标，这些文档对于提供工程服务的组织至关重要。
- en: 'Penetration testers can also utilize pytm, a Python-based tool that can be
    very handy during the exploitation of web applications, helping you understand
    how to infiltrate a specific organization from their exposed servers. This tool
    comes with 100 predefined web-based threats that also provide the capability to
    create a **Data Flow Diagram** (**DFD**) within a few minutes, which can be utilized
    as typical entry points. This can be directly downloaded from GitHub or by running
    `git clone https://github.com/izar/pytm`. Once downloaded, install all the dependencies
    to run the program:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试员还可以使用 pytm，这是一个基于 Python 的工具，在 web 应用程序的漏洞利用过程中非常有用，帮助你理解如何通过暴露的服务器渗透特定组织。该工具包含
    100 个预定义的基于 Web 的威胁，并且提供在几分钟内创建**数据流图**（**DFD**）的能力，这些图可以作为典型的入口点使用。该工具可以直接从 GitHub
    下载，或者通过运行 `git clone https://github.com/izar/pytm` 来获取。下载后，安装所有依赖项以运行该程序：
- en: '[PRE10]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Penetration testers should see the DFD generated for the web server on the
    cloud by pytm as shown in *Figure 4.25*:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试员应查看通过 pytm 生成的 web 服务器的 DFD，如*图 4.25*所示：
- en: '![](../Images/B17765_04_25.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_04_25.png)'
- en: 'Figure 4.25: Sample DFD generated by pytm'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.25：通过 pytm 生成的示例 DFD
- en: This DFD can be utilized by the attackers to identify the right entry points
    of the application, identify the vulnerabilities, and take advantage of them.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以利用这个 DFD 来识别应用程序的正确入口点，发现漏洞并加以利用。
- en: Summary
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we focused on multiple vulnerability assessment tools and techniques.
    We learned how to write our own vulnerability script for Nmap using NSE, and how
    to use a tool that can convert the findings from active reconnaissance into a
    defined action that establishes access for the tester to the target. We also learned
    how to install the OpenVAS, Nessus, and Nexpose vulnerability scanners on Kali
    Linux and utilize the community edition of Qualys in the cloud.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了多种漏洞评估工具和技术。我们学习了如何使用 NSE 为 Nmap 编写自己的漏洞脚本，如何使用一种工具将主动侦察的结果转化为定义好的行动，从而为测试者建立访问目标的权限。我们还学习了如何在
    Kali Linux 上安装 OpenVAS、Nessus 和 Nexpose 漏洞扫描器，并在云中利用 Qualys 的社区版。
- en: Kali provides several tools to facilitate the development, selection, and activation
    of exploits, including the internal exploit-db (`searchsploit`), as well as several
    frameworks that simplify the use and management of exploits. We also explored
    the application-specific WordPress security scanner (WPScan) and discussed the
    basic principles of threat modeling. Additionally, we learned how to create a
    threat DFD using pytm, which helps penetration testers identify most entry points
    and infiltrate a web application.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Kali 提供了多种工具，以便于开发、选择和激活漏洞，包括内部的 exploit-db（`searchsploit`），以及几个简化漏洞使用和管理的框架。我们还探索了特定应用的
    WordPress 安全扫描器（WPScan），并讨论了威胁建模的基本原理。此外，我们学习了如何使用 pytm 创建威胁数据流图（DFD），帮助渗透测试员识别大多数入口点并渗透
    web 应用程序。
- en: The next chapter focuses on the most important part of the attacker’s kill chain,
    the exploitation phase. Physical security is one method to gain access to data
    systems (if you can boot, you’ve got root!). Physical access is also closely tied
    to social engineering, the art of hacking humans and taking advantage of their
    trust. This is the part of the attack where the attackers achieve their objective.
    Typical exploitation activities include horizontal escalation by taking advantage
    of poor access controls, and vertical escalation by theft of user credentials.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章重点讲解攻击者杀伤链中最重要的部分——**利用阶段**。物理安全是获取数据系统访问权限的一种方法（如果你能启动系统，就能获得根权限！）。物理访问还与社会工程学密切相关，社会工程学是利用人类的信任来进行攻击的艺术。这是攻击者实现其目标的阶段。典型的利用活动包括通过利用不良的访问控制进行横向升级，以及通过窃取用户凭证进行纵向升级。
