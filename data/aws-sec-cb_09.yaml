- en: '9'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '9'
- en: Advanced Identity and Directory Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级身份与目录管理
- en: Having established a foundation in **IAM Identity Center** (formerly **AWS SSO**
    ), IAM users, IAM groups, IAM roles, and IAM policies for identity and access
    management in previous chapters, we are now set to explore the more advanced aspects
    of user identity and directory management.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们已经为**IAM身份中心**（前称**AWS SSO**）、IAM用户、IAM组、IAM角色和IAM策略在身份与访问管理方面打下了基础，现在我们将深入探讨用户身份和目录管理的更高级内容。
- en: 'We will first delve into serverless identity-as-a-service user management strategies
    within AWS using **Amazon Cognito** . We will explore the two key functionalities
    of Cognito within this chapter: **user pools** and **identity pools** . User pools
    act as robust, scalable directories that handle user registration, authentication,
    and integration with our applications, along with features such as **multi-factor
    authentication** ( **MFA** ) and **federated identity** logins. Conversely, identity
    pools allocate temporary AWS credentials to authenticated users, allowing them
    to use AWS services such as Amazon S3, Amazon DynamoDB, and AWS Lambda.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先深入探讨在AWS中使用**Amazon Cognito**进行无服务器身份即服务的用户管理策略。本章将重点介绍Cognito的两个关键功能：**用户池**和**身份池**。用户池充当强大且可扩展的目录，处理用户注册、身份验证和与我们的应用程序集成，并具备**多因素身份验证**（**MFA**）和**联合身份**登录等功能。相反，身份池为经过身份验证的用户分配临时的AWS凭证，允许他们使用AWS服务，如Amazon
    S3、Amazon DynamoDB和AWS Lambda。
- en: Next, we will delve into the **directory service** solutions available within
    AWS, including AWS Simple AD, AWS Active Directory, and AD Connect. We will also
    examine the integration of **Microsoft Entra ID** (previously known as **Azure
    Active Directory** ) with IAM Identity Center, which allows Entra ID users to
    access AWS resources effortlessly.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入探讨AWS中的**目录服务**解决方案，包括AWS Simple AD、AWS Active Directory和AD Connect。我们还将研究**Microsoft
    Entra ID**（之前称为**Azure Active Directory**）与IAM身份中心的集成，这使得Entra ID用户能够轻松访问AWS资源。
- en: Important note
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: This chapter’s recipes might require supplementary knowledge, including familiarity
    with Microsoft products such as Active Directory and Microsoft Entra ID, as well
    as AWS services and features that have not yet been covered in this book. The
    recipes within this chapter are not mandatory for understanding and practicing
    subsequent recipes within the book. Therefore, if you are progressing through
    the chapters in this book and lack knowledge of the required products or services,
    and if you currently have no need for these solutions, feel free to read the steps
    within the recipes for understanding and skip practicing them until they are needed,
    and you have the required prerequisite knowledge. You may also learn enough about
    the required products and services from the links provided within the respective
    recipes.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的教程可能需要一些额外的知识，包括熟悉Microsoft产品（如Active Directory和Microsoft Entra ID），以及本书尚未覆盖的AWS服务和功能。本章的教程并非理解和实践本书后续教程的必需内容。因此，如果你在阅读本书时缺乏对所需产品或服务的了解，并且目前不需要这些解决方案，可以仅阅读教程步骤以了解内容，直到需要时再进行实践，并确保你具备所需的先决知识。你也可以通过教程中提供的链接，学习到足够的所需产品和服务知识。
- en: 'This chapter contains the following recipes:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包含以下教程：
- en: Working with Amazon Cognito user pools
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Amazon Cognito用户池
- en: Using identity pools to access AWS resources
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用身份池访问AWS资源
- en: Using AWS Simple AD for creating a lightweight directory solution
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AWS Simple AD创建轻量级目录解决方案
- en: Using Microsoft Entra ID as the identity provider within AWS
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在AWS中使用Microsoft Entra ID作为身份提供者
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Before diving into the recipes of this chapter, we need to ensure we have the
    following requirements and knowledge in place:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始本章的教程之前，我们需要确保具备以下要求和知识：
- en: We need an active AWS account to complete the recipes within this chapter. If
    we are using AWS Organizations, we can use the management account of the Organization,
    as we will be configuring many things at the AWS Organization level in this chapter.
    I will be using the **aws-sec-cookbook-1** account that we created in the *Multi-account
    management with AWS Organizations* recipe in [*Chapter 1*](B21384_01.xhtml#_idTextAnchor020)
    .
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要一个有效的 AWS 账户来完成本章中的食谱。如果我们使用 AWS Organizations，可以使用组织的管理账户，因为本章中将会在 AWS
    组织层级配置许多内容。我将使用在[*第1章*](B21384_01.xhtml#_idTextAnchor020)的*使用 AWS Organizations
    进行多账户管理*食谱中创建的**aws-sec-cookbook-1**账户。
- en: For administrative actions, we need a user who has **AdministratorAccess** permission
    to the AWS account we are working with.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于管理操作，我们需要具有**AdministratorAccess**权限的用户，以访问我们正在使用的 AWS 账户。
- en: Code files for this book are available at [https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition](https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition)
    . The code files for this chapter are available at [https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition/tree/main/Chapter09](https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition/tree/main/Chapter09)
    .
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码文件可在 [https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition](https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition)
    获得。本章的代码文件可在 [https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition/tree/main/Chapter09](https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition/tree/main/Chapter09)
    获得。
- en: Working with Amazon Cognito user pools
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与 Amazon Cognito 用户池合作
- en: 'Amazon Cognito is used primarily for two use cases: secure user identity management
    for our applications using its user pools feature and secure access to AWS resources
    by making use of temporary credentials using its identity pools feature. In this
    recipe, we will explore the user pools feature of Amazon Cognito by creating a
    user pool from the AWS Management Console and then creating a user within it.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Cognito 主要用于两种使用场景：通过其用户池功能为我们的应用程序提供安全的用户身份管理，以及通过其身份池功能利用临时凭证提供对 AWS
    资源的安全访问。在本食谱中，我们将通过从 AWS 管理控制台创建用户池并在其中创建用户来探索 Amazon Cognito 的用户池功能。
- en: Getting ready
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: To complete this recipe, we need Amazon **Simple Notification Service** ( **SNS**
    ) for sending SMS if we plan to use SMS verification within this recipe.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 若要完成此食谱，我们需要 Amazon **Simple Notification Service**（**SNS**）以便在我们计划使用 SMS 验证时发送
    SMS。
- en: Important note
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When we start using Amazon SNS for SMS messaging, our AWS account operates in
    an SMS sandbox. This sandbox serves as a secure space to test Amazon SNS functionalities
    without compromising our sender reputation. While in the sandbox, we are limited
    to sending SMS messages to verified destination phone numbers only.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们开始使用 Amazon SNS 发送 SMS 消息时，我们的 AWS 账户会在 SMS 沙箱中操作。此沙箱作为一个安全空间，允许我们测试 Amazon
    SNS 功能而不会影响我们的发送者声誉。在沙箱中，我们只能向经过验证的目标电话号码发送 SMS 消息。
- en: 'If our AWS account is within the SMS sandbox, and we want to use SMS verification
    within this recipe, we can add a phone number to **Sandbox destination phone numbers**
    as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的 AWS 账户位于 SMS 沙箱中，并且我们希望在此食谱中使用 SMS 验证，可以按照以下步骤将电话号码添加到**沙箱目标电话号码**中：
- en: Log in to the AWS Management Console and navigate to the Amazon SNS service.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 AWS 管理控制台并导航到 Amazon SNS 服务。
- en: Click on **Text messaging (SMS)** from the left sidebar.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧边栏中的**文本消息（SMS）**。
- en: Verify under **Account information** that this account is in the SMS sandbox.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**账户信息**下确认该账户位于 SMS 沙箱中。
- en: In the **Sandbox destination phone numbers** section, click on **Add** **phone
    number** .
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**沙箱目标电话号码**部分，点击**添加** **电话号码**。
- en: On the **Add a phone number** page, enter the phone number, selecting the correct
    country code. Also, choose the verification message language, which is the language
    the verification message will be sent in.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**添加电话号码**页面，输入电话号码，并选择正确的国家代码。同时，选择验证消息的语言，即将要发送的验证消息语言。
- en: Click on **Add phone number** . This will take us to the **Verify phone** **number**
    page.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加电话号码**。这将带我们进入**验证电话号码**页面。
- en: On the **Verify phone number** page, enter the verification code received on
    the provided phone number and click **Verify** **phone number** .
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**验证电话号码**页面，输入收到的验证码并点击**验证** **电话号码**。
- en: If it is successfully verified, the phone number should now appear with the
    **Verification status** as **Verified** in the **Sandbox destination phone numbers**
    section on the **Text messaging (** **SMS)** page.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果成功验证，手机号码现在应该会显示在**短信（SMS）**页面的**沙箱目标电话号码**部分，并且**验证状态**应显示为**已验证**。
- en: We can explore more about Amazon SNS using the link provided in the *See also*
    section of this recipe. Assuming that we have set the environment up for this
    recipe as discussed within this section, we can get started with creating a Cognito
    user pool.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过本食谱中*另见*部分提供的链接进一步探索 Amazon SNS。假设我们已经按照本节中的讨论设置好环境，现在可以开始创建 Cognito 用户池。
- en: How to do it...
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We can create a Cognito user pool from the AWS Management Console as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下方式在 AWS 管理控制台中创建一个 Cognito 用户池：
- en: Log in to the AWS Account Management Console and navigate to the Cognito service.
    We should see the option to get started based on the business case. The default
    is **Add user directories to your app** , which is done using user pools.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 AWS 账户管理控制台并导航到 Cognito 服务。我们应该看到根据业务案例开始的选项。默认选项是**将用户目录添加到您的应用程序**，这是通过用户池完成的。
- en: '![Figure 9.1 – Creating a user pool business case](image/B21384_09_1.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.1 – 创建用户池业务案例](image/B21384_09_1.jpg)'
- en: Figure 9.1 – Creating a user pool business case
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.1 – 创建用户池业务案例
- en: The drop-down menu also includes the **Grant access to AWS services** option
    for business cases using identity pools.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下拉菜单还包括**授予访问 AWS 服务权限**选项，适用于使用身份池的业务案例。
- en: Select the business case for **Add user directories to your app** , as shown
    in *Figure 9* *.1* , and click on **Create user pool** . We can also create user
    pools by going to the **User pools** page by clicking on the **User pools** menu
    option from the left sidebar.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**将用户目录添加到您的应用程序**的业务案例，如*图 9.1*所示，并点击**创建用户池**。我们也可以通过点击左侧边栏的**用户池**菜单选项，进入**用户池**页面来创建用户池。
- en: Under **Provider types** , select only **Cognito user pool** (which is the default).
    Under **Cognito user pool sign-in options** , select **User name** , **Email**
    , and **Phone number** . Leave the other options as-is and click **Next** .
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**提供商类型**下，只选择**Cognito 用户池**（这是默认选项）。在**Cognito 用户池登录选项**下，选择**用户名**、**电子邮件**和**电话号码**。保持其他选项不变，点击**下一步**。
- en: '![Figure 9.2 – Configuring authentication providers](image/B21384_09_2.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.2 – 配置身份验证提供商](image/B21384_09_2.jpg)'
- en: Figure 9.2 – Configuring authentication providers
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2 – 配置身份验证提供商
- en: On the **Configure security requirements** page, set **Password policy mode**
    to **Cognito defaults** (which is the default).
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置安全要求**页面，将**密码策略模式**设置为**Cognito 默认**（这是默认选项）。
- en: For **Multi-factor authentication** , select **Require MFA - Recommended** select
    **Authenticator apps** .
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**多重身份验证**，选择**需要 MFA - 推荐**，然后选择**身份验证器应用程序**。
- en: '![Figure 9.3 – Configuring the MFA settings during user pool creation](image/B21384_09_3.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.3 – 在用户池创建期间配置 MFA 设置](image/B21384_09_3.jpg)'
- en: Figure 9.3 – Configuring the MFA settings during user pool creation
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3 – 在用户池创建期间配置 MFA 设置
- en: In the **User account recovery** section, select **Enable self-service account
    recovery – Recommended** . Under **Delivery method for user account recovery messages**
    , select **Email only** . Then click **Next** .
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**用户账户恢复**部分，选择**启用自助账户恢复 - 推荐**。在**用户账户恢复消息的传递方式**下，选择**仅通过电子邮件**。然后点击**下一步**。
- en: '![Figure 9.4 – Configuring the user account recovery settings during user pool
    creation](image/B21384_09_4.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.4 – 在用户池创建期间配置用户账户恢复设置](image/B21384_09_4.jpg)'
- en: Figure 9.4 – Configuring the user account recovery settings during user pool
    creation
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4 – 在用户池创建期间配置用户账户恢复设置
- en: On the **Configure sign-up experience** page, select **Enable self-registration**
    , **Allow Cognito to automatically send messages to verify and confirm - Recommended**
    , and **Send email message, verify email address** . Leave the other values as-is
    and click **Next** .
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置注册体验**页面，选择**启用自助注册**，**允许 Cognito 自动发送消息以验证和确认 - 推荐**，并选择**发送电子邮件消息，验证电子邮件地址**。保持其他值不变，点击**下一步**。
- en: Important note
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Enabling user sign-up in our user pool allows individuals from anywhere on the
    internet to register for an account and log in to our applications. We need to
    avoid turning it on unless we are ready to allow public sign-up access to our
    app. We can also personalize the sign-up experience by incorporating up to 50
    custom attributes from the sign-up experience page. However, it’s important to
    note that once a user pool is established, the names of these custom attributes
    cannot be modified.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 启用用户池中的用户注册功能允许来自互联网上任何地方的个人注册账户并登录到我们的应用程序。在我们准备好允许公众注册访问应用程序之前，需要避免启用该功能。我们还可以通过在注册体验页面中集成最多
    50 个自定义属性来个性化注册体验。然而，重要的是要注意，一旦用户池建立，这些自定义属性的名称将无法修改。
- en: On the **Configure message delivery** page, select **Send email** **with Cognito**
    .
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置消息传递**页面，选择**使用 Cognito 发送电子邮件**。
- en: Important note
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: We can initially utilize Cognito’s default email address for development purposes,
    which supports up to 50 emails daily. If we have established a verified sender
    through Amazon SES and wish to utilize its features, we should choose the **Send
    email with Amazon SES - Recommended** option and input the necessary SES details.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以初步使用 Cognito 的默认电子邮件地址进行开发，该地址每天最多支持发送 50 封电子邮件。如果我们已经通过 Amazon SES 建立了一个已验证的发件人，并希望使用其功能，则应选择**使用
    Amazon SES 发送电子邮件 - 推荐**选项，并输入必要的 SES 详细信息。
- en: Provide the **SecCbCognitoUserPoolRole** value for **IAM role name** within
    **SMS settings** . Leave everything else as-is and click **Next** .
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**短信设置**中，提供**SecCbCognitoUserPoolRole**作为**IAM 角色名称**。保持其他设置不变，然后点击**下一步**。
- en: '![Figure 9.5 – The SMS settings during user pool creation](image/B21384_09_5.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.5 – 用户池创建期间的短信设置](image/B21384_09_5.jpg)'
- en: Figure 9.5 – The SMS settings during user pool creation
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.5 – 用户池创建期间的短信设置
- en: Important note
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: If our AWS account is currently in the SMS sandbox, we must add and verify any
    phone numbers we intend to use for SMS verification to the sandbox’s list of verified
    destination phone numbers, as outlined in the *Getting ready* section of this
    recipe. If our account is not in the sandbox, we need to configure SMS messaging
    by following the instructions provided by Amazon on the screen, as shown in *Figure
    9* *.5* . Please note that a detailed walkthrough of setting up SMS messaging
    is beyond the scope of this book.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的 AWS 账户当前处于 SMS 沙盒环境中，我们必须将计划用于 SMS 验证的任何电话号码添加并验证到沙盒的已验证目标电话号码列表中，具体内容请参见本食谱中的*准备工作*部分。如果我们的账户不在沙盒中，我们需要按照
    Amazon 在屏幕上提供的说明配置 SMS 消息服务，如*图 9.5*所示。请注意，设置 SMS 消息服务的详细过程超出了本书的范围。
- en: On the **Integrate your app** page, select **User pool name** under **SecCbUserPool**
    , and select **Use the Cognito Hosted UI** . In the **Domain** section, select
    **Use a Cognito domain** and enter a unique domain prefix.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**集成应用程序**页面，选择**SecCbUserPool**下的**用户池名称**，然后选择**使用 Cognito 托管 UI**。在**域名**部分，选择**使用
    Cognito 域名**并输入一个唯一的域名前缀。
- en: Important note
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: We can also input a custom domain that we own to be used for Cognito-hosted
    registration and login pages. To utilize a custom domain, providing a DNS record
    and a certificate from **AWS Certificate Manager** ( **ACM** ) is a prerequisite.
    For production workloads, AWS recommends the use of a custom domain to enhance
    professionalism and branding.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以输入自己拥有的自定义域名，用于 Cognito 托管的注册和登录页面。要使用自定义域名，提供 DNS 记录和来自**AWS 证书管理器**（**ACM**）的证书是先决条件。对于生产工作负载，AWS
    推荐使用自定义域名，以提升专业性和品牌形象。
- en: In the **Initial app client** section, provide **Sec Cb App** under **App client
    name** . Under **Client secret** , select **Generate a client secret** , and for
    **Allowed callback URLs** , give a URL to redirect after authentication, say [https://www.cloudericks.com](https://www.cloudericks.com)
    . Click **Next** .
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**初始应用客户端**部分，提供**Sec Cb App**作为**应用客户端名称**。在**客户端密钥**下，选择**生成客户端密钥**，对于**允许的回调
    URL**，提供一个身份验证后重定向的 URL，例如 [https://www.cloudericks.com](https://www.cloudericks.com)。点击**下一步**。
- en: Important note
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Client secrets serve as a means for the server-side part of an app to authenticate
    API requests, offering a layer of security that helps prevent third parties from
    impersonating your client. It is essential to note that once Amazon Cognito generates
    a client secret for your app client, it cannot be modified or deleted.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端密钥作为应用程序服务器端身份验证 API 请求的一种方式，提供了一层安全性，帮助防止第三方冒充您的客户端。需要注意的是，一旦 Amazon Cognito
    为您的应用客户端生成了客户端密钥，便无法修改或删除。
- en: Review all details and click **Create user pools** . We should now be able to
    see our new user pool on the **User** **pools** page.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查所有细节并点击**创建用户池**。现在我们应该能在**用户池**页面上看到我们的新用户池。
- en: 'From the **User pools** page, click on the hyperlinked name of the user pool
    we created to access its settings page. The settings page should have a **User
    pool overview** section and the **Delete user pool** button, as shown in the following
    figure:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**用户池**页面，点击我们创建的用户池的超链接名称，访问其设置页面。设置页面应包含**用户池概览**部分以及**删除用户池**按钮，如下图所示：
- en: '![Figure 9.6 – The User pool overview page](image/B21384_09_6.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.6 – 用户池概览页面](image/B21384_09_6.jpg)'
- en: Figure 9.6 – The User pool overview page
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.6 – 用户池概览页面
- en: Scroll down and navigate to the **Users** tab, which is the first tab.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并导航到**用户**选项卡，这是第一个选项卡。
- en: '![Figure 9.7 – The Users tab for the user pool](image/B21384_09_7.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.7 – 用户池的用户选项卡](image/B21384_09_7.jpg)'
- en: Figure 9.7 – The Users tab for the user pool
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.7 – 用户池的用户选项卡
- en: Click on **Create user** .
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建用户**。
- en: On the **Create user** page, select **Email** and **Phone** under **Alias attributes
    used to** **sign in** .
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**创建用户**页面，选择**电子邮件**和**电话**作为**用于登录的别名属性**。
- en: '![Figure 9.8 – Configuring the alias attributes used to sign in](image/B21384_09_8.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.8 – 配置用于登录的别名属性](image/B21384_09_8.jpg)'
- en: Figure 9.8 – Configuring the alias attributes used to sign in
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.8 – 配置用于登录的别名属性
- en: Select **Don’t send an invitation** for the **Invitation** **message** option.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**不发送邀请**作为**邀请信息**选项。
- en: '![Figure 9.9 – Configuring the invitation message](image/B21384_09_9.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.9 – 配置邀请信息](image/B21384_09_9.jpg)'
- en: Figure 9.9 – Configuring the invitation message
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.9 – 配置邀请信息
- en: Provide **User name** , **Email address** , **Phone number** , and **Temporary
    password** for the user, and click on **Create user** .
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供**用户名**、**电子邮件地址**、**电话号码**和**临时密码**，然后点击**创建用户**。
- en: '![Figure 9.10 – New user configuration](image/B21384_09_10.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.10 – 新用户配置](image/B21384_09_10.jpg)'
- en: Figure 9.10 – New user configuration
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.10 – 新用户配置
- en: 'The new user should now appear in the **Users** tab similar to the following
    figure:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 新用户应该出现在**用户**选项卡中，如下图所示：
- en: '![Figure 9.11 – The Users tab with the new user](image/B21384_09_11.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.11 – 包含新用户的用户选项卡](image/B21384_09_11.jpg)'
- en: Figure 9.11 – The Users tab with the new user
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.11 – 包含新用户的用户选项卡
- en: From the user pool’s settings page, navigate to the **App integration** tab
    and click on the hyperlinked **App client name** of the initial app client that
    was created as part of this recipe. We should now see our app’s settings page.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从用户池的设置页面，导航到**应用集成**标签并点击初始应用客户端的超链接**应用客户端名称**，该客户端是在本教程中创建的。现在我们应该能看到我们应用的设置页面。
- en: 'In the **Hosted UI** section within the app’s settings page, click on **View
    Hosted UI** . We should now see the default Hosted UI sign-in page, as follows:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用程序设置页面的**托管UI**部分，点击**查看托管UI**。现在我们应该能看到默认的托管UI登录页面，如下所示：
- en: '![Figure 9.12 – The hosted UI sign-in page](image/B21384_09_12.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.12 – 托管UI登录页面](image/B21384_09_12.jpg)'
- en: Figure 9.12 – The hosted UI sign-in page
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.12 – 托管UI登录页面
- en: Enter the username and password for the user we created in this recipe and click
    on **Sign in** . We will be taken to the **Change** **Password** screen.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入我们在本教程中创建的用户的用户名和密码，然后点击**登录**。我们将进入**更改密码**屏幕。
- en: 'Within the **Change Password** screen, enter a new password under the checkboxes
    with the **New Password** and **Enter New Password Again text** labels, and click
    on **Send** . This will send a **One Time Password** ( **OTP** ) to the phone
    number provided while creating the user and ask us to enter it for verification,
    as shown in the following figure:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**更改密码**屏幕中，在带有**新密码**和**再次输入新密码**标签的复选框下输入新密码，然后点击**发送**。这将会向创建用户时提供的电话号码发送一个**一次性密码**（**OTP**），并要求我们输入该密码以进行验证，如下图所示：
- en: '![Figure 9.13 – SMS verification](image/B21384_09_13.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.13 – 短信验证](image/B21384_09_13.jpg)'
- en: Figure 9.13 – SMS verification
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.13 – 短信验证
- en: 'Once verified, we will be redirected to the configured URL. If you were following
    the recipe and provided the [https://www.cloudericks.com](https://www.cloudericks.com)
    URL, you should see a screen similar to the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦验证成功，我们将被重定向到配置的URL。如果您在跟随教程并提供了[https://www.cloudericks.com](https://www.cloudericks.com)
    URL，您应该看到一个类似于以下的页面：
- en: '![Figure 9.14 – The post-sign in page](image/B21384_09_14.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.14 – 登录后页面](image/B21384_09_14.jpg)'
- en: Figure 9.14 – The post-sign in page
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.14 – 登录后页面
- en: In this recipe, we created a user pool and then created a user from the AWS
    Management Console. Alternatively, users can sign up on their own through the
    hosted UI’s sign-up option. Customizations for the sign-in and sign-up experiences,
    and configuring the **Groups** , **Messaging** , **App integration** , and **User
    pool** properties, can be made from the user pool’s settings page by navigating
    to their respective tabs, as shown in *Figure 9* *.7* .
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们创建了一个用户池，并通过 AWS 管理控制台创建了一个用户。或者，用户也可以通过托管 UI 的注册选项自行注册。对于登录和注册体验的自定义，以及配置
    **用户组**、**消息传递**、**应用集成** 和 **用户池** 属性，可以通过用户池的设置页面进入相应的标签页进行操作，如 *图 9* *.7* 所示。
- en: How it works...
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Amazon Cognito provides two primary features: user pools and identity pools.
    User pools serve as secure directories that handle sign-up and sign-in operations
    for app users, while identity pools are mechanisms for issuing AWS credentials
    to authenticated users, enabling access to the AWS services. In this recipe, we
    created a user pool.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Cognito 提供了两项主要功能：用户池和身份池。用户池作为安全目录，处理应用用户的注册和登录操作，而身份池则是向认证用户颁发 AWS
    凭证的机制，允许访问 AWS 服务。在本食谱中，我们创建了一个用户池。
- en: For the user pool sign-in options, we selected **Username** , **Email** , and
    **Phone number** . We can have one or both email or phone number as the username
    and then use these to sign in instead of username. For enhanced security, we also
    selected MFA and specified the account recovery mechanisms. For a better sign-up
    experience, we enabled self-registration and configured automatic message verification.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对于用户池的登录选项，我们选择了 **用户名**、**电子邮件** 和 **电话号码**。我们可以将电子邮件或电话号码作为用户名，并使用它们代替用户名进行登录。为了增强安全性，我们还选择了多因素认证（MFA）并指定了账户恢复机制。为了提供更好的注册体验，我们启用了自助注册，并配置了自动消息验证。
- en: We used the **Cognito domain** option for Cognito-hosted registration and login
    pages to keep the recipe simple. We can also use a custom domain that we own instead.
    To utilize a custom domain, providing a DNS record and a certificate from ACM
    is a prerequisite. For production workloads, AWS recommends the use of a custom
    domain to enhance professionalism and branding.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了 **Cognito 域** 选项来托管 Cognito 的注册和登录页面，以简化操作。我们也可以使用自己拥有的自定义域。要使用自定义域，必须提供
    DNS 记录和来自 ACM 的证书。对于生产工作负载，AWS 推荐使用自定义域，以增强专业性和品牌形象。
- en: No custom attributes were set up during our process. However, the sign-up experience
    can be tailored by introducing up to 50 custom attributes. Once a user pool is
    established, it’s important to remember that the names of these custom attributes
    become fixed and cannot be altered. We can, however, add new ones later.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的过程中没有设置自定义属性。不过，可以通过引入最多 50 个自定义属性来定制注册体验。一旦用户池建立，必须记住这些自定义属性的名称会变得固定，无法更改。然而，我们可以稍后添加新的属性。
- en: An initial app client was also created during the process with default settings.
    Amazon Cognito client apps work by authenticating users and then exchanging tokens
    with Amazon Cognito for temporary AWS credentials. These temporary AWS credentials
    can then be used to access AWS resources.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中还创建了一个初始的应用客户端，采用了默认设置。Amazon Cognito 客户端应用通过认证用户，并与 Amazon Cognito 交换令牌来获取临时
    AWS 凭证。这些临时 AWS 凭证可以用来访问 AWS 资源。
- en: 'Client apps within Cognito can be classified into three categories:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Cognito 中的客户端应用可以分为三类：
- en: '**Public client** : This is typically a client-side application such as a native
    app on a mobile device or a browser-based app. In this scenario, the app makes
    API requests from devices that cannot be entrusted with a client secret due to
    the potential for exposure.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共客户端**：通常是客户端应用程序，比如移动设备上的原生应用或基于浏览器的应用。在这种情况下，应用程序会从不能被信任存储客户端密钥的设备上发起
    API 请求，因为这些设备可能会暴露密钥。'
- en: '**Confidential client** : This is often a server-side application that has
    the capability to securely store a client secret. API requests to Cognito are
    routed through a central server, which is considered secure and capable of protecting
    this sensitive information.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机密客户端**：通常是服务器端应用程序，能够安全存储客户端密钥。API 请求会通过中央服务器路由，该服务器被认为是安全的，能够保护这些敏感信息。'
- en: '**Custom app** : This option allows for a more tailored setup. You have the
    autonomy to define the specific grant types, authentication flows, and whether
    a client secret is required based on your unique requirements and security considerations.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义应用**：此选项允许进行更为个性化的设置。您可以根据独特的需求和安全考虑，定义特定的授权类型、身份验证流程，以及是否需要客户端密钥。'
- en: We will look into some more details including alternative business cases in
    the next section.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一节中探讨更多细节，包括替代的业务案例。
- en: There’s more...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: 'In this recipe, we created an Amazon Cognito user pool by selecting the **Add
    user directories to your app** business case, as shown in *Figure 9* *.1* . We
    can instead select the **Grant access to AWS services** business case from the
    dropdown to create an identity pool, as shown in the following figure:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方案中，我们通过选择**将用户目录添加到您的应用**业务案例创建了一个 Amazon Cognito 用户池，如*图 9.1*所示。我们也可以从下拉菜单中选择**授予访问
    AWS 服务权限**业务案例来创建身份池，如下图所示：
- en: '![Figure 9.15 – Creating an identity pool business case](image/B21384_09_15.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.15 – 创建身份池业务案例](image/B21384_09_15.jpg)'
- en: Figure 9.15 – Creating an identity pool business case
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.15 – 创建身份池业务案例
- en: 'In the recipe, under **Provider types** , we only selected the Cognito user
    pool (which is the default), as shown in *Figure 9* *.2* . As shown in that figure,
    the **Cognito user pool** option is selected by default and cannot be unchecked,
    and we also have an option called **Federated identity providers** . If we select
    the **Federated identity providers** option, we will get additional sign-in options
    enabling us to use credentials from popular social IdPs such as Facebook, Google,
    Amazon, and Apple, or from external directories via SAML or **Open ID Connect**
    ( **OIDC** ) protocols, as shown in the following figure:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方案中，**提供者类型**下，我们仅选择了 Cognito 用户池（这是默认选项），如*图 9.2*所示。如该图所示，**Cognito 用户池**选项默认被选中且无法取消，此外我们还可以选择一个名为**联合身份提供者**的选项。如果我们选择**联合身份提供者**选项，将获得额外的登录选项，允许我们使用来自流行社交身份提供者（如
    Facebook、Google、Amazon 和 Apple）的凭证，或通过 SAML 或**Open ID Connect**（**OIDC**）协议从外部目录获取凭证，如下图所示：
- en: '![Figure 9.16 – Federated sign-in options for user pools](image/B21384_09_16.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.16 – 用户池的联合登录选项](image/B21384_09_16.jpg)'
- en: Figure 9.16 – Federated sign-in options for user pools
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.16 – 用户池的联合登录选项
- en: Selecting the **Cognito user pool** option is mandatory since it maintains profiles
    for both direct and federated users within our user pool. However, if our goal
    is to exclusively offer federated sign-in options, we can turn off the self-registration
    feature in our user pool, thus mandating that only administrators have the authority
    to create user profiles. Additionally, should we wish to restrict sign-ins through
    the user pool, it is possible to deselect our user pool as an IdP within our app
    clients.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**Cognito 用户池**选项是强制性的，因为它在我们的用户池中为直接用户和联合用户维护用户档案。然而，如果我们的目标是仅提供联合登录选项，我们可以在用户池中关闭自注册功能，从而强制要求只有管理员才有权限创建用户档案。此外，如果我们希望限制通过用户池进行的登录，可以取消选择用户池作为应用客户端中的身份提供者（IdP）。
- en: We may also integrate Amazon Cognito with **Amazon Verified Permissions** ,
    a refined authorization service designed for enforcing role and attribute-based
    access control in applications that utilize Amazon Cognito for authentication.
    Verified Permissions evaluates a user’s attributes against the established access
    rules for a given resource based on their identity or access token. It then issues
    an authorization decision – either granting or denying access. This service allows
    for the centralization of authorization across all your applications and resources
    into one **policy store** . Policies are formulated in **Cedar** , an open source
    language specifically designed for crafting access control protocols.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以将 Amazon Cognito 与**Amazon Verified Permissions**集成，后者是一个精细化的授权服务，旨在强制执行基于角色和属性的访问控制，适用于使用
    Amazon Cognito 进行身份验证的应用程序。Verified Permissions 根据用户的身份或访问令牌，评估其属性与特定资源的访问规则，并做出授权决策——要么授权访问，要么拒绝访问。此服务允许将所有应用程序和资源的授权集中到一个**策略存储**中。策略是用**Cedar**语言编写的，Cedar
    是一种专门设计用于制定访问控制协议的开源语言。
- en: We created a user pool from the console in this recipe. We can also create a
    user pool with the **aws cognito-idp create-user-pool** CLI command, passing **pool-name**
    and **region** . Even though we can directly specify all user pool settings from
    the command line by referring to the documentation, it is an easier and safer
    approach to use an input JSON file with all the configurations specified.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们通过控制台创建了一个用户池。我们也可以使用 **aws cognito-idp create-user-pool** CLI 命令创建一个用户池，传递
    **pool-name** 和 **region**。尽管我们可以直接通过命令行指定所有用户池设置并参考文档，但使用包含所有配置的输入 JSON 文件是一种更简便和安全的方法。
- en: See also
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: We can read more about Amazon Cognito at [https://www.cloudericks.com/blog/getting-started-with-amazon-cognito](https://www.cloudericks.com/blog/getting-started-with-amazon-cognito)
    .
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以在 [https://www.cloudericks.com/blog/getting-started-with-amazon-cognito](https://www.cloudericks.com/blog/getting-started-with-amazon-cognito)
    阅读更多关于 Amazon Cognito 的内容。
- en: We can read more about Amazon SNS service at [https://www.cloudericks.com/blog/getting-started-with-amazon-sns-service](https://www.cloudericks.com/blog/getting-started-with-amazon-sns-service)
    .
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以在 [https://www.cloudericks.com/blog/getting-started-with-amazon-sns-service](https://www.cloudericks.com/blog/getting-started-with-amazon-sns-service)
    阅读更多关于 Amazon SNS 服务的内容。
- en: We can read more about Amazon Verified Permissions at [https://www.cloudericks.com/blog/getting-started-with-amazon-verified-permissions](https://www.cloudericks.com/blog/getting-started-with-amazon-verified-permissions)
    .
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以在 [https://www.cloudericks.com/blog/getting-started-with-amazon-verified-permissions](https://www.cloudericks.com/blog/getting-started-with-amazon-verified-permissions)
    阅读更多关于 Amazon Verified Permissions 的内容。
- en: We can learn about integrating Amazon Cognito with Amazon Verified permissions
    at [https://www.cloudericks.com/blog/integrating-amazon-cognito-with-amazon-verified-permissions](https://www.cloudericks.com/blog/integrating-amazon-cognito-with-amazon-verified-permissions)
    .
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以在 [https://www.cloudericks.com/blog/integrating-amazon-cognito-with-amazon-verified-permissions](https://www.cloudericks.com/blog/integrating-amazon-cognito-with-amazon-verified-permissions)
    学习如何将 Amazon Cognito 与 Amazon Verified Permissions 集成。
- en: Using identity pools to access AWS resources
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用身份池访问 AWS 资源
- en: As discussed earlier in this chapter, Amazon Cognito serves two primary use
    cases. While user pools help us in handling identity and access management for
    our applications, identity pools extend this functionality to provide temporary
    AWS credentials, enabling secure access to various AWS services without the need
    for long-term keys. In this recipe, we will delve into the use of identity pools
    for effective access to AWS resources. Let’s embark on a deep dive into the realm
    of identity pools and leverage their capability to weave identity pools into our
    applications, ensuring a secure and scalable method to access the AWS resources,
    making use of temporary AWS credentials.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章前面讨论的，Amazon Cognito 有两个主要的使用场景。虽然用户池帮助我们处理应用程序的身份和访问管理，身份池则扩展了这一功能，提供临时的
    AWS 凭证，使我们能够安全地访问各种 AWS 服务，而无需长期密钥。在本配方中，我们将深入探讨身份池的使用，以有效地访问 AWS 资源。让我们深入了解身份池领域，利用其能力将身份池融入到我们的应用程序中，确保安全且可扩展地访问
    AWS 资源，利用临时 AWS 凭证。
- en: Getting ready
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To complete this recipe, we need to ensure that the following additional requirements
    are in place in addition to those mentioned in the *Technical* *requirements*
    section:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成本配方，除了 *技术要求* 部分提到的要求外，我们还需要确保以下附加要求已经到位：
- en: '**An Amazon Cognito user pool** : An Amazon Cognito user pool serves as the
    identity backbone for our identity pool. We created one in the *Working with Amazon
    Cognito user pools* recipe earlier in this chapter.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个 Amazon Cognito 用户池**：Amazon Cognito 用户池作为我们身份池的身份骨架。在本章前面的 *与 Amazon Cognito
    用户池* 配方中，我们创建了一个用户池。'
- en: '**App Client with ALLOW_USER_PASSWORD_AUTH** : We need to set up an app client
    configured with the **ALLOW_USER_PASSWORD_AUTH** flow. This can be accomplished
    by navigating to the user pool settings in the AWS Management Console, selecting
    the **App integration** tab, and creating an app client. Alternatively, we can
    include the authentication flow during the initial App Client setup as outlined
    in the *Working with Amazon Cognito user* *pools* recipe.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**带有 ALLOW_USER_PASSWORD_AUTH 的应用客户端**：我们需要设置一个配置了 **ALLOW_USER_PASSWORD_AUTH**
    流程的应用客户端。可以通过在 AWS 管理控制台中导航到用户池设置，选择 **应用集成** 标签，并创建一个应用客户端来实现。或者，我们可以在初始应用客户端设置过程中包含身份验证流程，如
    *与 Amazon Cognito 用户池* 配方中所述。'
- en: '**An Amazon S3 Bucket** : We need an S3 bucket with default options as discussed
    in the *Technical requirements* section of [*Chapter 2*](B21384_02.xhtml#_idTextAnchor043)
    to demonstrate user pools. I will be using a bucket name of **myawsbucket** in
    the **us-east-1** region. S3 bucket names must be globally unique; choose an available
    name and replace my bucket name with your chosen bucket name.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon S3 存储桶**：我们需要一个具有默认选项的 S3 存储桶，正如在[*第 2 章*](B21384_02.xhtml#_idTextAnchor043)的*技术要求*部分中讨论的那样，用于展示用户池。我将使用一个存储桶名称**myawsbucket**，位于**us-east-1**区域。S3
    存储桶名称必须是全球唯一的；选择一个可用名称，并将我的存储桶名称替换为你选择的存储桶名称。'
- en: Next, we will see how we can implement Cognito identity pools.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到如何实现 Cognito 身份池。
- en: How to do it...
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We can use identity pools for effective access to AWS resources as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用身份池有效地访问 AWS 资源，如下所示：
- en: Navigate to the **Amazon Cognito** service in the AWS Console and search for
    the Cognito user pool that we created. Navigate to the **Users** tab and click
    on the **Create** **user** button.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AWS 控制台中导航到**Amazon Cognito**服务，搜索我们创建的 Cognito 用户池。进入**用户**标签，点击**创建用户**按钮。
- en: '![Figure 9.17 – The Create user option](image/B21384_09_17.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.17 – 创建用户选项](image/B21384_09_17.jpg)'
- en: Figure 9.17 – The Create user option
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.17 – 创建用户选项
- en: 'Provide the user profile details: set **User name** to **testuser** and **Email
    address** to testuser@cloudericks.com. For **Temporary password** , select the
    **Set a password** option, enter a secure password, and finally, click on **Create
    user** .'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供用户资料详情：将**用户名**设置为**testuser**，将**电子邮件地址**设置为 testuser@cloudericks.com。对于**临时密码**，选择**设置密码**选项，输入一个安全密码，最后点击**创建用户**。
- en: '![Figure 9.18 – The details for creating a user](image/B21384_09_18.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.18 – 创建用户的详细信息](image/B21384_09_18.jpg)'
- en: Figure 9.18 – The details for creating a user
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.18 – 创建用户的详细信息
- en: Important note
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: To prevent encountering MFA challenges when authenticating this user via the
    AWS CLI for an app client, we should choose the **No MFA** option in the **Configure
    security requirements** settings while creating the Cognito user pool.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免通过 AWS CLI 认证此用户时遇到 MFA 挑战，我们应该在创建 Cognito 用户池时，在**配置安全要求**设置中选择**无 MFA**选项。
- en: In the AWS Management Console, go to the **Amazon** **Cognito** service.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AWS 管理控制台中，进入**Amazon** **Cognito** 服务。
- en: Click on **Identity pools** and then **Create** **identity pool** .
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**身份池**，然后点击**创建身份池**。
- en: Configure the identity pool by selecting **Authenticated access** and **Amazon
    Cognito user pool** under **Authenticated identity sources** . Click on **Next**
    to reach the **Configure** **permissions** page.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过选择**已认证访问**和**Amazon Cognito 用户池**，配置身份池中的**已认证身份来源**。点击**下一步**进入**配置权限**页面。
- en: '![Figure 9.19 – Configuring the authentication providers](image/B21384_09_19.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.19 – 配置认证提供者](image/B21384_09_19.jpg)'
- en: Figure 9.19 – Configuring the authentication providers
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.19 – 配置认证提供者
- en: On the **Configure permissions** page, select **Create a new IAM role** and
    specify IAM roles for authenticated users by giving a role name. We can use **MY_IDP_AUTHROLE**
    as the **IAM role name** . Click on **Next** .
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置权限**页面，选择**创建新 IAM 角色**，并通过指定角色名称为已认证用户设置 IAM 角色。我们可以使用**MY_IDP_AUTHROLE**作为**IAM
    角色名称**。点击**下一步**。
- en: '![Figure 9.20 – Selecting an authenticated role](image/B21384_09_20.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.20 – 选择已认证角色](image/B21384_09_20.jpg)'
- en: Figure 9.20 – Selecting an authenticated role
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.20 – 选择已认证角色
- en: Enter the values for **User pool ID** and **App** **client ID** .
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入**用户池 ID**和**应用客户端 ID**的值。
- en: '![Figure 9.21 – The user pool details](image/B21384_09_21.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.21 – 用户池详情](image/B21384_09_21.jpg)'
- en: Figure 9.21 – The user pool details
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.21 – 用户池详情
- en: Leave the other values as default and click on **Next** .
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 保留其他值为默认值并点击**下一步**。
- en: '![Figure 9.22 – The attributes for access control](image/B21384_09_22.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.22 – 访问控制的属性](image/B21384_09_22.jpg)'
- en: Figure 9.22 – The attributes for access control
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.22 – 访问控制的属性
- en: Give a name for the identity pool and click on **Next** to finish the configuration.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为身份池命名，并点击**下一步**完成配置。
- en: '![Figure 9.23 – The final configuration page](image/B21384_09_23.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.23 – 最终配置页面](image/B21384_09_23.jpg)'
- en: Figure 9.23 – The final configuration page
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.23 – 最终配置页面
- en: On the **Review and create** page, review everything and click on **Create**
    **identity pool** .
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**审查并创建**页面，审查所有内容并点击**创建** **身份池**。
- en: We should see a prompt stating that the role has been created successfully;
    click on **View role** .
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们应该看到一个提示，说明角色已成功创建；点击 **查看角色**。
- en: '![Figure 9.24 – The prompt after successful role creation for the identity
    pool](image/B21384_09_24.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.24 – 成功创建角色后的身份池提示](image/B21384_09_24.jpg)'
- en: Figure 9.24 – The prompt after successful role creation for the identity pool
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.24 – 成功创建角色后的身份池提示
- en: The role for authenticated users should have permission to access S3 buckets.
    Make sure to grant access rights for the **AmazonS3ReadonlyAccess** action. Click
    on the **Add permissions** dropdown and select **Add policy** . Search for the
    **AmazonS3ReadonlyAccess** policy, select it, and click on **Add permissions**
    .
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 已认证用户的角色应具有访问 S3 存储桶的权限。确保授予 **AmazonS3ReadonlyAccess** 操作的访问权限。点击 **添加权限**
    下拉菜单，选择 **添加策略**。搜索 **AmazonS3ReadonlyAccess** 策略，选择它并点击 **添加权限**。
- en: '![Figure 9.25 – The permission policies](image/B21384_09_25.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.25 – 权限策略](image/B21384_09_25.jpg)'
- en: Figure 9.25 – The permission policies
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.25 – 权限策略
- en: 'To authenticate a user in the user pool, we can use the **Amazon Cognito Identity
    SDK** or directly use AWS CLI’s **cognito-idp** commands. For this, go to AWS
    CloudShell and run the following command by providing the **<username>** , **<password>**
    , **<client-id>** , and **<region>** of the user we want to authenticate:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在用户池中验证用户，我们可以使用 **Amazon Cognito Identity SDK** 或直接使用 AWS CLI 的 **cognito-idp**
    命令。为此，进入 AWS CloudShell，并通过提供我们要验证的用户的 **<username>**、**<password>**、**<client-id>**
    和 **<region>** 运行以下命令：
- en: '[PRE0]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We should get a challenge response asking us to give a new password.
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们应该得到一个挑战响应，要求我们提供一个新密码。
- en: '![Figure 9.26 – The challenge response asking us to give a new password](image/B21384_09_26.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.26 – 挑战响应，要求我们提供一个新密码](image/B21384_09_26.jpg)'
- en: Figure 9.26 – The challenge response asking us to give a new password
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.26 – 挑战响应，要求我们提供一个新密码
- en: 'We need to respond to the challenge to give the user a new password using the
    following command by giving the **user-pool-id** , **client-id** , **NEW_PASSWORD**
    , **USERNAME** , **session** , and **region** . The session should be the one
    we received in response to the previous command:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要通过以下命令响应挑战，给用户设置一个新密码，提供 **user-pool-id**、**client-id**、**NEW_PASSWORD**、**USERNAME**、**session**
    和 **region**。其中 session 应该是我们在前一条命令中收到的：
- en: '[PRE1]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We should get a screen showing the **RefreshToken** and **IdToken** . We should
    get the screen as follows; take note of the **IdToken** value.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们应该看到一个界面，显示 **RefreshToken** 和 **IdToken**。我们应该看到如下界面，并注意记录 **IdToken** 的值。
- en: '![Figure 9.27 – The response after the password change](image/B21384_09_27.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.27 – 密码更改后的响应](image/B21384_09_27.jpg)'
- en: Figure 9.27 – The response after the password change
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.27 – 密码更改后的响应
- en: 'To get **IdentityId** , run the following command by providing the **<identity-pool-id>**
    , **<region>** , and **<user-pool-id>** of the identity pool that we created previously,
    as well as the **<id-token>** we received from the previous step:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取 **IdentityId**，请运行以下命令，提供我们之前创建的身份池的 **<identity-pool-id>**、**<region>**
    和 **<user-pool-id>**，以及我们从前一步获得的 **<id-token>**：
- en: '[PRE2]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We should get a screen like the following showing us the **IdentityId** .
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们应该看到一个界面，显示出 **IdentityId**。
- en: '![Figure 9.28 – The response to the get-id command](image/B21384_09_28.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.28 – get-id 命令的响应](image/B21384_09_28.jpg)'
- en: Figure 9.28 – The response to the get-id command
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.28 – get-id 命令的响应
- en: 'Use the **IdentityId** obtained from the previous step to get temporary AWS
    credentials:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用从前一步骤获得的 **IdentityId** 来获取临时 AWS 凭证：
- en: '[PRE3]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This command will return temporary AWS access and secret keys, as well as a
    session token.
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令将返回临时的 AWS 访问密钥和秘密密钥，以及一个会话令牌。
- en: '![Figure 9.29 – The response to the get-credentials-for-identity command](image/B21384_09_29.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.29 – get-credentials-for-identity 命令的响应](image/B21384_09_29.jpg)'
- en: Figure 9.29 – The response to the get-credentials-for-identity command
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.29 – get-credentials-for-identity 命令的响应
- en: Configure the AWS CLI with the temporary credentials obtained in the previous
    step.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用前一步骤中获得的临时凭证配置 AWS CLI。
- en: '[PRE4]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'These commands do not return any response as shown below:'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些命令不会返回任何响应，如下所示：
- en: '![Figure 9.30 – Configuring the AWS CLI](image/B21384_09_30.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.30 – 配置 AWS CLI](image/B21384_09_30.jpg)'
- en: Figure 9.30 – Configuring the AWS CLI
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.30 – 配置 AWS CLI
- en: We can now use the AWS CLI to list our S3 buckets using the **aws s3** **ls**
    command.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以使用 AWS CLI，通过 **aws s3** **ls** 命令列出我们的 S3 存储桶。
- en: '![Figure 9.31 – The response to the s3 ls command](image/B21384_09_31.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.31 – 对s3 ls命令的响应](image/B21384_09_31.jpg)'
- en: Figure 9.31 – The response to the s3 ls command
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.31 – 对s3 ls命令的响应
- en: Navigate back to our identity pool and click on **User statistics** . We should
    see that we have been authenticated successfully via the identity pool.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航回我们的身份池，然后点击**用户统计**。我们应该看到我们已经通过身份池成功进行了身份验证。
- en: '![Figure 9.32 – The user statistics](image/B21384_09_32.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.32 – 用户统计](image/B21384_09_32.jpg)'
- en: Figure 9.32 – The user statistics
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.32 – 用户统计
- en: In this recipe, we made use of an identity pool to access AWS resources.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们使用身份池来访问AWS资源。
- en: How it works...
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: To access Amazon S3 using an identity pool with Amazon Cognito user pool as
    the IdP and list S3 buckets via the AWS CLI, we first created a user pool and
    a user within it. Then, we set up an identity pool, defined IAM roles, and configured
    permissions for authenticated users, including listing S3 buckets.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Amazon Cognito用户池作为IdP并通过AWS CLI列出S3存储桶，我们首先创建了一个用户池和其中的一个用户。然后，我们设置了一个身份池，定义了IAM角色，并为经过身份验证的用户配置了权限，包括列出S3存储桶。
- en: Next, we obtained an ID token through the AWS CLI’s **cognito-idp** commands,
    initiated authentication, and got an ID from the identity pool. With the obtained
    ID, we retrieved temporary AWS credentials. After configuring the AWS CLI with
    these credentials, we used it to list our S3 buckets.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们通过AWS CLI的**cognito-idp**命令获取了一个ID令牌，启动了身份验证，并从身份池获取了一个ID。通过获取的ID，我们检索了临时AWS凭证。配置AWS
    CLI后，我们使用它来列出我们的S3存储桶。
- en: This process allows secure and controlled access to S3 resources via identity-based
    authentication, ensuring that users are authorized to perform specific actions
    on the S3 service.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程通过基于身份的身份验证，允许安全且受控制的访问S3资源，确保用户被授权在S3服务上执行特定操作。
- en: There’s more...
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Let us see some more concepts related to Amazon Cognito that will help us further
    understand the service:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步了解一些与Amazon Cognito相关的概念，这将有助于我们进一步理解该服务：
- en: '**Social IdPs** : Both Cognito user pools and identity pools can be configured
    to allow users to sign in using social IdPs such as Facebook, Google, or Amazon.
    This extends the authentication options for our application and provides a seamless
    sign-in experience for users who may prefer to use their existing social media
    accounts.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社交身份提供者**：Cognito用户池和身份池都可以配置为允许用户使用社交身份提供者（如Facebook、Google或Amazon）进行登录。这扩展了我们应用程序的身份验证选项，并为希望使用其现有社交媒体帐户登录的用户提供了无缝的登录体验。'
- en: '**MFA** : We can enable MFA in both Cognito user pools and identity pools to
    enhance security. With MFA, users are required to provide an additional authentication
    factor, such as a one-time code from a mobile app or SMS, in addition to their
    password. This significantly strengthens the security of user authentication.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MFA**：我们可以在Cognito用户池和身份池中启用MFA以增强安全性。使用MFA，用户需要提供额外的身份验证因子，例如来自移动应用或短信的一次性代码，除了他们的密码。这显著增强了用户身份验证的安全性。'
- en: '**Custom authentication challenges** : Cognito user pools allow us to set up
    custom authentication challenges. This can be useful for scenarios where we need
    users to complete specific tasks or provide additional information during the
    authentication process. We can customize the challenge flow to match our application’s
    requirements.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义身份验证挑战**：Cognito用户池允许我们设置自定义身份验证挑战。这对于需要用户在身份验证过程中完成特定任务或提供额外信息的场景非常有用。我们可以根据应用程序的要求自定义挑战流程。'
- en: Exploring every feature of Amazon Cognito in depth would need a book of its
    own. Therefore, additional links are provided in the *See also* sections of both
    this recipe and the previous one to allow you to explore further.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 深入探讨Amazon Cognito的每个功能需要一本专著。因此，在本示例和上一示例的“参见”部分提供了额外的链接，以便您进一步探索。
- en: See also
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: We can learn about using Federated IdPs with Amazon Cognito at [https://www.cloudericks.com/blog/using-federated-identity-providers-with-amazon-cognito](https://www.cloudericks.com/blog/using-federated-identity-providers-with-amazon-cognito)
    .
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以在[Amazon Cognito与联合身份提供者使用](https://www.cloudericks.com/blog/using-federated-identity-providers-with-amazon-cognito)了解联合身份提供者的使用方法。
- en: Read more about troubleshooting security incidents using AWS Cognito logs at
    [https://www.cloudericks.com/blog/troubleshooting-security-incidents-using-aws-cognito-logs](https://www.cloudericks.com/blog/troubleshooting-security-incidents-using-aws-cognito-logs)
    .
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读更多关于如何使用 AWS Cognito 日志进行安全事件故障排除的内容，访问 [https://www.cloudericks.com/blog/troubleshooting-security-incidents-using-aws-cognito-logs](https://www.cloudericks.com/blog/troubleshooting-security-incidents-using-aws-cognito-logs)。
- en: Using AWS Simple AD for creating a lightweight directory solution
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS Simple AD 创建轻量级目录解决方案
- en: AWS Simple AD, powered by a Samba 4 Active Directory Compatible Server, is a
    lightweight standalone managed directory service provided by AWS, catering especially
    to small and medium-sized businesses seeking the functionality of directory services
    without the complexity of managing on-premise infrastructure. Available in two
    sizes, the **Small** option is intended for environments with up to 500 users
    (or approximately 2,000 objects, including users, groups, and computers), while
    the **Large** option accommodates environments with up to 5,000 users (or roughly
    20,000 objects).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Simple AD，由一个兼容 Samba 4 Active Directory 的服务器提供支持，是由 AWS 提供的轻量级独立托管目录服务，特别适合中小型企业，满足其对目录服务的需求，同时避免了管理本地基础设施的复杂性。该服务有两个选项，**Small**
    选项适用于最多 500 个用户（或大约 2,000 个对象，包括用户、组和计算机）的环境，而 **Large** 选项适用于最多 5,000 个用户（或大约
    20,000 个对象）的环境。
- en: Simple AD provides essential services such as user account management, group
    membership organization, group policy application, secure Amazon EC2 instance
    connections, and Kerberos-based **Single Sign-On** ( **SSO** ) functionality.
    It is compatible with various applications and tools dependent on Microsoft Active
    Directory, facilitating access to AWS applications such as WorkSpaces, Amazon
    WorkDocs, and Amazon WorkMail for users. However, Simple AD does not support certain
    services, including Amazon AppStream 2.0, Amazon Chime, or Amazon RDS for SQL
    Server and Oracle.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Simple AD 提供了基本服务，如用户帐户管理、组成员管理、组策略应用、Amazon EC2 实例的安全连接以及基于 Kerberos 的 **单点登录**（**SSO**）功能。它兼容依赖
    Microsoft Active Directory 的多种应用程序和工具，方便用户访问 AWS 应用程序，如 WorkSpaces、Amazon WorkDocs
    和 Amazon WorkMail。然而，Simple AD 不支持某些服务，包括 Amazon AppStream 2.0、Amazon Chime 或
    Amazon RDS for SQL Server 和 Oracle。
- en: Getting ready
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'We need the following to successfully complete this recipe:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成功完成此操作，我们需要以下内容：
- en: A working AWS account and a user, as described in the *Technical* *requirements*
    section.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个有效的 AWS 账户和用户，具体描述见 *技术* *要求* 部分。
- en: A VPC configured with at least two subnets across different availability zones
    following the *Setting up VPC plus VPC resources with minimal effort* recipe from
    [*Chapter 5*](B21384_05.xhtml#_idTextAnchor169) .
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置一个至少包含两个子网并跨多个可用区的 VPC，遵循 [*第 5 章*](B21384_05.xhtml#_idTextAnchor169) 中的 *Setting
    up VPC plus VPC resources with minimal effort* 配方。
- en: How to do it...
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will use the following steps:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下步骤：
- en: Log into the AWS management console and go to the **Directory Service** . We
    should see a screen like the following.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 AWS 管理控制台并进入 **Directory Service**。我们应该会看到如下屏幕。
- en: '![Figure 9.33 – The Set up directory screen](image/B21384_09_33.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.33 – 设置目录屏幕](image/B21384_09_33.jpg)'
- en: Figure 9.33 – The Set up directory screen
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.33 – 设置目录屏幕
- en: Select **Simple AD** from the drop-down menu, as shown in *Figure 9* *.34* ,
    and then click on the **Set up directory** button shown in *Figure 9* *.33* .
    Click on **Next** .
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择 **Simple AD**，如 *图 9.34* 所示，然后点击 *图 9.33* 中显示的 **Set up directory**
    按钮。点击 **Next**。
- en: '![Figure 9.34 – The Set up directory drop-down menu](image/B21384_09_34.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.34 – 设置目录的下拉菜单](image/B21384_09_34.jpg)'
- en: Figure 9.34 – The Set up directory drop-down menu
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.34 – 设置目录的下拉菜单
- en: On the **Select directory type** page, make sure that **Simple AD** is selected
    and click **Next** .
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Select directory type** 页面，确保选择了 **Simple AD**，然后点击 **Next**。
- en: On the **Enter directory information** page, under **Directory size** , choose
    **Small** . For **Directory DNS name** , enter **corp.cloudericks.com** , and
    for **Directory NetBIOS name - optional** , enter **CORP** .
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Enter directory information** 页面，选择 **Directory size** 下的 **Small**。对于 **Directory
    DNS name**，输入 **corp.cloudericks.com**，对于 **Directory NetBIOS name - optional**，输入
    **CORP**。
- en: '![Figure 9.35 – Configuring Simple AD](image/B21384_09_35.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.35 – 配置 Simple AD](image/B21384_09_35.jpg)'
- en: Figure 9.35 – Configuring Simple AD
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.35 – 配置 Simple AD
- en: Scroll down and provide a value for **Administrator password** and confirm the
    password in the **Confirm password** field. For **Directory description - optional**
    , provide the **Cloudericks corporate directory** description for the directory,
    and click **Next** .
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并为 **管理员密码** 提供一个值，并在 **确认密码** 字段中确认密码。对于 **目录描述 - 可选** ，提供 **Cloudericks
    企业目录** 的描述，并点击 **下一步**。
- en: For **VPC** , select a VPC with at least two subnets, as discussed in the *Getting
    ready* section. Select two of its public subnets under **Subnets** and click **Next**
    .
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 **VPC** ，选择至少有两个子网的 VPC，如 *准备工作* 部分所述。在 **子网** 下选择两个公共子网并点击 **下一步**。
- en: Under **Subnets** , choose the subnets for the domain controllers. Ensure that
    they are in different Availability Zones and click on **Next** .
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **子网** 下，选择域控制器的子网。确保它们位于不同的可用区，并点击 **下一步**。
- en: On the **Review & create** page, review all details and click on **Create directory**
    . The status of our directory will be **Creating** and once creation is complete,
    it will change to **Active** .
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **审核与创建** 页面，审核所有详细信息并点击 **创建目录** 。目录的状态将显示为 **创建中**，创建完成后会变为 **活动**。
- en: How it works...
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: AWS Simple AD provides a managed Active Directory-compatible directory service,
    offering users a straightforward solution for user authentication, group management,
    and domain join operations in the AWS cloud. Users can easily create a Simple
    AD directory through the AWS Management Console or CLI, specifying domain details
    and size requirements.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Simple AD 提供一个托管的与 Active Directory 兼容的目录服务，为用户提供一个简单的解决方案，用于用户身份验证、组管理和域加入操作。用户可以通过
    AWS 管理控制台或 CLI 轻松创建 Simple AD 目录，指定域详细信息和规模要求。
- en: Once created, Simple AD supports standard directory features such as LDAP authentication
    and Kerberos-based SSO, allowing organizations to manage user accounts and access
    controls efficiently. This service is particularly beneficial for small and mid-sized
    businesses seeking a cost-effective and hassle-free Active Directory solution
    without the complexity of self-managed infrastructure.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完成后，Simple AD 支持标准目录功能，如 LDAP 身份验证和基于 Kerberos 的单点登录（SSO），使组织能够高效地管理用户帐户和访问控制。此服务对于寻求成本效益且不想管理复杂基础设施的小型和中型企业尤其有利，它提供了一种简单、无忧的
    Active Directory 解决方案。
- en: AWS Simple AD allows efficient user and group management, supports Kerberos-based
    SSO for seamless access to multiple applications, and integrates with various
    AWS services such as Amazon EC2, RDS, and WorkSpaces. Simple AD also supports
    LDAP, making it suitable for applications requiring directory services for authentication
    and information retrieval.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Simple AD 允许高效的用户和组管理，支持基于 Kerberos 的单点登录（SSO），实现无缝访问多个应用程序，并与各种 AWS 服务（如
    Amazon EC2、RDS 和 WorkSpaces）集成。Simple AD 还支持 LDAP，使其适用于需要目录服务进行身份验证和信息检索的应用程序。
- en: There’s more...
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'Here are the different ways we can use AWS Simple AD:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们使用 AWS Simple AD 的不同方式：
- en: '**User and group management** : Simple AD allows you to manage users and groups
    efficiently. You can create, modify, and delete user accounts, as well as organize
    them into groups for easier access control and permissions management.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户和组管理** ：Simple AD 允许高效管理用户和组。您可以创建、修改和删除用户帐户，并将其组织到组中，便于访问控制和权限管理。'
- en: '**SSO** : Simple AD supports Kerberos-based SSO, enabling users to log in once
    and gain access to multiple applications and services without re-entering their
    credentials.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSO** ：Simple AD 支持基于 Kerberos 的单点登录（SSO），使用户可以一次登录，便能访问多个应用程序和服务，无需重新输入凭证。'
- en: '**Lightweight Directory Access Protocol** ( **LDAP** ): Simple AD supports
    LDAP, allowing applications that require directory services to authenticate and
    retrieve information from the directory.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**轻量级目录访问协议**（**LDAP**）：Simple AD 支持 LDAP，允许需要目录服务的应用程序进行身份验证并从目录中检索信息。'
- en: '**Integration with AWS services** : Simple AD integrates seamlessly with various
    AWS services, enabling you to manage access and permissions for resources within
    your AWS environment.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与 AWS 服务的集成** ：Simple AD 与多种 AWS 服务无缝集成，使您能够管理 AWS 环境中资源的访问和权限。'
- en: '**Amazon EC2** : Manage access to EC2 instances using domain credentials.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon EC2** ：使用域凭证管理对 EC2 实例的访问。'
- en: '**Amazon RDS** : Integrate with RDS instances for database authentication.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon RDS** ：与 RDS 实例集成进行数据库身份验证。'
- en: '**Amazon WorkSpaces** : Use Simple AD to manage user access to virtual desktops.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon WorkSpaces** ：使用 Simple AD 管理用户对虚拟桌面的访问。'
- en: '**Cost-effective directory services** : Simple AD provides a cost-effective
    solution for small to medium-sized businesses that need basic directory services
    without the need for a full Active Directory setup.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**具成本效益的目录服务**：Simple AD为需要基本目录服务但不需要完整Active Directory设置的小到中型企业提供了一种成本效益高的解决方案。'
- en: In this recipe, we explored Simple AD, a cost-effective and straightforward
    directory service within AWS ideal for small to medium-sized businesses. AWS also
    supports other directory solutions, including **AWS Managed Microsoft AD** , which
    offers fully managed Active Directory services; **AD Connector** , a gateway to
    redirect directory requests to on-premises AD; **Amazon Cognito User Pools** ,
    providing user sign-up and sign-in for web and mobile apps; and **Amazon Cloud
    Directory** , a scalable directory for managing hierarchical data relationships.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们探讨了Simple AD，这是一种适用于中小型企业的具有成本效益且简单的目录服务。AWS还支持其他目录解决方案，包括**AWS托管Microsoft
    AD**，提供完全托管的Active Directory服务；**AD连接器**，作为将目录请求重定向到本地AD的网关；**Amazon Cognito用户池**，为Web和移动应用提供用户注册和登录功能；以及**Amazon
    Cloud Directory**，用于管理分层数据关系的可扩展目录。
- en: See also
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: Read more about Simple AD at [https://www.cloudericks.com/blog/getting-started-with-aws-simple-ad](https://www.cloudericks.com/blog/getting-started-with-aws-simple-ad)
    .
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解更多关于Simple AD的信息，访问[https://www.cloudericks.com/blog/getting-started-with-aws-simple-ad](https://www.cloudericks.com/blog/getting-started-with-aws-simple-ad)。
- en: Read about different directory solutions in AWS such as AWS Managed Microsoft
    AD, Simple AD, AD Connector, Amazon Cognito User Pools, and Amazon Cloud Directory
    at [https://www.cloudericks.com/blog/exploring-aws-directory-solutions](https://www.cloudericks.com/blog/exploring-aws-directory-solutions)
    .
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读有关AWS中的不同目录解决方案，如AWS托管Microsoft AD、Simple AD、AD连接器、Amazon Cognito用户池和Amazon
    Cloud Directory的详细信息，访问[https://www.cloudericks.com/blog/exploring-aws-directory-solutions](https://www.cloudericks.com/blog/exploring-aws-directory-solutions)。
- en: Using Microsoft Entra ID as the identity provider within AWS
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在AWS中使用Microsoft Entra ID作为身份提供者
- en: 'In today’s tech landscape, numerous organizations are adopting a multi-cloud
    strategy, utilizing different public clouds such as AWS and Azure for deploying
    applications. A common practice among these organizations is managing user identities
    with Microsoft Entra ID. The AWS IAM Identity Center offers a straightforward
    way to link our AWS accounts with Microsoft Entra ID. This integration yields
    two significant benefits: centralized management of identities and enhanced user
    experience.'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今的技术环境中，许多组织采用多云策略，利用不同的公共云（如AWS和Azure）来部署应用程序。这些组织中的一种常见做法是使用Microsoft Entra
    ID来管理用户身份。AWS IAM身份中心提供了一种简便的方法，将我们的AWS账户与Microsoft Entra ID连接。这种集成带来了两个显著的好处：身份管理的集中化和用户体验的增强。
- en: Centralizing identity management in one location simplifies the responsibilities
    of IT teams and strengthens security protocols. Additionally, it relieves users
    of the hassle of handling multiple login credentials, streamlining the sign-in
    process and reducing the demand for IT support. In this recipe, we will delve
    into integrating Microsoft Entra ID with AWS IAM Identity Center, using Microsoft
    Entra ID as the IdP. We will conclude by demonstrating this setup using an Entra
    ID user to manage an S3 bucket, as an AWS resource.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 将身份管理集中到一个位置简化了IT团队的责任，并加强了安全协议。此外，它还免除了用户处理多个登录凭证的麻烦，简化了登录过程，减少了IT支持的需求。在本食谱中，我们将深入探讨将Microsoft
    Entra ID与AWS IAM身份中心集成，使用Microsoft Entra ID作为身份提供者（IdP）。最后，我们将通过演示如何使用Entra ID用户来管理S3桶作为AWS资源来完成此设置。
- en: Getting ready
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To complete this recipe, we need to ensure that the following additional requirements
    are in place in addition to those mentioned in the *Technical* *requirements*
    section:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 为完成本食谱，除了*技术要求*部分中提到的内容之外，我们还需要确保以下附加要求得到满足：
- en: It’s essential to have an AWS account with AWS IAM Identity Center set up. For
    guidance on setting up IAM Identity Center, refer to the [*Chapter* *1*](B21384_01.xhtml#_idTextAnchor020)
    recipes.
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有一个已设置AWS IAM身份中心的AWS账户是至关重要的。有关如何设置IAM身份中心的指导，请参考[*第1章*](B21384_01.xhtml#_idTextAnchor020)的相关内容。
- en: An active Microsoft Entra ID tenant is also a must-have.
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还必须拥有一个活动的Microsoft Entra ID租户。
- en: An administrator user in the Microsoft Entra ID tenant is essential for performing
    the configuration steps within this recipe.
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Microsoft Entra ID租户中拥有一个管理员用户是执行本食谱中的配置步骤的必要条件。
- en: A demo user with data for the attributes first name, last name, display name,
    and user principal name is also needed to test the configuration. Let us call
    the demo user **demouser1** .
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要一个演示用户，包含名字、姓氏、显示名称和用户主体名称的属性数据，用于测试配置。我们将此演示用户命名为**demouser1**。
- en: Important note
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'To successfully integrate users into the AWS IAM Identity Center through the
    AWS SSO Enterprise application in Azure, the users need values for the following
    attributes: first name, last name, display name, and user principal name. Without
    these attributes, the provisioning process may encounter errors, hindering the
    smooth and secure transition of users into the AWS environment.'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 为了通过 Azure 中的 AWS SSO 企业应用程序成功将用户集成到 AWS IAM 身份中心中，用户需要提供以下属性的值：名字、姓氏、显示名称和用户主体名称。如果缺少这些属性，配置过程可能会遇到错误，从而妨碍用户平稳、安全地过渡到
    AWS 环境。
- en: Next, we will see how to use Microsoft Entra ID as the IdP within AWS.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将展示如何在 AWS 中使用 Microsoft Entra ID 作为 IdP。
- en: How to do it...
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: We will first download the metadata file from AWS, configure Microsoft Azure
    for IAM Identity Center integration with that metadata file, and continue with
    AWS IAM Identity Center set up in AWS. After that, we will go back to Azure to
    complete the configuration and finally will verify users within AWS.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先从 AWS 下载元数据文件，配置 Microsoft Azure 以通过该元数据文件进行 IAM 身份中心集成，然后继续在 AWS 中设置 AWS
    IAM 身份中心。之后，我们将返回 Azure 完成配置，最后在 AWS 中验证用户。
- en: Downloading the metadata file from AWS
  id: totrans-267
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从 AWS 下载元数据文件
- en: Log in to the Management Console of an AWS account with permission to manage
    IAM Identity Center and go to the IAM Identity Center service.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录具有管理 IAM 身份中心权限的 AWS 账户管理控制台，并进入 IAM 身份中心服务。
- en: Click on **Settings** in the left sidebar.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧边栏中的**设置**。
- en: On the **Settings** page, locate the **Identity source** section, click on the
    **Actions** pull-down menu, and select **Change** **identity source** .
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**设置**页面，找到**身份源**部分，点击**操作**下拉菜单，选择**更改** **身份源**。
- en: On the **Change identity source** page, choose **External identity provider**
    and click on **Next** .
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**更改身份源**页面，选择**外部身份提供者**，然后点击**下一步**。
- en: Important note
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'On the **Change identity source** page, there are currently three options:
    **Identity Center directory** , **Active Directory** , and **External identity
    provider** . If we select the **Identity Center directory** option, it will allow
    for the management of users and groups within IAM Identity Center, with users
    logging in through the AWS access portal. The **Active Directory** option is used
    for managing users and groups within AWS Managed Microsoft AD. We also have the
    flexibility to connect IAM Identity Center to an existing Active Directory using
    either AWS Managed Microsoft AD or AD Connector. In this scenario, users also
    sign in through the AWS access portal. The third option, **External identity provider**
    , is tailored for managing users and groups through an external IdP such as Microsoft
    Entra ID. Here, users first sign in to the IdP’s sign-in page, as we will see
    in this recipe, and are then redirected to the AWS access portal, where they can
    access their AWS accounts and cloud applications.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在**更改身份源**页面，目前有三个选项：**身份中心目录**、**活动目录**和**外部身份提供者**。如果选择**身份中心目录**选项，则允许在 IAM
    身份中心中管理用户和组，用户通过 AWS 访问门户登录。**活动目录**选项用于管理 AWS 托管的 Microsoft AD 中的用户和组。我们还可以灵活地使用
    AWS 托管的 Microsoft AD 或 AD Connector 将 IAM 身份中心连接到现有的活动目录。在这种情况下，用户也通过 AWS 访问门户登录。第三个选项**外部身份提供者**，适用于通过外部
    IdP（如 Microsoft Entra ID）管理用户和组。在这里，用户首先登录到 IdP 的登录页面，正如我们在本食谱中所看到的，然后被重定向到 AWS
    访问门户，在那里他们可以访问自己的 AWS 账户和云应用程序。
- en: 'Once we click **Next** , we should see the **Configure external identity provider**
    page, which looks similar to the following:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**下一步**后，我们应该看到**配置外部身份提供者**页面，页面内容大致如下：
- en: '![Figure 9.36 – The Configure external identity provider page](image/B21384_09_36.jpg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.36 – 配置外部身份提供者页面](image/B21384_09_36.jpg)'
- en: Figure 9.36 – The Configure external identity provider page
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.36 – 配置外部身份提供者页面
- en: On the **Configure external identity provider** page, within the **Service provider
    metadata** section, click on **Download metadata file** and save it on the computer.
    This file will be used when configuring the external IdP (e.g., Microsoft Entra
    ID).
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置外部身份提供者**页面中，在**服务提供者元数据**部分，点击**下载元数据文件**并将其保存在计算机上。此文件将在配置外部 IdP（例如 Microsoft
    Entra ID）时使用。
- en: The metadata file we downloaded from IAM Identity Center includes the IAM Identity
    Center certificate and metadata details necessary for our IdP, which in this recipe
    is Microsoft Entra ID, to establish trust with IAM Identity Center as a service
    provider. Alternatively, instead of downloading, we can simply copy this information
    directly from the webpage and manually enter it into the service provider configuration
    section of our IdP.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从 IAM 身份中心下载的元数据文件包含 IAM 身份中心证书及其元数据详细信息，这对于我们的 IdP（本例中是 Microsoft Entra ID）与
    IAM 身份中心建立信任关系是必要的。作为替代，我们也可以直接从网页上复制这些信息并手动输入到 IdP 的服务提供者配置部分。
- en: Configuring Microsoft Azure for IAM Identity Center integration
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 Microsoft Azure 以进行 IAM 身份中心集成
- en: 'We can configure Microsoft Azure for IAM Identity Center integration as follows:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下步骤配置 Microsoft Azure 以进行 IAM 身份中心集成：
- en: Sign in to the Microsoft Azure portal as a user with the **Application Administrator**
    role or a superset role.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用具有**应用管理员**角色或更高权限角色的用户登录到 Microsoft Azure 门户。
- en: Navigate to **Microsoft Entra ID** and click on **Enterprise applications**
    from the left sidebar.
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至**Microsoft Entra ID**，并从左侧边栏点击**企业应用**。
- en: Click **New application** , and on the **Browse Microsoft Entra Gallery** page,
    search for **AWS IAM** **Identity Center** .
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建应用**，在**浏览 Microsoft Entra Gallery**页面中，搜索**AWS IAM** **身份中心**。
- en: Enter an application name and click on **Create** .
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入应用名称并点击**创建**。
- en: Open the application after it has been successfully created.
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用成功创建后，打开该应用。
- en: Click on **Single sign-on** from the left sidebar and select **SAML** as the
    SSO method.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧边栏点击**单点登录**并选择**SAML**作为 SSO 方法。
- en: Click on **Upload metadata file** , and in the **Upload metadata file** pane,
    click on the folder icon to select the metadata file that we downloaded in *Step
    5* of the previous section. Then click on **Add** .
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**上传元数据文件**，在**上传元数据文件**面板中，点击文件夹图标，选择我们在前一节*步骤 5*中下载的元数据文件。然后点击**添加**。
- en: Click **Save** on the **Basic SAML** **Configuration** pane.
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**基础 SAML** **配置**面板中点击**保存**。
- en: Scroll down to the **SAML Certificates** section of the page and download the
    **Federation Metadata** **XML** file.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动到页面的**SAML 证书**部分并下载**联合元数据** **XML** 文件。
- en: We can now go back to the AWS Management Console on the **Configure external
    identity provider** page and continue with the steps required. References to detailed
    steps, with screenshots for the steps to be done on the Azure side, are given
    within the *See also* section of this recipe.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以返回 AWS 管理控制台的**配置外部身份提供者**页面，继续执行所需的步骤。有关 Azure 端步骤的详细操作步骤和截图，请参见本食谱中的*另见*部分。
- en: Continuing with the AWS IAM Identity Center setup
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 继续进行 AWS IAM 身份中心设置
- en: 'We can continue the steps required on AWS IAM Identity Center from the AWS
    Management Console:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以继续在 AWS 管理控制台中执行所需的 AWS IAM 身份中心步骤：
- en: Navigate back to the **Configure external identity provider** page as we did
    in the *Downloading the metadata file from* *AWS* section.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到**配置外部身份提供者**页面，如我们在*从 AWS 下载元数据文件*部分所做的那样。
- en: In the **Identity provider metadata** section, click on **Choose file** under
    **IdP SAML metadata** and upload the file we downloaded in the *Configuring Microsoft
    Azure for IAM Identity Center* *integration* section.
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**身份提供者元数据**部分，点击**选择文件**，上传我们在*配置 Microsoft Azure 以进行 IAM 身份中心集成*部分下载的文件。
- en: '![Figure 9.37 – Uploading the identity provider metadata](image/B21384_09_37.jpg)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.37 – 上传身份提供者元数据](image/B21384_09_37.jpg)'
- en: Figure 9.37 – Uploading the identity provider metadata
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.37 – 上传身份提供者元数据
- en: Scroll down and click **Next** .
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并点击**下一步**。
- en: Scroll down, and within the **Review and confirm** section, type **ACCEPT**
    , as shown in the following figure, and click **Change** **identity source** .
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动，在**审查并确认**部分，输入**ACCEPT**，如以下图所示，然后点击**更改** **身份源**。
- en: '![Figure 9.38 – Reviewing and confirming the identity source change](image/B21384_09_38.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.38 – 审查并确认身份源更改](image/B21384_09_38.jpg)'
- en: Figure 9.38 – Reviewing and confirming the identity source change
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.38 – 审查并确认身份源更改
- en: Within the settings page, we should now see a message for enabling **Automatic
    provisioning** with an **Enable** button. Click on **Enable** .
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置页面中，我们现在应该看到启用**自动配置**的消息，并有一个**启用**按钮。点击**启用**。
- en: Once the provisioning is enabled, we should see the **SCIM endpoint** and **Access
    token** values for our identity source, as shown in the following figure. Save
    this information.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦启用了配置，我们应该看到我们的身份源的**SCIM 端点**和**访问令牌**值，如下图所示。保存这些信息。
- en: '![Figure 9.39 – The access token](image/B21384_09_39.jpg)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.39 – 访问令牌](image/B21384_09_39.jpg)'
- en: Figure 9.39 – The access token
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.39 – 访问令牌
- en: Let us now go back to the Azure portal and continue the configuration.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们返回 Azure 门户，继续进行配置。
- en: Continuing with the configuration in Microsoft Azure
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 继续在 Microsoft Azure 中进行配置
- en: 'Let us now go to the AWS IAM Identity Enterprise application we created in
    the *Configuring Microsoft Azure for IAM Identity Center integration* section
    and continue setting up:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们进入我们在*配置 Microsoft Azure 与 IAM 身份中心集成*部分中创建的 AWS IAM 身份中心企业应用，继续设置：
- en: Under the **Manage** section on the left sidebar, click on **Provisioning**
    , and set **Provisioning Mode** to **Automatic** .
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧边栏的**管理**部分，点击**配置**，并将**配置模式**设置为**自动**。
- en: Under the **Admin Credentials** section, enter the AWS Identity Center SCIM
    endpoint that we saved in *Step 6* from the previous section under **Tenant URL**
    and **Access token** under **Secret Token** .
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**管理员凭证**部分，输入我们在前一节*第 6 步*中保存的 AWS 身份中心 SCIM 端点，在**租户 URL**下输入，并在**秘密令牌**下输入**访问令牌**。
- en: Click on **Test Connection** , and if this is successful, click **Save** under
    **Provisioning** .
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**测试连接**，如果成功，点击**保存**，然后在**配置**下点击保存。
- en: On the **Provisioning** tab, click on **Start provisioning** .
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置**标签页上，点击**开始配置**。
- en: Under the **Manage** section on the left sidebar, click on **Users and groups**
    , and then on the panel on the right side, click on **Add user/group** .
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧边栏的**管理**部分，点击**用户和组**，然后在右侧面板中点击**添加用户/组**。
- en: Select the **demouser1** user that we created for the demo and click on **Assign**
    .
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择我们为演示创建的**demouser1**用户并点击**分配**。
- en: Once the provisioning is successful, we can head back to AWS IAM Identity Center
    to verify the user provisioning. It could take some time, usually up to around
    30 minutes, for the users to appear in AWS. References to detailed steps with
    screenshots for the steps to be done on the Azure side are given within the *See
    also* section of this recipe.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦配置成功，我们可以返回 AWS IAM 身份中心验证用户配置。用户在 AWS 中出现可能需要一些时间，通常大约需要 30 分钟。关于在 Azure
    侧完成步骤的详细步骤和截图可以在本食谱的*另见*部分找到。
- en: Verifying Users on AWS IAM Identity Center
  id: totrans-315
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 AWS IAM 身份中心验证用户
- en: 'We can verify the automatic user provisioning in AWS IAM Identity Center as
    follows:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下方式验证在 AWS IAM 身份中心的自动用户配置：
- en: Navigate back to the IAM Identity Center dashboard.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到 IAM 身份中心仪表板。
- en: Click on **Users** from the left sidebar. We should be able to see the **demouser1**
    user in our AWS Identity Center. We can now log in to the AWS Identity Center
    using these user’s Microsoft Entra ID credentials.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧边栏点击**用户**。我们应该能在 AWS 身份中心中看到**demouser1**用户。现在我们可以使用该用户的 Microsoft Entra
    ID 凭据登录 AWS 身份中心。
- en: '![Figure 9.40 – Azure user in AWS](image/B21384_09_40.jpg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.40 – Azure 用户在 AWS 中](image/B21384_09_40.jpg)'
- en: Figure 9.40 – Azure user in AWS
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.40 – Azure 用户在 AWS 中
- en: Click on **Settings** and copy the AWS access portal URL.
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**设置**并复制 AWS 访问门户 URL。
- en: Paste this URL in another browser. We should be given a prompt to log in with
    our Microsoft Entra ID credentials. Enter the user’s principal name and password.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这个 URL 粘贴到另一个浏览器中。我们应该会看到一个提示，要求使用 Microsoft Entra ID 凭据登录。输入用户的主体名称和密码。
- en: '![Figure 9.41 – Signing in as a Microsoft user](image/B21384_09_41.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.41 – 以 Microsoft 用户身份登录](image/B21384_09_41.jpg)'
- en: Figure 9.41 – Signing in as a Microsoft user
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.41 – 以 Microsoft 用户身份登录
- en: After entering the user’s principal name and password, we should be redirected
    to the AWS account as a logged-in user.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入用户的主体名称和密码后，我们应该会被重定向到 AWS 账户，并作为已登录用户进入。
- en: '![Figure 9.42 – The credentials of an Azure user in AWS account](image/B21384_09_42.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.42 – Azure 用户在 AWS 账户中的凭证](image/B21384_09_42.jpg)'
- en: Figure 9.42 – The credentials of an Azure user in AWS account
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.42 – Azure 用户在 AWS 账户中的凭证
- en: We have used Microsoft Entra ID as our IdP in this recipe and logged in to an
    AWS account using the Microsoft Entra ID credentials. We will now need to provide
    the necessary permissions and access to this user using **permission sets** .
    We can also follow a similar approach that we did in this recipe to use other
    supported IdPs instead of Microsoft Entra ID.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们使用 Microsoft Entra ID 作为 IdP，并使用 Microsoft Entra ID 凭据登录到 AWS 账户。接下来，我们需要使用
    **权限集** 为该用户提供必要的权限和访问权限。我们还可以按照本教程中所做的类似方法，使用其他受支持的 IdP，而不仅仅是 Microsoft Entra
    ID。
- en: How it works...
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: SSO between AWS Identity Center and Azure Entra ID allows users to log in to
    AWS Identity Center using their Azure AD credentials. This provides a number of
    benefits, including improved security and convenience for users, reduced administrative
    overhead, and improved compliance.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Identity Center 和 Azure Entra ID 之间的单点登录（SSO）使用户能够使用其 Azure AD 凭据登录 AWS
    Identity Center。这带来许多好处，包括提高安全性和用户便利性、减少管理开销以及改善合规性。
- en: SSO between AWS Identity Center and Azure Entra ID works by generating a SAML
    assertion from Azure AD and sending it to AWS Identity Center. AWS Identity Center
    then validates the SAML assertion and creates a session for the user, allowing
    them to access the AWS Identity Center application without having to enter their
    credentials again.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Identity Center 和 Azure Entra ID 之间的单点登录（SSO）通过从 Azure AD 生成 SAML 断言并将其发送到
    AWS Identity Center 来实现。然后，AWS Identity Center 验证 SAML 断言并为用户创建会话，使他们能够无需再次输入凭据即可访问
    AWS Identity Center 应用程序。
- en: When provisioning users from Azure into the AWS IAM Identity Center, it’s essential
    to seamlessly integrate them into AWS as if they were native AWS users. This involves
    assigning them to specific AWS accounts and granting permission sets that align
    with their respective roles within the organization.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 当将用户从 Azure 配置到 AWS IAM Identity Center 时，至关重要的是将他们无缝集成到 AWS 中，就像他们是本地 AWS 用户一样。这涉及将他们分配到特定的
    AWS 账户，并授予与他们在组织中各自角色相符的权限集。
- en: There’s more...
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: 'Let us explore some more important concepts related to integrating IAM Identity
    Center with Microsoft Entra ID:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索一些与将 IAM Identity Center 与 Microsoft Entra ID 集成相关的重要概念：
- en: '**User provisioning** : This is the process of automatically creating and managing
    user accounts in an application or system. In the context of SSO between AWS IAM
    Identity Center and Microsoft Entra ID, user provisioning allows us to automatically
    create AWS Identity Center user accounts for users who are already in Microsoft
    Entra ID. This can improve security by reducing the risk of unauthorized access
    to our applications and resources and also reduce administrative overhead by freeing
    up our IT staff to focus on other tasks.'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户预配**：这是在应用程序或系统中自动创建和管理用户帐户的过程。在 AWS IAM Identity Center 和 Microsoft Entra
    ID 之间的 SSO 上下文中，用户预配使我们能够为已经在 Microsoft Entra ID 中的用户自动创建 AWS Identity Center
    用户帐户。这可以通过减少未经授权访问我们应用程序和资源的风险来提高安全性，还可以通过释放 IT 员工专注于其他任务来减少管理开销。'
- en: '**Group synchronization** : This is the process of keeping user groups in sync
    between two systems. In the context of SSO between IAM Identity Center and Microsoft
    Entra ID, group synchronization allows us to keep user groups in sync between
    Microsoft Entra ID and IAM Identity Center. This ensures that users are always
    assigned to the correct groups in both systems, which can improve the user experience
    by ensuring that they always have access to the applications and resources they
    need.'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组同步**：这是在两个系统之间保持用户组同步的过程。在 IAM Identity Center 和 Microsoft Entra ID 之间的
    SSO 上下文中，组同步使我们能够在 Microsoft Entra ID 和 IAM Identity Center 之间保持用户组同步。这确保了用户始终在两个系统中被分配到正确的组，这可以通过确保他们始终能够访问所需的应用程序和资源来改善用户体验。'
- en: '**Attribute mapping** : This is the process of mapping user attributes between
    two systems. In the context of SSO between AWS Identity Center and Microsoft Entra
    ID, attribute mapping allows us to map user attributes between Microsoft Entra
    ID and IAM Identity Center. This is important because IAM Identity Center uses
    user attributes to make authorization decisions, so by mapping the correct attributes,
    we can ensure that users are always granted the correct access permissions.'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**属性映射**：这是在两个系统之间映射用户属性的过程。在 AWS Identity Center 和 Microsoft Entra ID 之间的
    SSO 上下文中，属性映射使我们能够在 Microsoft Entra ID 和 IAM Identity Center 之间映射用户属性。这一点非常重要，因为
    IAM Identity Center 使用用户属性做出授权决策，因此通过映射正确的属性，我们可以确保用户始终被授予正确的访问权限。'
- en: Let us now see some additional references to help us further explore integrating
    IAM Identity Center with Microsoft Entra ID, especially with respect to the changes
    on the Azure side.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在查看一些额外的参考资料，帮助我们进一步探索将 IAM Identity Center 与 Microsoft Entra ID 集成，特别是关于
    Azure 端的变更。
- en: See also
  id: totrans-339
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: We can explore more about automatic provisioning within AWS IAM Identity Center
    at [https://www.cloudericks.com/blog/understanding-automatic-provisioning-with-aws-iam-identity-center](https://www.cloudericks.com/blog/understanding-automatic-provisioning-with-aws-iam-identity-center)
    .
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以通过[https://www.cloudericks.com/blog/understanding-automatic-provisioning-with-aws-iam-identity-center](https://www.cloudericks.com/blog/understanding-automatic-provisioning-with-aws-iam-identity-center)深入了解
    AWS IAM Identity Center 中的自动化配置功能。
- en: Including detailed steps and explanations for the configurations needed to be
    done on the Azure side would have been outside the scope of this book. We can
    learn more about Microsoft Entra SSO integration with AWS IAM Identity Center
    at [https://www.cloudericks.com/blog/understanding-microsoft-entra-sso-integration-with-iam-identity-center](https://www.cloudericks.com/blog/understanding-microsoft-entra-sso-integration-with-iam-identity-center)
    .
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含在 Azure 端需要进行的配置的详细步骤和说明超出了本书的范围。我们可以通过[https://www.cloudericks.com/blog/understanding-microsoft-entra-sso-integration-with-iam-identity-center](https://www.cloudericks.com/blog/understanding-microsoft-entra-sso-integration-with-iam-identity-center)了解更多关于
    Microsoft Entra SSO 与 AWS IAM Identity Center 的集成信息。
