- en: Testing Services with Metasploit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit测试服务
- en: 'Now let''s talk about testing various specialized services. It is likely during
    your career as a penetration tester that you will come across a testable environment
    that only requires testing to be performed within a service such as databases,
    VOIP, or SCADA. In this chapter, we will look at various developing strategies
    to use while carrying out penetration tests on these services. In this chapter,
    we will cover the following points:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来谈谈测试各种专业服务。作为渗透测试人员，你可能会遇到一个只需要在数据库、VOIP或SCADA等服务中进行测试的可测试环境。在本章中，我们将探讨在进行这些服务的渗透测试时使用的各种发展策略。在本章中，我们将涵盖以下内容：
- en: Understanding SCADA exploitation
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解SCADA的利用
- en: The fundamentals of ICS and their critical nature
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ICS的基础知识及其关键性质
- en: Carrying out database penetration tests
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行数据库渗透测试
- en: Testing VOIP services
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试VOIP服务
- en: Service-based penetration testing requires sharp skills and a good understanding
    of services that we can successfully exploit. Therefore, in this chapter, we will
    look at both the theoretical and the practical challenges we might face during
    a service-oriented penetration test.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 基于服务的渗透测试需要敏锐的技能和对我们可以成功利用的服务的深刻理解。因此，在本章中，我们将探讨在服务导向的渗透测试中可能面临的理论和实际挑战。
- en: Fundamentals of testing SCADA systems
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试SCADA系统的基础知识
- en: '**Supervisory Control and Data Acquisition** (**SCADA**) is a composition of
    software along with hardware elements that are required to control activities
    in dams, power stations, oil refineries, large server control services, and so
    on.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**监控控制和数据采集**（**SCADA**）是软件和硬件元素的组合，用于控制大坝、发电站、炼油厂、大型服务器控制服务等活动。'
- en: SCADA systems are built for highly specific tasks, such as controlling the level
    of dispatched water, controlling the gas lines, controlling the electric power
    grid to manage power in a particular city, and various other operations.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: SCADA系统是为高度特定的任务而构建的，例如控制分派水的水平，控制天然气管道，控制电力网以管理特定城市的电力以及各种其他操作。
- en: The fundamentals of ICS and its components
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ICS和其组件的基础知识
- en: SCADA systems are **Industrial Control System** (**ICS**) systems, which are
    used in critical environments or where life is at stake if anything goes wrong.
    The industrial control systems are the systems that are responsible for controlling
    various processes, such as mixing two chemicals in a definite ratio, inserting
    carbon dioxide in a particular environment, putting the proper amount of water
    in the boiler, and so on.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: SCADA系统是**工业控制系统**（**ICS**）系统，用于关键环境或生命受到威胁的地方。工业控制系统负责控制各种过程，例如在特定比例中混合两种化学品，将二氧化碳注入特定环境，向锅炉中加入适量的水等。
- en: 'The components of such SCADA systems are as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些SCADA系统的组件如下：
- en: '| **Component** | **Use** |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| **组件** | **用途** |'
- en: '| **Remote Terminal Unit** (**RTU**) | RTU is the device that converts analog
    measurements into digital information. Additionally, the most widely used protocol
    for communication is **ModBus****.** |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| **远程终端单元**（**RTU**）| RTU是将模拟测量转换为数字信息的设备。此外，用于通信的最广泛使用的协议是**ModBus**。|'
- en: '| **Programmable Logic Controller** (**PLC**) | PLCs are integrated with I/O
    servers and real-time operating systems; it works exactly like RTU. It also uses
    protocols such as FTP and SSH. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| **可编程逻辑控制器**（**PLC**）| PLC与I/O服务器和实时操作系统集成；它的工作方式与RTU完全相同。它还使用诸如FTP和SSH的协议。|'
- en: '| **Human Machine Interface** (**HMI**) | HMI is the graphical representation
    of the environment, which is under observation or is being controlled by the SCADA
    system. HMI is the GUI interface and one of the areas that is exploited by attackers.
    |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| **人机界面**（**HMI**）| HMI是环境的图形表示，由SCADA系统观察或控制。HMI是GUI界面，也是攻击者利用的一个领域。|'
- en: '| **Intelligent Electronic Device** (**IED**) | IED is a microchip, or more
    specifically a controller, that can send commands to perform a particular action,
    such as closing the valve after a specific amount of a specific substance is mixed
    with another. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| **智能电子设备**（**IED**）| IED是一个微芯片，或更具体地说是一个控制器，可以发送命令执行特定操作，例如在特定物质的特定量混合后关闭阀门。|'
- en: The significance of ICS-SCADA
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ICS-SCADA的重要性
- en: ICS systems are very critical, and if the control of them were to be placed
    into the wrong hands, a disastrous situation could occur. Just imagine a situation
    where ICS control for a gas line was hacked by a malicious actor—denial of service
    is not the only thing we could expect; damage to some SCADA systems could even
    lead to loss of life. You might have seen the movie *Die Hard 4.0*, in which the
    hackers redirecting the gas lines to the particular station look cool, and traffic
    chaos seems like a source of fun. However, in reality, when a situation like this
    arises, it will cause severe damage to property and can cause loss of life.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: ICS系统非常关键，如果它们的控制权落入错误的手中，可能会发生灾难性的情况。想象一下，如果一个恶意行为者黑客入侵了天然气管道的ICS控制，我们不仅会遭受服务拒绝，甚至可能会造成SCADA系统的损坏，甚至导致生命的丧失。你可能看过电影《虎胆龙威4.0》，在电影中，黑客们重定向天然气管道到特定站点看起来很酷，交通混乱似乎是一种乐趣的来源。然而，在现实中，当出现这样的情况时，它将对财产造成严重损害，并可能导致生命的丧失。
- en: As we have seen in the past, with the advent of the **Stuxnet worm**, the conversation
    about the security of ICS and SCADA systems has been severely violated. Let's
    take a further step and discuss how we can break into SCADA systems or test them
    out so that we can secure them for a better future.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们过去所看到的，随着**Stuxnet蠕虫**的出现，关于ICS和SCADA系统安全性的讨论已经受到严重侵犯。让我们进一步讨论如何侵入SCADA系统或测试它们，以便为更美好的未来保护它们。
- en: Exploiting HMI in SCADA servers
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用SCADA服务器中的HMI
- en: In this section, we will discuss how we can test the safety of SCADA systems.
    We have plenty of frameworks that can test SCADA systems, but considering all
    of them will push us beyond the scope of this book. Therefore, to keep it simple,
    we will continue our discussion specific to SCADA HMI exploitation carried out
    using Metasploit only.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何测试SCADA系统的安全性。我们有很多框架可以测试SCADA系统，但考虑到所有这些都会超出本书的范围。因此，为了简化起见，我们将继续讨论使用Metasploit进行SCADA
    HMI利用的特定内容。
- en: Fundamentals of testing SCADA
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCADA测试基础
- en: Let's understand the basics of exploiting SCADA systems. SCADA systems can be
    compromised using a variety of exploits in Metasploit, which were added recently
    to the framework. Some of the SCADA servers located on the internet may have a
    default username and password. However, due to advances in security, finding one
    with default credentials is highly unlikely, but it may be a possibility.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解利用SCADA系统的基础知识。SCADA系统可以使用Metasploit中最近添加到框架中的各种漏洞进行妥协。一些位于互联网上的SCADA服务器可能具有默认的用户名和密码。然而，由于安全性的提高，找到具有默认凭据的服务器的可能性极小，但这可能是一种可能性。
- en: 'Popular internet scanner websites such as [https://shodan.io](https://shodan.io)
    are an excellent resource for finding SCADA servers that are internet facing;
    let''s see the steps we need to perform to integrate Shodan with Metasploit:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 像[https://shodan.io](https://shodan.io)这样的流行互联网扫描网站是寻找面向互联网的SCADA服务器的绝佳资源；让我们看看我们需要执行哪些步骤来将Shodan与Metasploit集成：
- en: 'First, we need to create an account on the [https://shodan.io](https://shodan.io)
    website:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在[https://shodan.io](https://shodan.io)网站上创建一个帐户：
- en: After registering, we can simply find our API key within our account. Obtaining
    the API key, we can search various services in Metasploit.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册后，我们可以在我们的帐户中轻松找到我们的API密钥。获取API密钥后，我们可以在Metasploit中搜索各种服务。
- en: Fire up Metasploit and load the `auxiliary/gather/shodan_search` module.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Metasploit并加载`auxiliary/gather/shodan_search`模块。
- en: Set the `SHODAN_API` key option in the module to the API key of your account.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在模块中设置`SHODAN_API`密钥选项为您帐户的API密钥。
- en: 'Let''s try finding SCADA servers using systems developed by Rockwell Automation
    by setting the `QUERY` option to `Rockwell`, as shown in the following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们尝试使用由Rockwell Automation开发的系统来查找SCADA服务器，将`QUERY`选项设置为`Rockwell`，如下截图所示：
- en: '![](img/ecdd59a9-8596-472a-a3f0-d5e176839209.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ecdd59a9-8596-472a-a3f0-d5e176839209.png)'
- en: 'We set the required `SHODAN_APIKEY` option and `QUERY` option, as shown in
    the preceding screenshot. Let''s analyze the results by running the module as
    follows:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们设置了所需的`SHODAN_APIKEY`选项和`QUERY`选项，如前面的截图所示。让我们通过运行模块来分析结果：
- en: '![](img/1fa57e7f-7617-4803-80ac-8a90f1f992db.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1fa57e7f-7617-4803-80ac-8a90f1f992db.png)'
- en: We have found a large number of systems on the internet running SCADA services
    via Rockwell Automation using the Metasploit module with ease. However, it is
    always better to not try any attacks on networks you know nothing about, especially
    the ones you don't have the authority for.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现许多通过Rockwell Automation使用Metasploit模块轻松运行SCADA服务的系统。然而，最好不要尝试对你一无所知的网络进行任何攻击，尤其是你没有权限的网络。
- en: SCADA-based exploits
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于SCADA的利用
- en: In recent times, we have seen that SCADA systems are exploited at much higher
    rates than in the past. SCADA systems may suffer from various kinds of vulnerabilities,
    such as stack-based overflow, integer overflow, cross-site scripting, and SQL
    injection.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我们看到SCADA系统受到的利用率远高于过去。SCADA系统可能受到各种漏洞的影响，如基于堆栈的溢出、整数溢出、跨站脚本和SQL注入。
- en: Moreover, the impact of these vulnerabilities may cause danger to life and property,
    as we have discussed before. The reason why the hacking of SCADA devices is a
    possibility lies mostly in the careless programming and poor operating procedures
    of SCADA developers and operators.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这些漏洞可能对生命和财产造成危险，正如我们之前讨论的那样。SCADA设备被黑客攻击的可能性主要在于SCADA开发人员和操作人员的粗心编程和糟糕的操作程序。
- en: Let's see an example of a SCADA service and try to exploit it with Metasploit.
    In the following case, we will exploit a DATAC RealWin SCADA Server 2.0 system
    based on a Windows XP system using Metasploit.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个SCADA服务的例子，并尝试使用Metasploit进行利用。在下面的案例中，我们将使用Metasploit在基于Windows XP系统的DATAC
    RealWin SCADA Server 2.0系统上进行利用。
- en: The service runs on port `912`, which is vulnerable to buffer overflow in the
    `sprintf` C function. The `sprintf` function is used in the DATAC RealWin SCADA
    server's source code to display a particular string constructed from the user's
    input. The vulnerable function, when abused by the attacker, can lead to full
    compromise of the target system.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务在端口`912`上运行，容易受到`sprintf` C函数的缓冲区溢出的影响。`sprintf`函数在DATAC RealWin SCADA服务器的源代码中用于显示从用户输入构造的特定字符串。当攻击者滥用这个易受攻击的函数时，可能导致目标系统完全被攻陷。
- en: 'Let''s try exploiting the DATAC RealWin SCADA Server 2.0 with Metasploit using
    the `exploit/windows/scada/realwin_scpc_initialize` exploit as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试使用Metasploit利用`exploit/windows/scada/realwin_scpc_initialize`漏洞来利用DATAC
    RealWin SCADA Server 2.0，如下所示：
- en: '![](img/42dd3f26-9db1-498c-867a-70c4525394d3.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/42dd3f26-9db1-498c-867a-70c4525394d3.png)'
- en: 'We set the RHOST as `192.168.10.108` and the payload as `windows/meterpreter/bind_tcp`.
    The default port for DATAC RealWin SCADA is `912`. Let''s exploit the target and
    check if we can exploit the vulnerability:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将RHOST设置为`192.168.10.108`，有效载荷设置为`windows/meterpreter/bind_tcp`。DATAC RealWin
    SCADA的默认端口是`912`。让我们利用目标并检查我们是否可以利用这个漏洞：
- en: '![](img/01da61da-eebd-44a0-9ede-97fd66c8a114.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/01da61da-eebd-44a0-9ede-97fd66c8a114.png)'
- en: 'Bingo! We successfully exploited the target. Let''s load the `mimikatz` module
    to find the system''s password in clear text as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们成功地利用了目标。让我们加载`mimikatz`模块以找到系统的明文密码，如下所示：
- en: '![](img/c1dbabff-f1c4-4bb0-94dd-eaccc397d720.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1dbabff-f1c4-4bb0-94dd-eaccc397d720.png)'
- en: We can see that by issuing the `kerberos` command, we can find the password
    in clear text. We will discuss the `mimikatz` functionality and additional libraries
    further in the latter half of the book.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，通过发出`kerberos`命令，我们可以找到明文密码。我们将在本书的后半部分进一步讨论`mimikatz`功能和其他附加库。
- en: Attacking the Modbus protocol
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击Modbus协议
- en: 'Most of the SCADA servers are on the internal/air-gapped networks. However,
    consider a possibility where an attacker has gained initial access to an internet
    facing server and pivoting from the same; he can alter the state of PLCs, read
    and write values to the controller, and cause havoc. Let''s see an example demonstrating
    this as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数SCADA服务器都位于内部/空隔网络中。但是，考虑一种可能性，即攻击者已经获得了对面向互联网的服务器的初始访问权限，并从同一服务器进行了枢纽转移；他可以更改PLC的状态，读取和写入控制器的值，并造成混乱。让我们看一个示例来演示这一点：
- en: '![](img/1ac27c2d-4e6f-4e7c-a687-0244a8de2b3b.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1ac27c2d-4e6f-4e7c-a687-0244a8de2b3b.png)'
- en: We can see in the preceding screenshot that an attacker has gained access to
    a system on IP range `192.168.174.0` and has already identified and added a route
    to an internal network range, which is `192.168.116.0`.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，我们可以看到攻击者已经访问了IP范围为`192.168.174.0`的系统，并已经识别并添加了一个到内部网络范围`192.168.116.0`的路由。
- en: 'At this point, an attacker would perform a port scan on the hosts in the internal
    network. Suppose we found a system with an IP of `192.168.116.131` up on the internal
    network. An extensive port scan is required as bad practices here may cause severe
    problems. Let''s see how we can perform a port scan in such scenarios:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，攻击者将在内部网络中的主机上执行端口扫描。假设我们在内部网络中找到了一个IP为`192.168.116.131`的系统。这里需要进行广泛的端口扫描，因为不良做法可能会导致严重问题。让我们看看如何在这种情况下执行端口扫描：
- en: '![](img/65587dae-230f-4d26-88f1-aa8519b66277.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65587dae-230f-4d26-88f1-aa8519b66277.png)'
- en: 'We can see that the preceding scan is not a conventional scan. We used the
    `-n` switch to disable DNS resolution. The `-sT` switch denotes a TCP connect
    scan with a scan delay of 1 second, which means that the ports will be scanned
    sequentially and one at a time. The Nmap scan yields the following results:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，前面的扫描不是常规扫描。我们使用了`-n`开关来禁用DNS解析。`-sT`开关表示使用扫描延迟为1秒的TCP连接扫描，这意味着端口将按顺序逐个进行扫描。Nmap扫描产生了以下结果：
- en: '![](img/fba33e9a-df61-476f-a50b-bc1054622eb8.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fba33e9a-df61-476f-a50b-bc1054622eb8.png)'
- en: 'The port number `502` is a standard Modbus/TCP server port, allowing communication
    with the PLCs from the SCADA software. Interestingly, we have a Metasploit `modbusclient`
    module that can communicate with the Modbus port and may allow us to alter values
    of the registers in the PLC. Let''s see an example:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 端口号`502`是标准的Modbus/TCP服务器端口，允许与SCADA软件中的PLC进行通信。有趣的是，我们有一个Metasploit `modbusclient`模块，可以与Modbus端口通信，并可能允许我们更改PLC中寄存器的值。让我们看一个例子：
- en: '![](img/e80eb993-c4be-4871-8428-3d3c8742d703.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e80eb993-c4be-4871-8428-3d3c8742d703.png)'
- en: 'We can see that the default action of the auxiliary module is to read registers.
    Setting four registers as `DATA_ADDRESS` will yield the value residing in data
    register number four. We can see that the value is `0`. Let''s try it on a different
    register which is at `DATA_ADDRESS 3`:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，辅助模块的默认操作是读取寄存器。将四个寄存器设置为`DATA_ADDRESS`将产生存储在第四个数据寄存器中的值。我们可以看到值为`0`。让我们尝试在`DATA_ADDRESS
    3`处的不同寄存器上进行操作：
- en: '![](img/4f95befd-0291-4bac-8d1d-c03744e61ab8.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4f95befd-0291-4bac-8d1d-c03744e61ab8.png)'
- en: 'Well, setting the value to `3` reads `56` as the output which means that the
    value in the third data register is `56`. We can visualize this value as the temperature,
    as shown in the following diagram:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，将值设置为`3`会读取`56`作为输出，这意味着第三个数据寄存器中的值为`56`。我们可以将这个值视为温度，如下图所示：
- en: '![](img/e0a56d37-81c2-42e4-a37f-a67cc572683b.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0a56d37-81c2-42e4-a37f-a67cc572683b.png)'
- en: 'An attacker can alter these values by changing the action of the auxiliary
    module to `WRITE_REGISTERS`, as shown in the following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以通过将辅助模块的操作更改为`WRITE_REGISTERS`来改变这些值，如下面的屏幕截图所示：
- en: '![](img/03ff06a1-e6ba-43b7-867c-63367677e804.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/03ff06a1-e6ba-43b7-867c-63367677e804.png)'
- en: 'Let''s see whether we can write the value to the register or not:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们是否可以将值写入寄存器：
- en: '![](img/b79f2234-b0bc-4879-a3c1-3918122849cd.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b79f2234-b0bc-4879-a3c1-3918122849cd.png)'
- en: 'We can see that the value was altered successfully, which also means that on
    the HMI there could be an inevitable increase in the readings of the temperature,
    as shown in the following diagram:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，值已经成功更改，这也意味着在HMI上温度读数可能会不可避免地增加，如下图所示：
- en: '![](img/c7b24cb0-72c8-4071-88bc-825346190b7b.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c7b24cb0-72c8-4071-88bc-825346190b7b.png)'
- en: 'The preceding example interface is just used for illustration purposes and
    to demonstrate how critical SCADA and ICS systems are. We can also manipulate
    the values in coils by setting the action to `READ_COILS`. Also, we can read/write
    data in a number of registers and coils by setting the `NUMBER` option as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的示例界面仅用于说明目的，以及展示SCADA和ICS系统的重要性。我们还可以通过将操作设置为`READ_COILS`来操纵线圈中的值。此外，我们可以通过将`NUMBER`选项设置如下来读取/写入多个寄存器和线圈中的数据：
- en: '![](img/09873bb7-5da1-41d1-9fe3-5bb43e5586fa.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/09873bb7-5da1-41d1-9fe3-5bb43e5586fa.png)'
- en: We have plenty of exploits in Metasploit, which specifically target vulnerabilities
    in SCADA systems. To find out more information about these vulnerabilities, you
    can refer to the most significant resource on the web for SCADA hacking and security
    at: [http://www.scadahacker.com](http://www.scadahacker.com). You should be able
    to see many exploits listed under the *msf-scada* section at: [http://scadahacker.com/resources/msf-scada.html](http://scadahacker.com/resources/msf-scada.html).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在Metasploit中有很多专门针对SCADA系统漏洞的利用。要了解有关这些漏洞的更多信息，您可以参考SCADA黑客和安全网站上关于这些漏洞的最重要资源：[http://www.scadahacker.com](http://www.scadahacker.com)。您应该能够在[http://scadahacker.com/resources/msf-scada.html](http://scadahacker.com/resources/msf-scada.html)的*msf-scada*部分下找到许多列出的利用。
- en: Securing SCADA
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护SCADA
- en: Securing the SCADA network is the primary goal for any penetration tester on
    the job. Let's move on to the next section and learn how we can implement SCADA
    services securely and impose a restriction on it.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 对SCADA网络进行安全保护是任何渗透测试人员的首要目标。让我们进入下一部分，学习如何安全实施SCADA服务并对其进行限制。
- en: Implementing secure SCADA
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施安全的SCADA
- en: 'Securing SCADA is a tough job when it has to be performed practically; however,
    we can look for some of the following key points when securing SCADA systems:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际执行SCADA安全时，确保SCADA系统的安全性是一项艰巨的任务；然而，我们可以在确保SCADA系统安全时寻找以下一些关键点：
- en: Keep an eye on every connection to the SCADA network and check if any unauthorized
    attempts were made
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密切关注对SCADA网络的每一次连接，并检查是否有任何未经授权的尝试
- en: Make sure all the network connections are disconnected when they are not required
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保所有网络连接在不需要时都被断开
- en: Implement all the security features provided by the system vendors
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施系统供应商提供的所有安全功能
- en: Implement IDPS technologies for both internal and external systems and apply
    incident monitoring for 24 hours
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为内部和外部系统实施IDPS技术，并应用24小时的事件监控
- en: Document all the network infrastructure and define individual roles to administrators
    and editors
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录所有网络基础设施，并为管理员和编辑者定义个别角色
- en: Establish IR teams and blue teams for identifying attack vectors on a regular
    basis
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立IR团队和蓝队，定期识别攻击向量
- en: Restricting networks
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制网络
- en: Networks can be regulated in the event of attacks related to unauthorized access,
    unwanted open services, and so on. Implementing the cure by removing or uninstalling
    services is the best possible defense against various SCADA attacks.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在未经授权访问、不需要的开放服务等攻击事件发生时，网络可以进行调整。通过删除或卸载服务来实施治疗是对各种SCADA攻击的最佳防御。
- en: SCADA systems are implemented on Windows XP boxes mostly, and this increases
    the attack surface significantly. If you are deploying a SCADA system, make sure
    your Windows boxes are up to date to prevent the more common attacks.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: SCADA系统主要部署在Windows XP系统上，这显著增加了攻击面。如果您部署了SCADA系统，请确保您的Windows系统是最新的，以防止更常见的攻击。
- en: Database exploitation
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库利用
- en: After covering the basics of SCADA exploitation, let's move on to testing database
    services. In this section, our primary goal will be to test the databases and
    check for various vulnerabilities. Databases contain critical business data. Therefore,
    if there are vulnerabilities in the database management system, it can lead to
    remote code execution or full network compromise, which may lead to the exposure
    of a company's confidential data. Data related to financial transactions, medical
    records, criminal records, products, sales, marketing, and so on could be beneficial
    to the buyers of these databases in the underground community.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在介绍了SCADA利用的基础知识之后，让我们转向测试数据库服务。在这一部分，我们的主要目标将是测试数据库并检查各种漏洞。数据库包含了关键的业务数据。因此，如果数据库管理系统中存在漏洞，可能导致远程代码执行或完全网络妥协，这可能导致公司机密数据的泄露。与财务交易、医疗记录、犯罪记录、产品、销售、营销等相关的数据可能对地下社区的买家有利。
- en: To make sure that the databases are fully secure, we need to develop methodologies
    for testing these services against various types of attack. Now, let's start testing
    databases and look at the different phases of conducting a penetration test on
    a database.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保数据库完全安全，我们需要开发测试这些服务的方法论，以抵御各种类型的攻击。现在，让我们开始测试数据库，并查看在数据库渗透测试中进行不同阶段的过程。
- en: SQL server
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQL服务器
- en: Microsoft launched its database server back in 1989\. Today, a significant share
    of the websites run on the latest version of MSSQL server–the backend for the
    sites. However, if the website is extensive or handles many transactions in a
    day, it is crucial that the database is free from any vulnerabilities and problems.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 微软于1989年推出了其数据库服务器。如今，相当大比例的网站都在最新版本的MSSQL服务器上运行——这是网站的后端。然而，如果网站规模庞大或每天处理大量交易，那么数据库没有任何漏洞和问题是至关重要的。
- en: In this section on testing databases, we will focus on the strategies to test
    database management systems efficiently. By default, MSSQL runs on TCP port number
    `1433` and the UDP service runs on port `1434`. So, let's start testing MSSQL
    Server 2008 running on Windows 8.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试数据库的这一部分，我们将专注于有效测试数据库管理系统的策略。默认情况下，MSSQL运行在TCP端口号`1433`上，UDP服务运行在端口`1434`上。因此，让我们开始测试运行在Windows
    8上的MSSQL Server 2008。
- en: Scanning MSSQL with Metasploit modules
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit模块扫描MSSQL
- en: Let's jump into Metasploit-specific modules for testing the MSSQL server and
    see what kind of information we can gain by using them. The very first auxiliary
    module we will be using is `mssql_ping`. This module will gather additional service
    information.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入专门用于测试MSSQL服务器的Metasploit模块，并看看我们可以通过使用它们获得什么样的信息。我们将首先使用的辅助模块是`mssql_ping`。该模块将收集额外的服务信息。
- en: 'So, let''s load the module and start the scanning process as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们加载模块并按以下步骤开始扫描过程：
- en: '![](img/75c3300b-d82a-4fbb-bf86-9c4eac540772.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/75c3300b-d82a-4fbb-bf86-9c4eac540772.png)'
- en: We can see from the previous results that we got a good amount of information
    from the scan. Nmap offers a similar module to scan MSSQL database. However, Metasploit
    auxiliaries have a competitive edge of readability over the output from Nmap.
    Let's see what other modules can be used to test the MSSQL server.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 从以前的结果中我们可以看到，我们从扫描中获得了大量信息。Nmap提供了一个类似的模块来扫描MSSQL数据库。然而，Metasploit的辅助模块在可读性上比Nmap的输出具有竞争优势。让我们看看还有哪些模块可以用来测试MSSQL服务器。
- en: Brute forcing passwords
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 暴力破解密码
- en: The next step in penetration testing a database is to check authentication precisely.
    Metasploit has a built-in module named `mssql_login`, which we can use as an authentication
    tester to brute force the username and password of an MSSQL server database.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试数据库的下一步是精确检查认证。Metasploit有一个内置模块名为`mssql_login`，我们可以用它作为认证测试工具，来暴力破解MSSQL服务器数据库的用户名和密码。
- en: 'Let''s load the module and analyze the results:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加载模块并分析结果：
- en: '![](img/2a7b5425-8417-4274-8bff-c9ccc237c022.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a7b5425-8417-4274-8bff-c9ccc237c022.png)'
- en: 'As soon as we run this module, it tests for the default credentials at the
    very first step, that is, with the username `sa` and password blank, and finds
    that the login was successful. Therefore, we can conclude that the default credentials
    are still being used. Additionally, we must try testing for more credentials in
    case the `sa` account is not immediately found. To achieve this, we will set the
    `USER_FILE` and `PASS_FILE` parameters with the name of the files that contain
    dictionaries to brute force the username and password of the DBMS:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们运行这个模块，它会在第一步测试默认凭据，也就是使用用户名`sa`和空密码，并发现登录成功。因此，我们可以得出结论，仍然在使用默认凭据。此外，如果无法立即找到`sa`账户，我们必须尝试测试更多的凭据。为了实现这一点，我们将使用包含用于暴力破解DBMS用户名和密码的字典的文件的名称来设置`USER_FILE`和`PASS_FILE`参数：
- en: '![](img/25e443e6-5601-4961-90c7-d58d2f8931b1.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25e443e6-5601-4961-90c7-d58d2f8931b1.png)'
- en: 'Let''s set the required parameters, which are the `USER_FILE` list, the `PASS_FILE`
    list, and `RHOSTS` for running this module successfully as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们设置所需的参数，即`USER_FILE`列表、`PASS_FILE`列表和`RHOSTS`，以成功运行这个模块。
- en: '![](img/e5753db0-fb80-428e-b724-68b2683ba0bb.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5753db0-fb80-428e-b724-68b2683ba0bb.png)'
- en: 'When running this module against the target database server, we will have an
    output similar to the following screenshot:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们针对目标数据库服务器运行这个模块时，我们将得到类似以下截图的输出：
- en: '![](img/bdf50004-6927-4548-93e1-1e125e34be90.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bdf50004-6927-4548-93e1-1e125e34be90.png)'
- en: As we can see from the preceding result, we have two entries that correspond
    to the successful login of the user in the database. We found a default user,
    `sa`, with a blank password, and another user, `nipun`, whose password is `12345`.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的结果中可以看出，我们有两个条目对应于用户在数据库中成功登录。我们找到了一个默认用户`sa`，密码为空，另一个用户`nipun`，密码是`12345`。
- en: Locating/capturing server passwords
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定位/捕获服务器密码
- en: 'We know that we have two users: `sa` and `nipun`. Let''s use one of them and
    try finding the other user credentials. We can achieve this with the help of the
    `mssql_hashdump` module. Let''s check it''s working and investigate all other
    hashes as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道我们有两个用户：`sa`和`nipun`。让我们使用其中一个，并尝试找到另一个用户的凭据。我们可以借助`mssql_hashdump`模块来实现这一点。让我们检查它的工作并调查所有其他哈希值：
- en: '![](img/28465756-6f26-4a99-944e-f7841631aa53.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/28465756-6f26-4a99-944e-f7841631aa53.png)'
- en: We can see that we have gained access to the password hashes for other accounts
    on the database server. We can now crack them using a third-party tool and can
    elevate or gain access to additional databases and tables as well.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，我们已经获得了数据库服务器上其他账户的密码哈希。现在我们可以使用第三方工具破解它们，并且还可以提升或访问其他数据库和表。
- en: Browsing the SQL server
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浏览SQL服务器
- en: We found the users and their corresponding passwords in the previous section.
    Now, let's log in to the server and gather essential information about the database
    server, such as stored procedures, the number and name of the databases, Windows
    groups that can log in to the database server, the files in the database, and
    the parameters.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在前面的部分找到了用户及其对应的密码。现在，让我们登录到服务器，并收集关于数据库服务器的基本信息，如存储过程、当前存在的数据库数量和名称、可以登录到数据库服务器的Windows组、数据库中的文件以及参数。
- en: 'The module that we are going to use is `mssql_enum`. Let''s see how we can
    run this module on the target database:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要使用的模块是`mssql_enum`。让我们看看如何在目标数据库上运行这个模块：
- en: '![](img/cbe68e99-fd1f-4522-a65d-9fe847434074.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cbe68e99-fd1f-4522-a65d-9fe847434074.png)'
- en: 'After running the `mssql_enum` module, we will be able to gather a lot of information
    about the database server. Let''s see what kind of information it presents:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`mssql_enum`模块后，我们将能够收集关于数据库服务器的大量信息。让我们看看它提供了什么样的信息：
- en: '![](img/95fe963a-6f16-46e9-a2a4-b77e0da837cf.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95fe963a-6f16-46e9-a2a4-b77e0da837cf.png)'
- en: As we can see, the module presents us with almost all the information about
    the database server, such as stored procedures, names, the number of databases
    present, disabled accounts, and so on.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，该模块向我们呈现了关于数据库服务器的几乎所有信息，如存储过程、名称、当前存在的数据库数量、禁用的账户等。
- en: 'We will also see in the upcoming *Reloading the xp_cmdshell functionality*
    section that we can bypass some disabled stored procedures. Also, procedures such
    as `xp_cmdshell` can lead to the the entire server being compromised. We can see
    in the previous screenshot that `xp_cmdshell` is enabled on the server. Let''s
    see what other information the `mssql_enum` module has got for us:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将在接下来的*重新加载xp_cmdshell功能*部分中看到，我们可以绕过一些禁用的存储过程。而且，像`xp_cmdshell`这样的存储过程可能导致整个服务器被
    compromise。我们可以在之前的截图中看到`xp_cmdshell`在服务器上是启用的。让我们看看`mssql_enum`模块还为我们提供了什么其他信息：
- en: '![](img/376c5726-3867-4631-bc1e-ee1be64414a6.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/376c5726-3867-4631-bc1e-ee1be64414a6.png)'
- en: Running the module, we have a list of stored procedures, accounts with an empty
    password, window logins for the database, and admin logins.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 运行该模块，我们得到了一系列存储过程、空密码的账户、数据库的窗口登录和管理员登录。
- en: Post-exploiting/executing system commands
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后期利用/执行系统命令
- en: After gathering enough information about the target database, let's perform
    some post-exploitation. To achieve post-exploitation, we have two different modules
    that can be very handy. The first one is `mssql_sql`, which will allow us to run
    SQL queries on to the database, and the second one is `msssql_exec`, which will
    enable us to run system-level commands by enabling the `xp_cmdshell` procedure
    in case it's disabled.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在收集了关于目标数据库的足够信息后，让我们进行一些后期利用。为了实现后期利用，我们有两个不同的模块可以非常方便。第一个是`mssql_sql`，它将允许我们在数据库上运行SQL查询，第二个是`msssql_exec`，它将使我们能够通过启用`xp_cmdshell`存储过程来运行系统级命令，以防它被禁用。
- en: Reloading the xp_cmdshell functionality
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重新加载xp_cmdshell功能
- en: 'The `mssql_exec` module will try running the system-level commands by reloading
    the disabled `xp_cmdshell` functionality. This module will require us to set the
    `CMD` option to the `system` command that we want to execute. Let''s see how it
    works:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`mssql_exec`模块将尝试通过重新加载禁用的`xp_cmdshell`功能来运行系统级命令。此模块将要求我们将`CMD`选项设置为我们要执行的`system`命令。让我们看看它是如何工作的：'
- en: '![](img/d6f38bd2-aeff-4de0-b493-910bcaf4ad01.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6f38bd2-aeff-4de0-b493-910bcaf4ad01.png)'
- en: 'As soon as we finish running the `mssql_exec` module, the results will flash
    onto the screen, as shown in the following screenshot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成运行`mssql_exec`模块，结果将如下屏幕截图所示闪现到屏幕上：
- en: '![](img/6d2d0415-d10a-4f66-87d7-607bec59f08e.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d2d0415-d10a-4f66-87d7-607bec59f08e.jpg)'
- en: The resultant window shows the successful execution of the `system` command
    against the target database server.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 结果窗口显示了针对目标数据库服务器执行`system`命令的成功执行。
- en: Running SQL-based queries
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行基于SQL的查询
- en: 'We can also run SQL-based queries against the target database server using
    the `mssql_sql` module. Setting the `SQL` option to any valid database query will
    execute it, as shown in the following screenshot:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`mssql_sql`模块对目标数据库服务器运行基于SQL的查询。将`SQL`选项设置为任何有效的数据库查询将执行它，如下面的屏幕截图所示：
- en: '![](img/6edb5a01-899c-4e20-8c4f-88a551d3385c.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6edb5a01-899c-4e20-8c4f-88a551d3385c.png)'
- en: We set the `SQL` parameter to `select @@version`. The database server ran the
    query successfully, and we got the version of the database.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将`SQL`参数设置为`select @@version`。数据库服务器成功运行了查询，并且我们得到了数据库的版本。
- en: Therefore, following the preceding procedures, we can test out various databases
    for vulnerabilities using Metasploit.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，按照上述程序，我们可以使用Metasploit测试各种数据库的漏洞。
- en: Testing MySQL database is covered in my other book, *Metasploit Bootcamp* ([https://www.packtpub.com/networking-and-servers/metasploit-bootcamp](https://www.packtpub.com/networking-and-servers/metasploit-bootcamp));
    give it a try.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL数据库的测试在我的另一本书*Metasploit Bootcamp*中有介绍（[https://www.packtpub.com/networking-and-servers/metasploit-bootcamp](https://www.packtpub.com/networking-and-servers/metasploit-bootcamp)）；试试看。
- en: 'Refer to the following resources for securing MSSQL databases:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下资源以保护MSSQL数据库：
- en: '[https://www.mssqltips.com/sql-server-tip-category/19/security/](https://www.mssqltips.com/sql-server-tip-category/19/security/).'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.mssqltips.com/sql-server-tip-category/19/security/](https://www.mssqltips.com/sql-server-tip-category/19/security/)。'
- en: 'For MySQL:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 对于MySQL：
- en: '[http://www.hexatier.com/mysql-database-security-best-practices-2/](http://www.hexatier.com/mysql-database-security-best-practices-2/).'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.hexatier.com/mysql-database-security-best-practices-2/](http://www.hexatier.com/mysql-database-security-best-practices-2/)。'
- en: Testing VOIP services
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试VOIP服务
- en: Now, let's focus on testing VOIP-enabled services and see how we can check for
    various flaws that might affect VOIP services.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们专注于测试VOIP服务，并看看我们如何检查可能影响VOIP服务的各种缺陷。
- en: VOIP fundamentals
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VOIP基础知识
- en: '**Voice Over Internet Protocol** (**VOIP**) is a much less costly technology
    when compared to traditional telephonic services. VOIP provides much more flexibility
    than the traditional ones regarding telecommunication and offers various features,
    such as multiple extensions, caller ID services, logging, recording of each call
    made, and so on. Multiple companies have launched their **Private Branch Exchange**
    (**PBX**) on IP-enabled phones.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**互联网语音**（**VOIP**）技术与传统电话服务相比成本要低得多。VOIP在电信方面比传统电话服务提供了更多的灵活性，并提供了多个功能，如多个分机、来电显示服务、日志记录、每通电话的录音等。多家公司已经在IP电话上推出了他们的**专用分支交换**（**PBX**）。'
- en: The traditional and the present telephonic systems are still vulnerable to interception
    through physical access, so if an attacker alters the connection of a phone line
    and attaches their transmitter, they will be able to make and receive calls on
    the victim's device and enjoy internet and fax services.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 传统和现有的电话系统仍然容易通过物理接触进行拦截，因此，如果攻击者更改电话线的连接并连接他们的发射器，他们将能够在受害者设备上拨打和接听电话，并享受互联网和传真服务。
- en: However, in the case of VOIP services, we can compromise security without going
    on to the wires. Nevertheless, attacking VOIP services is a tedious task if you
    do not have basic knowledge of how it works. This section sheds light on how we
    can compromise VOIP in a network without intercepting the wires.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在VOIP服务的情况下，我们可以在不接触电线的情况下破坏安全性。然而，如果您不了解其工作原理，攻击VOIP服务将是一项繁琐的任务。本节将介绍如何在网络中破坏VOIP而不拦截电线。
- en: An introduction to PBX
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PBX简介
- en: 'PBX is a cost-effective solution to telephony services in small and medium-sized
    companies because it provides much more flexibility and intercommunication between
    the company cabins and floors. A large company may also prefer PBX because connecting
    each telephone line to the external line becomes very cumbersome in large organizations.
    PBX includes the following:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: PBX是小型和中型公司电话服务的经济解决方案，因为它在公司的机舱和楼层之间提供了更多的灵活性和互联。大公司也可能更喜欢PBX，因为在大型组织中连接每条电话线到外部线路变得非常繁琐。PBX包括以下内容：
- en: Telephone trunk lines that terminate at the PBX
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在PBX终止的电话干线
- en: A computer that manages the switching of calls within the PBX and in and out
    of it
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理PBX内和外的呼叫切换的计算机
- en: The network of communication lines within the PBX
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PBX内的通信线路网络
- en: A console or switchboard for a human operator
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人工操作员的控制台或交换机
- en: Types of VOIP services
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VOIP服务的类型
- en: We can classify VOIP technologies into three different categories. Let's see
    what they are.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将VOIP技术分为三种不同的类别。让我们看看它们是什么。
- en: Self-hosted network
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自托管网络
- en: 'In this type of network, a PBX is installed at the client''s site and is further
    connected to an **Internet Service Provider** (**ISP**). Such systems send VOIP
    traffic flows through numerous virtual LANs to the PBX device, which then sends
    it to the **Public Switched Telephone Network** (**PSTN**) for circuit switching
    and the ISP of the internet connection as well. The following diagram demonstrates
    this network well:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种类型的网络中，PBX安装在客户端现场，并进一步连接到**互联网服务提供商**（**ISP**）。这些系统通过多个虚拟局域网将VOIP流量传输到PBX设备，然后将其发送到**公共交换电话网**（**PSTN**）进行电路交换，同时也发送到互联网连接的ISP。以下图表很好地展示了这种网络：
- en: '![](img/ea016a02-b5d4-4688-94df-f3a256e56829.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea016a02-b5d4-4688-94df-f3a256e56829.png)'
- en: Hosted services
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 托管服务
- en: In the hosted services-type VOIP technology, there is no PBX at the client's
    premises. However, all the devices at the client's premises are connected to the
    PBX of the service provider via the internet, that is, via **Session Initiation
    Protocol** (**SIP**) lines using IP/VPN technologies.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在托管服务类型的VOIP技术中，客户端的场所没有PBX。然而，客户端场所的所有设备都通过互联网连接到服务提供商的PBX，即通过使用IP/VPN技术的**会话初始协议**（**SIP**）线路。
- en: 'Let''s see how this technology works with the help of the following diagram:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下图表如何解释这项技术：
- en: '![](img/ce73a6f0-e29d-42c5-80dc-97fed0a47bdf.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ce73a6f0-e29d-42c5-80dc-97fed0a47bdf.png)'
- en: SIP service providers
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SIP服务提供商
- en: 'Many SIP service providers on the internet provide connectivity for softphones,
    which can be used directly to enjoy VOIP services. Also, we can use any client
    softphone to access the VOIP services, such as Xlite, as shown in the following
    screenshot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 许多互联网SIP服务提供商为软电话提供连接，可以直接使用以享受VOIP服务。此外，我们可以使用任何客户端软电话来访问VOIP服务，例如Xlite，如下面的屏幕截图所示：
- en: '![](img/597f6eba-0c6e-4562-bdb0-2ac62768f561.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/597f6eba-0c6e-4562-bdb0-2ac62768f561.png)'
- en: Fingerprinting VOIP services
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指纹识别VOIP服务
- en: We can fingerprint VOIP devices over a network using the SIP scanner modules
    that are built in to Metasploit. A commonly known SIP scanner is the **SIP endpoint
    scanner**. We can use this scanner to identify devices that are SIP-enabled by
    issuing the request for options from various SIP devices in the network.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Metasploit内置的SIP扫描器模块对网络中的VOIP设备进行指纹识别。一个常见的SIP扫描器是**SIP终端扫描器**。我们可以使用此扫描器通过向网络中的各种SIP设备发出选项请求来识别启用SIP的设备。
- en: 'Let''s carry on with scanning VOIP using the `options` auxiliary module under
    `/auxiliary/scanner/sip` and analyze the results. The target here is a Windows
    XP system with the Asterisk PBX VOIP client running. We start by loading the auxiliary
    module for scanning SIP services over a network, as shown in the following screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续使用`/auxiliary/scanner/sip`下的`options`辅助模块扫描VOIP并分析结果。这里的目标是运行Asterisk PBX
    VOIP客户端的Windows XP系统。我们首先加载用于扫描网络上的SIP服务的辅助模块，如下面的屏幕截图所示：
- en: '![](img/aa2d1967-06be-4a07-87ec-0c2ac70b1658.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa2d1967-06be-4a07-87ec-0c2ac70b1658.png)'
- en: 'We can see that we have plenty of options that we can use with the `auxiliary/scanner/sip/options`
    auxiliary module. We need to configure only the `RHOSTS` option. However, for
    a large network, we can define the IP ranges with the **Classless Inter-Domain
    Routing** (**CIDR**) identifier. Once run, the module will start scanning for
    IPs that may be using SIP services. Let''s run this module as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们有很多选项可以与`auxiliary/scanner/sip/options`辅助模块一起使用。我们只需要配置`RHOSTS`选项。但是，对于大型网络，我们可以使用**无类域间路由**（**CIDR**）标识符定义IP范围。运行后，该模块将开始扫描可能正在使用SIP服务的IP。让我们按照以下方式运行此模块：
- en: '![](img/4178a740-3262-4ad6-bab9-f7a852cd86f8.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4178a740-3262-4ad6-bab9-f7a852cd86f8.png)'
- en: As we can see, when this module runs, it returns a lot of information related
    to the systems that are running SIP services. The information contains the response
    called **agent**, which denotes the name and version of the PBX and verbs, which
    define the types of request supported by the PBX. Hence, we can use this module
    to gather a lot of knowledge about the SIP services on the network.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 当此模块运行时，它返回了许多与运行SIP服务的系统相关的信息。信息包含了称为**agent**的响应，它表示PBX的名称和版本，以及定义PBX支持的请求类型的动词。因此，我们可以使用此模块收集关于网络上SIP服务的大量知识。
- en: Scanning VOIP services
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描VOIP服务
- en: 'After finding out information about the various option requests supported by
    the target, let''s now scan and enumerate users for the VOIP services using another
    Metasploit module, that is, `auxiliary/scanner/sip/enumerator`. This module will
    examine VOIP services over a target range and will try to enumerate its users.
    Let''s see how we can achieve this:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在找到有关目标支持的各种选项请求的信息后，让我们现在使用另一个Metasploit模块`auxiliary/scanner/sip/enumerator`来扫描和枚举VOIP服务的用户。此模块将检查目标范围内的VOIP服务，并尝试枚举其用户。让我们看看我们如何实现这一点：
- en: '![](img/4e7b87db-02c1-44cb-a631-f405d8c7151f.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e7b87db-02c1-44cb-a631-f405d8c7151f.png)'
- en: 'We have the preceding options to use with this module. We will set some of
    the following options to run this module successfully:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有前面的选项可用于此模块。我们将设置以下一些选项以成功运行此模块：
- en: '![](img/5d01ed57-2395-41fc-a652-2c1cc351cfb6.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5d01ed57-2395-41fc-a652-2c1cc351cfb6.png)'
- en: As we can see, we have set the `MAXEXT`, `MINEXT`, `PADLEN`, and `RHOSTS` options.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，我们已经设置了`MAXEXT`，`MINEXT`，`PADLEN`和`RHOSTS`选项。
- en: In the enumerator module used in the preceding screenshot, we defined `MINEXT`
    and `MAXEXT` as `3000` and `3005`, respectively. `MINEXT` is the extension number
    from which the searching will begin, and `MAXEXT` refers to the last extension
    number where the search will end. These options can be set for a vast range, such
    as `MINEXT` to `0` and `MAXEXT` to `9999`, to find out the various users using
    VOIP services on extension numbers `0` to `9999`.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中使用的enumerator模块中，我们将`MINEXT`和`MAXEXT`定义为`3000`和`3005`。`MINEXT`是搜索将从哪个分机号开始的扩展号码，`MAXEXT`是搜索将结束的最后一个分机号码。这些选项可以设置为广泛的范围，例如将`MINEXT`设置为`0`，`MAXEXT`设置为`9999`，以查找在分机号码`0`到`9999`上使用VOIP服务的各种用户。
- en: 'Let''s run this module on a target range by setting the RHOSTS variable to
    the CIDR value as follows:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将RHOSTS变量设置为CIDR值，让我们在目标范围上运行此模块，如下所示：
- en: '![](img/20d3f874-fbdf-4e42-acaf-5d75ed1e91d0.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d3f874-fbdf-4e42-acaf-5d75ed1e91d0.png)'
- en: 'Placing `RHOSTS` as `192.168.65.0/24` will scan the entire subnet. Now, let''s
    run this module and see what output it presents:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 将`RHOSTS`设置为`192.168.65.0/24`将扫描整个子网。现在，让我们运行此模块并查看它呈现了什么输出：
- en: '![](img/e10bcd63-6a06-4f2b-ae2c-30cdaf94b9d2.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e10bcd63-6a06-4f2b-ae2c-30cdaf94b9d2.png)'
- en: This search returned many users using SIP services. Also, the effect of `MAXEXT`
    and `MINEXT` only scanned the users from the extensions `3000` to `3005`. An extension
    can be thought of as a universal address for some user in a particular network.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这次搜索返回了许多使用SIP服务的用户。此外，`MAXEXT`和`MINEXT`的影响只扫描了从`3000`到`3005`的分机用户。分机可以被认为是特定网络中某个用户的通用地址。
- en: Spoofing a VOIP call
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 欺骗VOIP呼叫
- en: 'Having gained enough knowledge about the various users using SIP services,
    let''s try making a fake call to the user using Metasploit. While a user is running
    SipXphone 2.0.6.27 on a Windows XP platform, let''s send the user a phony invite
    request, utilizing the `auxiliary/voip/sip_invite_spoof` module as follows:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了使用SIP服务的各种用户的足够知识后，让我们尝试使用Metasploit给用户打一个假电话。当用户在Windows XP平台上运行SipXphone
    2.0.6.27时，让我们发送一个虚假的邀请请求给用户，使用`auxiliary/voip/sip_invite_spoof`模块如下：
- en: '![](img/5c3ee936-5ebe-430b-8a4f-fb3eaab75839.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5c3ee936-5ebe-430b-8a4f-fb3eaab75839.png)'
- en: We will set the `RHOSTS` option with the IP address of the target and the `EXTENSION`
    as `4444` for the target. Let's keep `SRCADDR` set to `192.168.1.1`, which will
    spoof the address source making the call.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用目标的IP地址设置`RHOSTS`选项，将`EXTENSION`设置为目标的`4444`。让我们保持`SRCADDR`设置为`192.168.1.1`，这将伪装地址源进行呼叫。
- en: 'Therefore, let''s run the module as follows:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们按照以下方式运行模块：
- en: '![](img/25014672-607d-4e9e-9f74-70e010b014bc.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25014672-607d-4e9e-9f74-70e010b014bc.png)'
- en: 'Let''s see what is happening on the victim''s side as follows:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看受害者这边发生了什么：
- en: '![](img/cc0f7d19-1e6b-49c2-a4de-552e8c3cde10.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc0f7d19-1e6b-49c2-a4de-552e8c3cde10.png)'
- en: We can see that the softphone is ringing, displaying the caller as 192.168.1.1,
    and displaying the predefined message from Metasploit as well.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到软电话正在响铃，显示呼叫者为192.168.1.1，并显示来自Metasploit的预定义消息。
- en: Exploiting VOIP
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用VOIP
- en: 'To gain complete access to the system, we can try exploiting the softphone
    software as well. From the previous scenarios, we have the target''s IP address.
    Let''s scan and exploit it with Metasploit. However, there are specialized VOIP
    scanning tools available within Kali operating systems that are specifically designed
    to test VOIP services only. The following is a list of tools that we can use to
    exploit VOIP services:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完全访问系统，我们也可以尝试利用软电话软件。从之前的情景中，我们有目标的IP地址。让我们使用Metasploit扫描和利用它。但是，在Kali操作系统中有专门设计用于测试VOIP服务的专用VOIP扫描工具。以下是我们可以用来利用VOIP服务的工具列表：
- en: Smap
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Smap
- en: Sipscan
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sipscan
- en: Sipsak
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sipsak
- en: Voipong
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Voipong
- en: Svmap
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Svmap
- en: Coming back to the exploitation part, we have some of the exploits in Metasploit
    that can be used on softphones. Let's look at an example of this.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 回到利用部分，我们在Metasploit中有一些可以用于软电话的利用程序。让我们看一个例子。
- en: 'The application that we are going to exploit here is SipXphone version 2.0.6.27\.
    This application''s interface may look similar to the following screenshot:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要利用的应用程序是SipXphone版本2.0.6.27。该应用程序的界面可能类似于以下截图：
- en: '![](img/889203a3-4c8d-4ec5-bf6e-2fe1aa1358ed.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](img/889203a3-4c8d-4ec5-bf6e-2fe1aa1358ed.png)'
- en: About the vulnerability
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于漏洞
- en: The vulnerability lies in the handling of the `Cseq` value by the application.
    Sending an overlong string causes the app to crash, and in most cases, it will
    allow the attacker to run malicious code and gain access to the system.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞在应用程序处理`Cseq`值时存在。发送一个过长的字符串会导致应用程序崩溃，并且在大多数情况下，它将允许攻击者运行恶意代码并访问系统。
- en: Exploiting the application
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用应用程序
- en: 'Now, let''s exploit the SipXphone version 2.0.6.27 application with Metasploit.
    The exploit that we are going to use here is `exploit/windows/sip/sipxphone_cseq`.
    Let''s load this module into Metasploit and set the required options:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们利用Metasploit来利用SipXphone版本2.0.6.27应用程序。我们要使用的利用程序是`exploit/windows/sip/sipxphone_cseq`。让我们将此模块加载到Metasploit中并设置所需的选项：
- en: '![](img/f3cb31b2-f346-48aa-8264-1ca111d1ea08.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3cb31b2-f346-48aa-8264-1ca111d1ea08.png)'
- en: 'We need to set the values for `RHOST`, `LHOST`, and `payload`. Let''s exploit
    the target application as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要设置`RHOST`、`LHOST`和`payload`的值。让我们按照以下方式利用目标应用程序：
- en: '![](img/5147c26e-034e-48d7-aa45-cd33c71186fd.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5147c26e-034e-48d7-aa45-cd33c71186fd.png)'
- en: Voila! We got the meterpreter in no time at all. Hence, exploiting VOIP can
    be easy in cases of buggy software using Metasploit. However, when testing VOIP
    devices and other service-related flaws, we can use third-party tools for efficient
    testing.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！我们在极短的时间内就得到了meterpreter。因此，在使用Metasploit时，利用VOIP可能很容易。然而，在测试VOIP设备和其他与服务相关的缺陷时，我们可以使用第三方工具进行有效的测试。
- en: 'An excellent resource for testing VOIP can be found at: [http://www.viproy.com/](http://www.viproy.com/).'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在以下网址找到测试VOIP的绝佳资源：[http://www.viproy.com/](http://www.viproy.com/)。
- en: 'Refer to these excellent guides for more on securing VOIP networks:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 有关保护VOIP网络的更多信息，请参考这些优秀的指南：
- en: '[https://searchsecurity.techtarget.com/feature/Securing-VoIP-Keeping-Your-VoIP-Networks-Safe](https://searchsecurity.techtarget.com/feature/Securing-VoIP-Keeping-Your-VoIP-Networks-Safe) and
    [https://www.sans.org/reading-room/whitepapers/voip/security-issues-countermeasure-voip-1701](https://www.sans.org/reading-room/whitepapers/voip/security-issues-countermeasure-voip-1701).'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://searchsecurity.techtarget.com/feature/Securing-VoIP-Keeping-Your-VoIP-Networks-Safe](https://searchsecurity.techtarget.com/feature/Securing-VoIP-Keeping-Your-VoIP-Networks-Safe)
    和 [https://www.sans.org/reading-room/whitepapers/voip/security-issues-countermeasure-voip-1701](https://www.sans.org/reading-room/whitepapers/voip/security-issues-countermeasure-voip-1701)。'
- en: Summary
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Throughout this chapter, we saw some exploitations and penetration testing scenarios
    that have enabled us to test various services, such as databases, VOIP, and SCADA.
    Throughout this chapter, we learned about SCADA and its fundamentals. We saw how
    we can gain a variety of information about a database server and how to gain complete
    control over it. We also saw how we could test VOIP services by scanning the network
    for VOIP clients and spoofing VOIP calls as well.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了一些使我们能够测试各种服务的利用和渗透测试场景，例如数据库、VOIP 和 SCADA。在本章中，我们了解了 SCADA 及其基本原理。我们看到了如何可以获取有关数据库服务器的各种信息以及如何完全控制它。我们还看到了如何通过扫描网络来测试
    VOIP 服务，并进行 VOIP 呼叫欺骗。
- en: 'You should perform the following exercises before moving on to the next chapter:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入下一章之前，您应该进行以下练习：
- en: Set up and test MySQL, Oracle, and PostgreSQL using Metasploit, and find and
    develop the modules for missing modules
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Metasploit 设置和测试 MySQL、Oracle 和 PostgreSQL，并找到并开发缺失模块的模块。
- en: Try automating a SQL injection bug in Metasploit
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试在 Metasploit 中自动化 SQL 注入漏洞
- en: If you are interested in SCADA and ICS, try getting your hands on Samurai STFU
    ([http://www.samuraistfu.org/](http://www.samuraistfu.org/))
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您对 SCADA 和 ICS 感兴趣，请尝试使用 Samurai STFU（[http://www.samuraistfu.org/](http://www.samuraistfu.org/)）
- en: Exploit at least one VOIP software other than the one we used in the demo
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用至少一个演示中未使用的 VOIP 软件
- en: In the next chapter, we will see how we can perform a complete penetration test
    using Metasploit and integrate various other popular scanning tools used in penetration
    testing in Metasploit. We will cover how to proceed systematically while carrying
    out penetration testing on a given subject. We will also look at how we can create
    reports and what should be included in or excluded from those reports.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何使用 Metasploit 进行完整的渗透测试，并集成其他流行的渗透测试扫描工具。我们将介绍如何在对特定主题进行渗透测试时进行系统化的操作。我们还将探讨如何创建报告以及报告中应包含或排除哪些内容。
