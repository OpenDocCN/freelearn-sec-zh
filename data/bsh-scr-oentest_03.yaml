- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: File and Directory Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件和目录管理
- en: Mastering Bash file and directory management equips you with the skills to navigate
    the filesystem efficiently, manipulate files and directories, control access through
    permissions, and automate routine tasks. These abilities are essential for anyone
    looking to harness the full power of their Linux or Unix system. With practice,
    patience, and a bit of creativity, you can turn the complexity of the filesystem
    into a well-organized collection of files and directories at your command.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 精通Bash文件和目录管理将使你具备高效浏览文件系统、操作文件和目录、通过权限控制访问以及自动化日常任务的技能。这些能力对于任何希望充分发挥Linux或Unix系统功能的人来说都是必不可少的。通过实践、耐心和一些创造力，你可以将复杂的文件系统转变为你指挥的井然有序的文件和目录集合。
- en: By the end of this chapter, you will become skilled at creating, deleting, copying,
    and moving files. You will understand the significance of absolute and relative
    paths. This will also include an introduction to directory structures and how
    to efficiently navigate the filesystem in a Bash environment. You’ll grasp the
    concept of user and group permissions in a Linux environment. You’ll learn the
    difference between hard links and **symbolic links** ( **symlinks** or soft links),
    how to create them, and scenarios where each type of link is useful.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将掌握创建、删除、复制和移动文件的技能。你将理解绝对路径和相对路径的重要性。这也将包括对目录结构的介绍，以及如何在Bash环境中高效地导航文件系统。你将掌握Linux环境中用户和组权限的概念。你将学习硬链接和**符号链接**（**symlink**或软链接）之间的区别，如何创建它们，以及在何种场景下每种链接类型最为有用。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Working with files and directories
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件和目录的操作
- en: Directory navigation and manipulation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目录导航与操作
- en: File permissions and ownership
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件权限和所有权
- en: Linking files—hard links and symlinks
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件链接—硬链接和符号链接
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Access to a Linux system with a Bash shell is required to follow along. All
    commands used in this chapter can be found in the GitHub code repository located
    at [https://github.com/PacktPublishing/Bash-Shell-Scripting-for-Pentesters/tree/main/Chapter02](https://github.com/PacktPublishing/Bash-Shell-Scripting-for-Pentesters/tree/main/Chapter02)
    .
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 跟随本章的内容需要访问具有Bash Shell的Linux系统。本章使用的所有命令都可以在GitHub代码库中找到，链接为[https://github.com/PacktPublishing/Bash-Shell-Scripting-for-Pentesters/tree/main/Chapter02](https://github.com/PacktPublishing/Bash-Shell-Scripting-for-Pentesters/tree/main/Chapter02)。
- en: Working with files and directories
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件和目录的操作
- en: In this section, we’ll cover commands for working with files and directories
    and how to navigate the filesystem. We’ll start with the **ls** command, which
    is used to list files, directories, and their permissions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍用于处理文件和目录的命令以及如何浏览文件系统。我们将从**ls**命令开始，它用于列出文件、目录及其权限。
- en: The **ls** command in Bash is like the Swiss Army knife for listing directory
    contents. It’s simple yet packed with options to customize the output to your
    needs. Let’s dive into how you can use **ls** to make your life at the terminal
    easier and more productive.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Bash中的**ls**命令就像是列出目录内容的瑞士军刀。它简单却充满了选项，能够根据你的需要定制输出。让我们深入了解如何使用**ls**让你的终端使用更加高效和便捷。
- en: 'At its most basic, **ls** will list the files and directories in your current
    directory using the following command:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的**ls**命令会列出当前目录中的文件和目录，使用如下命令：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This will display all non-hidden files and directories. Hidden files (those
    starting with a dot) won’t show up. To see hidden files as well, use the **-a**
    option to get the following output:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示所有非隐藏文件和目录。隐藏文件（以点开头的文件）不会显示出来。若要查看隐藏文件，请使用**-a**选项，得到以下输出：
- en: '![Figure 2.1 – Hidden files are shown when using the -a option with the ls
    command](image/B22229_02_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1 – 使用-a选项与ls命令时，隐藏文件会显示出来](image/B22229_02_01.jpg)'
- en: Figure 2.1 – Hidden files are shown when using the -a option with the ls command
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1 – 使用-a选项与ls命令时，隐藏文件会显示出来
- en: Now, you’ll see everything, including files such as **.bashrc** .
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你将看到所有内容，包括如**.bashrc**这样的文件。
- en: 'If you want to view a listing of files and directories in a location different
    from the current directory, add the directory location to the end of the **ls**
    command as shown next:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看与当前目录不同位置的文件和目录列表，请将目录位置添加到**ls**命令的末尾，如下所示：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In a shell command such as **ls *.txt** , the asterisk ( ***** ) is referred
    to as a **glob** character. The ***** character matches any sequence of characters,
    so this command lists all files in the current directory that have a **.txt**
    extension. You could also use the glob character to list all files that start
    with a specified string and end with any character or series of characters using
    the **ls** **sometext*** command.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在像**ls *.txt**这样的Shell命令中，星号（*****）被称为**glob**字符。*****字符匹配任何字符序列，因此该命令列出了当前目录下所有扩展名为**.txt**的文件。你也可以使用glob字符列出所有以指定字符串开头，后跟任意字符或字符序列的文件，方法是使用**ls
    sometext***命令。
- en: 'Use the **-l** option for more details, such as file permissions, number of
    links, owner, group, size, and timestamp:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**-l**选项获取更多详细信息，例如文件权限、链接数、所有者、组、大小和时间戳：
- en: '![Figure 2.2 – Extended file and directory information is displayed using the
    ls command -l option](image/B22229_02_02.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – 使用ls命令的-l选项显示扩展的文件和目录信息](image/B22229_02_02.jpg)'
- en: Figure 2.2 – Extended file and directory information is displayed using the
    ls command -l option
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 使用ls命令的-l选项显示扩展的文件和目录信息
- en: This long format is incredibly useful for getting a quick overview of the filesystem’s
    state.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这种长格式对于快速概览文件系统状态非常有用。
- en: 'When using **-l** , file sizes are listed in bytes by default. Add the **-h**
    option to make sizes more readable (for example, KB, MB). This makes it easier
    to gauge file sizes at a glance:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**-l**时，默认按字节列出文件大小。添加**-h**选项可以使文件大小更加易读（例如，KB，MB）。这样可以让你一目了然地判断文件的大小：
- en: '![Figure 2.3 – The ls command -h option displays file sizes in a human-readable
    format](image/B22229_02_03.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – ls命令的-h选项以人类可读的格式显示文件大小](image/B22229_02_03.jpg)'
- en: Figure 2.3 – The ls command -h option displays file sizes in a human-readable
    format
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – ls命令的-h选项以人类可读的格式显示文件大小
- en: 'To see the most recently modified files at the top, use the **-t** option.
    To sort the output of **ls -t** in reverse, include the **-r** option. Combine
    this with **-h** to get a detailed, human-readable list of files sorted by modification
    time, as shown in the following figure:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 若要将最近修改的文件显示在最上面，可以使用**-t**选项。要将**ls -t**的输出按逆序排列，可以加入**-r**选项。将此与**-h**选项结合使用，可以获得按修改时间排序的详细且易读的文件列表，如下图所示：
- en: '![Figure 2.4 – The ls command options show how to sort based on file modification
    time](image/B22229_02_04.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – ls命令选项显示如何根据文件修改时间进行排序](image/B22229_02_04.jpg)'
- en: Figure 2.4 – The ls command options show how to sort based on file modification
    time
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – ls命令选项显示如何根据文件修改时间进行排序
- en: 'Sorting files by size can quickly show you the largest or smallest files in
    a directory. The following command will sort the output of **ls** based on file
    size:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 按文件大小排序可以快速显示目录中最大或最小的文件。以下命令将按文件大小排序**ls**的输出：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tip
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Sometimes, you want to see not just the contents of the current directory but
    all subdirectories as well. Use **-R** to show the contents of all subdirectories
    recursively.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你不仅想查看当前目录的内容，还想查看所有子目录的内容。使用**-R**选项可以递归显示所有子目录的内容。
- en: Some common actions you may want to take on a file or directory besides listing
    them with the **ls** command include making, copying, and deleting them.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用**ls**命令列出文件或目录外，还有一些常见操作你可能需要对文件或目录进行，例如创建、复制和删除它们。
- en: You can make a new file or directory with the **touch** and **mkdir** commands,
    respectively.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以分别使用**touch**和**mkdir**命令创建新文件或目录。
- en: 'Make a new empty file, as shown next, using the **touch** command:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**touch**命令创建一个新的空文件，如下所示：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Make a new directory, as shown, using the **mkdir** command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**mkdir**命令创建一个新目录，如下所示：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you want to create multiple nested directories in a path, include the **-p**
    option. For example, suppose you want to create a new directory named **first**
    , and inside of **first** , you want to create a **second** directory. The following
    example creates this new directory structure:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在路径中创建多个嵌套的目录，请包含**-p**选项。例如，假设你想创建一个名为**first**的新目录，并且在**first**目录中创建一个**second**目录。以下示例将创建这个新的目录结构：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can copy files and directories using the **cp** command. The syntax of
    the **cp** command is shown here:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用**cp**命令复制文件和目录。**cp**命令的语法如下所示：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To delete a file, use the **rm** command. Be careful with this command because
    deletions cannot be recovered. If you’re deleting a directory, include the **-r**
    option to recursively delete files and directories contained in the directory.
    The following command demonstrates how to delete a file using **rm** :'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除文件，请使用**rm**命令。请注意此命令，因为删除操作无法恢复。如果要删除目录，请包括**-r**选项以递归删除目录中包含的文件和子目录。以下命令演示了如何使用**rm**删除文件：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now that you’ve learned how to list, create, and delete files, it’s time to
    move on to learning how to navigate your filesystem in the next section.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经学会了如何列出、创建和删除文件，是时候进入下一节学习如何在文件系统中导航了。
- en: Directory navigation and manipulation
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录导航和操作
- en: In this section, you’ll learn the layout of the Linux filesystem directories,
    the purpose of common directories, and how to navigate your way around the system.
    By the end of this section, you should be comfortable with the location and design
    decisions of the filesystem and will be using common Bash commands to navigate
    it like a pro.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习Linux文件系统目录的布局，常见目录的用途以及如何在系统中导航。到本节结束时，您应该对文件系统的位置和设计决策感到满意，并将使用常见的Bash命令像专家一样导航它。
- en: Filesystem design and hierarchy
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件系统设计和层次结构
- en: At the heart of Bash file management is an understanding of the filesystem hierarchy.
    Here, we’ll review the various filesystem directories and their purpose. We’ll
    also review particular directories of interest to pentest. This will enable you
    to be confident as you navigate your filesystem.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Bash文件管理的核心是理解文件系统层次结构。在这里，我们将回顾各种文件系统目录及其用途。我们还将回顾对渗透测试感兴趣的特定目录。这将使您在导航文件系统时感到自信。
- en: Imagine the filesystem as a tree with branches spreading out from the trunk.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 想象文件系统是一棵树，从树干上延伸出分支。
- en: 'Using the **tree** command, you can find a high-level overview of the filesystem,
    as shown in the following figure:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**tree**命令，您可以找到文件系统的高级概览，如下图所示：
- en: '![Figure 2.5 – An overview of the filesystem hierarchy](image/B22229_02_05.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5 – 文件系统层次结构概览](image/B22229_02_05.jpg)'
- en: Figure 2.5 – An overview of the filesystem hierarchy
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5 – 文件系统层次结构概览
- en: 'Let’s understand the elements of this high-level overview as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照以下方式理解这个高级概览的要素：
- en: '**/** : At the root of this structure lies the **/** directory, known simply
    as the root. This is the starting point: the base from which everything else extends.
    Imagine it as a tree trunk from which all other paths diverge. The following figure
    demonstrates running the **tree** command without specifying the number of levels
    to show the full layout of the filesystem:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/**：在这个结构的根部是**/**目录，简称为根目录。这是起点：一切都从这里延伸出去。想象它是一棵树干，其他所有路径都从这里分叉。以下图演示了运行**tree**命令而不指定要显示的级别数量以展示文件系统的完整布局：'
- en: '![Figure 2.6 – A deeper understanding of the directory structure as a tree
    is discovered](image/B22229_02_06.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图2.6 – 发现树形目录结构的更深入理解](image/B22229_02_06.jpg)'
- en: Figure 2.6 – A deeper understanding of the directory structure as a tree is
    discovered
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6 – 发现目录结构的树的更深入理解
- en: '**/bin** : Directly under the root, you’ll find **/bin** , a directory filled
    with essential user binaries or programs. These are the tools every user has access
    to and are necessary for daily operations.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/bin**：直接在根目录下，您会找到**/bin**，一个充满了基本用户二进制文件或程序的目录。这些是每个用户都可以访问的工具，对于日常操作是必需的。'
- en: '**/boot** : The **/boot** directory contains files required for booting the
    system, such as the Linux kernel and initial RAM disk ( **initrd** ) files.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/boot**：**/boot**目录包含启动系统所需的文件，如Linux内核和初始RAM磁盘（**initrd**）文件。'
- en: '**/dev** : The **/dev** directory contains device files that represent hardware
    devices and special files.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/dev**：**/dev**目录包含代表硬件设备和特殊文件的设备文件。'
- en: '**/etc** : The **/etc** directory contains many configuration files that are
    critical to the operation of the system. As a pentest, you may be interested in
    certain files and directories within **/etc** . Here are some of the most notable
    ones:'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc**：**/etc**目录包含许多对系统操作至关重要的配置文件。作为渗透测试，您可能对**/etc**目录中的某些文件和目录感兴趣。以下是一些最显著的文件：'
- en: '**/etc/passwd** : This file contains essential information about users on the
    system, such as user IDs, group IDs, home directories, and shells.'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/passwd**：此文件包含有关系统上用户的基本信息，如用户ID、组ID、主目录和shell。'
- en: '**/etc/group** : This file contains a list of groups on the system, along with
    their group IDs and member usernames.'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/group** : 该文件包含系统中所有组的列表，及其组 ID 和成员用户名。'
- en: '**/etc/shadow** : This file stores password information for users, including
    hashed passwords and account expiration dates.'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/shadow** : 该文件存储用户的密码信息，包括哈希后的密码和账户过期日期。'
- en: '**/etc/sudoers** : This file contains a list of users and groups that are allowed
    to use the **sudo** command to execute commands with elevated privileges.'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/sudoers** : 该文件包含允许使用**sudo**命令的用户和组的列表，以便以提升权限执行命令。'
- en: '**/etc/sysconfig** : This directory contains configuration files for various
    system services and applications, such as network settings, display manager configurations,
    and firewall rules.'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/sysconfig** : 该目录包含各种系统服务和应用程序的配置文件，例如网络设置、显示管理器配置和防火墙规则。'
- en: '**/etc/network** : This directory contains configuration files for network
    interfaces, including IP addresses, subnet masks, and **Domain Name System** (
    **DNS** ) server settings.'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/network** : 该目录包含网络接口的配置文件，包括 IP 地址、子网掩码和**域名系统**(**DNS**)服务器设置。'
- en: '**/etc/hosts** : This file maps hostnames to IP addresses, allowing the system
    to resolve hostnames to IP addresses without relying on DNS servers.'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/hosts** : 该文件将主机名映射到 IP 地址，允许系统在不依赖 DNS 服务器的情况下解析主机名为 IP 地址。'
- en: '**/etc/services** : This file lists services that are available on the system,
    along with their port numbers and protocols.'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/services** : 该文件列出了系统上可用的服务，及其端口号和协议。'
- en: '**/etc/protocols** : This file lists network protocols that are supported by
    the system, along with their version numbers and other configuration details.'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/protocols** : 该文件列出了系统支持的网络协议，包括其版本号和其他配置信息。'
- en: '**/etc/fstab** : This file contains information about filesystems that are
    mounted on the system, including mount points, filesystem types, and options.'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/etc/fstab** : 该文件包含关于系统上已挂载文件系统的信息，包括挂载点、文件系统类型和选项。'
- en: '**/home** : User-specific data resides in **/home** , a collection of personal
    spaces within the filesystem. Each user’s directory is like their home, storing
    personal files and settings.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/home** : 用户特定的数据存储在**/home**中，这是文件系统内的一组个人空间。每个用户的目录就像他们的家，存储个人文件和设置。'
- en: '**/lib** : System libraries, the shared resources that programs need to run,
    are kept in **/lib** .'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/lib** : 系统库，即程序运行所需的共享资源，存储在**/lib**中。'
- en: '**/mnt** : For mounting external devices or filesystems, there are **/mnt**
    and **/media** . These act as docks for external filesystems.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/mnt** : 用于挂载外部设备或文件系统的有**/mnt**和**/media**。它们作为外部文件系统的停靠点。'
- en: '**/opt** : Optional or third-party software is stored in **/opt** . It’s common
    for pentesters to clone **git** repositories to their own directory under **/opt**
    to run tools that aren’t installed in the usual **/** **bin** directories.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/opt** : 可选或第三方软件存储在**/opt**。渗透测试人员常常将**git**仓库克隆到**/opt**下的自定义目录，以运行那些没有安装在常规**/****bin**目录下的工具。'
- en: '**/proc** : The **/proc** directory stores information about running processes.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/proc** : **/proc**目录存储关于正在运行的进程的信息。'
- en: '**/root** : The home directory of the root user is located at **/root** . Because
    root is the superuser, its files are stored separately from other users found
    under **/home** .'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/root** : 根用户的主目录位于**/root**。由于 root 是超级用户，其文件存储在与其他用户（位于**/home**下）不同的地方。'
- en: '**/run** : The **/run** directory is a temporary filesystem that stores transient
    information since the last boot.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/run** : **/run**目录是一个临时文件系统，用于存储自上次启动以来的瞬态信息。'
- en: '**/sbin** : Adjacent to **/bin** is **/sbin** , housing system binaries. These
    are utilities typically reserved for the system administrator.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/sbin** : 紧邻**/bin**的是**/sbin**，用于存放系统二进制文件。这些通常是仅供系统管理员使用的工具。'
- en: '**/srv** : The **/srv** directory stores data used by system services.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/srv** : **/srv**目录存储系统服务使用的数据。'
- en: '**/sys** : The **/sys** directory provides an interface to kernel objects and
    their attributes.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/sys** : **/sys**目录提供了一个与内核对象及其属性交互的接口。'
- en: '**/tmp** : The **/tmp** directory stores temporary files that are removed on
    system reboot.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/tmp** : **/tmp**目录存储临时文件，这些文件在系统重启时会被删除。'
- en: '**/usr** : The **/usr** directory is a broader collection of user binaries,
    libraries, documentation, and more. It’s like a city’s commercial district, offering
    a wide array of services beyond the essentials found in **/bin** and **/lib**
    .'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/usr**：**/usr**目录是一个更广泛的集合，包含用户二进制文件、库文件、文档等。它就像城市的商业区，提供了超出**/bin**和**/lib**中基本功能之外的各种服务。'
- en: '**/var** : The **/var** directory on a Linux system is a key component of the
    filesystem hierarchy, with its primary purpose being to store variable data, files,
    and directories expected to grow in size over time. This can include logs, spool
    files, temporary files, and other types of transient or dynamic data that change
    or expand as the system operates. The structure and contents of the **/var** directory
    are designed to accommodate the storage of variable data across system reboots,
    ensuring that data persists between sessions. Here are some significant subdirectories
    within **/var** and their typical uses:'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/var**：在Linux系统中，**/var**目录是文件系统层级中的关键组成部分，其主要目的是存储预期会随着时间增长的可变数据、文件和目录。这些数据可能包括日志文件、队列文件、临时文件以及其他随着系统操作而变化或扩展的瞬态或动态数据。**/var**目录的结构和内容旨在支持跨系统重启存储可变数据，确保数据在会话之间持久存在。以下是**/var**目录中的一些重要子目录及其典型用途：'
- en: '**/var/log** : Contains log files generated by the system and various applications
    running on it. These logs can include system logs, application logs, and logs
    of system events, which are crucial for troubleshooting and monitoring system
    health.'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/var/log**：包含系统和运行在系统上的各种应用程序生成的日志文件。这些日志包括系统日志、应用日志和系统事件日志，对于故障排除和监控系统健康状况至关重要。'
- en: '**/var/spool** : Used for queuing up tasks and data, such as print jobs, mail,
    and other queued tasks. This area is designed to hold data that is awaiting processing
    by some service or application.'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/var/spool**：用于排队任务和数据，如打印作业、邮件和其他排队任务。该区域旨在存放等待由某些服务或应用程序处理的数据。'
- en: '**/var/tmp** : Intended for temporary files that are preserved between system
    reboots. Unlike **/tmp** , which may also store temporary files, **/var/tmp**
    is not meant to be deleted or cleared at reboot.'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/var/tmp**：用于存储在系统重启之间保持的临时文件。与**/tmp**不同，后者也可能存储临时文件，但**/var/tmp**不会在重启时被删除或清除。'
- en: '**/var/cache** : Stores cached data from applications. This data can be regenerated
    as needed, but it’s stored to improve performance by reducing the need to recalculate
    or fetch the same data repeatedly.'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/var/cache**：存储应用程序的缓存数据。虽然这些数据可以根据需要重新生成，但它们的存储目的是通过减少重新计算或重复获取相同数据来提高性能。'
- en: '**/var/mail** : Holds users’ email messages in some configurations. This directory
    is essential for systems that handle on-site mail storage.'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/var/mail**：在某些配置中存放用户的电子邮件信息。这个目录对于处理本地邮件存储的系统至关重要。'
- en: '**/var/www** : Commonly used as the default directory for web server content.
    This includes websites hosted on the server, and it’s a standard location for
    web files in many Linux distributions.'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/var/www**：通常用作Web服务器内容的默认目录。它包括托管在服务器上的网站，也是许多Linux发行版中存放Web文件的标准位置。'
- en: '**/var/lib** : Contains dynamic state information that programs typically modify
    while they run. This can include databases, application state files, and other
    data that applications need to store and manage during operation.'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/var/lib**：包含程序在运行时通常会修改的动态状态信息。这些信息可以包括数据库、应用程序状态文件和其他应用程序在操作过程中需要存储和管理的数据。'
- en: 'You can read the documentation of the Linux filesystem hierarchy by entering
    the **hier** command as shown next:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过输入**hier**命令来查看Linux文件系统层级的文档，示例如下：
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Tip
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The **man** command is short for manual. Remember to use **man** when you need
    to discover options and conventions required by a command.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**man**命令是manual（手册）的缩写。当你需要了解命令所需的选项和惯例时，记得使用**man**命令。'
- en: 'Although the current working directory may be displayed in the Bash shell prompt,
    you can print the current directory using the **pwd** command as shown here:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管当前工作目录可能会显示在Bash提示符中，你也可以使用**pwd**命令打印当前目录，示例如下：
- en: '[PRE9]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now that you’ve discovered the filesystem layout and understand its hierarchy
    and design, let’s move on to find out how to navigate it in the next section.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了文件系统的布局，并理解了其层级结构和设计，接下来我们将进入下一部分，了解如何在文件系统中进行导航。
- en: Filesystem navigation commands
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件系统导航命令
- en: 'Navigating the filesystem can be done using various tools and techniques. The
    most common way is to use the **command-line interface** ( **CLI** ) and navigate
    through directories using the **cd** command. For example, to change to the **/home**
    directory, you would type the following:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览文件系统可以使用各种工具和技术。最常见的方法是使用**命令行界面**（**CLI**）并通过**cd**命令在目录之间切换。例如，要切换到**/home**目录，你可以输入以下命令：
- en: '[PRE10]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Previously, we mentioned how the tilde ( **~** ) character is a shortcut to
    typing the full path to the user directory, so you could also navigate to your
    home directory by using the tilde after the **cd** command, as shown here:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 之前我们提到过，波浪号（**~**）字符是一个快捷方式，用于输入用户目录的完整路径，因此你也可以在**cd**命令后使用波浪号跳转到主目录，如下所示：
- en: '[PRE11]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: If you have tab completion configured in your profile, you can also use the
    tab key to autocomplete directory names as you type, making it easier to navigate
    the filesystem.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在个人配置文件中启用了标签补全，你可以使用 Tab 键在输入时自动完成目录名称，从而更容易地浏览文件系统。
- en: 'In addition to **cd** , the Bash shell provides several commands to navigate
    through directories, including **pushd** and **popd** . These two commands are
    like a trail of breadcrumbs left in the wilderness, helping you track where you’ve
    been so that you can easily return. When you **pushd** into a directory, Bash
    remembers your current location before moving you to the new one. Need to get
    back? Just **popd** , and you’re returned to your previous directory. It’s like
    having a teleportation device in your command-line toolkit. The following command
    output demonstrates the use of the **pushd** and **popd** commands to navigate
    the filesystem:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 除了**cd**命令，Bash Shell 还提供了若干命令用于浏览目录，包括**pushd**和**popd**。这两个命令就像在荒野中留下的面包屑轨迹，帮助你跟踪你去过的地方，从而轻松返回。当你**pushd**进入一个目录时，Bash
    会记住你当前的位置，然后再将你带到新目录。需要返回吗？只需**popd**，你就会回到上一个目录。这就像在命令行工具箱中拥有一个瞬移设备。下面的命令输出展示了如何使用**pushd**和**popd**命令来浏览文件系统：
- en: '[PRE12]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This would be a good time to mention **absolute** versus **relative** paths.
    An absolute path is the full path, starting from the root ( **/** ) of the drive.
    An absolute path to a file in your home directory would be **/home/user/filename**
    . The relative path would be in relation to the directory you’re currently in.
    The current directory is represented by a period and slash ( **./** ). One directory
    up in the hierarchy is represented by **../** . Two levels up would be **../../**
    , and so on. To go down into a subdirectory from where you are now, you’d simply
    use the directory name. For example, to reference a file two directories down
    from the current directory, this would be **directory1/directory2/filename** .
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是提到**绝对路径**与**相对路径**的好时机。绝对路径是从驱动器的根目录（**/**）开始的完整路径。指向你主目录中文件的绝对路径是**/home/user/filename**。相对路径是相对于你当前所在目录的路径。当前目录由一个点和斜杠（**./**）表示。目录结构中上一级由**../**表示。上两级则是**../../**，以此类推。如果你想从当前目录进入子目录，只需使用目录名。例如，要引用当前目录下两级目录的文件，路径是**directory1/directory2/filename**。
- en: 'Now, imagine you’re working deep within a directory tree and need to jump back
    several levels. Typing **cd ../../..** is not only tedious but also prone to error.
    Enter the **cd -** command, a simple yet powerful shortcut that instantly takes
    you back to the last directory you were in. It’s like having an undo button for
    your navigation mistakes. Here, we see how it works and takes us back to where
    we came from:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设你正在一个深层的目录树中工作，并且需要返回多个层级。输入**cd ../../..**不仅麻烦，而且容易出错。这时，**cd -**命令登场了，它是一个简单而强大的快捷方式，可以立即将你带回上一个目录。就像拥有一个撤销按钮来修正导航错误。这里我们可以看到它是如何工作的，并将我们带回到之前的位置：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: But what if you could jump to frequently used directories without remembering
    their paths? That’s where aliases come into play. By adding lines such as **alias
    docs='cd /home/user/documents'** to your **.bashrc** file, you create shortcuts
    for those long-winded paths. Suddenly, moving to your **documents** folder is
    as easy as typing **docs** . It’s like setting up personal shortcuts in a vast
    city.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 那如果你能在不记住路径的情况下跳转到常用的目录呢？这时别名就派上用场了。通过在**.bashrc**文件中添加像**alias docs='cd /home/user/documents'**这样的行，你可以为那些长路径创建快捷方式。突然之间，进入**documents**文件夹就像输入**docs**一样简单。这就像在庞大的城市中设置个人快捷方式一样。
- en: For those who love efficiency, the *Ctrl* + *R* reverse search functionality
    is a game-changer. Press these keys and start typing part of a previously used
    command. Bash will search through your history and suggest commands that match.
    It’s like having a search engine for your command history, saving you from retyping
    long commands.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些热衷于提高效率的人来说，*Ctrl* + *R* 反向搜索功能简直是游戏规则改变者。按下这些键并开始输入之前使用过的命令的一部分，Bash 会在你的历史记录中搜索并建议匹配的命令。就像为你的命令历史提供了一个搜索引擎，省去了重新输入长命令的麻烦。
- en: Lastly, let’s not forget about tab completion, a feature that feels almost magical.
    Start typing the name of a directory or file and hit the *Tab* key. Bash will
    either autocomplete it for you or show you the possible completions if there’s
    more than one match. It’s similar to having a personal assistant who finishes
    your sentences but for directory navigation.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，别忘了自动补全功能，这是一个几乎神奇的特性。开始输入目录或文件的名称并按下 *Tab* 键，Bash 会为你自动完成，或者如果有多个匹配项，它会显示可用的补全项。这就像是拥有一个私人助手为你完成句子，但它是用于目录导航的。
- en: In conclusion, mastering these advanced Bash navigation tips and tricks can
    transform your command-line experience from frustrating to fluid. Whether it’s
    jumping back and forth between directories with **pushd** and **popd** , creating
    shortcuts with aliases, or leveraging the power of reverse search and tab completion,
    these techniques are all about making your life easier. So, next time you open
    the terminal, remember these tricks and watch how quickly you can move through
    your filesystem.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，掌握这些高级的 Bash 导航技巧可以将你的命令行体验从令人沮丧转变为流畅高效。无论是通过 **pushd** 和 **popd** 在目录间跳转，使用别名创建快捷方式，还是利用反向搜索和自动补全的功能，这些技巧都旨在让你的工作更加轻松。所以下次打开终端时，记得运用这些技巧，看看你如何快速穿越文件系统。
- en: By now, you should have a firm grasp of the filesystem layout and be confident
    as you navigate around the system. Next, we’ll explore filesystem permissions.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，你应该已经对文件系统布局有了清晰的了解，并且在系统中游刃有余。接下来，我们将探索文件系统的权限。
- en: File permissions and ownership
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件权限与所有权
- en: Earlier in this chapter, you may have noticed a string that looked similar to
    **drwxr-xr-x** in the output of the **ls -l** command. This represents the permissions
    of a file or directory. Linux filesystem permissions are like the rules at a playground.
    They determine who can play on the swings (access files), who can invite friends
    to play (change permissions), and who can set rules (ownership). Understanding
    these permissions is crucial for anyone looking to manage a Linux system effectively.
    Let’s break it down into simple terms, including the use of **chown** , **chmod**
    , **SUID** , and **SGID** .
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章早些时候，你可能注意到 **ls -l** 命令的输出中出现过类似 **drwxr-xr-x** 的字符串。这表示文件或目录的权限。Linux 文件系统的权限就像游乐场的规则。它们决定了谁可以玩秋千（访问文件），谁可以邀请朋友一起玩（更改权限），以及谁可以制定规则（所有权）。理解这些权限对于任何想要有效管理
    Linux 系统的人来说至关重要。我们将用简单的术语来讲解，包括 **chown**、**chmod**、**SUID** 和 **SGID** 的使用。
- en: Ownership and groups
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 所有权与用户组
- en: 'Every file and directory in Linux has an owner and a group associated with
    it. Think of the owner as the parent who has control over their child’s toy and
    the group as selected friends who can play with it under certain conditions. The
    following description may help:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 中的每个文件和目录都有一个与之关联的所有者和用户组。可以将所有者看作是对孩子的玩具拥有控制权的父母，而用户组则是可以在特定条件下与其一起玩耍的朋友。以下描述可能有助于理解：
- en: '**Owner** : The user who has control over the file or directory'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**所有者**：拥有文件或目录控制权的用户'
- en: '**Group** : A set of users who share certain permissions'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户组**：一组共享某些权限的用户'
- en: Changing ownership – chown
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改所有权 – chown
- en: 'To change who owns a file or directory, we use the **chown** command (this
    may require prefixing the command with **sudo** ):'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改文件或目录的所有者，我们使用 **chown** 命令（这可能需要在命令前加上 **sudo** 前缀）：
- en: '[PRE14]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This command changes both the owner and the group of the file. If you want
    to change just the owner or the group, you can omit the group in the command.
    However, if you omit the user, the group must be preceded with a colon character.
    The following command demonstrates how to change only the group ownership of a
    file:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令同时更改文件的所有者和用户组。如果你只想更改所有者或用户组，可以省略命令中的用户组。但是，如果省略了用户，则用户组必须以冒号（:）符号作为前缀。以下命令演示了如何仅更改文件的用户组所有权：
- en: '[PRE15]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: That would leave the owner intact but change the group on the file or directory
    permissions.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这将保留所有者不变，但会更改文件或目录的用户组权限。
- en: 'If you have a file and want to apply the same permissions used on a reference
    file, include the **--reference** parameter, as shown here:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个文件，并且想要应用在参考文件上使用的相同权限，包括**--reference**参数，如下所示：
- en: '[PRE16]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'There are two common **chown** options that you should be familiar with:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个常见的**chown**选项，你应该熟悉：
- en: '**-h** : Affect symlinks instead of any referenced file'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-h**：影响符号链接而不是任何引用文件'
- en: '**-R** : Operate on files and directories recursively'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-R**：递归地操作文件和目录'
- en: Having learned to use **chown** to change file ownership, in the next section,
    you’ll learn how to modify permissions using **chmod** .
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在学会使用**chown**更改文件所有权后，在下一节中，您将学习如何使用**chmod**修改权限。
- en: Modifying permissions – chmod
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改权限 – chmod
- en: 'Permissions determine what actions can be performed on a file or directory.
    There are three types of permissions:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 权限确定文件或目录上可以执行哪些操作。有三种类型的权限：
- en: '**Read** ( **r** ): View the contents of a file or directory'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**读取**（ **r** ）：查看文件或目录的内容'
- en: '**Write** ( **w** ): Modify the contents of a file or directory'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**写入**（ **w** ）：修改文件或目录的内容'
- en: '**Execute** ( **x** ): Run a file as a program or access a directory'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行**（ **x** ）：将文件作为程序运行或访问目录'
- en: 'Permissions are set for three categories of users:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 权限设置给三类用户：
- en: Owner
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有者
- en: Group
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组
- en: Others
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他
- en: 'You can enumerate the permissions on a file or directory using the **ls -l**
    command. The following command output demonstrates how to list file permissions
    using **ls** :'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用**ls -l**命令列举文件或目录的权限。以下命令输出演示了如何使用**ls**列出文件权限：
- en: '[PRE17]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The permissions shown previously indicate the following details:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 先前显示的权限指示以下细节：
- en: The first character is **-** , meaning it is a file. A directory would be represented
    by **d** .
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个字符是**-**，表示这是一个文件。目录将被表示为**d**。
- en: After the initial **–** character indicating a file, the next three characters
    represent the user permissions ( **steve** ). This is who owns the file. These
    characters are **rw-** , which translates to the file owner who has read and write
    permissions, but the file is not executable.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在初始的**–**字符表示文件后，接下来的三个字符表示用户权限（ **steve** ）。这是文件的所有者。这些字符是**rw-**，这意味着文件所有者具有读取和写入权限，但文件不可执行。
- en: The next three characters represent the group ( **steve** ). The permissions
    are **r--** , which means that the **steve** group can read the file but can’t
    write to it and can’t execute it.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来的三个字符代表组（ **steve** ）。权限是**r--**，这意味着**steve**组可以读取文件，但不能写入或执行它。
- en: The last three characters are **r--** . This means that anyone other than the
    owner or group members can read the file but cannot write to it or execute it.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后三个字符是**r--**。这意味着除了所有者或组成员之外的任何人都可以读取文件，但不能写入或执行它。
- en: 'Let’s visualize file permissions to make them easier to understand. The following
    diagram shows how to decipher read, write, and execute permissions and how they
    can be combined:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们可视化文件权限，以便更容易理解。以下图表显示了如何解读读取、写入和执行权限以及它们如何组合：
- en: '![Figure 2.7 – Filesystem permissions broken down by rwx bits](image/B22229_02_07.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.7 – 按 rwx 位拆分的文件系统权限](image/B22229_02_07.jpg)'
- en: Figure 2.7 – Filesystem permissions broken down by rwx bits
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – 按 rwx 位拆分的文件系统权限
- en: 'As stated earlier, the permissions are repeated in three groups of **rwx**
    . As read ( **r** ) = **4** , write ( **w** ) = **2** , and execute ( **x** )
    = **1** , you can add them to represent the permissions with a single number in
    place of three characters. The following diagram shows a numeric representation
    of permissions from each possible combination:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，权限以**rwx**的三组重复。如读取（ **r** ）= **4**，写入（ **w** ）= **2**，执行（ **x** ）= **1**，您可以将它们相加以用一个数字代表权限，而不是三个字符。以下图表显示了每种可能组合的权限的数字表示：
- en: '![Figure 2.8 – Filesystem permissions shown with octal representation](image/B22229_02_08.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.8 – 用八进制表示的文件系统权限](image/B22229_02_08.jpg)'
- en: Figure 2.8 – Filesystem permissions shown with octal representation
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – 用八进制表示的文件系统权限
- en: 'Using **chmod** , we can change these permissions. For example, the following
    command sets permissions to read, write, and execute for the owner and read and
    execute for the group and others:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**chmod**，我们可以更改这些权限。例如，以下命令设置了所有者的读取、写入和执行权限，组和其他用户的读取和执行权限：
- en: '[PRE18]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You can also use **chmod** to modify files symbolically. For example, if you
    wanted to make a file executable, you could use the command as shown:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 **chmod** 以符号方式修改文件。例如，如果你想使一个文件可执行，可以使用如下命令：
- en: '[PRE19]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: After having learned basic file permissions, in the next section, you’ll learn
    some special permissions that have an effect when a user other than the owner
    executes a file.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习了基本的文件权限后，在下一部分，你将学习一些特殊权限，这些权限会在非文件拥有者的用户执行文件时产生影响。
- en: Special permissions – SUID and SGID
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特殊权限 – SUID 和 SGID
- en: '**SUID** (Set User ID) and **SGID** (Set Group ID) are special types of permissions
    that can be set on executable files. They allow users to execute a file with the
    permission of the file’s owner or group, respectively. When an executable with
    **SUID** permission is run, it operates with the privileges of the file owner
    rather than the user who launched it. Similarly, an executable with **SGID** permission
    runs with the privileges of the file’s group owner. This mechanism allows users
    to perform tasks under elevated privileges that are normally restricted. They
    can be briefed as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**SUID**（设置用户ID）和 **SGID**（设置组ID）是可以设置在可执行文件上的特殊权限类型。它们允许用户以文件拥有者或组的权限执行文件。当带有
    **SUID** 权限的可执行文件被运行时，它将以文件拥有者的权限运行，而不是以启动它的用户的权限。同样，带有 **SGID** 权限的可执行文件则以文件组拥有者的权限运行。这种机制允许用户在通常受限的情况下执行需要提升权限的任务。它们可以简要地描述如下：'
- en: '**SUID** : If set on an executable file, users who run this file get the same
    privileges as the owner of the file'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SUID**：如果设置在可执行文件上，运行该文件的用户将获得与文件拥有者相同的权限。'
- en: '**SGID** : Similar to **SUID** but applies to group permissions'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SGID**：与 **SUID** 类似，但应用于组权限。'
- en: 'To set **SUID** using the **chmod** command, you would use the following:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 **chmod** 命令设置 **SUID**，你可以使用以下命令：
- en: '[PRE20]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To set **SGID** using the **chmod** command, you would use the following:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 **chmod** 命令设置 **SGID**，你可以使用以下命令：
- en: '[PRE21]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: From a system security perspective, **SUID** and **SGID** are double-edged swords.
    On the one hand, they’re essential for tasks that require temporary elevation
    of privileges without exposing sensitive credentials. For example, the **passwd**
    command, which allows users to change their passwords, needs access to the system’s
    shadow file—a file regular users can’t touch. With **SUID** permission set on
    **passwd** , users can update their passwords while the command runs with elevated
    privileges necessary to modify the shadow file.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 从系统安全的角度来看，**SUID** 和 **SGID** 是双刃剑。一方面，它们对于需要临时提升权限但不暴露敏感凭证的任务至关重要。例如，**passwd**
    命令允许用户更改密码，它需要访问系统的影子文件，而普通用户无法触及此文件。通过为 **passwd** 设置 **SUID** 权限，用户在运行该命令时可以在拥有足够权限的情况下更新密码，从而修改影子文件。
- en: However, on the other hand, this power can be exploited if not carefully managed.
    Hackers salivate at the prospect of finding executables with **SUID** or **SGID**
    permissions improperly set. Why? Because it opens a door to elevating their privileges
    on a system. Imagine a scenario where a benign-looking executable has **SUID**
    permission and is owned by root. If this executable has any vulnerability, it
    allows arbitrary command execution; a hacker can leverage it to execute commands
    as root, effectively taking over the system.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，另一方面，如果不小心管理，这种权限可以被利用。黑客对发现设置不当的 **SUID** 或 **SGID** 权限的可执行文件垂涎欲滴。为什么？因为它为他们提供了提升系统权限的机会。设想一个场景，其中一个看似无害的可执行文件具有
    **SUID** 权限并且由 root 拥有。如果这个可执行文件存在任何漏洞，它就会允许任意命令执行；黑客可以利用它以 root 权限执行命令，从而控制系统。
- en: Hackers employ various techniques to exploit **SUID** and **SGID** permissions.
    They might scan a system for all files with these permissions set and then attempt
    to exploit vulnerabilities in those files. Another common tactic is binary planting,
    where a hacker replaces or links a legitimate **SUID** / **SGID** file with a
    malicious one, waiting for an unsuspecting user to execute it.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客利用各种技术来利用 **SUID** 和 **SGID** 权限。他们可能会扫描系统中所有设置了这些权限的文件，然后尝试利用这些文件中的漏洞。另一种常见的手段是二进制植入攻击，黑客将一个合法的
    **SUID** / **SGID** 文件替换或链接到一个恶意文件，等待毫无防备的用户执行它。
- en: Protecting against such exploits involves diligent management of **SUID** and
    **SGID** permissions. Regular audits of these permissions can help identify and
    rectify potential vulnerabilities. System administrators should ensure that only
    absolutely necessary files have **SUID** or **SGID** permissions and that these
    files are kept up to date to mitigate known vulnerabilities. Additionally, employing
    **intrusion detection systems** ( **IDSs** ) can help monitor for unusual activity
    related to these permissions.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 防止此类攻击需要认真管理**SUID**和**SGID**权限。定期审计这些权限有助于发现和修复潜在的漏洞。系统管理员应该确保只有绝对必要的文件才具有**SUID**或**SGID**权限，并确保这些文件保持最新，以减轻已知的漏洞。此外，采用**入侵检测系统**（**IDS**）有助于监控与这些权限相关的异常活动。
- en: In conclusion, while **SUID** and **SGID** are indispensable tools in Linux
    for managing privileged operations, they must be handled with care. Their misuse
    or misconfiguration can turn them into weapons in a hacker’s arsenal. By understanding
    their function and potential for abuse, system administrators can better safeguard
    their systems against unauthorized privilege escalation, and you as the pentest
    can understand the intricacies when auditing system security.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，虽然**SUID**和**SGID**是Linux中管理特权操作的不可或缺的工具，但它们必须小心处理。滥用或配置错误可能使它们成为黑客武器。通过理解它们的功能及滥用的潜力，系统管理员可以更好地保护系统免受未授权的特权提升，而你作为渗透测试人员，能在审计系统安全时理解其复杂性。
- en: 'Understanding Linux filesystem permissions is like learning the rules of a
    new game. Once you know who can do what (permissions), who owns what (ownership),
    and how to change these (using **chown** and **chmod** ), you’re well on your
    way to managing your Linux system effectively. Remember: *with great power comes
    great responsibility* . Use these commands wisely to keep your system secure and
    functional.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 理解Linux文件系统权限就像学习一款新游戏的规则。一旦你了解了谁能做什么（权限）、谁拥有什么（所有权），以及如何更改这些（使用**chown**和**chmod**），你就可以有效地管理Linux系统了。记住：*权力越大，责任越大*。明智地使用这些命令，保持系统的安全和功能。
- en: Now that you’ve become a pro at listing and setting filesystem permissions,
    let’s move on to the next section and discover filesystem symlinks.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经掌握了列出和设置文件系统权限的技巧，让我们继续进入下一部分，了解文件系统符号链接。
- en: Linking files – hard links and symlinks
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件链接——硬链接和符号链接
- en: 'A **hard link** is essentially an additional name for an existing file on the
    filesystem. Imagine you have a favorite book in your library. One day, you decide
    it belongs in both the *Classics* and *Favorites* sections. Instead of buying
    a new copy, you simply place another label on the book that leads readers from
    both sections to it. In the world of Linux, creating a hard link means you’re
    adding a new reference to the file, but it’s the same single file on the disk.
    If you delete the original filename, the content remains accessible through the
    hard link. It’s like magic: the book remains on the shelf, even if one of its
    labels is removed.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬链接**本质上是文件系统中现有文件的另一个名字。假设你有一本最爱的书放在书架上。有一天，你决定它应该同时出现在*经典*和*收藏*两个区域。你不需要重新买一本，而是简单地在书上贴上另一个标签，指引读者从这两个区域找到它。在Linux中，创建硬链接意味着你给文件添加了一个新的引用，但磁盘上的文件依然是同一个。如果你删除了原始文件名，内容仍然可以通过硬链接访问。这就像魔法一样：即使删除了其中一个标签，书仍然会留在书架上。'
- en: However, hard links have their limitations. They cannot span across different
    filesystems; a hard link on one drive can’t point to a file on another, and they
    cannot link to directories to prevent potentially creating loops within the filesystem.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，硬链接有其局限性。它们不能跨越不同的文件系统；一个硬链接不能指向另一个驱动器上的文件，而且它们不能链接到目录，以防止可能在文件系统中创建循环。
- en: Enter **symlinks** , which are more flexible and akin to shortcuts. Using our
    library analogy, a symlink would be like placing a note in the *Classics* section
    that directs you to the book’s location in *Favorites* . This note is not the
    book itself but a pointer to where the book can be found. In Linux, a symlink
    is a separate file that points to another file or directory. Unlike hard links,
    if you remove the original file, the symlink breaks because its reference point
    is gone. It’s as if someone took the book out of the library. The note in *Classics*
    now leads to an empty spot on the shelf.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍**符号链接**，它们更具灵活性，类似于快捷方式。用我们图书馆的比喻，符号链接就像是在*经典*区域放置一张指向*收藏夹*区域某本书位置的便条。这张便条本身并不是书，而是指向书本所在位置的指示。在
    Linux 中，符号链接是一个指向另一个文件或目录的独立文件。与硬链接不同，如果你删除原始文件，符号链接会断开，因为它的引用点已经消失了。这就像有人把书从图书馆拿走了，*经典*区域的便条现在指向空的书架位置。
- en: Symlinks shine with their ability to cross filesystem boundaries and link to
    directories, making them incredibly versatile for tasks such as creating accessible
    paths to deeply nested directories or maintaining compatibility between different
    versions of files or programs.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 符号链接以其跨越文件系统边界和链接目录的能力而脱颖而出，使它们在任务中非常灵活，例如创建可访问的路径指向深层嵌套的目录，或保持不同版本文件或程序之间的兼容性。
- en: Why use these links? Efficiency and convenience are the primary reasons. Hard
    links allow you to have multiple access points for a single file without duplicating
    its content, saving space. Symlinks offer a way to create easy-to-navigate structures
    in your filesystem without moving or duplicating files.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么使用这些链接？效率和方便性是主要原因。硬链接让你可以为单个文件提供多个访问点，而不需要复制其内容，从而节省空间。符号链接（symlink）则提供了一种无需移动或复制文件的方式来创建易于导航的文件结构。
- en: In practice, managing these links is straightforward with commands such as **ln**
    for creating both hard links and symlinks ( **ln** for hard links and **ln -s**
    for symlinks) and **ls -l** to view them. The real art comes in knowing when to
    use each type of link. Hard links are great for backup systems or when working
    within a single filesystem where file integrity is crucial. Symlinks are perfect
    for creating flexible paths and shortcuts, especially across different filesystems
    or when linking directories.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，管理这些链接非常简单，使用如**ln**命令来创建硬链接和符号链接（**ln** 用于硬链接，**ln -s** 用于符号链接），而使用**ls
    -l**命令查看它们。真正的艺术在于知道何时使用每种类型的链接。硬链接非常适合备份系统，或者在一个文件系统内工作时，因为它能够确保文件完整性。符号链接则非常适合创建灵活的路径和快捷方式，特别是在跨不同文件系统或者链接目录时。
- en: In conclusion, hard links and symlinks offer creative ways to manage and access
    files, each with its own set of rules and potential uses. Whether you’re optimizing
    your workspace or crafting intricate systems, understanding these links opens
    up a world of possibilities.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，硬链接和符号链接提供了管理和访问文件的创造性方式，各自有不同的规则和潜在用途。无论是优化工作空间还是构建复杂的系统，理解这些链接能为你打开一片新的可能性天地。
- en: Summary
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In conclusion, mastering Bash file and directory management equips you with
    the skills to navigate the filesystem efficiently, manipulate files and directories,
    control access through permissions, and automate routine tasks. These abilities
    are essential for anyone looking to harness the full power of their Linux or Unix
    system. With practice, patience, and a bit of creativity, you can turn the complexity
    of the filesystem into a well-organized collection of files and directories at
    your command. As a pentest, it’s crucial that you understand the complexities
    of the Linux filesystem in order to audit systems and exploit them to demonstrate
    risk.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，掌握 Bash 文件和目录管理技能，可以帮助你高效地浏览文件系统，操作文件和目录，控制访问权限，并自动化常规任务。这些能力对于任何希望充分利用
    Linux 或 Unix 系统的人来说都是必不可少的。通过练习、耐心和一些创造力，你可以将文件系统的复杂性转变为你指挥的一个井然有序的文件和目录集合。作为一名渗透测试人员，了解
    Linux 文件系统的复杂性对于审计系统和利用它们展示风险至关重要。
- en: In the next chapter, you’ll be learning about regular expressions, and soon,
    you’ll be slicing and dicing text and command output like a Samurai wields a sword!
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，你将学习正则表达式，没多久，你将像武士挥剑一样，切割文本和命令输出！
