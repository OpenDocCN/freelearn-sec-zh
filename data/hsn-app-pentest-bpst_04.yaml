- en: Exploring the Stages of an Application Penetration Test
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索应用程序渗透测试的阶段
- en: In this chapter, we are going to understand the stages that are involved in
    the application penetration test and get a wide overview of the Burp Suite tool.
    Based on that knowledge, we are going to enumerate and gather information about
    our target.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解应用程序渗透测试涉及的阶段，并对Burp Suite工具进行广泛概述。基于这些知识，我们将枚举并收集有关我们目标的信息。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Stages of an application penetration test
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序渗透测试的阶段
- en: Getting to know Burp Suite better
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好地了解Burp Suite
- en: Stages of an application pentest
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序渗透测试的阶段
- en: 'It is trivial to understand the stages of an application pentest as it lays
    the groundwork and ensures that the pentester covers all the possible endpoints
    and does an efficient scan. A web application pentest is broadly categorized in
    the following stages:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 理解应用程序渗透测试的阶段是微不足道的，因为它奠定了基础，并确保渗透测试人员覆盖所有可能的端点并进行有效的扫描。Web应用程序渗透测试通常分为以下阶段：
- en: Planning and reconnaissance
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规划和侦察
- en: Client end code analysis
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端端代码分析
- en: Manual testing
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动测试
- en: Automated testing
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化测试
- en: Exploiting discovered issues
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用发现的问题
- en: Digging deep for data exfiltration
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入挖掘数据外泄
- en: Taking shells
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取外壳
- en: Reporting
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告
- en: Among these stages, the planning and reconnaissance stage is the most important
    stage, as there are possibilities that a tester might miss out critical entry
    endpoints into the application, and those areas might go untested. Let's explore
    in a little more detail what happens in ...
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些阶段中，规划和侦察阶段是最重要的阶段，因为测试人员可能会错过应用程序的关键入口端点，并且这些区域可能会未经测试。让我们更详细地探讨一下发生了什么...
- en: Planning and reconnaissance
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规划和侦察
- en: 'In the planning and reconnaissance phase, we define the scope of the penetration
    test. This initial phase requires a lot of planning, and you need to answer questions,
    such as:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在规划和侦察阶段，我们定义了渗透测试的范围。这个初始阶段需要大量的规划，您需要回答诸如：
- en: What is the scope of the pentest?
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渗透测试的范围是什么？
- en: What are the restricted URLs?
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 受限制的URL是什么？
- en: What are the various subdomains in scope?
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围内的各个子域是什么？
- en: Are there multiple applications hosted on the same domain in different folders?
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同一域中是否托管了多个应用程序，位于不同的文件夹中？
- en: Are there any other platforms where this application is hosted (that is, mobile
    applications, web applications, desktop applications, and so on)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此应用程序是否在其他平台上托管（即移动应用程序，Web应用程序，桌面应用程序等）
- en: Once you have answered these questions, you will get some clarity on what is
    to be tested and what's not. Depending on whether it is a black box or a white
    box test, further enumeration takes places. In either of the cases, we will have
    to go ahead and discover all the files and folders of the application in scope
    and identify the endpoints. Later, in the next chapter, we will see how to discover
    new files and folders using Burp.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您回答了这些问题，您将对应该测试什么和不应该测试什么有一些清晰的认识。根据是黑盒还是白盒测试，进一步的枚举将会发生。在任何一种情况下，我们都必须继续并发现范围内应用程序的所有文件和文件夹，并识别端点。稍后，在下一章中，我们将看到如何使用Burp发现新文件和文件夹。
- en: Client-end code analysis
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端端代码分析
- en: Based on the type of test, we can perform code analysis too. For applications
    that are hosted as a part of white box testing, the entire code will be available
    to the tester and he can use custom tools to perform an entire code review and
    find vulnerabilities based on the code logic. Let's say it is a black box and
    code analysis needs to be done. Given a black box scenario, the only code analysis
    that would happen is the client-end code and the JavaScript library references.
    Based on the analysis, a tester can bypass certain validation logic implemented
    by these scripts and enable us to perform certain attacks.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 根据测试类型，我们也可以进行代码分析。对于作为白盒测试一部分托管的应用程序，整个代码将对测试人员可用，并且他可以使用自定义工具执行整个代码审查，并根据代码逻辑找到漏洞。假设它是黑盒，并且需要进行代码分析。在黑盒情况下，唯一进行的代码分析是客户端端代码和JavaScript库引用。根据分析，测试人员可以绕过这些脚本实施的某些验证逻辑，并使我们能够执行某些攻击。
- en: In the next chapter, we will be talking in detail about how we can bypass client-side
    logic by code manipulation. ...
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将详细讨论如何通过代码操纵绕过客户端逻辑。...
- en: Manual testing
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动测试
- en: 'This is the stage where the tester''s presence of mind helps him find various
    vulnerabilities in the application. In this phase, the attacker manually tests
    for flaws by fuzzing different input fields and checking the application response.
    There are times where a scanner will not be able to find certain vulnerabilities
    and user intervention is much needed, and this is where manual testing prospers.
    Certain vulnerabilities tend to be missed out by automated scanners, such as :'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这是测试人员的头脑存在帮助他发现应用程序中各种漏洞的阶段。在这个阶段，攻击者通过模糊不同的输入字段并检查应用程序响应来手动测试漏洞。有时扫描程序无法找到某些漏洞，用户干预是非常必要的，这就是手动测试取得成功的地方。某些漏洞往往会被自动扫描器忽略，例如：
- en: Various business logic flaws
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种业务逻辑缺陷
- en: Second-order SQL injection
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二次SQL注入
- en: Pentesting cryptographic parameters
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渗透测试加密参数
- en: Privilege escalation
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权限提升
- en: Sensitive information disclosures
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 敏感信息披露
- en: Various business logic flaws
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 各种业务逻辑缺陷
- en: 'Every application has its own set of logic to get some functions done. Business
    logic is generally a set of steps required to get a job completed. Let''s take
    an example where, if a user wants to purchase a product on the shopping site,
    he have to follow a series of steps:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 每个应用程序都有自己的逻辑来完成一些功能。业务逻辑通常是完成工作所需的一系列步骤。让我们举个例子，如果用户想在购物网站上购买产品，他必须按照一系列步骤进行操作：
- en: Select an item
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个项目
- en: Specify the quantity of the product
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定产品的数量
- en: Enter delivery information
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入交付信息
- en: Enter card details
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入卡片详细信息
- en: Complete payment gateway procedures
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成支付网关程序
- en: Purchase complete
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 购买完成
- en: Delivery pending
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交付待定
- en: Delivery complete
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交付完成
- en: As you can see, a lot of steps are involved and this is where an automated scanner
    fails.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，涉及很多步骤，这就是自动化扫描仪失败的地方。
- en: Second-order SQL injection
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 二阶段SQL注入
- en: SQL second-order works differently; one page in the web application takes the
    malicious user input and some other function on some other page or some other
    application retrieves this malicious content and parses it as a part of the query.
    Automated scanners are unable to detect such issues. However, Burp has an implemented
    logic that helps an attacker find out SQL second-order vulnerabilities.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: SQL二阶段工作方式不同；网页应用程序中的一个页面接受恶意用户输入，然后在另一个页面或另一个应用程序中的某个其他功能检索此恶意内容，并将其解析为查询的一部分。自动化扫描仪无法检测此类问题。然而，Burp具有一个实现的逻辑，可以帮助攻击者发现SQL二阶段漏洞。
- en: Pentesting cryptographic parameters
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 渗透测试加密参数
- en: Applications where information is being sent to third parties, such as endpoints
    from shopping portal to payment gateway information, such as credit card details,
    the information is encrypted by a mutually agreed upon key. An automated scanner
    will not be able to scan such instances. If any endpoint is left exposed accidentally
    by the application, then by manual analysis, the pentester can test these cryptographic
    parameters for vulnerabilities.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在信息被发送到第三方的应用程序中，比如从购物门户到支付网关的端点，比如信用卡详细信息，信息是通过双方同意的密钥加密的。自动化扫描仪将无法扫描这种情况。如果应用程序意外地暴露了任何端点，那么通过手动分析，渗透测试人员可以测试这些加密参数是否存在漏洞。
- en: Exploiting discovered issues
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用发现的问题
- en: As discussed earlier, once the application is scanned using automated scanners
    and manual tests, this stage is then progressed. Findings such as SQL injection
    file upload bypass, XXE attacks, and so on, allow an attacker/tester to gain the
    capability to dig further and attack the application to take shells. So, once
    the issues are discovered in this stage, the pentester will go ahead and exploit
    those issues to see the extent to which the information can be extracted. This
    is the phase where an attacker can chain multiple vulnerabilities to see if he
    can cause a bigger bug. There are many submission reports on HackerOne that show
    how testers have chained multiple vulnerabilities that eventually lead to remote
    code execution.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面讨论的，一旦应用程序使用自动化扫描仪和手动测试进行扫描，然后就会进入这个阶段。发现的问题，如SQL注入文件上传绕过，XXE攻击等，允许攻击者/测试者获得进一步挖掘并攻击应用程序以获取shell的能力。因此，一旦在这个阶段发现了问题，渗透测试人员将继续利用这些问题，以查看可以提取信息的程度。这是攻击者可以链接多个漏洞以查看是否可以引起更大漏洞的阶段。HackerOne上有许多提交报告显示了测试人员如何链接多个漏洞，最终导致远程代码执行。
- en: Privilege escalation
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权限提升
- en: Automated scanners do not have knowledge of the levels of roles or access available
    on the application and hence will never be able to spot these vulnerabilities.
    So manual intervention will always be required.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化扫描仪不了解应用程序中可用角色或访问级别的知识，因此永远无法发现这些漏洞。因此，始终需要手动干预。
- en: Sensitive information disclosures
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 敏感信息泄露
- en: The knowledge of an automated scanner to determine if the information is sensitive
    is usually done with the help of a few keywords and a combination of regex, such
    as a credit card regex or a phone number regex. Beyond that it, is all human intervention.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化扫描仪的知识来确定信息是否敏感通常是通过一些关键词和正则表达式的组合来完成的，比如信用卡正则表达式或电话号码正则表达式。除此之外，都需要人工干预。
- en: The next chapter will cover in detail how we can do manual analysis.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将详细介绍如何进行手动分析。
- en: Automated testing
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化测试
- en: Automated scanning is a phase carried out on a network and also on the web.
    Automated scanners help find out multiple flaws ranging from input validation
    bypass right up to SQL injection. Automated scanning is required to expedite multiple
    findings in a speedy manner. In automated scanning, the scanner fuzzes all the
    input parameters to find vulnerabilities that range in the OWASP Top 10, especially
    the outdated plugins and versions. It helps find sensitive files such as admin
    logins, as per the dictionary available with them. You should note that the application
    pentest should not be concluded on the basis of the automated scanning practice.
    Manual intervention should always be done to validate the findings. Many a time
    ...
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化扫描是在网络和网络上进行的一个阶段。自动化扫描仪有助于发现从输入验证绕过到SQL注入等多个缺陷。自动化扫描需要加快多个发现的速度。在自动化扫描中，扫描仪模糊化所有输入参数，以找到OWASP前10名中的漏洞，特别是过时的插件和版本。它有助于找到敏感文件，比如根据其提供的字典找到管理员登录。应该注意，应用程序渗透测试不应该仅仅基于自动化扫描实践来得出结论。应该始终进行手动干预来验证发现。很多时候...
- en: Digging deep for data exfiltration
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深挖数据外泄
- en: There are times when the user is not able to take shells, or a situation might
    arise where the application might be vulnerable to blind SQL or XXE attacks; so
    what should be done now? Well, in this case, the attacker can still try to exfiltrate
    information using out-of-band techniques or simple techniques. Using these techniques,
    the attacker can exfiltrate a lot of information, such as extracting user credentials
    from the database, reading files via XXE injection, and much more. In later chapters,
    we will see how we can use out-of-band techniques for data exfiltration using
    Burp.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 有时用户无法获取shell，或者可能出现应用程序可能容易受到盲目SQL或XXE攻击的情况；那么现在该怎么办呢？嗯，在这种情况下，攻击者仍然可以尝试使用带外技术或简单技术来外泄信息。使用这些技术，攻击者可以外泄大量信息，比如从数据库中提取用户凭据，通过XXE注入读取文件等。在后面的章节中，我们将看到如何使用Burp的带外技术进行数据外泄。
- en: Taking shells
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取shell
- en: Well, this is the favorite part of all the pentesters when they feel satisfied
    with the pentesting activities. Once the tester has a shell via any of the vulnerabilities,
    such as SQL, RFI, file upload, LFI combined, and so on, he can then try to see
    if he can elevate his privileges on the server. If he can make himself system
    or root, then it is a complete compromise and the testing can be concluded a complete
    success.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这是所有渗透测试人员最喜欢的部分，当他们对渗透测试活动感到满意时。一旦测试人员通过任何漏洞（如SQL、RFI、文件上传、LFI等）获得了shell，他就可以尝试看看自己是否能够提升在服务器上的权限。如果他能够成为系统或根用户，那么这就是完全的妥协，测试可以被认为是完全成功的。
- en: Reporting
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 报告
- en: 'Once the testing is complete, then comes the most important phase: reporting.
    The reporting has to be done as precisely and elaborately as possible to explain
    to the organization about the vulnerabilities and their impact. This is because
    the organization will only understand the effort of the tester in the form of
    the report presented. You can also add the attacks tested and how the application
    protected against the attacks, giving the organization/developer the sense of
    how strong the application is.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦测试完成，接下来就是最重要的阶段：报告。报告必须尽可能准确和详细地进行，以向组织解释漏洞及其影响。这是因为组织只会通过提交的报告来理解测试人员的努力。您还可以添加测试的攻击以及应用程序如何防御这些攻击，让组织/开发人员了解应用程序的强大程度。
- en: Getting to know Burp Suite better
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更好地了解Burp Suite
- en: In this section, we are going to look at the rich set of features and capabilities
    Burp Suite provides the tester with. We will also be looking at the quick fixes
    that help automate the whole pentesting process with a low number of false positives.
    This will help beginners to understand the awesome capabilities that Burp provides
    when it comes to penstesting applications over the web.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看一下Burp Suite为测试人员提供的丰富功能和能力。我们还将看一下帮助自动化整个渗透测试过程的快速修复功能，以减少误报的数量。这将帮助初学者了解Burp在Web应用程序渗透测试方面的强大功能。
- en: Features of Burp Suite
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Burp Suite的特性
- en: 'Burp Suite has a wide array of options that allow us to do pentesting efficiently.
    Once you open Burp Suite, you will see the following tabs:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite有各种选项，可以让我们有效地进行渗透测试。一旦打开Burp Suite，您会看到以下选项卡：
- en: Dashboard
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仪表板
- en: Target
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标
- en: Proxy
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理
- en: Intruder
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入侵者
- en: Repeater
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复器
- en: Sequencer
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顺序器
- en: Decoder
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解码器
- en: Comparer
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较器
- en: Extender
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展器
- en: Project Options
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目选项
- en: User Options
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户选项
- en: 'This is how it looks on Burp Suite:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Burp Suite上的样子：
- en: '![](img/2c08205f-b5f6-47f5-844a-6f060735e6fb.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2c08205f-b5f6-47f5-844a-6f060735e6fb.png)'
- en: Let's go ahead and understand all these options one by one so that we are well
    aware of the capabilities from here onward whenever we perform a pentest in the
    later chapters.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一了解所有这些选项，以便在以后的章节中进行渗透测试时，我们能够充分了解这些功能。
- en: Dashboard
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仪表板
- en: 'The Burp Suite Dashboard is divided into the following three sections:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite仪表板分为以下三个部分：
- en: Tasks
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任务
- en: Issue Activity
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题活动
- en: Advisory
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 咨询
- en: Event Log
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件日志
- en: 'This allows the user to have a complete view of what is happening when the
    tester runs an automated scan. The Dashboard looks like the following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这使用户可以完全了解在测试人员运行自动扫描时发生了什么。仪表板看起来像下面的截图：
- en: '![](img/5560f55b-f30f-4d11-982d-ad065d4641ef.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5560f55b-f30f-4d11-982d-ad065d4641ef.png)'
- en: 'In the Tasks option, the tester can click on New scan and specify the website
    to be scanned. Along with the website name, there are other options, such as configuring
    the scan settings. Once you click on the New scan button, you will see a screen
    like this:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在任务选项中，测试人员可以点击“新扫描”并指定要扫描的网站。除了网站名称，还有其他选项，如配置扫描设置。一旦点击“新扫描”按钮，你会看到一个像这样的屏幕：
- en: '![](img/2f4e4f14-5787-49d6-a954-20925a08f49d.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2f4e4f14-5787-49d6-a954-20925a08f49d.png)'
- en: The ...
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: Target
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标
- en: 'The **Target** tab allows you to view the entire site map of the application
    that is in scope. It shows the user all the folders and files detected on the
    application along with the building logic. There are a lot of additional features
    in the Target tab as well. Mapping can take place in two ways; one is by manual
    browsing and the other is by an automated crawler. If the tester is doing manual
    browsing, turn off the proxy intercept and browse the application. As the requests
    and responses for different pages keep populating in Burp Suite, the Target tab
    populates the detected structure as is. This allows the user to get an idea of
    how the application looks and the folder and file naming convention across the
    entire application. Well, as we know, instead of a manual approach on a huge website
    that has a lot of pages, the most suitable option to use an automated crawler,
    as shown in the following screenshot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**目标**选项卡允许您查看在范围内的应用程序的整个站点地图。它向用户显示了应用程序上检测到的所有文件夹和文件以及构建逻辑。目标选项卡还有许多其他功能。映射可以通过两种方式进行；一种是手动浏览，另一种是通过自动爬虫。如果测试人员正在进行手动浏览，请关闭代理拦截并浏览应用程序。随着不同页面的请求和响应不断在Burp
    Suite中出现，目标选项卡会显示检测到的结构。这使用户可以了解应用程序的外观以及整个应用程序中的文件夹和文件命名约定。嗯，正如我们所知，对于一个有很多页面的大型网站，使用自动爬虫是最合适的选择，如下面的截图所示：'
- en: '![](img/a04159ef-0d7e-4e41-8040-07358a8df842.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a04159ef-0d7e-4e41-8040-07358a8df842.png)'
- en: You can see in the Target tab that there are three subsections, **Site map**,
    **Scope**, and **Issue definitions**. Let's check what features the **Scope**
    tab offers. The **Scope** tab offers two key features; one is what web URLs to
    include in the scope and the other is what web URLs to exclude from scope.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在目标选项卡中看到有三个子部分，**站点地图**，**范围**和**问题定义**。让我们看看**范围**选项卡提供了哪些功能。**范围**选项卡提供了两个关键功能；一个是要包含在范围内的Web
    URL，另一个是要从范围中排除的Web URL。
- en: 'Here, the tester can either enter a particular folder of a web URL, or the
    entire URL itself if the scope is the main URL. For example, let''s say the application
    to be tested is on [www.website.com/pentesting/](http://www.website.com/pentesting/),
    then the scope can be restricted to the pentesting folder only. If it is the entire
    website, then you can enter the website name itself, as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，测试人员可以输入Web URL的特定文件夹，或者如果范围是主URL，则可以输入整个URL本身。例如，假设要测试的应用程序位于[www.website.com/pentesting/](http://www.website.com/pentesting/)，那么范围可以限制在pentesting文件夹中。如果是整个网站，那么可以输入网站名称本身，如下所示：
- en: '![](img/55e4c952-40ed-43a2-ab50-fe5c2241e15f.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/55e4c952-40ed-43a2-ab50-fe5c2241e15f.png)'
- en: 'To add a URL, simply click on **Add** and enter the URL or the URL with the
    folder path. Once the user clicks **Add**, they will see a screen like the following:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加URL，只需单击**添加**，然后输入URL或带有文件夹路径的URL。用户单击**添加**后，将看到以下屏幕：
- en: '![](img/0fc9d353-4e37-4e96-8bd5-af4b8d5080c8.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0fc9d353-4e37-4e96-8bd5-af4b8d5080c8.png)'
- en: Similarly, **Exclude from scope** ensures that no tests or additional requests
    are sent to the **Exclude from scope** URLs. This is efficient when there are
    certain folders within the application that could be sensitive pages, such as
    the forgotten password feature or register feature.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，**从范围中排除**可以确保不会向**从范围中排除**的URL发送任何测试或额外的请求。当应用程序中存在可能是敏感页面的某些文件夹时，这是有效的，例如忘记密码功能或注册功能。
- en: 'When testing on a production environment, if that is included in the tests,
    then there will be a lot of spam, and clearing such information would be tedious
    and not appreciated by the client. Therefore, ensure to use this feature. The
    other way to do this is by right-clicking on the particular file and selecting
    if you want to exclude or include it in the scope. For example, if something needs
    to be included in the scope, it can be done as shown in the following screenshot:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中进行测试时，如果包括在测试中，那么将会有大量的垃圾信息，清除这些信息将是繁琐的，客户也不会欣赏。因此，请确保使用此功能。另一种方法是右键单击特定文件，然后选择是否要将其排除或包括在范围内。例如，如果需要将某些内容包括在范围内，可以按照下面的屏幕截图所示进行操作：
- en: '![](img/c63a37fa-1a4d-455c-baf2-97fd23192a19.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c63a37fa-1a4d-455c-baf2-97fd23192a19.png)'
- en: 'If you need to exclude a particular path or a file from scope, it can be done
    by right-clicking on the URL and selecting **Remove from scope**, as shown in
    the following screenshot:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要从范围中排除特定路径或文件，可以通过右键单击URL并选择**从范围中删除**来完成，如下面的屏幕截图所示：
- en: '![](img/b85aedb0-d985-4cea-aa21-b1c5026c5a6a.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b85aedb0-d985-4cea-aa21-b1c5026c5a6a.png)'
- en: 'There is an advanced scope control feature as well. When you enable it in the
    Scope tab, it gives you the capability to enter the type of protocol, that is
    HTTP or HTTPS, and then the IP/IP range, along with the port number and file,
    as shown in the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个高级范围控制功能。当您在范围选项卡中启用它时，它可以让您输入协议类型，即HTTP或HTTPS，然后是IP/IP范围，以及端口号和文件，如下面的屏幕截图所示：
- en: '![](img/52c14aef-fe74-4e40-ab45-4bf5259683db.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/52c14aef-fe74-4e40-ab45-4bf5259683db.png)'
- en: 'The issue definition contains all the definitions of all the vulnerabilities
    that can be detected by Burp. This gives us a great of idea of the rich detection
    of capabilities Burp Suite to find so many vulnerabilities, as shown in the following
    screenshot:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 问题定义包含Burp可以检测到的所有漏洞的定义。这让我们对Burp Suite发现如此多漏洞的丰富检测能力有了很好的了解，如下面的屏幕截图所示：
- en: '![](img/433bff9c-a1e3-4cbf-b52e-6dbdf11194c5.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/433bff9c-a1e3-4cbf-b52e-6dbdf11194c5.png)'
- en: 'Burp also provides filters in the site map determining what is to be shown
    and what needs to be hidden. For example, how the request should be filtered,
    then the MIME types to be shown, followed by status code. There are other options,
    such as filter by search term, by extension, and by annotation. These are pretty
    self-explanatory and can be configured as per the user''s requirement as shown
    in the following screenshot:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Burp还在站点地图中提供了过滤器，确定要显示什么和需要隐藏什么。例如，请求应该如何过滤，然后显示的MIME类型，然后是状态代码。还有其他选项，例如按搜索词、按扩展名和按注释进行过滤。这些都很容易理解，并且可以根据用户的要求进行配置，如下面的屏幕截图所示：
- en: '![](img/b80d3466-2e58-48bd-b4cd-fc562afb2b08.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b80d3466-2e58-48bd-b4cd-fc562afb2b08.png)'
- en: This helps in getting a very clear picture of the sitemap.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这有助于清晰地了解站点地图。
- en: Proxy
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代理
- en: 'This is the heart of the entire tool; everything that happens on Burp Suite
    happens via this place. The Proxy tab allows you to intercept the request and
    play with it by editing and sending it to repeater, intruder, or any of the Burp
    testing modules. This is the place where you can take a decision as to what the
    tester wants to do with the request. The **Proxy** tab is shown in the following
    screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这是整个工具的核心；Burp Suite上发生的一切都是通过这个地方进行的。代理选项卡允许您拦截请求并通过编辑和发送到重复器、入侵者或任何Burp测试模块来进行操作。这是您可以决定测试人员想要对请求做什么的地方。**代理**选项卡如下屏幕截图所示：
- en: '![](img/ee58d178-af24-4e0d-8295-e36300ca1c50.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ee58d178-af24-4e0d-8295-e36300ca1c50.png)'
- en: Once a request is intercepted, it can be viewed in different ways. The options
    available for a simple HTTP request are Raw, Params, Headers, and Hex. Based on
    the type of request, if it is a web socket request, then a web Socket tab will
    ...
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 拦截请求后，可以以不同的方式查看。对于简单的HTTP请求，可用的选项包括原始、参数、标头和十六进制。根据请求的类型，如果是Web套接字请求，则会有一个Web套接字选项卡...
- en: Intruder
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入侵者
- en: This is the core functionality of the application. This feature of Burp allows
    the user to automate the process that a user wants. The automation is used to
    perform attacks against web applications. This feature is highly customizable
    and can be used for various tasks, ranging from brute-force, right up to exploiting
    SQL injections and OS command injection, and so on.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是应用程序的核心功能。Burp的这一功能允许用户自动执行用户想要的过程。自动化用于对Web应用程序执行攻击。这一功能非常可定制，可用于各种任务，从暴力破解到利用SQL注入和操作系统命令注入等。
- en: '![](img/fca804ba-a9fd-45b2-a39b-8a5ec7df8c27.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fca804ba-a9fd-45b2-a39b-8a5ec7df8c27.png)'
- en: 'The Intruder has four subtabs, which are:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Intruder有四个子标签，分别是：
- en: '**Target**'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Target**'
- en: '**Positions**'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Positions**'
- en: '**Payloads**'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Payloads**'
- en: '**Options**'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Options**'
- en: 'The **Target** tab shows the IP and port that the request is being sent to,
    along with the **Start attack** button. This button is clicked once and the setup
    for the particular request to be tested is done, as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**Target**标签显示了请求发送到的IP和端口，以及**Start attack**按钮。这个按钮被点击一次，为要测试的特定请求进行设置，如下所示：'
- en: '![](img/792a5c3e-116d-4000-8ff5-a1bd84416d5f.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/792a5c3e-116d-4000-8ff5-a1bd84416d5f.png)'
- en: The **Positions** tab in the **Intruder** is where the payload locations are
    selected. As seen in the following screenshot, the **Value** parameter of the
    `txtUsername` and `txtPassword` are highlighted. The **Add** button adds the delimiter;
    anything that is between two of those delimiters becomes one attack point. As
    we can see in the sample request, there are two locations where the automation
    needs to be done. The **Clear** button removes all the injection points from the
    request, and the **Auto** button adds all the parameters Burp highlights that
    can be attacked.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**Positions**标签在**Intruder**中用于选择有效载荷位置。如下截图所示，`txtUsername`和`txtPassword`的**Value**参数被突出显示。**Add**按钮添加分隔符；两个分隔符之间的任何内容都成为一个攻击点。如我们在示例请求中看到的，自动化需要完成的地方有两个。**Clear**按钮从请求中删除所有注入点，**Auto**按钮添加Burp突出显示的所有可攻击的参数。'
- en: 'The most interesting thing in this tab is the attack type. Burp supports four
    differentattack types:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这个标签中最有趣的是攻击类型。Burp支持四种不同的攻击类型：
- en: '**Sniper**'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sniper**'
- en: '**Battering Ram**'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Battering Ram**'
- en: '**Pitchfork**'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pitchfork**'
- en: '**Clusterbomb**'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Clusterbomb**'
- en: '![](img/cb690b42-67e4-4a18-be99-6a764fdb1189.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cb690b42-67e4-4a18-be99-6a764fdb1189.png)'
- en: Let us understand the attack types in a bit more detail.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地了解一下攻击类型。
- en: '**Sniper**: Sniper support a single set of payloads. What it will do is send
    one payload at a time. So let''s say there is one position that we wish to fuzz, then
    sniper is the best fit for that attack automation. It will not be efficient with
    two attack points because Sniper will send only a payload to the first attack
    point. Once the payload set is exhausted, it will send the payloads to the second
    attack point, leaving the first point to default. Sniper is always selected for
    a single input attack point. If we use Sniper in the preceding screenshot, it
    will first fuzz the username, keeping the password as `admin`, and then fuzz the
    password field, keeping the username field received in default in the request
    that is an admin.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**狙击手**：狙击手支持单一组有效载荷。它将一次发送一个有效载荷。所以假设我们希望对一个位置进行模糊测试，那么狙击手是最适合进行攻击自动化的。它不适用于两个攻击点，因为狙击手只会向第一个攻击点发送一个有效载荷。一旦有效载荷集用尽，它将把有效载荷发送到第二个攻击点，将第一个点保留为默认值。狙击手总是用于单一输入攻击点。如果我们在前面的截图中使用狙击手，它将首先对用户名进行模糊测试，将密码保持为`admin`，然后对密码字段进行模糊测试，将用户名字段保持为默认值，即admin。'
- en: '**Battering Ram**: Battering Ram also uses a single set of payloads. The interesting
    thing here is Battering Ram passes the same payload at multiple locations. This
    means that once the payload list is specified, it will send the first payload
    value in all the marked positions that are required to be fuzzed, and so on until
    the last payload. The number of payloads generated is equal to the payloads provided,
    irrespective of the fuzzing positions.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**Battering Ram**：Battering Ram也使用单一组有效载荷。这里有趣的是Battering Ram会在多个位置传递相同的有效载荷。这意味着一旦有效载荷列表被指定，它将在所有需要进行模糊测试的标记位置发送第一个有效载荷值，以此类推，直到最后一个有效载荷。生成的有效载荷数量等于提供的有效载荷数量，而不管模糊测试的位置如何。'
- en: '**Pitchfork**: This attack uses multiple sets of payloads. Let''s say we have
    marked two places for fuzzing, similar to the preceding screenshot, and two payload
    sets are given; one is a username and the other is a password. When the attack
    is initiated, the first payload from the payload set is set in the first position,
    and the first payload in the second payload set is set in the second position,
    and the attack increments accordingly. The total number of attacks will be equal
    to the payload set with the least number of payloads.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**Pitchfork**：此攻击使用多组有效载荷。假设我们已经标记了两个模糊测试的位置，类似于前面的截图，并且给出了两组有效载荷；一个是用户名，另一个是密码。当攻击开始时，有效载荷集中的第一个有效载荷被设置在第一个位置，第二个有效载荷集中的第一个有效载荷被设置在第二个位置，攻击随之增加。攻击的总次数将等于有效载荷集中有效载荷最少的数量。'
- en: '**ClusterBomb**: This attack uses multiple sets of payloads. It is a complete
    permutation combination of all the payload positions. Let''s say there are two
    payload positions, username and password, and two different payload sets, username
    set, and password set. The attack happens in such a way that the first payload
    for position 1 is tested along will all the payload sets of position 2\. Once
    that is exhausted, then the second payload is set in position 1 and all the payloads
    from the second set are tested against that. So, in all, the total number of requests
    generated will be the product of the number of payloads in the payload sets. So,
    let''s say we have 10 payloads for position 1 and 10 payloads for position 2:
    the total number of requests that will be sent will be 100.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**ClusterBomb**：此攻击使用多组有效载荷。它是所有有效载荷位置的完全排列组合。假设有两个有效载荷位置，用户名和密码，以及两个不同的有效载荷集，用户名集和密码集。攻击发生的方式是，位置1的第一个有效载荷与位置2的所有有效载荷集一起测试。一旦用尽，那么第二个有效载荷将设置在位置1，并且所有第二组有效载荷将针对它进行测试。因此，总共生成的请求数量将是有效载荷集中有效载荷数量的乘积。假设我们对位置1有10个有效载荷，对位置2有10个有效载荷：将发送的请求总数将是100。'
- en: 'The next tab is the **Payloads** tab. It contains four different settings,
    which are:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的标签是**Payloads**标签。它包含四种不同的设置，分别是：
- en: '**Payload Sets**'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Payload Sets**'
- en: '**Payload Options**'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Payload Options**'
- en: '**Payload Processing**'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Payload Processing**'
- en: '**Payload Encoding**'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Payload Encoding**'
- en: '**Payload Sets**: **Payload Sets** allows you to specify what type of payloads
    are to be entered at what payload position.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**负载集**：**负载集**允许您指定在哪个负载位置输入什么类型的负载。'
- en: '**Payload Options**: This setting allows you to set the payloads. The tester
    can either set it from the available Burp list if it is a Professional edition
    or else load a custom set of files with the **Load ...** option, as shown in the
    following screenshot'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**负载选项**：此设置允许您设置负载。测试人员可以从可用的Burp列表中设置，如果是专业版，否则可以使用**加载...**选项加载自定义文件集，如下图所示'
- en: '![](img/b753aa4a-1664-48fc-85af-1663bb39f97a.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b753aa4a-1664-48fc-85af-1663bb39f97a.png)'
- en: '**Payload Processing**: This setting allows the user to perform different tasks
    for processing each payload before it is used. The rules, as shown in the following
    screenshot, can be configured before starting the attack:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**负载处理**：此设置允许用户在使用每个负载之前执行不同的任务。在开始攻击之前可以配置规则，如下图所示：'
- en: '![](img/3fa0e2dc-b46d-4519-86dc-c29996432969.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3fa0e2dc-b46d-4519-86dc-c29996432969.png)'
- en: '**Payload Encoding**: This setting allows the auto encoding to be set to on
    or off with the help of the checkbox. The user can specify which characters need
    to be URL-encoded before being sent for the test, as per the dependency of the
    application being tested, for example:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**负载编码**：此设置允许将自动编码设置为打开或关闭，并借助复选框。用户可以指定在发送到测试时需要对其进行URL编码的字符，根据正在测试的应用程序的依赖性，例如：'
- en: '![](img/7d955a60-36a5-48a8-9b66-dd19d89c3502.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d955a60-36a5-48a8-9b66-dd19d89c3502.png)'
- en: 'The last tab is the **Options** tab that allows the tester to configure other
    settings for the automation of attacks. It contains the following settings:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个选项卡是**选项**选项卡，允许测试人员配置攻击自动化的其他设置。它包含以下设置：
- en: '**Request Headers**'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**请求头**'
- en: '**Request Engine**'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**请求引擎**'
- en: '**Attack Results**'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击结果
- en: '**Grep Match **'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Grep匹配**'
- en: '**Grep Extract**'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Grep提取**'
- en: '**Grep Payloads**'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Grep负载**'
- en: '**Redirections**'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重定向
- en: '![](img/68d074c8-c8aa-4c37-8800-6ff61c93e9b5.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/68d074c8-c8aa-4c37-8800-6ff61c93e9b5.png)'
- en: '**Request Headers**: This setting allows the user to automatically **Update
    Content-Length header** based on the length of the payload, and also set the header
    of **Set Connection: close** so as to not utilize the resources of the application
    by putting it in a wait state.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**请求头**：此设置允许用户根据负载的长度自动**更新Content-Length头**，并设置**Set Connection: close**的头，以便不通过将其置于等待状态来利用应用程序的资源。'
- en: '**Request Engine**: The Request Engine allows the user to control the speed
    of testing by specifying the number of threads to be used, the number of retries
    to be done on a network failure, pausing, throttling, and so on, as shown in the
    following screenshot:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '**请求引擎**：请求引擎允许用户通过指定要使用的线程数、在网络故障时要进行的重试次数、暂停、节流等来控制测试速度，如下图所示：'
- en: '![](img/d90564fc-08d7-4543-a9b4-20b70e098ec9.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d90564fc-08d7-4543-a9b4-20b70e098ec9.png)'
- en: '**Attack Results**: This setting allows the tester to select what information
    is to be captured based on the attack results.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击结果：此设置允许测试人员根据攻击结果选择要捕获的信息。
- en: '**Grep-Match**: This setting allows the user to get certain fields highlighted
    to give a quick view of a particular expression being invoked. For example, if
    a user is logged in successfully, there would be logout options, so if the user
    adds the expression logout here and enables this setting, then the request will
    be highlighted and easy to spot, as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**Grep-Match**：此设置允许用户突出显示某些字段，以快速查看特定表达式的调用。例如，如果用户成功登录，则会有注销选项，因此如果用户在此处添加表达式注销并启用此设置，那么请求将被突出显示并易于发现，如下所示：'
- en: '![](img/5413ccbe-5a87-45f8-a21e-438cde505812.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5413ccbe-5a87-45f8-a21e-438cde505812.png)'
- en: '**Grep Payloads**: This setting is used to flag results containing the same
    value as the submitted payload.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Grep负载：此设置用于标记包含与提交的负载相同值的结果。
- en: '**Redirections**: This setting tells Burp what to do in case of redirection
    being detected on sending requests.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**重定向**：此设置告诉Burp在发送请求时检测到重定向时该做什么。'
- en: Repeater
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**Repeater**'
- en: '**Repeater** allows the tester to submit the same request recursively by making
    modifications to it and checking how the server responds. Let''s say the tester
    is testing for an SQL injection or command injection flaw on one parameter of
    a particular request. The tester can capture the request in **Proxy** and send
    it to **Repeater**, manipulate the parameter and send it to the server check response,
    manipulate it again, and check the response. It''s like a manual debugger. Check
    the following screenshot for a clear understanding of the first request, which
    is a simple login request:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '**Repeater**允许测试人员通过对其进行修改并检查服务器响应来递归地提交相同的请求。假设测试人员正在测试特定请求的一个参数上的SQL注入或命令注入漏洞。测试人员可以在**代理**中捕获请求并将其发送到**Repeater**，操纵参数并将其发送到服务器以检查响应，然后再次操纵它并检查响应。这就像一个手动调试器。查看以下屏幕截图，以清楚了解第一个请求，即一个简单的登录请求：'
- en: '![](img/88fd12f6-1c19-468e-aa23-e7955ed9747e.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/88fd12f6-1c19-468e-aa23-e7955ed9747e.png)'
- en: It responds with **OK**. However, if I change the value of the username ...
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 它以**OK**作为响应。但是，如果我更改用户名的值...
- en: Comparer
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较器
- en: 'Burp Comparer is a Burp feature used for comparing differences based on the
    word or byte comparison. The comparison can be used in a lot of conditions. For
    example, let''s say the user wants to compare the difference on a successful and
    a failed login response. Comparer would show the areas where there are byte differences.
    One of the other uses that we can think of is for testing SQL injection to see
    the difference. There are two types of comparison. To send responses to the Comparer,
    simply right-click on the response and **Send to Comparer**. For reference, have
    a look at the following screenshot:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Comparer是Burp的一个功能，用于基于单词或字节比较的差异比较。比较可以在许多条件下使用。例如，假设用户想要比较成功和失败的登录响应之间的差异。比较器将显示字节差异的区域。我们可以想到的另一个用途是用于测试SQL注入以查看差异。有两种类型的比较。要将响应发送到比较器，只需右键单击响应，然后选择“发送到比较器”。参考以下截图：
- en: '![](img/8ce39d9b-aeef-49ce-8059-a9a8c12557ea.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ce39d9b-aeef-49ce-8059-a9a8c12557ea.png)'
- en: 'For clarification, we have sent two different responses to Comparer: one of
    a successful login and another for an unsuccessful login. The **Comparer** toolbar
    would look as follows:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 为了澄清，我们已将两个不同的响应发送到比较器：一个是成功登录，另一个是失败登录。**比较器**工具栏将如下所示：
- en: '![](img/59e39ceb-a268-4e2b-a7d8-03fd5e12dabc.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/59e39ceb-a268-4e2b-a7d8-03fd5e12dabc.png)'
- en: 'The tester can then select one response from item 1 and another response from
    item 2, and click on **Compare by words**, and **Compare by bytes**. The tool
    will do a word-to-word comparison and show the differences like deletion, modification,
    and addition, for example:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 测试人员可以从项目1中选择一个响应，从项目2中选择另一个响应，然后点击“按单词比较”和“按字节比较”。该工具将进行单词对单词的比较，并显示删除、修改和添加等差异，例如：
- en: '![](img/1829a014-2a63-4800-9068-680cd6abcd22.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1829a014-2a63-4800-9068-680cd6abcd22.png)'
- en: The comparison is shown in a color-coded scheme, as we can see in the preceding
    screenshot for **Modified**, **Deleted**, and **Added**.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 比较以颜色编码的方式显示，如前面截图中所示的**修改**、**删除**和**添加**。
- en: Sequencer
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sequencer
- en: '**Sequencer** is used for analyzing session cookies, CSRF tokens, and password
    reset tokens for randomness. We will be talking in more detail about this when
    we perform an analysis of **Session** tokens with the help of **Sequencer**.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sequencer**用于分析会话cookie、CSRF令牌和密码重置令牌的随机性。当我们使用**Sequencer**对**会话**令牌进行分析时，我们将更详细地讨论这一点。'
- en: For more information on Burp Suite Sequencer, please visit [http://www.preflexsol.com/burpsuite.shtml](http://www.preflexsol.com/burpsuite.shtml)
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Burp Suite Sequencer的更多信息，请访问[http://www.preflexsol.com/burpsuite.shtml](http://www.preflexsol.com/burpsuite.shtml)
- en: Decoder
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解码器
- en: 'This Burp utility allows the tester to Encode, Decode, and Hash data as and
    when encountered over the application. There are different types of encoders and
    hashes supported, for example:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这个Burp实用程序允许测试人员在应用程序中遇到数据时对其进行编码、解码和哈希处理。支持不同类型的编码器和哈希，例如：
- en: '| Encoders/Decoders | Plain | URL | HTML | Base64 | ASCII hex | Hex | Octal
    | Binary | Gzip |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| 编码器/解码器 | 明文 | URL | HTML | Base64 | ASCII十六进制 | 十六进制 | 八进制 | 二进制 | Gzip
    |'
- en: 'The following is an example of base64 encoding the string password using the
    **Encode as ...** an option in the decoder:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用解码器中的**编码为...**选项对字符串密码进行base64编码的示例：
- en: '![](img/8ff81d80-678f-4a44-9ff8-e23883e50cb5.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ff81d80-678f-4a44-9ff8-e23883e50cb5.png)'
- en: There are quite a few types of hashes supported, ranging from SHA to SHA3-512,
    and then MD5, MD2, and so on. Play around with the decoder as it will be a really
    handy utility during pentests.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 支持多种类型的哈希，从SHA到SHA3-512，然后是MD5、MD2等。尝试使用解码器，它在渗透测试中将是一个非常方便的实用工具。
- en: Extender
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展程序
- en: 'This capability of Burp allows the tester to use different extensions written
    by independent people that serve as an add-on to the Burp features. Burp is very
    scalable; a user can even write his own code to create a Burp extension and embed
    it to take more advantage of Burp. In order to avail the full advantage of the
    extensions, the user has to provide a path to the Jython and JRuby JAR files.
    We will shortly see how to do that. Let''s look at the following Burp Extender
    page:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Burp的这一功能允许测试人员使用独立开发的不同扩展，作为Burp功能的附加功能。Burp非常可扩展；用户甚至可以编写自己的代码来创建Burp扩展，并将其嵌入以更充分地利用Burp。为了充分利用这些扩展，用户必须提供Jython和JRuby
    JAR文件的路径。我们很快将看到如何做到这一点。让我们看看以下Burp Extender页面：
- en: '![](img/cb75cfe3-6930-4a4f-8968-df53df88a0da.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cb75cfe3-6930-4a4f-8968-df53df88a0da.png)'
- en: In the Extender section, go to the **Options** page and provide a path to the
    downloaded Jython JAR file. Jython JAR can be downloaded from [http://www.jython.org/downloads.html
    ...](http://www.jython.org/downloads.html)
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在Extender部分，转到**选项**页面，并提供下载的Jython JAR文件的路径。可以从[http://www.jython.org/downloads.html
    ...](http://www.jython.org/downloads.html)下载Jython JAR。
- en: Project options
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目选项
- en: 'Project options are similar to user options, but this tab stays specific to
    a particular project that is started. It contains the following subtabs:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 项目选项类似于用户选项，但此选项卡特定于已启动的特定项目。它包含以下子选项卡：
- en: '**Connections**'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接**'
- en: '**HTTP **'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HTTP**'
- en: '**SSl **'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL**'
- en: '**Sessions**'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会话**'
- en: '**Misc**'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他**'
- en: '![](img/053d8a03-d0e8-4926-8474-d7571f32e73e.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/053d8a03-d0e8-4926-8474-d7571f32e73e.png)'
- en: 'The **Connections** tab contains a list of the following items:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**连接**选项卡包含以下项目列表：'
- en: '**Platform Authentication**'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台认证**'
- en: '**Upstream Proxy Server**'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上游代理服务器**'
- en: '**SOCKS Proxy**'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SOCKS代理**'
- en: '****Timeouts****'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超时**'
- en: '**Hostname Resolution**'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机名解析**'
- en: '****Out-of-Scope Requests****'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****超出范围的请求****'
- en: '![](img/cac0edbd-4707-439d-9d27-e3806e447486.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cac0edbd-4707-439d-9d27-e3806e447486.png)'
- en: '**Platform Authentication**: **Platform Authentication** includes the authentications
    that are present usually before a user can access the application (for example,
    HTTP authentication, NTLMv1, NTLMv2 authentication, digest authentication, and
    so forth). So if the configuration is not done in the **User Options** tab, the
    setting can be used here. We will see in detail in the **User Options** menu the
    different options that are available.'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台认证**: **平台认证**包括通常在用户访问应用程序之前存在的认证（例如，HTTP认证、NTLMv1、NTLMv2认证、摘要认证等）。因此，如果在**用户选项**选项卡中未进行配置，则可以在此处使用设置。我们将在**用户选项**菜单中详细了解可用的不同选项。'
- en: '**Upstream Proxy Server**: Let''s say that in an organization, to access a
    particular application there needs to be a proxy configured. However, since we
    are redirecting the traffic to Burp as our proxy, how will the user redirect the
    request to a particular application via the organization proxy? This is where
    the Upstream Proxy Server comes into play. The Upstream Proxy Server allows you
    to configure the proxy for the organization, so that the request can be sent to
    the particular application that resides behind the proxy.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '**上游代理服务器**: 假设在一个组织中，需要配置代理才能访问特定应用程序。然而，由于我们将流量重定向到Burp作为我们的代理，用户如何将请求重定向到组织代理通过特定应用程序？这就是上游代理服务器发挥作用的地方。上游代理服务器允许您配置组织的代理，以便请求可以发送到代理后面的特定应用程序。'
- en: '**Timeouts**: There are a lot of requests that Burp sends to the application
    while performing testing. But how does it understand whether the request is complete
    or not, should it wait until the time the server responds, or what if there is
    a condition the server cannot access, or a response that is not available for
    some particular request? All the threads available for testing by Burp might just
    end up being utilized and in a wait state. Hence, the timeout feature, where the
    user can specify when to terminate a particular request based on the scenario.
    As we see in the following screenshot, there are four different types of timeout.
    Normal, open-ended responses, domain name resolution, and failed domain name resolution:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**超时**: 在进行测试时，Burp发送了许多请求到应用程序。但是它如何理解请求是否已经完成，是否应该等到服务器响应，或者如果服务器无法访问，或者对于某些特定请求响应不可用会怎么样？Burp用于测试的所有线程可能最终会被利用并处于等待状态。因此，超时功能允许用户根据情况指定何时终止特定请求。如下截图所示，有四种不同类型的超时。普通、无限期响应、域名解析和失败的域名解析：'
- en: '![](img/35733913-3fa7-426a-89b3-346370d309fb.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35733913-3fa7-426a-89b3-346370d309fb.png)'
- en: '**Hostname Resolution**: Let''s say there is a scenario where the user wants
    to give an alias to a particular application hosted on a particular IP. Usually
    the DNS resolution happens in the hosts file or the DNS server level. Burp also
    gives the user the capability to specify, such that the user can say that `127.0.0.1` resolves
    to pentest in this configuration, and when the user enters `http://pentest/`,
    the localhost content will be shown. This kind of configurations can be done in
    the **Hostname Resolution** page.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '**主机名解析**: 假设有一种情况，用户想要为托管在特定IP上的特定应用程序提供别名。通常DNS解析发生在主机文件或DNS服务器级别。Burp还允许用户指定这样的能力，用户可以在此配置中说`127.0.0.1`解析为pentest，当用户输入`http://pentest/`时，将显示本地主机内容。这种配置可以在**主机名解析**页面中完成。'
- en: '**Out-of-Scope Requests**:  Burp provides a feature that will prevent any out-of-scope
    requests being issued from Burp. The two features made available are to drop all
    the out-of-scope requests or to use the scope defined in the **Target** tab.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '**超出范围的请求**: Burp提供了一个功能，可以阻止Burp发出任何超出范围的请求。提供的两个功能是丢弃所有超出范围的请求或使用**目标**选项卡中定义的范围。'
- en: 'The next sub tab in **Project** options is **HTTP**. This contains all the
    settings pertaining to HTTP if not already configured in the user options section.
    The **HTTP** tab looks as follows:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTTP**选项卡中的下一个子选项卡是**HTTP**。如果在用户选项部分尚未配置，则包含所有与HTTP相关的设置。**HTTP**选项卡如下所示：'
- en: '![](img/a8e75cce-71f9-4239-81f4-1ed7c56d5423.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8e75cce-71f9-4239-81f4-1ed7c56d5423.png)'
- en: 'The **HTTP** tab contains the following three settings:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTTP**选项卡包含以下三个设置：'
- en: '**Redirections **'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重定向**'
- en: '**Streaming Responses**'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流式响应**'
- en: '**Status 100 Requests**'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**状态100请求**'
- en: '**Redirections**: In Burp, these settings allow the types of redirections that
    Burp should consider and process accordingly.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**重定向**: 在Burp中，这些设置允许Burp考虑和相应地处理的重定向类型。'
- en: '**Streaming Responses**: These settings are used to specify URLs returning
    responses that stream indefinitely. What Burp will do is pass these responses
    directly through to the client.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '**流式响应**: 这些设置用于指定返回无限期响应的URL。Burp将直接将这些响应传递给客户端。'
- en: '**Status 100 Responses**: With this setting, the user can control the way Burp
    handles the HTTP responses with status 100\. The user can either select to understand
    the response 100 or else remove 100 continue headers.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '**状态100响应**: 通过此设置，用户可以控制Burp处理带有状态100的HTTP响应的方式。用户可以选择理解响应100，或者删除100继续头。'
- en: 'The next tab is the **SSL** tab. Here all the SSL-related configuration for
    the particular project can be set if not already configured in the **User Options**
    tab, for example:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个选项卡是**SSL**选项卡。在这里，可以设置特定项目的所有与SSL相关的配置，如果在**用户选项**选项卡中尚未配置，例如：
- en: '![](img/9ac68b05-9cda-40f7-8307-98eecdebf4d7.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ac68b05-9cda-40f7-8307-98eecdebf4d7.png)'
- en: 'The following three options are available:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 以下三个选项可用：
- en: '**SSL Negotiation **'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL协商**'
- en: '**Client SSL Certificates**'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端SSL证书**'
- en: '**Server SSL Certificates**'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务器SSL证书**'
- en: '**SSL Negotiation**: There are often times when the user is not able to see
    the application because of **SSL Negotiation** errors. This is where the user
    can specify a specific negotiation to take place by manually saying which cipher
    to use. If you click on Use custom protocols and ciphers, the user gets a list
    of all the ciphers available and then can deselect the ones causing errors and
    then access the application, as shown in the following screenshot:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**SSL协商**：用户经常因为**SSL协商**错误而无法看到应用程序。在这里，用户可以指定特定的协商，手动指定要使用的密码。如果单击“使用自定义协议和密码”，用户将获得所有可用密码的列表，然后可以取消选择导致错误的密码，然后访问应用程序，如下截图所示：'
- en: '![](img/6375465d-1c60-4dac-86d1-8d0586de32d7.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6375465d-1c60-4dac-86d1-8d0586de32d7.png)'
- en: If it still doesn't work, then there are workaround options available as well.
    The user can elect to automatically select compatible SSL parameters on negotiation
    failure or allow usage renegotiation, or even disable an SSL session.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果仍然无法工作，那么也有可用的解决方法。用户可以选择在协商失败时自动选择兼容的SSL参数，或允许使用重新协商，甚至禁用SSL会话。
- en: '**Client SSL Certificates**: There are times when the application requires
    a specific certificate otherwise, content to the application is not rendered.
    These are also known as Client SSL Certificates. Burp provides a feature where
    a user can add a client certificate so that whenever the host requests it, it
    can be sent to the host. The **Client SSL Certificates** tab looks like this:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**客户端SSL证书**：有时应用程序需要特定的证书，否则无法呈现应用程序内容。这些也称为客户端SSL证书。Burp提供了一个功能，用户可以添加客户端证书，以便每当主机请求时，可以将其发送到主机。**客户端SSL证书**选项卡如下所示：'
- en: '![](img/0517e814-4915-4c79-a922-55899dce2f76.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0517e814-4915-4c79-a922-55899dce2f76.png)'
- en: '**Server SSL Certificates**: This panel shows a list of unique SSL certificates
    received from web servers. The item can be double-clicked to view the entire certificate.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务器SSL证书**：此面板显示从Web服务器接收的唯一SSL证书的列表。可以双击该项目以查看整个证书。'
- en: 'Next is the **Sessions** tab, which handles all the session-related information
    for that particular project. There are three different settings available in the
    **Sessions** tab, as follows:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是**会话**选项卡，它处理特定项目的所有与会话相关的信息。**会话**选项卡中有三种不同的设置，如下所示：
- en: '**Session Handling Rules**'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会话处理规则**'
- en: '**Cookie Jar**'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cookie Jar**'
- en: '**Macros**'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**宏**'
- en: '![](img/b6624e5b-f274-42f9-a72c-93b08a2d2d35.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6624e5b-f274-42f9-a72c-93b08a2d2d35.png)'
- en: '**Session Handling Rules**: Session rules allow the user to make Burp perform
    certain tasks for every HTTP request. Each rule has a defined scope and the definitions
    are available once the user clicks on the **Add** button of the **session handling
    rules** setting. There are many actions that can be done, such as adding session
    cookies, logging into the application, checking session validity, and so on. The
    following screenshot shows the definitions that are available in the session handling
    rules:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '**会话处理规则**：会话规则允许用户为每个HTTP请求让Burp执行某些任务。每个规则都有一个定义的范围，用户点击**会话处理规则**设置的**添加**按钮后，定义就可用。可以执行许多操作，例如添加会话cookie，登录应用程序，检查会话有效性等。以下屏幕截图显示了会话处理规则中可用的定义：'
- en: '![](img/a98be63c-1df5-4a4d-a5ba-e44c475053d2.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a98be63c-1df5-4a4d-a5ba-e44c475053d2.png)'
- en: '**Cookie jar**: Burp stores all the cookies issued by the website in a cookie
    jar. Session handling rules make use of these cookies and even update them to
    maintain the valid session with the application. Here, the tester can select from
    where all the cookies are supposed to be taken and maintained, namely **Proxy**,
    **Scanner**, **Repeater**, **Intruder**, **Sequencer**, and **Extender**.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cookie jar**：Burp将网站发出的所有cookie存储在cookie jar中。会话处理规则利用这些cookie，甚至更新它们以维持与应用程序的有效会话。在这里，测试人员可以选择从哪里获取和维护所有cookie，即**代理**，**扫描器**，**重复器**，**入侵者**，**顺序器**和**扩展器**。'
- en: '**Macros**: In simple terms, macros are like a set of sequences of more than
    one request. They can be used within session handling or performing things such
    as obtaining Anti-CSRF tokens. We will learn about this in more detail when we
    talk about Burp and its macros.'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '**宏**：简单来说，宏就像是一个以上请求的一系列序列。它们可以在会话处理中使用，或者执行诸如获取反CSRF令牌之类的操作。当我们谈论Burp及其宏时，我们将更详细地了解这一点。'
- en: 'The next tab is the **Misc** tab, which contains all the miscellaneous settings
    for the particular project settings. The  following screenshot shows the **Misc**
    tab:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个选项卡是**其他**选项卡，其中包含特定项目设置的所有杂项设置。以下屏幕截图显示了**其他**选项卡：
- en: '![](img/0bce0d73-e8fc-4873-a3dd-58f561408080.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0bce0d73-e8fc-4873-a3dd-58f561408080.png)'
- en: 'The following three main settings are available in **Misc**:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '**其他**中有以下三个主要设置：'
- en: '**Scheduled Tasks **'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定时任务**'
- en: '**Burp Collaborator Server**'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Burp Collaborator 服务器
- en: '**Logging**'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志**'
- en: '**Scheduled Tasks**: In the scheduled task section, the user can specify a
    specific activity to be done mainly pertaining to the execution scheme. The user
    can select to pause or resume execution at a particular time so as to ensure timing
    constraints. The setting is shown in the following screenshot:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '**定时任务**：在定时任务部分，用户可以指定要执行的特定活动，主要涉及执行方案。用户可以选择在特定时间暂停或恢复执行，以确保时间约束。设置如下截图所示：'
- en: '![](img/c676ec34-5a72-485c-8fb9-d0f02ec5e766.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c676ec34-5a72-485c-8fb9-d0f02ec5e766.png)'
- en: '**Burp Collaborator Server**: Burp collaborator is an external service that
    is used to fetch out-of-band type vulnerabilities. Burp has a default collaborator
    server, but if the user wants he can configure his own collaborator server using
    this setting and can use the **Run Health Check** option to understand if it has
    been correctly configured. We will be looking at Burp collaborator in more detail
    when we talk about **Out-of-Band Injection** attacks.'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '**Burp Collaborator Server**：Burp Collaborator是一个外部服务，用于获取带外类型的漏洞。Burp有一个默认的协作服务器，但如果用户希望，他可以使用此设置配置自己的协作服务器，并可以使用**运行健康检查**选项来了解是否已正确配置。当我们谈论**带外注入**攻击时，我们将更详细地了解Burp
    Collaborator。'
- en: '**Logging**: This is simple and straightforward. This setting allows the user
    to control the logging of HTTP requests. The user can select requests and responses
    from which part of the tools needs to be logged.'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '**日志记录**：这很简单明了。此设置允许用户控制HTTP请求的日志记录。用户可以选择需要记录的工具的请求和响应的部分。'
- en: This covers the **Project** **options** parts. Most of the time during a scan,
    these are not altered unless and until a special configuration is required, and
    hence it is good to have knowledge of all these settings to better understand
    what to do when a scenario arises. Let's move on to the next tab, the **User options**
    tab.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这涵盖了**项目** **选项**部分。在扫描期间，除非需要特殊配置，否则大多数情况下这些都不会被更改，因此了解所有这些设置以更好地理解在出现情景时该怎么做是很有必要的。让我们继续下一个选项卡，**用户选项**选项卡。
- en: User options
  id: totrans-256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户选项
- en: The **User options** tab contains all the settings a user can configure for
    Burp to run by default every time it is started. Most of the settings are similar
    to the ones seen in the **Project** **options**; the only difference is that this
    is a permanent configuration every time Burp is run, whereas the **Project options**
    are configured only when the project has special requirements.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户选项**选项卡包含用户可以配置的所有设置，以便Burp在每次启动时都能默认运行。大多数设置与**项目** **选项**中看到的设置类似；唯一的区别是这是每次运行Burp时的永久配置，而**项目选项**仅在项目有特殊要求时配置。'
- en: 'The following four tabs are available in the **User options**:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户选项**中有以下四个选项卡：'
- en: '**Connections**'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接**'
- en: '**SSL **'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL**'
- en: '**Display**'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示**'
- en: '**Misc**'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他**'
- en: '![](img/aa4d09e7-a2a9-44a6-8f5f-11b322fc27ae.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa4d09e7-a2a9-44a6-8f5f-11b322fc27ae.png)'
- en: 'Let''s look at the following screenshot to see the available settings for the **Connections**
    tab:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下以下屏幕截图，以查看**连接**选项卡的可用设置：
- en: 'The **Connections** tab has the following set of options:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '**连接**选项卡有以下一组选项：'
- en: '**Platform Authentication  ...**'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台认证 ...**'
- en: Reconnaissance and file discovery
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 侦察和文件发现
- en: In this module, we are going to see how to do reconnaissance to detect files
    and folders in the application via Burp. This phase is important because it helps
    in mapping the entire site structure, since there could be certain folders that
    aren't available via site hyperlinks but are at times available on the application.
    Often people end up finding a lot of sensitive folders and files hosted on the
    web application under the scope. The capability to detect such files and folders
    totally depends upon the strength of the wordlist available. Let us go ahead and
    see how we can do this using Burp Suite.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在本模块中，我们将看到如何通过Burp进行侦察，以便检测应用程序中的文件和文件夹。这个阶段很重要，因为它有助于映射整个站点结构，因为可能有一些文件夹通过站点超链接不可用，但有时在应用程序上是可用的。通常人们最终会发现很多敏感文件和文件夹托管在网络应用程序的范围内。检测这些文件和文件夹的能力完全取决于可用的字典的强度。让我们继续看看如何使用Burp
    Suite来做到这一点。
- en: Using Burp for content and file discovery
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Burp进行内容和文件发现
- en: For this module, we are going to use **OWASP BWA** and do a discovery of all
    the files and folders in the set of applications available. We will see how to
    configure and set up the necessary parameters over Burp to perform a content discovery.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本模块，我们将使用**OWASP BWA**并发现可用应用程序中的所有文件和文件夹。我们将看到如何配置和设置Burp上必要的参数以执行内容发现。
- en: 'Start the OWASP BWA VM and note down the IP address, access the application
    in a browser, and check your sitemap in Burp Suite. It should look something like
    this:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 启动OWASP BWA VM并记录IP地址，在浏览器中访问应用程序，并在Burp Suite中检查您的站点地图。它应该看起来像这样：
- en: '![](img/b46e2e2e-84dd-482d-8093-532232ed726d.png)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b46e2e2e-84dd-482d-8093-532232ed726d.png)'
- en: Go ahead and right-click on the URL address, then select Engagement tools, and
    then click on Discover content. It will show you the different sets of parameters
    that you can specify to begin the automated ...
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 继续右键单击URL地址，然后选择参与工具，然后单击发现内容。它将显示您可以指定以开始自动化...的不同参数集。
- en: Summary
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: As a quick summary, we have seen the different stages of an application pentest
    and we will now start looking at the different vulnerabilities and how we can
    use Burp to find those vulnerabilities. Along with this, we have also seen the
    different functions available in Burp and what configurations are made available
    to the user to easily use the proxy interception.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们已经看到了应用程序渗透测试的不同阶段，现在我们将开始查看不同的漏洞以及如何使用Burp来发现这些漏洞。除此之外，我们还看到了Burp中可用的不同功能以及为用户提供的配置，以便轻松使用代理拦截。
- en: In the next chapter we will be planning the approach to application penetration
    testing
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将规划应用程序渗透测试的方法
