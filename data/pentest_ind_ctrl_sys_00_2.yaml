- en: '*Chapter 1*: Using Virtualization'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第1章*：使用虚拟化'
- en: This first chapter touches on the relevance of **virtualization** and the importance
    of familiarizing yourself with the different flavors, including VirtualBox, Hyper-V,
    KVM, VMware, and more. However, in this book, we are going to focus on VMware,
    and specifically ESXi Hypervisor, as it is free and a scaled version of what you
    will see out in the real world when it comes to production. We are going to spin
    up Hypervisor in efforts to create our own lab, install a handful of **virtual
    machines** (**VMs**), and attempt to mimic a virtual **Supervisory Control and
    Data Acquisition** (**SCADA**) environment.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的第一章涉及**虚拟化**的相关性以及熟悉不同版本的重要性，包括 VirtualBox、Hyper-V、KVM、VMware 等。然而，在本书中，我们将专注于
    VMware，特别是 ESXi Hypervisor，因为它是免费的，并且在生产环境中能看到的东西的一个缩小版本。我们将启动 Hypervisor 来创建我们自己的实验室，在其中安装一些**虚拟机**（**VM**），并尝试模仿虚拟**监控与数据采集**（**SCADA**）环境。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要内容：
- en: Understanding what virtualization is
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解虚拟化是什么
- en: Discovering what VMware is
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 VMware 是什么
- en: Turning it all on
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开所有内容
- en: Routing and rules
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由和规则
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您将需要以下内容：
- en: A computer that supports virtualization and dual interfaces
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持虚拟化和双接口的计算机
- en: VMWare ESXi
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMWare ESXi
- en: VMWare Fusion
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMWare Fusion
- en: Ubuntu ISO
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 镜像
- en: Windows 7 ISO
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 7 镜像
- en: Kali Linux ISO
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux 镜像
- en: 'The following are the links that you can navigate to download the software:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您可以导航到下载软件的链接：
- en: 'macOS Fusion: [https://www.vmware.com/products/fusion/fusion-evaluation.html](https://www.vmware.com/products/fusion/fusion-evaluation.html)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS Fusion：[https://www.vmware.com/products/fusion/fusion-evaluation.html](https://www.vmware.com/products/fusion/fusion-evaluation.html)
- en: 'Windows: [https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html](https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows：[https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html](https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html)
- en: 'ESXi: [https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi7](https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi7)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ESXi：[https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi7](https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi7)
- en: 'Kali Linux: [https://www.kali.org/downloads/](https://www.kali.org/downloads/)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux：[https://www.kali.org/downloads/](https://www.kali.org/downloads/)
- en: Understanding what virtualization is
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解虚拟化是什么
- en: Virtualization, in layman's terms, is the method of simulating any combination
    of hardware and software in a purely software medium. This allows anyone to run
    and test an endless number of hosts without incurring the financial burden and
    the costs of hardware requirements. It is especially useful if you have distro
    commitment issues.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化，通俗来讲，是通过纯软件的方式模拟任意硬件和软件组合的方法。这使得任何人都可以运行和测试无数个主机，而无需承担硬件要求的财务负担和成本。如果您有发行版承诺问题，这将特别有用。
- en: I cannot emphasize the importance of understanding the inner workings of virtualization
    enough. This technology has become the foundation on which all development and
    testing is performed and built. Every engagement that I have been involved in
    has had large parts of their infrastructure running on some sort of virtualization
    platform. Having concrete knowledge of how virtualization works is pivotal for
    any engagement, and you can perform reconnaissance of your *victim's* organization
    or technology and reproduce it inside your **virtual lab**.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我无法强调理解虚拟化内部工作原理的重要性有多大。这项技术已经成为所有开发和测试都进行和构建的基础。我参与的每个项目都有其基础设施的大部分在某种虚拟化平台上运行。了解虚拟化如何运作的具体知识对于任何项目至关重要，您可以在您的*受害者*组织或技术上执行侦察，并在您的**虚拟实验室**内重现它。
- en: Performing some simple **Open Source Intelligence** (**OSINT**), you can easily
    discover what networking equipment an organization is utilizing, including their
    firewall technology, endpoint protection, and what **Operational Technology Intrusion
    Detection System** (**OT IDS**) that the company has installed. With this information,
    you can navigate to the websites of your newly discovered intel and download **VM**
    instances of the software and spin it up alongside your new, homegrown virtual
    environment. From here, you can plan out every angle of attack, design multiple
    scenarios of compromise, establish how and where to pivot into lower segments
    of the network, build payloads to exploit known vulnerabilities, and ultimately
    gain the *keys* to the kingdom. This technique will be discussed in further chapters,
    but know that it is key to building out an attack path through an organization's
    infrastructure.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通过进行一些简单的**开源情报**（**OSINT**）工作，你可以轻松发现一个组织正在使用的网络设备，包括他们的防火墙技术、终端保护以及公司安装的**操作技术入侵检测系统**（**OT
    IDS**）。有了这些信息，你可以访问你新发现的情报的官方网站，下载该软件的**虚拟机**实例，并将其与新搭建的本地虚拟环境一起运行。从这里，你可以规划每一个攻击角度，设计多种妥协场景，确定如何以及在哪里进入网络的低层段，构建利用已知漏洞的有效载荷，并最终获得*王国的钥匙*。这个技巧将在后续章节中进一步讨论，但要知道，它是构建攻击路径、渗透组织基础设施的关键。
- en: One of the most important features of virtualization is the use of snapshots.
    If, at any point, you "brick" a box, you can roll it back and start afresh, documenting
    the failed attempt and ultimately avoiding this pitfall on the live engagement.
    This allows you to try a variety of attacks with little fear of the outcome, as
    you know you have a stable copy to revert to. There are numerous flavors of virtualization
    vendors/products that I have come in contact with over the course of my career.
    These include *VMware*, *VirtualBox*, *Hyper-V*, *Citrix*, and *KVM*. Each has
    their own pros and cons. I have defaulted to VMware and will go forward through
    this book, utilizing the various products by them.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化的一个最重要特性是使用快照。如果在任何时候，你“弄坏”了一台设备，你可以将其恢复到之前的状态，从头开始，记录下失败的尝试，并最终避免在实际操作中遇到同样的问题。这样，你可以尝试各种攻击方式，而不必太担心结果，因为你知道可以恢复到一个稳定的副本。我在职业生涯中接触过许多虚拟化厂商/产品，包括*VMware*、*VirtualBox*、*Hyper-V*、*Citrix*
    和 *KVM*。每个都有其优缺点。我默认使用 VMware，并将在本书中继续使用他们的各种产品。
- en: In no way shape or form is this any sales pitch for VMware; just know that VMWare
    is easier to work with as there is near seamless integration across the ecosystem
    of products, which, almost irritatingly so, has made it become the medium that
    organizations are embracing in their environments.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，这绝不是对 VMware 的任何销售推广；只需要知道，VMware 更容易使用，因为其在整个产品生态系统中的集成几乎是无缝的，几乎让人感到恼火，因此它已经成为组织在其环境中采纳的中介。
- en: Understanding the important role that virtualization plays in **pentesting**
    will help strengthen your budding career. Practicing spinning up a basic VM on
    each stack will help you understand the nuances of each platform and learn the
    intricacies of virtual hardware dependencies. As a bonus, by familiarizing yourself
    with each hypervisor vendor, you will figure out which software you prefer and
    really dig deep to learn the ins and outs of it. With all this said, I will be
    using VMware going forward to build the lab.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 理解虚拟化在**渗透测试**中的重要作用，将有助于你加强新兴的职业生涯。练习在每个平台上启动基本的虚拟机，将帮助你理解每个平台的细节，并学习虚拟硬件依赖关系的复杂性。作为奖励，通过熟悉每个虚拟化平台，你将能够找出你更喜欢哪款软件，并深入挖掘其细节。说到这里，我将使用
    VMware 来构建实验室。
- en: Discovering what VMware is
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发现 VMware 是什么
- en: VMware was founded in 1998, launching their first product, *VMware workstation,*
    in 1999\. 3 years after the company was founded, they released **GSX** and **ESX**
    into the server market. **Elastic Sky X** (**ESX**) retained the name until 2010\.
    The "i" was added after VMware invested time and money into upgrading the OS and
    modernizing the user interface. The product is now dubbed **ESX integrated** (**ESXi**).
    If you are reading this, I think it is safe for me to assume that you have perused
    a few books on related topics, since most books cover **Desktop Hypervisors**
    such as *Player*, *Workstation*, and/or *Fusion*. I want to take this a step further
    and provide some hands-on exposure and practice with ESXi in the next section.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: VMware 成立于 1998 年，并于 1999 年推出了他们的首个产品，*VMware workstation*。公司成立三年后，他们将 **GSX**
    和 **ESX** 推向了服务器市场。**Elastic Sky X**（**ESX**）一直保留该名称，直到 2010 年。之后，VMware 投入时间和资金对操作系统进行升级并现代化用户界面，增加了
    "i" 字母，产品也因此被称为 **ESX 集成**（**ESXi**）。如果你正在阅读这篇文章，我想我可以合理地假设你已经浏览过几本相关书籍，因为大多数书籍都涉及
    **桌面虚拟化管理程序**，如 *Player*、*Workstation* 和/或 *Fusion*。接下来，我想更进一步，带你进行一些实际操作和 ESXi
    的实践体验。
- en: OK, maybe that was a slightly sales-y pitch, but I can honestly say that I have
    never worked for VMware and do not get any royalties for plugging their technology.
    However, I feel it would do you a disservice to not take you through a hands-on
    practical experience with technology that you will most certainly discover out
    there in the field. I have personally encountered VMware in the verticals of oil
    and gas, energy, chemical, pharma, consumer product production, discrete manufacturing,
    and amusement parks, to name a few.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，也许这有点像营销宣传，但我可以诚实地说，我从未为 VMware 工作，也没有因宣传他们的技术而获得任何版税。然而，我觉得如果不带你亲身体验一下这项技术，我会对你不公平，因为你在实际工作中一定会遇到它。我个人在石油和天然气、能源、化工、制药、消费品生产、离散制造和主题公园等领域遇到过
    VMware，仅举几个例子。
- en: 'A typical production solution consists of the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的生产解决方案包括以下内容：
- en: '**Distributed Resource Scheduler** (**DRS**)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分布式资源调度器**（**DRS**）'
- en: '**High Availability** (**HA**)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高可用性**（**HA**）'
- en: Consolidated Backup
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合备份
- en: VCenter
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VCenter
- en: Virtual machines
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟机
- en: ESXi servers
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ESXi 服务器
- en: '**Virtual Machine File System** (**VMFS**)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟机文件系统**（**VMFS**）'
- en: '**Virtual symmetric multi-processing** (**SMP**)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟对称多处理**（**SMP**）'
- en: 'For a better overview of these specific components, please reference the following
    web page: [https://www.vmware.com/pdf/vi_architecture_wp.pdf](https://www.vmware.com/pdf/vi_architecture_wp.pdf).'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 若想更好地了解这些特定组件，请参考以下网页：[https://www.vmware.com/pdf/vi_architecture_wp.pdf](https://www.vmware.com/pdf/vi_architecture_wp.pdf)。
- en: I do not want to deep dive into VMware; instead, I simply want to make you aware
    of some of the pieces of technology that will be encountered when you're on an
    engagement. I do, however, want to call out the core stack, which consists of
    vCenter, ESXi servers, and VMs. These are the building blocks of almost all virtualization
    implementations in large organizations. vCenters control ESXi servers, and ESXi
    servers are where VMs live. Knowing this will help you understand the path of
    **Privilege Escalation** once you get a foothold of a VM inside the operational
    layer of the company. I have had many of conversations with security personnel
    over the years around **Separation of Duties** (**SoD**), and teams dedicated
    to their applications are more than happy to explain the great pain and lengths
    they have gone through to adhere to **Confidentiality**, **Integrity**, and **Availability**
    (**CIA**). When performing tabletop exercises with these same teams and asking
    them "*Who controls the ESXi server your app lives on?*" and then continuing with,
    "*What is your total exposure if your vCenter is compromised?*" you'll find that
    the answers, in most cases, will shock you, if not terrify you to the bone. I
    challenge you to ask your IT/OT team – or whoever is managing your virtual infrastructure
    – how many VMs are running per server. Then, follow that up with, *"When is the
    last time you performed a* **Disaster Recovery** *(***DR***) failover test*?"
    Knowing if a piece of the critical control is running inside an over-taxed server
    with minimal resources is quite useful from a risk mitigation point of view, but
    for the purpose of this book, we need to exploit a weakness in an overlooked component
    in the system.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我不打算深入探讨 VMware；相反，我只是想让你了解一些在参与工作时会遇到的技术组成部分。然而，我确实想强调核心技术栈，包括 vCenter、ESXi
    服务器和虚拟机（VM）。这些几乎是大规模组织中所有虚拟化实施的基础。vCenter 控制着 ESXi 服务器，而 ESXi 服务器是虚拟机存在的地方。了解这一点将帮助你理解**权限提升**的路径，一旦你在公司运营层的虚拟机上站稳脚跟。多年来，我与安全人员进行了许多关于**职责分离**（**SoD**）的讨论，负责应用程序的团队也乐意向我解释他们为遵守**保密性**、**完整性**和**可用性**（**CIA**）所付出的巨大努力和艰难历程。在与这些团队进行桌面演练时，问他们“*谁控制着你们应用所在的
    ESXi 服务器？*”然后接着问，“*如果你们的 vCenter 被攻破，你们的暴露面有多大？*”，你会发现，大多数情况下，他们的回答会让你震惊，甚至让你感到不寒而栗。我挑战你去问问你的
    IT/OT 团队——或者任何管理你虚拟基础设施的人——每台服务器上运行了多少虚拟机。然后继续问，*“你们上一次进行**灾难恢复**（**DR**）故障转移测试是什么时候？”*
    知道关键控制是否运行在一个资源紧张的超负荷服务器上，从风险缓解的角度来看是非常有用的，但本书的目的是利用系统中一个被忽视的组件的弱点。
- en: 'The following diagram shows the relationship between the different components
    we mentioned previously and how they integrate with each other:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了我们之前提到的不同组件之间的关系，以及它们如何相互集成：
- en: '![Figure 1.1 – VMware infrastructure'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.1 – VMware 基础架构'
- en: '](image/Figure_1.01_B16321.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.01_B16321.jpg)'
- en: Figure 1.1 – VMware infrastructure
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – VMware 基础架构
- en: I performed some work for a **Steam Assisted Gravity Drainage** (**SAGD**) heavy
    oil company, and part of their claim was the virtualization of the *Rockwell PlantPAX
    DCS*. This was all on top of an *ESXi cluster* inside a robust *vSphere* platform.
    The biggest takeaway from understanding VMware is that, at an enterprise level,
    vSphere is the **platform**, and ESXi is the **hypervisor**. In this book, I will
    be posting screenshots of **VMware Fusion**, which is the macOS-specific desktop
    platform and that of ESXi. If you are using Windows, you have two options – **VMPlayer**
    or **VMWorkstation**. I will focus most of my time and demos on ESXi as I feel
    that understanding this technology is the most important task for proceeding down
    the yellow brick road of *industrial pentesting*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾为一家**蒸汽辅助重力排水**（**SAGD**）重油公司工作，他们的部分声明内容是将*Rockwell PlantPAX DCS*虚拟化。这一切都建立在*ESXi
    集群*之上，运行在一个强大的*vSphere*平台上。理解 VMware 的最大收获是，在企业级别，vSphere 是**平台**，而 ESXi 是**虚拟机监控程序**。在本书中，我将展示**VMware
    Fusion**的截图，它是 macOS 专用的桌面平台，还有 ESXi 的截图。如果你使用 Windows，有两个选择——**VMPlayer** 或 **VMWorkstation**。我将重点介绍
    ESXi，因为我认为理解这项技术是进行工业渗透测试的关键任务。
- en: In this section, we touched on what VMware is, called out the core components
    that make up a virtual stack, and shared some real-world examples of what you
    will find out there in the wild. Now, the next step is diving right into it and
    *turning it all on*. We will start by walking through the installation processes
    for VMware Fusion, VMware ESXi, and VMs in order to create a virtual **Supervisory
    Control and Data Acquisition** (**SCADA**) environment for our testing in further
    chapters.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们介绍了 VMware 的基本概念，讲解了构建虚拟化栈的核心组件，并分享了一些你在实际环境中可能遇到的实例。接下来，我们将直接进入正题，*启动所有服务*。我们将从
    VMware Fusion、VMware ESXi 和虚拟机的安装过程开始，为后续章节中的测试创建一个虚拟的 **监控控制与数据采集**（**SCADA**）环境。
- en: Turning it all on
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动所有服务
- en: Now that we've touched on what virtualization is, the next step is to build
    the backbone of our lab by installing VMware Fusion, a VMware ESXi server, and
    four VMs to simulate a SCADA environment. This is more of a conversation starter
    or a full disclosure for me to say this, but if the first two sections were a
    struggle, then it only gets harder from here, and there are many well-written
    resources out there you can reference or read prior to tackling this subject matter.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经简要了解了虚拟化是什么，下一步是通过安装 VMware Fusion、VMware ESXi 服务器和四个虚拟机来构建实验室的核心，以模拟
    SCADA 环境。这更像是一个话题的引入或是我想全盘托出的声明，如果前两个部分让你觉得困难，那么接下来只会更难，并且有许多写得很好的资源可以参考或在深入探讨这个主题之前阅读。
- en: With that said, let's get started by standing up the virtual portion of our
    lab. I don't want to pull a "digital chad" and get lost in pontificating about
    processors, RAM, storage, and shenanigans. However, talking about hardware is
    inevitable – in other words, the more cores and the more RAM we have, the better
    it is. I have found it possible to run **Fusion** on a *Mac* with 8 GB of ram,
    but it was very limiting, and if you open Google Chrome to research anything,
    then consider your system as hitting a wall and starting to **page** (see the
    following note to see what this means).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，让我们开始搭建实验室的虚拟部分。我不想当一个“数字土豪”，也不想在处理器、RAM、存储和其他琐事上浪费时间。不过，谈论硬件是不可避免的——换句话说，我们拥有的核心数和内存越多，就越好。我发现即使在配备
    8 GB RAM 的*Mac*上运行**Fusion**也是可行的，但它非常受限，如果你打开 Google Chrome 进行任何研究，那就得准备好接受系统崩溃的现实，开始**分页**（请参阅下面的提示，了解这是什么意思）。
- en: Important note
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When a computer runs out of RAM, the system will move pages of memory out of
    RAM and into the disk space in an attempt to free up memory for the computer to
    keep functioning. This process is called **paging**. One major culprit of this
    is Google Chrome.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当计算机内存不足时，系统会将部分内存内容从 RAM 移动到磁盘空间中，以释放内存供计算机继续运行。这一过程称为**分页**。Google Chrome
    是导致这一问题的主要罪魁祸首之一。
- en: With this being a painful personal experience, I would suggest a minimum of
    16 GB of RAM with 4 cores. Most systems these days come with this by default.
    I would be lying if I did not say I was looking at the new *PowerBook*, which
    can handle 64 GB of RAM with 8 cores. Now, spinning up ESXi requires a bit of
    a beefier system. I first started my lab with a *Dell PowerEdge R710*. I hunted
    around for legacy (or decommissioned) equipment that I could pick up for a minimal
    cost and found some great deals. Since then, I have migrated to *Gigabyte Brix*
    and *Intel NUCs*, of which the sheer size devolves from that of a kitchen table
    to the size of a cell phone and the noise ratio from that of a hair dryer to a
    pin dropping in a library, are hands down the reasons for making the Brix or NUC
    a logical choice for running VMware ESXi on. I do have to say that I have been
    looking at the *SuperMicro IOT* server, which allows for *Server Class* memory
    but maintains the small form factor and noise ratio of the Gigabyte Brix and NUC.
    Going forward with the ESXi setup, I will be using a reclaimed crypto mining rig
    to build my server on, as I have a few kicking around that allow me to add more
    memory to the system.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一次痛苦的个人经历，我建议至少配备 16 GB 的 RAM 和 4 个核心。如今大多数系统默认都配备了这个配置。如果我说我在看新的*PowerBook*，它可以处理
    64 GB 的 RAM 和 8 个核心，那我就是在说实话。现在，启动 ESXi 需要更强大的系统。我最初是用*Dell PowerEdge R710*开始我的实验室的。我四处寻找可以以最低成本获取的旧设备（或停用的设备），并发现了一些不错的交易。从那时起，我转向了*Gigabyte
    Brix*和*Intel NUC*，它们的体积从厨房桌子的大小变成了手机的大小，噪音比吹风机低到图书馆里掉下的针一样，这些因素毫无疑问是让我选择 Brix
    或 NUC 来运行 VMware ESXi 的原因。我还得说，我一直在关注*SuperMicro IOT*服务器，它允许使用*服务器级*内存，同时保持与 Gigabyte
    Brix 和 NUC 相似的小巧外形和低噪音比。未来的 ESXi 设置中，我将使用一个回收的加密矿机来构建我的服务器，因为我有几个这样的设备，可以让我向系统中添加更多内存。
- en: 'The quick specifications are as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 快速规格如下：
- en: AMD Ryzen 7 3800X
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AMD Ryzen 7 3800X
- en: 128 GB RAM
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 128 GB RAM
- en: 2 TB or disk
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2 TB 或磁盘
- en: These are not by any means the requirements that you must adhere to. They're
    simply what I have pieced together from leftover parts. I personally recommend
    any of the Intel NUC products that carry 16 GB or more of RAM, and a minimum of
    two network interfaces.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这些并不是你必须遵循的要求。它们只是我从剩余的零部件中拼凑出来的。我个人推荐任何配备 16 GB 或更多 RAM 和至少两个网络接口的 Intel NUC
    产品。
- en: 'Here is a link that you can go to in order to browse their product line: [https://simplynuc.com/9i9vx/](https://simplynuc.com/9i9vx/).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个链接，你可以访问它来浏览他们的产品线：[https://simplynuc.com/9i9vx/](https://simplynuc.com/9i9vx/)
- en: 'In this section, we will be covering the following subtopics:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将涵盖以下子主题：
- en: How to install Fusion
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何安装 Fusion
- en: How to install Hypervisor
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何安装 Hypervisor
- en: Spinning up Ubuntu as a pseudo-**Programmable Logic Controller** (**PLC**)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动 Ubuntu 作为伪**可编程逻辑控制器**（**PLC**）
- en: Spinning up Ubuntu as a pseudo-SCADA
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动 Ubuntu 作为伪 SCADA
- en: Spinning up Windows Engineering Workstation
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动 Windows 工程工作站
- en: Spinning up Kali Linux
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动 Kali Linux
- en: Setting up network segmentation to mimic a model similar to Purdue
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置网络分段，以模拟类似于普渡大学的模型
- en: Let's get started!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧！
- en: How to install Fusion
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何安装 Fusion
- en: 'The first step to installing Fusion will be to download Fusion from the following
    link:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Fusion 的第一步是从以下链接下载 Fusion：
- en: '[https://www.vmware.com/products/fusion/fusion-evaluation.html](https://www.vmware.com/products/fusion/fusion-evaluation.html)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.vmware.com/products/fusion/fusion-evaluation.html](https://www.vmware.com/products/fusion/fusion-evaluation.html)'
- en: The process should be straightforward because you have the option of using either
    **Fusion Player** or **Fusion Pro**. I personally use Fusion Pro as out of all
    the tools that I utilize, it has proven to be the most effective one.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程应该是直接的，因为你可以选择使用 **Fusion Player** 或 **Fusion Pro**。我个人使用 Fusion Pro，因为在我使用的所有工具中，它被证明是最有效的。
- en: Once you have installed Fusion, we will move on to installing ESXi Hypervisor.
    We will discuss setting up the networking side of the lab a little later in this
    chapter. For now, continue by downloading Hypervisor.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你安装了 Fusion，我们将继续安装 ESXi Hypervisor。我们将在本章稍后讨论实验室的网络设置。现在，请继续下载 Hypervisor。
- en: How to install ESXi
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何安装 ESXi
- en: 'The first step to installing ESXi will be to download ESXi from the following
    link: [https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi7](https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi7).'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 ESXi 的第一步是从以下链接下载 ESXi：[https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi7](https://my.vmware.com/en/web/vmware/evalcenter?p=free-esxi7)
- en: Note that I will be using *Version 6.7* as I ran into hardware compatibility
    issues with what I pieced together for my lab.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我将使用*版本6.7*，因为我在为我的实验室拼装设备时遇到了硬件兼容性问题。
- en: How to install Hypervisor
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何安装虚拟化软件
- en: 'You will need to perform the following steps:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要执行以下步骤：
- en: 'Unlike Workstation or Fusion, you are required to create a *VMware account*.
    Once you have created your account and verified you are who you say you are, you
    can continue with the download. You will arrive at the following page. You will
    be presented with four options: one for **ISO**, a second ISO package with VMware
    Tools included, a local package in **ZIP** form, and a **README** file:![Figure
    1.2 – Hypervisor download list'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与工作站或Fusion不同，你需要创建一个*VMware账户*。一旦你创建了账户并验证了身份，你就可以继续下载。你将进入以下页面，页面上会展示四个选项：一个是**ISO**文件，第二个是包含VMware工具的ISO包，一个是本地**ZIP**格式包，另一个是**README**文件：![图1.2
    – 虚拟化软件下载列表
- en: '](image/Figure_1.02_B16321.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.02_B16321.jpg)'
- en: Figure 1.2 – Hypervisor download list
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.2 – 虚拟化软件下载列表
- en: Downloading the ISO allows you to burn it onto a USB key and then use that USB
    key to boot from and perform a *bare-metal install* on your system. The real difference
    between the two formats is that the ZIP format allows the user to fine-tune and
    add third-party drivers to publish and build custom ISOs.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下载ISO文件后，你可以将其刻录到USB闪存盘上，然后用该USB闪存盘启动并执行*裸机安装*。这两种格式的主要区别在于，ZIP格式允许用户进行微调并添加第三方驱动程序来发布和构建自定义ISO。
- en: Important note
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: A bare-metal install refers to a machine devoid of any operating system, and
    this is the first time an operating system will be installed on the hard drive
    inside the machine.
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 裸机安装指的是一台没有任何操作系统的机器，这是第一次在机器硬盘上安装操作系统。
- en: This is important if you are looking to **bare metal** a consumer-based PC,
    as not all network drivers are covered in the standard packaged ISO and need to
    be added to a base package prior to publishing. We will not cover this in this
    book.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你打算在消费者级PC上执行**裸机安装**，这点尤为重要，因为标准的ISO包中并不涵盖所有网络驱动程序，且需要在发布前将它们添加到基础包中。我们在本书中不会涉及此内容。
- en: Once you've selected the ISO file, you will be directed to a link that provides
    you with a list of hashes. This is good security hygiene as it provides users
    with a list of hashes to verify the validity of the downloaded package:![Figure
    1.3 – File integrity check
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择ISO文件后，你将被引导到一个链接，提供哈希列表。这是良好的安全习惯，因为它为用户提供了哈希值列表，以验证下载包的有效性：![图1.3 – 文件完整性检查
- en: '](image/Figure_1.03_B16321.jpg)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.03_B16321.jpg)'
- en: Figure 1.3 – File integrity check
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.3 – 文件完整性检查
- en: We wouldn't be good security practitioners if we didn't confirm the file's integrity
    by running a **hash check**. This is very important to ensure that the file hasn't
    been tampered with mid-stream. Now, some of you who have been following the news
    would say that *supply chain* attacks circumvent this type of verification. An
    example of a supply chain attack is *SolarWinds Orion*, where it was suspected
    that an APT group, dubbed *Cozy Bear*, updated Orion's code repository and made
    a hash check useless as a developer published code. This generated a hash that
    encapsulated malware and clean code, before validating that it was the source
    of truth. Regardless, it is still a good practice to always check the file hash,
    thus preventing **Script Kiddies** from getting a foothold inside your lab.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们没有通过运行**哈希检查**来确认文件的完整性，那我们就不是合格的安全从业人员了。这一点非常重要，以确保文件在传输过程中没有被篡改。现在，一些关注新闻的人可能会说，*供应链*攻击能够绕过这种验证。一个供应链攻击的例子是*SolarWinds
    Orion*，当时有人怀疑一个APT组织，名为*Cozy Bear*，更新了Orion的代码库，并使哈希检查失效，因为开发者发布了包含恶意软件和清洁代码的哈希值，然后验证它是否为真实来源。无论如何，始终检查文件的哈希值仍然是一个好的做法，可以防止**脚本小子**在你的实验室内立足。
- en: Important note
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: Typically, Script Kiddies are inexperienced hackers that have downloaded a piece
    of software where they don't completely understand the outcome of what they are
    about to run, but simply run it anyway as they don't really care what the results
    or impact of their attacks are, as long as it does something.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通常，脚本小子是一些经验不足的黑客，他们下载了一款软件，但并不完全理解运行该软件后的结果是什么，只是因为他们并不关心攻击的结果或影响，只要它能做点什么，他们就会运行它。
- en: Proceed by running your hash check on your newly downloaded ISO file. As shown
    in the following screenshot, I performed a **SHA-1** check and compared it to
    the **SHA1SUM** check that VMware supplies:![Figure 1.4 – SHA-1 checksum
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行哈希检查来检查你新下载的 ISO 文件。正如以下截图所示，我进行了**SHA-1**检查，并将其与 VMware 提供的**SHA1SUM**检查进行了比较：![图1.4
    – SHA-1 校验和
- en: '](image/Figure_1.04_B16321.jpg)'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.04_B16321.jpg)'
- en: Figure 1.4 – SHA-1 checksum
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.4 – SHA-1 校验和
- en: Now that we have confirmed that the hashes match, we will want to burn this
    to a *USB key* so that we can boot from the USB key and install ESXi on our server.
    I have come to rely heavily on **balenaEtcher** for creating bootable USB keys.
    Once you have manually built hundreds, if not thousands, of USB keys, the simplicity
    that comes with **Etcher** is a godsend.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经确认哈希匹配，我们需要将此内容刻录到*USB 密钥*上，以便可以从 USB 密钥启动并在服务器上安装 ESXi。我已经非常依赖**balenaEtcher**来创建可启动的
    USB 密钥。一旦你手动制作了几百个，甚至上千个 USB 密钥，**Etcher**带来的简便性真的是一种福音。
- en: 'Navigate to *balenaEtcher''s* website and download the software by following
    the link here: [https://www.balena.io/etcher/](https://www.balena.io/etcher/).'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问*balenaEtcher*官网并下载软件，可以通过以下链接进行下载：[https://www.balena.io/etcher/](https://www.balena.io/etcher/)。
- en: Download *balenaEtcher* and launch the tool. You will encounter the following
    screen. You need to click on **Select image** and choose the hypervisor image:![Figure
    1.5 – Selecting an image to burn
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载*balenaEtcher*并启动工具。你将看到以下界面。你需要点击**选择镜像**并选择虚拟化管理程序镜像：![图1.5 – 选择要烧录的镜像
- en: '](image/Figure_1.05_B16321.jpg)'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.05_B16321.jpg)'
- en: Figure 1.5 – Selecting an image to burn
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.5 – 选择要烧录的镜像
- en: 'The following warning will be raised because *balena* searches the ISO for
    a *GPT* or *MBR* **partition table** and warns the user if it cannot find one.
    You can proceed by flashing your USB key, as there shouldn''t be any issues booting
    from the key:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于*balena*会搜索 ISO 文件中的*GPT*或*MBR* **分区表**，如果未能找到，它会提醒用户，因此会出现以下警告。你可以继续闪存到 USB
    密钥，因为从密钥启动应该没有任何问题：
- en: '![Figure 1.6 – Missing partition table warning'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图1.6 – 缺少分区表警告'
- en: '](image/Figure_1.06_B16321.jpg)'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.06_B16321.jpg)'
- en: Figure 1.6 – Missing partition table warning
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.6 – 缺少分区表警告
- en: Once you've clicked on **Continue**, the tool will take you to the following
    screen, and it will take only a few minutes to complete. Take a break and go top
    up your coffee or preferred vice, and by the time you return, it will be completed.
    Once it has finished, remove the USB key and insert it into the machine that you
    will bare-metal build on top of:![Figure 1.7 – Flashing USB key
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**继续**后，工具会带你进入下一个界面，整个过程只需要几分钟。趁此机会休息一下，去补充你的咖啡或其他偏好的饮品，等你回来时，它应该已经完成。一旦完成，拔出
    USB 密钥并插入你将要进行裸机构建的机器：![图1.7 – 刷写 USB 密钥
- en: '](image/Figure_1.07_B16321.jpg)'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.07_B16321.jpg)'
- en: Figure 1.7 – Flashing USB key
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.7 – 刷写 USB 密钥
- en: In the past, I have built out various hypervisor servers on the *Intel NUC*,
    *Gigabyte Brix*, *Supermicro IoT*, and *Dell PowerEdge* servers. For demonstration
    purposes, I have decided to repurpose some old equipment that was used for crypto
    mining, but that is a whole other topic, possibly for another book. Depending
    on your budget for a lab, I have had great success finding some good equipment
    on *eBay*. I just did a quick search and found some great 1U servers for around
    $150.00 USD.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 过去，我在*Intel NUC*、*Gigabyte Brix*、*Supermicro IoT*和*Dell PowerEdge*等服务器上构建过各种虚拟化管理程序服务器。为了演示，我决定重新利用一些以前用于加密货币挖矿的旧设备，但这是另一个话题，可能会在另一本书中讨论。根据你的实验室预算，我在*eBay*上找到了很多不错的设备，效果很好。我刚做了个快速搜索，找到了几台大约
    $150.00 美元的 1U 服务器。
- en: Going forward, I am assuming that you have suitable gear that can boot off the
    USB key and bare-metal install hypervisor. Once you've powered on the system,
    your system will boot off your newly minted USB key. You must then set up your
    **User name** and **Password**, as shown in the following screenshot, and then
    set the IP address to either dynamic via DHCP or set a static address. Once you
    have set your management IP address, you can open a web browser and navigate to
    the GUI:![Figure 1.8 – VMware ESXi login
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我假设你有合适的设备，可以从 USB 密钥启动并进行裸机安装虚拟化管理程序。一旦你开机，系统将从你新制作的 USB 密钥启动。你接着需要设置**用户名**和**密码**，如以下截图所示，然后设置
    IP 地址，可以通过 DHCP 获取动态地址，或者设置静态地址。一旦设置好了管理 IP 地址，你就可以打开网页浏览器并访问 GUI：![图1.8 – VMware
    ESXi 登录
- en: '](image/Figure_1.08_B16321.jpg)'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.08_B16321.jpg)'
- en: Figure 1.8 – VMware ESXi login
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.8 – VMware ESXi 登录
- en: 'Log in with the **User name** and **Password** details that you configured
    during installation. Once authenticated, you will be presented with the host management
    page for **ESXi**, as shown in the following screenshot:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用在安装过程中配置的**用户名**和**密码**登录。认证通过后，您将看到 **ESXi** 的主机管理页面，如下截图所示：
- en: '![Figure 1.9 – VMware ESXi dashboard'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.9 – VMware ESXi 仪表盘](image/Figure_1.09_B16321.jpg)'
- en: '](image/Figure_1.09_B16321.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.09_B16321.jpg)'
- en: Figure 1.9 – VMware ESXi dashboard
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – VMware ESXi 仪表盘
- en: If you have arrived here with minimal effort, then you are in good shape. With
    that, we have successfully installed VMware Fusion and VMware ESXi on hardware
    in our lab. We are now one step closer to having a fully working **Industrial
    Control System** (**ICS**) lab. We will be installing the VMs on top of our new
    server in the next section.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您通过最小的努力已经到达这里，那么说明一切顺利。至此，我们已成功在实验室硬件上安装了 VMware Fusion 和 VMware ESXi。我们距离建立一个完全运行的**工业控制系统**（**ICS**）实验室又近了一步。在接下来的章节中，我们将在新服务器上安装虚拟机（VM）。
- en: Spinning up Ubuntu as a pseudo-PLC/SCADA
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Ubuntu 启动为伪 PLC/SCADA
- en: We are going to simulate a virtual **Programmable Logic Controller** (**PLC**)
    and **SCADA** combination to build a *test bench* that will help shape our approach
    as we progress through this book. A PLC is typically a small, ruggedized computer
    used to control industrial processes. These processes can range from people movers
    at an airport to devices controlling *SpaceX's Falcon 9*; from very simple discrete
    on-and-off tasks to very complex cascading control tasks. We can find automation
    systems in oil and gas, energy generation, transmission and distribution so that
    we can charge our iPhones and Android devices, food and beverage production such
    as Coca Cola, chemical mixing and bottling, pharmaceutical manufacturing such
    as Pfizer vaccine generation, transportation with avionics for controlling airplane
    flight systems, hospitals for monitoring patients, and many more industries. PLCs
    are everywhere, and these devices control everything around us that we take for
    granted as we go about our daily lives. SCADA is an overarching system that's
    used to control a larger set of defined processes. Taking the first case example
    of people movers, you can have a single PLC controlling the local physical on-and-off
    behavior and the speed of a people mover. This data is then published and controlled
    by a SCADA system, which allows an operator to have remote control of how this
    process operates. This combination of PLC and SCADA would be overkill for a single
    process, so where SCADA really shines is when you want to control all the people
    movers in an airport, mall, or even the strip in Vegas. The SCADA system can start
    and stop individual processes or all processes all at once. It's powerful in the
    sense that protecting this system should be of utmost importance when you're designing
    a security posture.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将模拟一个虚拟的**可编程逻辑控制器**（**PLC**）和**SCADA**组合，建立一个*测试平台*，以帮助我们在本书中逐步形成我们的操作方法。PLC
    通常是一个小型的、坚固耐用的计算机，用于控制工业过程。这些过程可以从机场的人员搬运设备，到控制*SpaceX的猎鹰 9*；从非常简单的开关任务，到非常复杂的级联控制任务。我们可以在石油和天然气、能源生成、传输和分配中找到自动化系统，确保我们可以给
    iPhone 和 Android 设备充电；食品和饮料生产，例如可口可乐；化学混合和灌装；制药制造，例如辉瑞疫苗的生产；交通运输中的飞机电子设备用于控制飞机飞行系统；医院用于监控患者；以及更多的行业。PLC
    无处不在，这些设备控制着我们日常生活中习以为常的事物。SCADA 是一个广泛的系统，用于控制一组更大范围的已定义过程。以人员搬运设备为例，您可以使用一个单独的
    PLC 来控制人员搬运设备的本地开关行为和速度。然后，这些数据会被发布并由 SCADA 系统控制，允许操作员远程控制这个过程的运行。PLC 和 SCADA
    的组合对于单一过程而言可能是过度的，但 SCADA 真正展现优势的地方是当您希望控制机场、购物中心，甚至是拉斯维加斯大道上的所有人员搬运设备时。SCADA
    系统可以启动或停止单独的过程，或者同时启动或停止所有过程。它的强大之处在于，在设计安全防护时，确保保护该系统应该是最重要的。
- en: 'Now that this brief introduction is out of the way, I have chosen to use **Ubuntu**
    as my *Linux distro*. It is developed by *Canonical* and it is a well-maintained
    distro. Getting familiar with it will help you move forward as Canonical has built
    **UbuntuCore**, which is an operating system powering the **Internet of Things**
    (**IoT**) ecosystem. The reason why I am mentioning this is because the **Operational
    Technology** (**OT**) industry is slowly moving toward adopting IoT technology
    to replace legacy equipment. There are many examples of big vendors innovating
    in this space to round out their portfolio of product offerings. OK, that''s enough
    small talk about the future; let''s get to the downloading stage:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这段简短的介绍结束了，我选择使用**Ubuntu**作为我的*Linux 发行版*。它由*Canonical*开发，并且是一个维护良好的发行版。熟悉它将有助于你前进，因为Canonical
    已经开发了**UbuntuCore**，它是一个支持**物联网**（**IoT**）生态系统的操作系统。我提到这个是因为**运营技术**（**OT**）行业正在慢慢转向采用物联网技术来替代传统设备。许多大厂商正在这个领域进行创新，以丰富他们的产品组合。好吧，未来的闲聊就到这里；让我们进入下载阶段：
- en: 'First, navigate to the following link to start your download: [https://ubuntu.com/download/desktop](https://ubuntu.com/download/desktop).'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，导航到以下链接以开始下载：[https://ubuntu.com/download/desktop](https://ubuntu.com/download/desktop)。
- en: 'This will take you to a web page that looks like this:'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将带你到一个类似这样的网页：
- en: '![Figure 1.10 – Ubuntu software download'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.10 – Ubuntu 软件下载'
- en: '](image/Figure_1.10_B16321.jpg)'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.10_B16321.jpg)'
- en: Figure 1.10 – Ubuntu software download
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.10 – Ubuntu 软件下载
- en: Click the **Download** button, and then sit back and wait for it to complete.
    Depending on your connection, it could take a bit of time to download.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下载**按钮，然后坐下来等它完成。根据你的网络连接，下载可能需要一些时间。
- en: 'Once it has completed, we can proceed to installing the *OS*. There are multiple
    ways of doing this. One method is to install on Fusion, then connect to the server
    and upload the VM from Fusion to ESXi. Another option is to transfer the ISO to
    ESXi''s datastore and, from there, configure a new VM with the Ubuntu ISO mounted
    on the virtual DVD drive. We are going to use the datastore method as we want
    to keep as little local as possible as we don''t want to consume our local machines
    resources by hosting multiple VMs. We are going to log into the GUI and, when
    presented with the host management screen, click on the **Datastores** option
    under **Storage**, as shown in the following screenshot:'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下载完成后，我们可以继续安装*操作系统*。有多种方法可以做到这一点。一种方法是在 Fusion 上安装，然后连接到服务器，将虚拟机从 Fusion 上传到
    ESXi。另一种选择是将 ISO 文件传输到 ESXi 的数据存储中，并从那里配置一个新的虚拟机，将 Ubuntu ISO 挂载在虚拟 DVD 驱动器上。我们将使用数据存储方法，因为我们希望尽可能少地使用本地资源，不想通过托管多个虚拟机来消耗本地计算机的资源。我们将登录到
    GUI，在主机管理界面上，点击**存储**下的**数据存储**选项，如下图所示：
- en: '![Figure 1.11 – Storage datastore'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.11 – 存储数据存储'
- en: '](image/Figure_1.11_B16321.jpg)'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.11_B16321.jpg)'
- en: Figure 1.11 – Storage datastore
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.11 – 存储数据存储
- en: Depending on your setup, you may have a *single disk* or *multiple disks*. The
    configuration for this is outside the scope of this book, but ultimately, it is
    up to your own personal preference.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据你的设置，你可能只有*一个磁盘*或*多个磁盘*。这种配置超出了本书的范围，但最终，这取决于你个人的偏好。
- en: Next, we are going to click on the **Datastore browser** button. A modal will
    pop up on the screen, as shown here:![Figure 1.12 – Upload browser
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将点击**数据存储浏览器**按钮。屏幕上会弹出一个模态窗口，如下所示：![图 1.12 – 上传浏览器
- en: '](image/Figure_1.12_B16321.jpg)'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.12_B16321.jpg)'
- en: Figure 1.12 – Upload browser
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.12 – 上传浏览器
- en: From here, you want to select the datastore that you will upload the ISO file
    to. Then, what I like to do is create a **directory** where I will house all my
    ISOs for quick recall later. You can see an example of creating a directorycalled
    **iso_folder** in the following screenshot:![Figure 1.13 – Creating a new directory
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，你需要选择将上传 ISO 文件的那个数据存储。然后，我喜欢创建一个**目录**，将所有 ISO 文件放在其中，便于以后快速调用。你可以看到创建名为**iso_folder**的目录的示例，见下图：![图
    1.13 – 创建新目录
- en: '](image/Figure_1.13_B16321.jpg)'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.13_B16321.jpg)'
- en: Figure 1.13 – Creating a new directory
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.13 – 创建新目录
- en: Now, you need to select the newly created directory and click the **Upload**
    button. This will open a *Finder/Explorer* window, where you will be able to select
    your newly downloaded **ISO** file. Once selected, you will see a progress bar
    that indicates the file's completion, as shown in the following screenshot:![Figure
    1.14 – Upload in progress
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您需要选择新创建的目录并点击**上传**按钮。这将打开一个*Finder/Explorer*窗口，您可以在其中选择刚刚下载的**ISO**文件。选择后，您将看到一个进度条，指示文件的完成情况，如以下截图所示：![图
    1.14 – 上传进度
- en: '](image/Figure_1.14_B16321.jpg)'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.14_B16321.jpg)'
- en: Figure 1.14 – Upload in progress
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.14 – 上传进度
- en: 'Once the file has been uploaded, you will see your newly uploaded VM in **iso_folder**:'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦文件上传完成，您将看到新上传的虚拟机出现在**iso_folder**中：
- en: '![Figure 1.15 – Uploaded ISO'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.15 – 已上传的ISO'
- en: '](image/Figure_1.15_B16321.jpg)'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.15_B16321.jpg)'
- en: Figure 1.15 – Uploaded ISO
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.15 – 已上传的ISO
- en: The next step will be to select **Virtual Machines** from the **Navigator**
    menu on the left-hand side of the screen. Click the **Create / Register VM** button
    on the right-hand side of the screen, as shown in the following screenshot:![Figure
    1.16 – Virtual Machines dashboard
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是从屏幕左侧的**导航器**菜单中选择**虚拟机**。然后点击屏幕右侧的**创建/注册虚拟机**按钮，如以下截图所示：![图 1.16 – 虚拟机仪表盘
- en: '](image/Figure_1.16_B16321.jpg)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.16_B16321.jpg)'
- en: Figure 1.16 – Virtual Machines dashboard
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.16 – 虚拟机仪表盘
- en: 'Once clicked, this will bring up a modal with three distinct options:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦点击，这将弹出一个模态窗口，显示三个不同的选项：
- en: a. **Create a new virtual machine**
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. **创建新的虚拟机**
- en: b. **Deploy a virtual machine from an OVF or OVA file**
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. **从OVF或OVA文件部署虚拟机**
- en: c. **Register an existing virtual machine**
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. **注册现有虚拟机**
- en: 'You can see this in the following screenshot:'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以在以下截图中看到这一点：
- en: '![Figure 1.17 – Creating a virtual machine'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.17 – 创建虚拟机'
- en: '](image/Figure_1.17_B16321.jpg)'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.17_B16321.jpg)'
- en: Figure 1.17 – Creating a virtual machine
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.17 – 创建虚拟机
- en: 'We are going to choose the **Create a new virtual machine** option here. This
    will create another pop-up window. From here, we want to fill out the **Name**,
    **Compatibility**, **Guest OS family**, and **Guest OS version** options. **Compatibility**
    is an option that allows the VM to have access to version-specific virtual hardware.
    We can see what this looks like in the following screenshot:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将在这里选择**创建新的虚拟机**选项。这将弹出另一个窗口。从这里，我们需要填写**名称**、**兼容性**、**客户操作系统系列**和**客户操作系统版本**等选项。**兼容性**是一个选项，允许虚拟机访问特定版本的虚拟硬件。我们可以在以下截图中看到这是什么样子的：
- en: '![Figure 1.18 – Compatibility selection'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.18 – 兼容性选择'
- en: '](image/Figure_1.18_B16321.jpg)'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.18_B16321.jpg)'
- en: Figure 1.18 – Compatibility selection
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.18 – 兼容性选择
- en: Click **Next**. You will be brought to a new screen where you can select which
    datastore you would like to spin your new *PLC VM* up on. I have selected **VM-Storage**
    and clicked **Next**:![Figure 1.19 – Select storage page
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**。您将进入一个新界面，您可以在其中选择希望在哪个数据存储中启动新的*PLC虚拟机*。我选择了**VM-Storage**并点击了**下一步**：![图
    1.19 – 选择存储页面
- en: '](image/Figure_1.19_B16321.jpg)'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.19_B16321.jpg)'
- en: Figure 1.19 – Select storage page
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.19 – 选择存储页面
- en: The next screen allows you to customize the VM that we are loading up. Since
    this VM is going to simulate a PLC, we want to keep the resources like that of
    a real off-the-shelf device's. The keynote will be the **Datastore ISO** file
    that we loaded into **CD/DVD Drive 1**.
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下一屏幕允许您自定义我们正在加载的虚拟机。由于这台虚拟机将模拟一个PLC，我们希望保留与真实现成设备相同的资源配置。关键点将是我们加载到**CD/DVD
    驱动器 1**中的**Datastore ISO**文件。
- en: 'As shown in the following screenshot, the specifications I''ve chosen are **1**
    for **CPU**, 1 GB RAM, **40** GB disk space, **VM network**, and **Datastore ISO**
    (Ubuntu ISO):'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如下截图所示，我选择的规格是**1**个**CPU**，1GB RAM，**40** GB磁盘空间，**VM网络**和**Datastore ISO**（Ubuntu
    ISO）：
- en: '![Figure 1.20 – Customize settings page'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.20 – 自定义设置页面'
- en: '](image/Figure_1.20_B16321.jpg)'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.20_B16321.jpg)'
- en: Figure 1.20 – Customize settings page
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 1.20 – 自定义设置页面
- en: We will configure the network so that it follows a **quasi-Purdue** model in
    the next section. The Purdue model is a theoretical framework for segmenting industrial
    networks. Many books have been published documenting the usefulness of modeling
    a network after the Purdue model, so I strongly recommend grabbing one and having
    a read. The Purdue model is one way of applying a standard to segmentation, though
    there are many other standards that have been created, and many are industry-specific.
    In North America for the Utility industry **North American Reliability Corporation
    Critical Infrastructure Protection** (**NERC CIP**), is a set of reliability standards
    that are used to adhere to security best practices. **Chemical Facility Anti-Terrorism
    Standards** (**CFATS**) has been developed specifically for the chemical industry,
    but there is a lot of overlap between these standards. The **International Organization
    for Standardization** (**ISO/IEC**) 27000 series and specifically ISO-27002 have
    been adopted outside North America, along with **International Society of Automation**
    (**ISA**) 99 or ISA 62443, which is where the Purdue model is ultimately derived
    from.
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将在下一节配置网络，使其遵循**准普渡**模型。普渡模型是用于分段工业网络的理论框架。已经出版了许多书籍，详细记录了根据普渡模型对网络进行建模的实用性，因此我强烈推荐你拿一本来阅读。普渡模型是一种应用标准进行分段的方法，尽管已经创建了许多其他标准，而且许多都是行业特定的。在北美，针对公用事业行业的**北美可靠性公司关键基础设施保护**（**NERC
    CIP**）是一套可靠性标准，用于遵循安全最佳实践。**化学设施反恐标准**（**CFATS**）是专门为化学工业制定的，但这些标准之间有很多重叠。**国际标准化组织**（**ISO/IEC**）27000系列，特别是ISO-27002，已经在北美以外地区采用，此外还有**国际自动化学会**（**ISA**）99或ISA
    62443，这是普渡模型的最终来源。
- en: Now, click **Finish**. This will place the provisioned VM inside the datastore.
    We will then want to run the VM, which will boot us into the Ubuntu installation
    process. We can do this by clicking the green power on button shown in the following
    screenshot:![Figure 1.21 – PLC virtual machine
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击**完成**。这将把已配置的虚拟机放入数据存储区。然后，我们将运行该虚拟机，它将引导我们进入Ubuntu安装过程。我们可以通过点击以下截图中显示的绿色开机按钮来完成：![图1.21
    – PLC虚拟机
- en: '](image/Figure_1.21_B16321.jpg)'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.21_B16321.jpg)'
- en: Figure 1.21 – PLC virtual machine
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.21 – PLC虚拟机
- en: After clicking the power on button, you will get a page that looks like this:![Figure
    1.22 – Powering on the virtual machine
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击开机按钮后，您将看到如下页面：![图1.22 – 启动虚拟机
- en: '](image/Figure_1.22_B16321.jpg)'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/Figure_1.22_B16321.jpg)'
- en: Figure 1.22 – Powering on the virtual machine
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图1.22 – 启动虚拟机
- en: 'Install **Ubuntu** as you would normally install any Linux distro. After installation,
    you should be sitting at a login screen, as shown in the following screenshot:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照通常安装任何Linux发行版的方式安装**Ubuntu**。安装完成后，您应该会看到如下所示的登录界面：
- en: '![Figure 1.23 – Login screen for PLC VM'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.23 – PLC虚拟机的登录界面'
- en: '](image/Figure_1.23_B16321.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.23_B16321.jpg)'
- en: Figure 1.23 – Login screen for PLC VM
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.23 – PLC虚拟机的登录界面
- en: 'We are going to repeat all the steps we performed to create the virtual machine
    named PLC:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重复所有步骤，创建名为PLC的虚拟机：
- en: Create a new VM.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一台新虚拟机。
- en: Load the DVD with the Ubuntu ISO located in the datastore.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载存储区中的Ubuntu ISO DVD。
- en: Choose 1 CPU, 4 GB of RAM, a 40 GB hard disk, and a VM network for the interface.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择1个CPU、4GB内存、40GB硬盘和一个虚拟机网络接口。
- en: Click the power on button.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击开机按钮。
- en: Install as you did previously.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如同之前一样进行安装。
- en: Now, call the VM SCADA. Now that you have two Ubuntu VMs – one named PLC and
    another named SCADA – the next step will be updating the VM and adding key packages
    that we want to use to simulate a **virtual PLC**.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将虚拟机命名为SCADA。现在你有了两台Ubuntu虚拟机——一台名为PLC，另一台名为SCADA——接下来的步骤将是更新虚拟机，并添加我们希望用来模拟**虚拟PLC**的关键软件包。
- en: 'First, log into the *PLC* and *SCADA* VMs and run the following commands:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，登录到*PLC*和*SCADA*虚拟机，并运行以下命令：
- en: sudo apt update
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt update
- en: sudo apt upgrade
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt upgrade
- en: This will make sure that you have the latest versions of the core packages that
    make up your Ubuntu machines. Next, we are going to install specific packages
    so that we can create a **virtual OT lab**.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这将确保你拥有最新版本的核心软件包，构成你的Ubuntu机器。接下来，我们将安装特定软件包，以便能够创建**虚拟OT实验室**。
- en: 'The key packages to install are as follows:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 需要安装的关键软件包如下：
- en: sudo apt install git
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt install git
- en: sudo apt install vsftpd
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt install vsftpd
- en: sudo apt install telnetd
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt install telnetd
- en: sudo apt install openssh-server
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt install openssh-server
- en: sudo apt install php7.4-cli
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt install php7.4-cli
- en: sudo apt install python3-pip
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt install python3-pip
- en: pip3 install twisted
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: pip3 install twisted
- en: pip3 install testresources
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: pip3 install testresources
- en: pip3 install pytest
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: pip3 install pytest
- en: pip3 install cpppo
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: pip3 install cpppo
- en: pip3 install pymodbus
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: pip3 install pymodbus
- en: The next thing we must do is clone a specific tool.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步我们必须做的是克隆一个特定的工具。
- en: 'Run the following commands:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: git clone https://github.com/sourceperl/mbtget.git
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: git clone https://github.com/sourceperl/mbtget.git
- en: cd mbtget
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: cd mbtget
- en: perl Makefile.PL
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: perl Makefile.PL
- en: make
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: make
- en: sudo make install
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: sudo make install
- en: Almost each package could have independent books written about them, so instead
    of going into too much detail here, I am going to cover the reasonings behind
    each package.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个软件包都有独立的书籍来详细介绍，所以在这里我不会深入细节，而是会解释每个软件包的背后原因。
- en: 'They are as follows:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 它们如下所示：
- en: '**git**: We are going to use this to clone a simple Modbus client that is written
    in *Perl* called **mbtget**.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**git**：我们将使用这个工具克隆一个用*Perl* 编写的简单 Modbus 客户端，名为 **mbtget**。'
- en: '**vsftpd**: This is a very simple FTP daemon that allows us to simulate config
    file transfers on the network.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**vsftpd**：这是一个非常简单的 FTP 守护进程，允许我们模拟网络中的配置文件传输。'
- en: '**telnetd**: This is a **Telnet** daemon that will also allow us to simulate
    config file transfers on the network.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**telnetd**：这是一个 **Telnet** 守护进程，也将帮助我们模拟网络中的配置文件传输。'
- en: '**openssh-server**: This allows us to run a **ssh** connection to the PLC for
    command and control.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**openssh-server**：这允许我们通过 **ssh** 连接到 PLC 进行命令和控制。'
- en: '**php7.4-cli**: This will allow us to simulate PLC interfaces later in this
    book.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**php7.4-cli**：这将帮助我们在本书后面模拟 PLC 接口。'
- en: '**python3-pip**: This is a package manager that''s specific for Python 3.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**python3-pip**：这是一个专门用于 Python 3 的包管理器。'
- en: 'The next packages are Python-specific:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的软件包是专门为 Python 编写的：
- en: '**twisted**: A networking engine and a dependency of *pymodbus*.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**twisted**：一个网络引擎，是 *pymodbus* 的依赖。'
- en: '**testresources**: A unit testing package and a dependency of *pymodbus*.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**testresources**：一个单元测试包，是 *pymodbus* 的依赖。'
- en: '**pytest**: A testing engine and a dependency of *Cpppo*.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**pytest**：一个测试引擎，并且是 *Cpppo* 的一个依赖。'
- en: '**cpppo**: A useful engine for testing various industrial protocols. We will
    focus on Ethernet/IP in this book.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cpppo**：一个用于测试各种工业协议的有用引擎。在本书中，我们将重点介绍 Ethernet/IP。'
- en: '**pymodbus**: This is a **modbus** engine that can be used as a client/server.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**pymodbus**：这是一个可以作为客户端/服务器使用的 **modbus** 引擎。'
- en: The next package is known as **mtbget**, and it is *Perl*-specific. It is a
    **modbus** client, and it is very useful for testing equipment in the field.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个软件包是 **mtbget**，它是*Perl* 特定的。它是一个 **modbus** 客户端，非常有用于现场测试设备。
- en: We now have two fully updated Ubuntu machines running inside our ESXi server.
    We have also installed various packages that will allow us to simulate a PLC to
    SCADA relationship. We can also generate remote connections over various protocols
    that will come in handy in later chapters. Next, we will build an Engineering
    Workstation and a Kali Linux attack box.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 目前我们在 ESXi 服务器中运行着两台完全更新的 Ubuntu 机器。我们还安装了各种软件包，这些软件包将帮助我们模拟 PLC 与 SCADA 之间的关系。我们还可以通过不同的协议生成远程连接，这将在后续章节中派上用场。接下来，我们将构建一个工程工作站和一个
    Kali Linux 攻击盒子。
- en: Spinning up Windows Engineering Workstation
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动 Windows 工程工作站
- en: If you were able to get through the installation without any issues, then we
    are one step closer to having a well-rounded *virtual lab*. Next, we want to get
    our hands on a *Windows 7* image. This is important as much of the software that
    we require for configuring and communicating with the physical hardware was built
    for Windows. Well, technically speaking, it was built for Windows XP and then
    later upgraded to Windows 7\.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你能够顺利完成安装，那么我们就离拥有一个完善的*虚拟实验室*更近了一步。接下来，我们需要获取一个*Windows 7* 镜像。这很重要，因为我们配置和与物理硬件通信所需的软件大部分是为
    Windows 开发的。严格来说，它最初是为 Windows XP 开发的，后来升级到了 Windows 7\。
- en: 'Following the steps that we used to build the Ubuntu VMs, we will create our
    Windows 7 machine:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 按照我们构建 Ubuntu 虚拟机的步骤，我们将创建我们的 Windows 7 机器：
- en: Create a new VM.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的虚拟机。
- en: Load a DVD with the Windows7 ISO located in the datastore.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载存储库中的 Windows7 ISO 的 DVD。
- en: Choose 1 CPU, 4 GB of RAM, a 40 GB hard disk, and a VM network for the interface.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 1 个 CPU，4 GB 内存，40 GB 硬盘和一个 VM 网络作为接口。
- en: Click the power on button.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击开机按钮。
- en: Install Windows.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Windows。
- en: 'Once you have installed Windows and logged in, you should see a screen similar
    to the following:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 安装并登录 Windows 后，你应该看到一个类似于以下的界面：
- en: '![Figure 1.24 – Windows 7 virtual machine'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.24 – Windows 7 虚拟机'
- en: '](image/Figure_1.24_B16321.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.24_B16321.jpg)'
- en: Figure 1.24 – Windows 7 virtual machine
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.24 – Windows 7虚拟机
- en: Now that we have our Windows 7 VM running, we are going to push forward with
    the installation of Kali Linux.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的Windows 7虚拟机已经运行，我们将继续安装Kali Linux。
- en: Spinning up Kali Linux
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动Kali Linux
- en: '**Kali Linux** is a Linux distribution specifically designed for **security
    research**, **assessments**, and **pentesting**, to name a few. The name has changed
    since the package was inspected, but true to form, it still remains one of the
    most widely used security tools on the market.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '**Kali Linux**是一个专为**安全研究**、**评估**和**渗透测试**等设计的Linux发行版。尽管名称自检查软件包以来有所变化，但它仍然是市场上最广泛使用的安全工具之一。'
- en: 'Follow this link to download your copy of Kali Linux: [https://www.kali.org/downloads/](https://www.kali.org/downloads/).'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 点击这里下载您的Kali Linux副本：[https://www.kali.org/downloads/](https://www.kali.org/downloads/).
- en: We are going to use **Kali Linux** to perform tests on the equipment in the
    lab, both virtual and physical. It is a well-rounded platform and includes *gpg
    signed packages* and has a large development community. There are many other notable
    *pentesting frameworks* out there that specialize in a similar nature, such as
    **SamuraiSTFU**, now known as **controlthings.io**. **ControlThings** provides
    a wide range of focused tools specific to the ICS/OT environment, along with **pcaps**
    for the ability of replaying inside your environment for testing purposes. On
    top of all this, they also provide countless emulators so that you can really
    hone your assessment skills. *Parrot OS* is a security platform that has grown
    in popularity, due to its user-friendly interface, low memory consumption, and
    anonymous surfing as a default function. It is a great framework to have in your
    *pentesting arsenal*.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用**Kali Linux**对实验室中的设备进行测试，包括虚拟和物理设备。这是一个全面的平台，包括*gpg签名的软件包*，并有一个庞大的开发社区。还有许多其他显著的*渗透测试框架*，如现在的**controlthings.io**，以前称为**SamuraiSTFU**。**ControlThings**提供了一系列专门针对ICS/OT环境的工具，还包括了用于测试目的的**pcaps**回放功能。此外，它们还提供了无数的仿真器，使您可以真正磨练评估技能。*Parrot
    OS*是一个安全平台，因其用户友好的界面、低内存消耗和默认的匿名浏览功能而广受欢迎。它是您*渗透测试工具库*中的一个强大框架。
- en: Kali Linux has a straightforward installation process.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux有一个简单直接的安装过程。
- en: You need to follow the same steps you followed for Ubuntu and Windows 7 previously
    by uploading the Kali ISO to the datastore, and then mounting the ISO on the DVD
    drive and booting the VM.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要按照之前为Ubuntu和Windows 7执行的相同步骤，将Kali ISO上传到数据存储，并将ISO挂载到DVD驱动器上并引导虚拟机。
- en: 'Next, go through the options for installing based on your region. The great
    part of a virtual lab is that you can adjust the hardware settings of a machine
    once it has been stood up. The following screenshot shows the **Hardware Configuration**
    settings that I started with:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，根据您所在地区的选项进行安装设置。虚拟实验室的一个很棒的部分是，一旦启动了一台机器，您可以调整其硬件设置。以下截图显示了我开始使用的**硬件配置**设置：
- en: '![Figure 1.25 – Kali Linux configuration'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.25 – Kali Linux配置'
- en: '](image/Figure_1.25_B16321.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.25_B16321.jpg)'
- en: Figure 1.25 – Kali Linux configuration
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.25 – Kali Linux配置
- en: 'The last step of the installation process is selecting the software to install.
    Personally, I selected the **large** version to pre-load more tools. This selection
    is shown in the following screenshot:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程的最后一步是选择要安装的软件。我个人选择了**large**版本以预装更多工具。这个选择如下截图所示：
- en: '![Figure 1.26 – Software selection'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.26 – 软件选择'
- en: '](image/Figure_1.26_B16321.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.26_B16321.jpg)'
- en: Figure 1.26 – Software selection
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.26 – 软件选择
- en: Next, log into the **Kali** box with the user that you set up during the initial
    installation.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用在初始安装过程中设置的用户登录**Kali**系统。
- en: Tip
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Some quick history on the *BackTrack/Kali* credentials is that **root:toor**
    have been the default credentials ever since I started on **BackTrack 4**. Now,
    they have moved to **kali:kali**. So, if you happen to be on the *Blue Team* side
    of things, make sure to build out an **Intrusion Detection Rule** (**IDR**) for
    these known credentials.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一些关于*BackTrack/Kali*凭据的快速历史是，**root:toor**自我开始使用**BackTrack 4**以来一直是默认凭据。现在，它们已经更改为**kali:kali**。所以，如果你恰好是*Blue
    Team*阵营的一员，请确保为这些已知凭据建立一个**入侵检测规则**（**IDR**）。
- en: 'You will be presented with a login screen, as shown in the following screenshot:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到一个登录屏幕，如下截图所示：
- en: '![Figure 1.27 – Kali Linux login screen'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.27 – Kali Linux 登录界面'
- en: '](image/Figure_1.27_B16321.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.27_B16321.jpg)'
- en: Figure 1.27 – Kali Linux login screen
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.27 – Kali Linux 登录界面
- en: Next, we will update Kali as we did with Ubuntu, and we will install similar
    packages to what we installed previously.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将像在 Ubuntu 中一样更新 Kali，并安装与之前安装的类似的软件包。
- en: 'The key packages are installed using the following commands:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 关键软件包使用以下命令安装：
- en: '**sudo apt install python3-pip**'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sudo apt install python3-pip**'
- en: '**pip3 install pymodbus**'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**pip3 install pymodbus**'
- en: '**pip3 install cpppo**'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**pip3 install cpppo**'
- en: '**git clone** ([https://github.com/sourceperl/mbtget.git](https://github.com/sourceperl/mbtget.git))'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**git clone** ([https://github.com/sourceperl/mbtget.git](https://github.com/sourceperl/mbtget.git))'
- en: '**cd mbtget**'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cd mbtget**'
- en: '**perl Makefile.PL**'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**perl Makefile.PL**'
- en: '**make**'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**make**'
- en: '**sudo make install**'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sudo make install**'
- en: 'Now, if no errors occur, you should have four VMs installed on your hypervisor,
    as shown in the following screenshot:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果没有出现错误，您应该在您的虚拟化平台上安装了四个虚拟机，如下截图所示：
- en: '![Figure 1.28 – Virtual machines'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.28 – 虚拟机'
- en: '](image/Figure_1.28_B16321.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.28_B16321.jpg)'
- en: Figure 1.28 – Virtual machines
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.28 – 虚拟机
- en: In this section, we installed a Windows 7 Engineering Workstation and a Kali
    Linux host that will be simulating our attacker in the lab. We will launch various
    enumerations, exploits, and attacks from here. In the next section, we are going
    to move on to designing and implementing the networking segmentation by setting
    up *levels* that relate to a **Purdue model**.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们安装了一个 Windows 7 工程工作站和一个将在实验室中模拟攻击者的 Kali Linux 主机。我们将从这里启动各种枚举、利用和攻击。在下一节中，我们将继续通过设置与
    **Purdue 模型** 相关的 *层次* 来设计和实施网络分段。
- en: Routing and rules
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 路由和规则
- en: 'When it comes to setting up our *virtual lab network*, we want to try and mimic
    real-world **segmentation strategies**. With that being said, it is hard to talk
    about OT networking without at least commenting on the *Purdue model*. This model
    has been used as a reference by almost all industries as a method of building
    out a baseline for segmenting levels in the network. The levels are as follows:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置我们的 *虚拟实验室网络* 时，我们希望尝试模仿真实世界的**分段策略**。话虽如此，谈论 OT 网络时很难不提及 *Purdue 模型*。这个模型已被几乎所有行业用作构建网络分层基线的参考方法。这些层次如下：
- en: 'Level 5: **Enterprise**'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Level 5: **Enterprise**'
- en: 'Level 4: **Site Business Systems**'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Level 4: **Site Business Systems**'
- en: 'Level 3: **Operations and Control**'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Level 3: **Operations and Control**'
- en: 'Level 2: **Localized Control**'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Level 2: **Localized Control**'
- en: 'Level 1: **Process**'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Level 1: **Process**'
- en: 'Level 0: **I/O**'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Level 0: **I/O**'
- en: 'So, true to form, we will take the same approach in our lab. We will start
    by placing the Virtual PLC into *Level 1*, the SCADA VM into *Level 2*, the Windows
    7 Engineering Workstation into *Level 3*, and finally our Kali Linux attack host
    into *Level 5*. We will need to log into ESXi and click on **Networking**. This
    will bring up a screen showing multiple tabs related to the networking infrastructure
    of ESXi, as shown here:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，忠于原则，我们将在我们的实验室中采取相同的方法。我们将首先将虚拟 PLC 放入 *Level 1*，将 SCADA VM 放入 *Level 2*，将
    Windows 7 工程工作站放入 *Level 3*，最后将我们的 Kali Linux 攻击主机放入 *Level 5*。我们需要登录 ESXi 并点击
    **Networking**。这将显示一个屏幕，显示与 ESXi 网络基础设施相关的多个选项卡，如下所示：
- en: '![Figure 1.29 – Networking dashboard'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.29 – 网络仪表板'
- en: '](image/Figure_1.29_B16321.jpg)'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.29_B16321.jpg)'
- en: Figure 1.29 – Networking dashboard
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.29 – 网络仪表板
- en: 'We will create a new switch on the **Virtual switches** tab. Start by filling
    out the **vSwitch Name** option and change **Link discovery Mode** to **Both**,
    as shown in the following screenshot. This allows details about the physical and
    virtual switches to be published and available:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 **Virtual switches** 选项卡上创建一个新的交换机。首先填写 **vSwitch Name** 选项并将 **Link discovery
    Mode** 更改为 **Both**，如下截图所示。这允许有关物理和虚拟交换机的详细信息被发布并可用：
- en: '![Figure 1.30 – Configuring the virtual switch'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.30 – 配置虚拟交换机'
- en: '](image/Figure_1.30_B16321.jpg)'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.30_B16321.jpg)'
- en: Figure 1.30 – Configuring the virtual switch
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.30 – 配置虚拟交换机
- en: We will go back and change **Promiscuous mode** in [*Chapter 5*](B16321_05_Epub_AM.xhtml#_idTextAnchor049),
    *Span Me If You Can*, when we discuss **Intrusion Detection Systems** (**IDS**).
    Once completed, you should see your new virtual switch.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将返回并在[*第 5 章*](B16321_05_Epub_AM.xhtml#_idTextAnchor049)中更改 **Promiscuous
    mode**，*Span Me If You Can*，当我们讨论 **入侵检测系统** (**IDS**) 时。完成后，您应该看到您的新虚拟交换机。
- en: 'Next, we want to move on to the **Port groups** tab. From here, we want to
    click **Add port group,** which will bring up a modal where we can set a **Name**,
    **VLAN**, and associate port group to a **Virtual switch**. For **port security**,
    we are going to default to inheriting the security settings from **vSwitch1**,
    which we created in the previous step. All these details can be seen in the following
    screenshot:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们想进入**端口组**标签。从这里，我们点击**添加端口组**，这将弹出一个窗口，在这里我们可以设置**名称**、**VLAN**，并将端口组与**虚拟交换机**关联。对于**端口安全性**，我们将默认继承之前步骤中创建的**vSwitch1**的安全设置。所有这些细节可以在以下截图中看到：
- en: '![Figure 1.31 – Port group configuration'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.31 – 端口组配置'
- en: '](image/Figure_1.31_B16321.jpg)'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.31_B16321.jpg)'
- en: Figure 1.31 – Port group configuration
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.31 – 端口组配置
- en: 'Now, we want to complete the process by adding the remaining networks:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们想通过添加剩余的网络来完成该过程：
- en: Enterprise
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业
- en: Site Business systems
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 站点业务系统
- en: Operations & Control
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作与控制
- en: Localized Control
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地化控制
- en: 'Once completed, you will see the port groups associated with the dedicated
    switches. Note that there are many ways to complete segmentation and adhere to
    the *Purdue model*:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您将看到与专用交换机关联的端口组。请注意，完成分段并遵循*普渡模型*有多种方式：
- en: '![Figure 1.32 – Port Groups dashboard'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.32 – 端口组仪表盘'
- en: '](image/Figure_1.32_B16321.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.32_B16321.jpg)'
- en: Figure 1.32 – Port Groups dashboard
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.32 – 端口组仪表盘
- en: 'As you can see, we still have all our VMs associated with the VM network. The
    next step will be to move the VMs into their own individual segments and manually
    set their IP addresses and ranges. We will start with the PLC VM, so we need to
    select **Virtual Machines** from the navigator bar and then click on **PLC VM**.
    Click the **Edit** button; this will take you to the following page:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们的所有虚拟机仍与VM网络关联。下一步是将虚拟机移入各自的独立段，并手动设置它们的IP地址和范围。我们将从PLC虚拟机开始，因此我们需要从导航栏选择**虚拟机**，然后点击**PLC虚拟机**。点击**编辑**按钮，这将带您到以下页面：
- en: '![Figure 1.33 – Port Groups selection'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.33 – 端口组选择'
- en: '](image/Figure_1.33_B16321.jpg)'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.33_B16321.jpg)'
- en: Figure 1.33 – Port Groups selection
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.33 – 端口组选择
- en: 'We want to switch our **Network Adapter** from **VM Network** to **Level 1:
    Process** and then click **Save**. Next, we want to manually set the IP address
    for the PLC. So, we need to open the console, log into the PLC, and navigate to
    **Network settings**.'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '我们想将**网络适配器**从**VM 网络**切换到**Level 1: 进程**，然后点击**保存**。接下来，我们需要手动设置PLC的IP地址。所以，我们需要打开控制台，登录PLC，并导航到**网络设置**。'
- en: 'You will see the following page:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到以下页面：
- en: '![Figure 1.34 – Network settings'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.34 – 网络设置'
- en: '](image/Figure_1.34_B16321.jpg)'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.34_B16321.jpg)'
- en: Figure 1.34 – Network settings
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.34 – 网络设置
- en: 'From here, we can click the **Wired Settings** option. Then, a pop-up window
    will appear. Next, you want to select the *gear* icon, which is located next to
    the purple slider, as shown in the following screenshot:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，我们可以点击**有线设置**选项。然后，会弹出一个窗口。接下来，您需要选择位于紫色滑块旁边的*齿轮*图标，如以下截图所示：
- en: '![Figure 1.35 – Wired network interface'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.35 – 有线网络接口'
- en: '](image/Figure_1.35_B16321.jpg)'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.35_B16321.jpg)'
- en: Figure 1.35 – Wired network interface
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.35 – 有线网络接口
- en: At this point, we should take a moment to discuss our IP address scheme.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们应该花点时间讨论我们的IP地址方案。
- en: 'Here, we will break each network segment into a dedicated IP range, as shown
    in the following table:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将每个网络段拆分为专用的IP范围，如下表所示：
- en: '![](image/Table_1_B16321.jpg)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![](image/Table_1_B16321.jpg)'
- en: Now, we can pre-assign IP addresses to the VMs that we have built out.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以为我们构建的虚拟机预先分配IP地址。
- en: 'We will assign the following IP addresses:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分配以下IP地址：
- en: '**PLC**: **192.168.1.10**'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PLC**: **192.168.1.10**'
- en: '**SCADA**: **192.168.2.10**'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SCADA**: **192.168.2.10**'
- en: '**Workstation**: **192.168.3.10**'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作站**: **192.168.3.10**'
- en: '**Kali**: **172.16.0.10**'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kali**: **172.16.0.10**'
- en: 'We can check our machines to make sure that the IP addresses have taken affect
    by running the **ip addr** command on the Linux-based distros, similar to what''s
    shown in the following screenshot:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在基于Linux的发行版上运行**ip addr**命令来检查机器，以确保IP地址已生效，如以下截图所示：
- en: '![Figure 1.36 – Checking the network address'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.36 – 检查网络地址'
- en: '](image/Figure_1.36_B16321.jpg)'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.36_B16321.jpg)'
- en: Figure 1.36 – Checking the network address
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.36 – 检查网络地址
- en: 'From here, select **IPv4** and then choose the **Manual** option. The option
    to set the Linux-based distro IP address for all three – PLC, SCADA, and Kali
    – should appear underneath **Addresses**, as shown in the following screenshot:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在此，选择 **IPv4**，然后选择 **手动** 选项。为所有三个 – PLC、SCADA 和 Kali 设置 Linux 基础的发行版 IP 地址的选项应出现在
    **地址** 下，如以下截图所示：
- en: '![Figure 1.37 – Ubuntu manual IP configuration'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.37 – Ubuntu 手动 IP 配置'
- en: '](image/Figure_1.37_B16321.jpg)'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.37_B16321.jpg)'
- en: Figure 1.37 – Ubuntu manual IP configuration
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.37 – Ubuntu 手动 IP 配置
- en: 'Now, we can move on to the *Windows 7* configuration and set the IP address
    manually there as well. The Windows 7 configuration looks like this:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以继续进行 *Windows 7* 配置，并在那里手动设置 IP 地址。Windows 7 配置如下所示：
- en: '![Figure 1.38 – Windows 7 network configuration'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.38 – Windows 7 网络配置'
- en: '](image/Figure_1.38_B16321.jpg)'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.38_B16321.jpg)'
- en: Figure 1.38 – Windows 7 network configuration
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.38 – Windows 7 网络配置
- en: 'Make sure that PLC, SCADA, and Workstation can all ping each other by running
    the **ping** command, as shown in the following screenshot:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 确保 PLC、SCADA 和工作站能够互相 ping 通，通过运行 **ping** 命令，如以下截图所示：
- en: '![Figure 1.39 – Checking communication between VMs'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.39 – 检查虚拟机之间的通信'
- en: '](image/Figure_1.39_B16321.jpg)'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_1.39_B16321.jpg)'
- en: Figure 1.39 – Checking communication between VMs
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.39 – 检查虚拟机之间的通信
- en: We have now successfully set up the network segmentation so that it represents
    that of the Purdue model. The IP addresses have all been statically set, and we've
    tested the communication between the levels and the VMs.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经成功地设置了网络分段，使其代表 Purdue 模型。所有 IP 地址都已静态设置，并且我们已经测试了各个层级和虚拟机之间的通信。
- en: Summary
  id: totrans-340
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this introductory chapter, we have covered quite of bit of detail. We touched
    on the importance of virtualization and the need to familiarize yourself with
    the different players offering platforms. We gained massive exposure to VMware
    by installing our own Fusion desktop and ESXi server. Then, we downloaded and
    installed four unique VMs and configured the networking scheme so that it aligns
    with the Purdue model.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的介绍中，我们涵盖了相当多的细节。我们提到了虚拟化的重要性，以及熟悉不同平台提供商的必要性。通过安装自己的 Fusion 桌面和 ESXi 服务器，我们对
    VMware 进行了深入了解。然后，我们下载并安装了四个独特的虚拟机，并配置了网络方案，使其与 Purdue 模型对齐。
- en: After all that effort, we now have a strong foundation to build a lab on. Going
    forward, we will be building on this lab by adding software as needed and utilizing
    the attack VM to run scenarios that we have designed.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 经过这一系列努力，我们现在已经为构建实验室奠定了坚实的基础。接下来，我们将通过根据需要添加软件并利用攻击虚拟机运行我们设计的场景，继续构建这个实验室。
- en: In the next chapter, we will be building the physical component of our lab by
    installing the engineering software that will communicate with our hardware PLC.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过安装与我们的硬件 PLC 通信的工程软件，构建实验室的物理组件。
