- en: Chapter 8. Post Exploitation – Privilege Escalation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。后期利用-特权提升
- en: In the previous chapter we went through the post-exploitation techniques. Post
    exploitation is divided into five different phases. This chapter will give a deep
    understanding of the first phase of post exploitation, which is Privilege Escalation.
    We will be covering new techniques and tricks on how to escalate our privileges
    once we have gained access to the system.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们介绍了后期利用技术。后期利用分为五个不同的阶段。本章将深入了解后期利用的第一个阶段，即特权提升。我们将介绍如何在获得对系统访问权限后提升我们的特权的新技术和诀窍。
- en: Understanding Privilege Escalation
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解特权提升
- en: Privilege Escalation in simple terms is gaining elevated privileges to resources
    that are normally protected and whose access is denied to normal or unauthorized
    users. Through escalated privileges, a malicious user may perform unauthorized
    actions and cause harm to the computer or the whole network. Simple examples of
    things you can do after privilege escalation are installing malicious software
    for unethical uses, deleting user files, denying resources to a particular user,
    and viewing private information. It may usually occur by compromising a system
    using an exploit based on vulnerability. This security misconfiguration or weakness
    may cause the security perimeter or the authentication to be bypassed and hence
    achieve privilege escalation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，特权提升是获取对通常受保护且拒绝普通或未经授权用户访问的资源的提升特权。通过提升的特权，恶意用户可能执行未经授权的操作，对计算机或整个网络造成损害。特权提升后可以做的一些简单示例包括安装用于不道德用途的恶意软件、删除用户文件、拒绝特定用户的资源访问以及查看私人信息。它通常是通过利用基于漏洞的漏洞来妥协系统而发生的。这种安全配置错误或弱点可能导致安全边界或身份验证被绕过，从而实现特权提升。
- en: 'Privilege escalation is broadly divided into two major forms:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 特权提升大致分为两种主要形式：
- en: '**Vertical Privilege Escalation**: In this escalation of privileges, a lower
    privileged user or application may access functions that are reserved only for
    authorized or administrative users. This feature is also known as privilege elevation.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**垂直特权提升**：在这种特权提升中，较低特权的用户或应用程序可能访问仅供授权或管理员用户使用的功能。这个功能也被称为特权提升。'
- en: '**Horizontal Privilege Escalation**: This escalation usually happens on a horizontal
    scale with respect to user rights. A normal user accessing the resources reserved
    for another normal user. This again is escalation of some other person''s resources,
    as technically only he should have privileges over his resources.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**水平特权提升**：这种特权提升通常在水平尺度上发生，涉及用户权限。普通用户访问为另一个普通用户保留的资源。这再次是对其他人资源的提升，因为从技术上讲，只有他应该对他的资源拥有特权。'
- en: There can be escalation scenarios due to multiple reasons – network intrusion,
    vulnerability exposure, unmanaged accounts, security from obscurity, and others.
    The approach followed is usually logging in and trying to get some basic information
    about the computer, something similar to the information-gathering scenario. Then
    the attacker may try to get hold of private information or maybe some user credentials
    that may be linked to some important documents.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由于多种原因可能存在特权提升的情况-网络入侵、漏洞暴露、未管理的帐户、安全性模糊等。通常采用的方法是登录并尝试获取有关计算机的一些基本信息，类似于信息收集场景。然后攻击者可能会尝试获取私人信息，或者可能与一些重要文件相关联的一些用户凭据。
- en: If we talk about Metasploit, running client-side exploits gives us the session
    with only limited user rights. This may severely limit the attacker from compromising
    the victim machine to the level he wants; for example, he may not be able to dump
    password hashes, make changes in the system settings, or install backdoor Trojans.
    Through very powerful scripts in Metasploit, such as getsystem, we may be able
    to get system-level permissions on the root system.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们谈论Metasploit，运行客户端漏洞利用只会给我们带来具有有限用户权限的会话。这可能严重限制攻击者妥协受害者机器到他想要的级别；例如，他可能无法转储密码哈希、更改系统设置或安装后门木马。通过Metasploit中非常强大的脚本，例如getsystem，我们可能能够在根系统上获得系统级权限。
- en: Exploiting the victim's system
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用受害者的系统
- en: Now we will start the tutorial phase of privilege escalation. Here we are going
    to exploit the victim's system by running a buffer overflow exploit in a small
    program called Mini-share. Mini-share is free file-sharing software. It is free
    web server software for Microsoft Windows. It is a quick and easy way to share
    files if you have web hosting. Now open `msfconsole` and type in `use exploit/windows/http/minishare_get_overflow`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将开始特权提升的教程阶段。在这里，我们将通过在一个名为Mini-share的小型程序中运行缓冲区溢出利用来利用受害者的系统。Mini-share是免费的文件共享软件。它是用于Microsoft
    Windows的免费Web服务器软件。如果您有Web托管，这是一种快速简便的文件共享方式。现在打开`msfconsole`并输入`use exploit/windows/http/minishare_get_overflow`。
- en: '![Exploiting the victim''s system](img/3589OS_08_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_01.jpg)'
- en: After that, type in `show options` to see in detail all the options that we
    have to set in the exploit.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，输入`show options`以详细查看我们在利用中需要设置的所有选项。
- en: '![Exploiting the victim''s system](img/3589OS_08_02.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_02.jpg)'
- en: Now set all the options that are required; as we can see in the preceding screenshot,
    `RHOST` is required. The `RHOST` option refers to the remote host address, which
    is the target IP address. Type in `set RHOST <Victim IP>`; for example, here we
    are using `set RHOST 192.168.0.102`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在设置所有必需的选项；正如我们在前面的截图中所看到的，`RHOST`是必需的。`RHOST`选项是指远程主机地址，即目标IP地址。输入`set RHOST
    <受害者IP>`；例如，在这里我们使用`set RHOST 192.168.0.102`。
- en: '![Exploiting the victim''s system](img/3589OS_08_03.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_03.jpg)'
- en: The second option that is required is `RPORT`. The `RPORT` option refers to
    the remote port address, which is the target port number. Type in `set RPORT <Victim
    port>`; for example, here we are using `set RPORT 80`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个必需的选项是`RPORT`。`RPORT`选项是指远程端口地址，即目标端口号。输入`set RPORT <受害者端口>`；例如，在这里我们使用`set
    RPORT 80`。
- en: '![Exploiting the victim''s system](img/3589OS_08_04.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_04.jpg)'
- en: Now select the target system type. Type in `show targets` and it will show us
    all the vulnerable target operating systems.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在选择目标系统类型。输入 `show targets`，它将显示所有易受攻击的目标操作系统。
- en: '![Exploiting the victim''s system](img/3589OS_08_05.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_05.jpg)'
- en: Now select the target according to your victim's system. Here we are selecting
    target 3\. So we type in `set TARGET 3`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在根据受害者的系统选择目标。在这里，我们选择目标3。所以我们输入 `set TARGET 3`。
- en: '![Exploiting the victim''s system](img/3589OS_08_06.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_06.jpg)'
- en: Now it is time to exploit the target. So we type in `exploit`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是利用目标的时候。所以我们输入 `exploit`。
- en: '![Exploiting the victim''s system](img/3589OS_08_07.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_07.jpg)'
- en: We can see that after exploiting the victim's machine we have a `Meterpreter`
    session. Let us have a sneak peek into the victim's system. To get the user ID,
    type in `getuid`. We see from the following screenshot that the user ID is `NT
    AUTHORITY\SYSTEM`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到在利用受害者的机器后，我们有一个 `Meterpreter` 会话。让我们偷偷看一下受害者的系统。输入 `getuid` 来获取用户ID。从下面的截图中我们可以看到用户ID是
    `NT AUTHORITY\SYSTEM`。
- en: '![Exploiting the victim''s system](img/3589OS_08_08.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_08.jpg)'
- en: After that, we run `getsystem -h` for escalating the privileges in the victim's
    system.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们运行 `getsystem -h` 来升级受害者系统中的权限。
- en: '![Exploiting the victim''s system](img/3589OS_08_09.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_09.jpg)'
- en: 'We can see in the previous screenshot that running `getsystem –h`, gives us
    a bunch of options for privilege escalation. The first option is `0 : All techniques
    available`, which uses all techniques as default for escalating the privilege.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在之前的截图中看到运行 `getsystem -h`，给了我们一堆特权升级的选项。第一个选项是 `0：所有可用技术`，它使用默认的所有技术来升级特权。
- en: 'The terms used in the options for privilege escalation are as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 特权升级选项中使用的术语如下：
- en: '**Named Pipe**: It is a mechanism that enables inter-process communication
    for applications to occur locally or remotely. The application that creates the
    pipe is known as the pipe server, and the application that connects to the pipe
    is known as the pipe client.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命名管道**：它是一种机制，使应用程序能够在本地或远程进行进程间通信。创建管道的应用程序称为管道服务器，连接到管道的应用程序称为管道客户端。'
- en: '**Impersonation**: It is the ability of a thread to execute in a security context
    that is different from that of the process that owns the thread. Impersonation
    enables the server thread to perform actions on behalf of the client, but within
    the limits of the client''s security context. The problem arises when the client
    has more rights than the server. Every user of an operating system is provided
    a unique token ID. This ID is used to check the permission levels of various users
    of the system.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模拟**：它是线程以与拥有该线程的进程不同的安全上下文中执行的能力。模拟使服务器线程能够代表客户端执行操作，但在客户端的安全上下文的限制内。当客户端拥有比服务器更多的权限时，问题就出现了。操作系统的每个用户都提供了一个唯一的令牌ID。该ID用于检查系统中各个用户的权限级别。'
- en: '**Token Duplication**: It works by copying the token ID of a higher privilege
    user by a low privilege user. The lower privilege user then behaves in a similar
    manner as the higher privilege user and acquires all the rights and authorities
    as those of the higher privilege user.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**令牌复制**：它通过低权限用户复制高权限用户的令牌ID来工作。然后低权限用户以与高权限用户类似的方式行事，并获得与高权限用户相同的所有权利和权限。'
- en: '**KiTrap0D**: It was released in early 2010 and affected nearly every operating
    system that Microsoft had made up till then. When access to 16-bit applications
    is enabled on a 32-bit platform, it does not validate certain BIOS calls properly,
    which allows local users to gain privileges to improperly handled exceptions involving
    the #GP trap handler (nt!KiTrap0D), aka Windows Kernel Exception Handler Vulnerability,
    by crafting a VDM_TIB data structure in the Thread Environment Block (TEB).'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**KiTrap0D**：它于2010年初发布，影响了微软此前制作的几乎所有操作系统。当在32位平台上启用对16位应用程序的访问时，它未正确验证某些BIOS调用，这允许本地用户通过在线程环境块（TEB）中制作VDM_TIB数据结构来获得特权，从而不正确地处理涉及#GP陷阱处理程序（nt!KiTrap0D）的异常，也称为Windows内核异常处理程序漏洞。'
- en: Let us use the first option with all techniques available by typing in `getsystem
    -t 0`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用第一个选项，通过输入 `getsystem -t 0` 来使用所有可用的技术。
- en: '![Exploiting the victim''s system](img/3589OS_08_10.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_10.jpg)'
- en: We can see the message after running the command `...got system (via technique
    1).`. Now we check the process list by typing in the `ps` command.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到在运行命令 `...got system (via technique 1).` 后的消息。现在我们通过输入 `ps` 命令来检查进程列表。
- en: '![Exploiting the victim''s system](img/3589OS_08_11.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![利用受害者的系统](img/3589OS_08_11.jpg)'
- en: Privilege escalation by post exploitation
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过后期利用进行特权升级
- en: Now we will show another technique for privilege escalation – using post-exploitation
    modules. This module uses the built-in `getsystem` command to escalate the current
    session to the SYSTEM account from an administrator user account. When we get
    a `Meterpreter` session, type in `run post/windows/escalate/getsystem`. This module
    will automatically escalate the administrator privileges.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将展示另一种特权升级技术 - 使用后期利用模块。该模块使用内置的 `getsystem` 命令将当前会话从管理员用户帐户升级到系统帐户。当我们获得一个
    `Meterpreter` 会话时，输入 `run post/windows/escalate/getsystem`。该模块将自动升级管理员权限。
- en: '![Privilege escalation by post exploitation](img/3589OS_08_12.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![通过后期利用进行特权升级](img/3589OS_08_12.jpg)'
- en: Now we are going to use another post-exploitation script for local privilege
    escalation. This module exploits the existing administrative privileges to obtain
    a SYSTEM session. If it fails in the first instance, the module inspects the existing
    services and looks for insecure file permissions that are vulnerable to an attack.
    After that, it attempts to restart the replaced vulnerable service to run the
    payload. Hence a new session gets created on a successful exploit.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将使用另一个后期利用脚本进行本地权限提升。该模块利用现有的管理权限来获得一个SYSTEM会话。如果第一次失败，该模块会检查现有的服务，并寻找易受攻击的不安全文件权限。之后，它会尝试重新启动替换的易受攻击的服务来运行有效载荷。因此，成功利用后会创建一个新会话。
- en: Type in `run post/windows/escalate/service_permissions`; it will open another
    `Meterpreter` session.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`run post/windows/escalate/service_permissions`；它将打开另一个`Meterpreter`会话。
- en: '![Privilege escalation by post exploitation](img/3589OS_08_13.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![通过后期利用进行权限提升](img/3589OS_08_13.jpg)'
- en: Just try a different exploit for compromising the target system, and after that
    escalate the administrator privileges. Type in `use exploit/windows/browser/ms10_002_aurora`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 只需尝试不同的入侵目标系统的方法，然后提升管理员权限。输入`use exploit/windows/browser/ms10_002_aurora`。
- en: '![Privilege escalation by post exploitation](img/3589OS_08_14.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![通过后期利用进行权限提升](img/3589OS_08_14.jpg)'
- en: Now type in `show options` to see in detail all the options that we have to
    set in the exploit.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在输入`show options`以详细查看我们需要在入侵中设置的所有选项。
- en: '![Privilege escalation by post exploitation](img/3589OS_08_15.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![通过后期利用进行权限提升](img/3589OS_08_15.jpg)'
- en: After this, set all the options that are required as shown in the preceding
    screenshot. The `SRVHOST` option refers to the local host address to listen on.
    Type in `set SRVHOST <Victim IP>`; for example, here we are using `set SRVHOST
    192.168.0.109`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，设置所有在前面截图中显示的必需选项。`SRVHOST`选项是指要监听的本地主机地址。输入`set SRVHOST <受害者IP>`；例如，这里我们使用`set
    SRVHOST 192.168.0.109`。
- en: Finally, we exploit the target by typing in `exploit`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们通过输入`exploit`来利用目标。
- en: '![Privilege escalation by post exploitation](img/3589OS_08_16.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![通过后期利用进行权限提升](img/3589OS_08_16.jpg)'
- en: We can see a URL created by Metasploit. Now we just need to give this URL to
    the victim and lure him to click on it. After opening this URL in Internet Explorer,
    the victim will get a `Meterpreter` session and after that you may go ahead with
    privilege escalation attacks.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到Metasploit创建了一个URL。现在我们只需要把这个URL给受害者，并引诱他点击它。在Internet Explorer中打开这个URL后，受害者将获得一个`Meterpreter`会话，之后你可以进行权限提升攻击。
- en: Summary
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we learned on how to elevate our privileges once we have compromised
    a system. We used various scripts and post-exploitation modules to achieve this
    task. Our ultimate goal was to achieve the level of privileges of a system administrator
    so that we will be able to use the victim's machine as per our needs. We were
    successful in achieving this task and gained administrator privileges to the victim's
    machine. Only compromising the system will not achieve the ultimate goal; we need
    to be able to leak out a victim's private information or make brutal changes to
    his computer. The power of privilege escalation through Metasploit unlocks this
    power and helps us achieve our target. In the next chapter, we will move on to
    the next post-exploitation phase – clearing our tracks to save ourselves from
    getting caught once we have compromised a system.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在我们已经入侵的系统中提升我们的权限。我们使用了各种脚本和后期利用模块来完成这项任务。我们的最终目标是获得系统管理员的权限级别，以便根据我们的需求使用受害者的机器。我们成功地完成了这项任务，并获得了对受害者机器的管理员权限。仅仅入侵系统并不能实现最终目标；我们需要能够泄露受害者的私人信息或对他的计算机进行严重更改。通过Metasploit进行权限提升的能力解锁了这种力量，并帮助我们实现了我们的目标。在下一章中，我们将继续进行下一个后期利用阶段——清除我们的痕迹，以免在我们入侵系统后被抓住。
- en: References
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'The following are some helpful references that shed further light on some of
    the topics covered in this chapter:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有用的参考资料，可以进一步了解本章涉及的一些主题：
- en: '[http://en.wikipedia.org/wiki/Privilege_escalation](http://en.wikipedia.org/wiki/Privilege_escalation)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/Privilege_escalation](http://en.wikipedia.org/wiki/Privilege_escalation)'
- en: '[http://www.offensive-security.com/metasploit-unleashed/Privilege_Escalation](http://www.offensive-security.com/metasploit-unleashed/Privilege_Escalation)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.offensive-security.com/metasploit-unleashed/Privilege_Escalation](http://www.offensive-security.com/metasploit-unleashed/Privilege_Escalation)'
- en: '[http://vishnuvalentino.com/tips-and-trick/privilege-escalation-in-metasploit-meterpreter-backtrack-5/](http://vishnuvalentino.com/%E2%80%A8tips-and-trick/privilege-escalation-in-metasploit-meterpreter-backtrack-5/)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://vishnuvalentino.com/tips-and-trick/privilege-escalation-in-metasploit-meterpreter-backtrack-5/](http://vishnuvalentino.com/%E2%80%A8tips-and-trick/privilege-escalation-in-metasploit-meterpreter-backtrack-5/)'
- en: '[http://www.redspin.com/blog/2010/02/18/getsystem-privilege-escalation-via-metasploit/](http://www.redspin.com/blog/2010/02/18/getsystem-privilege-escalation-via-metasploit/)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.redspin.com/blog/2010/02/18/getsystem-privilege-escalation-via-metasploit/](http://www.redspin.com/blog/2010/02/18/getsystem-privilege-escalation-via-metasploit/)'
- en: '[http://www.securitytube.net/video/1188](http://www.securitytube.net/video/1188)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.securitytube.net/video/1188](http://www.securitytube.net/video/1188)'
