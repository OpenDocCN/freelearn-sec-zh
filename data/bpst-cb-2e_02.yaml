- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Getting to Know the Burp Suite of Tools
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Burp Suite 工具集
- en: This chapter provides overviews of the most commonly used tools within Burp
    Suite. The chapter begins by establishing the **target** scope within the **Target**
    | **Site map**. This is followed by an introduction to the message editor. Then,
    there will be some hands-on recipes using **OWASP Mutillidae II** to get acquainted
    with **Proxy**, **Repeater**, **Decoder**, and **Intruder**.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了 Burp Suite 中最常用的工具。首先，我们将介绍如何在**目标** | **站点映射**中设置**目标**范围。然后，介绍消息编辑器。接下来，利用**OWASP
    Mutillidae II**进行一些实践操作，熟悉**代理**、**Repeater**、**Decoder**和**Intruder**工具。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Setting the Target Site Map
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置目标站点映射
- en: Understanding the message editor
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解消息编辑器
- en: Repeating with **Repeater**
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**Repeater**进行重复请求
- en: Decoding with **Decoder**
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**Decoder**进行解码
- en: Intruding with **Intruder**
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**Intruder**进行攻击
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To complete the recipes in this chapter, you will need the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本章的所有操作，你将需要以下工具：
- en: Burp Proxy Community or Professional ([https://portswigger.net/burp/](https://portswigger.net/burp/))
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Burp Proxy Community 或 Professional（[https://portswigger.net/burp/](https://portswigger.net/burp/)）
- en: The Firefox browser configured to allow Burp to proxy traffic ([https://www.mozilla.org/en-US/firefox/new/](https://www.mozilla.org/en-US/firefox/new/))
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置允许 Burp 代理流量的 Firefox 浏览器（[https://www.mozilla.org/en-US/firefox/new/](https://www.mozilla.org/en-US/firefox/new/)）
- en: Setting the Target Site Map
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置目标站点映射
- en: Now that we have traffic flowing between your browser, Burp, and the OWASP **Broken
    Web Applications** (**BWA**) **virtual machine** (**VM**), we can begin setting
    the scope of our test. For this recipe, we will use the OWASP Mutillidae II link
    (**http://<Your_VM_Assigned_IP_Address>/mutillidae/**) available in the OWASP
    BWA VM as our target application.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，浏览器、Burp 和 OWASP **Broken Web Applications**（**BWA**）**虚拟机**（**VM**）之间的流量已经建立，我们可以开始设置我们的测试范围。对于本次操作，我们将使用
    OWASP BWA VM 中的 OWASP Mutillidae II 链接（**http://<Your_VM_Assigned_IP_Address>/mutillidae/**）作为目标应用程序。
- en: 'Looking more closely at the **Target** tab, you will notice there are two subtabs
    available: **Site map** and **Scope**. From the initial proxy setup between your
    browser, Burp, and the web server, you should now have some URLs, folders, and
    files shown in the **Target** | **Site map** tabs. You may find the amount of
    information overwhelming, but setting the scope for our project will help to focus
    our attention better.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 更仔细地查看**目标**选项卡，你会注意到有两个子选项卡：**站点映射**和**范围**。从浏览器、Burp 和 Web 服务器之间的初始代理设置开始，你应该已经在**目标**
    | **站点映射**选项卡中看到一些 URL、文件夹和文件。你可能会觉得信息量有些庞大，但为我们的项目设置范围将有助于更好地集中注意力。
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Using the **Target** | **Site map** and **Target** | **Scope** tabs, we will
    assign the URL for Mutillidae (**http://<Your_VM_Assigned_IP_Address>/mutillidae/**)
    as the scope.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**目标** | **站点映射**和**目标** | **范围**选项卡，我们将为 Mutillidae 分配 URL（**http://<Your_VM_Assigned_IP_Address>/mutillidae/**）作为范围。
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Execute the following steps to set the Target Site Map:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以设置目标站点映射：
- en: 'Search for the **mutillidae** folder and then right-click on it, and select
    **Add to scope** from the drop-down list:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找**mutillidae**文件夹，然后右键单击它，从下拉菜单中选择**添加到范围**：
- en: '![Figure 2.1 – Setting the scope for the target application](image/B21173_Figure_2.1.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – 设置目标应用程序的范围](image/B21173_Figure_2.1.jpg)'
- en: Figure 2.1 – Setting the scope for the target application
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 设置目标应用程序的范围
- en: 'Upon adding the **mutillidae** folder to your scope, you may be presented with
    a **Proxy history logging** dialog box, as follows. You may choose to avoid collecting
    messages out of your scope by clicking **Yes**, or you may choose to continue
    to have the **Proxy HTTP History** tab collect any messages passing through Burp,
    even if those messages fall outside the scope you’ve identified. For our purposes,
    we will select **Yes**:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你将**mutillidae**文件夹添加到你的范围时，可能会弹出一个**代理历史记录**对话框，如下所示。你可以选择点击**是**，以避免收集超出你范围的消息，或者你可以选择继续让**代理
    HTTP 历史**选项卡收集通过 Burp 的任何消息，即使这些消息超出了你已经确定的范围。出于我们的目的，我们将选择**是**：
- en: '![Figure 2.2 – Proxy history prompt](image/B21173_Figure_2.2.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – 代理历史提示](image/B21173_Figure_2.2.jpg)'
- en: Figure 2.2 – Proxy history prompt
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 代理历史提示
- en: 'Clicking the **Target** | **Scope settings** tabs, after the pop-out menu displays,
    you should now see the following:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**目标** | **范围设置**选项卡，弹出菜单显示后，你应该能够看到以下内容：
- en: '![Figure 2.3 – Clicking the Scope settings to have a pop-out display appear](image/B21173_Figure_2.3.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 点击范围设置以显示弹出显示](image/B21173_Figure_2.3.jpg)'
- en: Figure 2.3 – Clicking the Scope settings to have a pop-out display appear
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 点击范围设置以显示弹出显示
- en: 'The full URL for OWASP Mutillidae II is shown in the **Include in scope** table
    of **Project** | **Scope**, as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP Mutillidae II 的完整 URL 显示在**项目** | **范围**的**包括在范围内**表格中，如下所示：
- en: "![Figure 2.4 – Pop-out display showing scope set to target applicatio\uFEFF\
    n](image/B21173_Figure_2.4.jpg)"
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – 弹出显示，显示设置为目标应用的范围](image/B21173_Figure_2.4.jpg)'
- en: Figure 2.4 – Pop-out display showing scope set to target application
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 弹出显示，显示设置为目标应用的范围
- en: How it works...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Setting scope is important for a clearer understanding of traffic flow through
    Burp from your target. Once properly scoped, all HTTP traffic can be seen in your
    **Target** | **Site map** and Burp’s **Proxy** | **HTTP history** tabs. Details
    within individual requests and responses can be viewed using the message editor.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 设置范围对于更清晰地理解从目标到 Burp 的流量流动至关重要。一旦正确设置范围，所有 HTTP 流量都可以在您的**目标** | **站点地图**和
    Burp 的**代理** | **HTTP 历史记录**标签中看到。个别请求和响应的详细信息可以通过消息编辑器查看。
- en: Understanding the message editor
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解消息编辑器
- en: On almost every tool and tab within Burp Suite that displays an HTTP message,
    you will see an editor identifying the request and response. This is commonly
    referred to as the **message editor**. The message editor allows viewing and editing
    HTTP requests and responses with specialties.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Burp Suite 中几乎每个显示 HTTP 消息的工具和标签中，您都会看到一个编辑器，用于标识请求和响应。这通常被称为**消息编辑器**。消息编辑器允许查看和编辑
    HTTP 请求和响应，并具有一些特性。
- en: 'Within the message editor are multiple subtabs. The subtabs for a request message,
    at a minimum, include the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在消息编辑器中，有多个子标签。一个请求消息的子标签至少包括以下内容：
- en: '**Pretty**'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漂亮**'
- en: '**Raw**'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原始**'
- en: '**Hex**'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**十六进制**'
- en: 'The subtabs for a response message include the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 响应消息的子标签包括以下内容：
- en: '**Pretty**: The **Pretty** subtab gives you the same information as **Raw**
    but in a more readable format. Please note the **Pretty** subtab may be disabled.
    This is due to the supported formats. For the **Pretty** subtab to be enabled,
    the message must be in one of the following formats:'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漂亮**：**漂亮**子标签向您提供与**原始**相同的信息，但格式更易读。请注意，**漂亮**子标签可能会被禁用。这是由于支持的格式所致。为了启用**漂亮**子标签，消息必须是以下格式之一：'
- en: JSON
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON
- en: XML (including image/SVG + XML content)
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: XML（包括图像/SVG + XML 内容）
- en: HTML
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML
- en: CSS
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS
- en: JavaScript
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript
- en: '**Raw**: The **Raw** subtab gives you the message in its raw HTTP form.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原始**：**原始**子标签以原始 HTTP 形式向您显示消息。'
- en: '**Hex**: The **Hex** subtab, which presents the message in hexadecimal format;
    it is, in essence, a hex editor. You are permitted to edit individual bytes within
    tools such as **Proxy** and **Repeater**, but those values must be given in two-digit
    hexadecimal form, from **00** through **FF**.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**十六进制**：**十六进制**子标签以十六进制格式呈现消息；本质上，它是一个十六进制编辑器。您可以在诸如**代理**和**Repeater**等工具中编辑单个字节，但这些值必须以两位十六进制形式给出，从**00**到**FF**。'
- en: '**Render** (sometimes): Finally, the **Render** subtab can be grayed out or
    viewable depending on the HTTP response content type. This subtab is only enabled
    when the response returned is HTML, giving you the same view as if seen from a
    browser.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**渲染**（有时）：最后，**渲染**子标签可能会被灰显或可见，具体取决于 HTTP 响应的内容类型。只有当返回的响应为 HTML 时，这个子标签才会被启用，给您一个与浏览器查看时相同的视图。'
- en: Getting ready
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Let’s explore the multiple tabs available in the message editor for each request
    and response captured in Burp. An important distinction to note—messages inside
    the message editor from the **Target** | **Site map** and the **Proxy** | **HTTP
    History** tabs are *not* editable. Both of these areas preserve the state of traffic
    flowing through Burp. If you wish to *edit* any message, you must send the individual
    message to some other tool within Burp—such as **Repeater**, **Intruder**, and
    so on—where you are able to *edit* values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索在 Burp 中针对每个请求和响应所捕获的消息编辑器中的多个标签。需要注意的重要区分是——来自**目标** | **站点地图**和**代理**
    | **HTTP 历史记录**标签的消息在消息编辑器中是*不可编辑*的。这两个区域保存了通过 Burp 流动的流量状态。如果您希望*编辑*任何消息，您必须将单独的消息发送到
    Burp 中的其他工具——如**Repeater**、**Intruder**等——在这些工具中您可以*编辑*值。
- en: How to do it...
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Ensure you have traffic flowing between your browser, Burp, and the OWASP BWA
    VM.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您的流量在浏览器、Burp 和 OWASP BWA 虚拟机之间流动。
- en: 'Looking at the **Target** | **Site map** tab, notice the message editor section.
    Let’s focus on the **Request** side of the message first:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看**目标** | **站点地图**标签时，请注意消息编辑器部分。我们先聚焦于消息的**请求**部分：
- en: '![Figure 2.5 – Message editor viewing a request](image/B21173_Figure_2.5.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.5 – 消息编辑器查看请求](image/B21173_Figure_2.5.jpg)'
- en: Figure 2.5 – Message editor viewing a request
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – 消息编辑器查看请求
- en: When viewing a request, note that the subtabs available include **Pretty**,
    **Raw**, and **Hex**. To see other values, such as cookies, attributes, and parameters,
    use the **Inspector** side tab. The **Inspector** tab can be expanded or collapsed
    by clicking the three lines above the word **INSPECTOR**.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在查看请求时，请注意可用的子标签包括**格式化**、**原始**和**十六进制**。要查看其他值，如 cookies、属性和参数，请使用**检查器**侧标签。可以通过点击“**检查器**”上方的三条线来展开或折叠**检查器**标签。
- en: 'The **Inspector** tab is now collapsed:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**检查器**标签现在已折叠：'
- en: '![Figure 2.6 – Message editor with Inspector collapsed](image/B21173_Figure_2.6.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.6 – 消息编辑器检查器折叠状态](image/B21173_Figure_2.6.jpg)'
- en: Figure 2.6 – Message editor with Inspector collapsed
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – 消息编辑器检查器折叠状态
- en: 'The **Inspector** tab is now expanded:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**检查器**标签现在已展开：'
- en: '![Figure 2.7 – Message editor with Inspector expanded](image/B21173_Figure_2.7.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.7 – 展开检查器的消息编辑器](image/B21173_Figure_2.7.jpg)'
- en: Figure 2.7 – Message editor with Inspector expanded
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – 展开检查器的消息编辑器
- en: 'Once expanded, attributes, parameters, cookies, and headers are enumerated.
    Each section can be expanded as a dropdown to display the individual section information.
    For example, to see all cookies used in this request, expand the **Request cookies**
    subsection showing the number **4** to indicate there are four cookies used in
    this request:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 展开后，属性、参数、cookies和头部将被列出。每个部分可以展开为下拉菜单，显示各个部分的信息。例如，要查看此请求中使用的所有 cookies，展开显示数字
    **4** 的**请求 cookies**子部分，表示该请求中使用了四个 cookies：
- en: '![Figure 2.8 – Inspector view with Request cookies subsection expanded](image/B21173_Figure_2.8.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.8 – 检查器视图，展开请求 cookies 子部分](image/B21173_Figure_2.8.jpg)'
- en: Figure 2.8 – Inspector view with Request cookies subsection expanded
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – 检查器视图，展开请求 cookies 子部分
- en: 'The other side of the message is the **Response** tab, containing the **Pretty**,
    **Raw**, and **Hex** subtabs and, sometimes, **Render**. If the content is HTML,
    then the **Render** subtab provides an HTML display as it would be presented in
    a browser. The **Inspector** side tab is also available with the same information
    as previously described in the **Request** portion of the message:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 消息的另一部分是**响应**标签，包含**格式化**、**原始**和**十六进制**子标签，并有时还包括**渲染**。如果内容是HTML，则**渲染**子标签提供浏览器中呈现的HTML显示。**检查器**侧标签也可以使用，显示与之前描述的**请求**部分相同的信息：
- en: "![Figure 2.9 – Message editor viewing a response with Inspector collaps\uFEFF\
    ed](image/B21173_Figure_2.9.jpg)"
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9 – 消息编辑器查看响应时检查器折叠](image/B21173_Figure_2.9.jpg)'
- en: Figure 2.9 – Message editor viewing a response with Inspector collapsed
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9 – 消息编辑器查看响应时检查器折叠
- en: Repeating with Repeater
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Repeater进行重复请求
- en: '**Repeater** allows for slight changes or tweaks to a request, and it is displayed
    in the left-hand window. The **Send** button allows a request to be reissued,
    and the response is displayed in the right-hand window.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**Repeater**允许对请求进行轻微的修改或调整，并显示在左侧窗口中。**发送**按钮允许重新发送请求，响应显示在右侧窗口中。'
- en: Details related to your HTTP request include standard message editor details
    such as **Pretty**, **Raw**, and **Hex** as subtabs along with the **Inspector**
    side tab.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 与HTTP请求相关的详细信息包括标准的消息编辑器详细信息，如**格式化**、**原始**和**十六进制**，以及**检查器**侧标签。
- en: Details related to the HTTP response include standard message editor details
    including **Pretty**, **Raw**, and **Hex** as subtabs along with the **Inspector**
    side tab and, sometimes, **Render**.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 与HTTP响应相关的详细信息包括标准的消息编辑器详细信息，如**格式化**、**原始**和**十六进制**，以及**检查器**侧标签，有时还包括**渲染**。
- en: 'At the bottom of each panel is a search box, allowing the tester to quickly
    find a value present in a message:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 每个面板的底部都有一个搜索框，允许测试人员快速查找消息中存在的值：
- en: '![Figure 2.10 – Search box at the bottom of the request in Repeater](image/B21173_Figure_2.10.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.10 – Repeater中请求底部的搜索框](image/B21173_Figure_2.10.jpg)'
- en: Figure 2.10 – Search box at the bottom of the request in Repeater
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10 – Repeater中请求底部的搜索框
- en: 'There are additional search box settings available when the gear icon is clicked,
    including **Case sensitive**, **Regex**, and **Auto-scroll to match when text
    changes**. When searching for text, if case sensitivity is necessary, then the
    option can be toggled ON. In addition to searching for plain text strings, users
    can use **regular expression** (**regex**) patterns when matching a value present
    in a message. Finally, the auto-scroll feature, when checked, will automatically
    move to the position of the value the user is searching:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击齿轮图标时，会有额外的搜索框设置可用，包括**区分大小写**、**正则表达式**（**Regex**）和**文本更改时自动滚动以匹配**。当进行文本搜索时，如果需要区分大小写，可以切换该选项为开启。除了搜索普通文本字符串，用户还可以使用**正则表达式**（**regex**）模式来匹配消息中的某个值。最后，勾选自动滚动功能后，系统会自动滚动到用户搜索的值所在的位置：
- en: "![Figure 2.11 – Additional search box settings availa\uFEFFble](image/B21173_Figure_2.11..jpg)"
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图2.11 – 可用的额外搜索框设置](image/B21173_Figure_2.11..jpg)'
- en: Figure 2.11 – Additional search box settings available
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.11 – 可用的额外搜索框设置
- en: Getting ready
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: '**Repeater** allows you to manually modify and then re-issue an individual
    HTTP request, analyzing the response that you receive.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**Repeater**允许你手动修改并重新发出单个HTTP请求，分析你收到的响应。'
- en: How to do it...
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'From the **Target** | **Site map** or **Proxy** | **HTTP history** tabs (shown
    in the following screenshot), right-click a message and select **Send** **to Repeater**:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Target** | **Site map**或**Proxy** | **HTTP history**标签下（如下面的截图所示），右键点击一条消息并选择**发送到Repeater**：
- en: '![Figure 2.12 – Contextual menu to send the request to Repeater from Proxy
    HTTP history](image/B21173_Figure_2.12..jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图2.12 – 从Proxy HTTP历史记录中将请求发送到Repeater的上下文菜单](image/B21173_Figure_2.12..jpg)'
- en: Figure 2.12 – Contextual menu to send the request to Repeater from Proxy HTTP
    history
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.12 – 从代理HTTP历史记录中将请求发送到Repeater的上下文菜单
- en: Switch over to the **Repeater** tab. The **Request** is now in **Repeater**
    and is ready for parameter tweaking.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**Repeater**标签。**Request**现在在**Repeater**中，准备进行参数调整。
- en: '![Figure 2.13 – Request in Repeater, ready for tweaking](image/B21173_Figure_2.13..jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图2.13 – Repeater中的请求，准备进行调整](image/B21173_Figure_2.13..jpg)'
- en: Figure 2.13 – Request in Repeater, ready for tweaking
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.13 – Repeater中的请求，准备进行调整
- en: We will use **Repeater** quite a bit throughout this book. This chapter is just
    an introduction to **Repeater** and to understand its purpose. With regard to
    purpose, please note the main difference between **Repeater** and **Intruder**
    is the number of requests you can send at one time. If you are experimenting with
    slight changes to identify exposure points, **Repeater** is very handy. Once a
    pattern is established, **Intruder** can then be used to brute-force your vulnerable
    parameter over and over again with many requests.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本书中频繁使用**Repeater**。本章只是对**Repeater**的介绍，帮助理解它的用途。关于用途，请注意**Repeater**和**Intruder**的主要区别在于每次发送请求的数量。如果你是在进行轻微更改以识别暴露点的实验，**Repeater**非常方便。一旦模式确定，**Intruder**就可以用来反复地暴力破解你的漏洞参数，发送大量请求。
- en: Decoding with Decoder
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Decoder解码
- en: '**Burp Decoder** is a tool that allows the tester to convert raw data into
    encoded data or to take encoded data and convert it back to plain text. **Decoder**
    supports several formats, including URL encoding, HTML encoding, Base64 encoding,
    binary code, hashed data, and others. **Decoder** also includes a built-in hex
    editor.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**Burp Decoder**是一个工具，允许测试者将原始数据转换为编码数据，或者将编码数据转换回纯文本。**Decoder**支持多种格式，包括URL编码、HTML编码、Base64编码、二进制代码、哈希数据等。**Decoder**还包括一个内置的十六进制编辑器。'
- en: Getting ready
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: As a web penetration test progresses, a tester might happen upon an encoded
    value. Burp eases the decoding process by allowing the tester to send the encoded
    value to **Decoder** and try the various decoding functions available.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web渗透测试过程中，测试者可能会遇到一个编码值。Burp通过允许测试者将编码值发送到**Decoder**并尝试各种可用的解码功能，简化了解码过程。
- en: How to do it...
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Let’s try to decode the value of the **PHPSESSID** session token found in the
    OWASP Mutillidae II application. When a user initially browses to the URL (**http://<Your_VM_Assigned_IP_Address>/mutillidae/**),
    that user will be assigned a **PHPSESSID** cookie. The **PHPSESSID** value appears
    to be encrypted and then wrapped in Base64 encoding. Using **Decoder**, we can
    unwrap the value:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试解码在OWASP Mutillidae II应用程序中找到的**PHPSESSID**会话令牌。当用户最初浏览到URL（**http://<Your_VM_Assigned_IP_Address>/mutillidae/**）时，该用户将被分配一个**PHPSESSID**
    cookie。**PHPSESSID**的值似乎是加密的，然后用Base64编码进行了包装。使用**Decoder**，我们可以解开该值：
- en: Browse to the **http://<Your_VM_Assigned_IP_Address>/mutillidae/** application.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到**http://<Your_VM_Assigned_IP_Address>/mutillidae/**应用程序。
- en: 'Find the HTTP request you just generated from your browser within the **Proxy**
    | **HTTP history** tab (shown in the next screenshot). Highlight the **PHPSESSID**
    value itself, not the parameter name, right-click, and then select **Send** **to
    Decoder**:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Proxy** | **HTTP历史记录**标签中找到你刚刚从浏览器生成的HTTP请求（如下一截图所示）。高亮显示**PHPSESSID**值本身，而不是参数名称，右键点击，然后选择**发送**到**Decoder**：
- en: "![Figure 2.14 – Contextual menu to send \uFEFFthe highlighted value in \uFEFF\
    the request to Decoder from \uFEFFthe Proxy HTTP history](image/B21173_Figure_2.14..jpg)"
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图2.14 – 从代理HTTP历史记录中发送请求中的高亮值到Decoder的上下文菜单](image/B21173_Figure_2.14..jpg)'
- en: Figure 2.14 – Contextual menu to send the highlighted value in the request to
    Decoder from the Proxy HTTP history
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.14 – 从代理HTTP历史记录中发送请求中的高亮值到Decoder的上下文菜单
- en: 'In the **Decoder** tab, in the **Decode as…** dropdown shown as follows, select
    **Base64**. Note the results are encrypted:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Decoder**标签中，在如下面所示的**Decode as…**下拉菜单中选择**Base64**。请注意，结果是加密的：
- en: '![Figure 2.15 – Highlighted value from request in Decoder and encode/decode
    options available](image/B21173_Figure_2.15..jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图2.15 – 从请求中高亮的值，以及可用的编码/解码选项](image/B21173_Figure_2.15..jpg)'
- en: Figure 2.15 – Highlighted value from request in Decoder and encode/decode options
    available
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.15 – 从请求中高亮的值，以及可用的编码/解码选项
- en: In this example, we cannot proceed any further. We can confirm the value was,
    indeed, wrapped in Base64\. However, the value that is unwrapped is encrypted.
    The purpose of this recipe is to show you how you can use **Decoder** to manipulate
    encoded values.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们无法继续进行。我们可以确认值确实是用Base64进行了包装。然而，解开后的值是加密的。本教程的目的是向你展示如何使用**Decoder**来操作编码后的值。
- en: There’s more...
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'PortSwigger added **Decoder** functionality to the **Inspector** side tab as
    well. This makes the manipulation of values easier to see within the full context
    of the request or response when viewed through the message editor:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: PortSwigger还将**Decoder**功能添加到**Inspector**侧标签中。这使得在通过消息编辑器查看请求或响应的完整上下文时，操作值更加直观。
- en: "![Figure 2.16 – Using Inspector to perform encoding/dec\uFEFFoding](image/B21173_Figure_2.16..jpg)"
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图2.16 – 使用Inspector进行编码/解码操作](image/B21173_Figure_2.16..jpg)'
- en: Figure 2.16 – Using Inspector to perform encoding/decoding
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.16 – 使用Inspector进行编码/解码操作
- en: Intruding with Intruder
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用入侵者进行攻击
- en: '**Burp Intruder** allows a tester to brute-force or fuzz specific portions
    of an HTTP message, using customized payloads.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**Burp Intruder**允许测试人员使用自定义有效载荷对HTTP消息的特定部分进行暴力破解或模糊化。'
- en: 'To properly set up customized attacks in **Intruder**, a tester will need to
    use the settings available in the four subtabs of **Intruder**:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确设置**Intruder**中的自定义攻击，测试人员需要使用**Intruder**四个子标签中可用的设置：
- en: "![Figure 2.17 – Intruder and subtabs avai\uFEFFlable](image/B21173_Figure_2.17..jpg)"
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图2.17 – 入侵者和可用子标签](image/B21173_Figure_2.17..jpg)'
- en: Figure 2.17 – Intruder and subtabs available
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.17 – 入侵者和可用子标签
- en: Getting ready
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: A tester may wish to fuzz or brute-force parameter values within a message.
    Burp **Intruder** eases this process by providing various intruder attack styles,
    payloads, and options.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 测试人员可能希望在消息中模糊化或暴力破解参数值。Burp **Intruder**通过提供各种入侵攻击方式、有效载荷和选项简化了这一过程。
- en: How to do it...
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Browse to the login screen of Mutillidae and attempt to log in to the application.
    For example, type a username of **admin** and an invalid password of **adminpass**.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到Mutillidae的登录页面，并尝试登录应用程序。例如，输入用户名**admin**和无效密码**adminpass**。
- en: Find the login attempt in the **Proxy** | **HTTP history** tab. Your request
    number (that is, the **#** sign on the left-hand side) will be different from
    the one shown next. Select the message that captured your attempt to log in.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**代理** | **HTTP历史**标签页中找到登录尝试。你的请求编号（即左侧的**#**符号）与下方显示的编号不同。选择捕获你登录尝试的消息。
- en: 'As the login attempt message is highlighted in the **HTTP history** table,
    right-click the **Request** tab, and select **Send** **to Intruder**:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当登录尝试消息在**HTTP历史**表中被高亮显示时，右击**请求**标签，选择**发送** **到Intruder**：
- en: "![Figure 2.18 – Contextual menu to send the request to Intruder from Proxy\
    \ HTTP hi\uFEFFstory](image/B21173_Figure_2.18..jpg)"
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图2.18 – 从代理HTTP历史发送请求到Intruder的上下文菜单](image/B21173_Figure_2.18..jpg)'
- en: Figure 2.18 – Contextual menu to send the request to Intruder from Proxy HTTP
    history
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.18 – 从代理HTTP历史发送请求到Intruder的上下文菜单
- en: Positions
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 位置
- en: 'The **Positions** subtab identifies where the payload markers are to be defined
    within the **Payload** | **Positions** section. The **Positions** subtab also
    identifies the Attack type and the default setting is Sniper, which will work
    for us in this recipe. For our purposes, click the **Clear §** button (that is,
    payload markers) from the right-hand side menu. Manually select the password field
    by highlighting it with your cursor. Now, click the **Add §** button on the right-hand
    side menu. You should have the payload markers wrapping around the password field
    as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**位置**子标签页确定在**负载** | **位置**部分内定义负载标记的位置。**位置**子标签页还标识攻击类型，默认设置为Sniper，这对于我们的任务是有效的。为了我们的目的，从右侧菜单点击**清除§**按钮（即负载标记）。使用光标手动选择密码字段。现在，点击右侧菜单中的**添加§**按钮。你应该看到负载标记围绕密码字段如下所示：'
- en: "![Figure 2.19 – Substitution marker placed on password value in the\uFEFF request](image/B21173_Figure_2.19..jpg)"
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图2.19 – 替代标记放置在请求中的密码值上](image/B21173_Figure_2.19..jpg)'
- en: Figure 2.19 – Substitution marker placed on password value in the request
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.19 – 替代标记放置在请求中的密码值上
- en: Payloads
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 负载
- en: 'After the **Positions** subtab is the **Payloads** subtab:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在**位置**子标签页之后是**负载**子标签页：
- en: '![Figure 2.20 – Intruder Payloads subtab](image/B21173_Figure_2.20..jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图2.20 – Intruder负载子标签页](image/B21173_Figure_2.20..jpg)'
- en: Figure 2.20 – Intruder Payloads subtab
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.20 – Intruder负载子标签页
- en: The **Payloads** subtab identifies wordlist values or numbers you wish to be
    inserted into the positions you identified on the previous tab. There are several
    sections within the **Payloads** subtab, including **Payload sets**, **Payload
    options**, **Payload processing**, and **Payload encoding**.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**负载**子标签页识别你希望插入到前一个标签页中标识的各个位置的字典值或数字。**负载**子标签页内有多个部分，包括**负载集**、**负载选项**、**负载处理**和**负载编码**。'
- en: Payload sets
  id: totrans-130
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 负载集
- en: '**Payload sets** allows for the setting of the number of payloads as well as
    the type. For our purposes, we will use the default settings for **Sniper**, seen
    on the previous subtab, **Positions**. This configuration will allow us to use
    one payload with a **Payload type** value of **Simple list**:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**负载集**允许设置负载的数量及其类型。为了我们的目的，我们将使用**Sniper**的默认设置，如之前的**位置**子标签页所示。这种配置将允许我们使用一个负载，**负载类型**值为**简单列表**：'
- en: "![Figure 2.21 – Payloads subtab allows Payload sets to be\uFEFF configured](image/B21173_Figure_2.21..jpg)"
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图2.21 – 负载子标签页允许配置负载集](image/B21173_Figure_2.21..jpg)'
- en: Figure 2.21 – Payloads subtab allows Payload sets to be configured
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.21 – 负载子标签页允许配置负载集
- en: Payload options
  id: totrans-134
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 负载选项
- en: In the **Payload options** section, a tester can configure a custom payload
    or load a preconfigured one from a file.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在**负载选项**部分，测试人员可以配置自定义负载或从文件中加载预配置的负载。
- en: 'For our purposes, we will add one value to our payload. In the textbox, type
    **admin**, and then click the **Add** button to create our custom payload:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了我们的目的，我们将向负载中添加一个值。在文本框中输入**admin**，然后点击**添加**按钮以创建我们的自定义负载：
- en: "![Figure 2.22 – Values can be set in the simple list of this \uFEFFpayload\
    \ set](image/B21173_Figure_2.22..jpg)"
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图2.22 – 可以在此负载集的简单列表中设置值](image/B21173_Figure_2.22..jpg)'
- en: Figure 2.22 – Values can be set in the simple list of this payload set
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.22 – 可以在此负载集的简单列表中设置值
- en: Payload processing
  id: totrans-139
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 负载处理
- en: '**Payload processing** is useful when configuring special rules to be used
    while **Intruder** substitutes payloads into payload marker positions. For this
    recipe, we do not need any special payload-processing rules:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**载荷处理**在配置特殊规则时非常有用，这些规则将在**Intruder**将载荷替换到载荷标记位置时使用。对于本配方，我们不需要任何特殊的载荷处理规则：'
- en: "![Figure 2.23 – Payload processing allows for rules to be applied to payloads\
    \ as they run through an intr\uFEFFuder attack](image/B21173_Figure_2.23..jpg)"
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.23 – 载荷处理允许在 Intruder 攻击过程中对载荷应用规则](image/B21173_Figure_2.23..jpg)'
- en: Figure 2.23 – Payload processing allows for rules to be applied to payloads
    as they run through an intruder attack
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.23 – 载荷处理允许在 Intruder 攻击过程中对载荷应用规则
- en: Payload encoding
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 载荷编码
- en: '**Payload encoding** is applied to the payload value prior to sending the request
    to the web server. Many web servers may block offensive payloads (for example,
    **<script>** tags), so the encoding feature is a means to circumvent any blacklist
    blocking.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**载荷编码**在将请求发送到 Web 服务器之前应用于载荷值。许多 Web 服务器可能会阻止攻击性载荷（例如，**<script>** 标签），因此编码功能是一种绕过任何黑名单屏蔽的手段。'
- en: 'For this recipe’s purpose, leave the default box checked:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本配方的目的，保持默认框选中：
- en: "![Figure 2.24 – Payload encoding to be applied to the payload value substituted\
    \ at the substitution marker within e\uFEFFach request](image/B21173_Figure_2.24..jpg)"
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.24 – 应用于每个请求中替换标记的载荷值的载荷编码](image/B21173_Figure_2.24..jpg)'
- en: Figure 2.24 – Payload encoding to be applied to the payload value substituted
    at the substitution marker within each request
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.24 – 应用于每个请求中替换标记的载荷值的载荷编码
- en: Resource pool
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资源池
- en: 'After the **Payloads** subtab is the **Resource** **pool** subtab:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在**载荷**子标签后是**资源池**子标签：
- en: '![Figure 2.25 – Intruder Resource pool subtab](image/B21173_Figure_2.25..jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.25 – Intruder 资源池子标签](image/B21173_Figure_2.25..jpg)'
- en: Figure 2.25 – Intruder Resource pool subtab
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.25 – Intruder 资源池子标签
- en: 'The **Resource pool** subtab is used to assign the number of threads to be
    used during an intruder attack. The default pool size is **10**, which is resource-dependent.
    This tab allows the creation and management of various pool sizes combined with
    throttling of fixed or random delays:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**资源池**子标签用于分配在 Intruder 攻击过程中使用的线程数。默认池大小为**10**，具体取决于资源。此标签允许创建和管理不同大小的资源池，并结合固定或随机延迟进行节流：'
- en: '![Figure 2.26 – Default resource pool configured in Intruder](image/B21173_Figure_2.26..jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.26 – Intruder 中配置的默认资源池](image/B21173_Figure_2.26..jpg)'
- en: Figure 2.26 – Default resource pool configured in Intruder
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.26 – Intruder 中配置的默认资源池
- en: 'Depending upon your target application’s level of fortitude, you may wish to
    create a new resource pool with less intrusive behavior and network noise:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 根据目标应用程序的抗压能力，你可能希望创建一个新的资源池，采用较少侵入性的行为和网络噪声：
- en: "![Figure 2.27 – Creation of custom resource po\uFEFFol in Intruder](image/B21173_Figure_2.27..jpg)"
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.27 – 在 Intruder 中创建自定义资源池](image/B21173_Figure_2.27..jpg)'
- en: Figure 2.27 – Creation of custom resource pool in Intruder
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.27 – 在 Intruder 中创建自定义资源池
- en: Settings
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置
- en: 'Finally, the **Intruder** | **Settings** tab provides attack table customizations,
    particularly related to responses captured such as specific error messages. There
    are several sections within the **Intruder** | **Settings** tab, including **Save
    attack**, **Request headers**, **Error handling**, **Attack results**, **Grep
    - Match**, **Grep - Extract**, **Grep - Payloads**, **Redirections**, and **HTTP
    version**:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，**Intruder** | **设置**标签页提供了攻击表的自定义，特别是与捕获的响应相关，如特定的错误信息。**Intruder** | **设置**标签页中有多个部分，包括**保存攻击**、**请求头**、**错误处理**、**攻击结果**、**Grep
    - 匹配**、**Grep - 提取**、**Grep - 载荷**、**重定向**和**HTTP 版本**：
- en: "![Figure 2.28 – Intrud\uFEFFer Settings tab](image/B21173_Figure_2.28..jpg)"
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.28 – Intruder 设置标签页](image/B21173_Figure_2.28..jpg)'
- en: Figure 2.28 – Intruder Settings tab
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.28 – Intruder 设置标签页
- en: Save attack
  id: totrans-162
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 保存攻击
- en: '**Save attack** is an option allowing you to save your intruder attacks, configurations,
    and results to your project file. This feature is turned off, by default, to save
    space as the accumulation of attack data can become quite large:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**保存攻击**是一个选项，允许你将 Intruder 攻击、配置和结果保存到项目文件中。默认情况下此功能是关闭的，以节省空间，因为攻击数据的积累可能会变得非常庞大：'
- en: "![Figure 2.29 – Saving your \uFEFFintruder attacks](image/B21173_Figure_2.29..jpg)"
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.29 – 保存你的 Intruder 攻击](image/B21173_Figure_2.29..jpg)'
- en: Figure 2.29 – Saving your intruder attacks
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.29 – 保存你的 Intruder 攻击
- en: Request headers
  id: totrans-166
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 请求头
- en: '**Request headers** offers configurations specific to header parameters while
    **Intruder** is running attacks. For this recipe, leave the default boxes checked:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**请求头**提供了与攻击期间**Intruder**运行时的头参数相关的配置项。对于此食谱，保持默认勾选框选中：'
- en: "![Figure 2.30 – Request header\uFEFFs configurations](image/B21173_Figure_2.30..jpg)"
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.30 – 请求头配置](image/B21173_Figure_2.30..jpg)'
- en: Figure 2.30 – Request headers configurations
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.30 – 请求头配置
- en: Error handling
  id: totrans-170
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 错误处理
- en: '**Error handling** is a configuration to tell **Intruder** how you want to
    handle network errors during an attack. The default settings are **3** retries
    and a pause of **2000** milliseconds before each retry.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**错误处理**是一个配置项，告诉**Intruder**在攻击过程中如何处理网络错误。默认设置为**3**次重试，并在每次重试前暂停**2000**毫秒。'
- en: 'For this recipe, leave the default setting as they are:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此食谱，保持默认设置不变：
- en: "![Figure 2.31 \uFEFF– Error handling](image/B21173_Figure_2.31..jpg)"
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.31 – 错误处理](image/B21173_Figure_2.31..jpg)'
- en: Figure 2.31 – Error handling
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.31 – 错误处理
- en: Attack results
  id: totrans-175
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 攻击结果
- en: After starting the attack, **Intruder** creates an attack table. The **Attack
    results** section offers some settings around what is captured within that table.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动攻击后，**Intruder**会创建一个攻击表。**攻击结果**部分提供了一些与该表中捕获内容相关的设置。
- en: 'For this recipe, leave the default settings as they are:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此食谱，保持默认设置不变：
- en: "![Figure 2.32 – Attack\uFEFF results options](image/B21173_Figure_2.32..jpg)"
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.32 – 攻击结果选项](image/B21173_Figure_2.32..jpg)'
- en: Figure 2.32 – Attack results options
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.32 – 攻击结果选项
- en: Grep - Match
  id: totrans-180
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Grep - 匹配
- en: '**Grep - Match** is a highly useful feature that, when enabled, creates additional
    columns in the attack table results to quickly identify errors, exceptions, or
    even a custom string within the response.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '**Grep - 匹配**是一个非常有用的功能，启用后会在攻击表结果中创建附加列，以便快速识别响应中的错误、异常或自定义字符串。'
- en: 'For this recipe, leave the default settings as they are:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此食谱，保持默认设置不变：
- en: "![Figure 2.33 – Grep - M\uFEFFatch on keywords](image/B21173_Figure_2.33..jpg)"
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.33 – Grep - 基于关键字匹配](image/B21173_Figure_2.33..jpg)'
- en: Figure 2.33 – Grep - Match on keywords
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.33 – Grep - 基于关键字匹配
- en: Grep - Extract
  id: totrans-185
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Grep - 提取
- en: '**Grep - Extract**, when enabled, is another option for adding a column in
    the attack table whose label is specific to a string found in the response. This
    option differs from **Grep - Match** since **Grep - Extract** values are taken
    from an actual HTTP response, as opposed to an arbitrary string.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '**Grep - 提取**，启用后，是另一种选项，可以在攻击表中添加一列，其标签与响应中找到的字符串相关。此选项与**Grep - 匹配**不同，因为**Grep
    - 提取**的值来自实际的HTTP响应，而不是任意字符串。'
- en: 'For this recipe, leave the default settings as they are:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此食谱，保持默认设置不变：
- en: "![Figure 2.34 – Grep - Extract b\uFEFFased on response](image/B21173_Figure_2.34..jpg)"
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.34 – Grep - 基于响应提取](image/B21173_Figure_2.34..jpg)'
- en: Figure 2.34 – Grep - Extract based on response
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.34 – Grep - 基于响应提取
- en: Grep - Payloads
  id: totrans-190
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Grep - 负载
- en: '**Grep - Payloads** provides you with the ability to add columns to the attack
    table in which responses contain reflections of payloads.'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '**Grep - 负载**为您提供了向攻击表中添加列的功能，这些列包含响应中反射的负载。'
- en: 'For this recipe, leave the default settings as they are:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此食谱，保持默认设置不变：
- en: "![Figure 2.35 – Grep responses on payload values use\uFEFFd in the request](image/B21173_Figure_2.35..jpg)"
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.35 – Grep - 基于请求中的负载值提取响应](image/B21173_Figure_2.35..jpg)'
- en: Figure 2.35 – Grep responses on payload values used in the request
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.35 – Grep - 基于请求中的负载值提取响应
- en: Redirections
  id: totrans-195
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 重定向
- en: '**Redirections** instructs **Intruder** to never, conditionally, or always
    follow redirections. This feature is very useful, particularly when brute-forcing
    logins since a 302 redirect is generally an indication of entry.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**重定向**指示**Intruder**是否从不、根据条件或始终跟随重定向。这个功能非常有用，特别是在暴力破解登录时，因为302重定向通常表示登录成功。'
- en: 'For this recipe, leave the default settings as they are:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此食谱，保持默认设置不变：
- en: "![Figure 2.36 – Redi\uFEFFrection behavior](image/B21173_Figure_2.36..jpg)"
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.36 – 重定向行为](image/B21173_Figure_2.36..jpg)'
- en: Figure 2.36 – Redirection behavior
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.36 – 重定向行为
- en: HTTP version
  id: totrans-200
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: HTTP版本
- en: '**HTTP version** instructs **Intruder** to use either **HTTP/2** or **HTTP/1**
    as the protocol during the attack. The default setting will use whichever protocol
    is currently used by the target server:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTTP版本**指示**Intruder**在攻击期间使用**HTTP/2**或**HTTP/1**作为协议。默认设置将使用目标服务器当前使用的协议：'
- en: '![Figure 2.37 – HTTP protocol behavior](image/B21173_Figure_2.37..jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.37 – HTTP 协议行为](image/B21173_Figure_2.37..jpg)'
- en: Figure 2.37 – HTTP protocol behavior
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.37 – HTTP 协议行为
- en: 'Enable this feature if you wish to override the target’s project and use **HTTP/1**
    instead. Make sure to uncheck **Default to HTTP/2 if the server supports it**
    to force the **HTTP/1** protocol:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望覆盖目标项目并使用**HTTP/1**，请启用此功能。确保取消勾选**Default to HTTP/2 if the server supports
    it**，以强制使用**HTTP/1**协议：
- en: "![Figure 2.38 – \uFEFFHTTP/2 override](image/B21173_Figure_2.38..jpg)"
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: "![图 2.38 – \uFEFFHTTP/2 覆盖](image/B21173_Figure_2.38..jpg)"
- en: Figure 2.38 – HTTP/2 override
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.38 – HTTP/2 覆盖
- en: Start attack button
  id: totrans-207
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 开始攻击按钮
- en: 'Finally, we are ready to start **Intruder**. On either the **Payloads** or
    the **Settings** subtab, click the **Start attack** button to begin:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们准备开始**Intruder**。在**Payloads**或**Settings**子选项卡中，点击**Start attack**按钮以开始：
- en: '![Figure 2.39 – Intruder’s Start attack button](image/B21173_Figure_2.39..jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.39 – Intruder 的开始攻击按钮](image/B21173_Figure_2.39..jpg)'
- en: Figure 2.39 – Intruder’s Start attack button
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.39 – Intruder 的开始攻击按钮
- en: 'When the attack starts, an attack results table will appear as a pop-out screen.
    This allows the tester to review all requests using the payloads within the payload
    marker positions. It also allows us to review all responses and columns showing
    **Status code**, **Error**, **Timeout**, **Length**, and **Comment**:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 当攻击开始时，一个攻击结果表将以弹出屏幕的形式出现。这使得测试人员可以查看所有使用负载在负载标记位置中的请求。它还允许我们查看所有响应以及显示**状态码**、**错误**、**超时**、**长度**和**评论**的列：
- en: '![Figure 2.40 – Attack results table](image/B21173_Figure_2.40..jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.40 – 攻击结果表](image/B21173_Figure_2.40..jpg)'
- en: Figure 2.40 – Attack results table
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.40 – 攻击结果表
- en: For this recipe, we note that the payload of admin in the **password** parameter
    produced a status code of **302**, which is a redirect. This means we logged in
    to the Mutillidae application successfully.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此食谱，我们注意到**password**参数中的管理员负载产生了**302**状态码，这是一个重定向。这意味着我们成功登录到Mutillidae应用程序。
- en: 'Looking at **Response** | **Render** within the attack table allows us to see
    how the web application responded to our payload. As you can see, we are successfully
    logged in as an admin:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 查看攻击表中的**Response** | **Render**，可以看到Web应用程序如何响应我们的负载。如你所见，我们成功以管理员身份登录：
- en: '![Figure 2.41 – The result of the intruder attack is a logged-in session](image/B21173_Figure_2.41..jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.41 – Intruder 攻击的结果是已登录的会话](image/B21173_Figure_2.41..jpg)'
- en: Figure 2.41 – The result of the intruder attack is a logged-in session
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.41 – Intruder 攻击的结果是已登录的会话
