- en: Sniffing and Spoofing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嗅探和欺骗
- en: Network sniffing helps you understand which users are using services you can
    exploit, and
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 嗅探网络流量可以帮助你了解哪些用户正在使用你可以利用的服务，以及
- en: 'IP spoofing can be used to poison a system''s DNS or ARP cache, so that all
    their traffic is sent to a man in the middle (your designated host, for instance).
    Sniffing and spoofing are often used against the Windows endpoints in the network,
    and you need to understand the techniques that the bad guys are going to be using:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: IP欺骗可以用来毒害系统的DNS或ARP缓存，以便将所有流量发送到中间人（例如你指定的主机）。嗅探和欺骗经常用于网络中的Windows端点，你需要了解坏人将要使用的技术。
- en: '**Sniffing network traffic**: There are many tools to sniff network traffic,
    but they all work on the same principle. Capturing packets readable by your **Network
    Interface Card** (**NIC**). There are hundreds of protocols, and thousands of
    TCP/IP ports. It is safe to say that you will not have to learn about all of them,
    but you will probably learn a couple of dozen.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**嗅探网络流量**：有许多工具可以嗅探网络流量，但它们都是基于同样的原理。捕获你的**网络接口卡**（**NIC**）可读的数据包。有数百种协议和数千个TCP/IP端口。可以肯定的是你不需要了解所有这些，但你可能会学习几十种。'
- en: '**Spoofing network traffic**: The TCP/IP system is trusting. The general assumption
    underlying the way networks work involves an expectation of trustworthiness. What
    happens when a malefactor decides to play tricks with the way network packets
    are put together? This is spoofing. For example, when an ICMP packet is broadcast
    to a large number of hosts, but the origin IP address has been forged to point
    to a specific target host, all the hosts sent the broadcast packet send an unexpected
    acknowledgement to the victim. This is a *Smurf Attack*, and it ties up the victim
    machine. The Smurf Attack is one of many denial of service attacks.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**欺骗网络流量**：TCP/IP系统是信任的。网络工作的一般假设是可信任的。当恶意者决定对网络数据包的组装方式玩一些把戏时会发生什么？这就是欺骗。例如，当一个ICMP数据包广播到大量主机时，但源IP地址已被伪造指向特定目标主机，所有发送广播数据包的主机都会向受害者发送意外的确认。这就是*Smurf攻击*，它会占用受害者的机器。Smurf攻击是许多拒绝服务攻击中的一种。'
- en: 'In this chapter, we will be learning about the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Sniffing and spoofing network traffic
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嗅探和欺骗网络流量
- en: Sniffing network traffic
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嗅探网络流量
- en: Spoofing network traffic
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欺骗网络流量
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you will need at least two running Windows machines, either
    actual machines or virtual machines, and your Kali machine.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你至少需要两台运行Windows的机器，可以是实际机器也可以是虚拟机器，以及你的Kali机器。
- en: Sniffing and spoofing network traffic
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嗅探和欺骗网络流量
- en: 'You will have most likely noticed the Kali Linux motto: *The quieter you are,
    the more you are able to hear*. This is the heart of sniffing network traffic.
    You quietly listen to the network traffic, copying every packet on the wire. Every
    packet is important or it wouldn''t be there. Think about that for a moment with
    your security hat on. Do you understand why sending passwords in clear text is
    so bad? Well, protocols such as Telnet, FTP, and HTTP send passwords in clear
    text, instead of an encrypted hash. Any packet sniffer will catch these passwords
    and it doesn''t take a genius to launch a search of the packet capture for terms
    such as password. There''s no need to crack a hash; it is just there. You can
    impress a manager or a client by just pulling their clear-text password out of
    thin air. The bad guys use the same technique to break into networks and steal
    money and secrets.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你很可能已经注意到Kali Linux的座右铭：*你越安静，你就越能听到更多声音*。这是嗅探网络流量的核心。你悄悄地监听网络流量，复制每个数据包。每个数据包都很重要，否则它就不会存在。戴上你的安全帽，想一想这一点。你明白为什么明文发送密码是如此糟糕吗？例如，Telnet、FTP和HTTP等协议会以明文发送密码，而不是加密哈希。任何数据包嗅探器都可以捕获这些密码，而不需要天才就可以搜索数据包捕获中的密码等术语。无需破解哈希；它就在那里。你可以通过从空气中提取他们的明文密码来给经理或客户留下深刻印象。坏人也使用相同的技术来侵入网络并窃取金钱和机密。
- en: More than just passwords can be found within your copied packets. Packet sniffers
    are not only useful for purposes. They can be useful when looking for an attacker
    on the network. You can't hide from a packet sniffer. Packet sniffers are also
    great for network diagnostics. For instance, a sluggish network could be caused
    by a server with a dying NIC that is talking away to no one, or a run-away process
    tying up many others with responses.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你复制的数据包中不仅包含密码。数据包嗅探器不仅用于这个目的。在寻找网络上的攻击者时，它们也很有用。你无法躲避数据包嗅探器。数据包嗅探器也非常适用于网络诊断。例如，网络运行缓慢可能是由于服务器上的一个网卡出现问题，正在向无人发送数据，或者一个运行失控的进程占用了其他进程的响应。
- en: If sniffing is listening to the network then spoofing is lying on the network.
    What you are doing is having the attacking machine lie to the network and pretend
    to be someone else. With some of the tools described next and with two network
    cards on the attacking machine on the network, you can even pass the traffic onto
    the real host and capture all traffic to and from both machines. This is a **Man-in-the
    Middle** (**MitM**) attack. In most cases of pentesting, you are really only after
    the password hashes that can be obtained without a full MitM attack. Just spoofing
    without passing the traffic on will reveal password hashes in the ARP broadcasts
    from NetBIOS.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果嗅探是监听网络，那么欺骗就是在网络上撒谎。你所做的是让攻击机器对网络撒谎，并假装成其他人。使用接下来描述的一些工具，并在攻击机器上的两个网络卡上，你甚至可以将流量传递到真实主机，并捕获两台机器之间的所有流量。这是一种**中间人**（**MitM**）攻击。在大多数渗透测试中，你实际上只需要获取密码哈希，而不需要进行完整的MitM攻击。只是欺骗而不传递流量将在NetBIOS的ARP广播中显示密码哈希。
- en: 'Hacker tip:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客提示：
- en: 'Advanced Hacking Lab: if you are planning to run full MitM attacks on your
    network, you will need a host with at least two NICs in addition to your laptop
    with Kali Linux installed. Your MitM host can be a virtual or physical server.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 高级黑客实验室：如果您计划在您的网络上运行全面的MitM攻击，您将需要一个至少有两个网卡的主机，以及安装了Kali Linux的笔记本电脑。您的MitM主机可以是虚拟的或物理的服务器。
- en: Sniffing network traffic
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嗅探网络流量
- en: Here we are going to learn the meaning of Kali's logo, *The quieter you become,
    the more you can hear*, and the information that can be gained from a network
    passively.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将学习Kali标志的含义，*你变得越安静，你就能听到的越多*，以及可以从网络 passively 获得的信息。
- en: tcpdump
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: tcpdump
- en: tcpdump is a simple command-line sniffing tool found on most router, firewall,
    and Linux/UNIX systems. There is also a version that runs on Windows made by micoOLAP,
    which can be found at [http://www.microolap.com/products/network/tcpdump/](http://www.microolap.com/products/network/tcpdump/).
    It's not free, but there is a trial version. The nice thing about this version
    is that it is one simple executable which can be uploaded to a system and used
    without installing extra drivers. It can be launched on a cracked system to which
    you have shell access. Your shell must have system or administrator level access
    to work, because NICs will not run in promiscuous mode without administrative
    privileges. Another packet dump tool is **Windump.exe**, available from [http://www.winpcap.org/windump/install/](http://www.winpcap.org/windump/install/),
    where you will also find **WinPcap.exe**, which you need on the machine to run
    tcpdump or WinDump.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: tcpdump 是一个简单的命令行嗅探工具，可以在大多数路由器、防火墙和Linux/UNIX系统上找到。也有一个由micoOLAP制作的可以在Windows上运行的版本，可以在[http://www.microolap.com/products/network/tcpdump/](http://www.microolap.com/products/network/tcpdump/)找到。它不是免费的，但有试用版本。这个版本的好处是它是一个简单的可执行文件，可以上传到系统并在不安装额外驱动程序的情况下使用。它可以在您有shell访问权限的破解系统上启动。您的shell必须具有系统或管理员级别的访问权限才能工作，因为没有管理员权限，网卡将无法以混杂模式运行。另一个数据包转储工具是**Windump.exe**，可以从[http://www.winpcap.org/windump/install/](http://www.winpcap.org/windump/install/)获取，您还将在那里找到**WinPcap.exe**，您需要在机器上安装tcpdump或WinDump。
- en: On Linux/UNIX systems and routers such as Cisco or Juniper, it is likely to
    be installed by default. If you cannot find it on a Linux system, it is in every
    distribution repository.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux/UNIX系统和Cisco或Juniper等路由器上，它很可能是默认安装的。如果您在Linux系统上找不到它，它在每个发行版的软件库中都有。
- en: tcpdump is best used not for collecting data for real-time inspection, but for
    capturing data to a file for later viewing with a tool such as Wireshark. Because
    of its small size, portability, and use from the command line, tcpdump is great
    for this task.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: tcpdump最好不用于实时检查数据，而是用于捕获数据到文件中，以便以后使用诸如Wireshark之类的工具查看。由于其体积小、可移植性强，并且可以从命令行中使用，tcpdump非常适合这项任务。
- en: In the following screenshot, we see `tcpdump` running without saving to a file;
    note that we can see the packets as they pass through the interface.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们看到`tcpdump`在不保存到文件的情况下运行；请注意，我们可以看到数据包通过接口时的情况。
- en: 'The command we are running is:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在运行的命令是：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `-v` puts the application into verbose mode. The `-i vmnet1` tells the application
    to only capture the packets on the `vmnet1` interface. By hitting the *Enter*
    key, tcpdump will start capturing packets and displaying them on the screen. To
    stop the capture, hit *Ctrl* + *C*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`-v` 将应用程序置于详细模式。`-i vmnet1` 告诉应用程序只捕获`vmnet1`接口上的数据包。按下 *Enter* 键，tcpdump
    将开始捕获数据包并在屏幕上显示。要停止捕获，按下 *Ctrl* + *C*。'
- en: 'Now, in this mode, the data is going to pass too fast for any real use, especially
    on a large network, so next we will save the data to a file so we can view it
    at our leisure and with better viewing tools:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在这种模式下，数据传输速度太快，无法进行实际使用，特别是在大型网络上，所以下一步我们将数据保存到文件中，这样我们就可以在闲暇时使用更好的查看工具查看数据：
- en: '![](img/cac9609b-ae90-4011-8a4d-85982480895e.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cac9609b-ae90-4011-8a4d-85982480895e.png)'
- en: 'Now we will run the following command and pipe the output to a `.pcap` file.
    Note that there isn''t the output to the screen that you saw earlier. The data
    is going to the file now and not the screen. Run the following command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将运行以下命令并将输出导向一个 `.pcap` 文件。请注意，屏幕上没有您之前看到的输出。数据现在正在写入文件而不是屏幕。运行以下命令：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Note that we are adding `-w kalibook-cap-20150411.pcap` to the command. The
    `-w` flag tells the application to write out to the file named `kalibook-cap-20150411.pcap`.
    The file should have a descriptive name, and I also include the date in the filename.
    If you do this testing from time to time and don''t delete the files from the
    system, several of these files on the same system can be confusing. `.pcap` is
    the standard filename extension used in the industry for packet files, and stands
    for **Packet Capture File**. This file can be moved to another machine using file
    transfer methods:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们在命令中添加了`-w kalibook-cap-20150411.pcap`。`-w`标志告诉应用程序将输出写入名为`kalibook-cap-20150411.pcap`的文件中。文件应该有一个描述性的名称，我还在文件名中包含了日期。如果您不从时间到时间进行测试并且不从系统中删除文件，同一系统上的几个这样的文件可能会令人困惑。`.pcap`是行业中用于数据包文件的标准文件扩展名，代表**Packet
    Capture File**。这个文件可以通过文件传输方法移动到另一台机器上：
- en: '![](img/9e5f312e-c4b5-4fea-a161-c115c65ae1c0.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9e5f312e-c4b5-4fea-a161-c115c65ae1c0.png)'
- en: Notice that this capture is done on a machine named **Wander**. Wander is our
    network's firewall, which is the best place if you can to capture network traffic.
    We will now transfer it to our Kali box to inspect the packets.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此捕获是在名为**Wander**的机器上完成的。Wander是我们网络的防火墙，如果可能的话，这是捕获网络流量的最佳位置。现在我们将把它传输到我们的Kali盒子上检查数据包。
- en: 'First, on our Kali machine, we need to start up the SSH service. As we have
    said before, Kali includes all network services that you would find on any Linux
    server, but for reasons of security all services are turned off by default, and
    must be started manually for use. We''ll fire up SSH with the following command:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在我们的Kali机器上，我们需要启动SSH服务。正如我们之前所说，Kali包括您在任何Linux服务器上都会找到的所有网络服务，但出于安全原因，默认情况下所有服务都被关闭，必须手动启动才能使用。我们将使用以下命令启动SSH：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](img/1cfccc6f-0052-4eed-9b5b-e6a83ac1413d.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1cfccc6f-0052-4eed-9b5b-e6a83ac1413d.png)'
- en: We can see the SSH service start and, by running the `netstat -tl` command,
    we can see we have the SSH service listening on all interfaces. We are now going
    to transfer the files from the firewall to Kali.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到SSH服务启动，并通过运行`netstat -tl`命令，我们可以看到SSH服务在所有接口上都在监听。现在我们将从防火墙传输文件到Kali。
- en: 'On Kali, run the following command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kali上，运行以下命令：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will show you your IP address:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示你的IP地址：
- en: '![](img/4d0aad11-a0f0-4870-850c-0bcd1a0ab738.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d0aad11-a0f0-4870-850c-0bcd1a0ab738.png)'
- en: 'Now, from the firewall, transfer the file to Kali by running the following
    command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，从防火墙上运行以下命令将文件传输到Kali：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Accept the key warning by typing `yes` and then entering the root password when
    prompted.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通过输入`yes`接受密钥警告，然后在提示时输入root密码。
- en: 'I made a boo-boo in the demo and tried to send it to the wrong directory. There
    isn''t a `workspace` directory. If you see this type of error, this is most likely
    the reason. Notice that I have sent this file directly to the project directory
    on the Kali box:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我在演示中犯了一个错误，试图将其发送到错误的目录。没有`workspace`目录。如果你看到这种类型的错误，这很可能是原因。请注意，我已将此文件直接发送到Kali盒子上的项目目录：
- en: '![](img/ea87e752-888c-41de-bde2-6c1bb69d5eb7.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea87e752-888c-41de-bde2-6c1bb69d5eb7.png)'
- en: 'When you are done, don''t forget to turn SSH off:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，不要忘记关闭SSH：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Well, this is good for systems with SSH built in but what about Windows? Most
    people seem to use `putty.exe`, but your cracked server system is unlikely to
    have putty installed. We'll fall back to good old FTP. Most Windows systems come
    with the FTP command line utility. Sometimes, the security-conscious sysadmin
    removes `ftp.exe` from the machine and this blocks this type of file transfer.
    Normally it's there for your use. If it is not there, go to [http://www.coreftp.com/](http://www.coreftp.com/)
    and download Core FTP. They have a free version that would work for this application,
    and you can also get a paid license for more features.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于内置SSH的系统来说很好，但是Windows呢？大多数人似乎使用`putty.exe`，但是你的被入侵的服务器系统不太可能安装putty。我们将退而使用老式的FTP。大多数Windows系统都带有FTP命令行实用程序。有时，注重安全的系统管理员会从计算机中删除`ftp.exe`，这会阻止这种类型的文件传输。通常它是存在的供你使用。如果不存在，请访问[http://www.coreftp.com/](http://www.coreftp.com/)并下载Core
    FTP。他们有一个免费版本适用于此应用程序，并且您还可以获得更多功能的付费许可证。
- en: We are now going to transfer the `tcpdump` utility to our cracked Windows machine
    to capture some packets.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将把`tcpdump`实用程序传输到我们的被入侵的Windows机器上，以捕获一些数据包。
- en: 'First, we will need to set up the FTP service on Kali to transfer back and
    forth. We will use our friend Metasploit for this. Metasploit has an easy-to-use
    FTP service for this purpose. We will need a folder to work from:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在Kali上设置FTP服务来回传输。我们将使用我们的朋友Metasploit来实现这一点。Metasploit为此提供了一个易于使用的FTP服务。我们需要一个工作文件夹：
- en: Open the computer on the desktop on the Kali box.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Kali桌面上打开计算机。
- en: Click on the Home link in the left-hand list.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧列表中点击主页链接。
- en: Right-click in the folders area and pick Create new folder.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击文件夹区域，选择创建新文件夹。
- en: Name it `public`, and then right-click on the folder and go to Properties.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其命名为`public`，然后右键单击文件夹，转到属性。
- en: 'Click on the Permissions tab and give both the Group and Others read/write
    access and the ability to create and delete files, as seen in the following screenshot:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击权限选项卡，为组和其他人提供读/写访问权限以及创建和删除文件的能力，如下截图所示：
- en: '![](img/3b2c8e51-0791-408b-b5ec-41daa21b5d34.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b2c8e51-0791-408b-b5ec-41daa21b5d34.png)'
- en: If using the command line then. Make a directory by `mkdir public`.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用命令行，则通过`mkdir public`创建一个目录。
- en: 'Then type the following command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后输入以下命令：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now copy `NDIS driver` and `tcpdump.exe` to the `public` folder. You will want
    to rename the tcpdump file in the case of anti-virus and/or IDS/IPS systems that
    might be in use on the target network. I have changed the name to `tdpdump.jpg`.
    The `microolap_pssdk6_driver_for_ndis6_x86_v6.1.0.6363.msi` driver file will normally
    pass OK.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将`NDIS driver`和`tcpdump.exe`复制到`public`文件夹。您可能需要根据目标网络上可能使用的防病毒软件和/或IDS/IPS系统的情况来重命名tcpdump文件。我已将名称更改为`tdpdump.jpg`。`microolap_pssdk6_driver_for_ndis6_x86_v6.1.0.6363.msi`驱动文件通常可以通过。
- en: Now fire up Metasploit on the Kali box by going to Applications| Kali Linux
    | System Services | community/pro start to start the service. Once the service
    is started, open a Terminal window and type `msfpro`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在Kali盒子上启动Metasploit，方法是转到应用程序| Kali Linux | 系统服务 | community/pro start来启动服务。一旦服务启动，打开一个终端窗口，输入`msfpro`。
- en: 'Metasploit will start. Once Metasploit is running, move into your workspace
    for your project. My workspace is named `kali-book-int-20150300`:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit将启动。一旦Metasploit运行起来，进入你的项目工作空间。我的工作空间名为`kali-book-int-20150300`：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now we will configure the FTP server and fire it up. To load the FTP server,
    type the following command:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将配置FTP服务器并启动它。要加载FTP服务器，请输入以下命令：
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You will see the following configuration options:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到以下配置选项：
- en: '![](img/a41ee932-fafe-4b0f-8553-a9d28aeeb3c8.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a41ee932-fafe-4b0f-8553-a9d28aeeb3c8.png)'
- en: 'We need to change the `FTPROOT` setting type:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要更改`FTPROOT`设置类型：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'By running the `show options` command again, we can check our configuration.
    We''re ready to go. Type the following command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 通过再次运行`show options`命令，我们可以检查我们的配置。我们已经准备好了。输入以下命令：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You''ll see the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到以下内容：
- en: '![](img/8a0613b8-e4c0-4533-bbd2-2b89d5e74dd4.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a0613b8-e4c0-4533-bbd2-2b89d5e74dd4.png)'
- en: 'You can see the service by running the following command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下命令查看服务：
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](img/511078b3-7ce0-49b8-ac7d-bc6a25894bf8.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/511078b3-7ce0-49b8-ac7d-bc6a25894bf8.png)'
- en: Now let's copy over our files to our pwned Windows machine and capture some
    tasty packets! We will be using WinDump for this process on Windows.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将文件复制到我们的被入侵的Windows机器上，并捕获一些有用的数据包！我们将在Windows上使用WinDump进行此过程。
- en: WinDump (Windows tcpdump)
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WinDump（Windows tcpdump）
- en: WinDump is the tcpdump for Windows. It is open source and under the BSD Licenses.
    You can download it at [https://www.winpcap.org/windump/](https://www.winpcap.org/windump/).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: WinDump是Windows的tcpdump。它是开源的，属于BSD许可证。您可以在[https://www.winpcap.org/windump/](https://www.winpcap.org/windump/)下载。
- en: You will also need the WinPcap drivers, so be sure and get them from the site
    also.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要WinPcap驱动程序，因此一定要从网站上获取它们。
- en: WinDump will work from a command line, PowerShell, or a remote shell. Like tcpdump,
    it will write out to a file that you can download for offline viewing.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: WinDump可以从命令行、PowerShell或远程shell中工作。与tcpdump一样，它将写入一个文件，您可以下载以进行离线查看。
- en: 'Now let''s copy the files over to our pwned Windows machine. From either the
    command line, Power Shell, or from an exploited remote shell, log into the FTP
    server on Kali. My Kali box is at `192.168.202.129`:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将文件复制到我们的被入侵的Windows机器上。从命令行、Power Shell或被入侵的远程shell中，登录到Kali上的FTP服务器。我的Kali盒子在`192.168.202.129`：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The system will ask for a username. Just hit *Enter*. It will also ask for
    a password. Just hit *Enter* again and you''ll be logged on. Then type the following
    command:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 系统将要求输入用户名。只需按*Enter*。它还会要求输入密码。再次只需按*Enter*，然后输入以下命令：
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This will show the contents of the directory:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示目录的内容：
- en: '![](img/95206610-ff09-4deb-80a9-8d12bf068182.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95206610-ff09-4deb-80a9-8d12bf068182.png)'
- en: 'As seen in the preceding screenshot, we see our `WinPcap` driver and our undisguised
    `WinDump.exe`. To download them, just type the following command:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，我们看到了我们的`WinPcap`驱动程序和我们的未伪装的`WinDump.exe`。要下载它们，只需输入以下命令：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Then type the following command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输入以下命令：
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We''ve got our files. Now log out as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经拿到了我们的文件。现在按照以下步骤退出：
- en: '[PRE16]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'As we can see, we now have our files locally by typing the following command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，现在我们通过输入以下命令在本地拥有了我们的文件：
- en: '[PRE17]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can also see the files being transferred on Kali from the running instance
    in Metasploit:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在Metasploit中的运行实例中看到文件正在传输到Kali：
- en: '![](img/731b1d91-65c1-4191-a7e9-2eebba26680c.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/731b1d91-65c1-4191-a7e9-2eebba26680c.png)'
- en: 'Now log into your pwned Windows machine, either through RDP or starting a VNC
    session from Metasploit. From the desktop, go to the folder where you downloaded
    your files and double-click the `WinPcap.exe` file, as you can see in the following
    screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在登录到您的被入侵的Windows机器，可以通过RDP或从Metasploit启动VNC会话。从桌面，转到您下载文件的文件夹，并双击“WinPcap.exe”文件，如下截图所示：
- en: '![](img/dcf8396d-06aa-4ce0-8402-1188324e7ea3.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dcf8396d-06aa-4ce0-8402-1188324e7ea3.png)'
- en: 'Next, you''ll get the licenses windows. Click I Agree and move on:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将获得许可证窗口。点击“我同意”并继续：
- en: '![](img/61187d7d-fbd3-4bf0-a534-7a4cd74dab3a.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/61187d7d-fbd3-4bf0-a534-7a4cd74dab3a.png)'
- en: 'The next screen starts the actual installation of the driver. Be sure and keep
    the checkbox checked to run automatically. This will be a big help later if you
    have to go back:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个屏幕开始实际安装驱动程序。一定要保持复选框选中以自动运行。如果以后需要返回，这将非常有帮助：
- en: '![](img/7809c710-3f64-41af-a0de-60b73d1dc65a.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7809c710-3f64-41af-a0de-60b73d1dc65a.png)'
- en: With this done, you are ready to capture some packets.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您就可以开始捕获一些数据包了。
- en: 'Fire up either a command-line window or Power Shell and go to the directory
    where you have WinDump. Here we have it in the `Downloads` folder. Run the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 启动命令行窗口或Power Shell并转到您拥有WinDump的目录。我们将其放在“Downloads”文件夹中。运行以下命令：
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Soon you will start seeing packets pass through the interface. How much you
    see on your screen will depend on how much your system is talking to the network.
    As you can tell, this is way too much data to try to understand in real time.
    Also, in this mode, you are only seeing the header information of the packet and
    not the complete packet and its information. In the following screenshot, the
    yellow underlining shows the command being run and the green underlining shows
    that it is listening on the running interface. After that, you see the packets
    coming in.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 很快您将开始看到数据包通过接口传输。您在屏幕上看到的数据量取决于您的系统与网络通信的频率。显然，这是远远超出实时理解的数据量。此外，在此模式下，您只能看到数据包的标头信息，而无法看到完整的数据包及其信息。在下面的截图中，黄色下划线显示了正在运行的命令，绿色下划线显示了它正在监听运行接口。之后，您将看到数据包进入。
- en: 'Now let''s dump our capture to a file so we can really see what we have by
    running the following:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将我们的捕获转储到文件中，以便真正了解我们拥有什么：
- en: '![](img/4d9373f2-ab0b-434f-874b-7b2a4924e366.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d9373f2-ab0b-434f-874b-7b2a4924e366.png)'
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The -`w` file tells WinDump to write to the file `Win7-dump-20150411.pcap`.
    As you can see in the following screenshot, running WinDump with the `-h` flag
    will help if you ever forget the write flag. After it has run for a bit, hit *Ctrl*
    + *C* to stop the capture. You can now see we have a file containing our captured
    packets:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: -w文件告诉WinDump将文件写入到`Win7-dump-20150411.pcap`文件中。如下截图所示，使用`-h`标志运行WinDump将有所帮助，如果您忘记了写标志。运行一段时间后，按*Ctrl*
    + *C*停止捕获。现在您可以看到我们有一个包含我们捕获数据包的文件：
- en: '![](img/559064cc-e653-4f80-996b-563e91d0abb2.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/559064cc-e653-4f80-996b-563e91d0abb2.png)'
- en: After the capture, we need to send the file back to Kali to analyze the packets.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获后，我们需要将文件发送回Kali以分析数据包。
- en: Windows file sharing works for this. If Printer and File Sharing isn't turned
    on, enable it to share files and return to your Kali box.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Windows文件共享适用于此。如果未启用打印机和文件共享，请启用它以共享文件并返回到您的Kali盒子。
- en: 'Hacker tip:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客提示：
- en: This process may cause an alert, if the network administrators have something
    such as Tripwire running to check for configuration changes, or have ArcSight
    set up to flag logged actions by administrative users.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 此过程可能会引发警报，如果网络管理员有类似Tripwire的东西来检查配置更改，或者设置了ArcSight来标记管理用户的记录操作。
- en: 'Kali has SMB file sharing and NetBIOS discovery built right into its file manager
    in all desktop environments. You can map to the SMB share from the file manager.
    In the following demonstration, we are using the MATE desktop. From its file manager,
    you can map a SMB share by going to Go | Location... in the menu bar:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: Kali在所有桌面环境的文件管理器中都内置了SMB文件共享和NetBIOS发现。您可以从文件管理器映射到SMB共享。在以下演示中，我们使用MATE桌面。从其文件管理器，您可以通过转到菜单栏中的Go
    | Location...来映射SMB共享：
- en: '![](img/cc294105-73e8-444c-8d16-8be22b754fa6.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc294105-73e8-444c-8d16-8be22b754fa6.png)'
- en: 'This will give you a Go To: address bar. Since we are going to use the SMB
    protocol, we will use the prefix `smb://`. Other service type shares can also
    be mapped using this method, such as SSH, FTP, and NFS shares. To connect to the
    victim machine and copy over the file, type `smb://10.0.2.101/C$`.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这将给您一个转到：地址栏。由于我们将使用SMB协议，我们将使用前缀`smb://`。其他服务类型的共享也可以使用这种方法映射，例如SSH、FTP和NFS共享。要连接到受害者机器并复制文件，请键入`smb://10.0.2.101/C$`。
- en: 'Then hit the *Enter* key. This maps to the hidden `C$` share:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 然后按下*Enter*键。这对应隐藏的`C$`共享：
- en: '![](img/f4544778-8b21-4709-a899-bd1b1836d910.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f4544778-8b21-4709-a899-bd1b1836d910.png)'
- en: 'After hitting *Enter*, you will be given a login box. To log in to the share,
    just add the Windows credentials you have and then hit the Connect button. You
    will now see the shared directories on the system. Drill down into the folders
    and go to the directory where the packet capture is. For us, it will be `Users\Administrator\Downloads`:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*Enter*后，会出现一个登录框。要登录共享，只需添加您拥有的Windows凭据，然后点击连接按钮。现在您将看到系统上的共享目录。深入文件夹并转到数据包捕获所在的目录。对我们来说，它将是`Users\Administrator\Downloads`：
- en: '![](img/50b8ddf5-a002-4444-a242-adc6b6f29ede.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50b8ddf5-a002-4444-a242-adc6b6f29ede.png)'
- en: 'Now that we have gotten to where the file is, click on the Computer icon again,
    open up another file manager window, and then go to your evidence directory for
    your project. Then just drag and drop the file onto Kali''s drive:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经找到文件所在的位置，再次点击计算机图标，打开另一个文件管理器窗口，然后转到您项目的证据目录。然后只需将文件拖放到Kali的驱动器上：
- en: '![](img/c037bc06-341d-4cb9-9c3d-1aaddae1b516.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c037bc06-341d-4cb9-9c3d-1aaddae1b516.png)'
- en: Now we're ready to read some captured packets.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备好读取一些捕获的数据包了。
- en: Wireshark
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wireshark
- en: '**Wireshark** is the industry defacto standard for packet sniffing and analyzing
    network packets. Not only does it work for TCP/IP but it also works for just about
    every other known protocol and standard. There are versions of Wireshark for every
    well-known operating system. You will need the WinPcap drivers from earlier in
    the chapter to run Wireshark on Windows. On Linux/UNIX and OSX, the drivers are
    generally already there. Wireshark comes preloaded on Kali.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark是数据包嗅探和分析网络数据包的行业标准。它不仅适用于TCP/IP，还适用于几乎所有其他已知的协议和标准。Wireshark有适用于每个知名操作系统的版本。在Windows上运行Wireshark需要本章前面提到的WinPcap驱动程序。在Linux/UNIX和OSX上，驱动程序通常已经存在。Wireshark预装在Kali上。
- en: Wireshark is an extremely complex application. There have been many books written
    on its use. I do suggest getting one and learning the in-depth use of this tool.
    We will only cover the basics here.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark是一个非常复杂的应用程序。已经有很多关于它的使用方法的书籍。我建议您获取一本并深入学习这个工具的使用。我们这里只会涵盖基础知识。
- en: What is the internet if you really think about it? Some people point to their
    web browser and say there is the internet. A SysAdmin might give you a long answer
    about servers and devices transmitting data across a network. Everyone is right
    in their answer but still really miss exactly what it is. The internet is packets.
    Without packets, the information goes nowhere. Most don't realize that TCP/IP
    is two different protocol suites that work independently of each other. There
    is IP and then there is TCP and UDP, which run on top of IP. Then all this runs
    on top of internet frames.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你真的思考一下，互联网是什么？有些人指着他们的网络浏览器说那里就是互联网。系统管理员可能会给你一个关于服务器和设备在网络上传输数据的长篇回答。每个人的回答都是正确的，但仍然没有完全理解它到底是什么。互联网就是数据包。没有数据包，信息就无法传输。大多数人没有意识到TCP/IP是两个独立工作的协议套件。有IP，然后有TCP和UDP，它们运行在IP之上。然后所有这些都运行在互联网帧之上。
- en: We'll get back to Wireshark in a minute. First we need to understand what a
    packets.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后会回到Wireshark。首先我们需要了解什么是数据包。
- en: The packet
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据包
- en: 'Let''s look at a packet. The following is just one packet of information pulled
    from a captured data stream. Please remember: this is just one packet!'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个数据包。以下只是从捕获的数据流中提取的一小部分信息。请记住：这只是一个数据包！
- en: Oh, a little history here. If you look at the structure of the packet and look
    at the structure of an old telegraph message, you will notice the structure is
    the same. Yes, a packet is basically a telegram. Also, remember Morse code is
    basically a four-bit binary language.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，这里有一点历史。如果你看一下数据包的结构，再看一下旧电报消息的结构，你会注意到它们的结构是一样的。是的，数据包基本上就是一封电报。另外，记住莫尔斯电码基本上是一种四位二进制语言。
- en: 'Note that first we have the **frame**. The frame contains basic information
    about the packet you can see. The bytes on the wire are captured by Wireshark.
    This also keeps the timing of the packets that are used in reassembling the packets
    when received:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，首先我们有**帧**。帧包含有关数据包的基本信息，您可以看到。Wireshark捕获了传输线上的字节。这也保留了数据包的时间，用于在接收时重新组装数据包：
- en: '[PRE20]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Next, we have the IP section of your packet. We see that this contains the
    MAC addresses of the source and destination interfaces. Your MAC address is your
    real machine address. The IP part of the stack does the routing so that the two
    MAC addresses can find each other:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有数据包的IP部分。我们看到这包含了源和目标接口的MAC地址。您的MAC地址是您真实的机器地址。堆栈的IP部分进行路由，以便这两个MAC地址可以找到彼此：
- en: '[PRE21]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The next section of the packet is where TCP comes in and sets the type of TCP
    or UDP protocol to be used and the assigned source and destination ports for the
    transmission of the packet. This packet is being sent from a client machine (the
    source). From the preceding IP section, we see the client IP address is `192.168.202.130`.
    We see the client''s port: `49161`. This packet is being sent to `192.168.202.128`
    (the destination) at port `445`. This being TCP, a return route is included for
    returned traffic. We can tell just by the `Destination port` information that
    this is some type of SMB traffic:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包的下一部分是TCP介入的地方，设置要使用的TCP或UDP协议类型以及用于传输数据包的分配源和目的端口。这个数据包是从客户端机器（源）发送的。从前面的IP部分，我们看到客户端IP地址是`192.168.202.130`。我们看到客户端的端口是`49161`。这个数据包被发送到`192.168.202.128`（目的地）的端口`445`。由于这是TCP，返回路由也包括返回的流量。仅通过“目的地端口”信息，我们就可以知道这是某种类型的SMB流量：
- en: '[PRE22]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In the packet information, 0 is no and 1 is yes.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据包信息中，0表示否，1表示是。
- en: '[PRE23]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We see that this is a NetBIOS session using the SMB protocol:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到这是使用SMB协议的NetBIOS会话：
- en: '[PRE24]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Next, we have access granted to the data we are requesting. We can now see this
    packet is involved with accessing a file. The user who has done this request has
    the following permissions to view the file requested. We can see from the preceding
    code that a successful status was given for the file request.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们已经被授予了我们正在请求的数据的访问权限。我们现在可以看到这个数据包涉及访问一个文件。发出此请求的用户具有查看所请求文件的以下权限。我们可以从前面的代码中看到，文件请求已经获得了成功的状态。
- en: '[PRE25]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'All the preceding code is to let one computer know that on another computer
    there exists a file named `\My Videos\desktop.ini`. 47 bytes of information was
    sent. Now this wasn''t the actual file but just a listing of the file. Basically,
    this would be the packet that makes a file icon appear in your window manager.
    It sure takes a lot to send just a little bit of data:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 所有前面的代码都是为了让一台计算机知道另一台计算机上存在一个名为`\My Videos\desktop.ini`的文件。发送了47字节的信息。现在这不是实际的文件，而只是文件的列表。基本上，这将是使文件图标出现在你的窗口管理器中的数据包。发送这么少的数据确实需要很多工作：
- en: '[PRE26]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Now that we know a bit about packets, let's get back to Wireshark.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对数据包有了一些了解，让我们回到Wireshark。
- en: Working with Wireshark
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Wireshark
- en: Let's open it up and open our capture. First, go to Applications | Kali Linux
    | Top 10 Security Tools | wireshark. When it starts, it will give you warnings
    about running as root. Just click through these. If you like, check the box to
    the effect that you don't want to see these again. When you work with Kali, you
    will always be working as `root`.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们打开它并打开我们的捕获。首先，转到应用程序 | Kali Linux | 前10个安全工具 | wireshark。当它启动时，它会警告你以`root`身份运行。只需点击通过。如果愿意，可以勾选不再显示这些警告的复选框。当你使用Kali时，你将始终以`root`身份工作。
- en: 'Another warning: never do this with a production Linux machine. Never log in
    and run as `root` anywhere except Kali. Wolf added a standard user and `sudo`
    to his Kali Linux test box and it only runs as `root` when he is actually running
    a test.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个警告：永远不要在生产Linux机器上这样做。除了Kali之外，永远不要以`root`身份登录和运行。Wolf在他的Kali Linux测试盒中添加了一个标准用户和`sudo`，只有在实际运行测试时才以`root`身份运行。
- en: '![](img/257d67e6-3cbf-4cd6-8c7e-289c9fcdb827.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/257d67e6-3cbf-4cd6-8c7e-289c9fcdb827.png)'
- en: 'After the warnings, the window will open. As we can see, we have a really nice
    interface. You can do more than read captures. You can capture packets from the
    local interfaces listed. To the right, you will see a section for Online Help.
    If you get lost and need help, that is where you go. You''ll find tons of help
    online:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 警告后，窗口将打开。正如我们所看到的，我们有一个非常好的界面。你不仅可以阅读捕获的数据，还可以从列出的本地接口捕获数据包。在右侧，你会看到一个在线帮助的部分。如果你迷失了并且需要帮助，那就是你去的地方。你会在网上找到大量的帮助：
- en: '![](img/345cb7f8-711a-4e6c-8f72-969cddde5837.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/345cb7f8-711a-4e6c-8f72-969cddde5837.png)'
- en: 'Let''s open our capture. Click on File | Open and you will get a file menu.
    Navigate to where your file is and click Open:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们打开我们的捕获。点击文件 | 打开，你会得到一个文件菜单。导航到你的文件所在的位置，然后点击打开：
- en: '![](img/d999690c-f766-4d42-9c16-a5e7eaca7d83.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d999690c-f766-4d42-9c16-a5e7eaca7d83.png)'
- en: Now the capture is open and all the data captured is listed in the top screen.
    Each listing is a packet. What you see is the header information of the packet,
    its source, its destination, and its protocol type.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在捕获已经打开，所有捕获的数据都列在顶部屏幕上。每个列表都是一个数据包。你所看到的是数据包的头信息，它的源，目的地和协议类型。
- en: 'By clicking on a packet in the top screen, the full information of that packet
    will be in the middle screen. This will be the information we saw earlier when
    we were breaking down a packet. This is where you will see that information. Actually,
    this is the packet in human-readable form. In the bottom screen, we have the actual
    raw packet in machine language. By clicking on the lines of information in the
    middle screen, Wireshark will highlight in blue the string of machine language
    showing where that code is on the packet:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在顶部屏幕上点击一个数据包，该数据包的完整信息将显示在中间屏幕上。这将是我们之前在分解数据包时看到的信息。这就是你会看到这些信息的地方。实际上，这是以人类可读的形式呈现的数据包。在底部屏幕上，我们有实际的原始数据包以机器语言显示。通过在中间屏幕上的信息行上点击，Wireshark将以蓝色突出显示机器语言字符串，显示该代码在数据包中的位置：
- en: '![](img/757a53ba-47c2-4a94-9ca3-00d3738a1cdd.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/757a53ba-47c2-4a94-9ca3-00d3738a1cdd.png)'
- en: 'Looking at the first screen, we see the overall traffic. We see a machine making
    a DHCPv6 Solicit call and not getting a response from anywhere. Hmm, IPv6 must
    be turned off on this network. Next, we see the back and forth traffic between
    `192.168.202.128` and `192.168.202.130` talking SMB. Just from the headers, we
    can see that this transmission is for file information on `192.168.202.128` using
    SMB. We can tell that a user on `.130` has access to `.128` just by looking at
    the headers:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 从第一个屏幕上看，我们可以看到整体的流量。我们看到一台机器发出了DHCPv6 Solicit呼叫，但没有从任何地方得到响应。嗯，IPv6在这个网络上必须被关闭了。接下来，我们看到`192.168.202.128`和`192.168.202.130`之间来回的SMB通信。仅从头部信息，我们就可以看到这个传输是用于在`192.168.202.128`上使用SMB的文件信息。仅仅通过查看头部信息，我们就可以知道`.130`上的用户可以访问`.128`：
- en: '![](img/f5aec13f-ae5d-4b62-8195-966e52b62117.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5aec13f-ae5d-4b62-8195-966e52b62117.png)'
- en: 'So where is the good stuff? In the following screenshot, we have an `SMB NTLMSSP`
    packet and we can even see that this is for the account `IVEBEENHAD\Administrator`
    in the header. By selecting the packet, we can drill-down into the packet and
    find the NTLM hash value of the password. This alone can be used in exploitation
    tools that can pass the hash. You can also bring this hash value into an offline
    password cracking tool, such as John the Ripper or Hydra. Notice that you can
    also see the value in the raw packet information in the bottom screen:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 那么好东西在哪里？在下面的截图中，我们有一个`SMB NTLMSSP`数据包，甚至可以看到这是用于账户`IVEBEENHAD\Administrator`的。通过选择数据包，我们可以深入到数据包中，找到密码的NTLM哈希值。这本身可以用于传递哈希的利用工具。您还可以将这个哈希值带入离线密码破解工具，比如John
    the Ripper或Hydra。请注意，您还可以在底部屏幕的原始数据包信息中看到该值：
- en: '![](img/90479b5c-6336-47a1-bfcb-c9891bac9ffc.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90479b5c-6336-47a1-bfcb-c9891bac9ffc.png)'
- en: 'One of the best features of Wireshark is the **search** function. The details
    of this function are enough for a book in themselves. You can build expressions
    with the Expression... button on the right side of the Filter field. From simple
    filters, such as `ip != 10.0.0.232` (to slice out all traffic to your Kali box),
    or checking for unexpected SMTP traffic by entering SMTP into the Filter field,
    there is endless fun in store as you learn the filters you need the most. The
    online help will explain much, and like all good knowledge repositories it will
    open new questions as well:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark最好的功能之一是**搜索**功能。这个功能的细节足够写一本书。您可以使用过滤器字段右侧的Expression...按钮构建表达式。从简单的过滤器，比如`ip
    != 10.0.0.232`（用于切出所有发送到您的Kali盒子的流量），或者通过在过滤器字段中输入SMTP来检查意外的SMTP流量，学习最需要的过滤器时会有无尽的乐趣。在线帮助会解释很多内容，就像所有良好的知识库一样，它也会引发新的问题：
- en: '![](img/120a512c-5048-471d-8bac-12eaeaed4eba.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/120a512c-5048-471d-8bac-12eaeaed4eba.png)'
- en: Spoofing network traffic
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 欺骗网络流量
- en: 'There are several definitions of spoofing on the internet:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上有几种欺骗的定义：
- en: '**Email spoofing**: The most common definition related to masquerading as a
    different person by using a fake email address. This works well when attempting
    a **phishing attack**, where the victim is sent an email that purports to be from
    their bank or a retail store.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件欺骗：最常见的定义是通过使用假电子邮件地址伪装成不同的人。在尝试**钓鱼攻击**时，这很有效，受害者会收到一封假装来自他们的银行或零售商的电子邮件。
- en: '**Domain spoofing**: It is possible to spoof a domain, where you poison the
    route table on a network or individual workstation. How that works is that the
    domain the user types into the address bar of their browser is misaligned to point
    to a false IP address. When the victim goes to [http://bankarmenia.com/](http://bankarmenia.com/)
    they end up at a phishing site that looks exactly such as the Bank of Armenia
    site, but is not. This is used to collect credentials from users for purposes
    of theft.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 域名欺骗：可以欺骗域名，在网络或个人工作站上毒害路由表。其工作原理是用户在浏览器地址栏中输入的域名被错误地指向错误的IP地址。当受害者访问[http://bankarmenia.com/](http://bankarmenia.com/)时，他们最终会进入一个看起来与亚美尼亚银行网站完全相同的钓鱼网站，但实际上并不是。这用于收集用户的凭证，以进行盗窃。
- en: '**Domain error spoofing**: Hackers buy domains that have common errors for
    popular sites, such as `https://www.yaahoo.com/`. They build a site that looks
    such as [https://www.yahoo.com/](https://www.yahoo.com/), and benefit from all
    the misspellings.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 域名错误欺骗：黑客购买常见错误的域名，比如`https://www.yaahoo.com/`。他们建立一个看起来像[https://www.yahoo.com/](https://www.yahoo.com/)的网站，并从所有的拼写错误中获益。
- en: '**IP spoofing**: The creation of crafted packets for the purpose of masquerading
    as a different machine, or for the purpose of hiding the origin of the packets.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP欺骗：制作精心制作的数据包，目的是伪装成不同的机器，或者为了隐藏数据包的来源。
- en: Ettercap
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ettercap
- en: '![](img/729ca8ba-aa0a-41d3-95e8-fe6d1005018f.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/729ca8ba-aa0a-41d3-95e8-fe6d1005018f.png)'
- en: 'Cute logo and very revealing. Yes, that is a wireless router on the spider''s
    back. Ettercap has some great plugins for wireless networks. We won''t be covering
    wireless right now, but it''s something to know. Ettercap can sniff and capture
    data just such as tcpdump and Wireshark, but it can also spoof network traffic,
    capture interesting information, and pipe it to a file. The graphical interface
    can be found at Applications | Kali Linux | Sniffing/Spoofing | Network Sniffers
    | ettercap-graphical, which will fire up Ettercap:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 可爱的标志，非常具有启发性。是的，在蜘蛛背上有一个无线路由器。Ettercap有一些用于无线网络的很棒的插件。我们现在不会涵盖无线网络，但这是需要知道的。Ettercap可以嗅探和捕获数据，就像tcpdump和Wireshark一样，但它还可以欺骗网络流量，捕获有趣的信息，并将其传输到文件中。图形界面可以在应用程序
    | Kali Linux | 嗅探/欺骗 | 网络嗅探器 | ettercap-graphical中找到，这将启动Ettercap：
- en: '![](img/5bd16b7c-25f4-4ab3-81b0-86a4374ad099.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5bd16b7c-25f4-4ab3-81b0-86a4374ad099.png)'
- en: 'The following screenshot shows the graphical interface for Ettercap. We first
    start Unified Sniffing by selecting Sniff | Unified Sniffing... in the menu bar:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了Ettercap的图形界面。我们首先通过选择菜单栏中的Sniff | Unified Sniffing...来启动统一嗅探：
- en: '![](img/9ef36662-0c3b-4df2-8c47-d8952ea216dc.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ef36662-0c3b-4df2-8c47-d8952ea216dc.png)'
- en: 'We are now asked which interface to use. Normally, it will be the default if
    needed. With the drop-down box, you can select any interface on the system. Click
    OK:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们被问到要使用哪个接口。通常情况下，如果需要的话，它将是默认的。通过下拉框，您可以选择系统上的任何接口。点击确定：
- en: Warning!
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 警告！
- en: When using SSH tunneling, Ettercap will break the tunnel connection if used
    from the remote machine. They don't seem to play well with each other.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用SSH隧道时，如果从远程机器使用，Ettercap将中断隧道连接。它们似乎无法很好地协同工作。
- en: '![](img/3ab039c8-4325-44da-ae8e-50b6ee5049cd.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ab039c8-4325-44da-ae8e-50b6ee5049cd.png)'
- en: You will notice that the menu bar has changed once Unified Sniffing is configured.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦配置了统一嗅探，您会注意到菜单栏已经发生了变化。
- en: 'First we need to log messages. Go to Logging | Log user messages... in the
    menu bar:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们需要记录消息。在菜单栏中选择Logging | Log user messages...：
- en: '![](img/c22cdc99-d696-4502-b383-59a428cc47fd.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c22cdc99-d696-4502-b383-59a428cc47fd.png)'
- en: 'You will be given a window with which to name the file for the message output.
    Give it a filename and click OK:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 然后会弹出一个窗口，用于为消息输出命名文件。给它一个文件名，然后点击确定：
- en: '![](img/312f377c-44ee-4726-9fae-cd686e0f9a32.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/312f377c-44ee-4726-9fae-cd686e0f9a32.png)'
- en: Next, we will need to start sniffing the traffic. Go to Start | Start Sniffing.
    What is happening here is the same function that is performed by either tcpdump
    and Wireshark. Ettercap at the moment is just passively capturing packets. Before
    starting your sniff, you can set up Ettercap under the Logging menu to also save
    all captured packets for later inspection. You just save the capture to a `.pcap`
    file, just like in tcpdump and Wireshark.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要开始嗅探流量。转到开始 | 开始嗅探。这里发生的情况与tcpdump和Wireshark执行的功能相同。目前，Ettercap只是被动地捕获数据包。在开始嗅探之前，您可以在日志菜单下设置Ettercap，以便保存所有捕获的数据包以供以后检查。您只需将捕获保存到一个`.pcap`文件中，就像在tcpdump和Wireshark中一样。
- en: 'Normally, just saving the output of the user messages is good enough for pentesting.
    When pentesting, you are mainly after passwords and login credentials. The message
    log will catch these. Sometimes, for some extra reconnaissance, you can throw
    in saving the whole capture:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，只保存用户消息的输出就足够进行渗透测试。在渗透测试中，您主要是在寻找密码和登录凭据。消息日志将捕获这些信息。有时，为了进行额外的侦察，您可以保存整个捕获：
- en: '![](img/e7c68ac9-4a38-4ad1-8587-f16b88862f04.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e7c68ac9-4a38-4ad1-8587-f16b88862f04.png)'
- en: 'Once sniffing has started, we need to scan for hosts. Go to Hosts | Scan for
    hosts in the menu bar. This will scan the local network for available hosts. Note
    there is also an option to Load from file.... You can pick this option and load
    a list of host IP addresses from a text file. This is a good option when on a
    large network and you only want to spoof traffic to the file servers and domain
    controllers and not spoof the workstations. This will cut down on network traffic.
    ARP spoofing can generate a lot of traffic. This traffic, if it is a large network,
    can slow the network. If you are testing surreptitiously, the traffic will get
    you caught:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦嗅探开始，我们需要扫描主机。在菜单栏中选择主机 | 扫描主机。这将扫描本地网络以查找可用的主机。请注意，还有一个选项是从文件加载....您可以选择此选项，并从文本文件中加载主机IP地址列表。当在大型网络上时，这是一个很好的选择，您只想欺骗文件服务器和域控制器的流量，而不是欺骗工作站。这将减少网络流量。ARP欺骗可能会产生大量流量。如果是大型网络，这种流量可能会减慢网络。如果您在秘密测试，这种流量会让您被发现：
- en: '![](img/15805e3d-d9fb-4904-ac12-1830a87c7275.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![](img/15805e3d-d9fb-4904-ac12-1830a87c7275.png)'
- en: 'In the following screenshot, we see a list of hosts we picked up from our scan.
    Since this is a small network, we will spoof all the hosts. We see that we have
    five hosts listed complete with MAC addresses. Remember that one of these is the
    testing machine:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们看到了我们从扫描中获得的主机列表。由于这是一个小型网络，我们将欺骗所有主机。我们看到有五个主机列出，包括MAC地址。请记住其中一个是测试机器：
- en: '![](img/8b1606e9-3595-4085-8160-c8e56d0b4d09.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8b1606e9-3595-4085-8160-c8e56d0b4d09.png)'
- en: 'We''re ready to poison the water and see what floats up. Go to Mitm | Arp poisoning...
    and click on it:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经准备好对水进行投毒并查看浮出的东西。转到Mitm | Arp poisoning...然后点击它：
- en: '![](img/1c574c16-c748-4012-af9e-712b155c1dc7.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1c574c16-c748-4012-af9e-712b155c1dc7.png)'
- en: 'You will then get a window to set the type of poisoning to perform. Pick Sniff
    remote connections. and click OK:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您将获得一个窗口来设置要执行的投毒类型。选择嗅探远程连接。然后点击确定：
- en: '![](img/ac22faca-660e-49bd-9641-88ba9b871bac.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac22faca-660e-49bd-9641-88ba9b871bac.png)'
- en: 'The following screen shows a DNS-poisoning in progress:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕显示了DNS投毒正在进行中：
- en: '![](img/fe83501a-ced0-421b-87f2-ce83b2759e7b.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fe83501a-ced0-421b-87f2-ce83b2759e7b.png)'
- en: Once the poisoning is done, data will be sent through the Ettercap interface
    that shows you administrative users and their NTLM password hashes. This is enough
    information to start working on password hashes with John the Ripper or Hashcat.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 投毒完成后，数据将通过Ettercap界面发送，显示管理员用户及其NTLM密码哈希。这已经足够开始使用John the Ripper或Hashcat对密码哈希进行破解。
- en: 'Hacker tip:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客提示：
- en: Even if the administrator passwords failed, you should still crack them. The
    admin user might have forgotten which machine they were logging into and the failed
    passwords might work somewhere else in the system.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 即使管理员密码失败，您仍然应该破解它们。管理员用户可能已经忘记了他们登录的机器，而失败的密码可能在系统的其他地方起作用。
- en: '![](img/c3de540b-7eec-41f7-9f28-49ae25b6611c.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c3de540b-7eec-41f7-9f28-49ae25b6611c.png)'
- en: In most security policies, Windows systems are set to refuse connections after
    five or six attempts from a user. This policy protects user accounts from brute-force
    password attacks or password guessing attacks. This will stop brute-forcing passwords
    but as you can see, this policy has no effect on an exploit of this kind. You
    already have the administrator password, so you can log in the first time.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数安全策略中，Windows系统设置为在用户尝试五次或六次连接后拒绝连接。这个策略保护用户帐户免受暴力破解密码或猜测密码的攻击。这将阻止暴力破解密码，但正如您所看到的，这个策略对这种漏洞没有影响。您已经有了管理员密码，所以您可以第一次登录。
- en: One great feature of Ettercap is that it also works under the command line using
    the Ncurses interface. This is great when working from a remote system using SSH.
    Use the *Tab* key and arrow keys to move around in the menu and the *Enter* key
    to select.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Ettercap的一个很棒的功能是它还可以在命令行下使用Ncurses界面。这在使用SSH从远程系统工作时非常方便。使用*Tab*键和箭头键在菜单中移动，使用*Enter*键进行选择。
- en: Ettercap on the command line
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命令行上的Ettercap
- en: 'In many situations, you will not be able to use Ettercap''s graphical interface.
    When you are mounting an attack from a cracked Linux machine, you are likely to
    discover it does not have a graphical desktop at all. In such a situation, you
    can use the Ettercap curses version or the text-only version. This is great when
    working from a remote system using SSH. Use the *Tab* key and arrow keys to move
    around in the menu and the *Enter* key to select:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，您将无法使用Ettercap的图形界面。当您从一个破解的Linux机器上发动攻击时，您可能会发现它根本没有图形桌面。在这种情况下，您可以使用Ettercap的curses版本或纯文本版本。这在使用SSH从远程系统工作时非常方便。使用*Tab*键和箭头键在菜单中移动，使用*Enter*键进行选择：
- en: '![](img/11a8cd5d-c128-4404-90e6-5565951a933e.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![](img/11a8cd5d-c128-4404-90e6-5565951a933e.png)'
- en: 'To start Ettercap from the command line, you will need to add some flags to
    the command; as in most Linux commands you can use `ettercap -help` to get a list
    of flags and their meanings. For basic use, you can use the following command:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 要从命令行启动Ettercap，您需要向命令添加一些标志；就像大多数Linux命令一样，您可以使用`ettercap -help`来获取标志及其含义的列表。对于基本用法，您可以使用以下命令：
- en: '[PRE27]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The `-C` flag starts Ettercap in Ncurses mode. I have included the `-m ettercap-mgs.txt`
    flag to pipe out the message output to the `ettercap-msg.txt file`. If you want
    to save the whole capture, add `-w ettercap-capture.pcap`. This will save the
    full capture so you can pull it in later into Wireshark if needed. I have found
    it's easier to use the command-line flags to save outputs.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`-C`标志以Ncurses模式启动Ettercap。我已经包含了`-m ettercap-mgs.txt`标志，将消息输出导出到`ettercap-msg.txt`文件。如果您想保存整个捕获，添加`-w
    ettercap-capture.pcap`。这将保存完整的捕获，以便以后在需要时将其导入Wireshark。我发现使用命令行标志保存输出更容易。'
- en: The following screenshot shows the CLI-based Curses Interface.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 下一张截图显示了基于CLI的Curses界面。
- en: '![](img/486c4172-9192-41ab-8259-55f39d2104f8.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](img/486c4172-9192-41ab-8259-55f39d2104f8.png)'
- en: 'The next screenshot shows you the CLI-based text-only interface:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 下一张截图显示了基于CLI的纯文本界面：
- en: '![](img/814b95f9-5c84-4a8b-bcad-94c3d820070a.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/814b95f9-5c84-4a8b-bcad-94c3d820070a.png)'
- en: Summary
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you were shown how to sniff a network with tcpdump, WinDump,
    and Wireshark, and how to filter for protocols and IP addresses. Following that,
    you got to play with spoofing and ARP poisoning using Ettercap.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何使用tcpdump、WinDump和Wireshark嗅探网络，以及如何过滤协议和IP地址。之后，您将使用Ettercap进行欺骗和ARP欺骗。
- en: In our next chapter, we will actively engage our targets using information gained
    from our ARP spoofing here and learn how to crack passwords both on and offline.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的下一章中，我们将利用从ARP欺骗中获得的信息积极地攻击我们的目标，并学习如何在线和离线破解密码。
- en: Further reading
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'For more information on Wireshark, visit its documentation site at the following
    link: [https://www.wireshark.org/docs/](https://www.wireshark.org/docs/)'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关Wireshark的更多信息，请访问其文档网站：[https://www.wireshark.org/docs/](https://www.wireshark.org/docs/)
- en: 'For more information on tcpdump, visit its site at the following link: [http://www.tcpdump.org/#documentation](http://www.tcpdump.org/#documentation)'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关tcpdump的更多信息，请访问其网站：[http://www.tcpdump.org/#documentation](http://www.tcpdump.org/#documentation)
- en: 'For more information on Ettercap, visit its site at the following link: [https://www.ettercap-project.org/](https://www.ettercap-project.org/)'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关Ettercap的更多信息，请访问其网站：[https://www.ettercap-project.org/](https://www.ettercap-project.org/)
