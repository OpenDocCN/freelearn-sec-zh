- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Working with Burp Suite Macros and Extensions
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Burp Suite 宏和扩展
- en: 'This chapter covers two separate topics that can also be blended together:
    macros and extensions. Burp Suite macros enable penetration testers to automate
    events, such as logins or parameter reads, to overcome potential error situations.
    Extensions, also known as plugins, extend the core functionality found in Burp.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涉及两个可以独立讨论的主题，或者也可以结合起来：宏和扩展。Burp Suite 宏使渗透测试人员能够自动化事件，例如登录或读取参数，以应对潜在的错误情况。扩展，也叫插件，扩展了
    Burp 的核心功能。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下内容：
- en: Creating session-handling macros
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建会话处理宏
- en: Getting caught in the cookie jar
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 陷入“饼干罐”问题
- en: Adding great pentester plugins
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加优秀的渗透测试插件
- en: Creating new issues via the **Add & Track Custom** **Issues** extension
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 **Add & Track Custom** **Issues** 扩展创建新的问题
- en: Working with the **Active** **Scan++** extension
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **Active** **Scan++** 扩展
- en: Using Burp Suite extensions for bug bounties
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Burp Suite 扩展进行漏洞赏金测试
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In order to complete the recipes in this chapter, you will need the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成本章中的操作，你需要以下内容：
- en: OWASP **Broken Web** **Applications** (**BWA**)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP **破损的 Web** **应用** (**BWA**)
- en: OWASP Mutillidae (**http://<Your_VM_Assigned_IP_Address>/mutillidae**)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP Mutillidae (**http://<Your_VM_Assigned_IP_Address>/mutillidae**)
- en: GetBoo (**http://<Your_VM_Assigned_IP_Address>/getboo**)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GetBoo (**http://<Your_VM_Assigned_IP_Address>/getboo**)
- en: Burp Proxy Community or Professional ([https://portswigger.net/burp/](https://portswigger.net/burp/))
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Burp Proxy 社区版或专业版 ([https://portswigger.net/burp/](https://portswigger.net/burp/))
- en: Creating session-handling macros
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建会话处理宏
- en: In Burp Suite, the **Project options** tab allows testers to set up session-handling
    rules. A session-handling rule allows a tester to specify a set of actions Burp
    Suite will take in relation to session tokens or **cross-site request forgery**
    (**CSRF**) tokens while making HTTP requests. There is a default session-handling
    rule in scope for Spider and Scanner. However, in this recipe, we will create
    a new session-handling rule and use a macro to help us create an authenticated
    session from an unauthenticated one while using **Repeater**.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Burp Suite 中，**项目选项** 标签页允许测试人员设置会话处理规则。会话处理规则使测试人员能够指定一组与会话令牌或 **跨站请求伪造**
    (**CSRF**) 令牌相关的操作，而这些操作会在发送 HTTP 请求时执行。蜘蛛和扫描器有一个默认的会话处理规则。然而，在本例中，我们将创建一个新的会话处理规则，并使用宏帮助我们在使用
    **Repeater** 时从未经身份验证的会话创建一个已验证的会话。
- en: Getting ready
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Using the OWASP Mutillidae II application, we will create a new Burp Suite session-handling
    rule, with an associated macro, to create an authenticated session from an unauthenticated
    one while using **Repeater**.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OWASP Mutillidae II 应用，我们将创建一个新的 Burp Suite 会话处理规则，并通过相关的宏，在使用 **Repeater**
    时从未经身份验证的会话创建一个已验证的会话。
- en: How to do it...
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Navigate to the **Login** page in Mutillidae. Log in to the application with
    the username **ed** with the password **pentest**:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 Mutillidae 的**登录**页面。使用用户名 **ed** 和密码 **pentest** 登录应用：
- en: '![Figure 10.1 – Logging in as ed/pentest](image/B21173_Figure_10.01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.1 – 使用 ed/pentest 登录](image/B21173_Figure_10.01.jpg)'
- en: Figure 10.1 – Logging in as ed/pentest
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – 使用 ed/pentest 登录
- en: 'Immediately log out of the application by clicking the **Logout** button, and
    make sure the application confirms you are logged out:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 **Logout** 按钮立即退出应用，并确保应用确认你已成功注销：
- en: '![Figure 10.2 – Logging out](image/B21173_Figure_10.02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.2 – 注销](image/B21173_Figure_10.02.jpg)'
- en: Figure 10.2 – Logging out
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2 – 注销
- en: 'Switch to Burp Suite’s **Proxy** | **HTTP history** tab. Look for the logout
    request you just made along with the subsequent, unauthenticated **GET** request.
    Select the unauthenticated request, which is the second **GET** request. Right-click
    and send that request to **Repeater**, as follows:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 Burp Suite 的 **Proxy** | **HTTP history** 标签页。查找你刚才发送的注销请求，以及随后的未经身份验证的
    **GET** 请求。选择未经身份验证的请求，也就是第二个 **GET** 请求。右键点击并将该请求发送到 **Repeater**，如下所示：
- en: '![Figure 10.3 – Sending a GET request to Repeater](image/B21173_Figure_10.03.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.3 – 发送 GET 请求到 Repeater](image/B21173_Figure_10.03.jpg)'
- en: Figure 10.3 – Sending a GET request to Repeater
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3 – 发送 GET 请求到 Repeater
- en: 'Switch to Burp Suite **Repeater**, then click the **Send** button. On the **Render**
    tab of the response, ensure you receive a **Not Logged In** message. We will use
    this scenario to build a session-handling rule to address the unauthenticated
    session and make it an authenticated one, as follows:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 Burp Suite **重复器**，然后点击**发送**按钮。在响应的**渲染**标签页中，确保你收到**未登录**消息。我们将使用此场景构建一个会话处理规则，将未经身份验证的会话变成经过身份验证的会话，如下所示：
- en: '![Figure 10.4 – Repeater](image/B21173_Figure_10.04.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.4 – 重复器](image/B21173_Figure_10.04.jpg)'
- en: Figure 10.4 – Repeater
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – 重复器
- en: 'Click the Burp Suite **Settings** gear icon in the top-right corner:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Burp Suite 右上角的**设置**齿轮图标：
- en: '![Figure 10.5 – Global Settings gear icon](image/B21173_Figure_10.05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.5 – 全局设置齿轮图标](image/B21173_Figure_10.05.jpg)'
- en: Figure 10.5 – Global Settings gear icon
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5 – 全局设置齿轮图标
- en: 'Then, select the **Sessions** area and click the **Add** button under the **Session
    handling rules** section, as follows:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择**会话**区域，点击**会话处理规则**部分下的**添加**按钮，如下所示：
- en: '![Figure 10.6 – Adding a new session-handling rule](image/B21173_Figure_10.06.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.6 – 添加新的会话处理规则](image/B21173_Figure_10.06.jpg)'
- en: Figure 10.6 – Adding a new session-handling rule
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6 – 添加新的会话处理规则
- en: 'After clicking the **Add** button, a pop-up box appears. Give your new rule
    a name, such as **LogInSessionRule**, and under **Rule actions**, select **Run
    a macro**, as follows:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮后，会出现一个弹出框。为你的新规则命名，如**LogInSessionRule**，在**规则动作**下，选择**运行宏**，如下所示：
- en: '![Figure 10.7 – Rule name and action](image/B21173_Figure_10.07.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7 – 规则名称和动作](image/B21173_Figure_10.07.jpg)'
- en: Figure 10.7 – Rule name and action
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – 规则名称和动作
- en: 'Another pop-up box appears, which is the **Session handling action editor**
    dialog window. In the first section, under **Select macro**, click the **Add**
    button, as follows:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一个弹出框出现了，这是**会话处理动作编辑器**对话框。在第一部分，点击**选择宏**下的**添加**按钮，如下所示：
- en: '![Figure 10.8 – Adding a new macro](image/B21173_Figure_10.08.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.8 – 添加新宏](image/B21173_Figure_10.08.jpg)'
- en: Figure 10.8 – Adding a new macro
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – 添加新宏
- en: 'After clicking the **Add** button, the macro editor appears, along with another
    popup of **Macro Recorder**, as follows:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮后，宏编辑器会弹出，同时弹出另一个**宏录制器**窗口，如下所示：
- en: '![Figure 10.9 – Macro Recorder](image/B21173_Figure_10.09.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.9 – 宏录制器](image/B21173_Figure_10.09.jpg)'
- en: Figure 10.9 – Macro Recorder
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – 宏录制器
- en: 'Inside the **Macro Recorder** window, look for the **POST** request where you
    logged in as **ed** as well as the following **GET** request. Highlight both of
    those requests within the **Macro Recorder** window and click **OK**, as follows:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**宏录制器**窗口中，找到你作为**ed**登录的**POST**请求，以及接下来的**GET**请求。在**宏录制器**窗口中高亮这两个请求，然后点击**确定**，如下所示：
- en: '![Figure 10.10 – Selected actions](image/B21173_Figure_10.010.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.10 – 选中的动作](image/B21173_Figure_10.010.jpg)'
- en: Figure 10.10 – Selected actions
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.10 – 选中的动作
- en: 'Those two highlighted requests in the previous dialog window now appear inside
    the **Macro Editor** window. Give the macro a description, such as **LogInMacro**,
    as follows:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在之前的对话框中高亮的两个请求现在出现在**宏编辑器**窗口中。为宏提供描述，如**LogInMacro**，如下所示：
- en: '![Figure 10.11 – Naming your macro](image/B21173_Figure_10.011.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.11 – 为你的宏命名](image/B21173_Figure_10.011.jpg)'
- en: Figure 10.11 – Naming your macro
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.11 – 为你的宏命名
- en: 'Click the **Configure** **item** button:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**配置**项按钮：
- en: '![Figure 10.12 – Configuring your macro](image/B21173_Figure_10.012.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.12 – 配置你的宏](image/B21173_Figure_10.012.jpg)'
- en: Figure 10.12 – Configuring your macro
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.12 – 配置你的宏
- en: 'You need to validate that the **username** and **password** values are correct.
    Click **OK** when this is done, as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要验证**用户名**和**密码**的值是否正确。完成后，点击**确定**，如下所示：
- en: '![Figure 10.13 – Login parameters set](image/B21173_Figure_10.013.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.13 – 登录参数设置](image/B21173_Figure_10.013.jpg)'
- en: Figure 10.13 – Login parameters set
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.13 – 登录参数设置
- en: 'Click **OK** to close the **Macro Editor** window. You should see the newly
    created macro in the **Session handling action editor** window. Click **OK** to
    close this dialog window, as follows:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**关闭**宏编辑器**窗口。你应该能在**会话处理动作编辑器**窗口中看到新创建的宏。点击**确定**关闭此对话框，如下所示：
- en: '![Figure 10.14 – Closing the Session handling action editor window](image/B21173_Figure_10.014.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.14 – 关闭会话处理动作编辑器窗口](image/B21173_Figure_10.014.jpg)'
- en: Figure 10.14 – Closing the Session handling action editor window
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.14 – 关闭会话处理动作编辑器窗口
- en: 'After closing the **Session handling action editor** window, you are returned
    to the **Session handling rule editor** window where you now see the **Rule actions**
    section populated with the name of your macro. Click the **Scope** tab of this
    window to define which tool will use this rule:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**会话处理操作编辑器**窗口后，你将返回到**会话处理规则编辑器**窗口，此时你将看到**规则操作**部分已填充了你的宏名称。点击此窗口的**范围**标签，以定义哪个工具将使用此规则：
- en: '![Figure 10.15 – Identifying the scope](image/B21173_Figure_10.015.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.15 – 确定范围](image/B21173_Figure_10.015.jpg)'
- en: Figure 10.15 – Identifying the scope
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.15 – 确定范围
- en: 'On the **Scope** tab of the **Session handling rule editor** window, uncheck
    the other boxes, leaving only the **Repeater** box checked. Under **URL scope**,
    click the **Include all URLs** radio button. Click **OK** to close this editor,
    as follows:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**会话处理规则编辑器**窗口的**范围**标签页中，取消选中其他框，只保留**Repeater**框选中。在**URL 范围**下，点击**包含所有
    URL**单选按钮。点击**确定**关闭此编辑器，如下所示：
- en: '![Figure 10.16 – Setting the scope](image/B21173_Figure_10.016.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.16 – 设置范围](image/B21173_Figure_10.016.jpg)'
- en: Figure 10.16 – Setting the scope
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.16 – 设置范围
- en: 'You should now see the new session-handling rule listed in the **Session handling
    rules** window, as follows:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你应该能够在**会话处理规则**窗口中看到新的会话处理规则，如下所示：
- en: '![Figure 10.17 – Enabling your new rule](image/B21173_Figure_10.017.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.17 – 启用你的新规则](image/B21173_Figure_10.017.jpg)'
- en: Figure 10.17 – Enabling your new rule
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.17 – 启用你的新规则
- en: 'Return to the **Repeater** tab where you previously were not logged in to the
    application. Click the **Send** button to reveal that you are now logged in as
    **ed**! This means your session-handling rule and associated macro worked:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到之前未登录应用程序的**Repeater**标签页。点击**发送**按钮，看到你现在已作为**ed**登录！这意味着你的会话处理规则和相关宏起作用了：
- en: '![Figure 10.18 – Result of session-handling rule and associated macro](image/B21173_Figure_10.018.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.18 – 会话处理规则和相关宏的结果](image/B21173_Figure_10.018.jpg)'
- en: Figure 10.18 – Result of session-handling rule and associated macro
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.18 – 会话处理规则和相关宏的结果
- en: How it works...
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we saw how an unauthenticated session can be changed to an authenticated
    one by replaying the login process. The creation of macros allows manual steps
    to be scripted and assigned to various tools within Burp Suite.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们看到如何通过重放登录过程将一个未经身份验证的会话转换为经过身份验证的会话。创建宏使得手动步骤可以被脚本化，并分配给 Burp Suite
    中的各个工具。
- en: Burp Suite allows testers to configure session-handling rules to address various
    conditions that the suite of tools may encounter. The rules provide additional
    actions to be taken when those conditions are met. In this recipe, we addressed
    an unauthenticated session by creating a new session-handling rule that is called
    a macro. We confined the scope for this rule to **Repeater** only for demonstration
    purposes.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite 允许测试人员配置会话处理规则，以应对工具套件可能遇到的各种条件。规则提供了在满足这些条件时需要采取的额外操作。在这个示例中，我们通过创建一个新的会话处理规则（称为宏）来解决未经身份验证的会话问题。为了演示目的，我们将该规则的范围限制为**Repeater**。
- en: Getting caught in the cookie jar
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 被困在饼干罐里
- en: While targeting an application, Burp Suite captures all cookies while proxying
    and crawling. Burp Suite stores these cookies in a cache called the **cookie jar**.
    This cookie jar is used within the default session-handling rule and can be shared
    among the suite of Burp Suite tools, such as **Proxy**, **Intruder**, and **Repeater**.
    Inside the cookie jar, there is a historical table of requests. The table details
    each cookie domain and path. It is possible to edit or remove cookies from the
    cookie jar.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在针对应用程序进行测试时，Burp Suite 在代理和爬行过程中会捕获所有的 cookies。Burp Suite 将这些 cookies 存储在一个名为**饼干罐**的缓存中。该饼干罐在默认的会话处理规则中使用，并且可以在
    Burp Suite 的一系列工具中共享，如**Proxy**、**Intruder** 和**Repeater**。在饼干罐内部，有一个历史请求表，详细列出了每个
    cookie 的域和路径。可以编辑或删除饼干罐中的 cookies。
- en: Getting ready
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: We will open the Burp Suite cookie jar and look inside. Then, using the OWASP
    GetBoo application, we’ll identify new cookies added to the Burp Suite cookie
    jar.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将打开 Burp Suite 的饼干罐并查看其中的内容。然后，使用 OWASP GetBoo 应用程序，我们将识别新添加到 Burp Suite 饼干罐中的
    cookies。
- en: How to do it...
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Click the Burp Suite **Settings** gear icon in the top-right corner:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Burp Suite 右上角的**设置**齿轮图标：
- en: '![Figure 10.19 – Global Settings gear icon](image/B21173_Figure_10.019..jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.19 – 全局设置齿轮图标](image/B21173_Figure_10.019..jpg)'
- en: Figure 10.19 – Global Settings gear icon
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.19 – 全局设置齿轮图标
- en: 'Then, select the **Sessions** area and go to the **Cookie** **jar** section:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，选择**Sessions**区域并进入**Cookie** **jar**部分：
- en: '![Figure 10.20 – Cookie jar](image/B21173_Figure_10.020..jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.20 – Cookie 罐](image/B21173_Figure_10.020..jpg)'
- en: Figure 10.20 – Cookie jar
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.20 – Cookie 罐
- en: 'In the **Cookie jar** section, click the **Open cookie jar** button, as follows:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Cookie 罐**部分，点击**打开 Cookie 罐**按钮，如下所示：
- en: '![Figure 10.21 – Opening the cookie jar](image/B21173_Figure_10.021..jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.21 – 打开 Cookie 罐](image/B21173_Figure_10.021..jpg)'
- en: Figure 10.21 – Opening the cookie jar
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.21 – 打开 Cookie 罐
- en: 'A new pop-up box appears showing all cookies captured in **Proxy**. Notice
    each cookie has **Domain**, **Path**, **Name**, and **Value** details identified:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新的弹出框出现，显示在**Proxy**中捕获的所有 Cookie。注意，每个 Cookie 都有**Domain**、**Path**、**Name**和**Value**的详细信息：
- en: '![Figure 10.22 – Details of each cookie](image/B21173_Figure_10.022..jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.22 – 每个 Cookie 的详细信息](image/B21173_Figure_10.022..jpg)'
- en: Figure 10.22 – Details of each cookie
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.22 – 每个 Cookie 的详细信息
- en: 'Select a cookie in the list and click the **Edit cookie** button. For example,
    we can modify the value of the **PHPSESSID** cookie from a random cryptographic
    string to **thisIsMyCookie** and then click **OK**, as follows:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在列表中选择一个 Cookie，并点击**编辑 Cookie**按钮。例如，我们可以将**PHPSESSID** Cookie 的值从随机的加密字符串修改为**thisIsMyCookie**，然后点击**确定**，如下所示：
- en: '![Figure 10.23 – Editing the PHPSESSID cookie value](image/B21173_Figure_10.023..jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.23 – 编辑 PHPSESSID Cookie 值](image/B21173_Figure_10.023..jpg)'
- en: Figure 10.23 – Editing the PHPSESSID cookie value
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.23 – 编辑 PHPSESSID Cookie 值
- en: 'The value is now changed, as follows:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在值已更改，如下所示：
- en: '![Figure 10.24 – Setting the cookie to a new value](image/B21173_Figure_10.024..jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.24 – 将 Cookie 设置为新值](image/B21173_Figure_10.024..jpg)'
- en: Figure 10.24 – Setting the cookie to a new value
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.24 – 将 Cookie 设置为新值
- en: 'The default scope for the Burp Suite cookie jar is **Proxy**. However, you
    may expand the scope to include other tools. Click the checkbox for **Repeater**,
    as follows:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Burp Suite Cookie 罐的默认范围是**Proxy**。然而，您可以将范围扩展到包括其他工具。点击**Repeater**旁边的复选框，如下所示：
- en: '![Figure 10.25 – Setting the scope](image/B21173_Figure_10.025..jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.25 – 设置范围](image/B21173_Figure_10.025..jpg)'
- en: Figure 10.25 – Setting the scope
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.25 – 设置范围
- en: 'Now, if you create a new session-handling rule and use the default Burp Suite
    cookie jar, you will see the new value for that cookie used in the requests. We
    can see this in action by turning on our **LoginSessionRule** session-handling
    rule:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果您创建一个新的会话处理规则并使用默认的 Burp Suite Cookie 罐，您将看到该 Cookie 的新值在请求中被使用。我们可以通过启用我们的**LoginSessionRule**会话处理规则来观察其实际效果：
- en: '![Figure 10.26 – Enabling LoginSessionRule](image/B21173_Figure_10.026..jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.26 – 启用 LoginSessionRule](image/B21173_Figure_10.026..jpg)'
- en: Figure 10.26 – Enabling LoginSessionRule
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.26 – 启用 LoginSessionRule
- en: 'Now, send an unauthenticated request to **Repeater** and click **Send**. Notice
    the value of your cookie is **thisIsMyCookie**. This technique can be very helpful
    for session-hijacking attacks when you steal the cookie of a victim and need to
    ensure the cookie value doesn’t change back to your session cookie:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，向**Repeater**发送未经身份验证的请求并点击**发送**。注意，您的 Cookie 值是**thisIsMyCookie**。这个技巧对于会话劫持攻击非常有用，当您窃取受害者的
    Cookie 并需要确保 Cookie 值不会恢复为您的会话 Cookie 时：
- en: '![Figure 10.27 – Result of rule and cookie jar change](image/B21173_Figure_10.027..jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.27 – 规则和 Cookie 罐更改的结果](image/B21173_Figure_10.027..jpg)'
- en: Figure 10.27 – Result of rule and cookie jar change
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.27 – 规则和 Cookie 罐更改的结果
- en: How it works...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Burp Suite cookie jar is used by session-handling rules for cookie handling
    when automating requests against a target application. In this recipe, we investigated
    the cookie jar, understood its contents, and even modified one of the values of
    a captured cookie. Any subsequent session-handling rules that use the default
    Burp Suite cookie jar will see the modified value in the request.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite Cookie 罐由会话处理规则用于处理 Cookie，当对目标应用程序执行自动化请求时。在这个实例中，我们研究了 Cookie 罐，了解了它的内容，甚至修改了一个捕获的
    Cookie 的值。任何使用默认 Burp Suite Cookie 罐的后续会话处理规则都会在请求中看到修改后的值。
- en: Adding great pentester plugins
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加优秀的渗透测试插件
- en: As web application testers, you will find handy tools to add to your repertoire
    to make your assessments more efficient. The Burp Suite community offers many
    wonderful extensions. In this recipe, we will add a couple of them and explain
    how they can make your assessments better. **Get All Params** (**GAP**) and **Software
    Vulnerability Scanner** are the two plugins we will add to Burp Suite and use
    with the passive scanner.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Web 应用程序测试人员，你会发现一些有用的工具可以添加到你的工具库中，使得评估工作更加高效。Burp Suite 社区提供了许多出色的扩展。在本例中，我们将添加其中的几个，并解释它们如何提升评估效果。**Get
    All Params**（**GAP**）和 **Software Vulnerability Scanner** 是我们将添加到 Burp Suite 并与被动扫描器一起使用的两个插件。
- en: Note
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Both plugins require the Burp Suite Professional version.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个插件都需要 Burp Suite 专业版。
- en: Getting ready
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Using the OWASP Mutillidae II application, we will add two handy extensions
    that will help us find more vulnerabilities in our target.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OWASP Mutillidae II 应用程序，我们将添加两个有用的扩展，帮助我们在目标系统中发现更多漏洞。
- en: How to do it...
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'The first extension, **GAP-Burp-Extension**, is available at the following
    GitHub repository: [https://github.com/xnl-h4ck3r/GAP-Burp-Extension](https://github.com/xnl-h4ck3r/GAP-Burp-Extension).
    Install Git on Linux or Git for Windows ([https://gitforwindows.org/](https://gitforwindows.org/)).
    Then, using the **git clone** [https://github.com/xnl-h4ck3r/GAP-Burp-Extension.git](https://github.com/xnl-h4ck3r/GAP-Burp-Extension.git)
    command, download the repo to your local system.'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个扩展，**GAP-Burp-Extension**，可以在以下 GitHub 仓库找到：[https://github.com/xnl-h4ck3r/GAP-Burp-Extension](https://github.com/xnl-h4ck3r/GAP-Burp-Extension)。在
    Linux 上安装 Git 或在 Windows 上安装 Git（[https://gitforwindows.org/](https://gitforwindows.org/)）。然后，使用
    **git clone** [https://github.com/xnl-h4ck3r/GAP-Burp-Extension.git](https://github.com/xnl-h4ck3r/GAP-Burp-Extension.git)
    命令，将仓库下载到本地系统。
- en: 'Change directory into **GAP-Burp-Extension** after the download of the repo.
    Make note of the location of the **GAP.py** file. This is the file you will load
    into Burp Suite to use the extension:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完仓库后，进入 **GAP-Burp-Extension** 目录。记下 **GAP.py** 文件的位置。这个文件将加载到 Burp Suite
    中以使用扩展：
- en: '![Figure 10.28 – Python script to run GAP](image/B21173_Figure_10.028..jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.28 – 运行 GAP 的 Python 脚本](image/B21173_Figure_10.028..jpg)'
- en: Figure 10.28 – Python script to run GAP
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.28 – 运行 GAP 的 Python 脚本
- en: 'Note that you must have Jython installed prior to using the GAP extension.
    To install Jython, go to the **Extensions** | **Extensions settings** gear icon
    and click the icon:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，在使用 GAP 扩展之前，必须先安装 Jython。要安装 Jython，请前往 **扩展** | **扩展设置** 图标并点击该图标：
- en: '![Figure 10.29 – Extension settings](image/B21173_Figure_10.029..jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.29 – 扩展设置](image/B21173_Figure_10.029..jpg)'
- en: Figure 10.29 – Extension settings
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.29 – 扩展设置
- en: 'Go to the Jython site ([https://www.jython.org/](https://www.jython.org/))
    and download the standalone Jython JAR file:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 Jython 网站 ([https://www.jython.org/](https://www.jython.org/)) 并下载独立版 Jython
    JAR 文件：
- en: '![Figure 10.30 – Downloading Jython](image/B21173_Figure_10.030..jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.30 – 下载 Jython](image/B21173_Figure_10.030..jpg)'
- en: Figure 10.30 – Downloading Jython
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.30 – 下载 Jython
- en: 'Set the location of your standalone Jython JAR file in the **Python** **environment**
    section:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Python** **环境** 部分设置独立版 Jython JAR 文件的位置：
- en: '![Figure 10.31 – Configuring Jython](image/B21173_Figure_10.031..jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.31 – 配置 Jython](image/B21173_Figure_10.031..jpg)'
- en: Figure 10.31 – Configuring Jython
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.31 – 配置 Jython
- en: 'Once configured, close the **Extension settings** pop-out window by clicking
    the **X** sign in the top-right corner of the window:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置完成后，通过点击窗口右上角的 **X** 标志关闭 **扩展设置** 弹出窗口：
- en: '![Figure 10.32 – Closing the settings](image/B21173_Figure_10.032..jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.32 – 关闭设置](image/B21173_Figure_10.032..jpg)'
- en: Figure 10.32 – Closing the settings
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.32 – 关闭设置
- en: 'After configuring, go to the **Burp Suite** | **Extensions** tabs and select
    the **Installed** tab. Click **Add** and change the **Extension type** value to
    **Python**. Browse to the location of the **GAP.py** file inside the **GAP-Burp-Extension**
    directory on your local system. You may also need to perform a Python **pip**
    command to install the requirements for GAP on your local system, as follows:
    **java -jar jython-standalone-2.7.3.jar -m pip install -r requirements.txt** (source:
    [https://github.com/xnl-h4ck3r/GAP-Burp-Extension](https://github.com/xnl-h4ck3r/GAP-Burp-Extension)):'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成后，前往 **Burp Suite** | **扩展** 标签，选择 **已安装** 标签。点击 **添加** 并将 **扩展类型** 的值更改为
    **Python**。浏览到本地系统中 **GAP-Burp-Extension** 目录内的 **GAP.py** 文件所在位置。你可能还需要执行一个 Python
    **pip** 命令，在本地系统中安装 GAP 的依赖，命令如下：**java -jar jython-standalone-2.7.3.jar -m pip
    install -r requirements.txt**（来源：[https://github.com/xnl-h4ck3r/GAP-Burp-Extension](https://github.com/xnl-h4ck3r/GAP-Burp-Extension)）：
- en: '![Figure 10.33 – Installing the extension](image/B21173_Figure_10.033..jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.33 – 安装扩展](image/B21173_Figure_10.033..jpg)'
- en: Figure 10.33 – Installing the extension
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.33 – 安装扩展
- en: 'Make sure the extension is enabled by seeing the box checked next to its name
    within the Burp Suite **Extensions** area:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保扩展已启用，方法是查看Burp Suite的**Extensions**区域中其名称旁边的复选框是否已勾选：
- en: '![Figure 10.34 – Enabling the extension](image/B21173_Figure_10.034..jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.34 – 启用扩展](image/B21173_Figure_10.034..jpg)'
- en: Figure 10.34 – Enabling the extension
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.34 – 启用扩展
- en: 'After the extension is loaded and enabled, notice you have a new **GAP** tab
    at the top of the Burp Suite menu of tools:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展加载并启用后，请注意，在Burp Suite工具菜单的顶部有一个新的**GAP**标签：
- en: '![Figure 10.35 – New GAP tab](image/B21173_Figure_10.035..jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.35 – 新的GAP标签](image/B21173_Figure_10.035..jpg)'
- en: Figure 10.35 – New GAP tab
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.35 – 新的GAP标签
- en: 'Let’s run GAP on our Mutillidae target. Go to **Target** | **Site map**, right-click
    on the root directory of the application, and select **Extensions** | **GAP**:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在Mutillidae目标上运行GAP。进入**Target** | **Site map**，右键单击应用程序的根目录，然后选择**Extensions**
    | **GAP**：
- en: '![Figure 10.36 – Invoking the GAP extension against the target](image/B21173_Figure_10.036..jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.36 – 对目标调用GAP扩展](image/B21173_Figure_10.036..jpg)'
- en: Figure 10.36 – Invoking the GAP extension against the target
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.36 – 对目标调用GAP扩展
- en: 'Now, select the **GAP** tab at the top of your Burp Suite tools. Notice the
    list of potential parameters GAP found. Our **ToolID** identifier is present,
    which we used to exploit in a previous recipe! Also, notice all links GAP found
    for you. These are new attack vectors you can use to widen your scope for finding
    bugs:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择Burp Suite工具顶部的**GAP**标签。注意GAP找到的潜在参数列表。我们的**ToolID**标识符出现在其中，正是我们之前用于利用的标识符！另外，注意到GAP为您找到的所有链接。这些是您可以用来拓宽漏洞寻找范围的新攻击向量：
- en: '![Figure 10.37 – Results found with GAP](image/B21173_Figure_10.037..jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.37 – 使用GAP找到的结果](image/B21173_Figure_10.037..jpg)'
- en: Figure 10.37 – Results found with GAP
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.37 – 使用GAP找到的结果
- en: 'For the second extension, switch to the Burp Suite **Extensions** tab. Go to
    the **BApp Store** subtab and find the **Software Vulnerability** **Scanner**
    plugin:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于第二个扩展，切换到Burp Suite的**Extensions**标签。进入**BApp Store**子标签，找到**Software Vulnerability**
    **Scanner**插件：
- en: '![Figure 10.38 – Software Vulnerability Scanner extension](image/B21173_Figure_10.038..jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.38 – 软件漏洞扫描器扩展](image/B21173_Figure_10.038..jpg)'
- en: Figure 10.38 – Software Vulnerability Scanner extension
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.38 – 软件漏洞扫描器扩展
- en: 'Click the **Install** button on the right side and select the extension name:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右侧的**Install**按钮并选择扩展名称：
- en: '![Figure 10.39 – Install button](image/B21173_Figure_10.039..jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.39 – 安装按钮](image/B21173_Figure_10.039..jpg)'
- en: Figure 10.39 – Install button
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.39 – 安装按钮
- en: 'After installing the two plugins, go to the **Extensions** tab, then the **Burp
    Suite extensions** section. Make sure both plugins are enabled with check marks
    inside the checkboxes. Also, notice the **Software Vulnerability Scanner** extension
    has a new tab, as follows:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完两个插件后，进入**Extensions**标签，然后是**Burp Suite extensions**部分。确保两个插件都已启用，并且复选框内有勾选标记。还可以注意到**Software
    Vulnerability Scanner**扩展有一个新标签，如下所示：
- en: '![Figure 10.40 – New tab](image/B21173_Figure_10.040..jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.40 – 新标签](image/B21173_Figure_10.040..jpg)'
- en: Figure 10.40 – New tab
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.40 – 新标签
- en: 'Go to the **Software Vulnerability Scanner** tab and notice the default scan
    rules along with an option to supply an **API Token** type for faster scan speeds:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入**Software Vulnerability Scanner**标签，注意默认扫描规则以及提供**API Token**类型以加速扫描速度的选项：
- en: '![Figure 10.41 – Inside the Software Vulnerability Scanner tab](image/B21173_Figure_10.041..jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.41 – 软件漏洞扫描器标签内部](image/B21173_Figure_10.041..jpg)'
- en: Figure 10.41 – Inside the Software Vulnerability Scanner tab
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.41 – 软件漏洞扫描器标签内部
- en: 'Return to **Target** | **Site map** with Mutillidae home page as our target.
    Perform a lightweight, less invasive passive scan by right-clicking and selecting
    **Passively scan this branch**, as follows:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到**Target** | **Site map**，将Mutillidae主页作为我们的目标。通过右键点击并选择**Passively scan
    this branch**，进行轻量级、低侵入性的被动扫描，如下所示：
- en: '![Figure 10.42 – Scanning the target](image/B21173_Figure_10.042..jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.42 – 扫描目标](image/B21173_Figure_10.042..jpg)'
- en: Figure 10.42 – Scanning the target
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.42 – 扫描目标
- en: 'Note the additional findings created from **Software Vulnerability Scanner**.
    The **Vulners** plugin found numerous vulnerable software issues:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意**Software Vulnerability Scanner**产生的额外发现。**Vulners**插件发现了许多漏洞软件问题：
- en: '![Figure 10.43 – Looking for extension findings](image/B21173_Figure_10.043..jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.43 – 寻找扩展发现](image/B21173_Figure_10.043..jpg)'
- en: Figure 10.43 – Looking for extension findings
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.43 – 寻找扩展发现
- en: 'Looking at the details of the first finding, note the various links provided
    to known exploits:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 查看第一个发现的详细信息，注意提供的与已知漏洞相关的各种链接：
- en: '![Figure 10.44 – Advisory showing exploits available](image/B21173_Figure_10.044..jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.44 – 显示可用漏洞的公告](image/B21173_Figure_10.044..jpg)'
- en: Figure 10.44 – Advisory showing exploits available
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.44 – 显示可用漏洞的公告
- en: How it works...
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Burp Suite functionality can be extended through a PortSwigger API to create
    custom extensions, also known as plugins. In this recipe, we installed two plugins
    that assist with identifying older versions of software contained in the application
    with known vulnerabilities.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite 的功能可以通过 PortSwigger API 扩展，创建自定义扩展，也称为插件。在这个例子中，我们安装了两个插件，帮助识别包含已知漏洞的应用程序中的旧版本软件。
- en: Creating new issues via the Add & Track Custom Issues extension
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过添加与跟踪自定义问题扩展创建新问题
- en: Though Burp Suite provides a listing of many security vulnerabilities commonly
    found in web applications, occasionally you will identify an issue and need to
    create a custom scan finding. This can be done using the **Add & Track Custom**
    **Issues** extension.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Burp Suite 提供了许多常见的 Web 应用程序安全漏洞的列表，但有时你会发现一个问题并需要创建一个自定义扫描发现。这可以通过 **添加与跟踪自定义问题**
    扩展完成。
- en: Note
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This plugin requires the Burp Suite Professional edition.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 此插件需要 Burp Suite Professional 版。
- en: Getting ready
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Using the OWASP Mutillidae II application, we will add the **Add & Track Custom
    Issues** extension, create steps revealing a finding, and then use the extension
    to create a custom issue.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OWASP Mutillidae II 应用程序，我们将添加 **添加与跟踪自定义问题** 扩展，创建揭示漏洞的步骤，然后使用该扩展创建一个自定义问题。
- en: How to do it...
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Switch to the Burp Suite **Extension** tab. Go to the **BApp Store** subtab
    and find the plugin labeled **Add & Track Custom Issues**. Click the **Install**
    button:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 Burp Suite **扩展** 标签页。进入 **BApp Store** 子标签，找到标记为 **添加与跟踪自定义问题** 的插件。点击
    **安装** 按钮：
- en: '![Figure 10.45 – Add & Track Custom Issues extension](image/B21173_Figure_10.045..jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.45 – 添加与跟踪自定义问题扩展](image/B21173_Figure_10.045..jpg)'
- en: Figure 10.45 – Add & Track Custom Issues extension
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.45 – 添加与跟踪自定义问题扩展
- en: 'Ensure the extension is loaded and enabled in the **Extensions** | **Installed**
    | **Burp** **extensions** section:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保扩展已加载并启用，在 **扩展** | **已安装** | **Burp** **扩展** 部分：
- en: '![Figure 10.46 – Loading the extension](image/B21173_Figure_10.046..jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.46 – 加载扩展](image/B21173_Figure_10.046..jpg)'
- en: Figure 10.46 – Loading the extension
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.46 – 加载扩展
- en: Return to the Firefox browser and browse to the Mutillidae home page.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回 Firefox 浏览器并浏览到 Mutillidae 的主页。
- en: 'Switch to the Burp Suite **Proxy** | **HTTP history** tab and find the request
    you just made browsing to the home page. Click the **Response** tab. Note the
    overly verbose **Server** header indicating the web server type and version, along
    with the operating system and programming language used. This information can
    be used by an attacker to fingerprint the technology stack and identify vulnerabilities
    that can be exploited:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 Burp Suite **代理** | **HTTP 历史记录** 标签页，找到你刚才浏览到主页时发出的请求。点击 **响应** 标签。注意查看冗长的
    **服务器** 头信息，指出了 web 服务器类型和版本，以及使用的操作系统和编程语言。这些信息可以被攻击者用来指纹识别技术栈，并识别可被利用的漏洞：
- en: '![Figure 10.47 – Issue to create](image/B21173_Figure_10.047..jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.47 – 创建问题](image/B21173_Figure_10.047..jpg)'
- en: Figure 10.47 – Issue to create
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.47 – 创建问题
- en: 'Since this is a finding, we need to create a new issue manually to capture
    it for our report. While viewing the **Response** window, right-click and select
    **Extensions** | **Add & Track Custom Issues** | **Add & Track Custom Issue**,
    as follows:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于这是一个漏洞，我们需要手动创建一个新问题来捕获它并用于报告。在查看 **响应** 窗口时，右键点击并选择 **扩展** | **添加与跟踪自定义问题**
    | **添加与跟踪自定义问题**，如以下所示：
- en: '![Figure 10.48 – Creating a custom issue](image/B21173_Figure_10.048..jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.48 – 创建自定义问题](image/B21173_Figure_10.048..jpg)'
- en: Figure 10.48 – Creating a custom issue
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.48 – 创建自定义问题
- en: 'A pop-up dialog box appears. Within the **New Issue** tab, we can create a
    new issue name of **Information Leakage in Server Response**. Change the severity
    to **Medium**. Notice how the extension copied our request and response for us
    in the bottom panels. You may continue to add more verbiage in the other text
    areas, such as the issue detail, background, and remediation areas. Click the
    **Add & Track Custom Issue** button at the bottom when you are done:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将弹出对话框。在 **New Issue** 选项卡中，我们可以创建一个名为 **Information Leakage in Server Response**
    的新问题名称。将严重性更改为 **Medium**。请注意，扩展已经为我们复制了请求和响应在底部面板中。您可以继续在其他文本区域添加更多文字，比如问题详细信息、背景和修复方法。完成后，请点击底部的
    **Add & Track Custom Issue** 按钮：
- en: '![Figure 10.49 – Setting the name and severity](image/B21173_Figure_10.049..jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.49 – 设置名称和严重性](image/B21173_Figure_10.049..jpg)'
- en: Figure 10.49 – Setting the name and severity
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.49 – 设置名称和严重性
- en: 'Once completed, switch back to **Target** | **Site map** and select the root
    directory for Mutillidae. You should see the newly created scan issue added to
    the **Issues** window, as follows:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，切换回 **Target** | **Site map**，并选择 Mutillidae 的根目录。你应该能在 **Issues** 窗口中看到新创建的扫描问题，如下所示：
- en: '![Figure 10.50 – Seeing the custom issue you added](image/B21173_Figure_10.050..jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.50 – 查看您添加的自定义问题](image/B21173_Figure_10.050..jpg)'
- en: Figure 10.50 – Seeing the custom issue you added
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.50 – 查看您添加的自定义问题
- en: 'The **Add & Track Custom Issues** extension provides a new tab allowing you
    to add issues to the internal database. This is a value-added feature, so it is
    not necessary to add your issues in this tab to use the tool. However, the option
    is available if you would like to build your own list of custom issues:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Add & Track Custom Issues** 扩展提供了一个新选项卡，允许您向内部数据库添加问题。这是一个增值功能，因此不需要在此选项卡中添加问题即可使用该工具。但是，如果您希望创建自己的自定义问题列表，则可选择此选项：'
- en: '![Figure 10.51 – Database of issues](image/B21173_Figure_10.051..jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.51 – 问题数据库](image/B21173_Figure_10.051..jpg)'
- en: Figure 10.51 – Database of issues
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.51 – 问题数据库
- en: How it works...
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In cases where an issue is not available within the Burp Suite core issue list,
    a tester can create their own issue using the **Add & Track Custom Issues** extension.
    In this recipe, we created an issue for information leakage in server responses.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Burp Suite 核心问题列表中没有某个问题，测试人员可以使用 **Add & Track Custom Issues** 扩展自行创建。在这个示例中，我们为服务器响应中的信息泄露创建了一个问题。
- en: See also
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: For a listing of all issue definitions identified by Burp, go to [https://portswigger.net/kb/issues](https://portswigger.net/kb/issues).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 想要查看 Burp 识别的所有问题定义清单，请访问 [https://portswigger.net/kb/issues](https://portswigger.net/kb/issues)。
- en: Working with the Active Scan++ extension
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Active Scan++ 扩展
- en: Some extensions assist in finding vulnerabilities with specific payloads, such
    as XML, or help to find hidden issues, such as cache poisoning and DNS rebinding.
    In this recipe, we will add an active scanner extension called **Active Scan++**,
    which assists with identifying these more specialized vulnerabilities.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 一些扩展能帮助发现带有特定有效载荷（如 XML）的漏洞，或帮助找到隐藏的问题，比如缓存污染和DNS重绑定。在这个示例中，我们将添加一个名为 **Active
    Scan++** 的主动扫描器扩展，它能帮助识别这些更专业的漏洞。
- en: Note
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This plugin requires the Burp Suite Professional edition.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 此插件需要 Burp Suite 专业版。
- en: Getting ready
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Using the OWASP Mutillidae II application, we will add the **Active Scan++**
    extension, and then run an active scan against the target.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OWASP Mutillidae II 应用程序，我们将添加 **Active Scan++** 扩展，并对目标进行主动扫描。
- en: How to do it...
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Switch to Burp Suite’s **Extensions** | **BApp Store** tab and select the **Active
    Scan++** extension. Click the **Install** button to install the extension, as
    follows:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 Burp Suite 的 **Extensions** | **BApp Store** 选项卡，并选择 **Active Scan++** 扩展。点击
    **Install** 按钮安装该扩展，如下所示：
- en: '![Figure 10.52 – Active Scan++ extension](image/B21173_Figure_10.052..jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.52 – Active Scan++ 扩展](image/B21173_Figure_10.052..jpg)'
- en: Figure 10.52 – Active Scan++ extension
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.52 – Active Scan++ 扩展
- en: Return to the Firefox browser and browse to the Mutillidae home page.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回 Firefox 浏览器，并浏览至 Mutillidae 主页。
- en: 'Switch to Burp Suite’s **Target** tab and then the **Site map** subtab, right-click
    on the **mutillidae** folder, and select **Actively scan this branch**, as follows:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 Burp Suite 的 **Target** 选项卡，然后选择 **Site map** 子选项卡，在 **mutillidae** 文件夹上右键单击，并选择
    **Actively scan this branch**，如下所示：
- en: '![Figure 10.53 – Scanning the target](image/B21173_Figure_10.053..jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.53 – 扫描目标](image/B21173_Figure_10.053..jpg)'
- en: Figure 10.53 – Scanning the target
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.53 – 扫描目标
- en: 'After the active scanner completes, browse to the **Issues** window. Make note
    of any additional issues found by the newly added extension. You can always tell
    which ones the extension found by looking for a **This issue was generated by
    the Burp extension: Active Scan++** message, as follows:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主动扫描器完成后，浏览到**问题**窗口。记录新安装的扩展发现的任何额外问题。你可以通过查找**此问题由Burp扩展生成：Active Scan++**消息来分辨哪些问题是该扩展发现的，如下所示：
- en: '![Figure 10.54 – Issue from the extension](image/B21173_Figure_10.054..jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.54 – 扩展中的问题](image/B21173_Figure_10.054..jpg)'
- en: Figure 10.54 – Issue from the extension
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.54 – 扩展中的问题
- en: How it works...
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Burp Suite functionality can be extended beyond core findings with the use of
    extensions. In this recipe, we installed a plugin that extends the active scanner
    functionality to assist with identifying additional issues such as arbitrary header
    injection, as seen in this recipe.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite的功能可以通过使用扩展来扩展，超越核心功能。在本教程中，我们安装了一个插件，将主动扫描器功能扩展，以帮助识别额外的问题，例如本教程中看到的任意头部注入。
- en: Using Burp Suite extensions for bug bounties
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Burp Suite扩展进行漏洞赏金猎取
- en: As bug bounty hunters, you will find handy tools to identify possible bugs more
    easily. There are many, but the two we will look at in this recipe are the **Burp
    Bounty, Scan Check Builder** and **Auth Analyzer**.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 作为漏洞赏金猎人，你将找到一些便捷的工具，帮助更轻松地识别可能的漏洞。虽然有很多工具，但在本教程中，我们将重点介绍**Burp Bounty, Scan
    Check Builder**和**Auth Analyzer**。
- en: Note
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Burp Bounty, Scan Check Builder** requires the Burp Suite Professional version.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '**Burp Bounty, Scan Check Builder**需要使用Burp Suite专业版。'
- en: Getting ready
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Both recommended extensions for bug bounty hunting can be found in the **BApp
    Store** subtab. We will download and install them within our Burp Suite instance.
    Then, we’ll see how to use each to potentially uncover bugs for payouts!
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 针对漏洞赏金猎取，推荐的两个扩展可以在**BApp Store**子标签中找到。我们将在Burp Suite实例中下载并安装它们。接着，我们将演示如何使用每个扩展来发现可能的漏洞，以便获取赏金！
- en: How to do it...
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Inside Burp Suite’s **Extensions** | **BApp Store** tab, select **Burp Bounty,
    Scan Check Builder** and click the **Install** button. Then, select **Auth Analyzer**
    and click the **Install** button:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Burp Suite的**扩展** | **BApp Store**标签中，选择**Burp Bounty, Scan Check Builder**并点击**安装**按钮。然后，选择**Auth
    Analyzer**并点击**安装**按钮：
- en: '![Figure 10.55 – The two extensions covered in this recipe](image/B21173_Figure_10.055..jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.55 – 本教程中涉及的两个扩展](image/B21173_Figure_10.055..jpg)'
- en: Figure 10.55 – The two extensions covered in this recipe
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.55 – 本教程中涉及的两个扩展
- en: 'Switch to the **Extensions** | **Installed** tab and ensure both extensions
    are installed and enabled in the **Burp** **extensions** section:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**扩展** | **已安装**标签，确保两个扩展都已安装并启用，在**Burp** **扩展**部分中：
- en: '![Figure 10.56 – Extensions installed and enabled](image/B21173_Figure_10.056..jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.56 – 扩展已安装并启用](image/B21173_Figure_10.056..jpg)'
- en: Figure 10.56 – Extensions installed and enabled
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.56 – 扩展已安装并启用
- en: 'Notice there is a new tool tab labeled **Burp Bounty Free**. Go to the tab
    and click the **Profiles** subtab. Notice there are several profiles available
    for the different types of scanners and for requests and responses. For now, we
    will use the default settings:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意，现有一个名为**Burp Bounty Free**的新工具标签。点击该标签，然后点击**配置文件**子标签。可以看到有多个配置文件可供选择，适用于不同类型的扫描器以及请求和响应。现在，我们将使用默认设置：
- en: '![Figure 10.57 – Burp Bounty Free tab](image/B21173_Figure_10.057..jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.57 – Burp Bounty 免费标签](image/B21173_Figure_10.057..jpg)'
- en: Figure 10.57 – Burp Bounty Free tab
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.57 – Burp Bounty 免费标签
- en: 'Return to **Target** | **Site map**, right-click, and select **Actively scan
    this branch**. **Burp Bounty** will use both active and passive scans (unless
    you paused them) to find potential bugs:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回**目标** | **站点地图**，右键点击，选择**主动扫描此分支**。**Burp Bounty**将使用主动扫描和被动扫描（除非你暂停了它们）来寻找潜在的漏洞：
- en: '![Figure 10.58 – Scanning the target](image/B21173_Figure_10.058..jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.58 – 扫描目标](image/B21173_Figure_10.058..jpg)'
- en: Figure 10.58 – Scanning the target
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.58 – 扫描目标
- en: 'In the **Issues** panel, look for the **BurpBounty** keyword in front of each
    bug the extension found. This extension provides several areas for you to dig
    deeper for potential weaknesses:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**问题**面板中，查看每个扩展找到的漏洞前是否有**BurpBounty**关键词。该扩展提供了多个区域，供你深入挖掘潜在的弱点：
- en: '![Figure 10.59 – Results of scan](image/B21173_Figure_10.059..jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.59 – 扫描结果](image/B21173_Figure_10.059..jpg)'
- en: Figure 10.59 – Results of scan
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.59 – 扫描结果
- en: 'Let’s now turn our attention to the **Auth Analyzer** extension. **Auth Analyzer**
    assists in discovering unauthenticated API endpoints, as well as horizontal and
    vertical privilege escalation. Notice there is a new tool tab labeled **Auth Analyzer**:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们关注 **Auth Analyzer** 扩展。**Auth Analyzer** 帮助发现未授权的 API 端点，以及水平和垂直权限提升。注意，有一个新的工具标签，标注为
    **Auth Analyzer**：
- en: '![Figure 10.60 – Auth Analyzer tab](image/B21173_Figure_10.060..jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.60 – Auth Analyzer 标签](image/B21173_Figure_10.060..jpg)'
- en: Figure 10.60 – Auth Analyzer tab
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.60 – Auth Analyzer 标签
- en: 'Return to the Mutillidae landing page and log in as **admin** with a password
    of **admin**. Find the **POST** request of your login, right-click, and then select
    **Extensions** | **Auth Analyzer** | **Set Parameters Automatically** | **Create**
    **New Session**:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回 Mutillidae 登录页面，并以 **admin** 身份登录，密码为 **admin**。找到你的登录 **POST** 请求，右键点击，然后选择
    **扩展** | **Auth Analyzer** | **自动设置参数** | **创建** **新会话**：
- en: '![Figure 10.61 – Sending an admin request to Auth Analyzer](image/B21173_Figure_10.061..jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.61 – 向 Auth Analyzer 发送管理员请求](image/B21173_Figure_10.061..jpg)'
- en: Figure 10.61 – Sending an admin request to Auth Analyzer
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.61 – 向 Auth Analyzer 发送管理员请求
- en: 'Now, log out as **admin**. Log in to the application as **ed** with a password
    of **pentest**. Send the **POST** request of your second login to **Auth Analyzer**
    with a right-click, and then select **Extensions** | **Auth Analyzer** | **Repeat**
    **Request (1)**:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，注销 **admin** 用户。使用 **ed** 身份和密码 **pentest** 登录应用程序。右键点击第二次登录的 **POST** 请求，然后选择
    **扩展** | **Auth Analyzer** | **重复** **请求 (1)**：
- en: '![Figure 10.62 – Sending a regular user request to Auth Analyzer](image/B21173_Figure_10.062..jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.62 – 向 Auth Analyzer 发送常规用户请求](image/B21173_Figure_10.062..jpg)'
- en: Figure 10.62 – Sending a regular user request to Auth Analyzer
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.62 – 向 Auth Analyzer 发送常规用户请求
- en: 'Switch to the **Auth Analyzer** tab and turn the analyzer on. You should see
    a green dot instead of a red dot and an **Analyzer** **Running** label:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到 **Auth Analyzer** 标签，启用分析器。你应该看到一个绿色圆点而不是红色圆点，并且会显示 **分析器** **运行中** 标签：
- en: '![Figure 10.63 – Turning Auth Analyzer on](image/B21173_Figure_10.063..jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.63 – 启用 Auth Analyzer](image/B21173_Figure_10.063..jpg)'
- en: Figure 10.63 – Turning Auth Analyzer on
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.63 – 启用 Auth Analyzer
- en: 'After turning **Auth Analyzer** on, notice **DIFFERENCE** is determined between
    the two logins. Click the **Show Diff** button to have the difference color-coded
    for you to easily see:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用 **Auth Analyzer** 后，注意到两个登录之间的 **差异** 被确定了。点击 **显示差异** 按钮，系统将为你高亮显示差异，以便你更容易查看：
- en: '![Figure 10.64 – Seeing differences between requests](image/B21173_Figure_10.064..jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.64 – 查看请求之间的差异](image/B21173_Figure_10.064..jpg)'
- en: Figure 10.64 – Seeing differences between requests
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.64 – 查看请求之间的差异
- en: You would use this extension to log in as a higher-privileged user first. Then,
    you’d map the application’s functionality. After you’ve completed the mapping,
    click the **Logout** button. Then, log in again, but this time, as a regular user,
    perform mapping and use **Auth Analyzer** to identify any areas across the application
    where the lower-privileged user can access administrative functions.
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用此扩展先以更高权限的用户身份登录。然后，映射应用程序的功能。完成映射后，点击 **注销** 按钮。然后，再次登录，但这次以常规用户身份登录，执行映射，并使用
    **Auth Analyzer** 来识别应用程序中任何常规用户可以访问的管理员功能区域。
- en: 'In addition, **Auth Analyzer** can also be used to remove cookies and access
    tokens inside of requests. This would allow you to test for unauthenticated API
    endpoints much faster. After sending a request to test to **Auth Analyzer**, identify
    the cookie(s) you want removed:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，**Auth Analyzer** 还可以用于移除请求中的 cookies 和访问令牌。这将使你能够更快速地测试未授权的 API 端点。向 **Auth
    Analyzer** 发送测试请求后，识别你希望移除的 cookie：
- en: '![Figure 10.65 – Removing the cookie functionality](image/B21173_Figure_10.065..jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.65 – 移除 cookie 功能](image/B21173_Figure_10.065..jpg)'
- en: Figure 10.65 – Removing the cookie functionality
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.65 – 移除 cookie 功能
- en: 'Then, send a request against a web page or API endpoint and let **Auth Analyzer**
    tell you if there are any differences seen when the cookie is removed. See the
    following example after the **PHPSESSID** cookie is removed. Notice there are
    no cookies in the second request. When using this feature, you can quickly determine
    if the functionality is properly using authorization checks or if a bug is present:'
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，向网页或 API 端点发送请求，查看 **Auth Analyzer** 是否显示在移除 cookie 后有任何差异。以下是移除 **PHPSESSID**
    cookie 后的示例。注意，第二次请求中没有 cookie。当使用此功能时，你可以快速判断该功能是否正确使用了授权检查，或者是否存在 bug：
- en: '![Figure 10.66 – Seeing the difference between two requests](image/B21173_Figure_10.066..jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.66 – 看出两个请求之间的差异](image/B21173_Figure_10.066..jpg)'
- en: Figure 10.66 – Seeing the difference between two requests
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.66 – 看出两个请求之间的差异
- en: How it works...
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Finding bugs for bug bounty hunting can be time-consuming. The **Burp Bounty,
    Scan Check Builder** and **Auth Analyzer** extensions can both help to speed up
    discovery time for finding vulnerabilities in your target applications.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 为漏洞奖励寻找漏洞可能会耗费时间。**Burp Bounty, Scan Check Builder** 和 **Auth Analyzer** 扩展都可以帮助加速发现目标应用程序中的漏洞。
