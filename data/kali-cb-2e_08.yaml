- en: Wireless Specific Recipes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无线特定的操作步骤
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主题：
- en: Scanning for wireless networks
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描无线网络
- en: Bypassing MAC-based authentication
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绕过基于MAC的认证
- en: Breaking WEP encryption
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 破解WEP加密
- en: Obtaining WPA/WPA2 keys
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取WPA/WPA2密钥
- en: Exploiting guest access
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用访客访问权限
- en: Rogue AP deployment
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非法接入点部署
- en: Using wireless networks to scan and attack internal networks
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用无线网络扫描和攻击内部网络
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Although all the previous chapters have created a basis for pen testing that
    works across the spectrum, wireless has its own set of tools that span the pen
    testing methodology.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管之前的所有章节为跨领域的渗透测试打下了基础，但无线网络有一套专门的工具，涵盖了渗透测试方法论。
- en: Scanning for **Service Set Identifiers** (**SSIDs**)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描**服务集标识符**（**SSID**）
- en: Scanning for hidden SSIDs
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描隐藏的SSID
- en: Determining security of target SSID
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定目标SSID的安全性
- en: Testing for MAC address authentication
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试MAC地址认证
- en: Cracking **Wired Equivalent Privacy** (**WEP**)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 破解**有线等效隐私**（**WEP**）
- en: Cracking **Wi-Fi Protected Access** (**WPA**/**WPA2**)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 破解**Wi-Fi保护接入**（**WPA**/**WPA2**）
- en: Exploiting guest access
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用访客访问权限
- en: Rogue **Access Point** (**AP**) deployment
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非法**接入点**（**AP**）部署
- en: '**Man-in-the-Middle** (**MITM**) wireless attacks'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**中间人**（**MITM**）无线攻击'
- en: Using wireless networks to scan internal networks
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用无线网络扫描内部网络
- en: Using wireless as a vector for network related attacks
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用无线作为网络相关攻击的媒介
- en: Scanning for wireless networks
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描无线网络
- en: Wireless networking is very popular due to its ease of use, reduction of cabling,
    and ease of deployment. Fortunately for us, the very same features that make it
    easy to use on a day-to-day setting also make it easy to monitor and to perform
    attacks from areas that do not rely on physical access to the network. Often the
    wireless signal bleeds into public areas, such as parking lots, adjacent office
    spaces, shopping malls, and more. Unless the wireless network administrator has
    taken great pains to limit the wireless coverage to only their facility, it is
    very likely that you can begin your wireless reconnaissance using a smart phone
    to identify a good location to set up your Kali Linux platform within the range.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 无线网络因其易用性、减少布线以及简便的部署方式而广受欢迎。幸运的是，对于我们来说，使其在日常使用中变得便捷的特性，也使得它容易被监控，并且可以从不依赖物理接入网络的区域进行攻击。通常，无线信号会泄漏到公共区域，如停车场、相邻的办公空间、购物中心等。除非无线网络管理员已采取大量措施将无线覆盖限制在他们的设施内，否则很可能你可以使用智能手机开始无线侦察，找一个合适的位置，在范围内设置你的Kali
    Linux平台。
- en: In this section, we will cover how to use `airodump-ng` to identify the available
    wireless SSIDs including those that are not set to advertise their presence. With
    the information gathered, we will then take a look at the different types of security
    that are in place, and the best ways to attempt to penetrate those layers of protection.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍如何使用`airodump-ng`识别可用的无线SSID，包括那些未设置为广告其存在的SSID。通过收集到的信息，我们将进一步了解现有的安全类型，并尝试渗透这些保护层的最佳方法。
- en: Getting ready
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before you can use Kali Linux for wireless scanning, it is important to know
    which wireless chipset your wireless adapter is using, as only certain wireless
    chipsets are capable of being put into promiscuous or monitor mode. For a list
    of supported chipsets, check [https://www.aircrack-ng.org/doku.php?id=compatibility_drivers](https://www.aircrack-ng.org/doku.php?id=compatibility_drivers).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在你能够使用Kali Linux进行无线扫描之前，了解你的无线适配器使用的无线芯片组非常重要，因为只有某些无线芯片组才能进入混杂模式或监控模式。有关受支持的芯片组列表，请查看[https://www.aircrack-ng.org/doku.php?id=compatibility_drivers](https://www.aircrack-ng.org/doku.php?id=compatibility_drivers)。
- en: In the event that your wireless adapter is not supported, there are many USB
    wireless adapters that can be added to an existing testing platform for minimal
    cost.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的无线适配器不受支持，有许多USB无线适配器可以以最低成本添加到现有的测试平台中。
- en: 'Once you have determined that you have a supported wireless chipset, you will
    need to put `wlan0` into the monitor mode by doing the following:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认你的无线芯片组受支持，你需要通过以下操作将`wlan0`切换到监控模式：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How to do it...
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作方法...
- en: 'Once you have confirmed that all interfering processes have been stopped, you
    will use the following steps to start gathering information on available wireless
    networks:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你确认所有干扰过程已停止，你将使用以下步骤开始收集可用无线网络的信息：
- en: Create a directory for your results named `wireless`, and change your directory
    to it. This is where the output of the tools will be saved.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`wireless`的目录来保存结果，并切换到该目录。这是工具输出结果将被保存的位置。
- en: 'From the command line, type the following:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行中输入以下内容：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Allow this to run for a few minutes. During this time, you will begin to see
    information on wireless networks that can be seen by your device, such as the
    following:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许此过程运行几分钟。在这段时间内，你将开始看到你的设备可以看到的无线网络信息，如下所示：
- en: '![](assets/8329ec84-f490-43c3-9006-8d694e0d8603.png)Wireless networks seen
    from airodump-ng'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/8329ec84-f490-43c3-9006-8d694e0d8603.png)通过airodump-ng看到的无线网络'
- en: 'Using the preceding information, you can learn the following:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用前述信息，你可以了解到以下内容：
- en: We can see that there are a total of 5 ESSIDs, one of which is not broadcasting
    its ESSID.
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到总共有5个ESSID，其中一个未广播其ESSID。
- en: '`Kali_One` is showing `OPN` as its encryption type, meaning anyone can associate
    with this ESSID. This is commonly how guest wireless networks are seen.'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Kali_One`显示其加密类型为`OPN`，这意味着任何人都可以连接到这个ESSID。这通常是访客无线网络的配置方式。'
- en: '`Kali_Two` and `Kali_Three` are showing `WEP` as their encryption type—but
    we don''t know yet whether it is 40 bit or 104 bit WEP keys.'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Kali_Two`和`Kali_Three`显示其加密类型为`WEP`，但我们还不知道它们是40位还是104位WEP密钥。'
- en: '`Kali_Four` is showing as `WPA2`, and PSK for authentication (pre-shared key).'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Kali_Four`显示其加密类型为`WPA2`，并使用PSK进行认证（预共享密钥）。'
- en: If we look at the BSSID (MAC address) of the ESSIDs, we see that they are sequential.
    This is common for environments with centrally managed wireless networks and tells
    us that successfully connecting to one or more of these ESSIDs increases our likelihood
    of gaining access to the corporate network beyond.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们查看ESSID的BSSID（MAC地址），我们会看到它们是连续的。这在中央管理的无线网络环境中很常见，且告诉我们成功连接到其中一个或多个ESSID将增加我们访问更大企业网络的机会。
- en: From the same directory, list the files generated as a result of the scan. Having
    this information available to you without the need to continuously scan is important
    to minimize the amount of time you need to be actively scanning.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从同一目录中列出扫描结果生成的文件。将这些信息随时提供给你，而不必不断扫描，有助于减少你需要主动扫描的时间。
- en: Bypassing MAC-based authentication
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绕过基于MAC的认证
- en: In the absence of a truly centralized authentication, or in the event that devices
    need to connect to a wireless network but are unable to provide authentication
    credentials, very frequently an open wireless network will be in place that will
    be configured to only allow specific MAC addresses to connect. This is frequently
    the case with older devices that were manufactured before it was common to secure
    wireless networks.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有真正集中认证的情况下，或者当设备需要连接到无线网络但无法提供认证凭证时，通常会设置一个开放的无线网络，并配置为只允许特定的MAC地址连接。这种情况在较旧的设备中较为常见，尤其是那些在无线网络安全化之前制造的设备。
- en: Given how simple MAC authentication is to bypass, it is still used in a surprising
    number of locations due to the ease of implementation as well as the perception
    that this it is effective.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于MAC认证很容易被绕过，但由于其实现简单以及人们认为它有效，因此它仍然被意外地广泛应用于许多地方。
- en: Getting ready
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: In order to complete this recipe, you will need to follow the commands laid
    out in the previous section *Scanning for wireless networks*, placing your wireless
    network adapter into the monitor mode.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成本教程，你需要按照前一节*扫描无线网络*中列出的命令操作，将你的无线网卡设置为监控模式。
- en: 'You can confirm this by running the following:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下命令来确认这一点：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Confirm that interface `wlan0mon` is set to `type monitor`:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 确认接口`wlan0mon`已设置为`monitor`模式：
- en: '![](assets/8472ce92-85d2-4bcd-8fe7-167513c33c52.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8472ce92-85d2-4bcd-8fe7-167513c33c52.png)'
- en: How to do it...
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps necessary for this recipe are as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本教程所需的步骤如下：
- en: 'Similar to the previous section, we will be using `airodump-ng` to gather more
    specific information. Since we know that the ESSID `Kali_One` is unauthenticated,
    we will look for that specific BSSID and for the devices connecting to it. Open
    a terminal session and start `airodump-ng` as follows:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似于前一节，我们将使用`airodump-ng`收集更具体的信息。由于我们知道ESSID `Kali_One`未进行认证，我们将查找该特定BSSID及连接到它的设备。打开终端会话并按如下方式启动`airodump-ng`：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As this runs, you will start to see the devices that are currently connecting
    to this BSSID, giving you a list of devices that are on the authorized MAC list:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当此过程运行时，你将开始看到当前连接到该BSSID的设备，提供一份在授权MAC地址列表中的设备清单：
- en: '![](assets/5eeaf70c-5cc8-4b70-b576-122ff7ab8f54.png)Devices connecting to a
    particular ESSID'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/5eeaf70c-5cc8-4b70-b576-122ff7ab8f54.png)连接到特定ESSID的设备'
- en: Now that we have a MAC address that is on the authorized MAC list, we can use
    the `macchanger` utility to change the MAC address of our Kali Linux machine to
    match the preceding device.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经获得了一个在授权MAC地址列表中的MAC地址，我们可以使用`macchanger`工具将Kali Linux机器的MAC地址更改为前面设备的地址。
- en: 'Open a new root terminal and disable `wlan0`, change the MAC address, and bring
    the interface backup:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的root终端，禁用`wlan0`，更改MAC地址，并将接口恢复：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](assets/cd4042dc-8e19-47c7-b89b-b3ba2cecf2e6.png)Using macchanger to use
    different MAC address'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/cd4042dc-8e19-47c7-b89b-b3ba2cecf2e6.png)使用`macchanger`更改MAC地址'
- en: 'Now, attempts to connect to this SSID should be successful. Using `NetworkManager`,
    attempt to connect to the `Kali_One` SSID, and confirm from the CLI:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，尝试连接到该SSID应该是成功的。使用`NetworkManager`，尝试连接到`Kali_One` SSID，并通过命令行确认：
- en: '![](assets/1c9842d5-dd7d-4219-9212-f6cd0a388e1a.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1c9842d5-dd7d-4219-9212-f6cd0a388e1a.png)'
- en: Breaking WEP encryption
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 破解WEP加密
- en: 'Wireless administrators recognized that having open networks or networks that
    rely on MAC address authentication, presented an unacceptable level of risk and
    therefore over time, there have been many attempts to harden the authentication
    to wireless networks, each with their own limitations:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 无线管理员意识到开放网络或依赖MAC地址认证的网络存在不可接受的风险，因此随着时间的推移，已经有很多尝试来加固无线网络的认证，每种方式都有其局限性：
- en: '**Wired Equivalent Privacy** (**WEP**) uses the RC4 encryption algorithm and
    combines the user-defined key with a 24 bit **initialization vector** (**IV**).
    Unfortunately, IV''s are reused thus allowing for us to use tools like `aircrack-ng`
    to get the original key, giving us access to the target network as an authenticated
    endpoint.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有线等效隐私**（**WEP**）使用RC4加密算法，并将用户定义的密钥与24位**初始化向量**（**IV**）结合。不幸的是，IV会被重用，因此我们可以使用像`aircrack-ng`这样的工具来获取原始密钥，从而让我们作为认证端点访问目标网络。'
- en: '**Wi-Fi Protected Access** (**WPA**) comes in several different flavors and
    is much more secure than WEP. Because it can be used in a manner similar to WEP
    where a pre-shared key is used (WPA-PSK), tools such as fluxion can recover the
    pre-shared key, and where WPA2 is used with a central authentication source (commonly
    RADIUS), brute forcing becomes necessary with tools such as `hashcat` (covered
    in section *Obtaining WPA/WPA2 Keys*).'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Wi-Fi保护接入**（**WPA**）有几种不同的形式，比WEP更安全。因为它可以像WEP一样使用预共享密钥（WPA-PSK），所以像fluxion这样的工具可以恢复预共享密钥，而使用WPA2并结合中心身份验证源（通常是RADIUS）时，则需要使用像`hashcat`这样的工具进行暴力破解（在*获取WPA/WPA2密钥*一节中介绍）。'
- en: It is important to note that in order for us to be able to recover pre-shared
    keys, it is often necessary to monitor a large amount of network traffic in a
    PCAP file for analysis, so when placing your systems, keep in mind they will need
    to remain undisturbed for potentially quite some time.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，为了能够恢复预共享密钥，通常需要监控大量的网络流量并将其保存在PCAP文件中进行分析，因此在部署系统时，要记住它们可能需要长时间保持不受干扰。
- en: Getting ready
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: In order to complete this recipe, you will need to follow the commands laid
    out in the first recipe of this chapter, placing your wireless network adapter
    into the monitor mode.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成此步骤，你需要遵循本章第一节中列出的命令，将无线网卡设置为监控模式。
- en: 'You can confirm this by running the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下命令来确认这一点：
- en: '[PRE5]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Confirm that the interface `wlan0mon` is set to `type monitor`:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 确认接口`wlan0mon`已设置为`type monitor`：
- en: '![](assets/0ff6f98e-3d9a-40d8-a2d4-578761faa932.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0ff6f98e-3d9a-40d8-a2d4-578761faa932.png)'
- en: How to do it...
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'This is the process we will follow to find and expose WEP keys:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们用来查找和暴露WEP密钥的过程：
- en: Based on the scanning done in the section *Scanning for wireless networks*,
    we know that the SSID `Kali_Two` and `Kali_Three` are both running WEP on `channel
    11`, and therefore will be our targets for this section.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据在*扫描无线网络*部分中进行的扫描，我们知道`Kali_Two`和`Kali_Three`的SSID都在`channel 11`上运行WEP，因此它们将是本节的目标。
- en: 'Using `airodump-ng`, we will start a dump of data from `Kali_Two` using the
    following command line:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`airodump-ng`，我们将使用以下命令行从`Kali_Two`开始数据捕获：
- en: '[PRE6]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The argument for `-c` is the channel (`channel 11`) and BSSID is the MAC address
    of the AP (`68:86:A7:1D:6D:84`). We will write the `pcap` file to the same directory
    as in the previous sections and listen on `wlan0mon`.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-c`参数指定频道（`channel 11`），BSSID是AP的MAC地址（`68:86:A7:1D:6D:84`）。我们将把`pcap`文件写入与前面相同的目录，并在`wlan0mon`上进行监听。'
- en: 'Once initiated, it can take a very long time to gather enough data packets
    to expose the IV – often between 250,000 and 1,500,000 depending on the key length.
    You can see the progression in the progress indicator for `airodump-ng`, where
    we are watching the `#Data` column:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦启动，收集足够的数据包来暴露IV可能需要很长时间——通常在250,000到1,500,000之间，具体取决于密钥长度。你可以在`airodump-ng`的进度指示器中看到进度，我们会关注`#Data`列：
- en: '![](assets/ecc66a60-1963-4f8b-90f0-9da806c90674.png)Progress of airodump-ngIf
    you would like to run `aircrack-ng` using test files with known good dumps, there
    are many available, along with more in-depth details on advanced `aircrack-ng`
    at this address: [https://www.aircrack-ng.org/doku.php?id=aircrack-ng](https://www.aircrack-ng.org/doku.php?id=aircrack-ng).'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/ecc66a60-1963-4f8b-90f0-9da806c90674.png)airodump-ng进度 如果你想使用已知的有效数据文件来运行`aircrack-ng`，有很多可用的文件，此外，还有更多关于高级`aircrack-ng`的详细信息，访问此地址：[https://www.aircrack-ng.org/doku.php?id=aircrack-ng](https://www.aircrack-ng.org/doku.php?id=aircrack-ng)。'
- en: 'Once you have gathered enough IV''s to begin the cracking process, you will
    kick off the process with the following command:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你收集了足够的IV（初始化向量），可以开始破解过程，使用以下命令启动：
- en: '[PRE7]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The process of cracking the WEP key will begin and be depending on the amount
    of data gathered, the key length used; this could take some time. Once complete,
    however, you will see a display like the following:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 破解WEP密钥的过程将开始，具体时间取决于收集的数据量和使用的密钥长度，这可能需要一些时间。然而，完成后，你将看到如下显示：
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In our case, the WEP key is `kali2`, and can now be used to connect directly
    to the wireless network as an authenticated end point.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，WEP密钥是`kali2`，现在可以直接用来连接到无线网络，作为已认证的终端。
- en: Obtaining WPA/WPA2 keys
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取WPA/WPA2密钥
- en: 'This section will walk you through the process of gathering WPA keys using
    two different methods:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将带你了解使用两种不同方法收集WPA密钥的过程：
- en: Social engineering through SSID manipulation and social engineering with fluxion
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过SSID篡改和fluxion进行社会工程学攻击
- en: Brute force cracking of gathered data using `hashcat`
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`hashcat`对收集的数据进行暴力破解
- en: Getting ready
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: In order to complete this recipe, you will need to follow the commands laid
    out in the section *Scanning for wireless networks* and place your wireless network
    adapter into the monitor mode.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这个操作，你需要按照*扫描无线网络*部分的命令操作，并将无线网卡设置为监听模式。
- en: 'You can confirm this by running the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下命令来确认：
- en: '[PRE9]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Confirm that the interface `wlan0mon` is set to `type monitor`:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 确认接口`wlan0mon`已设置为`monitor`模式：
- en: '![](assets/ca9216d3-f8b3-42fe-afab-55a21927f963.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ca9216d3-f8b3-42fe-afab-55a21927f963.png)'
- en: How to do it...
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'There are two ways in order to get the password for WPA protected networks;
    we will use fluxion in the following way:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 获取WPA受保护网络密码有两种方式；我们将通过以下方式使用fluxion：
- en: 'From the command line, ensure that your wireless adapter is in the monitor
    mode:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行确保你的无线适配器处于监听模式：
- en: '[PRE10]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'From the command line, we will need to download fluxion from Git:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行，我们需要从Git下载fluxion：
- en: '[PRE11]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Navigate to the directory that is created (`fluxion/`) and run the following:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到创建的目录（`fluxion/`）并运行以下命令：
- en: '[PRE12]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In the event that there are missing system dependencies, you can run the `./install/installer.sh`
    file to ensure that all necessary packages are installed.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果缺少系统依赖项，你可以运行`./install/installer.sh`文件来确保所有必要的软件包已安装。
- en: 'Once all dependencies are met, you will be presented with the following:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦所有依赖项都满足，你将看到如下内容：
- en: '![](assets/2c4ff630-1b68-4bf0-829d-fb21f51eaca2.png)Fluxion start'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/2c4ff630-1b68-4bf0-829d-fb21f51eaca2.png)Fluxion启动'
- en: In the next screen, select your wireless adapter.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕中，选择你的无线适配器。
- en: Next, you will be asked to decide which channel to monitor. Since our target
    SSID is on `channel 11`, we will enter `11` and hit *Enter*.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你将被要求选择要监听的频道。由于我们的目标SSID在`channel 11`，我们将输入`11`并按*回车*。
- en: The next screen will cause an additional terminal window to pop up with the
    heading `Scanning Targets` followed by the channel we selected where fluxion will
    be scanning for networks. Allow this to run for a few minutes until you find the
    SSID you are looking to crack, then click on the X in the upper right to close
    the scan and return to the fluxion application.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一屏幕将弹出一个额外的终端窗口，标题为`扫描目标`，后面是我们选择的频道，fluxion将在该频道扫描网络。让其运行几分钟，直到找到你想要破解的SSID，然后点击右上角的X关闭扫描并返回fluxion应用程序。
- en: You will now be presented with a list of SSIDs seen in the scanning session,
    and we will want to look for those with clients attached. Enter the number of
    the SSID from the list and press *Enter*.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将看到扫描会话中发现的SSID列表，我们需要查找已连接客户端的SSID。输入列表中的SSID编号并按 *Enter*。
- en: 'With the SSID selected, you will be given the option of how the SSID will be
    attacked. In this case, we will select option `[1] - FakeAP - Hostapd (Recommended)`,
    and press *Enter*:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择了SSID后，你将有机会选择如何攻击该SSID。在这种情况下，我们将选择选项`[1] - FakeAP - Hostapd（推荐）`，并按 *Enter*：
- en: '![](assets/62aef4ca-7aff-4bf9-b23d-de2b68de5cae.png)Selecting false portal
    method'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/62aef4ca-7aff-4bf9-b23d-de2b68de5cae.png)选择伪门户方法'
- en: You will now be prompted to enter the location of the previously recorded handshake
    sessions between clients and the AP. If you do not have any saved from previous
    attempts, simply press *Enter* and we will select the `aircrack-ng` option on
    the next screen.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，系统将提示你输入之前记录的客户端与AP之间的握手会话的位置。如果你没有从之前的尝试中保存任何记录，直接按 *Enter*，然后在下一个屏幕上选择`aircrack-ng`选项。
- en: When asked how to capture the handshake, enter `1` for the option to deauth
    all and press *Enter*.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当被询问如何捕获握手时，输入`1`选择“断开所有连接”选项并按 *Enter*。
- en: 'This will now launch two additional windows – in the lower right, you will
    see fluxion attempting to send deauth packets, and in the upper right, you will
    see the progress. When you see packets between the ESSID and a client, you can
    go back to the fluxion window, and select option `[1] Check handshake` and press
    *Enter*:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将启动两个附加窗口——在右下角，你将看到fluxion尝试发送deauth数据包，在右上角，你将看到进度。当你看到ESSID与客户端之间的数据包时，可以返回fluxion窗口，选择选项`[1]
    检查握手`并按 *Enter*：
- en: '![](assets/6a20432e-96e5-47ee-a0f7-08f87ea8f4bb.png)Capturing client handshakes
    with fluxion'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/6a20432e-96e5-47ee-a0f7-08f87ea8f4bb.png)使用fluxion捕获客户端握手'
- en: If you have not successfully captured a handshake, you will have the option
    to restart the process to capture one.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尚未成功捕获握手，将有选项重新开始捕获过程。
- en: 'Fluxion will now look to see if it has an SSL certificate configured to use
    the login portal. In most cases, it is acceptable to select `Create a SSL certificate`
    and proceed:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Fluxion现在将检查是否已配置SSL证书用于登录门户。在大多数情况下，选择`创建SSL证书`并继续是可以接受的：
- en: '![](assets/59371f71-99a9-44c5-86af-deffa526b85e.png)Certificate selection for
    captive portal'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/59371f71-99a9-44c5-86af-deffa526b85e.png)选择用于强制门户的证书'
- en: The next screen will select `1` for `Web Interface` and proceed.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一屏幕将选择`1`选项进入`Web Interface`并继续。
- en: The next screen will present you with many different options in terms of portals
    that can be presented to the user. We will enter `1` for `English` and continue.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一屏幕将提供多个不同的门户选项，你可以选择呈现给用户的方式。我们将输入`1`选择`English`并继续。
- en: Fluxion can be very heavily customized to present a portal that is nearly identical
    to the one that can be used with guest portals, and so on. This would require
    customizing the portals to fit your needs. To learn more about how this can be
    done, visit the fluxion Git repository at [https://github.com/wi-fi-analyzer/fluxion](https://github.com/wi-fi-analyzer/fluxion).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Fluxion可以进行高度定制，以展示一个几乎与可用于访客门户的门户相同的页面，等等。这将需要定制门户以满足你的需求。要了解更多关于如何实现这一点的信息，请访问fluxion的Git代码库：[https://github.com/wi-fi-analyzer/fluxion](https://github.com/wi-fi-analyzer/fluxion)。
- en: 'Fluxion will now launch a series of applications in separate terminals, showing
    the statistics of the processes it needs for the attack. It will launch a DHCP
    server, a rogue AP (named the same as the target SSID, but not WPA protected),
    a DNS server to force all DNS requests to go to the same IP address of the portal,
    as well as information on the SSID being generated. MDK3 is running to deauth
    any devices trying to connect to the original SSID, to force them to connect to
    ours:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Fluxion现在将在多个终端中启动一系列应用程序，显示其攻击所需进程的统计信息。它将启动一个DHCP服务器，一个伪AP（与目标SSID同名，但不受WPA保护），一个DNS服务器，将所有DNS请求强制指向同一IP地址的门户，以及生成的SSID信息。MDK3正在运行，以去认证任何试图连接到原始SSID的设备，迫使它们连接到我们的SSID：
- en: '![](assets/2ec0d3c9-da98-4e11-9c60-735762191d87.png)Progress of fluxion attack'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/2ec0d3c9-da98-4e11-9c60-735762191d87.png)Fluxion攻击的进度'
- en: 'Once a device has been forced to connect to our SSID, they will be redirected
    to the captive portal spawned by fluxion. Depending on the option you selected
    earlier or based on a customized portal generated by you, they will be redirected
    to a portal similar to the following:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦设备被迫连接到我们的SSID，它们将被重定向到由fluxion生成的捕获门户。根据你之前选择的选项或你自定义的门户，它们将被重定向到一个类似以下的门户：
- en: '![](assets/13192534-c021-4e12-b6af-f6b899c3e039.png)Captive portal'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/13192534-c021-4e12-b6af-f6b899c3e039.png)捕获门户'
- en: 'When the user sees this screen, they will likely enter the WPA password for
    the original SSID (in our case, `Kali_Five`) and click Submit. When they do so,
    fluxion will verify the password as being the pre-shared key, and if it is, the
    fluxion processes will stop, and you will see a screen similar to the following:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户看到此屏幕时，他们很可能会输入原始SSID的WPA密码（在我们的案例中是`Kali_Five`），然后点击提交。当他们这样做时，fluxion将验证该密码是否为预共享密钥，如果是，fluxion的进程将停止，你将看到类似以下的屏幕：
- en: '![](assets/2bb3b8b0-9638-47f3-95a4-23014e5bcd95.png)WPA password identified'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/2bb3b8b0-9638-47f3-95a4-23014e5bcd95.png)识别出的WPA密码'
- en: 'If you don''t feel that it is likely that a network user can be tricked into
    providing their credentials, you can also utilize `hashcat` to perform dictionary
    or brute force attacks against the WPA key. To do this, we will use the same data
    gathering process we used in the *Cracking WEP Encryption* section to gather data
    from the `Kali_Five` SSID:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你认为网络用户不太可能被欺骗提供他们的凭据，你也可以使用`hashcat`对WPA密钥执行字典攻击或暴力破解攻击。为此，我们将使用与*破解WEP加密*部分相同的数据收集过程，从`Kali_Five`
    SSID收集数据：
- en: '[PRE13]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To speed the data collection process and to capture more handshakes, we will
    send 100 deauth attempts to the client connecting to our BSSID using the following
    command line:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了加速数据收集过程并捕获更多的握手信息，我们将使用以下命令行向连接到我们BSSID的客户端发送100次去认证尝试：
- en: '[PRE14]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Allow the `airodump-ng` terminal to continue in its own terminal.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许`airodump-ng`终端在其自己的终端中继续运行。
- en: 'Kali Linux includes a large wordlist that can be used with `hashcat`. Hashcat
    is a versatile password brute-forcing tool that supports a tremendous number of
    formats. In a separate terminal, navigate to the following directory, and unzip
    the `rockyou.txt.gz` wordlist:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kali Linux包括一个可以与`hashcat`一起使用的大型词典。Hashcat是一个多功能的密码暴力破解工具，支持大量格式。在一个单独的终端中，导航到以下目录并解压`rockyou.txt.gz`词典：
- en: '[PRE15]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: At the time of this writing, `rockyou.txt` contained 14,344,392 different words.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在写本文时，`rockyou.txt`包含了14,344,392个不同的词汇。
- en: 'Stop the `airodump-ng` process, and locate the `cap` file generated by `airodump`:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止`airodump-ng`进程，并找到`airodump`生成的`cap`文件：
- en: '![](assets/30af6f54-0eba-4d58-9745-c5065cfa5a8a.png)Files generated during
    airodump-ng proces'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/30af6f54-0eba-4d58-9745-c5065cfa5a8a.png)airodump-ng过程生成的文件'
- en: 'The file format that is generated by `airodump-ng` is incorrect for use with
    `hashcat`, and Kali does not currently have the utility needed to convert `cap`
    files to `hccapx` format that is needed for use with `hashcat`. This leaves you
    with two different options:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`airodump-ng`生成的文件格式不适合与`hashcat`一起使用，并且Kali当前没有转换`cap`文件为`hccapx`格式所需的工具，而`hccapx`是与`hashcat`一起使用所必需的格式。这让你有两种选择：'
- en: You can download and compile the `cap2hccapx` utility from the GitHub repository
    at [https://github.com/hashcat/hashcat-utils](https://github.com/hashcat/hashcat-utils)
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以从GitHub仓库下载并编译`cap2hccapx`工具，链接为[https://github.com/hashcat/hashcat-utils](https://github.com/hashcat/hashcat-utils)
- en: You can upload the `cap` file to the online conversion tool located at [https://hashcat.net/cap2hccapx/](https://hashcat.net/cap2hccapx/)
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以将`cap`文件上传到位于[https://hashcat.net/cap2hccapx/](https://hashcat.net/cap2hccapx/)的在线转换工具。
- en: 'Working on the premise that you have converted your `cap` file to `hccapx`
    format, using one of the preceding tools we will now run `hashcat` against this
    file using the `rockyou.txt` wordlist:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设你已经将`cap`文件转换为`hccapx`格式，使用前面提到的工具之一，我们现在将使用`rockyou.txt`字典文件通过`hashcat`对该文件进行攻击：
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This command line does the following:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令行执行以下操作：
- en: '`-m 2500`: Tells `hashcat` to use the WPA hashing format'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`-m 2500`：指示`hashcat`使用WPA哈希格式'
- en: '`-a 0  `: Indicates we are doing a dictionary-based attack'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`-a 0`: 表示我们正在进行基于字典的攻击'
- en: 'Once `hashcat` has determined the WPA key from the `hccapx` file, it will return
    the results in the terminal window. As we found in the fluxion section, the WPA
    password is `wireless`:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦`hashcat`从`hccapx`文件中确定了WPA密钥，它将在终端窗口中返回结果。正如我们在fluxion部分中发现的那样，WPA密码是`wireless`：
- en: '![](assets/c3810048-2f95-477e-9abb-af42cc14fe2f.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c3810048-2f95-477e-9abb-af42cc14fe2f.png)'
- en: Exploiting guest access
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用访客访问
- en: 'When guest access is offered, often it is on a shared network with the network
    you are attempting to infiltrate. There are several different types of wireless
    guest access offered, each has its own vulnerabilities:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 当提供访客访问时，通常它会与你试图渗透的网络处于同一共享网络上。提供的无线访客访问有几种不同类型，每种类型都有自己的漏洞：
- en: 'Pre-shared keys: These are generally WEP or WPA PSK''s that are intended to
    keep unauthorized users or devices to a minimum. Unfortunately, these keys are
    generally known by many people and are very rarely changed.'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预共享密钥：这些通常是WEP或WPA PSK，用来将未授权的用户或设备限制到最小化。不幸的是，这些密钥通常为很多人所知，并且很少被更改。
- en: 'Captive portal: The guests connect to a wireless network and are automatically
    redirected to a web page that prompts them for credentials. This may or may not
    be combined with a pre-shared key.'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 捕获门户：访客连接到无线网络后，会自动重定向到一个网页，提示他们输入凭证。这可能会与预共享密钥结合使用，也可能不会。
- en: The most common implementations of guest access include elements of recipes
    that we have done in previous sections but are stung together and very frequently
    are labeled as guest networks by their SSID.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 访客访问的最常见实现包括我们在前几部分中做过的那些步骤，但它们是组合在一起的，并且通常会通过它们的SSID标记为访客网络。
- en: Getting ready
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: In order to complete this recipe, you will need to follow the commands laid
    out in section *Scanning for wireless networks*, placing your wireless network
    adapter into monitor mode.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这个过程，你需要按照*扫描无线网络*一节中列出的命令，将无线网卡设置为监控模式。
- en: 'You can confirm this by running the following:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下命令来确认这一点：
- en: '[PRE17]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Confirm that the interface `wlan0mon` is set to `type monitor`:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 确认接口`wlan0mon`已设置为`type monitor`：
- en: '![](assets/60818a2c-6fa6-46c6-b289-ea636a81c843.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/60818a2c-6fa6-46c6-b289-ea636a81c843.png)'
- en: How to do it...
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To take advantage of environments with guest networks, we will us the following
    process:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 为了利用带有访客网络的环境，我们将使用以下流程：
- en: 'First, we need to see what networks are likely to be guest networks. Start
    by running `airodump-ng` as follows:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要查看哪些网络可能是访客网络。从运行`airodump-ng`开始，如下所示：
- en: '[PRE18]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](assets/e533b4b4-ce78-47a2-9325-d22ac5c81a4f.png)Searching for guest networks'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/e533b4b4-ce78-47a2-9325-d22ac5c81a4f.png) 搜索访客网络'
- en: Based on the results of the `airodump-ng` run, we can see that ESSID `Kali_Guest`
    is visible and is protected with a shared WEP key, and ESSID `Kali_Guest1` is
    open.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据`airodump-ng`运行的结果，我们可以看到ESSID `Kali_Guest`是可见的，并且使用共享的WEP密钥进行保护，而ESSID `Kali_Guest1`是开放的。
- en: 'We will start with the open SSID since nearly all guest implementations use
    a guest portal and authenticated sessions are tracked by the MAC address of the
    device connecting to the guest network. To start gathering information on the
    nodes on this network, we start by running `airodump-ng` specifically on the BSSID
    for `Kali_Guest1`:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从开放的SSID开始，因为几乎所有访客网络实现都使用访客门户，而且认证会话是通过连接到访客网络的设备的MAC地址来跟踪的。为了开始收集该网络节点的信息，我们首先对`Kali_Guest1`的BSSID运行`airodump-ng`：
- en: '[PRE19]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'As we found in the previous sections, this will show us devices that are connected
    to this network. In this case, we are likely to see a higher number of devices
    than normal, as many devices will automatically connect to unauthenticated networks.
    Use the `macchanger` utility to mimic one of these devices to use their authenticated
    sessions:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如我们在前面的部分中发现的，这将显示连接到该网络的设备。在这种情况下，我们可能会看到比平时更多的设备，因为许多设备会自动连接到未认证的网络。使用`macchanger`工具伪造这些设备之一，以使用它们的认证会话：
- en: '[PRE20]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To start cracking the WEP key for the SSID `Kali_Guest`, let''s kick off `airodump-ng`
    to start gathering packets:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始破解 SSID `Kali_Guest` 的 WEP 密钥，让我们启动`airodump-ng`开始收集数据包：
- en: '[PRE21]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![](assets/4462982f-e0e9-435b-a465-4346f444c217.png)Gathering information to
    crack WEP key on guest network'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/4462982f-e0e9-435b-a465-4346f444c217.png)收集信息以破解访客网络上的 WEP 密钥'
- en: As we did in the *Cracking WEP Encryption* section, we gather enough data packets
    to be able to extract the WEP key to get access to the guest network. Refer to
    section *Cracking WEP Encryption* (if WEP is used) or section *Cracking WPA/WPA2
    Encryption* (if WPA is used) for more detailed steps on gaining access to these
    types of networks.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如我们在*破解 WEP 加密*部分所做的那样，我们收集足够的数据包以便能够提取 WEP 密钥，从而访问访客网络。有关如何访问这些类型网络的更详细步骤，请参见*破解
    WEP 加密*（如果使用 WEP）或*破解 WPA/WPA2 加密*（如果使用 WPA）部分。
- en: Rogue AP deployment
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恶意接入点部署
- en: In this recipe, we will use `wifiphisher` to create a rogue, and capture username
    and passwords from a captive portal that simulates corporate portals.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用`wifiphisher`创建一个恶意接入点，并通过模拟企业门户来捕获用户名和密码。
- en: Since we have covered creating rogue APs and forcing deauthentications in section
    *Cracking WEP Encryption* (with `airodump-ng`/`aircrack-ng`) and *Obtaining WPA/WPA2
    Keys* (with fluxion), this recipe will focus on the creation of access points
    that encourage open use and have the ability to gather credentials or deliver
    malicious payloads.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经在*破解 WEP 加密*（使用`airodump-ng`/`aircrack-ng`）和*获取 WPA/WPA2 密钥*（使用fluxion）部分讲解了创建恶意接入点和强制进行去认证，因此本教程将重点介绍创建鼓励开放使用的接入点，并能够收集凭据或传递恶意负载。
- en: Getting ready
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备开始
- en: 'The tool used in this recipe is not included in the base installation of Kali
    Linux and must be installed from the command line with the following command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程中使用的工具不包含在 Kali Linux 的基础安装中，必须通过命令行使用以下命令安装：
- en: '[PRE22]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How to do it...
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To create a rogue access point with `wifiphisher`, the following process will
    be used:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`wifiphisher`创建一个恶意接入点，将使用以下过程：
- en: 'Once installed, we will launch `wifiphisher` with the following command that
    will disable `jamming` (`-nJ`) and create a SSID named `Free Wifi`:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，我们将通过以下命令启动`wifiphisher`，该命令将禁用`干扰`（`-nJ`）并创建一个名为`Free Wifi`的 SSID：
- en: '[PRE23]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Once executed, you will be asked to make a selection as to the process that
    will be in place once a victim connects to our SSID:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行后，系统会要求你选择当受害者连接到我们的 SSID 后将会执行的过程：
- en: '![](assets/5869b912-bf35-4269-baee-e564b2f0157d.png) wifiphisher phishing options'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/5869b912-bf35-4269-baee-e564b2f0157d.png) wifiphisher 钓鱼选项'
- en: Select `Browser Connection Reset` by entering `1` and hitting *Enter*.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入`1`并按下*Enter*键选择`浏览器连接重置`。
- en: 'We have now created an open wireless SSID that appears as though it is a service
    that can be used for many different purposes. In this scenario, when connections
    are made to this SSID, the user''s browser is automatically redirected to the
    HTTP server running on our Kali Linux system and the following page is displayed:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在已经创建了一个开放的无线 SSID，看起来像是一个可以用于多种不同目的的服务。在这种情况下，当连接到此 SSID 时，用户的浏览器会自动重定向到我们在
    Kali Linux 系统上运行的 HTTP 服务器，并显示以下页面：
- en: '![](assets/21d3a493-9348-4585-ab06-282568fcb7a1.png)Captive portal redirect,
    using the browser redirect template'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/21d3a493-9348-4585-ab06-282568fcb7a1.png)使用浏览器重定向模板的强制门户重定向'
- en: 'To add an additional layer of realism to any AP you set up, you can define
    the use of a WPA/WPA2 pre-shared key by adding the following to the command line:
    `-pK MyKeyHere`. This is particularly useful when combining the oath-login with
    the PSK of a shared network, like guest networks or corporate networks where the
    key is static, but well known.'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为您设置的任何接入点增加更多的真实性，您可以通过在命令行添加以下内容来定义使用 WPA/WPA2 预共享密钥：`-pK MyKeyHere`。当结合使用共享网络的
    PSK（如访客网络或企业网络，其中密钥是静态的但已知）与身份验证登录时，这一点尤其有用。
- en: 'Stop the running `wifiphisher` session by pressing *CTRL-C*, and once it has
    stopped, run the following from the command line:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按下*CTRL-C*停止运行的`wifiphisher`会话，停止后，在命令行运行以下命令：
- en: '[PRE24]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Unlike the previous step, we have defined the phishing template from the command
    line. Default and customized templates can be called from the command line, allowing
    for the generation of automated scripts to kick off new campaigns.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 与前一步不同，我们已从命令行定义了钓鱼模板。默认模板和自定义模板都可以从命令行调用，从而生成自动化脚本来启动新的攻击。
- en: 'When you connect to this SSID, you will be redirected to a splash page that
    will appear to be asking for you to authenticate to this network using your Facebook
    credentials:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你连接到这个SSID时，你将被重定向到一个欢迎页面，似乎要求你使用Facebook凭证进行身份验证，以接入该网络：
- en: '![](assets/c4539b8b-4b1c-40dc-984d-3408030b5397.png)Gathering facebook credentials
    with captive portal'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/c4539b8b-4b1c-40dc-984d-3408030b5397.png)通过捕获门户收集Facebook凭证'
- en: 'Again terminating the previous session, we will now demonstrate the next example,
    by running the following:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次终止上一个会话，我们将通过运行以下命令展示下一个示例：
- en: '[PRE25]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Running this command will give you the ability to show a screen such as this,
    that prompts the user for the WPA password for the network they believe they are
    connected to (as opposed to our rogue network):'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行此命令将使你能够显示这样的屏幕，提示用户输入他们认为自己连接的网络的WPA密码（而不是我们的伪造网络）：
- en: '![](assets/9caf1cdf-8900-4c1d-844e-064b13e75df8.png)Firmware upgrade captive
    portal example'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/9caf1cdf-8900-4c1d-844e-064b13e75df8.png)固件升级捕获门户示例'
- en: 'Finally, terminating this session and launching `wifiphisher` with the following
    command will kick off a new SSID that will not only redirect them to our portal,
    but also give us the ability to convince the user to download the payload of our
    choice, under the guise of a plugin update:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，终止当前会话并使用以下命令启动`wifiphisher`，它将启动一个新的SSID，不仅会将用户重定向到我们的门户，还能让我们有机会诱使用户下载我们选择的有效负载，伪装成插件更新：
- en: '[PRE26]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Unlike the other sessions we initiated, the plugin-update template allows us
    to define a payload to encourage the user to download and install, posing as an
    update for a browser plugin. After being launched, `wifiphisher` will require
    the path to the file you wish to define as the payload. Once you have provided
    that, it will redirect users to a page that looks very much like this:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与我们启动的其他会话不同，插件更新模板允许我们定义一个有效负载，诱使用户下载并安装，伪装成浏览器插件的更新。启动后，`wifiphisher`会要求提供你希望定义为有效负载的文件路径。提供该路径后，它将把用户重定向到一个页面，看起来非常像这样：
- en: '![](assets/5e6abe6f-159c-451e-97aa-5d20f10bfecd.png)Plugin update phishing
    portalSince `wifiphisher` uses configuration files for its templates, you can
    create your own portals as necessary. Review the documentation on the tool''s
    homepage at [https://wifiphisher.org/](https://wifiphisher.org/).'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/5e6abe6f-159c-451e-97aa-5d20f10bfecd.png)插件更新钓鱼门户由于`wifiphisher`使用配置文件作为模板，你可以根据需要创建自己的门户。请查阅该工具主页上的文档：[https://wifiphisher.org/](https://wifiphisher.org/)。'
- en: Using wireless networks to scan internal networks
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用无线网络扫描内部网络
- en: 'Access to a network is the ultimate goal, and the use of wireless networking
    means that this access is likely easier to gain than through remote access/VPN
    or through physical access to a network port. Using the recipes in this section,
    it is highly likely that once you have gained access to the network, you will
    have done so with the credentials of an authorized user. The next question is:
    where can you go from here?'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 网络访问是最终目标，使用无线网络意味着这种访问可能比通过远程访问/VPN或通过物理接入网络端口更容易获得。运用本节中的教程，一旦你获得了网络访问权限，很可能你已经使用了一个授权用户的凭证。下一个问题是：接下来该如何做？
- en: In this recipe, we will use some of the tools that we have learned in preceding
    sections to help identify ways for us to extend the access we have gained so far.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将使用前面章节中学到的一些工具，帮助我们找出扩展当前访问权限的方法。
- en: Getting ready
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: This recipe is built upon the assumption that you have already gained access
    to the target wireless network, and that you have IP connectivity, preferably
    through DHCP.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程假设你已经成功获得了目标无线网络的访问权限，并且具有IP连接，最好是通过DHCP获取。
- en: How to do it...
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Once connected to a wireless network, you can use the following process to
    identify additional targets and vulnerable systems:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦连接到无线网络，你可以使用以下流程来识别其他目标和易受攻击的系统：
- en: 'Based on the IP information you have gained so far, look to see if there are
    any discernible patterns in the network address schemes. An example of this is,
    you have been issued an IP address in one subnet, but infrastructure services
    such as DHCP and DNS reside in different subnets. Those subnets likely contain
    servers containing domain user information such as **Active Directory** (**AD**),
    **Lightweight Directory Access Protocol** (**LDAP**), centralized data repositories
    such as database servers, application servers, and so on. To view the information
    received in DHCP requests do the following:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据目前获得的IP信息，查看网络地址方案中是否有任何明显的模式。例如，您在一个子网中获得了一个IP地址，但基础设施服务，如DHCP和DNS，则位于不同的子网中。这些子网可能包含包含域用户信息的服务器，如**Active
    Directory**（**AD**）、**轻量级目录访问协议**（**LDAP**）、集中式数据存储库，如数据库服务器、应用程序服务器等。要查看DHCP请求中接收到的信息，请执行以下操作：
- en: '[PRE27]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In the preceding case, you can see that in the client network we received a
    DHCP address from the `192.168.56.0/24` network, and DNS and DHCP are located
    in the same network. In many cases, the user network and server network would
    be separate from each other, and that would have given us two possibilities:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上述情况下，您可以看到，在客户端网络中，我们从`192.168.56.0/24`网络获得了一个DHCP地址，而DNS和DHCP位于同一网络中。在许多情况下，用户网络和服务器网络是分开的，这会给我们带来两种可能性：
- en: The user environment is likely less secure, likely a better target to start
    in to gain credentials, and so on.
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户环境可能不太安全，可能是获取凭据等的较好起点。
- en: The server environment is on a separate network and could have access controls
    in place such as firewalls, access control networks, and so on. Those controls
    are likely bound to services used by authenticated users, so credentials are likely
    a better place to start.
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器环境位于单独的网络上，并且可能已设置访问控制，如防火墙、访问控制网络等。这些控制可能与认证用户使用的服务相关，因此凭据可能是更好的起点。
- en: 'From the command line, run `zenmap`. The `zenmap` is a graphical frontend to
    `Nmap`, that makes the gathering and visualization of results easier. After launching
    `zenmap`, enter the following scan options and start the scan. The results should
    look similar to the following screen:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令行中运行`zenmap`。`zenmap`是`Nmap`的图形化前端，能够简化结果的收集和可视化。启动`zenmap`后，输入以下扫描选项并开始扫描。结果应类似于以下屏幕：
- en: '![](assets/64eeb41b-d17a-4ef6-a67b-4060eda5e833.png)Network hosts found with
    zenmap'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/64eeb41b-d17a-4ef6-a67b-4060eda5e833.png)使用zenmap发现的网络主机'
- en: 'Once complete, click on Hosts Viewer to get a sorted, more detailed view of
    the services and applications running on the hosts in this environment. If we
    select `192.168.56.10` on the left, we can see that is it likely a Windows 2008
    domain controller:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击“主机查看器”以获得关于此环境中主机上运行的服务和应用程序的排序、详细视图。如果我们在左侧选择`192.168.56.10`，我们可以看到它很可能是一个Windows
    2008域控制器：
- en: '![](assets/d89aa48b-2611-4958-939a-05a139c43437.png)Windows domain controller
    located with zenmap'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/d89aa48b-2611-4958-939a-05a139c43437.png)使用zenmap定位的Windows域控制器'
- en: 'With a good target located, let''s re-open OpenVAS, the vulnerability scanning
    platform we set up in [Chapter 3,](efecc8fd-4746-4428-9662-854d418bcba2.xhtml) *Vulnerability
    Analysis. *Start the OpenVAS server service from the command line by entering
    the following:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定好目标后，让我们重新打开OpenVAS，这是我们在[第3章](efecc8fd-4746-4428-9662-854d418bcba2.xhtml)中设置的漏洞扫描平台，*漏洞分析*。通过在命令行中输入以下内容来启动OpenVAS服务器服务：
- en: '[PRE28]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Open a browser, navigate to the address of your OpenVAS installation, and kick
    off a new scan task:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器，导航到您的OpenVAS安装地址，并启动一个新的扫描任务：
- en: '![](assets/93509dc7-698e-4c2f-912e-d8602b9529b6.png)New OpenVAS task: Quick
    Scan of 192.168.56.10'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/93509dc7-698e-4c2f-912e-d8602b9529b6.png)新建OpenVAS任务：对192.168.56.10进行快速扫描'
- en: Once complete, review the results to determine if additional steps are necessary.
    For more detailed recipes on using OpenVAS and other vulnerability scanning tools,
    refer to [Chapter 3](efecc8fd-4746-4428-9662-854d418bcba2.xhtml), *Vulnerability
    Analysis*.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，查看结果以确定是否需要进一步的步骤。有关使用OpenVAS和其他漏洞扫描工具的更详细的教程，请参阅[第3章](efecc8fd-4746-4428-9662-854d418bcba2.xhtml)，*漏洞分析*。
