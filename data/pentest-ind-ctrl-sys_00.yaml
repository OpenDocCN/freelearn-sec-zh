- en: '*Chapter 2*: Route the Hardware'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第二章*：路由硬件'
- en: This chapter will take you on the lovely journey of understanding how to connect
    physical **hardware** to virtual infrastructure. Understanding how a machine is
    running **ESXi** can route communications through to local **Programmable Logic
    Controllers** (**PLCs**), **Human Machine Interfaces** (**HMIs**), and other such
    devices. This section will utilize **Koyo Click** software and hardware to start
    with, as the Koyo Click PLC is a very cost-effective choice, and the engineering
    programming software is free to use, unlike other mainstream vendors who require
    you to pay hefty sums of money to license their programming software. Know that
    the principles and methods discussed in this chapter are reflected in those of
    other automation vendors, such as Siemens, Rockwell, Schneider, Omron, Mitsubishi,
    and many others. If getting access to a Koyo Click proves to be difficult, you
    can follow along with a PLC of your choice. Note that you will be required to
    get access to the engineering program software of the vendor that you choose.
    We will be installing the **Click software**, setting up the physical **PLC**,
    and finally, configuring the communication between a *virtual machine* and the
    physical PLC.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将带你踏上理解如何将物理**硬件**连接到虚拟基础设施的精彩旅程。了解一台运行**ESXi**的机器如何将通信路由到本地**可编程逻辑控制器**（**PLC**）、**人机界面**（**HMI**）及其他类似设备。首先，本节将使用**Koyo
    Click**软件和硬件，因为Koyo Click PLC是一个非常具成本效益的选择，而其工程编程软件是免费的，这与其他主流厂商需要支付高额费用来获得编程软件许可证的做法不同。需要注意的是，本章讨论的原理和方法也适用于其他自动化厂商，如西门子、罗克韦尔、施耐德、欧姆龙、三菱等。如果获取Koyo
    Click比较困难，你可以选择你自己的PLC进行学习。请注意，你需要获得所选厂商的工程编程软件。我们将安装**Click软件**，设置物理**PLC**，并最终配置虚拟机与物理PLC之间的通信。
- en: Familiarizing yourself with how industrial technology is programmed will drastically
    increase your success rate in a pentest. Knowing the intricacies of how the software
    reacts, the resources it uses, and the communication method will allow you to
    detect possible vectors of entry going forward.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 熟悉工业技术的编程方式将极大提高你在渗透测试中的成功率。了解软件的反应机制、它所使用的资源以及通信方式将帮助你发现潜在的入口点。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要内容：
- en: Installing the Click software
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Click软件
- en: Setting up Koyo Click
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Koyo Click
- en: Configuring communication
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置通信
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章所需的设备：
- en: 'Koyo Click software, which you can download from here: [https://www.automationdirect.com/support/software-downloads?itemcode=CLICK](https://www.automationdirect.com/support/software-downloads?itemcode=CLICK)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Koyo Click软件，你可以从这里下载：[https://www.automationdirect.com/support/software-downloads?itemcode=CLICK](https://www.automationdirect.com/support/software-downloads?itemcode=CLICK)
- en: 'Koyo Click hardware, which you can find here: [https://www.automationdirect.com/adc/overview/catalog/programmable_controllers/click_series_plcs/](https://www.automationdirect.com/adc/overview/catalog/programmable_controllers/click_series_plcs/)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Koyo Click硬件，你可以在这里找到：[https://www.automationdirect.com/adc/overview/catalog/programmable_controllers/click_series_plcs/](https://www.automationdirect.com/adc/overview/catalog/programmable_controllers/click_series_plcs/)
- en: A Windows 7 Machine, which was covered in the previous chapter
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台Windows 7机器，前一章中已经介绍过
- en: ESXi, as was covered in the previous chapter
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正如前一章所介绍的，ESXi
- en: Installing the Click software
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Click软件
- en: Welcome to the first topic of the chapter. In this section, we will be stepping
    through the installation of the Koyo Click software. This software will let us
    communicate with, and upload and download programs to and from, the Koyo Click
    PLC.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到本章的第一个主题。在本节中，我们将一步步演示如何安装Koyo Click软件。这个软件将帮助我们与Koyo Click PLC进行通信，并上传和下载程序。
- en: I am going to preface this chapter by saying that, once again, this is not a
    sales pitch for Koyo Click or AutomationDirect; it simply is a very flexible,
    versatile, holistic, and cost-effective choice of PLC. Additionally, AutomationDirect
    is a one-stop-shop, whereby you can place an order and obtain everything you need
    to build a complete lab.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我想再次强调，这不是Koyo Click或AutomationDirect的销售宣传；它只是一个非常灵活、多功能、全面且具有成本效益的PLC选择。此外，AutomationDirect是一个一站式商店，你可以在这里下单并获得构建完整实验室所需的一切。
- en: 'With that disclaimer out of the way, let''s navigate over to the AutomationDirect
    website. Please click on the following link: [https://www.automationdirect.com/support/software-downloads?itemcode=CLICK](https://www.automationdirect.com/support/software-downloads?itemcode=CLICK).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，让我们访问 AutomationDirect 网站。请点击以下链接：[https://www.automationdirect.com/support/software-downloads?itemcode=CLICK](https://www.automationdirect.com/support/software-downloads?itemcode=CLICK)。
- en: 'We are going to download the software for programming a Koyo Click from AutomationDirect.
    Once you have navigated to the preceding link, this will land you on the following
    screen:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将下载来自 AutomationDirect 的 Koyo Click 编程软件。一旦你访问了上述链接，你将看到以下界面：
- en: '![Figure 2.1 – Click software download'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.1 – 点击软件下载'
- en: '](image/Figure_2.01_B16321.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.01_B16321.jpg)'
- en: Figure 2.1 – Click software download
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 点击软件下载
- en: 'Next, you will proceed by clicking the green **DOWNLOAD** button, and this
    will then cast a notification update and require an **Email Address**, as shown
    in *Figure 2.2*, followed up by a *confirmation of the email address* to proceed
    further:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击绿色的**下载**按钮，系统会弹出通知并要求输入**电子邮件地址**，如*图 2.2*所示，随后需要进行*电子邮件地址确认*以继续操作：
- en: '![Figure 2.2 – Email confirmation'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.2 – 电子邮件确认'
- en: '](image/Figure_2.02_B16321.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.02_B16321.jpg)'
- en: Figure 2.2 – Email confirmation
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 电子邮件确认
- en: Once your email address is confirmed, the software starts to download. Now you
    should have the software downloaded. You will have to transfer it to your **Windows
    7** virtual machine that we created in [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013),
    *Using Virtualization*. There are many ways of doing this – building a second
    interface on the VM and placing it in the VM network segment on the **ESXi hypervisor**
    is one method that can be used. There are multiple different file transfer protocols/tools
    for moving this file. I simply default to what is the easiest option and this
    has become second nature to me. During assessments, I have performed many file
    drops and reverse shell pushes on boxes/machines by simply spinning up a **Python
    3** web server and having the **Windows 7** machine navigate to the file and download
    it.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的电子邮件地址确认无误，软件开始下载。现在你应该已经下载好了软件。你需要将其传输到我们在[*第 1 章*](B16321_01_Epub_AM.xhtml#_idTextAnchor013)中创建的**Windows
    7** 虚拟机上，*使用虚拟化*。有很多方法可以做到这一点——在虚拟机上建立第二个接口并将其放置在**ESXi 虚拟化主机**的网络段中是一种可行的方式。传输文件有多种不同的协议/工具。我通常选择最简单的方式，这已经成为我的第二天性。在评估过程中，我通过简单地启动一个**Python
    3** 网络服务器，并让**Windows 7** 机器访问该文件并下载，完成了许多文件传输和反向 shell 推送操作。
- en: 'Here is the command for initiating the Python 3 web server:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是启动 Python 3 网络服务器的命令：
- en: '![Figure 2.3 – Initiating the python3 web server'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.3 – 启动 python3 网络服务器'
- en: '](image/Figure_2.03_B16321.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.03_B16321.jpg)'
- en: Figure 2.3 – Initiating the python3 web server
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 启动 python3 网络服务器
- en: 'When the client connects, you can see an HTTP 200 OK success status response
    code as seen here:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户端连接时，你可以看到 HTTP 200 OK 成功状态响应代码，如下所示：
- en: '![Figure 2.4 – Response code for success status'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.4 – 成功状态的响应代码'
- en: '](image/Figure_2.04_B16321.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.04_B16321.jpg)'
- en: Figure 2.4 – Response code for success status
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 成功状态的响应代码
- en: 'As you can see, the Windows 7 machine connects and downloads the software file.
    The following screenshot shows the **Directory listing** hosted on the local server:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，Windows 7 机器已连接并下载了软件文件。下图显示了本地服务器上托管的**目录列表**：
- en: '![Figure 2.5 – Python HTTP server directory listing'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.5 – Python HTTP 服务器目录列表'
- en: '](image/Figure_2.05_B16321.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.05_B16321.jpg)'
- en: Figure 2.5 – Python HTTP server directory listing
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – Python HTTP 服务器目录列表
- en: I have touched on this because it would be a good habit to build moving forward
    as it will come in handy during future **pentesting** engagements when you need
    to move files between your host machine and the box that you are trying to crack.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我提到这个是因为将来建立这种习惯会非常有用，它将在未来的**渗透测试**工作中派上用场，特别是当你需要在主机和你试图破解的机器之间移动文件时。
- en: 'This screenshot shows the **CD Image** that can be extracted to begin the installation
    process:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 该截图展示了可以提取的**CD 镜像**，以启动安装过程：
- en: '![Figure 2.6 – Koyo Click CD Image'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.6 – Koyo Click CD 镜像'
- en: '](image/Figure_2.06_B16321.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.06_B16321.jpg)'
- en: Figure 2.6 – Koyo Click CD Image
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – Koyo Click CD 镜像
- en: 'Now that we have the software downloaded to our Windows 7 **Virtual Machine**
    (**VM**), we want to extract the **CD Image** and run the **Install** option that
    follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将软件下载到 Windows 7 **虚拟机**（**VM**）上，我们需要提取**光盘镜像**并运行随后的**安装**选项：
- en: '![Figure 2.7 – Install Click software'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.7 – 安装点击软件'
- en: '](image/Figure_2.07_B16321.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.07_B16321.jpg)'
- en: Figure 2.7 – Install Click software
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – 安装点击软件
- en: 'This will then trigger a **User Account Control** (**UAC**) dialog box, shown
    in *Figure 2.8*, that we will want to click the **Yes** button on. After clicking
    **Yes**, the software will generate a dialog box allowing us to install the **CLICK
    Programming Software**:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这时会弹出一个**用户帐户控制**（**UAC**）对话框，如*图 2.8*所示，我们需要点击**是**按钮。点击**是**后，软件将生成一个对话框，允许我们安装**CLICK
    编程软件**：
- en: '![Figure 2.8 – Accept UAC install validation'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.8 – 接受 UAC 安装验证'
- en: '](image/Figure_2.08_B16321.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.08_B16321.jpg)'
- en: Figure 2.8 – Accept UAC install validation
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – 接受 UAC 安装验证
- en: 'The next series of screenshots will walk you through installing the Click programming
    software. We will click the **Install Software** button first, as seen here:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的截图将引导你完成安装点击编程软件。我们首先点击**安装软件**按钮，如下图所示：
- en: '![Figure 2.9 – Click programming software'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.9 – 点击编程软件'
- en: '](image/Figure_2.09_B16321.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.09_B16321.jpg)'
- en: Figure 2.9 – Click programming software
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9 – 点击编程软件
- en: 'Now you should see the page shown in *Figure 2.10.* Click the **Next >** button
    to proceed with the **InstallShield Wizard**, which will trigger a dialog box
    indicating that you should disable anti-virus software on your Windows 7 machine
    as it will cause issues with installing the programming software correctly and
    completely:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该能看到如*图 2.10*所示的页面。点击**下一步 >**按钮继续执行**InstallShield 向导**，此时会弹出一个对话框提示你在
    Windows 7 机器上禁用防病毒软件，因为它会导致编程软件无法正确和完全安装：
- en: '![Figure 2.10 – Click InstallShield'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.10 – 点击 InstallShield'
- en: '](image/Figure_2.10_B16321.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.10_B16321.jpg)'
- en: Figure 2.10 – Click InstallShield
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10 – 点击 InstallShield
- en: 'To enable this, you would have to simply click **OK** once you know that the
    anti-virus software is not on, and technically it should not be because we never
    installed any in [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013), *Using
    Virtualization*:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用此功能，只需点击**确定**，确认防病毒软件未开启，理论上它不应该开启，因为我们在[*第一章*](B16321_01_Epub_AM.xhtml#_idTextAnchor013)中并未安装任何防病毒软件，*使用虚拟化*：
- en: '![Figure 2.11 – Anti-virus check'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.11 – 防病毒检查'
- en: '](image/Figure_2.11_B16321.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.11_B16321.jpg)'
- en: Figure 2.11 – Anti-virus check
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11 – 防病毒检查
- en: 'In the next screenshot, we want to accept the **License Agreement** and press
    **Next >**:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个截图中，我们要接受**许可协议**并点击**下一步 >**：
- en: '![Figure 2.12 – License Agreement'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.12 – 许可协议'
- en: '](image/Figure_2.12_B16321.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.12_B16321.jpg)'
- en: Figure 2.12 – License Agreement
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – 许可协议
- en: 'This will result in the page shown in *Figure 2.13*. In the boxes, fill out
    your **User Name** and **Company Name**. From *Figure 2.13*, you can tell that
    I''ve used my name, **Paul Smith**, and **ICS Lab** as the company name. This
    is an example of what to do but you would need to put in your own information:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致出现如*图 2.13*所示的页面。在框中填写**用户名**和**公司名称**。从*图 2.13*中你可以看到，我使用了我的名字**保罗·史密斯**和**ICS
    Lab**作为公司名称。这是一个示例，你需要填写你自己的信息：
- en: '![Figure 2.13 – Configure Customer Information'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.13 – 配置客户信息'
- en: '](image/Figure_2.13_B16321.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.13_B16321.jpg)'
- en: Figure 2.13 – Configure Customer Information
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – 配置客户信息
- en: 'Now the following page will load:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将加载以下页面：
- en: '![Figure 2.14 – Choose Destination Location'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.14 – 选择目标位置'
- en: '](image/Figure_2.14_B16321.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.14_B16321.jpg)'
- en: Figure 2.14 – Choose Destination Location
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.14 – 选择目标位置
- en: 'On this page, you will choose the destination of your software installation.
    I personally just kept the default folder structure as you can see in *Figure
    2.14* to the left of the **Change** button. Then, you will click on the **Next
    >** button, which then generates another dialog window to click through as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个页面上，你将选择软件安装的目标位置。我个人保持了默认文件夹结构，如*图 2.14*所示，在**更改**按钮的左侧。然后，点击**下一步 >**按钮，接着会生成另一个对话框，让你继续点击如下：
- en: '![Figure 2.15 – Install the program'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.15 – 安装程序'
- en: '](image/Figure_2.15_B16321.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.15_B16321.jpg)'
- en: Figure 2.15 – Install the program
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.15 – 安装程序
- en: 'Once the program is installed, InstallShield will ask you if you want to **Create
    a Desktop Icon**, shown in *Figure 2.16*. I chose this option as it will be easy
    to find going forward:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 安装程序完成后，InstallShield 会询问您是否要**创建桌面图标**，如*图 2.16*所示。我选择了此选项，因为以后更容易找到：
- en: '![Figure 2.16 – Create a Desktop Icon'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.16 – 创建桌面图标'
- en: '](image/Figure_2.16_B16321.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.16_B16321.jpg)'
- en: Figure 2.16 – Create a Desktop Icon
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.16 – 创建桌面图标
- en: 'Finally, we are at the end of the installation, and it shouldn''t have been
    too painful. Click on **Finish**, as seen in *Figure 2.17*, and then let''s launch
    the software:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们完成了安装，过程应该不算太痛苦。点击**完成**，如*图 2.17*所示，然后启动软件：
- en: '![Figure 2.17 – Finish the installation'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.17 – 完成安装'
- en: '](image/Figure_2.17_B16321.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.17_B16321.jpg)'
- en: Figure 2.17 – Finish the installation
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.17 – 完成安装
- en: 'Launch the **CLICK Programming Software** icon by double-clicking. It should
    be visible on your desktop as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 双击**CLICK 编程软件**图标启动程序。它应该会像下面这样显示在您的桌面上：
- en: '![Figure 2.18 – CLICK Programming Software icon'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.18 – CLICK 编程软件图标'
- en: '](image/Figure_2.18_B16321.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.18_B16321.jpg)'
- en: Figure 2.18 – CLICK Programming Software icon
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.18 – CLICK 编程软件图标
- en: 'This will launch the following dialog, allowing us to **Start a new project**,
    **Open an existing project**, or **Connect to PLC**:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动以下对话框，允许我们**开始一个新项目**、**打开现有项目**或**连接到 PLC**：
- en: '![Figure 2.19 – Start a new project'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.19 – 开始一个新项目'
- en: '](image/Figure_2.19_B16321.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.19_B16321.jpg)'
- en: Figure 2.19 – Start a new project
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.19 – 开始一个新项目
- en: Once we are here, we are all set up and ready to go.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们到达这里，一切都已设置完毕，准备就绪。
- en: 'Now, I wouldn''t be doing you any justice if I didn''t point out the obvious,
    and maybe you are asking yourself the same question: **Where is the hash?** This
    is a prime example of what a **watering hole attack** looks like. A watering hole
    attack is an exploit whereby an attacker has poisoned a software package or update
    and has published it to a website where users of the equipment or software come
    to download this corrupted file. This is very similar to what occurred with the
    **SolarWinds** attack, which we touched on briefly in [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013),
    *Using Virtualization*. This type of attack can have a very deep and wide fallout
    if a well-used piece of technology is compromised.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我不指出明显的问题，那就对不起你了，也许你正问自己同样的问题：**哈希在哪里？** 这是**水坑攻击**的典型例子。水坑攻击是一种攻击手段，攻击者通过毒害软件包或更新，并将其发布到一个网站上，供设备或软件的用户下载这个已损坏的文件。这与我们在[**第
    1 章**](B16321_01_Epub_AM.xhtml#_idTextAnchor013)中简要提到的**SolarWinds**攻击非常相似，*使用虚拟化*。如果一个广泛使用的技术被入侵，这种攻击可能带来非常深远且广泛的影响。
- en: Therefore, going forward, be very wary of where you get software for your **Industrial
    Control System** (**ICS**) equipment and what control impact it has on your SCADA/ICS
    system. Now we will move on to setting up the hardware, but we will return to
    the software shortly.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，今后，请特别留意获取**工业控制系统**（**ICS**）设备的软件来源以及它对您的 SCADA/ICS 系统可能产生的控制影响。现在我们将继续进行硬件设置，但稍后我们将回到软件部分。
- en: Setting up Koyo Click
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Koyo Click
- en: I have a number of these different units, but I will be focusing on the model
    **C0-10ARE-D**, which is the Ethernet Basic PLC Unit. Once again, if you don't
    have access to a Koyo Click, you can use any other type or model of PLC and engineering
    software to follow along. The choice to use Koyo comes from the fact that it is
    one of the few controllers that I have spare that isn't wrapped up in a project.
    More importantly, however, this device is specifically used for the Ethernet communication
    port that comes with this PLC and the engineering software is free. Additionally,
    it leverages the discrete I/O to energize and de-energize coils and will help
    establish a correlation between real-world processes and equipment, and the equipment
    we will be simulating in our **ICS** lab.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我有几种不同型号的设备，但我将重点介绍**C0-10ARE-D**型号，这是以太网基础 PLC 单元。如果您没有 Koyo Click，也可以使用任何其他类型或型号的
    PLC 和工程软件来进行操作。选择使用 Koyo 是因为它是我手头有的少数几台备用控制器之一，而且它没有被用于项目中。然而，更重要的是，这台设备专门用于该
    PLC 的以太网通信端口，并且其工程软件是免费的。此外，它利用离散 I/O 来驱动和断开线圈的电流，并将有助于在我们**ICS**实验室中建立实际过程与设备之间的关联。
- en: 'By default, the **Koyo Click** comes with two native protocols:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，**Koyo Click** 配备了两种本地协议：
- en: Modbus
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Modbus
- en: Ethernet/IP
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以太网/IP
- en: If you remember from the previous chapter, the tools that we installed were
    focused on these protocols to allow us to interact with equipment using the native
    communication paths. Now, another detail about the **Koyo Click** that is enticing
    is the *design* and *expandable nature* of the Click's modularization. The modularization
    allows you to add on different control capabilities, from analog to digital, to
    relay control, and specialty modules. You can stack them together and expand the
    control range to accommodate almost any project with an endless amount of I/O.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还记得上一章，我们安装的工具专注于这些协议，以便我们通过本地通信路径与设备进行交互。现在，关于**Koyo Click**的另一个吸引人的特点是*设计*和*可扩展性*，Click的模块化使其能够添加不同的控制功能，从模拟到数字，再到继电器控制和专用模块。你可以将它们堆叠在一起，扩展控制范围，适应几乎任何项目，并且拥有无限的I/O。
- en: 'The following link will take you to *AutomationDirect* and the **CLICK PLC**
    equipment: [https://www.automationdirect.com/adc/overview/catalog/programmable_controllers/click_series_plcs/](https://www.automationdirect.com/adc/overview/catalog/programmable_controllers/click_series_plcs/).'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接将带你到*AutomationDirect*和**CLICK PLC**设备：[https://www.automationdirect.com/adc/overview/catalog/programmable_controllers/click_series_plcs/](https://www.automationdirect.com/adc/overview/catalog/programmable_controllers/click_series_plcs/)。
- en: Now it is possible to run your own power supply to the PLC, however, for the
    price of the C0-01AC, it is just as easy to package them together. The reason
    why I am suggesting 01AC over the 00AC power supply is that you would be future-proofing
    your lab, and 01AC has 1.3 A, which allows it to support and drive a fully expanded
    controller.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以为PLC运行自己的电源，但是考虑到C0-01AC的价格，将它们打包在一起同样方便。我建议选择01AC而不是00AC电源的原因是，你可以为实验室做好未来规划，而01AC具有1.3A的电流，能够支持并驱动完全扩展的控制器。
- en: 'This is an image of the *C0-01AC* power supply:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这是*C0-01AC*电源的图片：
- en: '![Figure 2.20 – C0-01AC power supply'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.20 – C0-01AC电源'
- en: '](image/Figure_2.20_B16321.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.20_B16321.jpg)'
- en: Figure 2.20 – C0-01AC power supply
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.20 – C0-01AC电源
- en: 'This is an image of the Koyo Click model **C0-10ARE-D** that I will be using
    in the lab:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我将在实验室使用的Koyo Click型号**C0-10ARE-D**的图片：
- en: '![Figure 2.21 – Controller'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.21 – 控制器'
- en: '](image/Figure_2.21_B16321.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.21_B16321.jpg)'
- en: Figure 2.21 – Controller
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.21 – 控制器
- en: Once you have the power supply and PLC in your lab, then make sure to wire up
    the terminals from your wall to your power supply and from your power supply to
    the bottom of your controller.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在实验室里有了电源和PLC，确保将墙壁上的端子接到电源上，再将电源连接到控制器的底部。
- en: You will see the terminals required to supply power to the controller. Now that
    we have power to the controller, go ahead and connect an Ethernet cable linking
    the PLC to your computer. This can be done via a direct connection or through
    a switch.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到为控制器提供电源所需的端子。现在我们已经为控制器提供了电源，接下来连接一根以太网线，将PLC与计算机连接起来。这可以通过直接连接或通过交换机完成。
- en: 'The next step will be to open the CLICK programming software and select **Connect
    to PLC**, and this should bring up a **Windows Security Alert** dialog box asking
    you to allow this connection type on private networks and on public networks.
    Since this is a lab, and isolated, I have chosen to enable both, as seen in the
    following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是打开CLICK编程软件，选择**连接到PLC**，这时会弹出一个**Windows安全警告**对话框，询问你是否允许这种连接类型在私人网络和公共网络上进行。由于这是一个实验室并且是隔离的，我选择启用这两个选项，如下截图所示：
- en: '![Figure 2.22 – Firewall access'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.22 – 防火墙访问'
- en: '](image/Figure_2.22_B16321.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.22_B16321.jpg)'
- en: Figure 2.22 – Firewall access
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.22 – 防火墙访问
- en: 'Once you have clicked on **Allow access** at the bottom of the screen, you
    will be presented with a dialog window allowing you to connect to a **CLICK PLC**.
    From here, you have to select the **Port Type**, which has three options:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你点击了屏幕底部的**允许访问**，将会弹出一个对话框，允许你连接到**CLICK PLC**。在这里，你需要选择**端口类型**，有三种选择：
- en: '**USB**'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**USB**'
- en: '**Serial**'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**串行**'
- en: '**Ethernet**'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**以太网**'
- en: 'We will select **Ethernet** of course, and then proceed to our next option,
    which is selecting the specific **Network Adapter**. Depending on your system,
    there could be any number of adapters. Select the **Network Adapter** that has
    a path to the **CLICK PLC**. If a path exists between the PLC and the Windows
    7 virtual machine, you should see the PLC listed with the **IP Address**, **Subnet
    Mask**, **Part Number**, **Firmware**, **Mode**, **Status**, and **MAC Address**,
    as shown in the following screenshot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们当然会选择**以太网**，然后继续选择下一个选项，即选择特定的**网络适配器**。根据你的系统，可能会有多个适配器。选择一个与**CLICK PLC**有连接路径的**网络适配器**。如果在PLC和Windows
    7虚拟机之间存在路径，你应该能看到PLC的**IP地址**、**子网掩码**、**部件号**、**固件**、**模式**、**状态**和**MAC地址**，如以下截图所示：
- en: '![Figure 2.23 – Connect to PLC'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.23 – 连接到PLC'
- en: '](image/Figure_2.23_B16321.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.23_B16321.jpg)'
- en: Figure 2.23 – Connect to PLC
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.23 – 连接到PLC
- en: 'From here, you can select the PLC and click on the **Connect** button. It will
    display another **Windows Security Alert**, but this time it is for the **Communication
    Server** and allowing it to communicate on private or public networks. You can
    see what this looks like in the following screenshot:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，你可以选择PLC并点击**连接**按钮。这时会显示另一个**Windows安全警报**，但这次是针对**通信服务器**，并允许它在私有或公共网络上进行通信。你可以在以下截图中看到它的样子：
- en: '![Figure 2.24 – Allow Firewall Access'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.24 – 允许防火墙访问'
- en: '](image/Figure_2.24_B16321.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.24_B16321.jpg)'
- en: Figure 2.24 – Allow Firewall Access
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.24 – 允许防火墙访问
- en: 'Click on **Allow access** at the bottom of your screen. Once this occurs, you
    should get a networking mismatch error as shown in the following screenshot, because
    we still need to configure the network connectivity through **ESXi** to the PLC
    and place the PLC in the correct network:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 点击屏幕底部的**允许访问**。一旦点击，你应该会看到一个网络不匹配的错误，如下图所示，因为我们仍然需要通过**ESXi**配置到PLC的网络连接，并将PLC置于正确的网络中：
- en: '![Figure 2.25 – Subnet Matching Error'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.25 – 子网匹配错误'
- en: '](image/Figure_2.25_B16321.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.25_B16321.jpg)'
- en: Figure 2.25 – Subnet Matching Error
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.25 – 子网匹配错误
- en: This leads us onto the next section of the chapter, where we will configure
    the hardware to communicate and sit in the correct subnet.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这引导我们进入本章的下一部分，在这一部分中，我们将配置硬件以进行通信，并确保位于正确的子网中。
- en: Configuring communication
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置通信
- en: Now we know that there is a path through to the physical PLC, however, we are
    not able to communicate with it. The solution to this is that we will have to
    adjust the IP address of the Windows 7 VM to align with the subnet that the PLC
    is in. This will allow us to connect directly to the PLC and configure the address
    to align with the subnet that we established for the virtual PLC developed in
    the previous chapter.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道有一条路径通向物理PLC，但我们无法与之通信。解决方案是，我们需要调整Windows 7虚拟机的IP地址，使其与PLC所在的子网对齐。这将允许我们直接连接到PLC并将地址配置为与上一章中为虚拟PLC设定的子网对齐。
- en: 'By looking at *Figure 2.26*, we want to make sure that we provide Windows 7
    with an **IP** address that can ping the Koyo CLICK. I have decided to arbitrarily
    choose **192.168.0.20** because my CLICK has a default address of **192.168.0.10**,
    however, depending on the default address that your Koyo CLICK may have, you will
    need to adjust this appropriately:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看*图2.26*，我们需要确保为Windows 7提供一个可以ping通Koyo CLICK的**IP地址**。我决定任意选择**192.168.0.20**，因为我的CLICK的默认地址是**192.168.0.10**，然而根据你的Koyo
    CLICK的默认地址，你需要适当地调整它：
- en: '![Figure 2.26 – Configure Windows interface'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.26 – 配置Windows界面'
- en: '](image/Figure_2.26_B16321.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.26_B16321.jpg)'
- en: Figure 2.26 – Configure Windows interface
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.26 – 配置Windows界面
- en: 'Once you have set your IP address, you can launch the CLICK programming software
    and click on **Connect to PLC**, then select the PLC that you see. If everything
    is configured correctly, you should see a page as shown in *Figure 2.27*. This
    step now allows you to read the pre-existing project inside the PLC or simply
    skip over reading it:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置了IP地址，你可以启动CLICK编程软件并点击**连接到PLC**，然后选择你看到的PLC。如果一切配置正确，你应该会看到如*图2.27*所示的页面。此步骤将允许你读取PLC中的现有项目，或直接跳过读取：
- en: '![Figure 2.27 – Pre-existing project inside the PLC'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.27 – PLC中的预先存在的项目'
- en: '](image/Figure_2.27_B16321.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.27_B16321.jpg)'
- en: Figure 2.27 – Pre-existing project inside the PLC
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.27 – PLC中的预先存在的项目
- en: Tip/important note
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 提示/重要说明
- en: It is good practice to always read the project from the PLC. There is a good
    chance that no one has a backup of the current project file running, and this
    one-time connection might be the only chance to get a copy.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 始终从PLC读取项目是一个良好的做法。很有可能没有人备份当前运行的项目文件，而这次连接可能是唯一获取副本的机会。
- en: You don't have to be L337 to cause major disruption if an attacker has a foothold
    at this level whereby they can access the PLC and read/write project files. They
    simply need to write a blank project file to the PLC and now the process grinds
    to a halt. If they don't have any project backups locally, this could mean millions
    of dollars in losses because of downtime. It is a common practice that large companies
    place the responsibility and management of these backups on the third-party engineering
    firm they have contracted for the operation and maintenance of the equipment.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击者在此级别取得立足点，能够访问PLC并读取/写入项目文件，他们不必是L337高手也能造成重大破坏。他们只需要将一个空白项目文件写入PLC，过程就会停止。如果他们没有本地备份，这可能意味着数百万美元的损失，因为停机时间。大公司通常会将这些备份的责任和管理交给他们外包的第三方工程公司，这些公司负责设备的运行和维护。
- en: 'In the following screenshot, you can see there are two options that are presented
    to us. As stated previously we will select **Read the project from the PLC**:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在下方的截图中，你可以看到有两个选项呈现给我们。如前所述，我们将选择**从PLC读取项目**：
- en: '![Figure 2.28 – Read the project file'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.28 – 读取项目文件'
- en: '](image/Figure_2.28_B16321.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.28_B16321.jpg)'
- en: Figure 2.28 – Read the project file
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.28 – 读取项目文件
- en: 'Now you should have a blank project sitting in front of you. We are going to
    go and change the PLC address information to align with our design from [*Chapter
    1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013), *Using Virtualization*. You will
    need to click **Setup** and then select **Com Port Setup** as shown in the following
    screenshot:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该看到一个空白项目摆在你面前。我们将去更改PLC地址信息，以便与我们在[*第1章*](B16321_01_Epub_AM.xhtml#_idTextAnchor013)中提到的设计相对接，*使用虚拟化*。你需要点击**设置**，然后选择**通信端口设置**，如以下截图所示：
- en: '![Figure 2.29 – Com Port Setup'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.29 – 通信端口设置'
- en: '](image/Figure_2.29_B16321.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.29_B16321.jpg)'
- en: Figure 2.29 – Com Port Setup
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.29 – 通信端口设置
- en: 'This will then present you with the layout of the CLICK PLC and let you choose
    the setup of the two available ports. Proceed by selecting the **Port 1** setup,
    which will be the Ethernet port as shown in the following screenshot:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这将向你展示CLICK PLC的布局，并让你选择两个可用端口的设置。继续选择**端口1**设置，这将是以太网端口，如以下截图所示：
- en: '![Figure 2.30 – Koyo Click COM Port Setup'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.30 – Koyo Click COM 端口设置'
- en: '](image/Figure_2.30_B16321.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.30_B16321.jpg)'
- en: Figure 2.30 – Koyo Click COM Port Setup
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.30 – Koyo Click COM 端口设置
- en: 'From here, you can see two options as shown in the following screenshot:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，你可以看到如以下截图所示的两个选项：
- en: '**Use default fixed address**'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用默认固定地址**'
- en: '**Set manually:**'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**手动设置：**'
- en: '![Figure 2.31 – Com Port Setup Details'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.31 – 通信端口设置详情'
- en: '](image/Figure_2.31_B16321.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.31_B16321.jpg)'
- en: Figure 2.31 – Com Port Setup Details
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.31 – 通信端口设置详情
- en: We are going to set the information manually, so select the **Set manually**
    option as you can see in *Figure 2.32*.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将手动设置这些信息，所以选择**手动设置**选项，如*图 2.32*所示。
- en: 'This will open **IP Address**, **Subnet Mask**, and **Default Gateway**:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开**IP地址**、**子网掩码**和**默认网关**：
- en: '![Figure 2.32 – Set the IP address'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.32 – 设置IP地址'
- en: '](image/Figure_2.32_B16321.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.32_B16321.jpg)'
- en: Figure 2.32 – Set the IP address
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.32 – 设置IP地址
- en: 'As a friendly reminder from [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013),
    *Using Virtualization*, we know that our virtual PLC resides inside **Level 1:
    Process**, as seen in the following table:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[*第1章*](B16321_01_Epub_AM.xhtml#_idTextAnchor013)中提到的*使用虚拟化*，我们知道我们的虚拟PLC位于**第1级：过程**中，正如以下表格所示：
- en: '![](image/Figure_2_Table_1_B16321.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](image/Figure_2_Table_1_B16321.jpg)'
- en: Next, we will pre-assign IP addresses to the virtual machines that we have built
    out.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将为我们构建的虚拟机预先分配IP地址。
- en: 'We will assign the following IP addresses:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分配以下IP地址：
- en: '**PLC**: **192.168.1.10**'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PLC**：**192.168.1.10**'
- en: '**SCADA**: **192.168.2.10**'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SCADA**：**192.168.2.10**'
- en: '**Workstation**: **192.168.3.10**'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作站**：**192.168.3.10**'
- en: '**Kali**: **172.16.0.1**'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kali**：**172.16.0.1**'
- en: 'We are going to set our physical PLC to reside in the same subnet, as follows:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将设置物理PLC与虚拟PLC在同一子网中，设置如下：
- en: '**CLICK**: **192.168.1.20**'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CLICK**：**192.168.1.20**'
- en: '**Set IP Address**: **192.168.1.20**'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置IP地址**：**192.168.1.20**'
- en: '**Set Mask**: **255.255.0.0**'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置子网掩码**：**255.255.0.0**'
- en: '**Set Gateway**: **192.168.1.1**'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置网关**：**192.168.1.1**'
- en: 'Now, to commit your changes, you need to write the project to the PLC, navigate
    to the PLC menu, and select **Write Project into PLC…** as shown in the following
    screenshot:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要提交更改，你需要将项目写入 PLC，导航到 PLC 菜单，选择**写入项目到 PLC...**，如下图所示：
- en: '![Figure 2.33 – Write Project into PLC'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.33 – 写入项目到 PLC'
- en: '](image/Figure_2.33_B16321.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.33_B16321.jpg)'
- en: Figure 2.33 – Write Project into PLC
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.33 – 写入项目到 PLC
- en: 'Now if you followed along, the programming software should throw an error that
    looks like this:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你跟着操作，编程软件应该会抛出一个像这样的错误：
- en: '![Figure 2.34 – Syntax error'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.34 – 语法错误'
- en: '](image/Figure_2.34_B16321.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.34_B16321.jpg)'
- en: Figure 2.34 – Syntax error
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.34 – 语法错误
- en: 'If you look at the output window, you should see a helpful hint, which is **No
    unconditional END instruction in the Main Program** as seen here:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看输出窗口，你应该会看到一个有用的提示，内容是**主程序中没有无条件的 END 指令**，如下所示：
- en: '![Figure 2.35 – Debug window'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.35 – 调试窗口'
- en: '](image/Figure_2.35_B16321.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.35_B16321.jpg)'
- en: Figure 2.35 – Debug window
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.35 – 调试窗口
- en: 'If for some reason, you are missing the output window, navigate to **View**
    | **Window** | **Output** to turn it on as demonstrated in the following screenshot:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出于某些原因，你没有看到输出窗口，请导航到**视图** | **窗口** | **输出**来开启它，以下截图演示了这一点：
- en: '![Figure 2.36 – View selection'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.36 – 视图选择'
- en: '](image/Figure_2.36_B16321.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.36_B16321.jpg)'
- en: Figure 2.36 – View selection
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.36 – 视图选择
- en: 'From here, we need to add an *unconditional end* to one of our rungs. Look
    under **Instruction List** and scroll until you find the **End** function as shown
    here:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们需要向某个梯级添加一个*无条件结束*。查看**指令列表**，滚动直到你找到**End**功能，如下所示：
- en: '![Figure 2.37 – Instruction List'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.37 – 指令列表'
- en: '](image/Figure_2.37_B16321.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.37_B16321.jpg)'
- en: Figure 2.37 – Instruction List
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.37 – 指令列表
- en: 'Next, drag the **End** function to one of the **( NOP )** outputs as shown
    here:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将**End**功能拖到其中一个**( NOP )**输出位置，如下所示：
- en: '![Figure 2.38 – Ladder logic'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.38 – 梯形图'
- en: '](image/Figure_2.38_B16321.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.38_B16321.jpg)'
- en: Figure 2.38 – Ladder logic
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.38 – 梯形图
- en: 'You should see that the **END** function replaces **( NOP )** as the output:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到**END**功能替换了**( NOP )**作为输出：
- en: '![Figure 2.39 – Instruction replacement'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.39 – 指令替换'
- en: '](image/Figure_2.39_B16321.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.39_B16321.jpg)'
- en: Figure 2.39 – Instruction replacement
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.39 – 指令替换
- en: 'Now, let''s return to writing the project to the PLC, which as a refresher
    is under the **PLC** menu item. Now our project should compile and present us
    with a dialog box showing us our changes that we made to **Port 1**. Click the
    button at the bottom of the newly changed Port1 configuration, which is labeled
    **Use This Setup** as shown here:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们返回到写入项目到 PLC，回顾一下，这个选项在**PLC**菜单项下。现在我们的项目应该可以编译并显示一个对话框，展示我们对**端口 1**所做的更改。点击新更改的
    Port1 配置底部的按钮，按钮上标有**使用此设置**，如下所示：
- en: '![Figure 2.40 – Set project details'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.40 – 设置项目详情'
- en: '](image/Figure_2.40_B16321.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.40_B16321.jpg)'
- en: Figure 2.40 – Set project details
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.40 – 设置项目详情
- en: 'Once it is clicked, this will show us an error indicating that the communication
    will be lost between the Windows 7 VM and the CLICK as shown in the following
    screenshot:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击，它会显示一个错误，指出 Windows 7 虚拟机与 CLICK 之间的通信将丢失，以下截图展示了这一点：
- en: '![Figure 2.41 – Confirm update'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.41 – 确认更新'
- en: '](image/Figure_2.41_B16321.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.41_B16321.jpg)'
- en: Figure 2.41 – Confirm update
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.41 – 确认更新
- en: 'Click **OK** and proceed to the **Write Project into PLC** screen as shown
    here:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**确定**，并继续到**写入项目到 PLC**界面，如下所示：
- en: '![Figure 2.42 – Write project details'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.42 – 写入项目详情'
- en: '](image/Figure_2.42_B16321.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.42_B16321.jpg)'
- en: Figure 2.42 – Write project details
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.42 – 写入项目详情
- en: 'Here, we are prompted with the final check before pushing the changes to the
    PLC. If you have no errors, click **OK** and once everything is completed you
    will be presented with a **Transfer completed** dialog box as follows:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们会被提示进行最终检查，在将更改推送到 PLC 之前。如果没有错误，点击**确定**，完成后你将看到一个**传输完成**的对话框，如下所示：
- en: '![Figure 2.43 - Transfer completed'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.43 - 传输完成'
- en: '](image/Figure_2.43_B16321.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.43_B16321.jpg)'
- en: Figure 2.43 - Transfer completed
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.43 - 传输完成
- en: 'Now you can see that the IP address has changed, so click on the **Connect**
    button as shown in *Figure 2.44*, and you should get a timeout error. This is
    OK as we moved subnets:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到 IP 地址已经改变，所以点击 *Figure 2.44* 中显示的 **连接** 按钮，你应该会收到超时错误。这没关系，因为我们移动了子网：
- en: '![Figure 2.44 – PLC Connect'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.44 – PLC 连接'
- en: '](image/Figure_2.44_B16321.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.44_B16321.jpg)'
- en: Figure 2.44 – PLC Connect
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.44 – PLC 连接
- en: 'Now if you remember back to our ESXi network architecture, you will notice
    that **No physical adapters** has been set, as seen in *Figure 2.45*. This means
    that the virtual PLC and the physical PLC have no means of communication:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你回忆起我们的 ESXi 网络架构，你会注意到 **未设置物理适配器**，如 *Figure 2.45* 所示。这意味着虚拟 PLC 和物理
    PLC 之间无法通信：
- en: '![Figure 2.45 – vSwitch topology'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.45 – vSwitch 拓扑结构'
- en: '](image/Figure_2.45_B16321.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.45_B16321.jpg)'
- en: Figure 2.45 – vSwitch topology
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.45 – vSwitch 拓扑结构
- en: 'We can quickly test this by logging into the virtual PLC and try to ping the
    physical PLC as follows:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过登录到虚拟 PLC 快速测试这一点，并尝试 ping 物理 PLC，如下所示：
- en: '![Figure 2.46 – Ping connection test'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.46 – Ping 连接测试'
- en: '](image/Figure_2.46_B16321.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.46_B16321.jpg)'
- en: Figure 2.46 – Ping connection test
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.46 – Ping 连接测试
- en: 'As you can see, the host is unreachable. What we need to do is add an uplink
    to the virtual switch. Select **vSwitch1** and click **Add uplink** as shown in
    the following screenshot:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，主机无法访问。我们需要做的是向虚拟交换机添加一个上行链路。选择 **vSwitch1**，并点击 **添加上行链路**，如下截图所示：
- en: '![Figure 2.47 – Add uplink'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.47 – 添加上行链路'
- en: '](image/Figure_2.47_B16321.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.47_B16321.jpg)'
- en: Figure 2.47 – Add uplink
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.47 – 添加上行链路
- en: 'Now we can see that **Uplink 1** is showing a dropdown with a list of physical
    network adapters. This is all dependent on your hardware setup. I have decided
    to keep things consistent with **vSwitch0** being associated with **vmnic0** and
    **vSwitch1** associated with **vmnic1** as shown here:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到 **Uplink 1** 显示了一个下拉菜单，列出了物理网络适配器的列表。这完全取决于你的硬件设置。我决定保持一致性，**vSwitch0**
    关联 **vmnic0**，**vSwitch1** 关联 **vmnic1**，如下所示：
- en: '![Figure 2.48 – Connect physical PLC to virtual switch'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.48 – 将物理 PLC 连接到虚拟交换机'
- en: '](image/Figure_2.48_B16321.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.48_B16321.jpg)'
- en: Figure 2.48 – Connect physical PLC to virtual switch
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.48 – 将物理 PLC 连接到虚拟交换机
- en: 'Now when you look at the topology, you should see a physical adapter associated
    with your vSwitch and connecting the port groups created in [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013),
    *Using Virtualization*:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当你查看拓扑结构时，你应该看到一个物理适配器与你的 vSwitch 关联，并连接到在 [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013)
    中创建的端口组，*使用虚拟化*：
- en: '![Figure 2.49 – vSwitch topology with physical connection'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.49 – 带有物理连接的 vSwitch 拓扑结构'
- en: '](image/Figure_2.49_B16321.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.49_B16321.jpg)'
- en: Figure 2.49 – vSwitch topology with physical connection
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.49 – 带有物理连接的 vSwitch 拓扑结构
- en: 'Go ahead and try pinging the physical PLC from the virtual PLC now. You should
    get a reply back as shown in the following screenshot:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 现在尝试从虚拟 PLC 到物理 PLC 发送 ping。你应该收到回复，如下截图所示：
- en: '![Figure 2.50 – Connection test'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.50 – 连接测试'
- en: '](image/Figure_2.50_B16321.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.50_B16321.jpg)'
- en: Figure 2.50 – Connection test
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.50 – 连接测试
- en: 'Now for a little cleanup. As I added a secondary adapter to the Windows 7 VM
    to connect to the Koyo CLICK via the VM network and **vmnic0** adapter, I am going
    to go back and disconnect that adapter and test to see if I can still connect
    to the CLICK through **vmnic1** next:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 现在稍作整理。由于我给 Windows 7 VM 添加了一个辅助适配器，以通过 VM 网络连接到 Koyo CLICK，我打算返回并断开该适配器，测试一下我是否仍然可以通过
    **vmnic1** 连接到 CLICK：
- en: '![Figure 2.51 – Connect to PLC'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.51 – 连接到 PLC'
- en: '](image/Figure_2.51_B16321.jpg)'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_2.51_B16321.jpg)'
- en: Figure 2.51 – Connect to PLC
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 2.51 – 连接到 PLC
- en: And Voila! We have a path from Windows 7 to the **CLICK PLC**. Now, for you
    networking gurus reading this, I know that you are probably smirking to yourselves
    and thinking, *Duh, we are using a class B subnet mask! Of course, we can communicate
    between the subnets!* Firstly, I want to thank you for reading this book, as it
    means a lot to me, and secondly, I felt this was the path of least resistance
    over assembling firewalls into VMs and writing policies, as that could be a dedicated
    book on its own.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 瞧！我们已经从 Windows 7 到 **CLICK PLC** 有了一条路径。现在，对于阅读本书的网络专家们，我知道你们可能在暗自窃笑，心想，*嗯，我们在使用
    B 类子网掩码！当然，我们可以在子网之间通信！* 首先，感谢你们阅读本书，这对我意义重大。其次，我觉得这是最省力的方式，而不是将防火墙装配到虚拟机中并编写策略，因为那可能需要一本专门的书来讲述。
- en: Summary
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have installed the Koyo Click programming software on our Windows 7 virtual
    machine. We have also wired our power supply to our Koyo Click PLC and powered
    it on. We have successfully configured the physical network of the Koyo Click
    PLC to communicate through the ESXi vSwitch and to the network interface of the
    Windows 7 interface.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在 Windows 7 虚拟机上安装了 Koyo Click 编程软件。我们还将电源连接到 Koyo Click PLC，并将其开启。我们成功地配置了
    Koyo Click PLC 的物理网络，使其能够通过 ESXi vSwitch 与 Windows 7 接口的网络接口进行通信。
- en: 'Wrapping up this chapter, we have a running Koyo CLICK PLC sitting in the **Level
    1: Process** network segment, and we have installed and tested the CLICK programming
    software on the Windows 7 VM that is sitting in the **Level 3: Operations network**
    segment. We tested the network communication between the virtual PLC and the physical
    PLC as well. We added a physical adapter uplink to the ESXi virtual switch that
    we configured in the previous chapter.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '本章总结，我们已经成功运行了位于 **Level 1: Process** 网络段的 Koyo CLICK PLC，并在位于 **Level 3: Operations
    network** 网络段的 Windows 7 虚拟机上安装并测试了 CLICK 编程软件。我们还测试了虚拟 PLC 和物理 PLC 之间的网络通信。我们为前一章节中配置的
    ESXi 虚拟交换机添加了一个物理适配器上行链路。'
- en: Now we have a better understanding of how an automation engineer spends their
    time when they begin a project. Understanding how to orchestrate and install software
    will allow you to shape and hone your pentesting skills in future engagements.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们对自动化工程师在开始项目时如何分配时间有了更清晰的了解。了解如何协调和安装软件将帮助你在未来的渗透测试中提升和磨练你的技能。
- en: In the next chapter, we will be writing our first PLC program and downloading
    it onto the Koyo CLICK.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章节中，我们将编写我们的第一个 PLC 程序并将其下载到 Koyo CLICK 上。
