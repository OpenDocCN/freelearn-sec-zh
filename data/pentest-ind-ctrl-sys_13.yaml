- en: '*Chapter 12*: I See the Future'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 12 章*：我看到未来'
- en: After the previous chapter, if you are reading this in the order as it was written,
    then we have pivoted through our corporate network through the firewall and now
    have a remote desktop session on our Windows 7 machine. We have come full circle
    as we started this book by building the lab, routing virtual traffic to our physical
    **Programmable Logic Controller** (**PLC**), and building our first program. This
    Windows 7 machine is what we used to configure our first PLC program and push
    it to Koyo Click. On this adventure, we have slowly added bits and pieces to our
    lab, building our skillset and knowledge along the way. Arriving here indicates
    that the finish line is within sight. However, we have one last challenge, and
    that challenge is connecting to the process and simulating disruption. Simulation
    is the keyword here; as we've mentioned throughout this book, process disruption
    could have an extreme impact in terms of costs and potentially life-threatening
    issues, so you must tread lightly when you are at this level in your customer's
    network.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章之后，如果您按照编写顺序阅读本书，那么我们已经通过防火墙在企业网络中进行了转向，现在在我们的 Windows 7 机器上有一个远程桌面会话。我们已经完成了一个循环，因为我们开始这本书是通过构建实验室，将虚拟流量路由到我们的物理**可编程逻辑控制器**（**PLC**），并构建我们的第一个程序。这台
    Windows 7 机器是我们用来配置我们的第一个 PLC 程序并将其推送到 Koyo Click 的工具。在这次冒险中，我们逐渐向我们的实验室添加了一点一滴，沿途建立了我们的技能和知识。到达这里表明终点近在眼前。然而，我们还有最后一个挑战，那就是连接到流程并模拟干扰。这里的关键词是模拟；正如我们在整本书中提到的，流程干扰可能会对成本产生极端影响，甚至可能导致危及生命的问题，因此当您在客户网络中达到这个水平时，必须小心谨慎。
- en: In this chapter, we will be updating the firewall that we installed in the previous
    chapter by adding a second interface to handle the local control network. We will
    then connect our Ignition SCADA to our LABCORP domain using the **Lightweight
    Directory Access Protocol** (**LDAP**) to emphasize the dangers of credential
    reuse. We will then use the packages we installed in [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013),
    *Using Virtualization*, to configure a simple **File Transfer Protocol** (**FTP**)
    server and **Hypertext Preprocessor** (**PHP**) web server to simulate low-level
    access points.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过向我们在上一章安装的防火墙添加第二个接口来更新防火墙，以处理本地控制网络。然后，我们将使用**轻量级目录访问协议**（**LDAP**）将我们的
    Ignition SCADA 连接到我们的 LABCORP 域，以强调凭证重用的危险。然后，我们将使用我们在[*第 1 章*](B16321_01_Epub_AM.xhtml#_idTextAnchor013)中安装的软件包，*使用虚拟化*，来配置一个简单的**文件传输协议**（**FTP**）服务器和**超文本预处理器**（**PHP**）Web
    服务器，以模拟低级访问点。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Additional lab configurations
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附加实验室配置
- en: User interface control
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户界面控制
- en: Script access
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本访问
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您将需要以下内容：
- en: A pfSense firewall, which we installed in [*Chapter 11*](B16321_11_Epub_AM.xhtml#_idTextAnchor130),
    *Whoot… I Have To Go Deep*.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 pfSense 防火墙，我们在[*第 11 章*](B16321_11_Epub_AM.xhtml#_idTextAnchor130)中安装的，*哇...
    我必须深入*。
- en: A Kali Linux VM must be open and running.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Kali Linux 虚拟机必须是打开并运行的。
- en: 'You can view this chapter''s code in action here: [https://bit.ly/3j2HgiS](https://bit.ly/3j2HgiS)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处查看本章的代码示例：[https://bit.ly/3j2HgiS](https://bit.ly/3j2HgiS)
- en: Additional lab configurations
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附加实验室配置
- en: 'To round out our lab, we will add more segmentation by adding an interface
    to our firewall. This interface will allow us to add rules between our Level 3
    and Level 2 network segments:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完善我们的实验室，我们将通过向防火墙添加一个接口来增加更多的分段。这个接口将允许我们在我们的第 3 级和第 2 级网络段之间添加规则：
- en: 'To do this, we need to make changes to our ESXi server. On our ESXi server,
    we will need to add an additional network adapter to our pfSense firewall. The
    following screenshot shows how I added **Level 2: Local Control** where the SCADA
    VM sits:![Figure 12.1 – New Network Adapter'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要做到这一点，我们需要对我们的 ESXi 服务器进行更改。在我们的 ESXi 服务器上，我们需要向我们的 pfSense 防火墙添加一个额外的网络适配器。以下截图显示了我如何添加**第
    2 级：本地控制**，SCADA 虚拟机所在的位置：![图 12.1 – 新网络适配器
- en: '](image/B16321_12_001.jpg)'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_001.jpg)'
- en: Figure 12.1 – New Network Adapter
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.1 – 新网络适配器
- en: After adding the network adapter, we must restart our pfSense firewall and navigate
    to the web interface. From here, we want to log in to the web portal, select **Interfaces**,
    and then **Assignments**, as shown in the following screenshot:![Figure 12.2 –
    Interfaces | Assignments
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加网络适配器后，我们必须重新启动 pfSense 防火墙，并进入 Web 界面。在这里，我们要登录到 Web 门户，选择**接口**，然后选择**分配**，如下图所示：![图
    12.2 – 接口 | 分配
- en: '](image/B16321_12_002.jpg)'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_002.jpg)'
- en: Figure 12.2 – Interfaces | Assignments
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.2 – 接口 | 分配
- en: 'You will now see our newly added adapter sitting in the **Interface** list
    being addressed as **Available network ports**, as shown in the following screenshot:'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在你将看到我们新添加的适配器出现在**接口**列表中，标记为**可用网络端口**，如下图所示：
- en: '![Figure 12.3 – Available network ports'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 12.3 – 可用网络端口'
- en: '](image/B16321_12_003.jpg)'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_003.jpg)'
- en: Figure 12.3 – Available network ports
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.3 – 可用网络端口
- en: Continue by clicking the **+ Add** button and then **Save** the configuration.
    You should see that your interface has been added and given a new interface name,
    as shown here:![Figure 12.4 – OPT1 interface
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继续点击**+ 添加**按钮，然后**保存**配置。你应该能看到你的接口已被添加并赋予了一个新的接口名称，如下图所示：![图 12.4 – OPT1 接口
- en: '](image/B16321_12_004.jpg)'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_004.jpg)'
- en: Figure 12.4 – OPT1 interface
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.4 – OPT1 接口
- en: Once created, go back to the **Interfaces** menu. At this point, you should
    see **OPT1** in your drop-down list. Select the **OPT1** interface, as shown in
    the following screenshot:![Figure 12.5 – New OPT1 interface
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建完成后，返回到**接口**菜单。此时，你应该能在下拉菜单中看到**OPT1**。选择**OPT1**接口，如下图所示：![图 12.5 – 新的 OPT1
    接口
- en: '](image/B16321_12_005.jpg)'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_005.jpg)'
- en: Figure 12.5 – New OPT1 interface
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.5 – 新的 OPT1 接口
- en: 'Now, you should see the **General Configuration** screen for your newly minted
    **OPT1** interface. From here, you can enable the interface, change the description''s
    name, select IPv4 configuration, and more. From here, we want to make sure that
    we enable the interface and change **IPv4 Configuration Type** to **Static IPv4**
    as we are going to use this interface as our DHCP server for our **Level 2: Local
    Control** network segment. Here is the screenshot of the initial settings:![Figure
    12.6 – Enabling Static IPv4'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你应该能看到你新创建的**OPT1**接口的**通用配置**屏幕。在这里，你可以启用接口、更改描述名称、选择 IPv4 配置等。从这里，我们要确保启用接口并将**IPv4
    配置类型**更改为**静态 IPv4**，因为我们将使用此接口作为我们的**第二层：本地控制**网络段的 DHCP 服务器。以下是初始设置的截图：![图 12.6
    – 启用静态 IPv4
- en: '](image/B16321_12_006.jpg)'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_006.jpg)'
- en: Figure 12.6 – Enabling Static IPv4
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.6 – 启用静态 IPv4
- en: 'Next, we need to set the static IP address for this interface. If you remember
    our initial setup, we gave the **Level 2: Local Control** network segment a subnet
    of **192.168.2.0/24**. I am going to set our interface to **192.168.2.1/24**,
    as shown here:![Figure 12.7 – Static IPv4 address'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要为此接口设置静态 IP 地址。如果你记得我们最初的设置，我们给**第二层：本地控制**网络段分配了**192.168.2.0/24**子网。我要将我们的接口设置为**192.168.2.1/24**，如下所示：![图
    12.7 – 静态 IPv4 地址
- en: '](image/B16321_12_007.jpg)'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_007.jpg)'
- en: Figure 12.7 – Static IPv4 address
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.7 – 静态 IPv4 地址
- en: Click the **Save** button and then the **Apply Changes** button to commit the
    new interface settings. After this, we must set up the DHCP server for this new
    interface by navigating to **Services** | **DHCP Server** from the top menu bar,
    as shown here:![Figure 12.8 – DHCP Server services
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮，然后点击**应用更改**按钮，以提交新的接口设置。之后，我们必须为这个新接口设置 DHCP 服务器，通过从顶部菜单栏导航到**服务**
    | **DHCP 服务器**，如下图所示：![图 12.8 – DHCP 服务器服务
- en: '](image/B16321_12_008.jpg)'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_008.jpg)'
- en: Figure 12.8 – DHCP Server services
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.8 – DHCP 服务器服务
- en: Similar to our initial configuration for our LAN interface, we are going to
    configure it for OPT1\. Go back to [*Chapter 11*](B16321_11_Epub_AM.xhtml#_idTextAnchor130),
    *Whoot…. I Have To Go Deep*, for a refresher; the only thing I will add here is
    the IP address pool, which is picking a range from **192.168.2.10** to **192.168.2.254**,
    as shown in the following screenshot:![Figure 12.9 – DHCP Server
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似于我们最初为 LAN 接口配置的方式，我们将为 OPT1 配置它。返回到[*第 11 章*](B16321_11_Epub_AM.xhtml#_idTextAnchor130)，*哇……我要深入研究*，以便复习；我在这里唯一需要补充的是
    IP 地址池，它选择了从**192.168.2.10**到**192.168.2.254**的范围，如下图所示：![图 12.9 – DHCP 服务器
- en: '](image/B16321_12_009.jpg)'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_009.jpg)'
- en: Figure 12.9 – DHCP Server
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 12.9 – DHCP 服务器
- en: Finally, we have to create a vulnerable *any*:*any* rule in our firewall to
    allow our new interface to communicate northbound. Navigate to **Firewall** |
    **Rules**, as shown here:![Figure 12.10 – Firewall | Rules
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们必须在防火墙中创建一个脆弱的*any*:*any*规则，允许我们的新接口向北通信。导航至**防火墙** | **规则**，如图所示：![图12.10
    – 防火墙 | 规则
- en: '](image/B16321_12_010.jpg)'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_010.jpg)'
- en: Figure 12.10 – Firewall | Rules
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.10 – 防火墙 | 规则
- en: From here, click the **Add Rule** button. You will be presented with a screen
    that will allow you to edit a new rule. Set **Action** to **Pass**, **Interface**
    to **OPT1**, **Address Family** to **IPv4**, and **Protocol** to **Any**, as shown
    here:![Figure 12.11 – Any rule
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这里，点击**添加规则**按钮。你将看到一个屏幕，允许你编辑一个新的规则。将**操作**设置为**允许**，**接口**设置为**OPT1**，**地址族**设置为**IPv4**，**协议**设置为**任意**，如图所示：![图12.11
    – 任意规则
- en: '](image/B16321_12_011.jpg)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_011.jpg)'
- en: Figure 12.11 – Any rule
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.11 – 任意规则
- en: Click the **Save** button and then **Apply Changes**. After that, try and ping
    various elements in your network. You should be able to ping the Corp Domain Controller
    on the WAN interface from our SCADA VM, and our Windows 7 host should be able
    to ping the SCADA VM.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮，然后点击**应用更改**。之后，尝试在网络中ping不同的元素。你应该能够从我们的SCADA虚拟机通过WAN接口ping到公司域控制器，并且我们的Windows
    7主机应该能够ping到SCADA虚拟机。
- en: Now that you have tested that you can route between networks, we are going to
    connect our Ignition SCADA to our LABCORP domain.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经测试了网络间的路由，我们将把我们的Ignition SCADA连接到LABCORP域。
- en: LDAP connection
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LDAP连接
- en: 'To connect our Ignition SCADA to our LABCORP domain, we will perform the following
    steps:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要将我们的Ignition SCADA连接到LABCORP域，我们将执行以下步骤：
- en: For this, we will need to log in too our Ignition SCADA interface. Once we have
    established a connection, navigate to the **Config** icon and then select **Users,
    Roles** from under the **SECURITY** section, as shown here:![Figure 12.12 – Users,
    Roles
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为此，我们需要登录到我们的Ignition SCADA界面。一旦建立连接，点击**配置**图标，然后在**安全**部分选择**用户，角色**，如图所示：![图12.12
    – 用户，角色
- en: '](image/B16321_12_012.jpg)'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_012.jpg)'
- en: Figure 12.12 – Users, Roles
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.12 – 用户，角色
- en: Selecting the **Users, Roles** link will bring up the **Users Sources** configuration
    screen. From here, we are going to select the **Create new User Source…** link,
    as shown here:![Figure 12.13 – Create new User Source
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**用户，角色**链接将弹出**用户来源**配置屏幕。从这里，我们将选择**创建新用户来源…**链接，如图所示：![图12.13 – 创建新用户来源
- en: '](image/B16321_12_013.jpg)'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_013.jpg)'
- en: Figure 12.13 – Create new User Source
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.13 – 创建新的用户来源
- en: Once we have clicked the link to create a new user source, a list of credential
    source options will be presented. We want to focus specifically on the **Active
    Directory** options. Here, we have one traditional and two hybrid sources. I am
    going to use the **AD/Internal Hybrid** source as it allows me to leverage the
    auth mechanics of AD and maintain group access and control granularity inside
    Ignition. You can see these options in the following screenshot:![Figure 12.14
    – New sources
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击链接以创建新的用户来源后，将呈现一个凭据源选项列表。我们将特别关注**Active Directory**选项。在这里，我们有一个传统源和两个混合源。我将使用**AD/内部混合**源，因为它允许我利用AD的身份验证机制，并在Ignition中维持组访问和控制粒度。你可以在以下截图中看到这些选项：![图12.14
    – 新的来源
- en: '](image/B16321_12_014.jpg)'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_014.jpg)'
- en: Figure 12.14 – New sources
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.14 – 新的来源
- en: 'Once you have selected the **Next >** button, a new screen will be presented,
    allowing us to configure the elements of our **AD/Internal Hybrid** source selection.
    We are going to provide the source with a name; I used the name **Operators**
    here. Next, scroll down to **Active Directory Properties** and fill in the required
    items:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择了**下一步 >**按钮，系统将呈现一个新屏幕，允许我们配置**AD/内部混合**源选择的元素。我们将为源提供一个名称；我在这里使用了名称**Operators**。接下来，向下滚动至**Active
    Directory属性**并填写所需项：
- en: '**Domain**: **labcorp.local**'
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**域**：**labcorp.local**'
- en: '**AD Username**: **operator1**'
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AD 用户名**：**operator1**'
- en: '**AD Password**: **Password1**'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AD 密码**：**Password1**'
- en: '**Domain IP Address**: **172.16.0.2**'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**域IP地址**：**172.16.0.2**'
- en: '**LDAP port #**: **389**'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LDAP端口 #**：**389**'
- en: 'The following screenshot shows these configuration fields:'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图展示了这些配置字段：
- en: '![Figure 12.15 – Active Directory Properties](image/B16321_12_015.jpg)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图12.15 – Active Directory属性](image/B16321_12_015.jpg)'
- en: Figure 12.15 – Active Directory Properties
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.15 – Active Directory属性
- en: After updating the fields and saving the configuration, Ignition SCADA will
    use the configuration to reach out to the domain controller and perform a user
    search. This will build a list of domain users who can be leveraged to access
    the Ignition SCADA platform. See the following list of users that Ignition pulled
    in from the domain controller that I created in [*Chapter 10*](B16321_10_Epub_AM.xhtml#_idTextAnchor112),
    *I Can Do It 420*:![Figure 12.16 – Domain users
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新字段并保存配置后，Ignition SCADA将使用该配置与域控制器通信并执行用户搜索。这将建立一个可以用于访问Ignition SCADA平台的域用户列表。以下是Ignition从我在[*第10章*](B16321_10_Epub_AM.xhtml#_idTextAnchor112)创建的域控制器中拉取的用户列表，凭据为
    *I Can Do It 420*：![图12.16 – 域用户
- en: '](image/B16321_12_016.jpg)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_016.jpg)'
- en: Figure 12.16 – Domain users
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.16 – 域用户
- en: Next, we need to add the role of **Administrator** and assign it to our **Operator1**
    user, as shown here:![Figure 12.17 – Roles
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要添加**管理员**角色，并将其分配给我们的**Operator1**用户，如下所示：![图12.17 – 角色
- en: '](image/B16321_12_017.jpg)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_017.jpg)'
- en: Figure 12.17 – Roles
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.17 – 角色
- en: After creating the **Administrator** role and adding it to the **Operator1**
    user account, we are going to update the **Identity Providers** list by creating
    a new identity provider, as shown here:![Figure 12.18 – Identity Providers
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建了**管理员**角色并将其添加到**Operator1**用户帐户后，我们将通过创建新的身份提供者来更新**身份提供者**列表，如下所示：![图12.18
    – 身份提供者
- en: '](image/B16321_12_018.jpg)'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_018.jpg)'
- en: Figure 12.18 – Identity Providers
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.18 – 身份提供者
- en: Once we click the **Create new Identity Provider** link, we will be presented
    with a screen with multiple sections to configure the new identity. We want to
    give our new identity provider a name here. I used **ActiveDirectory** as it makes
    for a clear reminder. Then, I changed **User Source** to **Operators**, as shown
    here:![Figure 12.19 – Basic Details
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们点击**创建新的身份提供者**链接，我们将看到一个包含多个部分的屏幕，用于配置新的身份。在这里，我们希望为新的身份提供者命名。我使用了**ActiveDirectory**，因为它可以作为一个明确的提醒。然后，我将**用户来源**更改为**操作员**，如下所示：![图12.19
    – 基本信息
- en: '](image/B16321_12_019.jpg)'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_019.jpg)'
- en: Figure 12.19 – Basic Details
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.19 – 基本信息
- en: After saving your configuration updates, you should see the newly created provider
    in the list, as shown here:![Figure 12.20 – Identity Provider added
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存配置更新后，您应该会在列表中看到新创建的提供者，如下所示：![图12.20 – 添加身份提供者
- en: '](image/B16321_12_020.jpg)'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_020.jpg)'
- en: Figure 12.20 – Identity Provider added
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.20 – 添加身份提供者
- en: Finally, we want to change our **General Gateway Security Settings**. We want
    to switch **System Identity Provider** to **ActiveDirectory**, as shown here:![Figure
    12.21 – Switching Identity Provider
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们希望更改**通用网关安全设置**。我们希望将**系统身份提供者**切换为**ActiveDirectory**，如下所示：![图12.21 –
    切换身份提供者
- en: '](image/B16321_12_021.jpg)'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](image/B16321_12_021.jpg)'
- en: Figure 12.21 – Switching Identity Provider
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图12.21 – 切换身份提供者
- en: Now, we must test our **operator1** domain user by logging in to the Ignition
    SCADA user interface with the domain credentials that we discovered in [*Chapter
    10*](B16321_10_Epub_AM.xhtml#_idTextAnchor112), *I Can Do It 420*.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们必须通过使用在[*第10章*](B16321_10_Epub_AM.xhtml#_idTextAnchor112)中发现的域凭据，登录到Ignition
    SCADA用户界面，来测试我们的**operator1**域用户，凭据为 *I Can Do It 420*。
- en: '![Figure 12.22 – operator1 login'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.22 – operator1 登录'
- en: '](image/B16321_12_022.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_022.jpg)'
- en: Figure 12.22 – operator1 login
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.22 – operator1 登录
- en: After connecting and testing our **operator1** credentials, you should have
    a better awareness of the pitfall that many organizations suffer from with widespread
    credential reuse. If you find credentials on a domain-connected system, there
    is a high likelihood that those credentials will help you gain access to different
    systems inside the network.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在连接并测试我们的**operator1**凭据后，您应该对许多组织所遭遇的凭据重复使用问题有更清晰的认识。如果您在一个与域连接的系统中找到凭据，那么这些凭据很有可能帮助您访问网络内部的其他系统。
- en: Storytime
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 故事时间
- en: During an engagement, I was able to gain a foothold into the network by leveraging
    a domain service account that was used for provisioning new computers and joining
    them to the domain. For some reason, the Ansible-like script failed to remove
    the service account from the newly provisioned system and, to my surprise, it
    failed to remove the service account from all computers. This service account
    was a unique find as it allowed me to navigate and jump around the system, but
    its most interesting use was the access rights it had to the domain information.
    I used this account to analyze every user in the domain, as well as understand
    their titles and what machines they owned. This was very useful for narrowing
    down my search for staff members that would have direct access to the **Distributed
    Control System** (**DCS**). After quickly discovering the specific lead operations
    account and the computer that this individual owned, I used **Remote Desktop Protocol**
    (**RDP**) to navigate to the machine and then dumped the credentials, similar
    to what we did in [*Chapter 10*](B16321_10_Epub_AM.xhtml#_idTextAnchor112), *I
    Can Do It 420*. After gathering the user's credentials, I was able to reuse them
    to gain a foothold through a saved putty connection stored on their desktop.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在一次参与中，我通过利用一个用于为新计算机配置和将它们加入域的域服务帐户获得了对网络的立足点。由于某种原因，类似 Ansible 的脚本未能将该服务帐户从新配置的系统中移除，令我惊讶的是，它未能从所有计算机中移除该服务帐户。这个服务帐户是一个独特的发现，因为它允许我在系统中进行导航和跳跃，但最有趣的用途是它对域信息的访问权限。我使用这个帐户分析了域中的每个用户，并了解了他们的职务和他们拥有的计算机。这对于缩小我寻找直接访问
    **分布式控制系统**（**DCS**）的工作人员的范围非常有用。快速发现了特定的领导操作帐户以及该个人拥有的计算机后，我使用 **远程桌面协议**（**RDP**）访问了该机器，然后转储了凭据，类似于我们在
    [*第十章*](B16321_10_Epub_AM.xhtml#_idTextAnchor112)，*我能做到 420* 中做的事情。在收集了用户的凭据后，我能够重新使用它们，通过保存在桌面上的一个
    Putty 连接获得立足点。
- en: PHP setup
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PHP 设置
- en: 'We will round out this lab configuration section by creating and updating our
    **ftp** folder and configuration file. We installed **vsftp** in [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013),
    *Using Virtualization*, and now we are going to use it. We will perform the following
    steps:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在此实验配置部分，通过创建和更新我们的 **ftp** 文件夹及配置文件来完成。我们在 [*第一章*](B16321_01_Epub_AM.xhtml#_idTextAnchor013)，*使用虚拟化*
    中安装了 **vsftp**，现在我们将使用它。我们将执行以下步骤：
- en: 'Create a public folder for our **ftp** server:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为我们的 **ftp** 服务器创建一个公共文件夹：
- en: '**sudo mkdir -p /var/ftp/pub**'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo mkdir -p /var/ftp/pub**'
- en: 'Change the ownership of our public folder:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改我们的公共文件夹的所有权：
- en: '**sudo chown nobody:nogroup /var/ftp/pub**'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo chown nobody:nogroup /var/ftp/pub**'
- en: '**sudo chown -R ftp /var/ftp/pub**'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo chown -R ftp /var/ftp/pub**'
- en: 'Make a backup of our original **vsftp** config file:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份我们原始的 **vsftp** 配置文件：
- en: '**sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.orig**'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.orig**'
- en: '**sudo rm /etc/vsftpd.conf**'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo rm /etc/vsftpd.conf**'
- en: 'Create a new configuration file using vulnerable settings:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用易受攻击的设置创建一个新的配置文件：
- en: '**sudo echo "listen=NO" > /etc/vsftpd.conf**'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "listen=NO" > /etc/vsftpd.conf**'
- en: '**sudo echo "listen_ipv6=YES" >> /etc/vsftpd.conf**'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "listen_ipv6=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "anonymous_enable=YES" >> /etc/vsftpd.conf**'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "anonymous_enable=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "local_enable=NO" >> /etc/vsftpd.conf**'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "local_enable=NO" >> /etc/vsftpd.conf**'
- en: '**sudo echo "write_enable=YES" >> /etc/vsftpd.conf**'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "write_enable=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "anon_upload_enable=YES" >> /etc/vsftpd.conf**'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "anon_upload_enable=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "anon_mkdir_write_enable=YES" >> /etc/vsftpd.conf**'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "anon_mkdir_write_enable=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "anon_root=/var/ftp/" >> /etc/vsftpd.conf**'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "anon_root=/var/ftp/" >> /etc/vsftpd.conf**'
- en: '**sudo echo "no_anon_password=YES" >> /etc/vsftpd.conf**'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "no_anon_password=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "hide_ids=YES" >> /etc/vsftpd.conf**'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "hide_ids=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "anon_umask=022" >> /etc/vsftpd.conf**'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "anon_umask=022" >> /etc/vsftpd.conf**'
- en: '**sudo echo "anon_other_write_enable=YES" >> /etc/vsftpd.conf**'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "anon_other_write_enable=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "dirmessage_enable=YES" >> /etc/vsftpd.conf**'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "dirmessage_enable=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "use_localtime=YES" >> /etc/vsftpd.conf**'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "use_localtime=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "xferlog_enable=YES" >> /etc/vsftpd.conf**'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "xferlog_enable=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "connect_from_port_20=YES" >> /etc/vsftpd.conf**'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "connect_from_port_20=YES" >> /etc/vsftpd.conf**'
- en: '**sudo echo "pam_service_name=vsftpd" >> /etc/vsftpd.conf**'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "pam_service_name=vsftpd" >> /etc/vsftpd.conf**'
- en: '**sudo echo "utf8_filesystem=YES" >> /etc/vsftpd.conf**'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo echo "utf8_filesystem=YES" >> /etc/vsftpd.conf**'
- en: 'Spin up a PHP server:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动PHP服务器：
- en: '**sudo systemctl restart vsftpd**'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo systemctl restart vsftpd**'
- en: '**echo ''Finished -Running Webserver''**'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**echo ''Finished -Running Webserver''**'
- en: '**cd /var/ftp/pub**'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**cd /var/ftp/pub**'
- en: '**php -S 0.0.0.0:8000**'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**php -S 0.0.0.0:8000**'
- en: Once implemented, we will have a fully baked FTP and a PHP web server running.
    As simple as these tools might seem, they truly do replicate real-world installations
    and setups. It is very common to find FTP servers inside the industrial network
    as these are typically used to pass control software updates, patches, and even
    firmware around. Finding these servers is key as typically, they allow read and
    write access, which we can leverage to escalate our privileges at this level in
    the network. In the next section, we will build a tunnel and use proxy chains
    to gain access to the **User Interface** (**UI**) control of the SCADA network.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦实施，我们将拥有一个完全成型的FTP和一个运行中的PHP Web服务器。尽管这些工具可能看起来很简单，但它们确实复制了真实世界的安装和设置。在工业网络中经常发现FTP服务器是很常见的，因为它们通常用于传递控制软件更新、补丁甚至固件。找到这些服务器非常关键，因为通常它们允许读写访问，我们可以利用这一点在网络的这一级别上提升我们的特权。在下一节中，我们将建立一个隧道并使用代理链来访问SCADA网络的**用户界面**（**UI**）控制。
- en: User interface control
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户界面控制
- en: 'Now, I know that we installed a SCADA system into our lab for testing purposes,
    and yes, we have been beating up on Ignition SCADA throughout this book, but know
    that performing these actions and practicing these attacks translates into real
    industry installations. At the core of all SCADA and **Distributed Control Systems**
    (**DCS**) lies the same underlying principle:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我知道我们在实验室安装了一个SCADA系统进行测试，是的，我们在本书中一直在研究Ignition SCADA，但是要知道，执行这些操作并实践这些攻击可以转化为真实的工业安装。所有SCADA和**分布式控制系统**（**DCS**）的核心都是相同的基本原理：
- en: Take in the input.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接收输入。
- en: Run logic and routines against the input.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对输入运行逻辑和例行程序。
- en: Deliver the output to the process.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交付输出到进程。
- en: 'This means that even though countless companies are producing SCADA and DCS
    software, they all function the same way. The following are a few systems that
    you may see:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着即使有无数家公司生产SCADA和DCS软件，它们的功能方式都是相同的。以下是一些您可能会看到的系统：
- en: Weatherford **Cygent** SCADA
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Weatherford **Cygent** SCADA
- en: Schneider Electric **Telvent**
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Schneider Electric **Telvent**
- en: Emerson **Zedi Solutions**, **Ovation**, **Progea**, and **DeltaV**
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Emerson **Zedi Solutions**，**Ovation**，**Progea**和**DeltaV**
- en: Aveva **Citech** SCADA
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Aveva **Citech** SCADA
- en: Honeywell **Experion**
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Honeywell **Experion**
- en: ABB **SCADAvantage**, **Symphony**, and **800xA**
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ABB **SCADAvantage**，**Symphony**和**800xA**
- en: GE **Cimplicity**
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GE **Cimplicity**
- en: '**SurvalentOne** SCADA'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SurvalentOne** SCADA'
- en: The list goes on, and the one supplied here is a generalized list of systems
    you will come across. There is still a healthy mixture of older legacy systems
    still being utilized in various parts of the world. It has often been the motto
    *If it isn't broken, don't fix it*, which means if the process is running and
    generating revenue, then there is no need to replace the system. So, gaining a
    working knowledge of these systems will allow you to leverage them further in
    your pentesting career. In this section, we will be leveraging the knowledge that
    we gained in the previous chapter. We will pivot deeper into the network and go
    down to our workstation, which has access to our SCADA system. We will then exploit
    a credential reuse attack to gain access to the user interface of the SCADA system.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 列出的是你可能会遇到的系统的广义列表。在世界各地的各个部分仍然使用许多旧的遗留系统的健康混合。往往是“*如果它没坏，就不要修*”，这意味着如果流程正在运行并产生收入，那么没有必要更换系统。因此，掌握这些系统的工作知识将使您在您的渗透测试职业中进一步利用它们。在本节中，我们将利用上一章节中获得的知识。我们将更深入地转向网络并到达我们的工作站，该工作站可以访问我们的SCADA系统。然后，我们将利用凭证重用攻击来访问SCADA系统的用户界面。
- en: 'The following diagram shows our attack path to the SCADA user interface:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了我们到达SCADA用户界面的攻击路径：
- en: '![Figure 12.23 – Attack path'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 12.23 – 攻击路径'
- en: '](image/B16321_12_023.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_023.jpg)'
- en: Figure 12.23 – Attack path
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.23 – 攻击路径
- en: 'Using a dynamic SSH tunnel and running **xfreerdp** via proxy chains, as we
    covered in [*Chapter 11*](B16321_11_Epub_AM.xhtml#_idTextAnchor130), *Whoot….
    I Have To Go Deep*, we can establish a remote connection to our SCADA host. As
    a quick refresher, running the following command will build our dynamic SSH tunnel:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 使用动态SSH隧道和通过代理链运行**xfreerdp**，正如我们在[*第11章*](B16321_11_Epub_AM.xhtml#_idTextAnchor130)中所述，*Whoot….
    I Have To Go Deep*，我们可以建立与我们的SCADA主机的远程连接。作为一个快速的复习，运行以下命令将构建我们的动态SSH隧道：
- en: ssh -D 9000 -fN operator1@172.16.0.4
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: ssh -D 9000 -fN operator1@172.16.0.4
- en: 'Then, we will want to run **xfreerdp** with **proxychains** by using the following
    command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们希望使用以下命令通过**proxychains**运行**xfreerdp**：
- en: proxychains xfreerdp /u:operator1 /p:Password1 /v:172.16.0.7
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: proxychains xfreerdp /u:operator1 /p:Password1 /v:172.16.0.7
- en: In a production environment, you will find that the workstation is typically
    logged in to the SCADA system or at least has the web portal up and running for
    easy access. The worst case is that there is a link sitting on the desktop. Now,
    this is certainly not *hacker-sexy* as it were because we are merely leveraging
    poor security practices, bad policies, and broken firewall rules. However, the
    entire point of pentesting a system is to help the customer find flaws in their
    system, as well as leverage, exploit, and document them. More often than not,
    you will find *reusable credentials*, default creds, or vendor commissioned credentials
    as a point of entry.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中，你会发现工作站通常会登录到SCADA系统，或者至少会打开并运行Web门户以便于访问。最糟糕的情况是桌面上有一个链接。这显然不是*黑客风骚*，因为我们只是在利用糟糕的安全实践、不良政策和破碎的防火墙规则。然而，渗透测试系统的整个目的就是帮助客户发现系统中的缺陷，并利用、利用并记录这些缺陷。通常情况下，你会发现*可重用凭证*、默认凭证或供应商委托的凭证作为入侵点。
- en: 'Once our remote session has been established, use our **operator1**/**Password1**
    credentials to access our Ignition console, as shown here:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的远程会话建立，使用我们的**operator1**/**Password1**凭证访问Ignition控制台，如下所示：
- en: '![Figure 12.24 – Credential reuse'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.24 – 凭证重用'
- en: '](image/B16321_12_024.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_024.jpg)'
- en: Figure 12.24 – Credential reuse
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.24 – 凭证重用
- en: 'Once inside the system, you should make note of the equipment and controls
    that this SCADA solution has access to. We want to build our situational awareness
    and document the findings for reporting purposes. We will talk about this in more
    detail in the next chapter. Here is a quick checklist of items to look for:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 进入系统后，您应当记录下该SCADA解决方案能够访问的设备和控制项。我们希望建立我们的态势感知，并记录发现的内容以备报告之用。我们将在下一章详细讨论这一点。这里是一个快速检查清单，列出了需要查找的项目：
- en: What is the process that this SCADA system controls?
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该SCADA系统控制的是什么进程？
- en: What assets have read/write access?
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些资产具有读写访问权限？
- en: How is the security set up for this system?
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个系统的安全性是如何设置的？
- en: Are there connected databases, such as data historians?
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否存在连接的数据库，如数据历史记录？
- en: Understanding how much access there is can determine the level of impact you
    might have on an organization. At the user interface access level, most people
    default to the fact that you have ultimate control over the process. Yes, this
    is a scary scenario where attackers could shut down and disable a process or a
    plant but think about deeper and broader scenarios. If the system is domain-connected,
    just like our SCADA system is, what if the attacker removed the configuration?
    This would mean that no one from the domain could authenticate to the SCADA system
    to make changes. This would create havoc as the process is still running but now
    there is a loss of control.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 理解访问权限的大小可以决定对组织可能造成的影响程度。在用户界面访问层面，大多数人默认认为你对进程拥有最终控制权。是的，这是一个令人恐惧的场景，攻击者可能会关闭并禁用进程或工厂，但请思考更深层次和更广泛的场景。如果系统已连接到域，就像我们的SCADA系统一样，假设攻击者删除了配置呢？这意味着没有人能够通过域认证访问SCADA系统并进行更改。这将引发混乱，因为进程仍在运行，但现在失去了控制。
- en: You might be saying to yourself, *If I can shut down the process, why do I care
    about loss of control?* This is a good question and you would be right, but most
    of these operations can still be operated locally and manually. When incidents
    like this occur and, funnily enough, they occur more often than you would think
    – not from threat actors but more from misconfigurations – the operators would
    disconnect remote access and run the process manually. Look at the following screenshot;
    how many different items could you upgrade, downgrade, restore, or change to cause
    havoc in the system?
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，*如果我可以关闭该进程，那为什么还会担心失去控制呢？* 这是一个很好的问题，你是对的，但大多数操作仍然可以在本地手动执行。当发生此类事件时，趣味的是，它们发生的频率比你想象的还要高——并非来自威胁行为者，而是更多地来自配置错误——操作员会断开远程访问并手动运行该进程。看一下下面的截图；你能发现多少不同的项目，可以升级、降级、恢复或更改，从而在系统中引发混乱？
- en: '![Figure 12.25 – User interface configuration access'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.25 – 用户界面配置访问'
- en: '](image/B16321_12_025.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_025.jpg)'
- en: Figure 12.25 – User interface configuration access
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.25 – 用户界面配置访问
- en: Warning
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Once again, just because you can gain this level of access doesn't mean that
    you should implement or change anything. These types of actions can land you in
    prison.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，仅仅因为你能够获得这种级别的访问权限，并不意味着你应该实施或更改任何内容。这类行为可能会让你入狱。
- en: The reasoning behind addressing abstract and out-of-band actions is solely for
    reporting purposes. It might be the case that you come across a client that has
    gone to great lengths to implement and deploy security measures to thwart your
    actions. You may not be as lucky to gain the full control and access that we have
    shown in this lab, so you will need to adapt, think on your feet, and dig deep
    to find points of risk to report on. In the next section, we will explore getting
    deeper access into the SCADA server by utilizing scripts.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 提到抽象和带外操作的原因完全是出于报告目的。可能会遇到某个客户，采取了极大的努力来实施和部署安全措施，旨在阻止你的操作。你可能不会像本实验中展示的那样幸运，能够获得完全的控制和访问权限，因此你需要适应，灵活应对，并深入挖掘潜在的风险点以供报告。在下一节中，我们将通过使用脚本探索如何更深入地访问
    SCADA 服务器。
- en: Script access
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 脚本访问
- en: In the previous section, we discussed the level of access and control that we
    can perform by gaining UI control. In this section, we are going to look at trying
    to gain deeper access into the SCADA server, which will allow us to bypass the
    UI control and communicate directly with the physical equipment. In our case,
    this would be Koyo Click.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们讨论了通过获得 UI 控制所能执行的访问和控制级别。在本节中，我们将尝试获得更深入的 SCADA 服务器访问权限，这将使我们能够绕过 UI
    控制，直接与物理设备进行通信。在我们的案例中，这将是 Koyo Click。
- en: 'From our workstation, we want to test whether our SCADA server is running some
    sort of file share that is open for easy intranet file transfers. Run the following
    command:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们的工作站出发，我们想要测试我们的 SCADA 服务器是否正在运行某种文件共享服务，并且该服务对内部网文件传输开放。运行以下命令：
- en: ftp 192.168.2.11
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: ftp 192.168.2.11
- en: 'This will bring us to a login prompt. I tend to always check whether a service
    is running with anonymous credential access. In this case, we will use the username
    **anonymous**. As you can see from the **230 Login successful** response, we have
    anonymous access:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这将引导我们到登录提示。 我通常会检查是否有服务正在使用匿名凭证访问。在这种情况下，我们将使用用户名 **anonymous**。从 **230 登录成功**
    的响应可以看出，我们拥有匿名访问权限：
- en: '![Figure 12.26 – FTP connection to SCADA'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.26 – FTP 连接到 SCADA'
- en: '](image/B16321_12_026.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_026.jpg)'
- en: Figure 12.26 – FTP connection to SCADA
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.26 – FTP 连接到 SCADA
- en: 'Next, we will want to switch to the **pub** folder and check our access rights.
    We can quickly do this by creating a folder inside the **pub** folder using the
    following command:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将切换到 **pub** 文件夹并检查我们的访问权限。我们可以通过在 **pub** 文件夹内创建一个文件夹来快速完成此操作，使用以下命令：
- en: mkdir images
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: mkdir images
- en: 'And like that, we know that we have write access to this folder:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，我们知道我们已经对该文件夹拥有写入权限：
- en: '![Figure 12.27 – Write access to the pub folder'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.27 – 对 pub 文件夹的写入访问'
- en: '](image/B16321_12_027.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_027.jpg)'
- en: Figure 12.27 – Write access to the pub folder
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.27 – 对 pub 文件夹的写入访问
- en: Yes, we are cheating a little bit as we did configure this FTP server in the
    first section of this chapter, but I want you to get a feel for how the flow works
    and go through the motions of accessing the system at this level. We know that
    we have a PHP server listening on port **8000** of the SCADA server, so on our
    compromised workstation, we can browse to that port and see the server hosting
    data. Now, this is a development server, which means that there will be *no* native
    directory listing like that of Apache or **Internet Information Services** (**IIS**),
    so don't be alarmed when you encounter a **Not Found** message. This can be corrected
    by simply adding a blank **index.php** file to the root folder or by creating
    a dedicated PHP file that performs the directory listing for you, which is outside
    the scope of this book.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我们确实稍微作弊了一下，因为我们在本章的第一节中配置了这个 FTP 服务器，但我希望你能够感受一下流的工作方式，并通过访问系统的这一层级来了解流程。我们知道
    SCADA 服务器的 **8000** 端口上有一个 PHP 服务器在监听，因此在我们的被攻破的工作站上，我们可以浏览该端口并查看服务器托管的数据。现在，这是一个开发服务器，这意味着不会像
    Apache 或 **互联网信息服务** (**IIS**) 那样有本地目录列表，因此当你遇到 **未找到** 消息时，不必惊慌。这可以通过简单地在根文件夹中添加一个空白的
    **index.php** 文件，或者创建一个执行目录列表的专用 PHP 文件来纠正，后者超出了本书的讨论范围。
- en: 'Next, we want to upload a PHP **webshell** to our FTP server. When using Kali
    Linux, by default, there are **webshells** stored under the **/usr/share/webshells**
    folder and if you view a listing of that folder, you should see the following:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们希望将一个PHP **webshell** 上传到我们的FTP服务器。当使用Kali Linux时，默认情况下，**webshells**会存储在**/usr/share/webshells**文件夹中，如果你查看该文件夹的列表，你应该能看到以下内容：
- en: '![Figure 12.28 – webshells'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.28 – webshells'
- en: '](image/B16321_12_028.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_028.jpg)'
- en: Figure 12.28 – webshells
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.28 – webshells
- en: 'We want to copy the PHP **php-reverse-shell.php** file to our Kali working
    directory and then perform some slight changes. If you scroll partway down the
    file, you will come across the following details:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将PHP **php-reverse-shell.php** 文件复制到我们的Kali工作目录中，然后做一些轻微的修改。如果你向下滚动文件，你会遇到以下内容：
- en: '![Figure 12.29 – php-reverse-shell.php'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.29 – php-reverse-shell.php'
- en: '](image/B16321_12_029.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_029.jpg)'
- en: Figure 12.29 – php-reverse-shell.php
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.29 – php-reverse-shell.php
- en: 'Here, we want to change the **$ip** information and the **$port** information
    so that it matches our Kali Linux host IP address and port of our choosing. Once
    you have changed this information, we are going to get this file onto our Windows
    7 workstation. As a refresher, I always use the following command:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们要更改**$ip**信息和**$port**信息，使其与我们的Kali Linux主机的IP地址和我们选择的端口匹配。更改此信息后，我们将把该文件放到Windows
    7工作站中。作为提醒，我总是使用以下命令：
- en: python3 -m http.server
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: python3 -m http.server
- en: 'I have done this to generate a temporary server that I can navigate to and
    pull down files. Once you have placed your **php-reverse-shell.php** file onto
    the victim''s workstation computer, you must run the following command to get
    the file into the FTP server on the SCADA box:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我这样做是为了生成一个临时服务器，我可以导航到该服务器并下载文件。一旦你将**php-reverse-shell.php**文件放到受害者的工作站计算机上，你必须运行以下命令，将文件传输到SCADA盒子上的FTP服务器：
- en: put php-reverse-shell.php
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 上传 php-reverse-shell.php
- en: 'If everything worked correctly, you should see the following output:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常，你应该看到以下输出：
- en: '![Figure 12.30 – PUT php-reverse-shell.php'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.30 – 上传 php-reverse-shell.php'
- en: '](image/B16321_12_030.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_030.jpg)'
- en: Figure 12.30 – PUT php-reverse-shell.php
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.30 – 上传 php-reverse-shell.php
- en: 'Next, we want to make sure that we have a listener set up on Kali by running
    the following command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们希望通过运行以下命令，确保在Kali上设置了一个监听器：
- en: nc -nvlp 4444
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: nc -nvlp 4444
- en: 'Make sure to change your port number so that it matches the port that you configured
    in the **webshell** file. After setting up the listener, navigate back to the
    workstation and browse to the following location:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 确保更改你的端口号，使其与**webshell**文件中配置的端口一致。在设置好监听器后，返回工作站并浏览到以下位置：
- en: '![Figure 12.31 – Navigating to the reverse shell'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.31 – 导航到反向Shell'
- en: '](image/B16321_12_031.jpg)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_031.jpg)'
- en: Figure 12.31 – Navigating to the reverse shell
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.31 – 导航到反向Shell
- en: 'If you go back to your Kali listener, you should see that you have a new shell,
    as shown here:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你返回到Kali监听器，你应该会看到你有一个新的Shell，如下所示：
- en: '![Figure 11.32 – New reverse shell'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.32 – 新的反向Shell'
- en: '](image/B16321_12_032.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B16321_12_032.jpg)'
- en: Figure 11.32 – New reverse shell
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.32 – 新的反向Shell
- en: As you can see, we have a reverse shell and we are running as root. From here,
    we can simply copy in the scripts that we wrote in [*Chapter 8*](B16321_08_Epub_AM.xhtml#_idTextAnchor097),
    *Protocols 202*, and exploit the physical PLC by turning the lights ON and OFF.
    In a professional engagement, when we gain this level of access, we can load in
    tools to discover equipment that the SCADA/DCS system has connectivity to. Depending
    on the level of engagement, you may be asked to go deeper and determine what hardware
    can be comprised.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们已经获得了一个反向Shell，并且我们以root身份运行。从这里开始，我们可以简单地将我们在[*第8章*](B16321_08_Epub_AM.xhtml#_idTextAnchor097)中编写的脚本，*协议
    202*，复制进来，并通过开启和关闭灯光来利用物理PLC。在专业的操作中，当我们获得这种级别的访问权限时，我们可以加载工具，发现SCADA/DCS系统连接的设备。根据合作的深入程度，你可能会被要求进一步探查，确定哪些硬件可能被破坏。
- en: Warning
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: I do caution that like the UI control, making changes and being active at this
    level of the network can have adverse effects that may cause disruption, damage,
    and possibly death. Even if your client encourages you to go deeper, I would caution
    you to abstain as the byproduct of change is seldom discovered until it is too
    late.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我提醒你，像UI控制一样，在网络的这个层级进行更改和操作可能会产生不良影响，导致干扰、损坏甚至是系统崩溃。即使你的客户鼓励你深入探查，我还是建议你谨慎行事，因为更改的副作用通常只有在为时已晚时才会显现出来。
- en: At this point, we have full access to the network, from top to bottom. Now,
    we can move and push any changes and configurations we want. We completely own
    the system, and that is part of the rush that comes with the career of a pentester.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经从上到下完全访问了网络。现在，我们可以移动并推动任何我们想要的变更和配置。我们完全控制了系统，这也是渗透测试人员职业中带来的激动的一部分。
- en: Summary
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we segmented our lab network further by adding a new interface
    to our firewall. We then utilized the skills we learned about in [*Chapter 11*](B16321_11_Epub_AM.xhtml#_idTextAnchor130),
    *Whoot…. I Have To Go Deep*, to gain a dynamic shell and launch a remote desktop
    session with proxy chains to our workstation victim. After this, we discussed
    the various SCADA and DCS systems that we could encounter in our pentesting journeys.
    We reused various credentials to exploit the UI of our SCADA system before capitalizing
    on a misconfigured FTP server and, in turn, gaining a reverse shell back to our
    attacking box. We exploited the system right up to the control hardware and in
    doing so, discussed the pitfalls of going deeper into the control plane. Gaining
    this deep of a foothold should suffice for 99.99% of the engagements that you
    will be part of.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们通过向防火墙添加新接口进一步分割了我们的实验室网络。然后，我们利用我们在[*第11章*](B16321_11_Epub_AM.xhtml#_idTextAnchor130)，*深入……我要深入了*中学到的技巧，获取了一个动态shell，并通过代理链到我们的工作站受害者启动了远程桌面会话。之后，我们讨论了我们在渗透测试旅程中可能遇到的各种SCADA和DCS系统。我们重复使用各种凭据来利用我们的SCADA系统的用户界面，然后利用配置错误的FTP服务器，反向获取了我们攻击盒的shell。我们利用系统直至控制硬件，并在此过程中讨论了深入控制平面的风险。获取这么深入的立足点应该足以应对你参与的99.99%的任务。
- en: 'Understanding the technology and the ramifications and outcome of going deeper
    will be an important addition to the out brief report. We will do this in the
    next chapter, and this is the final stage of all pentesting engagements: the reporting
    phase.'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 理解技术和深入的后果及其结果将成为总结报告中的重要补充。我们将在下一章中进行这一步骤，这是所有渗透测试任务的最后阶段：报告阶段。
