- en: 'Chapter 4: Designing and Protecting Network Security'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章：设计与保护网络安全
- en: In all honesty, the end of the previous chapter and the beginning of this chapter
    is an illusion. It's definitely the case that we are building on top of the knowledge
    we gained from the previous chapter, and we're going to lean on that chapter heavily
    in this one. The reason for this is that because we had covered so much already
    in the previous chapter, my publishers and I decided it was necessary to create
    an imaginary boundary that signaled the end of one topic and the beginning of
    another. I'm going to do my best to not repeat myself, unless the point is worth
    repeating.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 坦白说，上一章的结尾和本章的开头其实是一个错觉。事实确实是，我们在上一章中学到的知识将在这一章中得以延续，我们将在这一章中大量依赖上一章的内容。之所以如此，是因为上一章已经涵盖了很多内容，我和出版商决定创建一个虚拟的边界，标志着一个话题的结束和另一个话题的开始。我会尽力避免重复自己，除非某个点值得重复。
- en: Now that we've got the "ambiguous and invisible chapter boundary" problem out
    of the way, I can get into the housekeeping for this chapter. In this chapter,
    the goal is to learn how we can combine our knowledge of threats, vulnerabilities,
    and mitigations from the previous chapter, along with our knowledge of risk management
    and governance, to create secure-by-design network architectures (or at least
    something that is as close to secure-by-design as possible, while balancing usability).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经解决了“模糊和看不见的章节边界”问题，我可以开始本章的整理工作了。本章的目标是学习如何将上一章关于威胁、漏洞和缓解措施的知识与我们对风险管理和治理的理解结合起来，创建“安全设计”网络架构（或者至少是尽可能接近安全设计的架构，同时平衡可用性）。
- en: We'll talk about securing the various network components with design choices
    and mitigations to bolster your organization's network security. I also aim to
    discuss how we might ensure we secure various network components when those components
    aren't under our control anymore. As we all continue our combined migration to
    the cloud, like a digital Oregon Trail – no, not the video game – we will venture
    into new challenges and reduced control. The main difference between the current
    cloud migration and the Americans heading west in the 1830s is that in the move
    to the cloud, fewer people will die of dysentery. Well, at least I hope that's
    the case.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论如何通过设计选择和缓解措施来保护各种网络组件，从而加强组织的网络安全。我还将探讨当这些网络组件不再由我们控制时，如何确保它们的安全。随着我们共同向云端迁移，就像一条数字版的“俄勒冈小道”——不是那款电子游戏——我们将面临新的挑战和控制的减少。当前云迁移与1830年代美国人向西迁徙的主要区别在于，向云迁移过程中，死亡人数由于痢疾的原因会大大减少。嗯，至少我希望是这样。
- en: After that, we're going to look at implementing secure communications between
    any combination of assets and users, including any combination of cloud and on-premises.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨如何在任何资产和用户的组合之间实现安全通信，包括云与本地的任何组合。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Designing secure network architectures
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计安全的网络架构
- en: Strategies for protecting network security
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护网络安全的策略
- en: So, let's get started!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们开始吧！
- en: Designing secure network architectures
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计安全的网络架构
- en: If your InfoSec learning path has been anything like mine, a load of your time
    has been spent learning about networking. Do **Chief Information Security Officers**
    (**CISOs**) talk about networking very often in the day to day? Well, yes… networking
    is mentioned in the LinkedIn/evening drinks/corporate "networking" type of way,
    but they're very rarely talking about **TCP/IP**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的信息安全学习路径和我一样，你可能已经花费了大量时间学习网络相关内容。**首席信息安全官**（**CISO**）在日常工作中经常谈论网络吗？嗯，是的……网络通常在LinkedIn/晚间饮品/公司“社交”活动中提到，但他们很少讨论**TCP/IP**。
- en: Does that suggest that you shouldn't know about networking? Or that you should
    forget all that you've learned? Of course not. By knowing about these topics,
    and understanding the likelihood of a threat exploiting a vulnerability in network
    devices or protocols, along with the impact of that event, will enable you to
    make more informed decisions for mitigations, rooted in the principles of risk
    management.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是否意味着你不应该了解网络？或者应该忘记你学过的所有内容？当然不是。通过了解这些话题，并理解威胁利用网络设备或协议中的漏洞的可能性，以及该事件的影响，你将能够做出更明智的缓解决策，这些决策是基于风险管理原则的。
- en: In my opinion, it's worth learning a bit of everything in InfoSec, regardless
    of the path you currently have your sights set on following. Learn about something
    that is happening in the world of InfoSec at the moment, or something that is
    going on in your organization. When you start to feel a level of diminishing returns
    on the time you're putting into it, reassess whether the topic is something you
    enjoy learning about or something you need to know, or if you can focus on something
    else for the time being.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，无论你当前的目标是什么，学习信息安全的各个方面都是值得的。了解一下当前信息安全领域的动态，或者你所在组织中发生的事情。当你发现自己在投入时间后回报递减时，重新评估这个话题是否是你真正喜欢学习的，还是你需要了解的，或者你是否可以暂时转向其他内容。
- en: Of course, the concept of network security is much more than just protocols,
    bits, bytes, and the systems that are associated with data in motion, but let's
    quickly cover some of the concepts and definitions we must be aware of, and ensure
    we're on the same page.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，网络安全的概念远不止是协议、位、字节以及与数据传输相关的系统，但我们还是快速梳理一下我们必须了解的一些概念和定义，确保我们对这些内容有一致的理解。
- en: Internet Protocol suite and the OSI model
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 互联网协议族和OSI模型
- en: There are two major models that I'd like to reference in this chapter to help
    you conceptualize how users and applications interface with nodes and network
    devices, in order to communicate with other nodes and networks, including over
    the internet. They are known as the **Internet Protocol suite** and the **OSI
    model**.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我想提到两个主要模型，帮助你理解用户和应用程序如何与节点和网络设备交互，从而与其他节点和网络进行通信，包括通过互联网进行通信。它们分别是**互联网协议族**和**OSI模型**。
- en: By understanding both, and how they overlap, we can get a better idea of how
    to categorize, and therefore protect and govern, the various devices in our estate.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 通过理解这两个模型及其重叠部分，我们可以更好地理解如何对各种设备进行分类，并因此能够更好地保护和管理我们的设备。
- en: TCP/IP suite
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: TCP/IP协议族
- en: The **TCP/IP suite** or the **Internet Protocol suite** is a group of communications
    protocols and a model that is used on computer networks and the internet, and
    its importance to this topic cannot be understated. Development funding for this
    protocol stack came from **DARPA**, the **Defense Advanced Research Projects Agency**
    in the *United States Department of Defense*. This is a bit of fun trivia, if
    your idea of "fun trivia" includes questions such as "Which military agency developed
    the Internet Protocol suite?"
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**TCP/IP协议族**或**互联网协议族**是一组通信协议和一个模型，广泛应用于计算机网络和互联网，其在本主题中的重要性不可忽视。该协议栈的开发资金来自**DARPA**，即*美国国防部高级研究计划局*。这是一个有趣的小知识，如果你认为“有趣的小知识”包括类似“哪个军事机构开发了互联网协议族”这样的问题的话。'
- en: It's referred to as **TCP/IP** because of the **Transmission Control Protocol**
    and **Internet Protocol** – **TCP** and **IP**, respectively – both of which are
    two of the foundational protocols used in the model, and therefore two of the
    foundational protocols used on the internet.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 它被称为**TCP/IP**，因为**传输控制协议**（**TCP**）和**互联网协议**（**IP**）是该模型中两个基础协议，因此也是互联网使用的两个基础协议。
- en: 'TCP/IP gives us end-to-end communication, from being turned into packets, to
    being addressed, to being transmitted, routed, and ultimately received. In the
    TCP/IP model, there are four "layers" that split various protocols into classifications
    related to their scope:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**TCP/IP**为我们提供了端到端的通信，从数据被分包、地址分配、传输、路由，最终接收。在**TCP/IP模型**中，有四个“层”，将各种协议分为不同的类别，根据它们的作用范围进行分类：'
- en: Communication methods for data remaining inside a single network segment is
    done in the **link layer** or **network access layer**.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据在单一网络段内传输时的通信方法是在**链路层**或**网络接入层**中完成的。
- en: Communication methods for data that traverses between independent networks is
    done in the **internet layer**.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨越独立网络之间传输数据的通信方法是在**互联网层**中完成的。
- en: Communication between hosts is done in the **transport layer** or **host-to-host
    layer**.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机之间的通信是在**传输层**或**主机到主机层**中完成的。
- en: Communication between processes is done in the **application layer**.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进程之间的通信是在**应用层**中完成的。
- en: The TCP/IP Protocol Suite abides by standards that have been set out and maintained
    by the Internet Engineering Task Force.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**TCP/IP协议族**遵循由互联网工程任务组（IETF）制定并维护的标准。'
- en: 'If we wanted to make a diagram using the Internet Protocol suite layers, showing
    an application on a host sending data to another host''s application over two
    routers, it could look something like this, where **Host A** has the communication
    travel down the TCP/IP data flow layers, and then up and down the link and internet
    layers of two routers, before traveling all the way back up to the application
    layer of **Host B**:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要使用互联网协议套件层来绘制一个图表，展示一个主机的应用程序通过两个路由器发送数据到另一个主机的应用程序，它可能会像这样，**主机 A** 的通信会沿着
    TCP/IP 数据流层向下，然后上下经过两个路由器的链路层和互联网层，最后传输到**主机 B** 的应用层：
- en: '![Figure 4.1 – Diagram of a TCP/IP data flow'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.1 – TCP/IP 数据流图'
- en: '](img/Figure_4.01_B16611.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.01_B16611.jpg)'
- en: Figure 4.1 – Diagram of a TCP/IP data flow
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1 – TCP/IP 数据流图
- en: Now that we've reviewed the TCP/IP protocol suite, it's definitely worth delving
    into a different way of looking at the same concept, in what is known as *the
    OSI model*.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经回顾了 TCP/IP 协议族，绝对值得从另一种方式深入了解相同的概念，即所谓的*OSI 模型*。
- en: OSI model
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OSI 模型
- en: 'Another model for standardizing communications in a computing system is the
    **Open Systems Interconnection** model, or **OSI** model. It is a standardization
    of communications functions, regardless of any internal structure or technology.
    The OSI model has seven layers, as opposed to TCP/IP''s four:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种标准化计算机系统通信的模型是**开放系统互联**模型，或称**OSI**模型。它是通信功能的标准化，与内部结构或技术无关。OSI 模型有七层，而
    TCP/IP 模型有四层：
- en: '**Layer 1 – Physical**: Handles converting digital bits into radio, electrical,
    or optical signals, with voltage levels, timing, maximum distance, modulation,
    physical connectors, layouts of pins, and cable specs.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第一层 – 物理层**：负责将数字位转换为无线电、电气或光学信号，处理电压级别、时序、最大距离、调制、物理连接器、引脚布局和电缆规格等问题。'
- en: '**Layer 2 – Data Link**: Handles the connection between two nodes communicating
    directly with one another. It can correct errors from the physical layer and is
    able to control the connection status, such as establishing or terminating a connection,
    along with controlling the flow of data.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第二层 – 数据链路层**：处理两个直接通信节点之间的连接。它能够纠正物理层的错误，并能够控制连接状态，例如建立或终止连接，同时控制数据流量。'
- en: '**Layer 3 – Network**: Handles the connection between two nodes in separate
    networks, potentially using routing via other nodes. It can also handle larger
    messages between two local nodes than the data link layer can, by splitting the
    messages into fragments and delivering those separately.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第三层 – 网络层**：处理两个位于不同网络中的节点之间的连接，可能通过其他节点进行路由。它还可以通过将消息拆分为片段并单独传输，来处理比数据链路层能处理的更大的消息。'
- en: '**Layer 4 – Transport**: Gives us the ability to transfer messages from two
    nodes in the form of variable-length data sequences. It has controls in place
    for error handling and data flow, and can keep track of messages that succeed
    and fail, allowing the failed segments to be resent. It is usually agreed that
    the TCP and UDP protocols sit in Layer 4\.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第四层 – 传输层**：使我们能够以变长的数据序列的形式在两个节点之间传输消息。它具有错误处理和数据流控制功能，并且可以跟踪成功和失败的消息，允许重新发送失败的片段。通常认为
    TCP 和 UDP 协议位于第四层。'
- en: '**Layer 5 – Session**: Creates, maintains, and terminates the connections between
    local and remote applications from Layer 7\. Usually, Layer 5 is implemented in
    applications that use **remote procedure calls**, or **RPCs**, thus treating programs
    that are on another node or network as though they were local applications. It
    handles requests from Layer 6 before passing them to Layer 4\.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第五层 – 会话层**：创建、维护并终止本地和远程应用程序之间的连接，位于第七层下方。通常，第五层是在使用**远程过程调用**（**RPC**）的应用程序中实现的，从而使得位于另一个节点或网络上的程序被当作本地应用程序处理。它在将请求传递到第四层之前，先处理来自第六层的请求。'
- en: '**Layer 6 – Presentation**: Translates between network and application formats,
    transforming the data from the previously mentioned layers into a suitable format
    that is acceptable based on the destination application. For this reason, it''s
    commonly referred to as the *Syntax* layer. It can also compress data, and can
    map the transfer between applications directly, preventing the ability to "pass
    down the protocol stack" to the previously mentioned layers.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第6层 – 表示层**：在网络格式和应用格式之间进行转换，将前面提到的层中的数据转换为根据目标应用程序可接受的格式。因此，它通常被称为*语法层*。它还可以压缩数据，并且可以直接映射应用程序之间的传输，防止“传递协议栈”到前面提到的层。'
- en: '**Layer 7 – Application**: Handles communication with the software application
    that a user also interacts with. It is responsible for showing the user the relevant
    data that has been transmitted.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第7层 – 应用层**：处理与用户交互的软件应用程序的通信。它负责展示用户已经传输的相关数据。'
- en: 'To help conceptualize what type of data is handled by which layer in the OSI
    model, I''ve included the following diagram:'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了帮助理解OSI模型中各层处理的数据类型，我加入了以下图示：
- en: '![Figure 4.2 – Diagram of the OSI model'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.2 – OSI模型图'
- en: '](img/Figure_4.02_B16611.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.02_B16611.jpg)'
- en: Figure 4.2 – Diagram of the OSI model
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 – OSI模型图
- en: 'If we were to look at the OSI model and see how it might interact between applications
    over the internet in a similar way to how we looked at the Internet Protocol suite,
    we could make a diagram that looks like this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看OSI模型，看看它是如何在互联网上与应用程序进行交互的，类似于我们查看互联网协议套件的方式，我们可以做出如下图：
- en: '![Figure 4.3 – Flow for the OSI model'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.3 – OSI模型的流程'
- en: '](img/Figure_4.03_B16611.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.03_B16611.jpg)'
- en: Figure 4.3 – Flow for the OSI model
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3 – OSI模型的流程
- en: So, if we were to compare the two, meaning the Internet Protocol suite and the
    OSI model, what would we find? Let's get into it!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如果我们要比较这两个模型，也就是互联网协议套件和OSI模型，我们会发现什么呢？让我们深入探讨吧！
- en: Comparing the Internet Protocol suite and the OSI model
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 比较互联网协议套件和OSI模型
- en: 'When comparing the two different models, we can see a few things:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在比较这两个不同的模型时，我们可以看到一些情况：
- en: The OSI model separates the activities in the TCP/IP application layer into
    the application, the presentation, and (partially) the session layers.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OSI模型将TCP/IP应用层的活动分为应用层、表示层和（部分）会话层。
- en: The host-to-host/transport layer in TCP/IP is handled with the remainder of
    the session layer, and the transport layer in the OSI model.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在TCP/IP中，主机到主机/传输层由会话层的其余部分以及OSI模型中的传输层处理。
- en: The TCP/IP internet layer is only a part of the OSI's network layer, while the
    remainder of the network layer, along with the entire data link and physical layers
    from OSI, fall into TCP/IP's network access layer.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP/IP的互联网层仅是OSI网络层的一部分，而网络层的其余部分，以及OSI的整个数据链路层和物理层，归入TCP/IP的网络接入层。
- en: 'If we wanted to make a diagram to compare the two models, you might come up
    with something that looks like this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要制作一张图来比较这两个模型，可能会得出如下所示的图：
- en: '![Figure 4.4 – OSI versus TCP/IP'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.4 – OSI与TCP/IP'
- en: '](img/Figure_4.04_B16611.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.04_B16611.jpg)'
- en: Figure 4.4 – OSI versus TCP/IP
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4 – OSI与TCP/IP
- en: Various concepts Internet Protocol suite and components surrounding networks
    exist that we haven't covered yet, such as how TCP works, or UDP, or what ports
    are. Let's dip our toe into that now.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网协议套件和围绕网络的各种概念我们还未涵盖，例如TCP是如何工作的，或者UDP是什么，端口又是什么。现在让我们稍微了解一下这些内容。
- en: Network components and protocols
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络组件和协议
- en: '`HTTP/1.1` and `HTTP/2` application layer protocols for the web. Recently,
    it was decided that their successor, `HTTP/3`, would instead utilize the *QUIC
    protocol*, which has **UDP** at its heart.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`HTTP/1.1`和`HTTP/2`是网页应用层协议。最近决定它们的继任者`HTTP/3`将会使用*QUIC协议*，其核心是**UDP**。'
- en: 'TCP is known for its three-way handshake, which is used in establishing a connection.
    Imagine that a client wants to connect to a server that has a passively open port
    for connections. This is what happens:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: TCP以其三次握手而闻名，这个过程用于建立连接。假设客户端想要连接到一个有被动开放端口的服务器，连接过程如下：
- en: The client sends a message to the server, setting a sequence number and creating
    an "Active Open" connection, otherwise known as a **SYN**, *or Synchronize*.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端向服务器发送消息，设置序列号并建立一个“主动打开”的连接，也就是**SYN**，*或同步*。
- en: The server responds to the client's **SYN** message with an acknowledgment,
    incrementing the client's sequence number by 1, and setting its own sequence number,
    otherwise known as a **SYN-ACK**.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器回复客户端的**SYN**消息并进行确认，将客户端的序列号加 1，并设置自己的序列号，这就是所谓的**SYN-ACK**。
- en: The client then replies to the server, with both the incremented sequence number
    sent by the server, along with its own sequence number incremented by 1, acknowledging
    that the connection has been made. This is known as the **ACK**, *or Acknowledge*.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端随后回复服务器，发送由服务器增加的序列号，以及自己将序列号加 1 的回复，确认连接已经建立。这就是**ACK**，*或者称为确认*。
- en: 'Now that you definitely know this, you''re ready for a TCP/IP joke:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经完全理解了这些，你准备好听一个 TCP/IP 笑话了：
- en: '![Figure 4.5 – Elon Musk tells a joke'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.5 – 埃隆·马斯克讲笑话'
- en: '](img/Figure_4.05_B16611.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.05_B16611.jpg)'
- en: Figure 4.5 – Elon Musk tells a joke
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 埃隆·马斯克讲笑话
- en: 'To terminate a connection on TCP, a *four-way handshake* must occur, with each
    side able to initiate the termination. For an example, if a client wants to terminate
    a connection to a server, this is what happens:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要终止 TCP 连接，必须进行*四次握手*，每一方都能够发起终止连接的操作。例如，如果客户端想要终止与服务器的连接，发生的过程是这样的：
- en: The client sends a **FIN** packet, which is an indication to gracefully terminate
    the connection.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端发送**FIN**数据包，这是一个优雅地终止连接的标志。
- en: The server responds with an **ACK** packet.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器回复一个**ACK**数据包。
- en: The server sends its own **FIN** packet.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器发送自己的**FIN**数据包。
- en: The client responds with an **ACK** packet.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端回复一个**ACK**数据包。
- en: The client stops accepting new connections, waits for a timeout, and then finally
    closes the connection.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端停止接受新的连接，等待超时，然后最终关闭连接。
- en: Linux operating systems handle things a bit differently, sending an **RST**
    packet instead of a **FIN**, which is an immediate termination, rather than gracefully
    terminating the **FIN** packet.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 操作系统的处理方式有所不同，发送**RST**数据包而不是**FIN**，这是立即终止连接，而不是优雅地终止**FIN**数据包。
- en: Additionally, *steps 2* and *3* can sometimes be combined into a **FIN & ACK**
    packet being sent at once.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，*步骤 2* 和 *步骤 3* 有时可以合并成一个同时发送的**FIN & ACK**数据包。
- en: The **User Datagram Protocol** (**UDP**) is a member of the Internet Protocol
    suite, even if it doesn't make an appearance in the name of the protocol the way
    TCP does. UDP lacks a handshake to confirm a connection, and is used under the
    assumption that any errors or corrections aren't necessary, which removes any
    processing requirement from the network interface. Packets can be received in
    an order that isn't congruent with the way they were sent and packets can be dropped,
    and for that reason it is seen as less reliable, but valuable for speed. This
    means that UDP is faster and more lightweight than TCP, and that it is popular
    in online games and video chats.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户数据报协议**（**UDP**）是互联网协议套件的一个成员，尽管它不像 TCP 那样出现在协议名称中。UDP 没有确认连接的握手，假设没有必要进行任何错误处理或更正，因此网络接口不需要进行任何处理。数据包可能以与发送顺序不同的顺序接收，数据包也可能丢失，因此它被认为不太可靠，但在速度方面具有优势。这意味着
    UDP 比 TCP 更快且更轻量，因此在在线游戏和视频聊天中非常受欢迎。'
- en: The`.org`, `.com`, `.net`, `.dk`, `.wtf`, and so on.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`.org`、`.com`、`.net`、`.dk`、`.wtf` 等等。'
- en: Common free DNS resolver services include Cloudflare (`1.1.1.1` and `1.0.0.1`),
    Google (`8.8.8.8` and `8.8.4.4`), Quad9 (`9.9.9.9` and `149.112.112.112`), and
    OpenDNS (`208.67.222.220` and `208.67.222.220`), among others. These serve to
    route the requests that are sent to specific domain names to their IP address
    counterparts.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 常见的免费 DNS 解析服务包括 Cloudflare（`1.1.1.1` 和 `1.0.0.1`）、Google（`8.8.8.8` 和 `8.8.4.4`）、Quad9（`9.9.9.9`
    和 `149.112.112.112`）、OpenDNS（`208.67.222.220` 和 `208.67.222.220`）等。这些服务将发送到特定域名的请求路由到其对应的
    IP 地址。
- en: '`32` bits, with four sets of numbers between the range of `0` and `255` (otherwise
    known as octets, or `8` bits); for example, from `0.0.0.0` to `255.255.255.255`,
    and everything in-between, such as `255.0.0.0`, `0.255.0.0`, or `108.177.8.63`.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`32` 位，包含四组介于 `0` 和 `255` 之间的数字（也称为字节，或 `8` 位）；例如，从 `0.0.0.0` 到 `255.255.255.255`，以及其中的一切，如
    `255.0.0.0`、`0.255.0.0` 或 `108.177.8.63`。'
- en: 'Internal IPv4 "blocks" are also determined: `10.0.0.0` to `10.255.255.255`
    contains 16,777,216 addresses that have been reserved for private networks. The
    same goes for `172.16.0.0` to `172.31.255.255` and everybody''s favorite, `192.168.0.0`
    to `192.168.255.255`.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 内部IPv4“块”也已确定：`10.0.0.0`到`10.255.255.255`包含16,777,216个地址，这些地址已被保留用于私有网络。同样适用于`172.16.0.0`到`172.31.255.255`和每个人都喜爱的`192.168.0.0`到`192.168.255.255`。
- en: '**IPv6** is a wild idea that hasn''t really taken off. In 2074, when it''s
    actually used, I''m sure there will be an author who is interested in going into
    the details of it. Until then, a casual understanding is fine, as long as it''s
    not part of your everyday work. It''s similar to IPv4 but has a larger number
    of possible addresses, and also has some features that help optimize routing.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**IPv6**是一个还没有真正普及的大胆设想。到2074年，当它真正被使用时，我相信会有一个作者对其细节感兴趣。在此之前，只要它不是你日常工作的一部分，简单了解就可以。它与IPv4相似，但拥有更多可能的地址，并且还具有一些帮助优化路由的特性。'
- en: '**Subnets** or subnetworks are subdivisions of an IP network. If you split
    your network into multiple networks, you''re subnetting. You can do this by grouping
    computers that belong to the same network into the same IP address group, thus
    improving your organization by partitioning a network address space into logical
    groups.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**子网**或子网络是IP网络的细分。如果你将网络划分为多个网络，那就是子网划分。你可以通过将属于同一网络的计算机分组到同一IP地址组中来实现，从而通过将网络地址空间划分为逻辑组来改善你的组织结构。'
- en: For example, you might have a network number for the first two octets, a subnet
    identifier for the third octet, and a host identifier for the final octet. You
    assign one subnet the routing prefix of `192.168.100.0/24` and another the routing
    prefix of `192.168.200.0/24`. This defines the first `24` bits (3 octets) as the
    network prefix and the final octet as the host address space. There are 256 addresses
    for each of the subnetworks, thus creating a more organized structure for your
    network.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可能会为前两个八位组分配一个网络编号，为第三个八位组分配一个子网标识符，为最后一个八位组分配一个主机标识符。你为一个子网分配路由前缀`192.168.100.0/24`，为另一个子网分配路由前缀`192.168.200.0/24`。这定义了前`24`位（3个八位组）作为网络前缀，最后一个八位组作为主机地址空间。每个子网有256个地址，从而为你的网络创建了一个更有组织的结构。
- en: 'Let''s take a look at a visual breakdown of this concept:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下这个概念的可视化分解：
- en: '![Figure 4.6 – Subnets visualized'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.6 – 子网可视化'
- en: '](img/Figure_4.06_B16611.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.06_B16611.jpg)'
- en: Figure 4.6 – Subnets visualized
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6 – 子网可视化
- en: In large organizations, or various other scenarios, 256 addresses might not
    be enough for a subnet, so I have only used this as a simple example.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在大型组织或其他各种场景中，256个地址可能不足以满足一个子网的需求，因此我只是用这个作为一个简单的例子。
- en: Network ports
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络端口
- en: 'Communication endpoints in networks are called **ports**. Operating systems
    use logical "ports" to identify network service processes. Both TCP and UDP use
    port numbers to reach the logical endpoint. Some common port numbers that have
    been assigned by the **Internet Assigned Numbers Authority** (**IANA**) that are
    worth remembering off the top of your head are as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中的通信端点称为**端口**。操作系统使用逻辑“端口”来识别网络服务进程。TCP和UDP都使用端口号来访问逻辑端点。以下是由**互联网分配号码管理局**（**IANA**）分配的一些常见端口号，值得你记住：
- en: '**Port 20**: FTP data transfer'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 20**：FTP数据传输'
- en: '**Port 21**: FTP command-and-control'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 21**：FTP命令与控制'
- en: '**Port 22**: SSH, a secure shell'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 22**：SSH，一个安全的外壳'
- en: '**Port 23**: Telnet, a remote login service'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 23**：Telnet，一种远程登录服务'
- en: '**Port 25**: SMTP, mail routing'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 25**：SMTP，邮件路由'
- en: '**Port 53**: DNS, which is usually open'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 53**：DNS，通常是开放的'
- en: '**Port 80**: HTTP, used for pages without TLS/SSL/HTTPS'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 80**：HTTP，用于没有TLS/SSL/HTTPS的网页'
- en: '**Port 110**: POP3, for mail clients'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 110**：POP3，用于邮件客户端'
- en: '**Port 123**: NTP, for network time'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 123**：NTP，用于网络时间'
- en: '**Port 143**: IMAP, for mail'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 143**：IMAP，邮件传输'
- en: '**Port 161**: SNMP, for device management on networks'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 161**：SNMP，用于网络设备管理'
- en: '**Port 443**: HTTPS, for HTTP traffic with TLS/SSL/HTTPS'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口 443**：HTTPS，用于带有TLS/SSL/HTTPS的HTTP流量'
- en: This isn't to say that these port numbers are always associated with that type
    of protocol traffic, though. The thing is, you could have internal HTTP traffic
    on `8080`, `8081`, or `3000` (or pretty much any other port), depending on the
    web app framework you're using. It's important to note that the ports are always
    associated with a host IP address and the type of protocol it's using. If you
    wanted to reach a page on an internal Vue.JS web app that is being presented from
    a server with an IP address of `192.168.1.25` on port `8080`, you could navigate
    to it through your browser via `192.168.1.25:8080`, and it would open the web
    app's home page for you from that port, instead of via port `80` or `443`, which
    are the defaults for the browser.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说这些端口号总是与该类型的协议流量相关。问题在于，你可能会在`8080`、`8081`或`3000`（或者几乎任何其他端口）上有内部HTTP流量，这取决于你使用的Web应用框架。需要注意的是，端口始终与主机IP地址及其使用的协议类型相关。如果你想访问通过IP地址`192.168.1.25`并通过端口`8080`提供的内部Vue.JS
    Web应用程序的页面，你可以通过浏览器导航到`192.168.1.25:8080`，这样就会从该端口打开Web应用的主页，而不是通过默认的端口`80`或`443`，这通常是浏览器的默认端口。
- en: What I'm getting at is that these are common port number designations, but they're
    not rules.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，这些是常见的端口号指定，但它们并不是规则。
- en: The fact that it is possible to remotely access devices through protocols such
    as SSH is a risk that may need to be mitigated by your organization. The reason
    you might want to do this is because there are automated tools that are constantly
    trying to log into any public-facing IP address, and then trying to SSH on port
    `22`. In the name of time, they will generally try port `22`, and then move on
    to another low-hanging fruit if it doesn't work.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 通过像SSH这样的协议远程访问设备的事实是一个可能需要由你所在组织缓解的风险。你可能会这样做的原因是，因为有自动化工具会不断尝试登录任何面向公众的IP地址，然后尝试在端口`22`上进行SSH连接。为了节省时间，它们通常会先尝试端口`22`，如果不成功就会转向其他容易攻破的目标。
- en: In order to obfuscate the most common automated attacks on port `22`, you might
    decide to change your default port for SSH on your servers from `22` to a different
    port, for example. That way, if an automated tool is attempting to SSH into one
    of your servers, it has to figure out which port SSH is on. That being said, that's
    not enough to protect against SSH attacks, and it's definitely *security-through-obscurity*
    rather than a true mitigation, but it's the first step that can be taken for a
    *defense-in-depth* approach.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 为了混淆对端口`22`的最常见自动化攻击，你可以决定将服务器上默认的SSH端口从`22`更改为其他端口，例如。这样，如果有自动化工具试图通过SSH登录到你的服务器，它就必须弄清楚SSH所使用的端口。不过，值得注意的是，这并不足以保护免受SSH攻击，它显然是*通过模糊化实现安全*，而非真正的缓解措施，但这是*深度防御*方法中可以采取的第一步。
- en: One more thing to note about network ports is that you can have multiple services
    on one server. You can SSH into the server, but also access a web page and handle
    emails, DNS, SMTP, and so on.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的另一件事是，网络端口可以在一台服务器上承载多个服务。你可以通过SSH登录到服务器，但也可以访问网页并处理电子邮件、DNS、SMTP等。
- en: Next, we'll look at the various hardware devices and applications we can use
    for networking.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看我们可以用来进行网络连接的各种硬件设备和应用程序。
- en: Network devices and applications
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络设备和应用程序
- en: Networks have a wealth of various hardware and application-based peripherals,
    and it's worth looking into a few of the security-related ones here, to ensure
    we're on the same page. This will also help preface the next section, where we
    will be dealing with common attacks and tactics for defense and detection.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中有丰富的各种硬件和基于应用程序的外设，值得在这里关注一些与安全相关的设备，以确保我们在同一页。这也有助于为下一部分铺垫，我们将在其中讨论常见的攻击和防御及检测策略。
- en: Network switches
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络交换机
- en: A **network switch** is a piece of hardware that sits in-between your devices,
    through Ethernet connections typically, and forwards traffic to the appropriate
    device. It operates on *Layer 2 of the OSI model*, and uses the device's *MAC
    address* to forward data to the device. If the switch also has routing functionality,
    it could also operate on *Layer 3 of the OSI model*. These switches are usually
    called *Layer 3 switches*.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络交换机**是一种硬件设备，通常通过以太网连接位于你的设备之间，并将流量转发到适当的设备。它工作在*OSI模型的第二层*，并使用设备的*MAC地址*来转发数据到该设备。如果交换机还具备路由功能，它还可以在*OSI模型的第三层*上工作。这些交换机通常被称为*Layer
    3交换机*。'
- en: A key takeaway about switches is that they only send data to the appropriate
    address, rather than to every address connected to it, the way hubs do.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 关于交换机的一个关键要点是，它们仅将数据发送到适当的地址，而不像集线器那样将数据发送到所有连接的地址。
- en: Routers
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 路由器
- en: 'Thankfully, since we''ve already learned about ports, IP addresses, layers,
    and so on, we can quickly discuss how the internet works. Routers are devices
    that forward data between networks. In order words, routers direct internet traffic.
    Routers communicate with one another by forwarding data packets from their network
    to another network. Here, the network''s router receives the packet, reads the
    destination node address, and by using its routing table, either forwards it to
    another network or to the destination node that sits in its own network. Enterprise
    routers connect businesses to the core routers, optical fiber, and undersea cables.
    These are known as **the internet backbone**:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢我们已经学习了端口、IP 地址、层级等知识，我们可以快速讨论互联网如何运作。路由器是用于在网络之间转发数据的设备。换句话说，路由器负责引导互联网流量。路由器通过将数据包从一个网络转发到另一个网络进行通信。在这里，网络的路由器接收数据包，读取目标节点地址，并通过使用其路由表，将数据包转发到另一个网络或在自身网络中的目标节点。企业路由器将企业连接到核心路由器、光纤和海底电缆。这些被称为**互联网主干网**：
- en: '![Figure 4.7 – Undersea cables and data centers, also known as "the internet
    backbone"'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.7 – 海底电缆和数据中心，也被称为“互联网主干网”'
- en: '](img/Figure_4.07_B16611.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.07_B16611.jpg)'
- en: Figure 4.7 – Undersea cables and data centers, also known as "the internet backbone"
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – 海底电缆和数据中心，也被称为“互联网主干网”
- en: Isn't it funny that the internet's core infrastructure is cables lying at the
    bottom of oceans? As payments, electricity, and supply chains become more reliant
    on the internet, wouldn't you agree that it's crucial to ensure we reduce the
    risk of any **Single Point of Failures (SPFs)**? What are some of the vulnerabilities
    of this current setup?
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 难道不觉得互联网的核心基础设施是躺在海底的电缆很有趣吗？随着支付、电力和供应链对互联网的依赖越来越大，你是否同意确保我们减少任何**单点故障（SPF）**的风险至关重要？当前这一设置有哪些漏洞？
- en: Load balancers
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 负载均衡器
- en: A service that can delegate processing over an array of servers is known as
    a **load balancer**. This service helps improve efficiency and prevents you from
    over-utilizing one server, while underutilizing another that performs the same
    task. It helps to improve stability and increases speed.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一种可以将处理委派给一系列服务器的服务被称为**负载均衡器**。这种服务有助于提高效率，并防止你过度使用一台服务器，而让另一台执行相同任务的服务器处于低效状态。它有助于提高稳定性并加速速度。
- en: Proxies
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代理
- en: '**Proxies** are server applications or hardware that help the client make requests
    to the server rather than letting the client make requests directly to the server,
    and then pass back the response. Proxy server processing can include load balancing
    services or security processes that simplify the request and make it fit for the
    server to handle, or perform error handling to get the proxied information response.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**代理**是帮助客户端向服务器发起请求的服务器应用程序或硬件，而不是让客户端直接向服务器发起请求，然后返回响应。代理服务器处理可以包括负载均衡服务或安全流程，简化请求，使其适合服务器处理，或执行错误处理以获取代理的信息响应。'
- en: Firewalls
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 防火墙
- en: Another system that controls network traffic, this time based on security rules,
    is called a **firewall**. This includes both ingress and egress traffic, and protects
    your trusted network from sending and receiving traffic to ones you may not want
    to trust… such as the internet.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种基于安全规则控制网络流量的系统被称为**防火墙**。这包括入口和出口流量，保护你信任的网络免受与不信任的网络之间的数据传输……例如互联网。
- en: There are software firewalls, hardware appliance firewalls, and virtual appliance
    firewalls. Software (or host-based) firewalls are installed on the endpoint as
    a service or agent to control traffic and network resources.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 有软件防火墙、硬件防火墙设备和虚拟防火墙设备。软件（或基于主机的）防火墙作为服务或代理安装在终端上，用于控制流量和网络资源。
- en: 'Here''s a classic diagram of a firewall, visualized as a brick wall:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个经典的防火墙示意图，展示为一堵砖墙：
- en: '![Figure 4.8 – Classic firewall diagram'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.8 – 经典防火墙示意图'
- en: '](img/Figure_4.08_B16611.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.08_B16611.jpg)'
- en: Figure 4.8 – Classic firewall diagram
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8 – 经典防火墙示意图
- en: Having shown that, I'd also like to go into how firewalls work, from type to
    type, and how they go about allowing traffic in, not like a brick wall, but more
    like a bouncer at that nightclub you were never allowed into.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 展示了这些内容后，我还想探讨一下防火墙是如何工作的，从一种类型到另一种类型，并且它们是如何允许流量通过的，像不是一堵砖墙，而更像你永远不能进入的夜店的门卫。
- en: Packet filter firewalls
  id: totrans-133
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据包过滤防火墙
- en: Firewalls that act as proxies and inspect the data that is transmitted between
    endpoints are called **packet filter firewalls**. They refer to an access control
    list that determines the packets that are inspected, and what should be done to
    each. A few examples of the actions that can be taken could be to discard, forward,
    or send a *TCP RST* response to the sender and close the connection. You might
    think of these actions as firewall rules, which can filtered by source and destination
    IP addresses or ports, or by protocol.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 作为代理并检查端点之间传输数据的防火墙被称为**数据包过滤防火墙**。它们指的是一种访问控制列表，用来决定检查哪些数据包，以及应该对每个数据包做什么。可以采取的几种操作包括丢弃、转发或向发送方发送*TCP
    RST*响应并关闭连接。你可以将这些操作看作防火墙规则，可以根据源和目标IP地址、端口，或者协议进行过滤。
- en: 'Consider the benefits of this: you''re able to control which protocols communicate
    on which ports to which devices. That''s a brilliant step in the right direction
    for your information security posture. Your existing list of assets can include
    information that will allow you to fully understand what communication is required,
    and what communication isn''t required. This is powerful because often, a "flat
    network" increases your exposure to ransomware, network traversal, and privilege
    escalation. Imagine that you have created a rule in your firewall that blocks
    all communications between subnets, except port `3306` (which is *MySQL*) from
    `192.168.100.25` (which we can imagine is an application server address) to `192.168.200.50`
    (which we can assume is the MySQL server).'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一下这个好处：你能够控制哪些协议在哪些端口与哪些设备进行通信。这是朝着信息安全姿态迈出的一个重要一步。你现有的资产清单可以包括一些信息，帮助你完全理解需要什么样的通信，哪些通信是不必要的。这非常有力，因为通常情况下，"扁平化网络"会增加你对勒索软件、网络横向渗透和权限提升的暴露。想象一下，你在防火墙中创建了一条规则，阻止了子网之间的所有通信，除了端口`3306`（即*MySQL*）从`192.168.100.25`（假设是应用服务器地址）到`192.168.200.50`（假设是MySQL服务器）。
- en: Now, if a command is attempted from a different application, deleting all the
    data in the SQL database isn't effective because that command has been filtered
    by the firewall.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果一个来自不同应用的命令试图执行，删除SQL数据库中的所有数据并不起作用，因为这个命令已经被防火墙过滤掉了。
- en: Important note
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You should definitely also consider authentication, authorization, and preventing
    such actions that are out of the ordinary. This is a form of defense-in-depth.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 你绝对也应该考虑身份验证、授权，以及防止那些不寻常的行为。这是一种深度防御的形式。
- en: The *Deny-All, and then Whitelist approved traffic* technique is highly effective
    at preventing worms from spreading in your network, as well as lateral movement.
    However, in my experience, it is difficult to implement in organizations with
    complex networks that have components and applications communicating between devices
    that aren't recorded. Blocking that traffic could lead to an outage and cost the
    organization money, so some serious preparation is needed to fully understand
    what *stateful firewalls* are doing at any given time.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*拒绝所有，先列白名单允许的流量*技术在防止蠕虫在网络中传播以及横向移动方面非常有效。然而，根据我的经验，在拥有复杂网络、并且设备间有组件和应用在通信但这些通信未被记录的组织中，实施起来很困难。阻止这些流量可能会导致停机，并为组织带来成本，因此需要进行充分的准备，以完全理解*状态防火墙*在任何给定时刻的工作情况。'
- en: Connection tracking firewalls
  id: totrans-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 连接追踪防火墙
- en: '**Connection tracking firewalls**, or *stateful firewalls* (or *second-generation
    firewalls*) are similar to first-generation proxy/packet filter firewalls, but
    they retain information about communication between endpoints by keeping the IP
    addresses and port numbers from Layer 4\. This allows for an overall better understanding
    of how the nodes are interacting. Instead of inspecting each packet, it utilizes
    the data it has from the context of previously open connections. As a result,
    they have a performance advantage over the packet filtering firewalls as the bouncer
    is allowing the regulars straight into the bar, while asking the people he doesn''t
    know for ID.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**连接追踪防火墙**，或称为*有状态防火墙*（或*第二代防火墙*），与第一代代理/数据包过滤防火墙相似，但它通过保持第四层的IP地址和端口号来保留端点之间通信的信息。这使得它能够更全面地理解节点之间的交互方式。它不再检查每个数据包，而是利用从之前已打开连接中获取的上下文数据。因此，它们比数据包过滤防火墙具有更好的性能，因为守卫者允许常客直接进入酒吧，而要求不认识的人出示身份证。'
- en: Another advantage of stateful firewalls is that they protect against port scanning
    by only opening ports when they are required by specific incoming packets.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 有状态防火墙的另一个优点是，它们通过仅在特定的传入数据包需要时才开放端口，从而有效防止端口扫描。
- en: Unfortunately, with this power comes the ability to trick the firewall into
    thinking you're a trusted party by, for example, having some JavaScript on a website
    request information from the malicious actor's endpoint.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，这种强大的功能也意味着攻击者可以通过一些手段欺骗防火墙，让它认为你是一个受信任的方。例如，恶意网站上的JavaScript可能会请求从恶意端点获取信息。
- en: Application firewalls
  id: totrans-144
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 应用防火墙
- en: '**Application firewalls** (or, **Layer 7 Firewalls**) can control system calls
    to a service or app on a system, according to a policy that has been configured.
    It''s called a *Layer 7 Firewall* because it is able to control all the way up
    the OSI model to Layer 7, which is the application layer. They can be either host-based
    or network-based, and are able to protect against unwanted applications that are
    using a port that isn''t the standard IANA designation.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用防火墙**（或称为**第7层防火墙**）可以根据已配置的策略控制对系统中服务或应用的系统调用。它被称为*第7层防火墙*，因为它能够控制从OSI模型的第7层（即应用层）到更高层的所有内容。它们可以是基于主机的或基于网络的，能够防止使用非标准IANA指定端口的应用程序。'
- en: A **next-generation firewall** performs deep-packet inspection at the application
    layer in order to enable **intrusion prevention system** (**IPS**) functionality,
    *sandboxing*, *user identity management*, *web filtering*, and *web application
    firewall* tooling.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**下一代防火墙**在应用层进行深度数据包检测，以启用**入侵防御系统**（**IPS**）功能、*沙箱技术*、*用户身份管理*、*网页过滤*和*网页应用防火墙*工具。'
- en: Web application firewalls
  id: totrans-147
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 网页应用防火墙
- en: '**Web application firewalls** can protect your web apps from malicious users.
    The web app firewall handles HTTP traffic as a reverse proxy before it reaches
    the server, inspects the traffic, and uses policies to filter activity. This activity
    could include common web app exploitation techniques often used by malicious actors,
    such as CSRF, XSS, and SQL injection attacks, and enabling *rate limiting* helps
    prevent DoS and DDoS attacks from being effective.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '**网页应用防火墙**可以保护您的Web应用免受恶意用户攻击。Web应用防火墙作为反向代理处理HTTP流量，拦截到达服务器的流量，检查流量并使用策略过滤活动。这些活动可能包括恶意攻击者常用的常见Web应用利用技术，如CSRF、XSS和SQL注入攻击，启用*速率限制*有助于防止DoS和DDoS攻击生效。'
- en: Endpoint firewalls
  id: totrans-149
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 端点防火墙
- en: '**Endpoint firewalls** are application firewalls that protect against unauthorized
    connections. They will generally scan a process ID for the data packet and compare
    that against a built-in set of rules. They exist at the application layer, but
    filter connections between Layer 7 and the layers below. They might also be known
    as *socket filters* since they filter connections via socket calls on the host.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**端点防火墙**是保护系统免受未经授权连接的应用层防火墙。它们通常会扫描数据包的进程ID，并将其与内置的规则集进行比较。它们存在于应用层，但过滤层7和以下层之间的连接。它们也可能被称为*套接字过滤器*，因为它们通过主机上的套接字调用过滤连接。'
- en: The importance of firewall configuration
  id: totrans-151
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 防火墙配置的重要性
- en: As I mentioned earlier in this chapter, misconfiguring a firewall can cause
    serious issues in an organization, and getting it right is a highly important
    task. Understanding the way traffic moves in your networks, as well as designing
    a way in which it *should* move, is an imperative step in ensuring proper mitigation
    against risks in your organization.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我在本章前面提到的，错误配置防火墙可能会给组织带来严重问题，而正确配置是至关重要的任务。了解网络中流量的流动方式，并设计出流量**应该**流动的方式，是确保有效防范组织中风险的关键步骤。
- en: Tools are available to help inspect existing traffic and help you better understand
    exactly what the traffic might be used for. These tools are often also used by
    malicious actors once they're inside your network, as they are highly effective
    when used properly.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多工具可用于帮助检查现有流量，帮助你更好地理解流量的具体用途。这些工具通常也会被恶意攻击者在入侵网络后使用，因为它们在正确使用时非常有效。
- en: Sniffing tools
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 嗅探工具
- en: Tools available for inspecting network traffic, in order to better understand
    the nature of the communication, are considered **packet sniffers** or **packet
    capture** tools. A very well-known and highly utilized example of these tools
    would be **Wireshark**, a network protocol analyzer that can be used to understand
    networking issues or detect intrusions but can also be used to spy on network
    users, collect sensitive information, and exploit your network. Other examples
    include **tcpdump**, which runs on the command line, and **Ettercap**, a security
    tool that poisons the ARP table on the target machines, acting as a **Man-in-the-Middle**.
    We will discuss these terms and how to protect against these threats later in
    this chapter.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 用于检查网络流量的工具，以便更好地理解通信的性质，被称为**数据包嗅探器**或**数据包捕获**工具。一个非常著名且广泛使用的例子是**Wireshark**，这是一款网络协议分析工具，可以用来理解网络问题或检测入侵，但也可以被用来窃听网络用户，收集敏感信息，进而利用你的网络。其他例子包括在命令行中运行的**tcpdump**和一个安全工具**Ettercap**，它通过中毒目标机器上的ARP表，充当**中间人攻击**（Man-in-the-Middle）。我们将在本章后面讨论这些术语以及如何防范这些威胁。
- en: Network Intrusion Detection and Prevention
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络入侵检测与防御
- en: '**Intrusion Detection Systems** (**IDS**) are either software suites or devices
    that monitor a network for policy violations. **Network Intrusion Detection Systems**
    (**NIDS**) monitor network traffic, while **Host-based Intrusion Detection Systems**
    (**HIDS**) monitor operating system activity.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**入侵检测系统**（**IDS**）是用于监控网络中是否存在政策违规的软件套件或设备。**网络入侵检测系统**（**NIDS**）监控网络流量，而**基于主机的入侵检测系统**（**HIDS**）则监控操作系统活动。'
- en: Sometimes, these tools will utilize reputation-based algorithms to detect known
    malicious sources and destinations, or even machine learning models, to flexibly
    correlate based on a large dataset.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，这些工具会利用基于声誉的算法来检测已知的恶意来源和目的地，甚至使用机器学习模型，根据大量数据灵活地进行关联。
- en: A **Security Information and Events Monitoring** (**SIEM**) system would be
    collecting all of the events in your network from these IDSs and IPSs, and combining
    all of the metrics in order to correlate activities and determine if these are
    actually malicious or false alarms.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全信息与事件监控**（**SIEM**）系统会收集来自这些IDS和IPS的所有事件，并将所有度量数据结合在一起，以关联活动并确定这些活动是否真的恶意或是误报。'
- en: '**Intrusion Prevention Systems** (**IPS**) are devices that respond to detected
    threats and prevent the actor from performing the attempted action, either by
    reconfiguring the firewall rules or by modifying the content of the request to
    prevent exploitation.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**入侵预防系统**（**IPS**）是能够响应已检测到的威胁并防止攻击者执行尝试的操作的设备，方法包括重新配置防火墙规则或修改请求的内容以防止被利用。'
- en: VPNs and their uses
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: VPN及其用途
- en: '**Virtual** create a virtual boundary to allow users in a public network to
    create, read, update, and delete data in the same way they would be able to if
    they were in a private network. Imagine a tunnel from a user''s home to a corporate
    office. If the user sends a request through the tunnel, the response comes back
    through the tunnel. Generally speaking, that communication is protected from any
    sniffing via encryption.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟**创建一个虚拟边界，使得公网上的用户能够像在私有网络中一样创建、读取、更新和删除数据。想象一下从用户家到公司办公室的隧道。如果用户通过隧道发送请求，响应也会通过隧道返回。一般来说，这种通信通过加密技术受到保护，可以防止任何嗅探。'
- en: VPNs are commonly used by businesses to allow distributed teams to work in a
    shared environment, but other uses have appeared. For example, if a government
    prevents their citizen's internet connections from being able to access Facebook
    IP addresses, a user could, alternatively, send a request through a VPN connection
    to a PC in another country, which isn't owned by Facebook, which then requests
    and passes on the information from the Facebook servers to the end user.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: VPN 通常被企业用来允许分布式团队在共享环境中工作，但也出现了其他用途。例如，如果一个政府阻止其公民的互联网连接访问 Facebook 的 IP 地址，用户可以通过
    VPN 连接向其他国家的电脑发送请求（该电脑不属于 Facebook），然后请求并转发 Facebook 服务器上的信息给最终用户。
- en: Content delivery networks
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内容分发网络
- en: '**Content delivery networks** (**CDNs**), are designed to provide low-latency,
    high-availability access to your servers'' data by geographically distributing
    various proxy servers around the world. If you have a user in Australia, for example,
    they''ll reach out to their nearest server in Sydney, which both holds a cache
    for much of the content on your host server and performs a request to your server
    for the content it doesn''t have.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**内容分发网络**（**CDN**）旨在通过在全球各地地理分布多个代理服务器，为您的服务器数据提供低延迟、高可用性的访问。例如，如果您在澳大利亚的用户，他们将连接到悉尼的最近服务器，该服务器不仅缓存了您主机服务器上大部分内容，还会向您的服务器请求它没有的内容。'
- en: Most of the web traffic that you request daily is actually served by a CDN cache,
    with the latest (locally unseen) content being the only thing served from the
    source host. Oftentimes, CDN providers supplement their service with security
    tools for protecting against web application exploitation tactics and denial of
    service attacks.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您每天请求的大多数网页流量实际上是由 CDN 缓存提供的，只有最新（本地未见过的）内容才会从源主机提供。通常，CDN 提供商会为防御 Web 应用程序利用技巧和拒绝服务攻击提供安全工具，来增强他们的服务。
- en: On that note, let's look into methods for attacking systems and how we, as information
    security professionals, may defend against those attacks.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这个，让我们研究一下攻击系统的方法，以及作为信息安全专业人员，我们如何防御这些攻击。
- en: Attacks, defense, and detection
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 攻击、防御与检测
- en: So, if you put your hacker hoodie on and seriously think about it, you might
    be able to dream up a couple ways to exploit these systems. How would you go about
    doing that? When we're looking at methods malicious actors may use to compromise
    the security of your organization's assets, there are new techniques being utilized
    continually, but most of the classic techniques still work. I'm going to use this
    section to go over a few of the most common attack techniques and their mitigations.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你戴上黑客的连帽衫，认真思考一下，你可能能想出几种方式来利用这些系统。你会怎么做呢？当我们查看恶意行为者可能用来危害您组织资产安全的方法时，新的技术持续被采用，但大多数经典技术仍然有效。我将利用这一部分讲解一些最常见的攻击技巧及其缓解措施。
- en: Man-in-the-Middle attacks
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 中间人攻击
- en: '**Man-In-The-Middle** (**MITM**) attacks are where the malicious actor secretly
    sits "in the middle" of your communications, passing information on after potentially
    reading or altering the message. If the malicious actor in the middle is reading
    the messages, it''s also known as *eavesdropping.*'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**中间人攻击**（**MITM**）是指恶意行为者秘密地坐在您通讯的“中间”，在潜在地阅读或篡改消息后转发信息。如果中间的恶意行为者在阅读消息，这也被称为*窃听*。'
- en: MITM defense and detection
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MITM 防御与检测
- en: When looking at mitigating against MITM attacks, we need to look at cryptography.
    Cryptography can offer authentication, proving mathematically that the source
    of the message was legitimate, as well as proof of integrity, which can mathematically
    prove that the message hasn't been altered.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑如何减轻 MITM 攻击时，我们需要关注密码学。密码学可以提供认证，数学上证明消息的来源是合法的，同时也能提供完整性证明，数学上证明消息没有被篡改。
- en: In order for this to work, you'll need a way to exchange keys or certificates,
    for example, a public key infrastructure, as we see in TLS traffic. If it can't
    be proven that the identity of the source or destination is valid, the session
    is ended, and communication stops. The weakness in this solution is that security
    is lost in the event that the Certificate Authority, which issues the cryptographic
    certificates, is compromised.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让这种攻击有效，你需要一种交换密钥或证书的方式，例如我们在 TLS 流量中看到的公钥基础设施。如果无法证明源或目的地的身份有效，连接会被终止，通信也会停止。这个解决方案的弱点在于，如果颁发加密证书的证书颁发机构被攻破，安全性就会丧失。
- en: If you are capturing and analyzing your organization's network traffic, you
    would be able to gather information about each server your network interacts with,
    such as the source IP address, DNS name, X.509 certificate, Certificate Authority,
    and whether other clients have the same certificate.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在捕获并分析你组织的网络流量，你将能够收集关于每个你网络交互的服务器的信息，比如源 IP 地址、DNS 名称、X.509 证书、证书颁发机构以及其他客户端是否拥有相同的证书。
- en: DNS hijacking
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DNS 劫持
- en: '**DNS hijacking** is the act of performing DNS resolution with a **rogue DNS
    server**. If you, as the attacker, can get a computer, a server, or a router to
    perform a DNS lookup to a DNS server that has been poisoned or is under your control,
    rather than one of the authentic public ones we''ve mentioned previously, we can
    make it believe they''re interacting with the legitimate service. Sometimes, this
    is called **pharming**, but the term didn''t really catch on the way **phishing**
    did.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '**DNS 劫持**是通过**恶意 DNS 服务器**执行 DNS 解析的行为。如果你作为攻击者，能够让一台计算机、服务器或路由器将 DNS 查询发送到一个已经被污染或在你控制下的
    DNS 服务器，而不是我们之前提到的那些真实的公共 DNS 服务器，我们就可以让它认为它正在与合法服务进行交互。有时候，这种行为被称为**药物攻击（pharming）**，但这个术语并不像**网络钓鱼（phishing）**那样广泛流行。'
- en: DNS hijacking defense
  id: totrans-178
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DNS 劫持防御
- en: Using the previously mentioned DNS servers, such as those from Cloudflare, Google,
    and OpenDNS, with `53`, unencrypted, so it's not end-to-end encrypted, and since
    TLS may not implement the entire route properly, it doesn't guarantee privacy.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 使用之前提到的 DNS 服务器，比如 Cloudflare、Google 和 OpenDNS 的服务器，端口是 `53`，没有加密，因此并不是端到端加密的，而因为
    TLS 可能无法正确实现整个路由，所以它不能保证隐私。
- en: Additionally, webmasters can create certain entries for their website's **DNS
    records**, which protect against hijacking on their domain, but that's not a very
    scalable approach and relies on the providers being proactive.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，站长可以为自己网站的**DNS 记录**创建某些条目，以防止他们的域名遭到劫持，但这不是一个很具可扩展性的方法，而且还依赖于服务提供商的主动性。
- en: ARP spoofing
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ARP 欺骗
- en: With **ARP spoofing**, a mapping between a **MAC address** and an **IP address**
    in the **ARP table** is changed, but the table continues to act as a validator
    and as a facilitator for connecting a source to a destination. **ARP spoofing**
    is either done to perform a *DoS* attack by directing all traffic requested from
    several IPs to one device MAC address, or a *MITM* attack, such as modifying traffic,
    stealing session IDs, and more.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**ARP 欺骗**，会改变**ARP 表**中**MAC 地址**和**IP 地址**之间的映射关系，但表格仍然作为验证器并帮助连接源和目标。**ARP
    欺骗**要么是为了执行*拒绝服务（DoS）*攻击，通过将来自多个 IP 的所有流量引导到一个设备的 MAC 地址上，要么是为了执行*中间人（MITM）*攻击，比如修改流量、窃取会话
    ID 等等。
- en: Sometimes, ARP spoofing is done for redundancy purposes, to ensure that when
    a server goes down, another is able to step in. Another legitimate use case for
    this technique is being able to debug and analyze traffic between two hosts while
    using a switch, as switch traffic is not transparent/replicated across all the
    endpoints on the network.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，ARP 欺骗会为了冗余目的而使用，以确保在服务器出现故障时，其他服务器能够接替其工作。这个技术的另一个合法用途是在使用交换机时能够调试和分析两台主机之间的流量，因为交换机的流量并不是透明的/不会在网络上所有端点之间复制。
- en: Imagine that a user is monitoring **Host C**. If they want to watch traffic
    go from **Host A** to **Host B**, they can set **A's** ARP to consider **B's**
    MAC address as **C's** actual MAC, and then set **B** to consider **A's** MAC
    address as **C's** actual MAC, and allow for **C** to forward the packets. At
    this point, they have a MITM situation.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，有一个用户正在监视**C 主机**。如果他们想要观察从**A 主机**到**B 主机**的流量，他们可以设置**A 主机**的 ARP，将其视为**B
    主机**的 MAC 地址，并将**B 主机**设置为将**A 主机**的 MAC 地址视为**C 主机**的实际 MAC 地址，然后允许**C 主机**转发数据包。在这个过程中，他们已经有了一个
    MITM（中间人攻击）情况。
- en: 'This is really hard to imagine through my description, I concede. Here''s a
    diagram that should help you out:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 通过我的描述，这确实很难想象，我承认。这里有一个图示，应该能帮助你理解：
- en: '![Figure 4.9 – A diagram of an ARP spoof'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.9 – ARP 欺骗的示意图'
- en: '](img/Figure_4.09_B16611.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_4.09_B16611.jpg)'
- en: Figure 4.9 – A diagram of an ARP spoof
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – ARP 欺骗的示意图
- en: As you can see, tricking computers to believe one device is another one is a
    pretty simple way to eavesdrop and requires adequate protection.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，欺骗计算机让它们相信一个设备是另一个设备是窃听的一种相当简单的方法，并且需要足够的保护措施。
- en: ARP spoofing defense
  id: totrans-190
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: ARP 欺骗防护
- en: You can set up your ARP cache for critical servers and endpoints so that they're
    *static* and *read-only*, which means they don't allow updates to be made. This
    is extremely simple, but adds to the overhead for IT. It's also very difficult
    to scale because each machine must be mapped accordingly, meaning you're looking
    at *n^2-n* ARP entries, where *n* is the number of endpoints on the network. If
    you have 1,000 endpoints, you have 999,000 ARP entries.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为关键服务器和终端设置 ARP 缓存，使其保持*静态*和*只读*，意味着它们不允许进行更新。这是非常简单的，但会增加 IT 部门的负担。它也非常难以扩展，因为每台机器必须进行相应的映射，意味着你需要处理*n^2-n*个
    ARP 条目，其中 *n* 是网络上的终端数量。如果有 1,000 个终端，你将有 999,000 个 ARP 条目。
- en: Alternatively, you could use a software solution that provides a certification
    for ARP responses and can be built into the DHCP server to ensure all IP addresses,
    either static or dynamic, are handled properly. Alternatively, you can just send
    a notification to an admin in the event that an ARP entry changes, but that's
    not really a preventative control.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你可以使用一个提供 ARP 响应认证的软件解决方案，并将其集成到 DHCP 服务器中，以确保所有 IP 地址（无论是静态还是动态）都得到妥善处理。或者，你可以在
    ARP 条目发生变化时发送通知给管理员，但这并不是真正的预防控制措施。
- en: You can also configure your hosts operating systems so that they gracefully
    handle unsolicited changes to the ARP cache.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以配置主机操作系统，使其能够优雅地处理 ARP 缓存的未请求更改。
- en: DNS spoofing
  id: totrans-194
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DNS 欺骗
- en: '**DNS spoofing/DNS cache poisoning** is similar to an **ARP spoofing attack**,
    and is where a trusted source of information is poisoned with malicious data.
    With **DNS spoofing**, the victim is requesting a response from what looks like
    a legitimate source (which they always take for granted) in their network''s DNS
    cache. In reality, the DNS server''s cache data has been poisoned by the malicious
    actor and the request is being sent to a separate destination, instead of the
    legitimate service. These types of attacks fall under the **spoofing** category.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '**DNS 欺骗/DNS 缓存中毒**类似于**ARP 欺骗攻击**，是指一个受信任的信息源被恶意数据污染。在**DNS 欺骗**中，受害者请求从看似合法的来源获取响应（他们总是理所当然地认为这是真实的），该请求进入他们网络的
    DNS 缓存。实际上，DNS 服务器的缓存数据已经被恶意行为者污染，且请求被发送到一个不同的目的地，而不是合法的服务。这类攻击属于**欺骗**类别。'
- en: DNS spoofing defense
  id: totrans-196
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DNS 欺骗防护
- en: In order to avoid *DNS spoofing attacks*, you need to reconsider your organization's
    trust. You want to authenticate, you want to verify, and you want to make it as
    streamlined as possible. Cryptography protocols such as TLS/HTTPS and SSH help
    with preventing this activity by verifying the source, and source port randomization
    reduces the likelihood of a DNS spoof attempt via a race condition flaw being
    successful.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免*DNS 欺骗攻击*，你需要重新考虑组织的信任机制。你需要进行身份验证、验证，并尽可能简化这一过程。像 TLS/HTTPS 和 SSH 这样的加密协议通过验证来源来帮助防止这种活动，而源端口随机化则减少了通过竞争条件漏洞成功实施
    DNS 欺骗尝试的可能性。
- en: Additionally, DNSSEC or secure DNS is a method of using cryptographically signed
    certificates to prove the authenticity of DNS data. All of the original top-level
    domains (and many country-code TLDs) support DNSSEC.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，DNSSEC 或安全 DNS 是一种使用加密签名证书来证明 DNS 数据真实性的方法。所有原始的顶级域（以及许多国家代码顶级域）都支持 DNSSEC。
- en: Sniffing
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 嗅探
- en: '**Sniffing attacks**, as we discussed in the *Sniffing tools* section of this
    chapter, is when network traffic is captured by utilizing a sniffer such as *Wireshark*
    or *Ettercap*. Wireshark is a commonly used tool in IT, with excellent features
    for diagnosing connectivity or web application issues. However, when a malicious
    actor utilizes a sniffer (providing the traffic is unencrypted), network traffic
    can easily be read, which could lead to credentials being captured and network
    exploitation.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**嗅探攻击**，正如我们在本章的*嗅探工具*部分中讨论的，是通过使用嗅探工具，如*Wireshark* 或 *Ettercap*，来捕获网络流量。Wireshark
    是 IT 中常用的工具，具有出色的功能，可以诊断连接性或 Web 应用问题。然而，当恶意行为者利用嗅探工具（只要流量未加密）时，网络流量可以轻松地被读取，这可能导致凭证被捕获并被网络滥用。'
- en: Sniffing defense and detection
  id: totrans-201
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 嗅探防护与检测
- en: Typically, when we're looking at sniffing attacks or network monitoring, the
    mitigation is centered around utilizing the appropriate protocols that are protected
    with encryption. Rather than use HTTP, use HTTP over TLS. Rather than use FTP,
    use SFTP. Instead of Telnet, use SSH.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们面对嗅探攻击或网络监视时，常用的应对方法是使用经过加密保护的适当协议。与其使用 HTTP，不如使用基于 TLS 的 HTTP。与其使用 FTP，不如使用
    SFTP。与其使用 Telnet，不如使用 SSH。
- en: If you're forced to use the old/insecure protocols, you could potentially route
    them over a VPN and wrap them in an encrypted tunnel.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不得不使用旧的/不安全的协议，你可能会考虑通过 VPN 将它们路由并包装在加密隧道中。
- en: Additionally, to prevent malicious actors from being able to utilize these tools
    on your network, you may want to set up a prevention/notification for any time
    a known network monitor is installed or executed on a system. Furthermore, utilizing
    switches instead of hubs can prevent traffic from being sprayed all over your
    network, and mitigate against a non-admin user device becoming compromised.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了防止恶意行为者能够在你的网络上利用这些工具，你可能需要设置一个预防/通知系统，以便在已知的网络监视器被安装或在系统上执行时进行通知。此外，使用交换机而不是集线器可以防止流量在整个网络上被广播，并减轻非管理员用户设备被攻破的风险。
- en: DoS attacks
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DoS 攻击
- en: Have we covered these? I'm even starting to lose track here! A **DoS** attack
    is a way to overwhelm a system or network by creating more requests than it can
    process. It's achieved either through a flood of traffic, or though very clever
    timeout attacks.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经覆盖了这些内容吗？我甚至开始搞不清楚了！**DoS** 攻击是通过创建超过系统处理能力的请求来压倒系统或网络的一种方式。它可以通过洪水式的流量攻击或非常巧妙的超时攻击实现。
- en: 'Think back to what we learned about the three-way TCP connection handshake
    and how that works, while using Elon''s joke:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下我们学到的三向 TCP 连接握手及其工作原理，同时使用埃隆的笑话：
- en: '[PRE0]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: So, after your initial `SYN`, what would happen if you never confirmed the server's
    `SYN-ACK` response with an `ACK`, but instead you opened another connection with
    the first SYN request again? And again, and again, and again? Well, the server
    waits for a response for a set amount of time before closing the connection, and
    eventually, you would make the server fill up their potential connections. This
    is called a **SYN flood**, or a **half-open attack**.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，在你的初始 `SYN` 之后，如果你从未用 `ACK` 确认服务器的 `SYN-ACK` 响应，而是用第一个 `SYN` 请求再次打开另一个连接呢？然后再次、再次、再次？嗯，服务器会在设定的时间内等待响应，然后关闭连接，最终，你会使服务器填满它们的潜在连接数。这就是所谓的**SYN
    洪水**或**半开放攻击**。
- en: There are DoS attacks for the application layer, along with DoS attacks for
    the network, but generally, a DoS attack is successful when it causes a system
    that is serving legitimate users to stop doing so.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 有应用层的 DoS 攻击，也有网络层的 DoS 攻击，但通常情况下，只要它能使一个为合法用户提供服务的系统停止服务，那么 DoS 攻击就算成功了。
- en: You might be targeted by a DoS attack for political purposes, chaotic reasons,
    blackmail, revenge, hacktivism, or because a group thinks it's funny, also known
    as *"for the lulz"*.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会因政治目的、混乱原因、勒索、报复、黑客行动，或者因为某个团体认为这很有趣而成为 DoS 攻击的目标，也被称为“**for the lulz**”。
- en: DDoS attacks
  id: totrans-212
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DDoS 攻击
- en: '**Distributed Denial-of-Service (DDoS)** attacks are DoS attacks that come
    from various sources, making it very difficult to understand which traffic is
    legitimate and which traffic is part of the botnet.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '**分布式拒绝服务（DDoS）**攻击是来自各种来源的 DoS 攻击，这使得很难分辨哪些流量是合法的，哪些是来自僵尸网络的一部分。'
- en: The number of nodes that constitute a DDoS rather than a DoS isn't as important
    as whether you are able to discern between the nodes that are legitimate users,
    and those that are contributing to the malicious traffic taking your network or
    systems down.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 组成 DDoS 而不是 DoS 的节点数量并不像你能否辨别出哪些是合法用户的节点、哪些是对你的网络或系统造成恶意流量的节点那么重要。
- en: Previously, GitHub has been subject to a 1.35 terabit-per-second DDoS attack,
    which was achieved through *amplification* by "bouncing" traffic from a separate
    service (memcache, running on multiple servers in this instance) to the GitHub
    destination, creating up to 51,000 packets per source request. In order to get
    to 1.35 terabits-per-second, you're looking at around 130 million packets per
    second.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，GitHub 曾遭受过 1.35 万兆位每秒的 DDoS 攻击，通过从另一项服务（例如运行在多个服务器上的 memcache）“反弹”流量到 GitHub
    的目标地址来实现*放大*效果，每个源请求最多创建 51,000 个数据包。为了达到每秒 1.35 万兆位，你需要大约 1.3 亿个数据包。
- en: DoS defense
  id: totrans-216
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DoS 防御
- en: 'When we''re looking at a DoS, we''re generally looking at a single source of
    requests, so we could potentially do some of the following:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们讨论DoS时，通常指的是来自单一来源的请求，因此我们可以采取以下一些措施：
- en: Filter traffic from unwanted sources, such as those trying to DoS your systems.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤来自不需要的来源的流量，比如那些试图对你的系统发起DoS攻击的流量。
- en: Increase the number of requests your servers can put into their backlog instead
    of handling them in real time.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加服务器能够放入其待处理队列中的请求数量，而不是实时处理它们。
- en: Reducing the timeout duration, for which your server waits for the final ACK
    response.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少超时时间，即服务器等待最终ACK响应的时间。
- en: If the server isn't able to handle many more requests before becoming overwhelmed,
    you can configure it to recycle the oldest request that hasn't been confirmed.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果服务器在过载之前无法处理更多的请求，你可以配置它回收最老的未确认请求。
- en: You can increase the cache.
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以增加缓存。
- en: You can utilize firewalls.
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以利用防火墙。
- en: DDoS defense and detection
  id: totrans-224
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DDoS防御和检测
- en: Similarly, when defending against a DoS, you want to prevent illicit DDoS traffic
    from reaching your server to begin with. In my previous example, the memcache
    DDoS at GitHub could be blocked by simply blocking port `11211` on an `11211`
    is the memcache source port, making for a simple mitigation.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，在防御DoS攻击时，你需要防止非法的DDoS流量一开始就到达你的服务器。在我之前的例子中，GitHub的memcache DDoS攻击可以通过简单地阻止端口`11211`来进行阻挡，`11211`是memcache的源端口，这是一个简单的缓解措施。
- en: However, how can your system discern legitimate traffic from illegitimate traffic
    when it's distributed, and not based on a pattern or from a port that can easily
    be blocked?
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当流量分布广泛且不是基于某种模式或来自可以轻松封锁的端口时，如何区分合法流量和非法流量呢？
- en: You want a system that can detect, classify, and respond to traffic requests
    that are seen as illegitimate, either through hardware or software solutions.
    For example, an application frontend hardware solution can be used along with
    routers and switches to analyze data packets and handle the traffic based on insights.
    This could include updating the ACL or rate limiting certain sources. Your IPS/IDS
    are also able to provide valuable insight into your network traffic, in order
    to identify real and illegitimate traffic and react with firewall rules in a reactive
    way.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个能够检测、分类并响应被视为非法的流量请求的系统，无论是通过硬件还是软件解决方案。例如，可以与路由器和交换机一起使用应用前端硬件解决方案，分析数据包并根据见解处理流量。这可能包括更新访问控制列表（ACL）或限制某些来源的流量。你的IPS/IDS也能够为你的网络流量提供有价值的洞察，以识别真实流量和非法流量，并以响应性方式通过防火墙规则做出反应。
- en: Web application firewalls can identify legitimate traffic to your web app based
    on insights and intelligence from the vendors' other customers, and how often
    the request has been seen previously as a malicious source, not completing requests.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 网络应用防火墙可以基于来自供应商其他客户的见解和情报，识别到你的网站应用程序的合法流量，并根据请求之前是否频繁出现恶意来源、未完成请求的情况进行判断。
- en: Something you would like to avoid is your cloud service, with elastic load balancing,
    from being vulnerable to a massive surge of traffic, thus leading to your wallet
    being heavily impacted by the upcoming cloud service provider bill. This is also
    known as a **Denial-of-Wallet** attack. There are various solutions for this that
    are generally offered by the cloud service providers themselves, and they can
    be part of your defense in depth strategy. It could be worth having a discussion
    with them, or reading their documentation on the topic.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望避免的是你的云服务在弹性负载均衡下，因流量激增而变得脆弱，从而导致即将到来的云服务提供商账单给你的钱包带来沉重冲击。这也被称为**钱包拒绝服务**攻击。针对这种问题，通常有一些解决方案，通常是由云服务提供商提供的，它们可以成为你深度防御策略的一部分。值得与你的云服务提供商讨论，或查阅他们关于这个话题的文档。
- en: Furthermore, there are DDoS protection providers, such as Cloudflare and Imperva,
    that provide CDN and threat intelligence solutions to help your organization withstand
    increased levels of traffic.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一些DDoS保护提供商，如Cloudflare和Imperva，提供CDN和威胁情报解决方案，帮助你的组织承受更高流量的压力。
- en: Typosquatting
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拼写欺骗
- en: '`www.arifrance.com` (note the misspelling of "air").'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`www.arifrance.com`（注意“air”拼写错误）。'
- en: Typosquatting defense
  id: totrans-233
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 拼写欺骗防御
- en: Unfortunately, there are a limited number of defenses against typosquatting.
    You can preemptively purchase similar domains to your business in order to reduce
    the likelihood that a malicious actor can buy one, which is tricky enough to fool
    your user base. You can also file a case with the **World Intellectual Property
    Organization** (**WIPO**), to complain that your registered domain name is confusingly
    similar to the malicious actors' registered domain, and that the malicious actor
    has no legitimate interest in that domain. It's not ideal, but that's the situation.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，对抗拼写欺骗（typosquatting）的防御手段有限。您可以预先购买与您的业务相似的域名，以减少恶意行为者购买类似域名并欺骗用户群体的可能性。您还可以向**世界知识产权组织**（**WIPO**）提出投诉，声称您的注册域名与恶意行为者注册的域名相似，且恶意行为者对该域名没有合法利益。这不是理想的解决方案，但就是目前的情况。
- en: Strategies for protecting network security
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络安全保护策略
- en: Now that we have gone through the TCP/IP suite and OSI model, network components
    and protocols, network devices and applications, some of the attacks, and how
    to defend against and detect those attacks, I would like to discuss some strategies
    you can use to actually protect your network and prevent malicious actors from
    having a field day in your estate.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了TCP/IP协议族和OSI模型、网络组件和协议、网络设备和应用程序、一些攻击方式以及如何防御和检测这些攻击，我想讨论一些您可以使用的策略，帮助您实际保护网络，并防止恶意行为者在您的网络中为所欲为。
- en: Creating a policy
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制定政策
- en: What we will want to do, in terms of a best practice, is define our strategy
    as a network security policy. This is a document that describes the rules that
    your organization will need to abide by in the realm of how the organization's
    environment is designed, maintained, protected, revised, and deprovisioned.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们作为最佳实践的目标，是将我们的策略定义为网络安全政策。这是一个描述您组织需要遵守的规则的文档，涉及组织环境的设计、维护、保护、修订和弃用等方面。
- en: This document doesn't need to be complex, but can be as detailed as required
    to ensure the organization's network is effectively protected. How passwords or
    email attachments are handled in-transit can be included in this policy, or preferred
    encryption methods for various communications, if that's important to mitigating
    the risks inherent to your organization. Most importantly, you should highlight
    the change control process for your organization's network. If a change needs
    to be made, those responsible will need to abide by this policy.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文档不需要复杂，但可以根据需要详细说明，以确保组织的网络得到有效保护。如果需要，您可以在此政策中包括如何处理密码或电子邮件附件的传输，或者对于各种通信的首选加密方法，如果这些内容对缓解组织固有的风险至关重要。最重要的是，您应当重点说明组织网络的变更控制流程。如果需要进行更改，负责的人员必须遵守此政策。
- en: 'In order to draft this policy, you will need a few things:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 为了制定此政策，您需要以下几点：
- en: Top management buy-in. There's no way you're going to successfully change the
    actions of individuals in your organization, and control their access to services
    online, without the blessing from top management. If you don't have this, handling
    any pushback will be impossible.
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高层管理支持。如果没有高层管理的支持，您不可能成功地改变组织内个人的行为，控制他们访问在线服务的权限。如果没有这个支持，任何反对意见都将无法处理。
- en: Understanding your organization's requirements from a regulatory and compliance
    perspective, in order to effectively avoid compliance risks.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从法规和合规性角度了解您组织的需求，以便有效避免合规风险。
- en: Understanding your organization's network, information, and services. Without
    this, how can you create an effective and relevant policy?
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解您组织的网络、信息和服务。如果没有这一点，您怎么能制定有效且相关的政策呢？
- en: Understanding your users and their access requirements in their daily work.
    Yet again, you need this document to reflect your reality; otherwise, it's just
    a sheet of paper with nonsense written on it.
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解您的用户及其在日常工作中的访问需求。再次强调，您需要使该文档反映您的现实情况；否则，它不过是一张上面写着胡话的纸。
- en: 'You will want to keep this document up to date, and update it any time any
    of the following occur:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要保持此文档的最新状态，并在以下情况发生时更新它：
- en: Technological changes
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术变化
- en: Changes to regulatory requirements
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 法规要求的变化
- en: Changes to terminology
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 术语变化
- en: Changes to your asset impact
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资产影响的变化
- en: Changes to the threat landscape
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁形势的变化
- en: Once these processes and policies have been established, you can execute your
    plan for implementing the appropriate controls to protect your organization.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦这些流程和政策建立起来，你就可以执行实施适当控制的计划，以保护你的组织。
- en: Keep it simple
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保持简单
- en: You don't want undue complexity in your network, and you don't want to make
    the security complex either. You might have a hybrid environment, where your on-premises
    and cloud assets are communicating with each other, or a network where the scope
    is unimaginable to our human brains… this is all absolutely fine, as long as you
    keep it as simple as possible.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 你不希望网络过于复杂，也不希望安全措施变得复杂。你可能有一个混合环境，其中本地和云端资产相互通信，或者有一个网络，其范围对我们人类的大脑来说几乎是无法想象的……这一切都完全没问题，只要你保持尽可能简单。
- en: What you need is visibility into your assets, clarity in your architecture and
    design, and a fantastic understanding of your organization's activities. You need
    an idea of what the core function of each asset is, and (for example) how new
    firewall rules may affect each asset. This should be documented, and optimizations
    should be continually designed, planned, implemented, and tested.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要能够看到你的资产，清晰地了解你的架构和设计，并且对组织的活动有深刻的理解。你需要知道每个资产的核心功能是什么，并且（例如）新防火墙规则如何影响每个资产。这些都应该被文档化，并且优化应持续设计、规划、实施和测试。
- en: Business continuity and disaster recovery
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 业务连续性和灾难恢复
- en: As we've previously discussed, it's highly valuable to have a plan for when
    things go wrong. Regardless of the level of risk your organization faces, I'm
    willing to bet that it's important that you are able to restore business operations
    quickly and effectively in the event of a disruption. Disruption can often happen
    at the network level, so having the appropriate **Business Continuity Plan** (**BCP**)
    and **Disaster Recovery Plan** (**DRP**) in place that takes this into consideration
    is paramount to your organization's success.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论过的，拥有一个应对突发情况的计划是非常有价值的。无论你的组织面临何种风险，我敢打赌，在发生中断时，你能够快速有效地恢复业务运营是非常重要的。中断往往会发生在网络层面，因此，考虑到这一点，制定合适的**业务连续性计划**（**BCP**）和**灾难恢复计划**（**DRP**）对你的组织成功至关重要。
- en: Backup and restore procedures
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备份和恢复程序
- en: 'We''ve mentioned this one before as well, but it''s highly important for keeping
    your network alive: you need to have a plan and procedure for backing up, testing,
    and recovering the systems that perform your critical business functions, while
    focusing on risk mitigation and improving recovery times.'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前也提到过这一点，但它对于保持你的网络运行至关重要：你需要有一个计划和程序来备份、测试和恢复执行关键业务功能的系统，同时专注于风险缓解和提高恢复时间。
- en: Insider threat mitigations/third-party threats
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内部威胁缓解/第三方威胁
- en: An insider threat has access to your network assets and can escalate their privileges
    more easily than an external threat can. In order to mitigate against these threats,
    either from intentional or accidental sources, we should consider employing methods
    from the Zero Trust approach.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 内部威胁能够访问你的网络资产，并且比外部威胁更容易提升其权限。为了缓解这些威胁，无论是来自故意还是偶然的来源，我们应该考虑采用零信任方法中的措施。
- en: Zero Trust
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 零信任
- en: You can't expect that just because you have a firewall, a segregated network,
    and mitigations against sniffing, spoofing, or DNS hijacking that your network
    is safe and secure from threats that have gained access to (or naturally have
    access to) your internal estate.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能指望仅仅因为你有了防火墙、隔离的网络，以及针对嗅探、伪造或DNS劫持的缓解措施，就认为你的网络能够安全地防御已获得（或自然拥有）内部资源访问权限的威胁。
- en: If internal users always have elevated privileges, regardless of context, a
    compromised account in the wrong hands is going to cause major issues. As a result,
    we could move to a *least privilege* model, where we only allow a user, device,
    or account to access what it needs in order to complete the task specified. Unfortunately,
    that still doesn't fully mitigate against a compromised admin account.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 如果内部用户总是拥有提升的权限，无论上下文如何，落入错误手中的被攻破账户将会带来严重问题。因此，我们可以转向一个*最小权限*模型，只允许用户、设备或账户访问完成指定任务所需的内容。不幸的是，这仍然不能完全缓解管理员账户被攻破的风险。
- en: What we'd be more interested in is a **Zero Trust** model, granting privilege
    based on context, such as the requester's identity, device, and location, along
    with least privilege access, and just-in-time access to mitigate the harm that
    can be done. Any request for elevated privileges can be accompanied with *Two-Factor
    Authentication (2FA)*, abiding by the "*Never trust, always verify*" mantra.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 我们更感兴趣的是**零信任**模型，根据上下文授予特权，比如请求者的身份、设备和位置，以及最小特权访问和及时访问，以减少可能造成的损害。任何提升特权的请求都可以配合*双因素认证
    (2FA)*，遵循“*永不信任，始终验证*”的原则。
- en: Additionally, we will want to recognize and report suspicious behavior and act
    on it automatically to reduce the impact of a compromise.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还需要识别并报告可疑行为，并自动采取措施以减少泄露的影响。
- en: 'Rather than the classic "*castle-and-moat*" style network perimeter, where
    anybody inside the network is considered to be a trusted user, a major concentration
    point here is that we consider devices, both internal and external to the network
    perimeter, in the same way: with *Zero Trust*. We need proof, not faith. It''s
    an ideology rather than a technology stack, and it can be achieved with some very
    basic rules.'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统的“*城堡与护城河*”式网络边界不同，传统上认为网络内部的任何人都是可信用户，这里的一个主要集中点是我们对设备的看法，网络边界内外的设备应以相同方式对待：采用*零信任*。我们需要证据，而非信任。这是一种理念，而不是技术堆栈，且可以通过一些非常基本的规则来实现。
- en: Another ideology of Zero Trust networks is to microsegment your estate into
    several different secure "zones" for specific groups. If a user doesn't need to
    access certain data, then they don't have access to that zone. It requires an
    understanding of your organization's data, as well as a technological solution
    for preventing access. Data loss prevention tools can work together with labels
    to protect various types of sensitive and confidential information access by the
    wrong users, utilizing encryption and parsing the data of the file itself to detect
    known patterns that may indicate a file contains such information.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 零信任网络的另一个理念是将你的资产微分割成多个不同的安全“区域”以供特定小组使用。如果某个用户不需要访问某些数据，那么他们就无法访问该区域。这需要了解你组织的数据，以及一个防止访问的技术解决方案。数据丢失防护工具可以与标签结合使用，以保护各种敏感和机密信息不被错误用户访问，通过加密并解析文件数据来检测可能表明文件包含此类信息的已知模式。
- en: 'One more catchphrase from the Zero Trust school is to "*assume breach*". Essentially,
    you must assume that your network is compromised. This is how we mitigate against
    insider threats with Zero Trust: by reducing the ability for a compromised account
    to perform overarching actions across the entire estate. Utilizing segmentation
    of user privileges, along with the **two-man principle**, where you need more
    than one person''s approval to be able to perform an action, and **segregation
    of duties** where a single action isn''t completed by a single person from end-to-end,
    you are able to reduce the likelihood of a sole actor being able to silently make
    changes to your network.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 零信任学派的另一个口号是“*假设已被攻破*”。本质上，你必须假设你的网络已经被攻破。这就是我们如何通过零信任来应对内部威胁的方式：通过减少被攻破的账户在整个资产中执行全面操作的能力。利用用户权限的分割，以及**双人原则**（需要两个人的批准才能执行操作）和**职务分离**（一个人无法完成从头到尾的单一操作），你能够减少单一行为者悄无声息地对你的网络进行更改的可能性。
- en: The fantastic thing about this ideology is that it allows for a distributed
    team, with a less-defined network boundary, which is very relevant in the modern
    era where organizations are dealing with multi-cloud and on-premises hybrid environments,
    combined with users who are working from home and using their own devices.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 这个理念的精彩之处在于，它允许分布式团队，具有较少定义的网络边界，这在现代时代非常相关，因为组织正在处理多云和本地混合环境，结合着在家工作的用户和使用个人设备的情况。
- en: Software and firmware updates
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件和固件更新
- en: Patching your systems with security updates will have an enormous impact on
    the overall health of your estate, and will bolster your information security.
    Additionally, up-to-date systems are more agile and better at processing information.
    Yet, with all of these advantages, most organizations that I've worked with have
    major issues with their legacy systems; they're outdated, past the manufacturer's
    *end of life*, unable to be renewed due to incompatible software, or have an unknown
    level of risk in the event of an update.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 使用安全更新对系统进行修补将对整个系统的健康状况产生巨大的影响，并将增强您的信息安全性。此外，最新的系统更具灵活性，更擅长处理信息。然而，尽管有这些优势，我所合作过的大多数组织在其遗留系统上都面临着重大问题；它们已经过时，超出了制造商的*生命周期结束*，由于不兼容的软件无法进行更新，或者在更新时存在未知的风险。
- en: As a result, it's highly important to define an **asset life cycle**, including
    the provisioning, updating, maintenance, and disposal processes. In addition to
    this, **vulnerability management** should be considered and defined, with a clear
    plan for identifying, classifying, remediating, and mitigating against known vulnerabilities
    in your estate. This is to ensure that, in 10 years, you don't end up with *legacy
    servers* running the equivalent of Windows XP or Windows Server 2003 today, which
    is extremely vulnerable to ransomware, highly incompatible, slow, and brittle.
    More information on how we can handle updates and vulnerabilities can be found
    in [*Chapter 7*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123)*, Owning Security
    Operations*.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，定义**资产生命周期**非常重要，包括配置、更新、维护和处置过程。此外，**漏洞管理**也应当被考虑并定义，确保有一个明确的计划来识别、分类、修复和缓解您系统中已知漏洞的风险。这是为了确保，在十年后，您不会拥有*遗留服务器*，其运行的系统相当于今天的Windows
    XP或Windows Server 2003，这些系统极易受到勒索软件的攻击，且高度不兼容、速度缓慢且脆弱。关于我们如何处理更新和漏洞的更多信息，请参阅[*第7章*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123)*，拥有安全运营*。
- en: Ensuring secure communication
  id: totrans-273
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 确保安全通信
- en: The communication that occurs to and from your estate and inside your networks
    is vulnerable to being eavesdropped on and tampered with. Data encryption is a
    key part of ensuring your network is secure and protecting your organizational
    assets. *Data at rest* can be encrypted, as previously discussed, but encrypting
    *data in transit* should also be a key focus for security professionals looking
    to mitigate against eavesdropping and tampering threats.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的系统与网络之间以及网络内部发生的通信容易受到窃听和篡改的威胁。数据加密是确保您的网络安全并保护组织资产的关键部分。如前所述，*静态数据*可以被加密，但加密*传输中的数据*也应成为安全专业人员的重点，以减轻窃听和篡改的威胁。
- en: '*Encryption* is not only able to help protect the data by making it unreadable
    to unauthorized entities, but it can also confirm the *integrity* of the information,
    and also confirm the *identity* of the sender and recipient of a message.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '*加密*不仅能够通过使数据对未授权实体不可读来保护数据，还能够确认信息的*完整性*，并确认消息发送者和接收者的*身份*。'
- en: The downside to this is that you need to trust that the entities managing the
    keys in the encryption process, such as the Certificate Authority, are secure.
    Performing **due diligence** and having a good **vendor assessment program** in
    place can help you understand the risk of this happening, and potentially cause
    you to reconsider the vendor you are currently using, in favor of one with a better
    security posture.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的缺点是，您需要信任管理加密过程中密钥的实体，例如证书授权机构，确实是安全的。进行**尽职调查**并建立良好的**供应商评估程序**，可以帮助您了解这种风险，并可能促使您重新考虑当前使用的供应商，选择一个安全性更高的供应商。
- en: Another aspect of secure communication is that communications can occur outside
    of the realm of your estate. Your users may communicate with third parties by
    using a cloud service or text messages on their mobile device, and it's difficult
    to keep on top of this activity. Proper education in your organization about your
    policies regarding these practices can reduce the likelihood of an accidental
    breach. When it comes to malicious actors, you might want to think about a **Cloud
    Application Security Broker** (**CASB**) for your network, which blocks certain
    actions being performed on cloud web apps. It could, for example, prevent a file
    with a certain type of label from being uploaded to *Dropbox* or *Twitter*.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 安全通信的另一个方面是，通信可能发生在你网络之外。你的用户可能通过使用云服务或在移动设备上发送短信与第三方进行沟通，而这些活动很难掌控。通过对组织内员工进行关于这些行为的政策培训，可以减少意外泄露的可能性。对于恶意行为者，你可能需要考虑在你的网络中部署**云应用安全代理**（**CASB**），它能够阻止在云端Web应用上执行某些操作。例如，它可以防止某些类型标签的文件被上传到*Dropbox*或*Twitter*。
- en: Cloud network security
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 云网络安全
- en: What I am seeing more and more of is the transition toward the public cloud,
    which leads to relinquishing responsibility when it comes to the physical (and
    sometimes architectural) aspects of network security. Does the fact that you've
    outsourced your network security mean that you're not responsible for it anymore?
    Who is responsible?
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 我越来越多地看到向公共云的过渡，这意味着在网络安全的物理（有时是架构）方面放弃了责任。将网络安全外包是否意味着你不再对其负责？那么，谁应该负责呢？
- en: The answer to that question is always that *top management is ultimately responsible
    for security*. As we've said previously, they have hired you to help them reduce
    their risk, and part of that undertaking is understanding the level of risk that
    exists, comparing that risk level against your organization's risk appetite, and
    mitigating it until the risk is below that line.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题的答案始终是*高层管理最终负责安全*。正如我们之前所说，他们雇佣你来帮助降低风险，而这一任务的一部分就是理解现有的风险水平，将其与组织的风险承受能力进行比较，并采取措施将风险降到该承受能力以下。
- en: So, outsourcing physical and architectural aspects of network security to a
    **cloud service provider**, or **CSP**, has risks and opportunities, and it's
    your responsibility to understand those.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，将网络安全的物理和架构方面外包给**云服务提供商**（**CSP**）存在风险和机遇，而了解这些风险和机遇是你的责任。
- en: Often, using due diligence and performing vendor security assessments will help
    you understand how your suppliers are handling these aspects of security for your
    outsourced datacenters. In addition to understanding the security controls that
    the service provider has put into place, you can get a better understanding of
    the products that the providers offer, such as data encryption, monitoring and
    logs, access control, key vaults, and so on.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，进行尽职调查和供应商安全评估将帮助你了解你的供应商如何处理外包数据中心的安全事务。除了理解服务提供商所实施的安全控制措施外，你还可以更好地了解服务商提供的产品，如数据加密、监控和日志记录、访问控制、密钥保管等。
- en: It's important to understand what falls under your organization's responsibility,
    rather than the CSP, in the cloud's **shared responsibilities model**.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 理解在云的**共享责任模型**中，哪些责任属于你的组织，而非CSP，是非常重要的。
- en: Being able to quickly make changes to your infrastructure in the cloud means
    that change control processes may not be considered, leading to misconfiguration.
    It's pivotal to include the cloud in the wider scope of your network security
    policy's *Change Management* section. Changes that can be made very quickly have
    the potential to bring your network to its knees. Additionally, changes that have
    been made without oversight could include misconfigurations, leading to easy breaches
    from malicious actors.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 能够快速更改云端基础设施意味着可能不考虑变更控制流程，从而导致配置错误。将云纳入网络安全政策的*变更管理*部分至关重要。快速可变的更改有可能使你的网络瘫痪。此外，未经监督的更改可能包括配置错误，从而让恶意行为者轻松入侵。
- en: Along with the change management policies comes proper testing and implementation
    of security controls for new or changed infrastructure before it goes live into
    production. Additionally, a deprovisioning procedure should be included to complete
    an instance's life cycle. It's important to keep an eye on this and control it,
    both in terms of policy and automation rules, otherwise your estate will continue
    to grow with more and more insecure instances, with old instances not being deprovisioned
    properly, giving easy access to confidential information.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 随着变更管理政策的实施，必须对新基础设施或变更基础设施进行适当的安全控制测试和实施，确保其在投入生产之前得到充分验证。此外，应该包括一个停用程序，以完成实例的生命周期。监控和控制这一过程非常重要，无论是从政策方面还是自动化规则方面，否则你的基础设施将不断扩大，越来越多的不安全实例将出现，旧实例未被正确停用，导致机密信息容易泄露。
- en: Education and awareness
  id: totrans-286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 教育与意识
- en: You might determine that educating your organization's users and administrators
    about how information is handled is necessary for success and risk mitigation.
    To do so, you can create an information security awareness policy, which will
    dictate the organization's requirements on this topic.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会发现，教育组织的用户和管理员了解信息如何处理对于成功和风险缓解至关重要。为此，你可以制定一项信息安全意识政策，该政策将规定组织在这一领域的要求。
- en: The requirements aren't set in stone, so you may want to ensure that all employees
    that access organization data must complete training courses provided by your
    organization on how to securely handle such data.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 这些要求并非一成不变，因此你可能希望确保所有访问组织数据的员工都必须完成由组织提供的培训课程，学习如何安全地处理这些数据。
- en: You might be able to educate users on phishing, and what constitutes **Personally
    Identifiable Information** (**PII**) or **Protected Health information** (**PHI**).
    You might also be able to create security champions, as we've mentioned previously.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能能够教育用户识别钓鱼攻击，并理解什么是**个人身份信息**（**PII**）或**受保护的健康信息**（**PHI**）。你还可能能够培养安全倡导者，正如我们之前提到的那样。
- en: Security Operations Center
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全运营中心
- en: Finally, we have a **Security Operations Center** (**SOC**), which is a team
    of security analysts, engineers, and managers that monitor the network for anomalies
    and issues and react accordingly, in real time.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们有一个**安全运营中心**（**SOC**），它是由安全分析师、工程师和经理组成的团队，负责实时监控网络中的异常和问题，并做出相应反应。
- en: Oftentimes, in order to do this, they must utilize SIEM systems and aggregate
    signals from all of the network hardware and software they can in order to detect
    outages or intrusions. This includes what we've talked about earlier in this chapter
    (and in the previous one) regarding IDS, IPS, firewalls, CDNs, antivirus, and
    vulnerability management systems all sending data to the centralized *single-pane-of-glass*
    observation solution.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，为了做到这一点，他们必须利用SIEM系统，将他们能够获得的所有网络硬件和软件信号汇总，以检测故障或入侵。这包括我们在本章（以及上一章）中讨论的关于入侵检测系统（IDS）、入侵防御系统（IPS）、防火墙、CDN、杀毒软件和漏洞管理系统将数据发送到集中的*单一玻璃窗*观察解决方案。
- en: Further reading on security monitoring best practices can be found in [*Chapter
    7*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123)*, Owning Security Operations.*
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 关于安全监控最佳实践的进一步阅读可以参见[*第七章*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123)*，《安全运营管理》*。
- en: Summary
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 总结
- en: What an absolute behemoth of a chapter! Are you okay? Do you need a second?
    I think I may…
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 这一章真是个庞然大物！你还好吗？需要休息一下吗？我可能需要……
- en: It's so great to be finished with this chapter, having covered as much as we
    have. At the start of this chapter, we talked about the Internet Protocol suite
    and OSI model, before moving on to the various devices and applications we can
    use to set up a network, such as switches, routers, firewalls, and CDNs.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 终于完成了这一章，涵盖了我们所学的内容，真是太好了。在本章开始时，我们讨论了互联网协议套件和OSI模型，然后介绍了我们可以用来搭建网络的各种设备和应用，如交换机、路由器、防火墙和CDN。
- en: After that, we looked at some common network attacks, as well as how to defend
    against and detect them. After that, we talked about typosquatting, DNS hijacking,
    and MITM attacks, which helped us think in the way a malicious actor might.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们了解了一些常见的网络攻击，以及如何防御和检测这些攻击。然后，我们讨论了域名抢注、DNS劫持和中间人攻击（MITM），这帮助我们从恶意攻击者的角度思考问题。
- en: From there, we looked at the strategies for protecting network security, including
    making policies, reducing complexity, business continuity, mitigating against
    insider threats and Zero Trust, updates, and cloud security, among other things.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 从那里开始，我们看了保护网络安全的策略，包括制定政策、降低复杂性、业务连续性、应对内部威胁和零信任、更新以及云安全等内容。
- en: 'Next, we will move on to a topic that I''m sure will float your boat: controlling
    access and managing identity. Let''s get started!'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将进入一个我确信会引起你兴趣的话题：控制访问和管理身份。让我们开始吧！
