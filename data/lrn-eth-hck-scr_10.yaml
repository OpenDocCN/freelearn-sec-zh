- en: Gaining Access to Computer Devices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问计算机设备
- en: 'We are now moving toward the next segment of the book, where we will be covering
    topics related to gaining access to computer devices. In this part, we will be
    looking at ways to gain access to a victim''s machine. We will be hacking victims''
    systems using various techniques. This chapter will cover the first approach to
    attacking the victim''s system: the server-side attack. We will perform a server-side
    attack using the Metasploit device and also exploitation of backdoors.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们正朝着本书的下一部分前进，我们将涵盖与访问计算机设备相关的主题。在这部分中，我们将探讨获取受害者机器访问权限的方法。我们将使用各种技术来黑客受害者的系统。本章将涵盖攻击受害者系统的第一种方法：服务器端攻击。我们将使用
    Metasploit 设备执行服务器端攻击，还将利用后门进行利用。
- en: 'This chapter has the following sections:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包括以下几节：
- en: Introduction to gaining access
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取访问权限简介
- en: Server-side attacks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器端攻击
- en: Server-side basics
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器端基础知识
- en: Server-side attacks, Metasploit basics
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器端攻击，Metasploit 基础知识
- en: Code execution Metasploit
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码执行 Metasploit
- en: Introduction to gaining access
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取访问权限简介
- en: 'Now you have enough information to go ahead and try to gain access to other
    systems, to computers, servers, web servers, and stuff like that. In this section,
    we''re going to be talking about gaining access to computer devices. What do we
    mean by computer devices? Any electronic device you see is a computer. A phone,
    a TV, a laptop, a web server, a website, a network, a router; all of these things
    are computers. Each one of them has an operating system, and they have programs
    installed on these operating systems. In most cases, these computers are used
    by a user. Here, we are going to be talking about how to gain access to computers.
    In this example, we are going to use a computer. We are going to have a Windows
    device target, and we''re going to have a Linux device hacker. But the concept
    is always the same; getting access to computer devices is always the same. We
    can apply the same concepts if we are targeting a phone, a tablet, or a web server,
    but we will be considering them all just like a normal computer. This is very
    important to understand: every device we see is a computer, and they work just
    like our personal computer. We can set up a web server on our computer, we can
    make it look and act like a website, or even make it act like a TV, or, for that
    matter, anything we want. Literally, TVs and all such things are just simple computers
    with less complicated hardware in them.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有足够的信息可以尝试访问其他系统、计算机、服务器、网络服务器等。在本节中，我们将讨论如何访问计算机设备。什么是计算机设备？你看到的任何电子设备都是计算机。手机、电视、笔记本电脑、网络服务器、网站、网络、路由器；所有这些东西都是计算机。每一个都有一个操作系统，并且在这些操作系统上安装了程序。在大多数情况下，这些计算机是由用户使用的。在这里，我们将讨论如何访问计算机。在这个例子中，我们将使用一台计算机。我们将有一个
    Windows 设备目标，和一个 Linux 设备黑客。但概念始终是相同的；获取对计算机设备的访问权限始终是相同的。如果我们针对手机、平板电脑或网络服务器，我们可以应用相同的概念，但我们将把它们都视为普通计算机。这一点非常重要：我们看到的每个设备都是计算机，它们的工作方式就像我们的个人计算机一样。我们可以在我们的计算机上设置一个网络服务器，我们可以让它看起来和行为像一个网站，甚至让它看起来像一台电视，或者，无论我们想要的任何东西。简而言之，电视和所有这些东西只是带有不太复杂硬件的简单计算机。
- en: 'We''re going to be talking about attacking these devices from two main sides:
    the server side and the client side.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论从两个主要方面攻击这些设备：服务器端和客户端。
- en: Server side
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器端
- en: A server-side attack doesn't require any user interaction. We're going to have
    a computer, and we're going to see how we can gain access to that computer without
    the need for the user to do anything. This mostly applies to web servers, applications,
    and devices that don't get used much by people. People basically configure them
    and then they run automatically. All we have is an IP address, and we're going
    to see how we can test the security and gain access to that computer based on
    that IP. Our main way of getting in is going to be the operating system that that
    target runs, and the applications installed on that system. Various types of server-side
    attacks include SQL injection attacks, buffer overflow, and denial-of-service
    attacks.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端攻击不需要任何用户交互。我们将拥有一台计算机，并且看看如何在不需要用户做任何事情的情况下获得对该计算机的访问权限。这主要适用于很少被人使用的网络服务器、应用程序和设备。人们基本上只是配置它们，然后它们就会自动运行。我们只有一个
    IP 地址，我们将看看如何根据该 IP 测试安全性并获得对该计算机的访问权限。我们主要的入侵方式将是目标运行的操作系统以及该系统上安装的应用程序。各种类型的服务器端攻击包括
    SQL 注入攻击、缓冲区溢出和拒绝服务攻击。
- en: In this chapter, we will be focusing on server-side attacks. We will look in
    detail at what a server-side attack is and how to implement one.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点关注服务器端攻击。我们将详细了解服务器端攻击是什么以及如何实施。
- en: Client side
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端
- en: The second approach that we're going to try is the client-side attack. This
    approach will require the client, or the person who uses that computer, to do
    something. This could involve a number of things, such as installing an update,
    opening a picture, or opening a Trojan. We're going to learn how to create a Trojan,
    how to create backdoors, how to use social engineering to make the target person
    do something so that when they carry out that action, we will gain access to their
    computer. Information gathering is going to be crucial in this case, because we
    actually need to know the person that we're targeting. Various types of client-side
    attacks include content spoofing, cross-site scripting, and session fixation.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将尝试的第二种方法是客户端攻击。这种方法需要客户端，或者说使用该计算机的人，做出一些操作。这可能涉及多种事情，比如安装更新、打开图片或启动 Trojan（木马）。我们将学习如何创建木马、如何创建后门、如何利用社交工程学让目标人物做出某个动作，这样当他们执行该动作时，我们将能够访问他们的计算机。信息收集在这种情况下非常关键，因为我们实际上需要了解我们攻击的目标人物。各种类型的客户端攻击包括内容欺骗、跨站脚本攻击（XSS）和会话固定攻击。
- en: Post-exploitation
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后期利用
- en: Once we get an access to the system, we will see what we can do after we gain
    access to this computer, regardless of the method used to gained access to it.
    This could involve a server-side exploit, a client-side exploit, or even just
    physical access, where the victim leaves their desk and you get in. We're going
    look at what we can do once we have access to the target, how we can further exploit
    that target and increase our privileges, or target other computers in the same
    place.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们获得了对系统的访问权限，我们将看到获得访问权限后我们可以做些什么，不论是通过何种方式获得的访问权限。这可能涉及服务器端漏洞、客户端漏洞，甚至是物理访问，即当受害者离开办公桌时你可以进入。我们将探讨一旦获取目标访问权限后，如何进一步利用目标、提升我们的权限，或者攻击同一地点的其他计算机。
- en: Sever-side attacks
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器端攻击
- en: The first thing we're going to look at is server-side attacks. These are attacks
    that don't require user interaction. We can use these attacks with web servers,
    and also use them against normal computers that people use every day. The reason
    why we are going to be using it against my Metasploitable (which runs Unix, and
    which is more of a server than a normal personal computer) is because if our target
    uses a personal computer, and if they're not on the same network as us, then even
    if we manage to get their IP address, their IP address is going to be behind a
    router. They'll probably be connecting through a router, and therefore, if we
    use the IP to try and determine what operating systems run on it and what applications
    are installed, we will not get much useful information because we are only going
    to be getting information about the router and not about the person. The person
    will be hiding behind the router. When we are targeting a web server, or a server
    in general, then the server will have an IP address and we can access that IP
    address directly on the internet. This attack will work if the person is on the
    same network and if the person has a real IP. If we can ping the person, even
    if it's a personal computer, then we can run all of the attacks and all of the
    information-gathering methods that we're going to learn about.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先要讨论的是服务器端攻击。这些攻击不需要用户互动。我们可以在 web 服务器上使用这些攻击，也可以在普通的个人计算机上使用它们。之所以选择在我的
    Metasploitable（它运行 Unix 系统，更像是服务器而非普通个人计算机）上进行攻击，是因为如果我们的目标使用的是个人计算机，并且他们不在与我们相同的网络中，即使我们设法获得了他们的
    IP 地址，该地址也将位于路由器之后。他们很可能通过路由器连接，因此即使我们使用该 IP 地址来尝试确定其运行的操作系统和安装的应用程序，我们也无法获得多少有用的信息，因为我们只会得到关于路由器的信息，而不是目标人物的信息。目标人物将隐藏在路由器后面。当我们针对
    web 服务器或一般服务器时，该服务器会有一个 IP 地址，我们可以直接通过互联网访问该 IP 地址。如果目标与我们在同一网络中，且目标有真实的 IP 地址，那么这个攻击方法就能奏效。即使目标是个人计算机，如果我们能
    ping 通该设备，我们也可以执行所有的攻击以及我们将要学习的信息收集方法。
- en: 'We are going to be targeting my Metasploitable machine. Before we start working
    on it, we will just check the network settings. Just to verify it, it is set to
    NAT and it''s on the same network as the Kali machine. The Kali machine is going
    to be our attacking machine. Again, we have to check that the network is set to
    the NAT network and it''s on the same subnet. This is very important. If we do
    `ifconfig`, we will be able to see our IP address as shown in the following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将针对我的Metasploitable机器进行攻击。在开始之前，我们先检查一下网络设置。为了验证它，我们需要确保它设置为NAT，并且与Kali机器处于同一网络中。Kali机器将作为我们的攻击机。再次强调，我们必须检查网络是否设置为NAT网络，并且它们在同一子网内。这一点非常重要。如果我们执行`ifconfig`命令，我们将能够看到我们的IP地址，如下图所示：
- en: '![](assets/4bd0c595-ba74-40d1-a677-8f253002d3fb.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4bd0c595-ba74-40d1-a677-8f253002d3fb.png)'
- en: 'If we go to my Kali machine, we should be able to ping it. As we can see in
    the following screenshot, when we ping on the IP, we''re getting responses back
    from the machine, which tells us we are connected to that machine and we can get
    responses from it. Therefore, we can try and test its security as shown with the
    next screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们去到我的Kali机器，我们应该能够ping通它。正如下面的截图所示，当我们ping通IP时，我们从机器上收到了响应，这说明我们与该机器连接成功，并且可以从它那里获取响应。因此，我们可以尝试测试其安全性，如下图所示：
- en: '![](assets/f8893495-0acb-46f0-85e4-acf11f1d9f45.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f8893495-0acb-46f0-85e4-acf11f1d9f45.png)'
- en: Again, we can use these attacks and these approaches against any computer that
    we can ping. If it's a personal computer or if it's a server of any kind, as long
    as we can ping that location or we can ping that person, then we can launch these
    attacks and methods that we're going to talk about.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以使用这些攻击和方法针对任何我们能够ping通的计算机。不论是个人电脑还是任何类型的服务器，只要我们能够ping通该位置或该人，就可以发起我们接下来要讨论的攻击和方法。
- en: 'Server-side attacks work against websites, web servers, people, and normal
    computers, as long as we can ping them. Just to convey this idea, we will see
    the Metasploitable machine, which is just a normal virtual machine that we can
    use right here to do anything we want. We can list it using the `-ls` command,
    and we can even install a graphical interface. Then we will be able to use it
    in the way we use my Kali machine. But at the same time, it has a web server.
    If we try to navigate to the server, we will see that it actually has a web server
    and it has websites that we can actually read and browse. We''re going to have
    a look at these websites and see how we can pen test them in the later chapters as
    we can see in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端攻击适用于网站、Web服务器、用户和普通计算机，只要我们能够ping通它们。为了传达这个概念，我们将查看Metasploitable机器，它只是一个普通的虚拟机，我们可以在这里使用它做任何我们想做的事情。我们可以使用`-ls`命令列出它，甚至可以安装图形界面。这样，我们就能像使用我的Kali机器一样使用它。但与此同时，它也有一个Web服务器。如果我们尝试访问该服务器，我们会看到它实际上有一个Web服务器，并且有我们可以浏览和阅读的网站。我们将在后面的章节中查看这些网站，了解如何进行渗透测试，如下图所示：
- en: '![](assets/58a79573-9baa-4442-9dc9-c13033756460.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/58a79573-9baa-4442-9dc9-c13033756460.png)'
- en: Everything is a computer, and if we can ping the IP, we can use server-side
    attacks. They mostly work against servers because servers always have real IPs.
    If the person is in the same network as we are, then we can ping them to do all
    of these attacks as well.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都是计算机，如果我们能够ping通IP地址，就可以使用服务器端攻击。它们通常针对服务器有效，因为服务器总是有真实的IP。如果某人与我们处在同一网络中，那么我们也可以通过ping通他们来执行这些攻击。
- en: Server-side attack basics
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器端攻击基础
- en: The first step in server-side attacks is information gathering. Information
    gathering is very important because it will show us the operating system of the
    target, the installed programs, the running services on the target, and the ports
    associated with these services. From these installed services, we can try and
    get into the system. We can do this by trying the default passwords. We saw this
    in the network penetration testing part where the iPad had an SSH service installed
    that basically gave us full access to the computer if the person still uses the
    default password, which was alpine. We can do this with any other service, and
    we will do so further in this section.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端攻击的第一步是信息收集。信息收集非常重要，因为它能告诉我们目标的操作系统、已安装的程序、运行中的服务以及与这些服务相关的端口。从这些已安装的服务中，我们可以尝试进入系统。我们可以通过尝试默认密码来实现这一点。我们在网络渗透测试部分看到，iPad安装了SSH服务，如果用户仍然使用默认密码alpine，就能让我们完全访问该计算机。我们可以对任何其他服务执行此操作，在本节中我们会进一步讲解。
- en: There's a lot of people that install services and misconfigure them, so we'll
    have another example of this as well. Sometimes, a lot of these services are designed
    to give someone remote access to that computer, but they obviously need to have
    some security implementations. People often misconfigure these services, so we
    can take advantage of these misconfigurations and gain access to these computers.
    Another problem with these services is that some of them might even have backdoors,
    and we'll see an example of that too. A lot of them will have vulnerabilities,
    such as remote buffer overflows or code execution vulnerabilities, and this will
    allow us to gain full access to the computer.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 很多人会安装服务并配置错误，所以我们也会有另一个例子。 有时，这些服务的设计目的是为了让某人远程访问那台计算机，但显然需要一些安全措施。人们常常配置错误这些服务，我们可以利用这些配置错误来获取对这些计算机的访问权限。另一个问题是，这些服务中的一些可能甚至有后门，我们也将看到一个例子。许多服务会有漏洞，比如远程缓冲区溢出或代码执行漏洞，这将使我们能够完全访问计算机。
- en: 'The simplest way of doing this is something that we''ve seen before: Zenmap.
    We use Zenmap with the IP. We get a list of all of these services, and then Google
    each one of them to see if they contain any vulnerabilities. We''ve seen how we
    can use Zenmap in previous chapters, but we just want to convey the idea that
    anything is a computer. We''ve seen before how the Metasploitable device is actually
    a website. It has a web server running; websites are no different than this. If
    we want to get the IP of a website, all we have to do is `ping`. For example,
    if we''re targeting Facebook, we have to `ping facebook.com`, and we''ll get their
    IP. We will have Facebook''s IP and we''ll be able to run Zenmap against it and
    get a list of all the running services on Facebook. Now, obviously we are not
    going to do that because we are not allowed to do that. What we are going to do
    is run Zenmap against this Metasploitable device, which basically is a computer
    device, and that''s what we''re interested in testing.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 做这件事的最简单方法就是我们之前看到的：Zenmap。我们使用 Zenmap 和 IP 地址。我们得到所有这些服务的列表，然后谷歌每一个服务，看看它们是否包含任何漏洞。我们在之前的章节中已经看到过如何使用
    Zenmap，但我们只是想传达一个概念，那就是任何东西都是计算机。我们之前看到过 Metasploitable 设备实际上是一个网站，它运行着一个 web
    服务器；网站和这个没有区别。如果我们想要得到一个网站的 IP 地址，我们只需要`ping`它。例如，如果我们的目标是 Facebook，我们就需要`ping
    facebook.com`，然后就能得到它们的 IP 地址。我们将得到 Facebook 的 IP 地址，然后可以对其运行 Zenmap，并获得 Facebook
    上所有正在运行的服务列表。当然，我们不会这么做，因为我们没有权限这么做。我们要做的是对这个 Metasploitable 设备运行 Zenmap，它基本上是一个计算机设备，这就是我们感兴趣的测试目标。
- en: 'We going to run Zenmap in the same way that we did before. We will go to Activities.
    We are just going to look for Zenmap and open it. Now we are going to enter the
    IP of our target, of the Metasploitable device, which was `10.0.2.4` in our example.
    Remember that in [Chapter 4](16c0aae0-6766-4e7f-ade5-e359e50c2160.xhtml), *Network
    Penetration Testing* we used to put the base IP and put it over 24 to cover all
    the IPs around us in the network. In this case, you might be testing a remote
    IP. For example, in the case of Facebook, all you have to do is just put the Facebook
    target IP in there and test it. But since we don''t have permission to do so,
    we are not going to do that. We do have permission to test our own device, though,
    which is installed on the same network as us, so that''s why we will be putting
    in that IP. We can literally put any IP we want in there and test it. We are going
    to use Scan, and this will give us a list of all the installed applications as
    shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将以与之前相同的方式运行 Zenmap。我们将进入“活动”页面，寻找 Zenmap 并打开它。接下来，我们将输入目标的 IP 地址，也就是 Metasploitable
    设备的 IP 地址，在我们的示例中是`10.0.2.4`。记住，在[第 4 章](16c0aae0-6766-4e7f-ade5-e359e50c2160.xhtml)中，*网络渗透测试*我们使用的是基础
    IP 地址，并在其上加上 24，以覆盖网络中周围的所有 IP 地址。在这种情况下，你可能正在测试一个远程 IP。例如，对于 Facebook，你只需输入 Facebook
    的目标 IP 地址并进行测试。但由于我们没有权限这么做，所以我们不会这么做。不过，我们有权限测试我们自己的设备，这个设备与我们在同一个网络上，因此我们将输入这个
    IP 地址。我们实际上可以输入任何我们想要的 IP 地址并进行测试。我们将使用“扫描”，这将给我们一个已安装应用程序的列表，如下图所示：
- en: '![](assets/b5b98c95-8c8f-450f-916a-b00d12420b46.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b5b98c95-8c8f-450f-916a-b00d12420b46.png)'
- en: 'Once the scan is finished, we will have a lot of open ports and a lot of services.
    It is advisable that we go on the Nmap Output tab, check port by port, read what
    the services are, and Google the names of the services. For example, we have port
    `21` in the following screenshot, which is an FTP port. FTP is a service that''s
    installed to allow people to upload or download files from the remote server.
    FTP services usually use a username and a password, but we can see that this service
    has been misconfigured and it allows an anonymous FTP login. Unlike the SSH that
    we used before in the network penetration testing, we can use the default password.
    With this we will be able to log in without a password, note the next screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦扫描完成，我们将会有很多开放的端口和许多服务。建议我们进入 Nmap 输出标签页，逐一检查端口，查看服务类型，并谷歌搜索服务的名称。例如，在下图中我们看到
    `21` 端口，它是一个 FTP 端口。FTP 是一个用于让人们上传或下载文件的服务。FTP 服务通常需要用户名和密码，但我们可以看到这个服务配置错误，允许匿名
    FTP 登录。与我们之前在网络渗透测试中使用的 SSH 不同，我们可以使用默认密码。通过这个，我们将能够无需密码直接登录，请注意下一个截图：
- en: '![](assets/cd25d133-5f37-46dd-9a28-f581ea1af90d.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cd25d133-5f37-46dd-9a28-f581ea1af90d.png)'
- en: All we have to do is download an FTP client, such as FileZilla, and we will
    be able to connect using this IP address on port `21`. We won't go into the details
    of how to do it, as it is very simple. We just have to download the application
    and connect to it. We can also Google an FTP server, which in our case is vsftpd
    2.3.4, and see whether it has any issues, if it has any misconfigurations, or
    it has any known code execution exploits. Once we Google this, we can see that
    this particular application, vsftpd 2.3.4, has a backdoor installed with it. It
    literally came with a backdoor when it was released. We need to Google the services
    one by one and check whether they have any misconfigurations or any exploits installed,
    or any known exploits.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的就是下载一个 FTP 客户端，比如 FileZilla，然后我们就能使用该 IP 地址在 `21` 端口进行连接。我们不打算深入讨论具体的操作方法，因为非常简单。我们只需要下载应用程序并进行连接。我们还可以谷歌搜索一个
    FTP 服务器，在我们的例子中是 vsftpd 2.3.4，并查看它是否存在问题，是否有任何配置错误，或者是否有已知的代码执行漏洞。一旦我们搜索它，我们会发现这个特定版本的应用程序，vsftpd
    2.3.4，安装时就带有一个后门。它在发布时就附带了一个后门。我们需要逐个谷歌搜索服务，检查它们是否有配置错误，是否有已知漏洞或已知的漏洞。
- en: 'Now we are going to have a look at port `512`. Let''s assume we went on them
    one by one, we couldn''t find anything, and we reached the `512` TCP port, as
    shown in the next screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看 `512` 端口。假设我们逐一检查了这些端口，未发现任何问题，最终达到了 `512` 端口，如下图所示：
- en: '![](assets/4f7621b8-b8b3-4e15-93b6-d4262bc88856.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4f7621b8-b8b3-4e15-93b6-d4262bc88856.png)'
- en: 'We are going to Google the service that''s running on this port, as we don''t
    know what it is. After a little Googling, we know that netkit-rsh is a remote
    execution program. If we manage to log in with this, we''ll be able to execute
    commands on the target computer, and it uses the `rsh rlogin`, which is a program
    that ships with Linux. It allows us, similar to SSH, to execute remote commands
    on the target computer. Let''s go back and see how we can connect to the `rsh
    rlogin` service. Let''s look at the `netkit-rsh` package, and what comes with
    this package. As we can see, this is Ubuntu. The target computer system is running
    on Ubuntu, and we can see that in here it uses the `rsh-client` service to connect.
    We need to install a package to connect to that service. It is a client program
    for a remote shell connection. Now go back, and let''s install `rsh-client`. As
    we did before when we needed to install something, we run `apt-get`, and we do
    `install`. We''ll type the name of the program that we want to install, so it''s
    `rsh-client`. The command to install `rsh-client` is as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过谷歌搜索在此端口上运行的服务，因为我们不知道它是什么。经过一些搜索后，我们知道 netkit-rsh 是一个远程执行程序。如果我们能通过它登录，我们就能在目标计算机上执行命令，它使用的是
    `rsh rlogin`，这是一个随 Linux 系统附带的程序。它允许我们像 SSH 一样，在目标计算机上执行远程命令。现在让我们回去，看看如何连接到 `rsh
    rlogin` 服务。让我们看看 `netkit-rsh` 包以及它包含的内容。正如我们所见，目标计算机的系统运行的是 Ubuntu，我们可以看到它使用 `rsh-client`
    服务进行连接。我们需要安装一个包才能连接到该服务。它是一个远程 shell 连接的客户端程序。现在回去，我们来安装 `rsh-client`。就像之前安装其他东西一样，我们运行
    `apt-get`，然后执行 `install`。我们输入要安装的程序名称，所以就是 `rsh-client`。安装 `rsh-client` 的命令如下：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`apt-get` is going to install it for us and configure it, and once it''s installed,
    we''re going to use `rlogin` to log in, because the first page told us that it
    uses the `rlogin` program to facilitate the login process. We are going to do
    `rlogin`, and again, if we don''t know how to use this app, we use `--help` to
    see how to use it, as shown in the following screenshot:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`apt-get` 将为我们安装并配置它，一旦安装完成，我们将使用 `rlogin` 登录，因为第一页告诉我们它使用 `rlogin` 程序来简化登录过程。我们将执行
    `rlogin`，再次，如果我们不知道如何使用这个应用程序，我们可以使用 `--help` 查看如何使用它，如下截图所示：'
- en: '![](assets/06e6474a-efa7-4831-bd5d-b4ebdcc02e3c.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/06e6474a-efa7-4831-bd5d-b4ebdcc02e3c.png)'
- en: 'What''s important here is the username (`-l`) and the `host`, which is the
    target IP. Now we are going to do `rlogin`. We are going to put the username as
    `root`, which is the user with the most privileges on the system, and we''ll put
    the target IP, which is `10.0.2.4`. Here is the command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这里重要的是用户名（`-l`）和目标 IP `host`。现在我们将执行 `rlogin`。我们将用户名设置为 `root`，这是系统上权限最高的用户，并将目标
    IP 设置为 `10.0.2.4`。以下是命令：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'And now we are logged into the Metasploitable machine. If we execute the `id` command
    to get the ID, we can see that we are `root`. If we do a `uname -a` it will list
    the hostname and the kernel that''s running on the machine. We can see that we
    are in the Metasploitable machine with `root` access, shown as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经登录到 Metasploitable 机器。如果我们执行 `id` 命令来获取 ID，我们可以看到我们是 `root`。如果我们执行 `uname
    -a`，它将列出主机名和机器上运行的内核。我们可以看到我们以 `root` 访问权限登录到 Metasploitable 机器，如下所示：
- en: '![](assets/b61e8508-8c6a-4441-8562-c6da39bdb543.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b61e8508-8c6a-4441-8562-c6da39bdb543.png)'
- en: This is a basic manual way of gaining access to the target computer by exploiting
    the misconfiguration of an installed service. The `rlogin` service was not configured
    properly. All we had to do was just Google what came with that port, and we managed
    to log in and gain full access to the target computer.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过利用已安装服务的错误配置来获取目标计算机访问权限的基本手动方式。`rlogin` 服务未正确配置。我们所要做的就是搜索与该端口相关的内容，然后我们成功登录并完全访问了目标计算机。
- en: Again, the key point here is we do a Zenmap scan and then go to each port that
    we find. We Google that port and look for misconfigurations and default passwords.
    If this target service came in with a backdoor or code execution, maybe it just
    wasn't programmed properly or it had a flaw that can be used to gain access to
    that computer.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，关键点在于我们进行 Zenmap 扫描，然后查看我们找到的每个端口。我们搜索该端口并寻找错误配置和默认密码。如果目标服务带有后门或代码执行，也许它只是没有正确编程或存在可以用来访问该计算机的缺陷。
- en: Server-side attacks – Metasploit basics
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器端攻击 – Metasploit 基础知识
- en: 'In this section, we''re going to look at an example of a very simple thing:
    a backdoor. Some programs or services are shipped with backdoors embedded in them.
    We''re going to exploit this, and we are choosing this very simple exploit because
    we are going to look at a framework called Metasploit. We will be using this framework
    a lot. We are going to start with something simple and then we''re going to go
    deeper into the framework. First, let''s look at how we can find that exploit.
    Again, using the same method that we''ve always been using, we have an Nmap scan;
    as we know, we''re going to go on each port and Google them, looking for exploits.
    We are going to Google the service name `vsftpd 2.3.4 exploit`. It''s the service
    name followed by `exploit`. We can see that the first result comes in from a website
    called Rapid7\. Rapid7 is a company that makes the Metasploit framework, so that''s
    why we chose this particular exploit. We''re going to exploit this service, or
    this problem, using Metasploit. Rapid7 will tell us that the 2.3.4 version of
    FTP has a backdoor command execution, so we can basically execute commands on
    the target computer if it has this program installed. And from Nmap, we know that
    this program is installed, which means that we can execute commands on the target
    machine.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看一个非常简单的示例：一个后门。一些程序或服务在其中嵌入了后门。我们将利用这一点，选择这个非常简单的漏洞利用，因为我们将看一个名为 Metasploit
    的框架。我们将经常使用这个框架。我们将从简单的开始，然后深入研究框架。首先，让我们看看如何找到那个漏洞利用。再次使用我们一直在使用的相同方法，我们有一个 Nmap
    扫描；正如我们所知，我们将逐个端口进行搜索，并在 Google 上搜索漏洞利用。我们将在 Google 上搜索服务名称 `vsftpd 2.3.4 exploit`。这是服务名称后跟着
    `exploit`。我们可以看到第一个结果来自一个名为 Rapid7 的网站。Rapid7 是制作 Metasploit 框架的公司，所以我们选择了这个特定的漏洞利用。我们将利用
    Metasploit 来利用这个服务或这个问题。Rapid7 将告诉我们 FTP 的 2.3.4 版本具有后门命令执行，因此如果目标计算机安装了这个程序，我们基本上可以在目标计算机上执行命令。而从
    Nmap 中，我们知道这个程序已安装，这意味着我们可以在目标机器上执行命令。
- en: Metasploit, as we have said, is made by Rapid7\. It is a huge framework that
    contains a large number of exploits. It allows you to exploit vulnerabilities
    or create your own exploits. If you are an expert and you know how to discover
    and make exploits, then Metasploit will help you do that. For now, we're making
    use of a very simple existing vulnerability. The commands on Metasploit are very
    easy. They might seem a bit complicated at first, but once we get used to them,
    they are very easy to use, and a lot of them are generic commands. Here, we will
    show you the basic generic commands.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所说的，Metasploit 是由 Rapid7 制作的。它是一个包含大量漏洞利用的庞大框架。它允许您利用漏洞或创建自己的漏洞利用。如果您是专家并且知道如何发现和制作漏洞利用，那么
    Metasploit 将帮助您做到这一点。目前，我们正在利用一个非常简单的现有漏洞。Metasploit 上的命令非常简单。起初可能会有点复杂，但一旦我们习惯了，它们就非常容易使用，而且其中许多是通用命令。在这里，我们将向您展示基本的通用命令。
- en: 'There are other commands that we will get used to in time:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他命令，随着时间的推移我们会熟悉：
- en: '`msfconsole`: This just launches the Metasploit program.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msfconsole`: 这只是启动 Metasploit 程序。'
- en: '`help`: With this, we can get information about the commands and a description
    of how we can use them.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`help`: 通过这个命令，我们可以获取关于命令的信息以及如何使用它们的描述。'
- en: '`show`: This shows the available exploits. We can show the available auxiliaries
    and the available payloads. We''ll talk about what each of these mean in the future.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show`: 这会显示可用的漏洞利用。我们可以展示可用的辅助工具和可用的有效载荷。我们将在未来讨论这些各自的含义。'
- en: '`use`: This command is used to use something that we have shown. For example,
    we show the exploits and we pick a certain exploit that we want to use. Then we
    use the `use` command and we type in the exploit name to run it.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use`: 这个命令用于使用我们展示的某些内容。例如，我们展示了漏洞利用，然后选择我们想要使用的某个漏洞利用。然后我们使用 `use` 命令，输入漏洞利用的名称来运行它。'
- en: '`set`: The `set` command is used to set specific options for the exploit. For
    example, if we want to set the IP address of our target, we set the IP and then
    we enter the value of the IP that we want to set it to.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`set`: `set` 命令用于为漏洞利用设置特定选项。例如，如果我们想设置目标的 IP 地址，我们设置 IP，然后输入我们想要设置的 IP 值。'
- en: '`exploit`: At the end, once we finish configuring, we can type in `exploit`
    to execute that exploit.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exploit`: 最后，在我们完成配置后，我们可以输入`exploit`来执行该漏洞利用。'
- en: We went on Nmap, we Googled the name of the service, and the first thing that
    came up is that this service has a backdoor command execution. Because this is
    on Rapid7, the vulnerability is exploitable using Metasploit, and the module name
    that we're going to be using is `exploit.unix/ftp/vsftpd_234_backdoor` to exploit
    this vulnerability.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 Nmap 上查询了服务名称，搜索结果显示该服务存在后门命令执行漏洞。由于这个漏洞在 Rapid7 上被列出，且可以通过 Metasploit 利用，所以我们将使用
    `exploit.unix/ftp/vsftpd_234_backdoor` 模块来利用这个漏洞。
- en: 'Now we will go to our console, and we will launch Metasploit using the `msfconsole` command, and
    we''re going to run `use` and then put the name of the exploit, which is `exploit.unix/ftp/vsftpd_234_backdoor`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将进入控制台，使用 `msfconsole` 命令启动 Metasploit，然后运行 `use` 并输入漏洞名称，即 `exploit.unix/ftp/vsftpd_234_backdoor`：
- en: '[PRE2]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As we can see in the following screenshot, the name changed to `exploit` and
    then the name of exploit that we''re using:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在以下截图中看到的，名称已经更改为 `exploit`，并且后面是我们正在使用的漏洞名称：
- en: '![](assets/b84e84ba-62ad-4c32-b4d9-67f97706a602.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b84e84ba-62ad-4c32-b4d9-67f97706a602.png)'
- en: 'Then we''re going to use the `show` command to show the options that we need
    to set. As we know, `show` is a generic command that we can use in a number of
    cases. In this case, we''re doing `show options` to see all the options that we
    can change for this particular exploit. As you can see in the following screenshot,
    the second option is the port that the service is running on. It''s already set
    to port `21`:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将使用 `show` 命令来查看我们需要设置的选项。正如我们所知，`show` 是一个通用命令，可以在许多情况下使用。在这种情况下，我们运行 `show
    options` 以查看该特定漏洞可以更改的所有选项。正如以下截图所示，第二个选项是服务运行的端口。它已经设置为 `21` 端口：
- en: '![](assets/464d8448-97ca-4802-aee4-bd7392af770b.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/464d8448-97ca-4802-aee4-bd7392af770b.png)'
- en: 'If we go back to Nmap, we will see that our target FTP client, or server, is
    running on port `21`. We don''t need to change any of that. What we need to change
    is `RHOST`. `RHOST` is the target IP address, and we''re going to set `RHOST`,
    and that''s the IP address of my target Metasploitable machine. We use `set`,
    and after `set` we put the option name. If we want to change the port, we set
    `RPORT`, but we are changing the `RHOST` to `10.0.2.4`. As explained at the start
    of this topic, we''re going to use the `set` option, or the `set` command. The
    command is going to be as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回到 Nmap，我们会看到目标 FTP 客户端或服务器运行在 `21` 端口上。我们不需要更改任何内容。我们需要更改的是 `RHOST`。`RHOST`
    是目标 IP 地址，我们将设置 `RHOST` 为我的目标 Metasploitable 机器的 IP 地址。我们使用 `set`，在 `set` 后面输入选项名称。如果我们想更改端口，则设置
    `RPORT`，但我们将 `RHOST` 更改为 `10.0.2.4`。正如本主题开始时所解释的，我们将使用 `set` 选项或 `set` 命令。命令如下：
- en: '[PRE3]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Press *Enter*, and as we can see now, in the next screenshot, the `RHOST` is
    set to `10.0.2.4`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 按 *Enter* 键，正如我们在下一个截图中所看到的，`RHOST` 被设置为 `10.0.2.4`：
- en: '![](assets/4c8d319a-ef59-491c-9bda-eaef4db8ee36.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4c8d319a-ef59-491c-9bda-eaef4db8ee36.png)'
- en: 'Now we will do `show options` again just to make sure that everything is configured
    correctly, and as you can see in the following screenshot, `RHOST` has been changed
    to `10.0.2.4`:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将再次运行 `show options`，确保一切配置正确。正如以下截图所示，`RHOST` 已更改为 `10.0.2.4`：
- en: '![](assets/9e00cbab-19dc-4122-b92b-82b8c7e946cf.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9e00cbab-19dc-4122-b92b-82b8c7e946cf.png)'
- en: 'Everything is ready now. To execute the `exploit`, we just type in `exploit`.
    We can see in the following screenshot that the `exploit` was run successfully,
    and now we have access to the target computer. If we do `id` we will see that
    our `UID` is `root`:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一切就绪。为了执行 `exploit`，我们只需输入 `exploit`。我们可以在以下截图中看到，`exploit` 成功执行，现在我们可以访问目标计算机。如果执行
    `id`，我们会看到 `UID` 是 `root`：
- en: '![](assets/e03f0557-7292-429b-90f0-f94c9e37f3e6.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e03f0557-7292-429b-90f0-f94c9e37f3e6.png)'
- en: 'Now basically we are running Linux commands here, so if we do a `uname -a`
    we will see that this is my Metasploitable machine, and if we do `ls` then it''ll
    list the files for us. If we do `pwd` it''ll show us where we are, and we can
    use Linux commands to do anything we want on the target machine:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们基本上是在运行 Linux 命令，如果执行 `uname -a`，我们会看到这是我的 Metasploitable 机器，如果执行 `ls`，它会列出文件。如果执行
    `pwd`，它会显示当前路径，我们可以使用 Linux 命令在目标机器上执行任何操作：
- en: '![](assets/964b623d-22fc-4ccf-8004-9c0e0fa7652b.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/964b623d-22fc-4ccf-8004-9c0e0fa7652b.png)'
- en: Now this was a very simple use of Metasploit. In the future, we're going to
    be using it for more advanced actions.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这是一个非常简单的 Metasploit 使用方法。未来，我们将使用它进行更高级的操作。
- en: Metasploit remote code execution
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit 远程代码执行
- en: 'Now we''re going to have a more advanced look at Metasploit, and we''ll see
    how to use it to exploit a vulnerability that exists in a certain service. It''s
    a code execution vulnerability that will give us full access to the target computer.
    Coming back to our results in Nmap, we''re going to do the same thing that we''ve
    been doing for a while: we copy the service name and see whether it has any vulnerabilities.
    For now, we''re having a look at port `139`, which has a Samba server version
    3.X. We''re going to go to Google, just like we did in the previous section, and
    we''re going to look for `Samba 3.X exploit`. You will see there''s a number of
    results. The one that we''re interested in is from Rapid7, because, as mentioned
    earlier, these are the people that make Metasploit, so the exploits that we see
    there can be used through Metasploit. The exploit we''ll be using is username
    map script. It''s a command execution vulnerability. The name of the vulnerability
    is `exploit/multi/samba/usermap_script`, so it''s the same thing that we used
    before with the evil backdoor in the FTP service. This is just a different name
    that we''re going to use, as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将更深入地了解Metasploit，看看如何使用它来利用某个服务中存在的漏洞。这是一个代码执行漏洞，能够让我们完全访问目标计算机。回到我们在Nmap中的结果，我们将继续做我们已经做过一段时间的事情：复制服务名称并查看它是否有漏洞。目前，我们查看的是端口`139`，它运行的是Samba服务器版本3.X。我们将像在上一节中那样去Google搜索`Samba
    3.X exploit`。你会看到有许多结果。我们感兴趣的是来自Rapid7的那个，因为正如前面提到的，这些人是Metasploit的开发者，所以我们在这里看到的漏洞可以通过Metasploit使用。我们将使用的漏洞是username
    map script，这是一个命令执行漏洞。该漏洞的名称是`exploit/multi/samba/usermap_script`，这与我们之前在FTP服务中使用的恶意后门是一样的，只是我们现在使用的是不同的名称，如下图所示：
- en: '![](assets/d8d342c9-fef3-4ef5-9339-1ce62bd8d9b4.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d8d342c9-fef3-4ef5-9339-1ce62bd8d9b4.png)'
- en: 'We will go to Metasploit and run `msfconsole`. We will be writing a command
    like we did in the previous section. We write `use`, and then we are going to
    type the name of the exploit that we want to use. The next thing that we are going
    to do is `show options`. The command will be as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将进入Metasploit并运行`msfconsole`。我们将像在上一节中那样编写命令。我们输入`use`，然后输入我们想要使用的漏洞名称。接下来要做的是`show
    options`。命令如下：
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here is the output of the preceding command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是前面命令的输出：
- en: '![](assets/c7d8fe26-1f88-4244-84be-033a267bb208.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c7d8fe26-1f88-4244-84be-033a267bb208.png)'
- en: Using these exploits is always pretty much the same. The only difference is
    the `options` that we can set for each exploit. We always run `use` and then we
    type in the exploit name, and then do `show options` to see what we can change
    to work with this exploit. In the future, we probably will get different exploits
    than what we have now. Every time we want to run an exploit, we do `use <exploit
    name>`, and then we do `show options` to see the options that we want to configure.
    But using the exploits and setting the options and running them is always the
    same.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些漏洞利用方法总是差不多的。唯一的区别是我们可以为每个漏洞设置的`options`。我们总是运行`use`，然后输入漏洞名称，再执行`show options`来查看我们可以更改的设置，以便与此漏洞配合使用。在未来，我们可能会得到不同于现在的漏洞。每次我们想运行一个漏洞时，都会执行`use
    <exploit name>`，然后执行`show options`来查看我们需要配置的选项。但使用漏洞、设置选项和运行它们的过程始终是相同的。
- en: 'We will learn a few examples that should cover pretty much everything that
    we want to do in the future. Again, we need to set up `RHOST`, which is the IP
    of the target computer, and we''re going to do it the same way that we did before.
    As setting the `options` is always the same, so we''re going to do `set RHOST`,
    and then we''re going to put the IP of the target computer, which is `10.0.2.4`.
    Exactly like we did before, we''re using the `set` command to set an option, which
    is the `RHOST`. We''re going to run `show options`, and as we can see in the following
    screenshot, the `RHOST` will be set correctly according to the specified IP:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将学习一些例子，这些例子应该涵盖我们未来想要做的几乎所有事情。再次提醒，我们需要设置`RHOST`，即目标计算机的IP地址，我们将以之前相同的方式进行设置。因为设置`options`总是相同的，所以我们将执行`set
    RHOST`，然后输入目标计算机的IP地址，即`10.0.2.4`。就像我们之前做的那样，我们使用`set`命令来设置选项，即`RHOST`。接下来我们将运行`show
    options`，正如下面的截图所示，`RHOST`将根据指定的IP正确设置：
- en: '![](assets/ecce93f1-d64d-47bb-bf8c-30b13e0a6b43.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ecce93f1-d64d-47bb-bf8c-30b13e0a6b43.png)'
- en: This is where things differ from the previous section. In the preceding section,
    we used a backdoor that was already installed on the target computer, so all we
    had to do was connect to the backdoor and then we could run any Linux commands
    on the target computer. In this section, the target computer does not have a backdoor;
    it has a normal program that has a buffer overflow or a code execution vulnerability.
    The program doesn't have any code that allows us to run Linux commands. It has
    a certain flaw that will let us run a small piece of code. These small pieces
    of code are called **payloads**. What we need to do is create a payload and then
    run it on the target computer using the vulnerability that we found. That piece
    of code will allow us to do different things. The payload is what allows us to
    do things that are useful to us.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分与前一部分有所不同。在前一部分中，我们使用的是已经在目标计算机上安装的后门，因此我们只需连接到后门，就可以在目标计算机上运行任何 Linux 命令。而在这一部分中，目标计算机没有后门，它有一个存在缓冲区溢出或代码执行漏洞的普通程序。这个程序没有任何代码允许我们运行
    Linux 命令。它有一个特定的漏洞，允许我们运行一小段代码。这些小段代码被称为**载荷**。我们需要做的是创建一个载荷，然后利用我们发现的漏洞在目标计算机上运行它。这段代码将允许我们做不同的事情。载荷就是让我们做对我们有用的事情的关键。
- en: 'Now, the payload might let us do Linux commands, and there are other types
    of payload we''ll look at in the future. To see the payloads that you can use
    with this particular exploit, all you have to do is run the `show payloads` command.
    We can use different types of payload, as shown in the following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，载荷可能会让我们运行 Linux 命令，未来我们还会看到其他类型的载荷。要查看可以在此特定漏洞利用中使用的载荷，您只需运行 `show payloads`
    命令。我们可以使用不同类型的载荷，如下图所示：
- en: '![](assets/b482b5d3-9ac2-4852-81f1-8b021dc0f0bd.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b482b5d3-9ac2-4852-81f1-8b021dc0f0bd.png)'
- en: Payloads are small pieces of code that will be executed on the target computer
    once the vulnerability has been exploited. When we exploit the vulnerability,
    the code that we're going to pick will be executed, and depending on the type
    of payload we choose, that payload will do something that is useful to us. Right
    now, we can see that all the payloads are command line, so they let us run commands
    on the target computer, just like Linux commands. And all of them only run on
    Unix, because our target is Linux.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 载荷是小段代码，一旦漏洞被利用，它们就会在目标计算机上执行。当我们利用这个漏洞时，我们选择的代码将被执行，具体执行什么内容取决于我们选择的载荷类型。现在，我们可以看到所有载荷都是命令行型的，因此它们让我们在目标计算机上运行命令，就像运行
    Linux 命令一样。并且它们都只在 Unix 系统上运行，因为我们的目标是 Linux。
- en: 'There are two main types of payloads:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 载荷主要有两种类型：
- en: '**Bind payloads**: All they do is open a port on the target computer, and then
    we can connect to that port.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**绑定载荷**：它们的作用是打开目标计算机的一个端口，然后我们可以连接到该端口。'
- en: '**Reverse payloads**:They do the opposite of bind payloads. They open a port
    in my machine and then they connect from the target computer to our machine. This
    is useful because this allows us to bypass firewalls. Firewalls filter any connections
    going to the target machine, but if the target machine connects to us and we don''t
    have a firewall, then we will be able to bypass the firewall.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反向载荷**：它们的作用与绑定载荷相反。它们在我的机器上打开一个端口，然后目标计算机从它连接到我们的机器。这非常有用，因为它使我们能够绕过防火墙。防火墙会过滤所有连接到目标计算机的请求，但如果目标计算机连接到我们，而我们没有防火墙，那么我们就能绕过防火墙。'
- en: 'We will be using the `cmd/unix/reverse_netcat` payload. The last part of these
    payloads are the programming language or the tool that''s going to be used to
    facilitate the connection. For example, we can see in preceding screenshot that
    there are payloads written in Perl, Ruby, Python, PHP, or using Netcat, which
    is a tool that allows connections between computers. The `cmd/unix/reverse_netcat` payload is
    the one that we are going to use, and we are going to use it in the same way we
    use an exploit. We are just going to use it using the `set` command. The command
    will be as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `cmd/unix/reverse_netcat` 载荷。这些载荷的最后部分是将用于连接的编程语言或工具。例如，我们可以在前面的截图中看到，有些载荷是用
    Perl、Ruby、Python、PHP 编写的，或者使用 Netcat 工具来建立计算机间的连接。我们将使用的载荷是 `cmd/unix/reverse_netcat`，我们将像使用漏洞利用一样使用它。我们只需要使用
    `set` 命令，命令如下：
- en: '[PRE5]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The same way you set an `option`, we''re going to set payload. We do `show
    options` to see if there are any other `options` that we need to `set`, and because
    we picked a payload, there are more `options`. As you can see in the following
    screenshot, there is an option called `LHOST`, and it''s the listening address,
    which is our own address:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 和设置 `option` 的方式一样，我们也要设置负载。我们执行 `show options` 查看是否有其他需要设置的 `options`，因为我们选择了一个负载，所以会有更多的
    `options`。正如你在下面的截图中看到的，那里有一个叫做 `LHOST` 的选项，它是监听地址，就是我们自己的地址：
- en: '![](assets/c4816ec1-da1f-42f9-ba5e-41fe63aa69fa.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c4816ec1-da1f-42f9-ba5e-41fe63aa69fa.png)'
- en: 'We are going to get our own IP address using `ifconfig`, and our address for
    this example is `10.2.0.15`, shown as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `ifconfig` 获取我们自己的 IP 地址，作为本示例，我们的地址是 `10.2.0.15`，如下所示：
- en: '![](assets/f0d945f2-099f-4730-98ec-2c2f0b762d53.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f0d945f2-099f-4730-98ec-2c2f0b762d53.png)'
- en: 'We are going to set the `LHOST `in the same way that we set the `RHOST` before.
    We set the `LHOST` to `10.2.0.15`. Before, we used `set RHOST` to set this option.
    Now we''re setting the `LHOST` to set this particular option. The `set` command
    is really simple: `set`, the `<option name>`, and then the `<value>` that we want
    to set it to:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将以与之前设置 `RHOST` 相同的方式设置 `LHOST`。我们将 `LHOST` 设置为 `10.2.0.15`。之前，我们使用了 `set
    RHOST` 来设置这个选项。现在我们正在设置 `LHOST` 来设置这个特定选项。`set` 命令非常简单：`set`，然后是 `<option name>`，接着是我们要设置的
    `<value>`：
- en: '[PRE6]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then we are going to do `show options`, and everything seems fine, as shown
    in the next screenshot:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将执行 `show options`，一切看起来都很好，正如下图所示：
- en: '![](assets/e5492ef4-4989-4346-9e58-b8cbc625ec29.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e5492ef4-4989-4346-9e58-b8cbc625ec29.png)'
- en: 'We''re using this exploit. The `RHOST` is set to `10.0.2.4`, which is OK, and
    then the `LHOST` is set to `10.0.2.15`, which is perfect, and then we can also
    set the port that you''re going to be listening on on your current computer. You
    can actually set it to `80` if you want to. That''s the port that is used by web
    browsers. If we set the `LPORT` to `80`, the target computer will try to connect
    to us using port `80`, which is never filtered on firewalls because that''s the
    port that web browsers, or web servers, use. Whenever we access a website, we
    actually access port `80` on that website. If we open port `80` on our machine
    and the target connects to us on port `80`, then the firewall will think that
    the target is only browsing the internet. We are not going to do that now because
    we have a web server running on port `80` and that will conflict. We are just
    going to `set` the `LPORT` to `5555`, in the same way as `LHOST`. We are going
    to do `show options` again, and as we can see in the following screenshot, that
    port has been changed to `5555`:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在使用这个漏洞。`RHOST` 被设置为 `10.0.2.4`，这是可以的，然后 `LHOST` 被设置为 `10.0.2.15`，这是完美的，然后我们还可以设置当前计算机上要监听的端口。如果你愿意的话，实际上可以将其设置为
    `80`。这是浏览器使用的端口。如果我们将 `LPORT` 设置为 `80`，目标计算机将尝试使用端口 `80` 连接到我们，这个端口在防火墙中通常不会被过滤，因为这是浏览器或
    web 服务器使用的端口。每当我们访问一个网站时，实际上是在访问该网站的 `80` 端口。如果我们在自己的机器上打开端口 `80`，并且目标通过端口 `80`
    连接到我们，那么防火墙会认为目标仅仅是在浏览互联网。我们现在不会这么做，因为我们在端口 `80` 上运行着一个 Web 服务器，这会发生冲突。我们只是将 `LPORT`
    设置为 `5555`，与设置 `LHOST` 的方式相同。然后我们会再次执行 `show options`，正如我们在下面的截图中看到的，端口已经更改为 `5555`：
- en: '![](assets/3e44a1d0-8a1b-4a74-8a86-48006fd903f8.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3e44a1d0-8a1b-4a74-8a86-48006fd903f8.png)'
- en: 'Now we are going to run the `exploit` command to run the exploit. As we can
    see in the following screenshot, it''s telling us that `session 1` has been opened
    and the connection is between the `10.0.2.15:5555` device and the `10.0.2.4:48184`
    device, which is our device and the target device:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将运行 `exploit` 命令来执行漏洞。如下面的截图所示，它告诉我们 `session 1` 已经打开，并且连接在 `10.0.2.15:5555`
    设备与 `10.0.2.4:48184` 设备之间，这就是我们的设备和目标设备：
- en: '![](assets/951e4b9f-f5b1-468c-b64d-19a8a922a79c.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/951e4b9f-f5b1-468c-b64d-19a8a922a79c.png)'
- en: 'We are going to do `pwd`, and we do `id`. We will see that we are `root`. If
    we do `uname -a`, we will see we are in the Metasploitable machine, and if we
    do `ls` we will be able to list the files and so on. We can use any Linux command
    just like we did before in the previous section, shown as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将执行 `pwd`，然后执行 `id`。我们会看到我们是 `root` 用户。如果我们执行 `uname -a`，我们会看到我们处于 Metasploitable
    机器上，如果执行 `ls`，我们将能够列出文件等。我们可以像在前一部分中那样使用任何 Linux 命令，如下所示：
- en: '![](assets/b1150740-4f58-471a-9a8c-c1aea2c5f810.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b1150740-4f58-471a-9a8c-c1aea2c5f810.png)'
- en: Summary
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at the concept of gaining access to a machine, and
    we also got an overview of ways to gain access. We also looked at the basics of
    server-side attacks, which are the techniques of gaining access to victims' machines.
    We saw how to use a default password or a misconfigured service to gain access
    to the target computer. We then saw how to use a service with a default password,
    a service that has not been configured correctly, and a service that came with
    a backdoor to gain full access to the target computer. We also looked at using
    Metasploit to connect to a backdoor that was installed on the FTP service. The
    next chapter will be about using the MSFC and Nexpose tools to scan and analyze
    vulnerabilities.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了如何获得对机器的访问权限的概念，并概述了获取访问权限的几种方式。我们还了解了服务器端攻击的基础知识，即获取受害者机器访问权限的技术。我们看到如何使用默认密码或配置错误的服务来获取目标计算机的访问权限。接着，我们看到如何利用一个带有默认密码、未正确配置的服务，或者带有后门的服务来获取目标计算机的完全访问权限。我们还学习了如何使用Metasploit连接到安装在FTP服务上的后门。下一章将介绍如何使用MSFC和Nexpose工具扫描和分析漏洞。
