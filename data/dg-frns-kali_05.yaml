- en: Evidence Acquisition and Preservation with DC3DD and Guymager
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DC3DD和Guymager进行证据获取和保留
- en: In the previous chapter, we learned that documentation and proper procedures
    are key in any investigation. These ensure the integrity of the investigation
    by providing proof of data authenticity and preservation of the original evidence
    and documentation, which can be used to achieve the same exact results if usage
    of tools and methods are repeated.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解到文档和适当的程序对于任何调查都是关键的。这些确保了调查的完整性，通过提供数据真实性的证据和原始证据和文档的保留，可以在重复使用工具和方法时达到完全相同的结果。
- en: In this chapter, we will demonstrate forensically sound techniques for the acquisition
    of data using Bitstream copies inclusive of creating data hashes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将演示使用比特流副本进行数据取证的取证技术。
- en: The first tool we will use for acquisition is called **DC3DD** (**Department
    of Defense Cyber Crime Center**). DC3DD is a patch of the very popular Data Dump
    or DD tool, used for forensic acquisition and hashing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的第一个获取工具称为**DC3DD**（**国防部网络犯罪中心**）。DC3DD是非常流行的数据转储或DD工具的一个补丁，用于取证获取和哈希。
- en: 'These are the features of **Data Dump** (**DD**):'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是**数据转储**（**DD**）的特点：
- en: Bitstream (raw) disk acquisition and cloning
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比特流（原始）磁盘获取和克隆
- en: Copying disk partitions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制磁盘分区
- en: Copying folders and files
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制文件夹和文件
- en: Hard disk drive error checking
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬盘驱动器错误检查
- en: Forensic wiping of all data on hard disk drives
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对硬盘驱动器上的所有数据进行取证擦除
- en: We will then explore another very popular acquisition tool called Guymager,
    which offers many of the same features in a GUI.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将探索另一个非常流行的获取工具，名为Guymager，它在GUI中提供了许多相同的功能。
- en: Drive and partition recognition in Linux
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux中的驱动器和分区识别
- en: Users new to Kali or any Linux variations may find that the drive and partition
    recognition and naming in Kali are different to that of Windows devices.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Kali或任何Linux变体的新用户来说，他们可能会发现Kali中的驱动器和分区识别和命名与Windows设备不同。
- en: 'A typical device in Linux can be addressed or recognized as `/dev/sda`, whereas
    drives in Windows are usually recognized as `Disk 0` and `Disk 1`, and so on:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中，典型的设备可以被称为`/dev/sda`，而在Windows中，驱动器通常被识别为`Disk 0`，`Disk 1`等等：
- en: '`/dev`: Refers to the path of all devices and drives that can be read from
    or written to, recognized by Linux'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/dev`：指的是Linux可以读取或写入的所有设备和驱动器的路径'
- en: '`/sda`: Refers to **SCSI** (**Small Computer Systems Interface**), SATA, and
    USB devices'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/sda`：指的是**SCSI**（**小型计算机系统接口**），SATA和USB设备'
- en: 'The **sd** stands for **SCSI Mass-Storage Driver**, with the letter after representing
    the drive number:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**sd**代表**SCSI大容量存储驱动器**，后面的字母代表驱动器号：'
- en: '`sda`: Drive `0` or the first drive recognized'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sda`：驱动器`0`或第一个被识别的驱动器'
- en: '`sdb`: The second drive'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sdb`：第二个驱动器'
- en: 'While Windows recognizes partitions as primary, logical, and extended, Linux
    partitions are recognized as numbers, after the drive letter:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Windows将分区识别为主分区、逻辑分区和扩展分区，但Linux分区被识别为驱动器字母后的数字：
- en: '`sda1`: Partition 1 on the first disk (`sda`)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sda1`：第一个磁盘（`sda`）上的分区1'
- en: '`sda2`: Partition 2 on the first disk'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sda2`：第一个磁盘上的分区2'
- en: '`sdb1`: Partition 1 on the second disk (`sdb`)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sdb1`：第二个磁盘（`sdb`）上的分区1'
- en: '`sdb2`: Partition 2 on the second disk'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sdb2`：第二个磁盘上的分区2'
- en: Device identification using the fdisk command
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用fdisk命令进行设备识别
- en: Before we get started using DD, I need to again draw your attention to one of
    the features of DD, being the ability to wipe data, partitions, and drives. Hence,
    you may find that DD is sometimes also fondly referred to as the **Data Destroyer**.
    Be sure to always first identify your devices, partitions, input and output files,
    and parameters when using DD and DC3DD.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用DD之前，我需要再次提醒您DD的一个特点，即能够擦除数据、分区和驱动器。因此，您可能会发现DD有时也被亲切地称为**数据销毁者**。在使用DD和DC3DD时，一定要首先确定您的设备、分区、输入和输出文件以及参数。
- en: For the exercises in this chapter, I'll be using an old 2 GB flash drive for
    the acquisition process using DC3DD. To list your devices and ensure that you
    are aware of them before performing any acquisition operations, the `fdisk -l`
    command should be run before any other. The `sudo fdisk -l` command may have to
    be used if the previous one does not work.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的练习中，我将使用一个旧的2GB闪存驱动器进行使用DC3DD进行获取过程。在执行任何获取操作之前，应该先运行`fdisk -l`命令来列出您的设备并确保您已经了解它们。如果前一个命令不起作用，可能需要使用`sudo
    fdisk -l`命令。
- en: 'In the following screenshot, the `fdisk -l` command has been run before attaching
    the 2 GB flash drive to list the devices already connected. There is one hard
    disk listed as `sda`. The Primary partition is listed as `sda1`, with the `Extended`
    and `Linux swap` partitions listed as `sda2` and `sda5`, respectively:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下截图中，已经运行了`fdisk -l`命令，然后连接了2GB闪存驱动器以列出已连接的设备。有一个硬盘列为`sda`。主分区列为`sda1`，`扩展`和`Linux
    swap`分区分别列为`sda2`和`sda5`：
- en: '![](img/387e13fd-446b-405b-909d-17f038efa156.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/387e13fd-446b-405b-909d-17f038efa156.png)'
- en: 'After attaching the 2 GB flash drive for acquisition, the `fdisk -l` command
    was run yet again and can be seen in the following screenshot with these details:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在连接2GB闪存驱动器进行获取后，再次运行`fdisk -l`命令，并且可以在以下截图中看到以下细节：
- en: '**Disk**: `sdb`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**磁盘**：`sdb`'
- en: '**Size**: `1.9 GB`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大小**：`1.9GB`'
- en: '**Sector size**: `512 bytes`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扇区大小**：`512字节`'
- en: '**Filesystem**: `FAT32`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件系统**：`FAT32`'
- en: '![](img/28546d27-fa7c-44a8-a2a4-488e6e700fd5.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/28546d27-fa7c-44a8-a2a4-488e6e700fd5.png)'
- en: 'As seen in the previous screenshots (and also explained earlier in this chapter),
    Kali Linux recognizes two devices:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示（并且在本章的前面也有解释），Kali Linux识别了两个设备：
- en: '`sda`: Primary hard disk with three partitions'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sda`：带有三个分区的主硬盘'
- en: '`sdb`: Flash drive to be forensically acquired or imaged'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sdb`：要进行取证获取或成像的闪存驱动器'
- en: Now that we've distinguished and become certain of which drive is to be imaged
    (`sdb`) we can begin the forensic imaging using DC3DD.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确定了要成像的驱动器（`sdb`），我们可以开始使用DC3DD进行取证成像。
- en: Although I have used an older 2 GB flash drive to demonstrate the usage of DC3DD,
    you can use any drive (portable or otherwise) to practice using the tools in this
    chapter. Be sure to use the `fdisk -l` command to identify your drives and partitions.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我使用了一个较旧的2GB闪存驱动器来演示DC3DD的用法，但您可以使用任何驱动器（便携式或其他）来练习本章中的工具。请确保使用`fdisk -l`命令来识别您的驱动器和分区。
- en: Maintaining evidence integrity
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持证据的完整性
- en: In an effort to provide proof that the evidence was not tampered with, a hash
    of the evidence should be provided before and during, or after, an acquisition.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了证明证据没有被篡改，应在获取之前和期间或之后提供证据的哈希。
- en: In Kali Linux, we can use the `md5sum` command followed by the path of the device,
    to create an MD5 hash of the evidence/input file. For example, `md5sum /dev/sdx`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kali Linux中，我们可以使用`md5sum`命令，后跟设备的路径，来创建证据/输入文件的MD5哈希。例如，`md5sum /dev/sdx`。
- en: You may also try the command with superuser privileges by typing `sudo md5sum
    /dev/sdx`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以尝试使用超级用户权限输入“sudo md5sum /dev/sdx”命令。
- en: 'For this example, the 2 GB flash drive that I''ll be using (named `test_usb`)
    is recognized as `sdb`, and so the command I will be using, is shown in the following
    screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我将使用的2GB闪存驱动器（名为`test_usb`）被识别为`sdb`，因此我将使用的命令如下截图所示：
- en: '![](img/73cf392e-6c40-47e5-a8d9-76ce6eca747a.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/73cf392e-6c40-47e5-a8d9-76ce6eca747a.png)'
- en: In the previous example, the output of the `md5sum` of the 2 GB flash drive
    is displayed as `9f038....1c7d3  /dev/sdb.` When performing the acquisition or
    forensic imaging of the drive using DC3DD, we should also have that exact result
    when hashing the created image file output to ensure that both the original evidence
    and the copy are exactly the same, thereby maintaining the integrity of the evidence.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，“md5sum”对2GB闪存驱动器的输出显示为“9f038....1c7d3 /dev/sdb”。当使用DC3DD执行驱动器的获取或取证成像时，我们还应该在对创建的映像文件输出进行哈希时获得确切的结果，以确保原始证据和副本完全相同，从而保持证据的完整性。
- en: 'I''ve also created an SHA-1 hash (which will be used for comparative purposes)
    using the following syntax:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我还使用以下语法创建了一个SHA-1哈希（将用于比较目的）：
- en: '![](img/4da886de-7a27-4e2a-9f82-bc438d4d605e.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4da886de-7a27-4e2a-9f82-bc438d4d605e.png)'
- en: Using DC3DD in Kali Linux
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Kali Linux中使用DC3DD
- en: 'DC3DD was developed by the Department of Defense Cyber Crime Center and is
    updated whenever DD updates. DC3DD offers the best of DD with more features, including:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: DC3DD是由国防部网络犯罪中心开发的，并且在DD更新时进行更新。DC3DD提供了DD的最佳功能，包括：
- en: On-the-fly hashing using more algorithm choices (MD5, SHA-1, SHA-256, and SHA-512)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用更多的算法选择（MD5、SHA-1、SHA-256和SHA-512）进行即时哈希处理
- en: A meter to monitor progress and acquisition time
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于监视进度和获取时间的仪表
- en: Writing of errors to a file
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将错误写入文件
- en: Splitting of output files
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分割输出文件
- en: Verification of files
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件验证
- en: Wiping of output files (pattern wiping)
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 擦除输出文件（模式擦除）
- en: Although we'll only be looking at DD and DC3DD, there is also another tool called
    **DCFLDD**, which can be installed on Linux-based systems. DCFLDD is an enhanced
    version of DD and is maintained and supported by the **Defense Computer Forensics
    Labs** (**DCFL**) with its own release schedule, unlike DC3DD which updates synchronized
    with DD.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们只关注DD和DC3DD，但还有另一个名为**DCFLDD**的工具，可以安装在基于Linux的系统上。DCFLDD是DD的增强版本，并由**Defense
    Computer Forensics Labs**（**DCFL**）维护和支持，其发布时间表与DD不同步更新。
- en: 'DC3DD is a CLI and can be easily run in Kali Linux by first opening a Terminal
    and typing `dc3dd`. To start with, I recommend using the `dc3dd --help` command,
    which lists the available parameters used with `dc3dd`:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: DC3DD是一个CLI，可以通过首先打开终端并输入`dc3dd`来轻松在Kali Linux中运行。首先建议使用`dc3dd --help`命令，该命令列出了与`dc3dd`一起使用的可用参数：
- en: '![](img/7b59bca0-78ea-4589-9c48-39e42e399078.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7b59bca0-78ea-4589-9c48-39e42e399078.png)'
- en: 'As seen in the previous screenshot using the `dc3dd --help` command, typical
    usage of the DC3DD command looks like this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的屏幕截图所示，使用“dc3dd --help”命令，DC3DD命令的典型用法如下：
- en: '[PRE0]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In our previous example, I''ve used the following options:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前的示例中，我使用了以下选项：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/f63d213f-1b3a-4cd4-813b-589c9ba0febc.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f63d213f-1b3a-4cd4-813b-589c9ba0febc.png)'
- en: '`if`: Specifies the *input file,* which is the device we will be imaging.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`if`：指定*输入文件*，即我们将进行成像的设备。'
- en: '`hash`: Specifies the type of hash algorithm we will be using for integrity
    verification. In this case, I have used the older MD5 hash.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希：指定用于完整性验证的哈希算法的类型。在这种情况下，我使用了较旧的MD5哈希。
- en: '`log`: Specifies the name of the log file that logs the details of the device
    and the acquisition, including errors.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`log`：指定记录设备和获取详细信息的日志文件的名称，包括错误。'
- en: '`of`: Specifies the output file name of the forensic image created by DC3DD.
    Although a `.dd` image file type was specified in this example, other formats
    are recognized by DC3DD including `.img` as seen in a later example.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`of`：指定由DC3DD创建的取证映像的输出文件名。在本示例中指定了`.dd`映像文件类型，DC3DD也识别其他格式，包括`.img`，如后面的示例中所示。'
- en: The device size (in sector and bytes) should be noted and later compared to
    the *output results for device* field.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 应注意设备大小（以扇区和字节表示），并稍后与*设备的输出结果*进行比较。
- en: 'The last line also displays the progress and status of the acquisition process,
    showing the amount of data copied, elapsed time in seconds, and the speed of the
    imaging process in Mbps:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一行还显示了获取过程的进度和状态，显示了已复制的数据量、经过的时间（以秒为单位）以及成像过程的速度（以Mbps为单位）：
- en: '![](img/454a9fcd-2f8f-4dc5-aa6d-8e5f884b402e.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/454a9fcd-2f8f-4dc5-aa6d-8e5f884b402e.png)'
- en: The larger the drive or file to be acquired, the lengthier the time taken to
    do so. Might I suggest you get yourself a cup of coffee or refreshing beverage,
    or even have a look at some other wonderful titles available from Packt at [https://www.packtpub.com/](https://www.packtpub.com/).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取的驱动器或文件越大，所需的时间就越长。我建议您喝杯咖啡或清爽的饮料，或者看看Packt提供的其他精彩书籍[https://www.packtpub.com/](https://www.packtpub.com/)。
- en: 'Once the acquisition process has been completed, the input and output results
    are displayed:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦获取过程完成，输入和输出结果将被显示：
- en: '![](img/dab092e5-4567-4126-932d-feaf42f05795.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dab092e5-4567-4126-932d-feaf42f05795.png)'
- en: Analyzing the results, we can see that the same amount of sectors (`3913664`)
    have been imaged, with no bad sectors being replaced by zeros. We can also see
    that the exact MD5 hash was created for the image, assuring us that an exact copy
    was created without modification.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 分析结果，我们可以看到已经成像了相同数量的扇区（`3913664`），没有坏扇区被替换为零。我们还可以看到为图像创建了确切的MD5哈希，确保我们创建了一个没有修改的精确副本。
- en: 'In the Terminal, we can also use the `ls` command to list the directory contents
    to ensure the DC3DD output file (`test_usb.dd`) and log (`dc3ddusb`) have been
    created:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中，我们还可以使用`ls`命令列出目录内容，以确保DC3DD输出文件（`test_usb.dd`）和日志（`dc3ddusb`）已经创建：
- en: '![](img/4e3c6ece-807d-4223-bc57-dea440ab8125.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e3c6ece-807d-4223-bc57-dea440ab8125.png)'
- en: To access our forensic image and log file, we can go to our `/home` directory
    by clicking on places (top left corner) and then `Home`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问我们的取证图像和日志文件，我们可以通过点击“位置”（左上角）然后`Home`，进入`/home`目录。
- en: 'Within my `Home` folder, the first file, `2GBdcedd.dd`, is the output image
    created by DC3DD using the `of=test_usb.dd` command. The last file, `dc3ddusb`,
    is the log file, created when we used the `log=dc3ddusb` command:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的`Home`文件夹中，第一个文件`2GBdcedd.dd`是使用`of=test_usb.dd`命令由DC3DD创建的输出图像。最后一个文件`dc3ddusb`是日志文件，当我们使用`log=dc3ddusb`命令时创建的。
- en: '![](img/7905e41d-6383-4589-ab2e-dd40864298c7.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7905e41d-6383-4589-ab2e-dd40864298c7.png)'
- en: 'It''s important to keep this log file to have a record of the acquisition process
    and its results, which were displayed on screen upon completion:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 保留这个日志文件很重要，以记录获取过程及其结果，这些结果在完成时显示在屏幕上：
- en: '![](img/8247e903-bdf7-476b-bdc9-85294948934f.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8247e903-bdf7-476b-bdc9-85294948934f.png)'
- en: In future chapters, we will be analyzing acquired forensic images using various
    tools; however, the image can also be copied or directly cloned to another device
    if the investigator so wishes.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在未来的章节中，我们将使用各种工具分析获取的取证图像；然而，如果调查人员希望，该图像也可以被复制或直接克隆到另一个设备。
- en: 'As an example, we could clone the forensic image acquired previously (`test_usb.dd`)
    onto a new drive recognized as `sdc`. The command used to perform this task would
    be:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以将之前获取的取证图像（`test_usb.dd`）克隆到一个新的被识别为`sdc`的驱动器上。执行此任务的命令是：
- en: '[PRE2]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When copying an image to a drive, the destination drive size should be of equal
    size or larger than the image file.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像复制到驱动器时，目标驱动器的大小应与图像文件相等或更大。
- en: File-splitting using DC3DD
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DC3DD进行文件分割
- en: Depending on the size of the evidence, manageability and portability can become
    an issue. DC3DD has the ability to split forensically acquired images into multiple
    parts.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 根据证据的大小，可管理性和可移植性可能成为一个问题。DC3DD有能力将取证获取的图像分割成多个部分。
- en: 'This is accomplished using the `ofsz` and `ofs` options:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过使用`ofsz`和`ofs`选项完成的：
- en: '`ofsz` specifies the size of each output file part'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ofsz`指定了每个输出文件部分的大小'
- en: '`ofs` specifies the output files with numerical file extensions, typically `.000`,
    `.001`, `.002`, and so on'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ofs`指定了带有数字文件扩展名的输出文件，通常为`.000`、`.001`、`.002`等'
- en: Always ensure that you have specified enough zeros for the file extension. Logically,
    `.000` allows for more parts than `.00`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 始终确保你已经为文件扩展名指定了足够的零。逻辑上，`.000`允许比`.00`更多的部分。
- en: For this example, I've used the same 2 GB flash drive as before; however, for
    demonstrative purposes, you'll notice two changes.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我使用了之前的相同的2GB闪存驱动器；但是，为了演示目的，你会注意到两个变化。
- en: Instead of using the MD5 hash, I've specified that SHA-1 be used and the output
    file type will be `.img` instead of the previously used `.dd`.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经指定使用SHA-1而不是MD5哈希，并且输出文件类型将是`.img`而不是以前使用的`.dd`。
- en: In this instance, the imaged 2 GB flash size will instead be split into multiple
    parts (four in total) of 500 MBs each using `ofsz=500M` with the parts named as
    `2GBdc3dd2.img.ooo`, `2GBdc3dd2.img.oo1`, `2GBdc3dd2.img.oo2`, and `2GBdc3dd2.img.oo3`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，成像的2GB闪存大小将被分成多个部分（总共四个），每个部分为500MB，使用`ofsz=500M`，部分的名称为`2GBdc3dd2.img.ooo`、`2GBdc3dd2.img.oo1`、`2GBdc3dd2.img.oo2`和`2GBdc3dd2.img.oo3`。
- en: 'The command used to achieve this is:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 用于实现这一点的命令是：
- en: '[PRE3]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](img/21f47ecb-5d6d-476c-a27e-444d4ccf5c30.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21f47ecb-5d6d-476c-a27e-444d4ccf5c30.png)'
- en: 'Once completed, the input results for the device shows the SHA-1 hash output
    and also displays the first part of the split image files:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，设备的输入结果显示了SHA-1哈希输出，并显示了分割图像文件的第一部分：
- en: '![](img/6e7757a7-e3c6-4d4e-b0ae-a39dfb25e7bf.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6e7757a7-e3c6-4d4e-b0ae-a39dfb25e7bf.png)'
- en: 'Using the `ls` command once more, we can see that the extensions of each of
    the four split output files are all in numerical format from `.000` to `.003`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用`ls`命令，我们可以看到四个分割输出文件的扩展名都是从`.000`到`.003`的数字格式：
- en: '![](img/1d87b0e7-d4f1-41a1-ac4f-6231bf2abe28.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1d87b0e7-d4f1-41a1-ac4f-6231bf2abe28.png)'
- en: 'All split parts of the imaged file can be found in the `Home` folder along
    with the log file:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图像文件的所有分割部分都可以在`Home`文件夹中找到，以及日志文件：
- en: '![](img/c96056e6-a217-4e68-ae22-73e98150c14b.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c96056e6-a217-4e68-ae22-73e98150c14b.png)'
- en: Verifying hashes of split image files
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证分割图像文件的哈希值
- en: 'To verify the hash of the split files, the following command can be used:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证分割文件的哈希值，可以使用以下命令：
- en: '[PRE4]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/42d8b455-6299-45d6-b661-c979bc8aec9d.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/42d8b455-6299-45d6-b661-c979bc8aec9d.png)'
- en: 'This also matches the `sha1sum` output of the 2 GB flash drive itself, displayed
    by using the following command:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这也与2GB闪存驱动器本身的`sha1sum`输出相匹配，通过使用以下命令显示：
- en: '[PRE5]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](img/38764736-f954-479a-873d-08e7091eb64c.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38764736-f954-479a-873d-08e7091eb64c.png)'
- en: Erasing a drive using DC3DD
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DC3DD擦除驱动器
- en: 'We''ve seen the power of DC3DD as a very impressive forensic acquisition tool,
    but I''d also like to go one step further and introduce you to its capabilities
    as a data wiping tool. DC3DD can wipe data and erase drives by overwriting data
    in three ways:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到DC3DD作为一个非常出色的取证工具，但我还想进一步介绍它作为数据擦除工具的能力。DC3DD可以通过三种方式覆盖数据来擦除数据和驱动器：
- en: 'Overwriting and filling the data and drives with zeroes. The command used is `dc3dd
    wipe=/dev/sdb`:'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`dc3dd wipe=/dev/sdb`命令覆盖并填充数据和驱动器为零。
- en: '![](img/f2d79d51-2813-4435-8ac1-0025106fe344.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f2d79d51-2813-4435-8ac1-0025106fe344.png)'
- en: 'Overwriting and filling the data and drives using a hexadecimal pattern using
    the pat option. The command used is `dc3dd wipe=/dev/sdb pat=000111`:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`dc3dd wipe=/dev/sdb pat=000111`命令覆盖并填充数据和驱动器使用十六进制模式。
- en: '![](img/aa37b109-a093-4869-ad77-29954572cd77.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa37b109-a093-4869-ad77-29954572cd77.png)'
- en: 'Overwriting and filling the data and drives using a text pattern using the
    `tpat` option. The command used is `dc3dd wipe=/dev/sdb tpat=cfsi`:'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`dc3dd wipe=/dev/sdb tpat=cfsi`命令覆盖并填充数据和驱动器使用文本模式。
- en: '![](img/780110db-8886-42c8-99a7-353f8a06306f.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/780110db-8886-42c8-99a7-353f8a06306f.png)'
- en: Image acquisition using Guymager
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Guymager进行图像采集
- en: Guymager is another standalone acquisition tool that can be used for creating
    forensic images and also performing disk cloning. Developed by Guy Voncken, Guymager
    is completely open source, has many of the same features of DC3DD, and is also
    only available for Linux-based hosts. While some investigators may prefer CLI
    tools, Guymager is a GUI tool and it is for beginners, so it may be preferred.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Guymager是另一个独立的取证工具，可用于创建取证图像和执行磁盘克隆。Guymager由Guy Voncken开发，完全开源，具有DC3DD的许多相同功能，也仅适用于基于Linux的主机。虽然一些调查员可能更喜欢CLI工具，但Guymager是一个GUI工具，适合初学者，因此可能更受欢迎。
- en: For this acquisition, I'll also use the very same 2 GB flash drive used in the
    DC3DD examples, at the end of which we can compare results. It's also important
    to remember to continue using your write-blocker when acquiring and creating forensic
    images of evidence and drives, in an effort to not write data to the drives or
    modify the original evidence files.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此采集，我还将使用DC3DD示例中使用的相同2GB闪存驱动器，最后我们可以比较结果。在获取和创建证据和驱动器的取证图像时，继续使用写入阻止器非常重要，以防止向驱动器写入数据或修改原始证据文件。
- en: As previously done in the DC3DD acquisition, we should first ensure that we
    are familiar with the devices attached to our machine, using the `fdisk -l` or
    `sudo fdisk -l` command.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 与DC3DD采集中一样，我们应该首先确保熟悉连接到我们机器的设备，使用`fdisk -l`或`sudo fdisk -l`命令。
- en: Running Guymager
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行Guymager
- en: 'Guymager can be started by using the menu in Kali and by clicking on Applications
    on the side menu, and then click on Forensics and scroll down to Guymager:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过Kali菜单启动Guymager，单击侧边菜单上的应用程序，然后单击取证，向下滚动到Guymager：
- en: '![](img/fdc31990-f1da-4a87-bdc6-30510b1ad210.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fdc31990-f1da-4a87-bdc6-30510b1ad210.png)'
- en: 'Guymager can also be started using the Terminal by typing `guymager`. You may
    also try the `sudo guymager` command. Once started, the default locations of the
    log file and configuration (`cfg`) files, which can be changed if required:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过终端启动Guymager，输入`guymager`。也可以尝试`sudo guymager`命令。一旦启动，日志文件和配置（`cfg`）文件的默认位置可以根据需要更改：
- en: '![](img/da73425e-eb75-4f7e-901a-50c2f4804bca.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/da73425e-eb75-4f7e-901a-50c2f4804bca.png)'
- en: 'The Guymager application runs and then displays the existing drives recognized
    in Kali Linux. As seen in the following screenshot, the details of the 2 GB flash
    drive being used are shown, including the following:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Guymager应用程序运行，然后显示Kali Linux中识别的现有驱动器。如下截图所示，显示了正在使用的2GB闪存驱动器的详细信息，包括以下内容：
- en: 'Linux device: Recognized as `/dev/sdb`'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux设备：识别为`/dev/sdb`
- en: 'Model: `USB_Flash_Memory`'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 型号：`USB_Flash_Memory`
- en: 'State: Shown as Idle as the image acquisition has not yet begun'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 状态：显示为空闲，因为图像采集尚未开始
- en: 'Size: `2.0GB`'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大小：`2.0GB`
- en: '![](img/3553f833-8ef3-4d8c-bd96-b0af81ab5a25.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3553f833-8ef3-4d8c-bd96-b0af81ab5a25.png)'
- en: Should your device not be listed in Guymager or should you need to add an additional
    device, click the Rescan button at the top-left corner of the application.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的设备在Guymager中未列出，或者需要添加其他设备，请单击应用程序左上角的重新扫描按钮。
- en: Acquiring evidence with Guymager
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Guymager获取证据
- en: 'To begin the acquisition process, right-click on the evidence drive (`/dev/sdb`
    in this example) and select Acquire image. Note that the Clone device option is
    also available should you wish to clone the evidence drive to another. Again,
    as previously mentioned, when cloning a device, the capacity of the destination
    device must be equal to or exceed that of the source (original) evidence drive:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始采集过程，请右键单击证据驱动器（在本例中为`/dev/sdb`）并选择获取图像。请注意，如果您希望将证据驱动器克隆到另一个驱动器，则还可以使用克隆设备选项。再次提醒，当克隆设备时，目标设备的容量必须等于或超过源（原始）证据驱动器的容量：
- en: '![](img/5eeeeb6b-bbff-4eda-abc1-6905b256aabe.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5eeeeb6b-bbff-4eda-abc1-6905b256aabe.png)'
- en: 'Before the actual acquisition process starts, the investigator is prompted
    to enter details about themselves and the evidence under the following three sections:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际采集过程开始之前，调查员被提示输入有关自己和证据的详细信息，分为以下三个部分：
- en: 'File format:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件格式：
- en: '**File extensions**: `.dd`, `.xxx`, and `.Exx`'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件扩展名**：`.dd`，`.xxx`和`.Exx`'
- en: '**Split size**: Allows the investigator to choose the size of multiple image
    parts'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分割大小**：允许调查员选择多个图像部分的大小'
- en: '**Case management information**: Case number, Evidence number, Examiner name,
    Description, and Notes'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**案例管理信息**：案件编号，证据编号，审查员姓名，描述和备注'
- en: '![](img/abd34128-51f6-4a47-b00d-fe51107ff771.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/abd34128-51f6-4a47-b00d-fe51107ff771.png)'
- en: 'Destination:'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的地：
- en: 'Image directory: The location of the created image file and log (info file)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像目录：创建的图像文件和日志（信息文件）的位置
- en: 'Image filename: The name of the image file'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像文件名：图像文件的名称
- en: '![](img/9a0951e8-06ef-42c9-bfab-ac8d8c837786.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9a0951e8-06ef-42c9-bfab-ac8d8c837786.png)'
- en: 'Hash calculation / verification:'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希计算/验证：
- en: Multiple hashing algorithms can be selected and calculated, allowing the investigator
    to choose from MD5, SHA-1, and SHA256
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以选择和计算多种哈希算法，允许调查人员从MD5、SHA-1和SHA256中进行选择
- en: 'Re-read source after acquisition for verification: This verifies the source'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取后重新读取源以进行验证：这验证了源
- en: 'Verify image after acquisition: This verifies the destination'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取后验证图像：这验证了目的地
- en: '![](img/05bcd7f1-3cae-4d1d-aa60-f9c3011d52b0.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/05bcd7f1-3cae-4d1d-aa60-f9c3011d52b0.png)'
- en: Guymager also adds the convenience of having a Duplicate image... button to
    create duplicate copies without having to repeat the the data entry process.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Guymager还添加了一个方便的“复制图像…”按钮，可以创建重复的副本，而无需重复输入数据的过程。
- en: 'For new users, you may want to specify the directory where the image file will
    be saved. In the destination section, click on the Image directory button and
    choose your location. For this acquisition, I''ve chosen the `Desktop` directory
    as the location for both the image and the log/info file:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 对于新用户，您可能想要指定图像文件将被保存的目录。在目标部分，点击图像目录按钮，选择您的位置。对于这次获取，我选择了`桌面`目录作为图像和日志/信息文件的位置：
- en: '![](img/4a33fbb4-9ce9-4b11-b4eb-109eb50fa908.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4a33fbb4-9ce9-4b11-b4eb-109eb50fa908.png)'
- en: 'The following screenshot shows the data that I''ve used for the Guymager acquisition,
    having chosen the `Desktop` as the Image directory and MD5 and SHA-1 hashing algorithms:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了我用于Guymager获取的数据，选择了`桌面`作为图像目录和MD5和SHA-1哈希算法：
- en: '![](img/fcb48c3f-5c2b-4e82-9ec8-a33ca3917c80.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fcb48c3f-5c2b-4e82-9ec8-a33ca3917c80.png)'
- en: 'Once the Start button is clicked, you will notice that the State changes from
    Idle to Running. The Progress field also now displays a progress bar:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 点击开始按钮后，您会注意到状态从空闲变为运行。进度字段现在也显示一个进度条：
- en: '![](img/be47b779-16ad-4a33-ad97-f1665597cd19.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be47b779-16ad-4a33-ad97-f1665597cd19.png)'
- en: 'Taking a closer look at the details on the lower left corner of the screen,
    we see the size, image, and info file paths, names and extensions, current speed,
    and chosen hash calculations. We also see that Image verification is turned on:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细看屏幕左下角的细节，我们可以看到大小、图像和信息文件路径、名称和扩展名、当前速度和选择的哈希计算。我们还看到图像验证已打开：
- en: '![](img/0980d7e7-319a-4c2a-a35d-c39ca51630be.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0980d7e7-319a-4c2a-a35d-c39ca51630be.png)'
- en: 'Once the acquisition process is completed, the color of the State field button
    changes from blue to green, indicating that the acquisition process is finished,
    and it also displays Finished - Verified & ok, if verification options were selected
    in the Hash verification/calculation area. The progress bar also displays 100%:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 获取过程完成后，状态字段按钮的颜色从蓝色变为绿色，表示获取过程已完成，并且如果在哈希验证/计算区域选择了验证选项，则还会显示“完成-已验证&ok”。进度条也显示100%：
- en: '![](img/6e3a2ea6-23f1-41d7-8cd4-945b33f3dc45.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6e3a2ea6-23f1-41d7-8cd4-945b33f3dc45.png)'
- en: 'Our output file and info file can be found on the `Desktop` as this was specified
    in the Acquire images section earlier. If you have selected a different directory,
    change to the new directory using the `cd` command, in a new Terminal. In the
    following screenshot, I''ve changed to the `Desktop` directory using the `cd Desktop`
    command and then listed the contents using the `ls` command:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的输出文件和信息文件可以在`桌面`上找到，因为这是在之前的获取图像部分中指定的。如果您选择了不同的目录，请使用新终端中的`cd`命令切换到新目录。在下面的截图中，我使用`cd
    Desktop`命令切换到`桌面`目录，然后使用`ls`命令列出内容：
- en: '![](img/e1d08dac-5d66-4f12-a973-fa103f6c0a2a.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e1d08dac-5d66-4f12-a973-fa103f6c0a2a.png)'
- en: 'We can also browse the `Desktop`, or even the `Desktop` folder, to open the
    info file, which presents us with information about the acquisition details:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以浏览`桌面`，甚至是`桌面`文件夹，打开信息文件，其中包含有关获取细节的信息：
- en: '![](img/17f44955-2318-4855-9566-d3144a76d9b7.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/17f44955-2318-4855-9566-d3144a76d9b7.png)'
- en: Hash verification
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈希验证
- en: Double-clicking on the info file in the Image directory location allows us to
    inspect a variety of details about the acquisition process from start to completion,
    including the hashed outputs.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在图像目录位置双击信息文件，可以检查从开始到完成的获取过程的各种细节，包括哈希输出。
- en: 'This info file contains much more data than the log file produced by DC3DD,
    including the case management details:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这个信息文件包含的数据比DC3DD生成的日志文件要多得多，包括案件管理细节：
- en: '![](img/1a5099cf-664d-4f54-8613-7e3456ce7a83.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1a5099cf-664d-4f54-8613-7e3456ce7a83.png)'
- en: Let's have a closer look at the hash details within the `.info` file.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更仔细地查看`.info`文件中的哈希细节。
- en: 'We can see that the MD5 and SHA-1 hashes have been created and verified and,
    as stated in the last line of the following screenshot, `Image verification OK.
    The image contains exactly the data that was written`:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到MD5和SHA-1哈希已经被创建和验证，并且如下截图的最后一行所述，“图像验证OK。图像包含了确切写入的数据”：
- en: '![](img/256e105a-e713-4180-ae6e-b4cb75136de1.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/256e105a-e713-4180-ae6e-b4cb75136de1.png)'
- en: If we compare these hashes with the ones created using DC3DD, we would have
    the exact same MD5 and SHA-1 outputs, proving that these images are exact forensic
    copies of the original evidence.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将这些哈希与使用DC3DD创建的哈希进行比较，我们将得到完全相同的MD5和SHA-1输出，证明这些图像是原始证据的精确取证副本。
- en: 'Compare the hashes in the following screenshots, created by DC3DD, with the
    ones in the previous screenshots, created by Guymager:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 将由DC3DD创建的哈希与之前由Guymager创建的哈希进行比较，如下截图所示：
- en: '**DC3DD MD5 Hash**:'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DC3DD MD5哈希**：'
- en: '![](img/82aac743-22f6-4623-888a-954294a53d66.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/82aac743-22f6-4623-888a-954294a53d66.png)'
- en: '**DC3DD SHA-1 Hash**:'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DC3DD SHA-1哈希**：'
- en: '![](img/7d3f25e3-22f4-427b-99e6-27f6cc3e2e79.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d3f25e3-22f4-427b-99e6-27f6cc3e2e79.png)'
- en: Summary
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we've looked at two tools readily available in Kali Linux for
    the acquisition of digital evidence. It's very important to be able to tell your
    devices apart so you can accurately acquire a forensic and exact copy or image
    of the evidence file using the `fdisk -l` command. For forensic analysis, Bitstream
    copies of the evidence are needed as these provide an exact copy of the evidence,
    bit-by-bit, which is why we used DC3DD and Guymager.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经介绍了Kali Linux中两个用于获取数字证据的工具。能够准确区分设备非常重要，这样您就可以使用`fdisk -l`命令准确获取证据文件的取证和精确副本或图像。对于取证分析，需要使用证据的比特流副本，因为这些副本提供了证据的比特位的精确副本，这就是为什么我们使用DC3DD和Guymager。
- en: Firstly, we used DC3DD, the enhancement of the data dump tool, and through the
    Terminal, performed quite a few tasks including device imaging, hashing, splitting
    of files, and file verification. Although DC3DD is a command-line interface program,
    the options remain the same, making it fairly easy to learn and use.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们使用了DC3DD，这是数据转储工具的增强版，并通过终端执行了许多任务，包括设备成像、哈希、文件分割和文件验证。尽管DC3DD是一个命令行界面程序，但选项仍然相同，使其相当容易学习和使用。
- en: Our second tool, Guymager, has built-in case-management abilities and also has
    many functional similarities to DC3DD, but it comes as a GUI tool and may be easier
    to use.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第二个工具Guymager具有内置的案件管理功能，并且与DC3DD有许多功能上的相似之处，但它是一个图形界面工具，可能更容易使用。
- en: Both tools deliver accurate and forensically sound results. For those that may
    not be constantly working with Guymager, DD, and DC3DD, Guymager may be the easier
    tool to use seeing that all acquisition options including cloning are readily
    available through the GUI, along with an easy to read log, which provides case
    management details. For advanced uses such as drive wiping, however, you may wish
    to use DC3DD. In the end, however, the choice remains yours.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个工具都能提供准确和取证上可靠的结果。对于那些可能不经常使用Guymager、DD和DC3DD的人来说，Guymager可能是更容易使用的工具，因为所有获取选项，包括克隆，都可以通过图形界面轻松获得，并且具有易于阅读的日志，提供案件管理细节。然而，对于高级用途，如驱动擦除，您可能希望使用DC3DD。然而，最终选择仍然取决于您。
- en: Not bad for our first forensics tools in Kali Linux. Next, we'll move on to
    some analysis and file recovery tools using actual forensic images created by
    **NIST** (**National Institute of Standards and Technology**). Exciting stuff!
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kali Linux中，我们的第一个取证工具还不错。接下来，我们将使用实际的取证图像，使用**NIST**（国家标准与技术研究所）创建的一些分析和文件恢复工具。令人兴奋的事情！
