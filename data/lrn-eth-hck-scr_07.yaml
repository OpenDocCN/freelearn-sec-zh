- en: Post-Connection Attacks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接后攻击
- en: In all the attacks that we performed in the previous chapters, we weren't connected
    to a network. In this chapter, however, we are going to look at attacks that we
    can perform when we break through the network. Firstly, we are going to learn
    about all the important information we can gather when we enter a network that
    will help us to launch attacks; we will be using a netdiscover tool for this purpose.
    We will also learn about a tool that is similar to netdiscover—namely, AutoScan.
    This has a better interface and is more powerful than netdiscover. We will learn
    about yet another tool called Zenmap, which works in a similar fashion to the
    way AutoScan and netdiscover explore all the clients that are connected to a system.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前章节中进行的所有攻击中，我们都没有连接到网络。然而，在这一章中，我们将研究在突破网络后可以执行的攻击。首先，我们将学习在进入网络后能够收集的所有重要信息，这些信息将帮助我们发起攻击；我们将使用netdiscover工具来实现这一目标。我们还将学习一种与netdiscover类似的工具——AutoScan。它的界面更好，功能比netdiscover更强大。我们还将学习另一个工具Zenmap，它的工作原理与AutoScan和netdiscover类似，用于探索所有连接到系统的客户端。
- en: 'In this chapter, we will cover the following topic:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Post-connection attacks
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接后攻击
- en: Post-connection attacks
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接后攻击
- en: Everything we've done so far has not involved us connecting to a network. In
    this section, we're going to be talking about post-connection attacks—in other
    words, attacks that we can do after connecting to a network. Now, it doesn't matter
    if this network is a wireless or a wired network, and it doesn't matter how we
    managed to connect to it. We're going to forget all about what we did so far,
    and we're just going to assume that we have a connection to the network. We could
    have just connected physically using a wire to the router or to the server, we
    could have managed to crack the key, if the target was using a WEP or WPA key,
    or perhaps the network was a wireless network that wasn't using any encryption,
    and we just connected to it. It doesn't matter how we gained our connection; if
    we have gained access to a network, then we can launch all of the attacks that
    we're going to talk about in this section.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们所做的一切都没有涉及到连接网络。在这一部分，我们将讨论连接后攻击——换句话说，就是我们在连接到网络后可以执行的攻击。现在，不管这个网络是无线网络还是有线网络，也不管我们是如何连接到它的。我们将不再考虑到目前为止所做的所有操作，假设我们已经成功连接到网络。我们可能是通过物理连接线缆连接到路由器或服务器，也可能是通过破解密钥（如果目标使用的是WEP或WPA密钥）来连接，或者也许该网络是一个没有加密的无线网络，我们直接连接到它。无论我们是如何获得连接的，只要我们已经获得了网络访问权限，就可以发起我们将在这一部分讨论的所有攻击。
- en: 'One important thing to note first, though, is that in all of the previous attacks
    we kept our wireless card in monitor mode, so that we could capture any packet
    that goes in the air. In this section, we''re going to be using our wireless cards
    in managed mode, as we only want to capture packets that are directed to us, because
    we have access to the network and so we don''t really need to capture everything.
    Another thing to bear in mind is that, if we are testing in our lab and we want
    to test these attacks without using a number of wireless cards, we should go to
    the VirtualBox settings of the Kali machine, go to Setting | Network, and make
    sure that it''s using the NAT Network, and that it''s on the same subdomain (NatNetwork, in
    our example) as the other virtual machines, as shown in the following screenshot:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 首先需要注意的一个重要事项是，在之前的所有攻击中，我们都将无线网卡设置为监视模式，以便能够捕获任何空中传输的数据包。在这一部分，我们将使用无线网卡的管理模式，因为我们只想捕获定向给我们的数据包，因为我们已经有网络访问权限，所以不需要捕获所有的流量。另一个需要记住的事项是，如果我们在实验室里进行测试，并希望在不使用多个无线网卡的情况下进行这些攻击，我们应该进入Kali虚拟机的VirtualBox设置，进入设置
    | 网络，并确保它使用NAT网络，并且与其他虚拟机在同一子网（如我们的示例中的NatNetwork），如下所示的截图所示：
- en: '![](assets/f5dad30b-8c69-4b8f-8e79-d3ef6e81f67c.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f5dad30b-8c69-4b8f-8e79-d3ef6e81f67c.png)'
- en: We can use the `eth0` card interface in our attacks from the Kali machine; it's
    going to be a virtual interface, but it's just going to work as a normal interface.
    Alternatively, we can use your wireless card—just connect from our Kali, connect
    to our target network, and then we will be able to test the security of any device
    that is in our network.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在Kali虚拟机中使用`eth0`网卡接口进行攻击；这将是一个虚拟接口，但它会像普通接口一样工作。或者，我们也可以使用无线网卡——只需从Kali连接到目标网络，然后我们就可以测试网络中任何设备的安全性。
- en: So, we can connect our virtual machine, or our Windows virtual machine, to the
    same network, or we can just test any other device that we have, be it our phone,
    an old laptop, or any other device.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们可以将我们的虚拟机，或我们的Windows虚拟机，连接到同一网络，或者我们可以测试任何其他设备，无论是我们的手机、旧笔记本，还是其他设备。
- en: The netdiscover tool
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: netdiscover工具
- en: The first thing we're going to talk about in this section is gathering information.
    Gathering information about the connected clients and the router is very important
    because it will help us know what their IP and MAC addresses are and the operating
    system that they're running, as well as the ports that they have open in their
    devices. As for the router, we'll be able to know the manufacturer of the router,
    and then we'll be able to look for exploits and vulnerabilities that we can use
    against the router or against the clients if we are trying to hack them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本节我们要讨论的第一件事是信息收集。收集有关连接的客户端和路由器的信息非常重要，因为它可以帮助我们了解它们的IP地址和MAC地址，以及它们运行的操作系统，还可以了解它们设备上开放的端口。至于路由器，我们能够知道路由器的制造商，然后我们就可以寻找可以用来攻击路由器或客户端的漏洞和利用方式，如果我们想要攻击它们的话。
- en: In [Chapter 4](16c0aae0-6766-4e7f-ade5-e359e50c2160.xhtml), *Network Penetration
    Testing*, we saw how we can use `airodump-ng` to discover connected clients. In
    the second part of the `airodump-ng` output, we learned how we could see the associated
    clients and their MAC addresses. That was about it—that's everything we can get
    before we connect to the target access point. Now, after connecting, we can gather
    much more detailed information about these devices. There are a lot of programs
    for this task, but we're going to talk about three programs, starting with the
    simplest and quickest one—netdiscover.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](16c0aae0-6766-4e7f-ade5-e359e50c2160.xhtml)《网络渗透测试》中，我们看到如何使用`airodump-ng`来发现连接的客户端。在`airodump-ng`的第二部分输出中，我们学到了如何看到关联的客户端及其MAC地址。就这些了——这是我们在连接到目标接入点之前能获得的一切信息。现在，连接后，我们可以收集更多关于这些设备的详细信息。有很多程序可以完成这个任务，但我们将讨论三种程序，从最简单最快的netdiscover开始。
- en: 'As we have said before, netdiscover is the quickest and the simplest program
    to use, but it doesn''t show very detailed information about the target clients.
    It''ll only show us their IP address, their MAC address, and sometimes the hardware
    manufacturer. We''re going to use it by typing `netdiscover`, and then we''re
    going to enter `-i` and specify our wireless device, which is `eth0`. Then we''re
    going to enter the range, which can be any range we want. Looking at the IP (which
    is `10.0.2.1`) tells us which network we are in. We want to discover all the clients
    that are in this network, so we''re going to try and see if there is a device
    in `10.0.2.1`. Then we''re going to try `12`, `13`, `14`, `15`, `16`, up to `254`—that''s
    the end of the range. So, to specify a whole range, we can write `/24`. That means
    we want `10.0.2.1`, and then this IP is just going to increase up to `10.0.2.254`,
    which is the end of the IP range in the network. The command for this is as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前所说，netdiscover是最快、最简单的程序，但它并没有显示关于目标客户端的详细信息。它只会显示它们的IP地址、MAC地址，有时还会显示硬件制造商。我们通过输入`netdiscover`来使用它，然后输入`-i`来指定我们的无线设备，即`eth0`。接着，我们输入范围，可以是我们想要的任何范围。查看IP（即`10.0.2.1`）可以告诉我们所在的网络。我们希望发现这个网络中的所有客户端，所以我们会尝试看看是否有设备在`10.0.2.1`。然后我们会尝试`12`、`13`、`14`、`15`、`16`，一直到`254`——这是范围的终点。为了指定整个范围，我们可以写`/24`。这意味着我们要从`10.0.2.1`开始，然后这个IP将一直增加到`10.0.2.254`，这是网络中的IP范围的终点。这个命令如下所示：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We are going to hit *Enter*. It will return the output really fast, producing
    the result shown in the following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们按下*Enter*键。它会非常快速地返回输出，生成如下截图所示的结果：
- en: '![](assets/d53fe45f-afa5-44e4-9217-f9e267934b95.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d53fe45f-afa5-44e4-9217-f9e267934b95.png)'
- en: As we said, it's the quickest way, and we can see in the preceding screenshot
    that we have four devices connected to the network. We have their `MAC Addresses `and
    we have the `MAC Vendor`. That's about it. The method was very quick, and it just
    shows simple information.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所说，这是最快的方法，我们可以从前面的截图看到，我们已经有四个设备连接到网络。我们有它们的`MAC地址`，以及它们的`MAC供应商`。就是这些了。这个方法非常快速，并且只显示简单的信息。
- en: The AutoScan tool
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AutoScan工具
- en: AutoScan is another program that can be used to discover computers or clients
    connected to the same network. It's not as fast as netdiscover, but it has a graphical
    interface, so it's easier to use, and it actually displays more detailed information
    about the discovered clients. Let's go to the Kali machine and download the Linux
    version of AutoScan from [https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/autoscan-network-1.42-Linux-x86-Install.tar.gz/download](https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/autoscan-network-1.42-Linux-x86-Install.tar.gz/download).
    The problem with the latest version (version 1.5) is that it has a bug, so it
    doesn't work very well. So, what we are going to do is download an older version,
    which is 1.42\. If we go to Files | Downloads, we will see the file. Let's extract
    that file by right-clicking on it and clicking on Extract Here from the drop-down
    menu. This will bring up the installer.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: AutoScan 是另一个可以用于发现连接到同一网络的计算机或客户端的程序。它不像 netdiscover 那样快，但它有一个图形界面，因此更容易使用，并且它实际上显示了更多关于发现的客户端的详细信息。让我们去
    Kali 机器，从 [https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/autoscan-network-1.42-Linux-x86-Install.tar.gz/download](https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/autoscan-network-1.42-Linux-x86-Install.tar.gz/download)
    下载 AutoScan 的 Linux 版本。最新版本（1.5 版）有一个 bug，因此工作不太好。所以，我们要做的是下载一个较旧的版本，即 1.42。如果我们去 Files | Downloads，我们将看到该文件。我们通过右键单击它并从下拉菜单中点击 Extract
    Here 来解压该文件。这将打开安装程序。
- en: 'We will run this installer in the Terminal, but before we do that, there is
    a library that AutoScan uses that we need to install. This library is only available
    to computers that have a 32-bit architecture, and consequently 32-bit processors,
    so we need to add that architecture first and then install the library. The first
    command we''re going to enter is for adding 32-bit compatibility to our 64-bit
    computer. If your computer is already 32-bit, then you don''t need to run the
    command, but if it''s a 64- bit computer, then you need to run the command. We
    are just going to launch the `dpkg --add-architecture i386` command. Now, we need
    to update the sources. To do this, we enter `apt-get update`. Now, we are going
    to install the library that AutoScan needs, called `libc6`. Run the `apt-get install
    libc6: i386` command and say `Yes` when it asks if you want to continue.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '我们将在终端中运行此安装程序，但在此之前，AutoScan 使用的一个库需要安装。此库仅适用于具有 32 位架构的计算机，即使用 32 位处理器的计算机，因此我们需要首先添加该架构，然后再安装该库。我们要输入的第一个命令是为我们的
    64 位计算机添加 32 位兼容性。如果您的计算机已经是 32 位的，则无需运行该命令，但如果是 64 位计算机，则需要运行该命令。我们将启动 `dpkg
    --add-architecture i386` 命令。现在，我们需要更新源。为此，我们输入 `apt-get update`。接下来，我们将安装 AutoScan
    需要的库，名为 `libc6`。运行 `apt-get install libc6: i386` 命令，并在询问是否继续时输入 `Yes`。'
- en: Later, it will ask us to restart the services as configurations are made—say `Yes`
    when it does. OK, now it should be all installed. Now that we have installed the
    library that AutoScan needs, all we need to do is just install AutoScan itself.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后，它会要求我们重新启动服务，因为配置已完成—当它提示时，输入 `Yes` 。好了，现在应该都安装好了。现在我们已经安装了 AutoScan 所需的库，接下来只需安装
    AutoScan 本身。
- en: 'As you might recall, AutoScan was downloaded in the `Downloads` folder. We''re
    going to navigate to the `Downloads` folder by running `cd Downloads`. Then, if
    we list the files in `Downloads` using `ls`, we will see that we have the AutoScan
    installer itself written in green:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能记得，AutoScan 是下载到 `Downloads` 文件夹中的。我们将通过运行 `cd Downloads` 进入 `Downloads` 文件夹。然后，如果我们使用 `ls` 列出 `Downloads` 中的文件，我们会看到
    AutoScan 安装程序本身以绿色显示：
- en: '![](assets/6e0309fa-aa58-4152-8c84-afa4a00c1e19.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6e0309fa-aa58-4152-8c84-afa4a00c1e19.png)'
- en: 'To run the installer, we''re going to write `./` and then write the name of
    the installer—that is, `autoscan-network-1.42-Linux-x86-Install`—and hit *Enter*:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行安装程序，我们将输入 `./`，然后输入安装程序的名称，即 `autoscan-network-1.42-Linux-x86-Install`，并按下
    *Enter*：
- en: '![](assets/231e9a3c-8b1a-4e6f-846f-c87175c9215f.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/231e9a3c-8b1a-4e6f-846f-c87175c9215f.png)'
- en: 'It will ask us to click Next if we wish to continue installing AutoScan. Once
    we''ve confirmed our choice, it will ask us where we want to install it. We are
    going to keep it in the default place, which is `/opt/AutoScan`:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望继续安装 AutoScan，它会要求我们点击 Next。确认选择后，它会问我们希望将其安装在哪里。我们将保留默认位置，即 `/opt/AutoScan`：
- en: '![](assets/ef2bb58f-3fb2-40f5-9b84-cf33b7bc6e76.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ef2bb58f-3fb2-40f5-9b84-cf33b7bc6e76.png)'
- en: 'Now, the program should be fully installed. If we go to the desktop, we will
    see that we now have a launcher on the desktop. Also, if we go to Show Applications and
    look for AutoScan, we will see that we have two files; the uninstaller and AutoScan
    itself:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，程序应该已经完全安装。如果我们去桌面上，我们会看到桌面上有一个启动器。此外，如果我们去“显示应用程序”并搜索AutoScan，我们会看到有两个文件：卸载程序和AutoScan本身：
- en: '![](assets/dd5337a8-1da6-4e6e-bd03-dcd20d0f00e8.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dd5337a8-1da6-4e6e-bd03-dcd20d0f00e8.png)'
- en: 'We are now going to run AutoScan. We can use it to discover clients that are
    connected to the same network as us. The AutoScan Wizard (as shown in the following
    screenshot) will actually help us start the scan and see the results:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将运行AutoScan。我们可以用它来发现与我们连接到同一网络的客户端。AutoScan向导（如下截图所示）将帮助我们启动扫描并查看结果：
- en: '![](assets/9880c703-c192-498c-9c6f-ba3aba2a9edf.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9880c703-c192-498c-9c6f-ba3aba2a9edf.png)'
- en: 'We will just click on Forward. Next, it will ask us to name the network—we''re
    just going to keep it as Local network, and then click Forward:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要点击“前进”。接下来，它会要求我们命名网络——我们就保留为“本地网络”，然后点击“前进”：
- en: '![](assets/fc23ba51-cb45-4c2b-b865-3644748ccd76.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fc23ba51-cb45-4c2b-b865-3644748ccd76.png)'
- en: 'Again, it''s still going to ask us where the network is. It''s our localhost,
    so we are keeping it as it is:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这个程序仍然会询问我们网络的位置。它是我们的本地主机，因此我们保持不变：
- en: '![](assets/931c3023-ce10-427a-9766-0e3987a94624.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/931c3023-ce10-427a-9766-0e3987a94624.png)'
- en: 'Next, we click Forward. Next, AutoScan will show us the available interfaces.
    This is really important, because, depending on which interface we pick, we will
    discover the devices that are connected to the same network that this interface
    is connected to. For example, wlan0 [192.168.0.3] is an actual wireless card connected
    to our real home network, so if we use this interface, we will be able to discover
    all the devices that are connected to our Wi-Fi home network because wlan0 [192.168.0.3] is
    connected to that network:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们点击“前进”。然后，AutoScan会显示可用的接口。这非常重要，因为，取决于我们选择哪个接口，我们将发现与该接口连接到相同网络的设备。例如，wlan0
    [192.168.0.3] 是一张实际的无线网卡，连接到我们的家庭网络，因此如果我们使用这个接口，我们将能够发现连接到我们Wi-Fi家庭网络的所有设备，因为wlan0
    [192.168.0.3] 正连接到那个网络：
- en: '![](assets/a32c2f76-1e99-41b1-9ebf-6d285892b7b3.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a32c2f76-1e99-41b1-9ebf-6d285892b7b3.png)'
- en: 'We are going to click on Forward, and then we''re going to click on Forward one
    more time. Now, the program is working, and as we can see in the following screenshot
    it is already discovering devices in our network:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将点击“前进”，然后再点击一次“前进”。现在，程序正在工作，正如我们在下方截图中看到的，它已经开始发现我们网络中的设备：
- en: '![](assets/6e982a02-30f6-475f-b0eb-f752a1cd698d.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6e982a02-30f6-475f-b0eb-f752a1cd698d.png)'
- en: Give it some time. First of all, it's going to discover the IPs, then it will
    try to gather information about the open ports, the operating system, and the
    services used on these open ports.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 给它一些时间。首先，它会发现IP地址，然后它将尝试收集有关开放端口、操作系统以及这些开放端口上使用的服务的信息。
- en: 'Once the scan is over, we will be able to see all the devices in our network, as
    we can see in the following screenshot:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描完成后，我们将能够看到网络中的所有设备，正如我们在下方截图中看到的：
- en: '![](assets/b1047227-1a66-48ec-bab4-45a368b1da51.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b1047227-1a66-48ec-bab4-45a368b1da51.png)'
- en: 'Clicking on any device will show us more information on the right-hand tabs.
    For example, if we click on the router, as shown in the preceding screenshot,
    it will get us more information than netdiscover, as shown in the following screenshot:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 点击任何设备将会显示右侧标签页中的更多信息。例如，如果我们点击路由器，如前面截图所示，它会比netdiscover提供更多的信息，如下图所示：
- en: '![](assets/fc2266da-0658-4456-8c11-06623fa6d2ed.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fc2266da-0658-4456-8c11-06623fa6d2ed.png)'
- en: 'At first, we can see the IP Address and the Mac Address. It''s also telling
    us that This is probably a gateway of the LAN, so it''s probably not an actual
    computer, but a router. Now, in the Info tab, we can see that we have open ports,
    and that two of the open ports are a TCP and a UDP port:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始，我们可以看到IP地址和Mac地址。它还告诉我们，这可能是局域网的网关，因此它可能不是一台实际的计算机，而是一个路由器。现在，在信息标签中，我们可以看到我们有开放的端口，并且其中两个开放的端口分别是TCP和UDP端口：
- en: '![](assets/0d393d40-e419-472c-a508-1e73efedaed4.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0d393d40-e419-472c-a508-1e73efedaed4.png)'
- en: As we can see, the tool is easier to use and shows us more information than
    netdiscover, but it takes a longer time to actually scan the network and discover
    the information. In the next section, we'll have a look at Zenmap, which will
    show us more detailed information about the clients that are connected to our
    network.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，这个工具比 netdiscover 更易于使用，且能展示更多的信息，但实际扫描网络并发现信息的时间较长。在接下来的部分，我们将看看 Zenmap，它将向我们展示有关连接到我们网络的客户端的更多详细信息。
- en: Zenmap
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zenmap
- en: The third program that we're going to look at is **Network Mapper** (**Nmap**).
    Nmap is a network discovery tool that can be used to gather information on just
    about any device. With it, we can gather information about any client that is
    within our network, we can discover clients that are within our network, we can
    gather information about clients that are outside our network, and we can gather
    information about clients just by knowing their IP. We can even can enter their
    IP and then gather information on them. Nmap is a huge tool, and has many uses.
    It can be used to bypass firewalls, as well as all kinds of protection and security
    measures. There are entire books and courses on how to use Nmap. In this section,
    we're only going to have a quick look at Nmap, and learn some of the basic Nmap
    commands that can be used to discover clients that are connected to our network,
    and also discover the open ports on these clients.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要看的第三个程序是**网络映射器** (**Nmap**)。Nmap 是一个网络发现工具，可以用来收集几乎任何设备的信息。使用它，我们可以收集关于我们网络内的任何客户端的信息，发现我们网络内的客户端，收集关于我们网络外的客户端的信息，甚至仅通过知道它们的
    IP 地址来收集信息。我们甚至可以输入它们的 IP 地址，然后收集相关信息。Nmap 是一个非常强大的工具，具有许多用途。它可以用来绕过防火墙，以及各种保护和安全措施。关于如何使用
    Nmap，已经有了整本书籍和课程。在本节中，我们将简要了解 Nmap，并学习一些基本的 Nmap 命令，这些命令可以用来发现连接到我们网络的客户端，同时还可以发现这些客户端的开放端口。
- en: 'We''re going use Zenmap, which is the graphical user interface for Nmap. If
    we just type `zenmap` on the Terminal, we will bring up the application:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Zenmap，这是 Nmap 的图形用户界面。如果我们在终端中输入`zenmap`，它将启动该应用程序：
- en: '![](assets/c27d50fe-a706-4e4b-b211-898c00eae6a1.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c27d50fe-a706-4e4b-b211-898c00eae6a1.png)'
- en: 'In the Target field, we are going to put our IP address. If there is only one
    IP address that we want to gather information on, we can just enter that address,
    or we can enter a range, like we did with netdiscover. For this exercise, we will
    be entering `10.0.2.1/24`. In the Profile drop-down menu, we can have various
    profiles:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在 目标 字段中，我们将输入我们的 IP 地址。如果我们只想收集一个 IP 地址的信息，可以直接输入该地址，或者像我们在 netdiscover 中做的那样输入一个范围。在本次练习中，我们将输入`10.0.2.1/24`。在 配置文件 下拉菜单中，我们可以选择不同的配置文件：
- en: '![](assets/b56d852e-5e15-452f-a04b-ab88025ffee7.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b56d852e-5e15-452f-a04b-ab88025ffee7.png)'
- en: 'We can put a custom command in the Command option if we want, or we can use
    one of the ready-made profiles in the Profile drop-down menu. Let''s look at these
    ready-made profiles. First, we''ll look at the Ping scan profile first. Select Ping
    scan from the Profile drop-down menu and hit the Scan button:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，我们可以在 命令 选项中输入自定义命令，或者使用配置文件下拉菜单中已有的配置文件。让我们看看这些现成的配置文件。首先，我们将看看 Ping 扫描 配置文件。选择 Ping
    扫描 配置文件后，点击 扫描 按钮：
- en: '![](assets/d639ed68-39dc-4de5-abb8-483e5ce80b72.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d639ed68-39dc-4de5-abb8-483e5ce80b72.png)'
- en: The preceding scan is kind of a quick scan, but it doesn't show too much information,
    as we can see in the preceding screenshot. It only shows the connected devices.
    As we can see, we have the connected devices on the left-hand panel, and we have
    their IP addresses, their MAC addresses, and their vendors. Sometimes in netdiscover,
    we are not able to see the manufacturer of the device. Sometimes this information
    is also hidden from AutoScan. However, we can see the manufacturer with Nmap,
    as seen in the preceding screenshot. We are also able to know that the `10.0.2.5` is
    a VirtualBox virtual NIC device. This is a virtual wireless card, as we are performing
    scans in our wired lab. In the case of wireless scans, it will display the manufacturers
    of the router or device, and we can go ahead and look for exploits in those devices.
    Again, the Ping scan was very quick. We were able to find out the manufacturers,
    the IP addresses, and the MAC addresses of the connected clients.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的扫描有点像快速扫描，但它显示的信息不多，正如我们在前图中所见。它只显示了连接的设备。如图所示，我们在左侧面板中有连接的设备，并且显示了它们的 IP
    地址、MAC 地址和厂商信息。有时在 netdiscover 中，我们无法看到设备的制造商。有时这些信息也会被 AutoScan 隐藏。然而，我们可以通过
    Nmap 查看制造商，正如前面的截图所示。我们还能够知道`10.0.2.5`是一个 VirtualBox 虚拟网络接口设备。这是一个虚拟无线网卡，因为我们正在有线实验室中进行扫描。在无线扫描的情况下，它会显示路由器或设备的制造商，我们可以进一步查找这些设备中的漏洞。再次强调，Ping
    扫描非常迅速。我们能够找出连接客户端的制造商、IP 地址和 MAC 地址。
- en: 'The next scan we''re going to have a look at is the Quick scan. Now, the Quick
    scan is going to be slightly slower than the Ping scan, but we will get more information
    than the Ping scan; we''re going to be able to identify the open ports on each
    device:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们要看的是快速扫描（Quick scan）。现在，快速扫描的速度会稍微慢于 Ping 扫描，但我们会得到比 Ping 扫描更多的信息；我们能够识别每个设备的开放端口：
- en: '![](assets/a6860565-67b9-49ae-ae7d-d171bf331b80.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a6860565-67b9-49ae-ae7d-d171bf331b80.png)'
- en: As we can see in the preceding screenshot, the main router has an open port
    called 53/tcp.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，主路由器有一个开放的端口叫做`53/tcp`。
- en: Now, let's have a look at the Quick scan plus, which will take the Quick scan
    one step further. It's going to be slower than the Quick scan, but it will show
    us the programs that are running on the opened ports. So, in the Quick scan we
    saw that, for example, port `80` is open, but we didn't know what was running
    on port `80`, and we saw that port `22` was running, but we didn't know what was
    running. We knew it was SSH, but we don't know what SSH server was running on
    that port.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下“快速扫描加”（Quick scan plus），它将快速扫描推进一步。它比快速扫描慢，但它会显示我们打开端口上运行的程序。因此，在快速扫描中，我们看到了端口`80`是开放的，但我们不知道端口`80`上运行的是什么，我们看到端口`22`在运行，但我们也不知道运行的是什么。我们知道它是
    SSH，但我们不知道运行在该端口上的 SSH 服务器是什么。
- en: 'So again, this will take longer than the Quick scan. This scan is slower than
    all the previous scans that we talked about, but we can see that it gathers much
    more information, as shown in the following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这将比快速扫描花费更长时间。这个扫描比我们之前谈到的所有扫描都要慢，但我们可以看到它收集了更多的信息，如下图所示：
- en: '![](assets/a67b1b4d-6140-49e7-9f09-0f255c8e80a4.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a67b1b4d-6140-49e7-9f09-0f255c8e80a4.png)'
- en: We can see in the preceding screenshot that we have a Linux device connected.
    We can see that the operating system of the device is connected, and that it also
    got us the version for the programs. Last time, we only knew that port `22 `was
    open—now we know that it's running, and that the server that's running there is
    OpenSSH 4.7.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在前面的截图中，我们有一台 Linux 设备连接。我们可以看到该设备的操作系统，并且它还为我们提供了程序的版本信息。上次，我们只知道端口`22`是开放的——现在我们知道它正在运行，并且运行的服务器是
    OpenSSH 4.7。
- en: From the information that the Quick scan provided us about our Linux device,
    we were able to identify port `80`, and could tell that the port was open. We
    knew that HTTP was running on this, obviously, but we didn't know what version
    of the server was running on it. Now we know that it was Apache HTTP server 2.2.8
    and that it was a Linux device. So again, this is very accurate. We can go ahead
    and look for exploits and vulnerabilities.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 从快速扫描提供的关于我们 Linux 设备的信息中，我们能够识别端口`80`，并且知道该端口是开放的。我们知道 HTTP 在上面运行，但我们不知道运行的是哪个版本的服务器。现在我们知道它是
    Apache HTTP 服务器 2.2.8，并且它是一个 Linux 设备。所以再次强调，这个扫描非常准确。我们可以继续查找漏洞和弱点。
- en: This is just an example of how useful it is to gather information. Even if this
    didn't work, we could go ahead and look for exploits for these programs and we
    will manage to gain access to this network. So, gathering information is a huge
    step in penetration testing. Zenmap, or Nmap, is a huge tool that we can use to
    carry out many types of scans. We can experiment with these ready-made profiles
    to see what they can do.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个例子，展示了收集信息的实用性。即使这个方法不起作用，我们仍然可以继续寻找这些程序的漏洞，并成功获取对该网络的访问权限。因此，收集信息是渗透测试中的一个重要步骤。Zenmap或Nmap是一个强大的工具，我们可以用它执行多种类型的扫描。我们可以尝试这些现成的配置文件，看看它们能做什么。
- en: Summary
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have covered all the possible techniques that we can use
    to break through network and gather important pieces of information about the
    clients on the network. This will help us to launch attacks on the target system.
    For this purpose, we learned about three different tools—netdiscover, AutoScan, and Zenmap.
    All these tools have unique features that make them efficient in gathering information
    about targets.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们介绍了所有可以用来突破网络并收集有关网络中客户端的关键信息的技术。这将帮助我们对目标系统发起攻击。为此，我们学习了三种不同的工具——netdiscover、AutoScan和Zenmap。这些工具各有独特的功能，使它们在收集目标信息时非常高效。
- en: In the next chapter, we are going to learn about various man-in-the-middle attacks.
    We will also be learning about the Wireshark tool.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习各种中间人攻击。我们还将学习Wireshark工具。
