- en: Scanning and Evasion Techniques
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描和规避技术
- en: 'In this chapter, we will describe the process of discovering devices on a target
    network using various tools in Kali Linux, as well as other tools available from
    GitHub. We will be looking into the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将描述在Kali Linux中使用各种工具以及GitHub上其他可用工具发现目标网络上的设备的过程。我们将研究以下主题：
- en: A description of the target-discovery process
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标发现过程的描述
- en: The method used to identify target machines using the tools in Kali Linux
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Kali Linux工具识别目标机器的方法
- en: The steps required to find the operating systems of the target machines (operating
    system fingerprinting)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找目标机器操作系统所需的步骤（操作系统指纹识别）
- en: Automated scanning with Striker
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Striker进行自动扫描
- en: Anonymization with Nipe
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nipe进行匿名化
- en: To help you understand these concepts easily, we will use a virtual network
    as the target network.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助您轻松理解这些概念，我们将使用虚拟网络作为目标网络。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'These are the technical requirements:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是技术要求：
- en: 'Minimal hardware requirements: 6 GB RAM, quad-core 2.4 GHz processor, and 500
    GB HDD'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最低硬件要求：6 GB RAM，四核 2.4 GHz 处理器和 500 GB 硬盘
- en: Kali Linux 2018
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux 2018
- en: A virtual machine for testing, for example, Metasploitable or BadStore, and
    so on. (Refer to [Chapter 2](573e3579-5017-4c33-acd8-01e866ed66d8.xhtml), *Setting
    Up Your Test Lab*)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于测试的虚拟机，例如 Metasploitable 或 BadStore 等（参见[第2章](573e3579-5017-4c33-acd8-01e866ed66d8.xhtml)，*设置您的测试实验室*）
- en: Identifying the target machine
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别目标机器
- en: The tools included in this category are used to identify the target machines
    that can be accessed by a penetration tester. Before we start the identification
    process, we need to know our client's terms and agreements. If the agreements
    require us to hide penetration-testing activities, we need to conceal our activities.
    Stealth techniques may also be applied for testing the **Intrusion Detection System**
    (**IDS**) or **Intrusion Prevention System** (**IPS**) functionality. If there
    are no such requirements, we may not need to conceal our penetration-testing activities.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此类工具用于识别渗透测试人员可以访问的目标机器。在开始识别过程之前，我们需要了解客户的条款和协议。如果协议要求我们隐藏渗透测试活动，我们需要隐藏我们的活动。隐蔽技术也可以用于测试**入侵检测系统**（**IDS**）或**入侵预防系统**（**IPS**）的功能。如果没有这样的要求，我们可能不需要隐藏我们的渗透测试活动。
- en: ping
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ping
- en: '`ping` is the most famous tool that is used to check whether a particular host
    is available. The `ping` tool works by sending an **Internet Control Message Protocol**
    (**ICMP**) echo request packet to the target host. If the target host is available
    and the firewall is not blocking the ICMP echo request packet, it will reply with
    the ICMP echo reply packet.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`是用于检查特定主机是否可用的最著名的工具。`ping`工具通过向目标主机发送**Internet控制消息协议**（**ICMP**）回显请求数据包来工作。如果目标主机可用且防火墙没有阻止
    ICMP 回显请求数据包，它将回复 ICMP 回显回复数据包。'
- en: The ICMP echo request and ICMP echo reply are two of the available ICMP control
    messages. For other ICMP control messages, you can refer to the following URL: [https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages](https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ICMP回显请求和ICMP回显回复是可用的ICMP控制消息之一。有关其他ICMP控制消息，请参阅以下网址：[https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages](https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Control_messages)。
- en: Although you can't find `ping` in the Kali Linux menu, you can open the console
    and type the `ping` command, along with its options.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然您在Kali Linux菜单中找不到`ping`，但您可以打开控制台并输入`ping`命令以及其选项。
- en: 'To use `ping`, you can just type `ping` and the destination address, as shown
    in the following screenshot:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`ping`，您只需输入`ping`和目标地址，如下面的屏幕截图所示：
- en: '![](img/5882d01e-65a8-4141-a511-2b5bfc104150.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5882d01e-65a8-4141-a511-2b5bfc104150.png)'
- en: In Kali Linux, by default, `ping` will run continuously until you press *Ctrl*
    + *C*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kali Linux中，默认情况下，`ping`将持续运行，直到按下*Ctrl* + *C*。
- en: 'The `ping` tool has a lot of options, but the following are a few that are
    often used:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`工具有很多选项，但以下是经常使用的一些选项：'
- en: '**The** `-c` **count**: This is the number of echo request packets to be sent.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`-c`** **计数**：这是要发送的回显请求数据包的数量。'
- en: '**The** `-I` **interface address**: This is the network interface of the source
    address. The argument may be a numeric IP address (such as `192.168.56.102`) or
    the name of the device (such as `eth0`). This option is required if you want to
    ping the IPv6 link-local address.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`-I`** **接口地址**：这是源地址的网络接口。参数可以是数字 IP 地址（如`192.168.56.102`）或设备的名称（如`eth0`）。如果要ping
    IPv6链路本地地址，则需要此选项。'
- en: '**The** `-s` **packet size**: This specifies the number of data bytes to be
    sent. The default is 56 bytes, which translates into 64 ICMP data bytes when combined
    with the 8 bytes of the ICMP header data.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`-s`** **数据包大小**：指定要发送的数据字节数。默认值为 56 字节，与 ICMP 头数据的 8 字节组合在一起，可以得到 64 个 ICMP
    数据字节。'
- en: Let's use the preceding information in practice.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将前面的信息付诸实践。
- en: Suppose you are starting with internal penetration-testing work. The customer
    gave you access to their network using a LAN cable and they also gave you the
    list of target servers' IP addresses.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您要开始内部渗透测试工作。客户通过局域网电缆为您提供了他们网络的访问权限，并提供了目标服务器的 IP 地址列表。
- en: The first thing you would want to do before launching a full penetration-testing
    arsenal is to check whether these servers are accessible from your machine. You
    can use `ping` for this task.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动完整的渗透测试工具之前，您可能想要做的第一件事是检查这些服务器是否可以从您的机器访问。您可以使用`ping`来完成这项任务。
- en: 'The target server is located at `172.16.43.156`, while your machine has an
    IP address of `172.16.43.150`. To check the target server availability, you can
    give the following command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 目标服务器位于`172.16.43.156`，而您的机器的 IP 地址为`172.16.43.150`。要检查目标服务器的可用性，您可以给出以下命令：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Besides IP addresses, `ping` also accepts hostnames as the destination.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 IP 地址，`ping`还接受主机名作为目标。
- en: 'The following screenshot is the result of the preceding `ping` command:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图是前述`ping`命令的结果：
- en: '![](img/d932a749-c492-4bb2-9089-1532e50438fc.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d932a749-c492-4bb2-9089-1532e50438fc.png)'
- en: From the preceding screenshot, we know that one ICMP echo request packet was
    sent to the destination (IP address = `172.16.43.156`). Also, the sending host
    (IP address = `172.16.43.150`) received one ICMP echo reply packet. The round-trip
    time required was `.869 ms`, and there was no packet loss during the process.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的屏幕截图中，我们知道已向目的地（IP地址=`172.16.43.156`）发送了一个ICMP echo请求数据包。同时，发送主机（IP地址=`172.16.43.150`）收到了一个ICMP
    echo回复数据包。所需的往返时间为`.869 ms`，在整个过程中没有丢包。
- en: 'Let''s see the network packets that are transmitted and received by our machine.
    We are going to use Wireshark, a network protocol analyzer, on our machine to
    capture these packets, as shown in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们的机器发送和接收的网络数据包。我们将在我们的机器上使用网络协议分析器Wireshark来捕获这些数据包，如下图所示：
- en: '![](img/9f2ce614-5024-4845-a39e-2eb550f5a864.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f2ce614-5024-4845-a39e-2eb550f5a864.png)'
- en: From the preceding screenshot, we can see that our host (`172.16.43.150`) sent
    one ICMP echo request packet to the destination host (`172.16.43.156`). Since
    the destination is alive and allows the ICMP echo request packet, it sent the
    ICMP echo reply packet back to our machine. We will cover *Wireshark* in more
    detail in the *Network sniffers* section in Chapter 9, *Privilege Escalation*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的屏幕截图中，我们可以看到我们的主机（`172.16.43.150`）向目标主机（`172.16.43.156`）发送了一个ICMP echo请求数据包。由于目标是活动的并允许ICMP
    echo请求数据包，它将ICMP echo回复数据包发送回我们的机器。我们将在第9章*特权提升*的*网络嗅探器*部分更详细地介绍*Wireshark*。
- en: 'If your target is using an IPv6 address, such as `fe80::20c:29ff:fe18:f08`,
    you can use the `ping6` tool to check its availability. You need to give the `-I`
    option for the command to work against the link-local address:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的目标使用IPv6地址，例如`fe80::20c:29ff:fe18:f08`，您可以使用`ping6`工具来检查其可用性。您需要为命令指定`-I`选项，以针对链路本地地址进行操作：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following screenshot shows the packets sent to complete the `ping6` request:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了发送完成`ping6`请求的数据包：
- en: '![](img/0ea32c68-8b3c-4cef-9699-55f171770f7a.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0ea32c68-8b3c-4cef-9699-55f171770f7a.png)'
- en: From the preceding screenshot, we know that `ping6` is using the `ICMPv6` request
    and reply.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的屏幕截图中，我们知道`ping6`正在使用`ICMPv6`请求和回复。
- en: To block the `ping` request, the firewall can be configured to only allow the
    ICMP `echo` request packet from a specific host and to drop the packets sent from
    other hosts.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要阻止`ping`请求，防火墙可以配置为仅允许来自特定主机的ICMP `echo`请求数据包，并丢弃从其他主机发送的数据包。
- en: fping
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fping
- en: The difference between `ping` and `fping` is that the `fping` tool can be used
    to send a ping (ICMP echo) request to several hosts at once. You can specify several
    targets on the command line, or you can use a file containing the hosts to be
    pinged.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping`和`fping`之间的区别在于`fping`工具可以用来一次向多个主机发送ping（ICMP echo）请求。您可以在命令行上指定多个目标，也可以使用包含要ping的主机的文件。'
- en: In the default mode, `fping` works by monitoring the reply from the target host.
    If the target host sends a reply, it will be noted and removed from the target
    list. If the host doesn't respond within a certain time limit, it will be marked
    as `unreachable`. By default, `fping` will try to send three ICMP echo request
    packets to each target.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在默认模式下，`fping`通过监视目标主机的回复来工作。如果目标主机发送回复，将对其进行记录并从目标列表中删除。如果主机在一定时间内没有响应，将标记为`不可达`。默认情况下，`fping`将尝试向每个目标发送三个ICMP
    echo请求数据包。
- en: 'To access `fping`, you can use the console to execute the following command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问`fping`，可以使用控制台执行以下命令：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This will display the description of usage and options available in `fping`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示`fping`中的用法和可用选项的描述。
- en: The following scenarios will give you an idea of `fping` usage.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 以下情景将让您了解`fping`的用法。
- en: 'If we want to know the alive hosts of `172.16.43.156`, `172.16.43.150`, and
    `172.16.43.155` at once, we can use the following command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要一次知道`172.16.43.156`、`172.16.43.150`和`172.16.43.155`的活动主机，我们可以使用以下命令：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following is the result of the preceding command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述命令的结果：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can also generate the host list automatically without defining the IP addresses
    one by one and identifying the alive hosts. Let''s suppose we want to find the
    alive hosts in the `172.16.43.0/24` network; we can use the `-g` option and define
    the network to check, using the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以自动生成主机列表，而不需要逐个定义IP地址并识别活动主机。假设我们想要在`172.16.43.0/24`网络中找到活动主机；我们可以使用`-g`选项并定义要检查的网络，使用以下命令：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If we want to change the number of ping attempts made to the target, we can
    use the `-r` option (retry limit) as shown in the following command line. By default,
    there are three ping attempts:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要更改发送到目标的ping尝试次数，可以使用`-r`选项（重试限制），如下命令行所示。默认情况下，有三次ping尝试：
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The result of the command is as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 命令的结果如下：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The cumulative statistics can be displayed by employing the `-s` option (print
    cumulative statistics), as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`-s`选项（打印累积统计信息）显示累积统计信息，如下所示：
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following is the result of the preceding command line:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述命令行的结果：
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: hping3
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: hping3
- en: The `hping3` tool is a command-line network-packet generator and analyzer tool.
    The capability to create custom network packets allows `hping3` to be used for
    TCP/IP and security testing, such as port scanning, firewall-rule testing, and
    network-performance testing.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`hping3`工具是一个命令行网络数据包生成器和分析器工具。创建自定义网络数据包的能力使`hping3`可以用于TCP/IP和安全测试，如端口扫描、防火墙规则测试和网络性能测试。'
- en: 'The following are several other uses of `hping3`, according to the developer:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 根据开发人员的说法，`hping3`还有以下几种用途：
- en: Testing firewall rules
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试防火墙规则
- en: Testing IDS
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试IDS
- en: Exploiting known vulnerabilities in the TCP/IP stack
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用TCP/IP堆栈中已知的漏洞
- en: To access `hping3`, go to the console and type `hping3`.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问`hping3`，请转到控制台并键入`hping3`。
- en: You can give commands to `hping3` in several ways, via the command line, interactive
    shell, or script.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过命令行、交互式shell或脚本的方式给`hping3`发送命令。
- en: Without any given command-line options, `hping3` will send a null TCP packet
    to port `0`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有给定命令行选项的情况下，`hping3`将向端口`0`发送一个空TCP数据包。
- en: 'In order to change to a different protocol, you can use the following options
    in the command line to define the protocol:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为了切换到不同的协议，您可以在命令行中使用以下选项来定义协议：
- en: '| No. | Short option | Long option | Description |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| No. | Short option | Long option | Description |'
- en: '| 1 | `-0` | `--raw-ip` | This sends raw IP packets |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 1 | `-0` | `--raw-ip` | 这发送原始IP数据包 |'
- en: '| 2 | `-1` | `--icmp` | This sends ICMP packets |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 2 | `-1` | `--icmp` | 这发送ICMP数据包 |'
- en: '| 3 | `-2` | `--udp` | This sends UDP packets |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 3 | `-2` | `--udp` | 这发送UDP数据包 |'
- en: '| 4 | `-8` | `--scan` | This indicates the use of scan mode |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 4 | `-8` | `--scan` | 这表示使用扫描模式 |'
- en: '| 5 | `-9` | `--listen` | This indicates the use of listen mode |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 5 | `-9` | `--listen` | 这表示使用监听模式 |'
- en: 'When using the TCP protocol, we can use the TCP packet without any flags (this
    is the default behavior) or we can give one of the following flag options:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用TCP协议时，我们可以使用不带任何标志的TCP数据包（这是默认行为），或者我们可以使用以下标志选项之一：
- en: '| No. | Option | Flag name |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| No. | Option | Flag name |'
- en: '| 1 | `-S` | `syn` |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 1 | `-S` | `syn` |'
- en: '| 2 | `-A` | `ack` |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 2 | `-A` | `ack` |'
- en: '| 3 | `-R` | `rst` |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 3 | `-R` | `rst` |'
- en: '| 4 | `-F` | `fin` |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 4 | `-F` | `fin` |'
- en: '| 5 | `-P` | `psh` |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 5 | `-P` | `psh` |'
- en: '| 6 | `-U` | `urg` |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 6 | `-U` | `urg` |'
- en: '| 7 | `-X` | `xmas: flags fin, urg, psh set` |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 7 | `-X` | `xmas: flags fin, urg, psh set` |'
- en: '| 8 | `-Y` | `ymas` |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 8 | `-Y` | `ymas` |'
- en: Let's use `hping3` for several cases, as follows.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '让我们使用`hping3`进行几种情况。 '
- en: 'Send one ICMP echo request packet to a `192.168.56.101` machine. The options
    used are `-1` (for the ICMP protocol) and `-c 1` (to set the count to one packet):'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 向`192.168.56.101`机器发送一个ICMP回显请求数据包。使用的选项是`-1`（用于ICMP协议）和`-c 1`（将计数设置为一个数据包）：
- en: '[PRE10]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following is the output of this command:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此命令的输出：
- en: '[PRE11]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: From the preceding output, we can identify that the target machine is alive,
    because it has replied to our ICMP echo request.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的输出中，我们可以确定目标机器是存活的，因为它已经回复了我们的ICMP回显请求。
- en: 'To verify this, we captured the traffic using `tcpdump` and the following screenshot
    shows the packets:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证这一点，我们使用`tcpdump`捕获了流量，以下屏幕截图显示了数据包：
- en: '![](img/25cc7916-3d6e-4715-bfcc-57e48b1ef1e0.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25cc7916-3d6e-4715-bfcc-57e48b1ef1e0.png)'
- en: We can see that the target has responded with an ICMP echo reply packet.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到目标已经用ICMP回显回复数据包做出了响应。
- en: Besides giving the options in the command line, you can also use `hping3` interactively.
    Open the console and type `hping3`. You will then see a prompt where you can type
    your Tcl commands.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在命令行中给出选项外，您还可以交互地使用`hping3`。打开控制台并输入`hping3`。然后，您将看到一个提示符，可以在其中输入您的Tcl命令。
- en: The following links are resources for Tcl: [http://www.invece.org/tclwise/](http://www.invece.org/tclwise/) and  [http://wiki.tcl.tk/](http://wiki.tcl.tk/).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以下链接是Tcl的资源：[http://www.invece.org/tclwise/](http://www.invece.org/tclwise/)和
    [http://wiki.tcl.tk/](http://wiki.tcl.tk/)。
- en: 'For the preceding example, the following is the corresponding Tcl script:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 对于上面的示例，以下是相应的Tcl脚本：
- en: '[PRE12]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Open a command-line window and give the following command to get a response
    from the target server:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个命令行窗口，并输入以下命令以从目标服务器获取响应：
- en: '[PRE13]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: After that, open another command-line window to input the sending request.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，打开另一个命令行窗口输入发送请求。
- en: 'The following screenshot shows the response received:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了收到的响应：
- en: '![](img/a53f30f2-3af0-492b-b7ef-79185a9a28c8.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a53f30f2-3af0-492b-b7ef-79185a9a28c8.png)'
- en: 'You can also use `hping3` to check for a firewall rule. Let''s suppose you
    have the following firewall rules:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`hping3`来检查防火墙规则。假设您有以下防火墙规则：
- en: Accept any TCP packets directed to port `22` (SSH)
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接受任何发送到端口`22`（SSH）的TCP数据包
- en: Accept any TCP packets related to an established connection
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接受与已建立连接相关的任何TCP数据包
- en: Drop any other packets
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 丢弃其他数据包
- en: 'To check these rules, you can give the following command in `hping3`, in order
    to send an ICMP echo request packet:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查这些规则，您可以在`hping3`中给出以下命令，以发送一个ICMP回显请求数据包：
- en: '[PRE14]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following code is the result:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是结果：
- en: '[PRE15]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: We can see that the target machine has not responded to our ping probe.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到目标机器没有响应我们的ping探测。
- en: 'Send a TCP packet with the SYN flag set to port `22`, and we will get the result
    shown in the following screenshot:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 发送一个带有SYN标志设置为端口`22`的TCP数据包，我们将得到以下屏幕截图中显示的结果：
- en: '![](img/b1bbdb6f-f19d-4945-836e-d23f3541daea.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1bbdb6f-f19d-4945-836e-d23f3541daea.png)'
- en: From the preceding screenshot, we can see that the target machine's firewall
    allows our SYN packet to reach port `22`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的屏幕截图中，我们可以看到目标机器的防火墙允许我们的SYN数据包到达端口`22`。
- en: 'Let''s check whether the UDP packet is allowed to reach port `22`:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一下UDP数据包是否允许到达端口`22`：
- en: '![](img/20077aed-0b61-48f6-8506-2358bdb76a65.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20077aed-0b61-48f6-8506-2358bdb76a65.png)'
- en: From the preceding screenshot, we can see that the target machine's firewall
    does not allow our UDP packet to reach port `22`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的屏幕截图中，我们可以看到目标机器的防火墙不允许我们的UDP数据包到达端口`22`。
- en: There are other things that you can do with `hping3`, but, in this chapter,
    we'll only discuss a small subset of its capabilities. If you want to learn more,
    you can consult the `hping3` documentation site at [http://wiki.hping.org](http://wiki.hping.org).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`hping3`还有其他功能，但在本章中，我们只讨论了其能力的一小部分。如果您想了解更多信息，可以查阅[hping3](http://wiki.hping.org)文档网站。'
- en: OS fingerprinting
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作系统指纹识别
- en: 'After we have established that the target machine is alive, we can then find
    out which operating system is used by the target machine. This method is commonly
    known as **Operating System** (**OS**) fingerprinting. There are two methods of
    doing OS fingerprinting: active and passive.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们确认目标机器存活后，我们可以找出目标机器使用的操作系统。这种方法通常被称为**操作系统**（**OS**）指纹识别。有两种方法可以进行操作系统指纹识别：主动和被动。
- en: In the active method, the tool sends network packets to the target machine and
    then analyzes the response it receives to determine the operating system of the
    target machine. The advantage of this method is that the fingerprinting process
    is fast. However, the disadvantage is that the target machine may notice our attempt
    to get its operating system's information.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在主动方法中，该工具向目标机器发送网络数据包，然后分析接收到的响应以确定目标机器的操作系统。这种方法的优点是指纹识别过程很快。然而，缺点是目标机器可能会注意到我们尝试获取其操作系统信息。
- en: To overcome the active method's disadvantage, a passive method of OS fingerprinting
    exists. This method was pioneered by Michal Zalewsky when he released a tool called
    `p0f`. The major advantage of passive OS fingerprinting is that it does the work
    while reducing the interaction between the testing machine and the target, greatly
    increasing the stealth of the fingerprinting. The most significant disadvantage
    of the passive method is that the process will be slower than for the active method.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 为了克服主动方法的缺点，存在一种被动的操作系统指纹识别方法。这种方法是由Michal Zalewsky首创的，他发布了一个名为`p0f`的工具。被动OS指纹识别的主要优点是在减少测试机器和目标之间的交互的同时完成工作，大大增加了指纹识别的隐蔽性。被动方法的最大缺点是这个过程比主动方法慢。
- en: In this section, we will describe a couple of tools that can be used for OS
    fingerprinting.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将描述一些用于操作系统指纹识别的工具。
- en: p0f
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: p0f
- en: 'The `p0f` tool is used to fingerprint an operating system passively. It can
    be used to identify an operating system on the following machines:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`p0f`工具被用来 passively 对操作系统进行指纹识别。它可以用来识别以下机器上的操作系统：'
- en: Machines that connect to your box (SYN mode; this is the default mode)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到您的机器的机器（SYN模式；这是默认模式）
- en: Machines you connect to (`SYN` + `ACK` mode)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到您的机器的机器（SYN + ACK模式）
- en: Machines you cannot connect to (`RST`+ mode)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法连接的机器（`RST`+模式）
- en: Machines whose communications you can observe
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以观察到其通信的机器
- en: The `p0f` tool works by analyzing the TCP packets sent during the network activities.
    Then, it gathers the statistics of special packets that are not standardized by
    default by any corporations. An example is that the Linux kernel uses a 64-byte
    ping datagram, whereas the Windows operating system uses a 32-byte ping datagram
    or the **Time To Live** (**TTL**) value. For Windows, the TTL value is `128`,
    while for Linux this TTL value varies among Linux distributions. This information
    is then used by `p0f` to determine the remote machine's operating system.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`p0f`工具通过分析网络活动期间发送的TCP数据包来工作。然后，它收集了默认情况下没有被任何公司标准化的特殊数据包的统计信息。例如，Linux内核使用64字节的ping数据报，而Windows操作系统使用32字节的ping数据报或**生存时间**（**TTL**）值。对于Windows，TTL值为`128`，而对于Linux，这个TTL值在Linux发行版之间有所不同。然后，`p0f`使用这些信息来确定远程机器的操作系统。'
- en: When using the `p0f` tool included with Kali Linux, we were not able to fingerprint
    the operating system on a remote machine. We figured out that the `p0f` tool hadn't
    updated its fingerprint database. Unfortunately, we couldn't find the latest version
    of the fingerprint database. So, we used `p0f v3` (version 3.06b) instead. To
    use this version of `p0f`, just download the `TARBALL` file from [http://lcamtuf.coredump.cx/p0f3/releases/p0f-3.06b.tgz](http://lcamtuf.coredump.cx/p0f3/releases/p0f-3.06b.tgz)
    and compile the code by running the `build.sh` script. By default, the fingerprint
    database file's (`p0f.fp`) location is in the current directory. If you want to
    change the location, for example, to `/etc/p0f/p0f.fp`, you need to change this
    in the `config.h` file and recompile `p0f`. If you don't change the location,
    you may need to use the `-f` option to define the fingerprint database file location.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Kali Linux附带的`p0f`工具时，我们无法对远程机器上的操作系统进行指纹识别。我们发现`p0f`工具没有更新其指纹数据库。不幸的是，我们找不到最新版本的指纹数据库。因此，我们使用了`p0f
    v3`（版本3.06b）。要使用这个版本的`p0f`，只需从[http://lcamtuf.coredump.cx/p0f3/releases/p0f-3.06b.tgz](http://lcamtuf.coredump.cx/p0f3/releases/p0f-3.06b.tgz)下载`TARBALL`文件，并通过运行`build.sh`脚本来编译代码。默认情况下，指纹数据库文件（`p0f.fp`）的位置在当前目录中。如果要更改位置，例如更改为`/etc/p0f/p0f.fp`，则需要在`config.h`文件中更改这个位置并重新编译`p0f`。如果不更改位置，可能需要使用`-f`选项来定义指纹数据库文件的位置。
- en: 'To access `p0f`, open a console and type `p0f -h`. This will display its usage
    and options description. Let''s use `p0f` to identify the operating system used
    in a remote machine we are connecting to. Just type the following command in your
    console:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问`p0f`，打开控制台并输入`p0f -h`。这将显示其用法和选项描述。让我们使用`p0f`来识别我们正在连接的远程机器上使用的操作系统。只需在控制台中输入以下命令：
- en: '[PRE16]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This will read the fingerprint database from the file and save the log information
    to the `p0f.log` file. It will then display the following information:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这将从文件中读取指纹数据库，并将日志信息保存到`p0f.log`文件中。然后它将显示以下信息：
- en: '[PRE17]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Next, you need to generate network activities involving a TCP connection, such
    as browsing the remote machine or letting the remote machine connect to your machine.
    For the purposes of this demonstration, a connection to the HTTP site on the 2
    machine was established.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要生成涉及TCP连接的网络活动，比如浏览远程机器或让远程机器连接到您的机器。为了进行演示，建立了与2号机器上HTTP站点的连接。
- en: If `p0f` has successfully fingerprinted the operating system, you will see information
    on the remote machine's operating system in the console and in the log file (`p0f.log`).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`p0f`成功对操作系统进行了指纹识别，您将在控制台和日志文件（`p0f.log`）中看到有关远程机器操作系统的信息。
- en: 'The following is the abridged information displayed to the console:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是显示在控制台上的摘要信息：
- en: '[PRE18]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following screenshot shows the content of the log file:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了日志文件的内容：
- en: '![](img/41626c39-148b-4afa-8380-8c1ff649db33.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/41626c39-148b-4afa-8380-8c1ff649db33.png)'
- en: Based on the preceding result, we know that the target is a `Linux 2.6` machine.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的结果，我们知道目标是一个`Linux 2.6`机器。
- en: 'The following screenshot shows the information from the target machine:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了来自目标机器的信息：
- en: '![](img/f3389df6-946c-43f7-aeb6-0a148c974037.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3389df6-946c-43f7-aeb6-0a148c974037.png)'
- en: By comparing this information, we know that `p0f` got the OS information correctly.
    The remote machine is using Linux Version 2.6.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 通过比较这些信息，我们知道`p0f`正确地获取了操作系统信息。远程机器正在使用Linux 2.6版本。
- en: You can stop `p0f` by pressing the *Ctrl* + *C* key combination.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过按下*Ctrl* + *C*组合键来停止`p0f`。
- en: Introducing port scanning
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍端口扫描
- en: The simplest definition of port scanning is that it is a method used to determine
    the state of the **Transmission Control Protocol** (**TCP**) and **User Datagram
    Protocol** (**UDP**) ports on the target machines. An open port may mean that
    there is a network service listening on the port and the service is accessible,
    whereas a closed port means that there is no network service listening on that
    port.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 端口扫描的最简单定义是它是一种用于确定目标机器上**传输控制协议**（**TCP**）和**用户数据报协议**（**UDP**）端口状态的方法。开放的端口可能意味着有一个网络服务在该端口上监听，并且该服务是可访问的，而关闭的端口意味着该端口上没有网络服务在监听。
- en: After getting the port's state, an attacker will then check the version of the
    software used by the network service and find out the vulnerabilities of that
    version of software. For example, suppose that server A has web-server software
    version 1.0\. A few days ago, there was a security advisory released. The advisory
    gave information about the vulnerability in web-server software Version 1.0\.
    If an attacker finds out about server A's web server and is able to get the version
    information, the attacker can use this information to attack the server. This
    is just a simple example of what an attacker can do after getting information
    about the services available on the machine.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取端口状态之后，攻击者将检查网络服务使用的软件版本，并找出该软件版本的漏洞。例如，假设服务器A有web服务器软件版本1.0。几天前，发布了一个安全公告。该公告提供了关于web服务器软件版本1.0中的漏洞的信息。如果攻击者发现了服务器A的web服务器并能够获取版本信息，攻击者可以利用这些信息来攻击服务器。这只是攻击者在获取有关机器上可用服务的信息后可以做的一个简单示例。
- en: Before we dig into the world of port scanning, let's discuss a little bit of
    TCP/IP protocol theory.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入研究端口扫描之前，让我们先讨论一下TCP/IP协议的理论。
- en: Understanding TCP/IP protocol
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解TCP/IP协议
- en: In the TCP/IP protocol suite, there are dozens of different protocols, but the
    most important ones are TCP and IP. IP provides addressing, datagram routing,
    and other functions for connecting one machine to another, while TCP is responsible
    for managing connections and provides reliable data transport between processes
    on two machines. IP is located in the network layer (layer 3) in the **Open Systems
    Interconnection** (**OSI**) model, whereas TCP is located in the transport layer
    (layer 4) of OSI.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在TCP/IP协议套件中，有数十种不同的协议，但最重要的是TCP和IP。IP提供寻址、数据包路由和其他功能，用于将一台机器连接到另一台机器，而TCP负责管理连接，并在两台机器上的进程之间提供可靠的数据传输。IP位于**开放系统互连**（**OSI**）模型的网络层（第3层），而TCP位于OSI模型的传输层（第4层）。
- en: Besides TCP, the other key protocol in the transport layer is UDP. You may be
    asking what the differences between these two protocols are.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 除了TCP，传输层中的另一个关键协议是UDP。您可能会问这两种协议之间的区别是什么。
- en: 'In brief, TCP has the following characteristics:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，TCP具有以下特点：
- en: '**This is a connection-oriented protocol**: Before TCP can be used for sending
    data, the client and the server that want to communicate must establish a TCP
    connection using a three-way handshake mechanism, as follows:'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**这是一种面向连接的协议**：在TCP可以用于发送数据之前，想要通信的客户端和服务器必须使用三次握手机制建立TCP连接，如下所示：'
- en: The client initiates the connection by sending a packet containing a SYN (synchronize)
    flag to the server. The client also sends the **Initial Sequence Number** (**ISN**)
    in the sequence number field of the SYN segment. This ISN is chosen randomly.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端通过向服务器发送一个包含SYN（同步）标志的数据包来发起连接。客户端还在SYN段的序列号字段中发送**初始序列号**（**ISN**）。这个ISN是随机选择的。
- en: The server replies with its own SYN segment containing its ISN. The server acknowledges
    the client's SYN by sending an ACK (acknowledgment) flag containing the client
    `ISN` + `1` value.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器回复自己的SYN段，其中包含自己的ISN。服务器通过发送一个包含客户端`ISN` + `1`值的ACK（确认）标志来确认客户端的SYN。
- en: The client acknowledges the server by sending an ACK flag containing the server
    ISN + `1`. At this point, the client and the server can exchange data.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端通过发送一个包含服务器ISN + `1`的ACK标志来确认服务器。此时，客户端和服务器可以交换数据。
- en: 'To terminate the connection, the TCP must follow this mechanism:'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要终止连接，TCP必须遵循这个机制：
- en: The client sends a packet containing a `FIN` (finish) flag set.
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端发送一个包含`FIN`（结束）标志的数据包。
- en: The server sends an `ACK` (acknowledgment) packet to inform the client that
    the server has received the FIN packet.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器发送一个`ACK`（确认）数据包以通知客户端服务器已经收到了FIN数据包。
- en: After the application server is ready to close, the server sends a FIN packet.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用服务器准备关闭后，服务器发送一个FIN数据包。
- en: The client then sends the `ACK` packet to acknowledge receiving the server's
    `FIN` packet. In a normal case, each side (client or server) can terminate its
    end of the communication independently by sending the `FIN` packet.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后客户端发送`ACK`数据包以确认接收服务器的`FIN`数据包。在正常情况下，每一方（客户端或服务器）都可以通过发送`FIN`数据包独立地终止其通信端。
- en: '**This is a reliable protocol**: TCP uses a sequence number and an acknowledgment
    to identify packet data. The receiver sends an acknowledgment when it has received
    the packet. When a packet is lost, TCP will automatically retransmit it if it
    hasn''t received any acknowledgment from the receiver. If the packets arrive out
    of order, TCP will reorder them before submitting them to the application.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**这是一种可靠的协议**：TCP使用序列号和确认来标识数据包数据。接收方在接收到数据包时发送确认。当数据包丢失时，如果没有从接收方收到任何确认，TCP将自动重传。如果数据包到达顺序不对，TCP将在将其提交给应用程序之前重新排序。'
- en: Applications that need to transfer files or important data use a TCP, such as
    **Hypertext Transport Protocol** (**HTTP**) and **File Transfer Protocol** (**FTP**).
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要传输文件或重要数据的应用程序使用TCP，例如**超文本传输协议**（**HTTP**）和**文件传输协议**（**FTP**）。
- en: 'UDP has opposing characteristics to TCP, which are as follows:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: UDP具有与TCP相反的特性，如下：
- en: This is a connectionless protocol. To send data, the client and the server don't
    need to establish a UDP connection first.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一种无连接的协议。要发送数据，客户端和服务器不需要首先建立UDP连接。
- en: It will do its best to send a packet to the destination, but if a packet is
    lost, UDP will not automatically resend it. It is up to the application to retransmit
    the packet.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它会尽力将数据包发送到目的地，但如果数据包丢失，UDP不会自动重新发送。由应用程序重新传输数据包。
- en: Applications that can bear the loss of some packets, such as video streaming
    and other multimedia applications, use UDP. The other well-known applications
    that use UDP are **Domain Name System** (**DNS**), **Dynamic Host Configuration
    Protocol** (**DHCP**), and **Simple Network Management Protocol** (**SNMP**).
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 可以承受一些数据包丢失的应用程序，例如视频流和其他多媒体应用程序，使用UDP。使用UDP的其他知名应用程序包括**域名系统**（**DNS**）、**动态主机配置协议**（**DHCP**）和**简单网络管理协议**（**SNMP**）。
- en: 'For applications to be able to communicate correctly, the transport layer uses
    addressing, called ports. A software process listens on a particular port number
    on the server side, and the client machine sends data to that server port to be
    processed by the server application. The port numbers have a 16-bit address, and
    the number can range from `0` to `65,535`. To avoid a chaotic usage of port numbers,
    there are universal agreements on port number ranges, as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使应用程序能够正确通信，传输层使用称为端口的寻址。软件进程在服务器端的特定端口号上监听，并且客户端机器将数据发送到该服务器端口，以便由服务器应用程序处理。端口号有一个16位地址，数字范围从`0`到`65,535`。为了避免端口号的混乱使用，有关端口号范围的通用协议如下：
- en: '**Well-known port numbers (**`0` **to** `1,023`**)**: Port numbers in this
    range are reserved port numbers and are usually used by the server processes that
    are run by a system administrator or privileged user. Examples of the port numbers
    used by an application server are SSH (port `22`), and HTTP (port `80`), HTTPS
    (port `443`).'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**众所周知的端口号（**`0` **至** `1,023`**）**：此范围内的端口号是保留端口号，通常由系统管理员或特权用户运行的服务器进程使用。应用服务器使用的端口号示例包括SSH（端口`22`）和HTTP（端口`80`）、HTTPS（端口`443`）。'
- en: '**Registered port numbers (**`1,024` **to** `49,151`**)**: Users can send a
    request to the **Internet Assigned Number Authority** (**IANA**) to reserve one
    of these port numbers for their client-server application.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注册端口号（**`1,024` **至** `49,151`**）**：用户可以向**互联网编号分配机构**（**IANA**）发送请求，为他们的客户端-服务器应用程序保留其中一个端口号。'
- en: '**Private or dynamic port numbers (**`49,152` **to** `65,535`**)**: Anyone
    can use the port numbers in this range without registering them with the IANA.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私有或动态端口号（**`49,152` **至** `65,535`**）**：任何人都可以使用此范围内的端口号，而无需向IANA注册。'
- en: After discussing the differences between TCP and UDP in brief, let's describe
    TCP and UDP message formats.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在简要讨论了TCP和UDP之间的区别之后，让我们描述一下TCP和UDP消息格式。
- en: Understanding TCP and UDP message formats
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解TCP和UDP消息格式
- en: 'A TCP message is called a segment. A TCP segment consists of a header and a
    data section. The TCP header is often 20 bytes long (without TCP options). It
    can be described using the following screenshot:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: TCP消息称为段。TCP段由头部和数据部分组成。TCP头通常为20个字节长（不包括TCP选项）。可以使用以下屏幕截图描述TCP头：
- en: '![](img/5d90b6e9-1c4f-4cc3-bb4a-5c50dd27e726.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5d90b6e9-1c4f-4cc3-bb4a-5c50dd27e726.png)'
- en: 'The following is a brief description of each field:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对每个字段的简要描述：
- en: The **Source Port** and the **Destination Port** have a length of 16 bits each.
    The source port is the port on the sending machine that transmits the packet,
    while the destination port is the port on the target machine that receives the
    packet.
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**源端口**和**目标端口**各自的长度为16位。源端口是发送机上传输数据包的端口，而目标端口是接收数据包的目标机器上的端口。'
- en: The **Sequence Number (32 bits)**, in a normal transmission, is the sequence
    number of the first byte of data of this segment.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**序列号（32位）**在正常传输中，是此段数据的第一个字节的序列号。'
- en: The **Acknowledgment Number (32 bits)** contains the sequence number from the
    sender, increased by one.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确认号（32位）**包含发送方的序列号，增加了一个。'
- en: '**H.Len. (4 bits)** is the size of the TCP header in 32-bit words.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**H.Len.（4位）**是TCP头的大小，以32位字为单位。'
- en: '**Rsvd.** is reserved for future use. It is a 4-bit field and must be zero.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Rsvd.** 保留供将来使用。它是一个4位字段，必须为零。'
- en: 'The **Control Bits** (control flags) contain eight 1-bit flags. In the original
    specification (RFC 793; the RFC can be downloaded from [http://www.ietf.org/rfc/rfc793.txt](http://www.ietf.org/rfc/rfc793.txt)),
    TCP only has six flags, as follows:'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制位**（控制标志）包含八个1位标志。在原始规范（RFC 793；可以从[http://www.ietf.org/rfc/rfc793.txt](http://www.ietf.org/rfc/rfc793.txt)下载RFC）中，TCP只有六个标志，如下：'
- en: '**SYN**: This flag synchronizes the sequence numbers. This bit is used during
    session establishment.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SYN**：此标志同步序列号。此位在会话建立期间使用。'
- en: '**ACK**: This flag indicates that the **Acknowledgment** field in the TCP header
    is significant. If a packet contains this flag, it means that it is an acknowledgement
    to the previously received packet.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ACK**：此标志表示TCP头中的**确认**字段是重要的。如果数据包包含此标志，这意味着它是对先前接收的数据包的确认。'
- en: '**RST**: This flag resets the connection.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RST**：此标志重置连接。'
- en: '**FIN**: This flag indicates that the party has no more data to send. It is
    used to tear down a connection gracefully.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FIN**：此标志表示一方没有更多数据要发送。它用于优雅地终止连接。'
- en: '**PSH**: This flag indicates that the buffered data should be pushed immediately
    to the application rather than wait for more data.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PSH**：此标志表示缓冲数据应立即推送到应用程序，而不是等待更多数据。'
- en: '**URG**: This flag indicates that the **Urgent Pointer** field in the TCP header
    is significant. The urgent pointer refers to important data-sequence numbers.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**URG**：这个标志表示TCP头部中的**紧急指针**字段是重要的。紧急指针指的是重要的数据序列号。'
- en: 'Later on, RFC 3168 (the RFC can be downloaded from [http://www.ietf.org/rfc/rfc3168.txt](http://www.ietf.org/rfc/rfc3168.txt))
    added two more extended flags, as follows:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后，RFC 3168（RFC可以从[http://www.ietf.org/rfc/rfc3168.txt](http://www.ietf.org/rfc/rfc3168.txt)下载）添加了两个扩展标志，如下所示：
- en: '**Congestion Window Reduced (CWR)**: This is used by the data sender to inform
    the data receiver that the queue of outstanding packets to be sent has been reduced
    due to network congestion'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拥塞窗口减小（CWR）**：这是数据发送方用来通知数据接收方由于网络拥塞而减少了待发送的未决数据包队列'
- en: '**Explicit Connection Notification-Echo (ECN-Echo)**: This indicates that the
    network connection is experiencing congestion'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显式连接通知-回显（ECN-Echo）**：这表示网络连接正在经历拥塞'
- en: '**Window Size (16 bits)** specifies the number of bytes the receiver is willing
    to accept'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**窗口大小（16位）**指定接收方愿意接受的字节数'
- en: '**Checksum (16 bits)** is used for the error checking of the TCP header and
    data'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**校验和（16位）**用于对TCP头部和数据进行错误检查'
- en: The flags can be set independently of each other.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 标志可以独立设置。
- en: To get more information on TCP, consult RFC 793 and RFC 3168.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关TCP的更多信息，请参阅RFC 793和RFC 3168。
- en: 'When performing port scanning on the TCP port using a SYN packet sent to the
    target machine, an attacker might face the following behaviors:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用SYN数据包对目标机器的TCP端口进行端口扫描时，攻击者可能会面临以下行为：
- en: The target machine responds with the SYN+ACK packet. If we receive this packet,
    we know that the port is open. This behavior is defined in the TCP specification
    (RFC 793), which states that the SYN packet must be responded to with the SYN
    + ACK packet if the port is open, without considering the SYN packet payload.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标机器以SYN+ACK数据包回应。如果我们收到这个数据包，我们就知道端口是开放的。这种行为在TCP规范（RFC 793）中定义，规定如果端口是开放的，SYN数据包必须用SYN
    + ACK数据包回应，而不考虑SYN数据包的有效负载。
- en: The target machine sends back a packet with the RST and ACK bits set. This means
    that the port is closed.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标机器发送一个设置了RST和ACK位的数据包。这意味着端口是关闭的。
- en: The target machine sends an ICMP message, such as `ICMP Port Unreachable`, which
    means that the port is not accessible to us, most likely because it is blocked
    by the firewall.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标机器发送ICMP消息，比如`ICMP端口不可达`，这意味着该端口对我们不可访问，很可能是因为防火墙阻止了它。
- en: The target machine sends nothing back to us. This may indicate that there is
    no network service listening on that port or that the firewall is blocking our
    SYN packet silently.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标机器对我们没有任何回应。这可能表示该端口上没有网络服务监听，或者防火墙正在默默地阻止我们的SYN数据包。
- en: From a pentester's point of view, interesting behavior is when the port is open,
    because this means that there is a service available on that port that can be
    tested further.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 从渗透测试人员的角度来看，端口开放时的行为是有趣的，因为这意味着该端口上有一个可以进一步测试的服务。
- en: If you conduct a port-scanning attack, you should understand the various TCP
    behaviors listed in order to be able to attack more effectively.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如果进行端口扫描攻击，您应该了解各种TCP行为的列表，以便能够更有效地进行攻击。
- en: 'When scanning for UDP ports, you will see different behaviors; these will be
    explained later on. Before we go on to see various UDP behaviors, let''s see the
    UDP header format first, as shown in the following screenshot:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在扫描UDP端口时，您将看到不同的行为；这些将在稍后解释。在我们继续看各种UDP行为之前，让我们先看一下UDP头部格式，如下图所示：
- en: '![](img/e576d8b1-6b82-466e-bda0-d05398d3f967.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e576d8b1-6b82-466e-bda0-d05398d3f967.png)'
- en: The following is a brief explanation of each field in the UDP header depicted
    in the preceding figure.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是UDP头部中每个字段的简要解释，如前图所示。
- en: 'Just like the TCP header, the UDP header also has the **Source Port** and the
    **Destination Port**, each of which has a length of 16 bits. The source port is
    the port on the sending machine that transmits the packet, while the destination
    port is the port on the target machine that receives the packet:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 就像TCP头部一样，UDP头部也有**源端口**和**目标端口**，每个端口长度为16位。源端口是发送数据包的发送机器上的端口，而目标端口是接收数据包的目标机器上的端口。
- en: '**UDP Length** is the length of the UDP header'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UDP长度**是UDP头部的长度'
- en: '**UDP Checksum (16 bits)** is used for the error checking of the UDP header
    and data'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UDP校验和（16位）**用于对UDP头部和数据进行错误检查'
- en: Note that there are no sequence-number, acknowledgement-number, and control-bits
    fields in the UDP header.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在UDP头部中没有序列号、确认号和控制位字段。
- en: 'During a port-scanning activity to the UDP port on the target machine, an attacker
    might face the following behaviors:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在对目标机器的UDP端口进行端口扫描活动时，攻击者可能会面临以下行为：
- en: The target machine responds with a UDP packet. If we receive this packet, we
    know that the port is open.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标机器以UDP数据包回应。如果我们收到这个数据包，我们就知道端口是开放的。
- en: The target machine sends an ICMP message, such as `ICMP Port Unreachable`. It
    can be concluded that the port is closed. However, if the message sent is not
    an ICMP unreachable message, it means that the port is filtered by the firewall.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标机器发送ICMP消息，比如`ICMP端口不可达`。可以得出结论，端口是关闭的。然而，如果发送的消息不是ICMP不可达消息，那么意味着端口被防火墙过滤了。
- en: 'The target machine sends nothing back to us. This may indicate one of the following
    situations:'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标机器对我们没有任何回应。这可能表示以下情况之一：
- en: The port is closed
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口是关闭的
- en: The inbound UDP packet is blocked
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入站UDP数据包被阻止
- en: The response is blocked
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应被阻止
- en: UDP port scanning is less reliable when compared to TCP port scanning because,
    sometimes, the UDP port is open but the service listening on that port is looking
    for a specific UDP payload. Hence, the service will not send any replies.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 与TCP端口扫描相比，UDP端口扫描的可靠性较低，因为有时UDP端口是开放的，但在该端口上监听的服务正在寻找特定的UDP有效负载。因此，服务将不会发送任何回复。
- en: Now that we have briefly described port-scanning theory, let's put this into
    practice. In the following sections, we will look at several tools that can be
    used to help us perform network scanning.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经简要描述了端口扫描理论，让我们将其付诸实践。在接下来的几节中，我们将看看几个工具，可以帮助我们进行网络扫描。
- en: For the practical scenarios in this chapter, we will utilize a Metasploitable
    virtual machine, as explained in [Chapter 2](573e3579-5017-4c33-acd8-01e866ed66d8.xhtml),
    *Setting up your Test Lab*, as our target machine. It has an IP address of `172.16.43.156`,
    while our attacking machine has an IP address of `172.16.43.150`.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的实际场景中，我们将利用一个Metasploitable虚拟机作为我们的目标机器。它的IP地址是`172.16.43.156`，而我们的攻击机器的IP地址是`172.16.43.150`。
- en: The network scanner
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络扫描仪
- en: In this section, we will look at several tools that can be used to find open
    ports, fingerprint the remote operating system, and enumerate the services on
    the remote machine.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看看几个工具，可以用来查找开放端口、指纹远程操作系统，并枚举远程机器上的服务。
- en: Service enumeration is a method that is used to find the service version that
    is available on a particular port on the target system. This version information
    is important because, with this information, the penetration tester can search
    for security vulnerabilities that exist for that software version.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 服务枚举是一种用于查找目标系统上特定端口上可用服务版本的方法。这个版本信息很重要，因为有了这个信息，渗透测试人员可以搜索存在于该软件版本的安全漏洞。
- en: While standard ports are often used, sometimes systems administrators will change
    the default ports for some services. For example, an SSH service may be bound
    to port `22` (as a convention), but a system administrator may change it to be
    bound to port `2222`. If the penetration tester only does a port scan to the common
    port for SSH, it may not find that service. The penetration tester will also have
    difficulties when dealing with proprietary applications running on non-standard
    ports. By using the service enumeration tools, these two problems can be mitigated,
    so there is a chance that the service can be found, regardless of the port it
    is bound to.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然通常使用标准端口，但有时系统管理员会更改某些服务的默认端口。例如，SSH服务可能绑定到端口`22`（作为约定），但系统管理员可能会将其更改为绑定到端口`2222`。如果渗透测试人员只对SSH的常用端口进行端口扫描，可能无法找到该服务。当处理运行在非标准端口上的专有应用程序时，渗透测试人员也会遇到困难。通过使用服务枚举工具，这两个问题可以得到缓解，因此有可能找到服务，无论它绑定到哪个端口。
- en: Nmap
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap
- en: Nmap is a port scanner that is comprehensive, feature- and fingerprint-rich,
    and widely used by the IT security community. It is written and maintained by
    Fyodor. It is a must-have tool for a penetration tester because of its quality
    and flexibility.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap是一个全面的、功能丰富的、广泛被IT安全社区使用的端口扫描器。它由Fyodor编写和维护。由于其质量和灵活性，它是渗透测试人员必备的工具。
- en: 'Besides being used as a port scanner, Nmap has several other capabilities,
    as follows:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 除了用作端口扫描器外，Nmap还具有以下几个功能：
- en: '**Host discovery**: Nmap can be used to find live hosts on the target systems.
    By default, Nmap will send an ICMP echo request, a TCP SYN packet to port `443`,
    a TCP ACK packet to port `80`, and an ICMP timestamp request to carry out host
    discovery.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机发现：Nmap可以用来在目标系统上找到活动的主机。默认情况下，Nmap将发送一个ICMP回显请求，一个TCP SYN数据包到端口`443`，一个TCP
    ACK数据包到端口`80`，以及一个ICMP时间戳请求来进行主机发现。
- en: '**Service/version detection**: After Nmap has discovered the ports, it can
    further check for the service protocol, the application name, and the version
    number used on the target machine.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务/版本检测：在Nmap发现端口后，它可以进一步检查目标机器上使用的服务协议、应用程序名称和版本号。
- en: '**Operating system detection**: Nmap sends a series of packets to the remote
    host, and examines the responses. Then, it compares these responses with its operating
    system fingerprint database and prints out the details if there is a match. If
    it is not able to determine the operating system, Nmap will provide a URL to which
    you can submit the fingerprint to update its operating system fingerprint database.
    Of course, you should submit the fingerprint if you know the operating system
    used on the target system.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统检测：Nmap向远程主机发送一系列数据包，并检查响应。然后，它将这些响应与其操作系统指纹数据库进行比较，并在有匹配时打印出详细信息。如果它无法确定操作系统，Nmap将提供一个URL，您可以提交指纹以更新其操作系统指纹数据库。当然，如果您知道目标系统使用的操作系统，应该提交指纹。
- en: '**Network traceroute**: This is performed to determine the port and protocol
    that are most likely to reach the target system. Nmap traceroute starts with a
    high value of TTL and decrements it until the TTL value reaches zero.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络路由跟踪：这是为了确定最有可能到达目标系统的端口和协议。Nmap路由跟踪从一个较高的TTL值开始，并递减直到TTL值达到零。
- en: '**Nmap Scripting Engine**: With this feature, Nmap can be extended. If you
    want to add a check that is not included with the default Nmap, you can do so
    by writing the check using the Nmap scripting engine. Currently, there are checks
    for vulnerabilities in network services and for enumerating resources on the target
    system.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nmap脚本引擎：有了这个功能，Nmap可以被扩展。如果您想添加一个默认Nmap中没有包含的检查，可以使用Nmap脚本引擎编写检查。目前，有检查网络服务漏洞和枚举目标系统资源的功能。
- en: 'It is good practice to always check for new versions of Nmap. If you find the
    latest version of Nmap that is available for Kali Linux, you can update your Nmap
    by issuing the following commands:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 始终检查Nmap的新版本是一个好习惯。如果您找到了适用于Kali Linux的最新版本的Nmap，可以通过发出以下命令来更新您的Nmap：
- en: '[PRE19]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'To start Nmap, you can navigate to Applications and then to Information Gathering.
    You can also start Nmap by going to the console to execute the following command:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Nmap，可以转到应用程序，然后转到信息收集。您也可以通过转到控制台来执行以下命令来启动Nmap：
- en: '[PRE20]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This will display all of the Nmap options with their descriptions.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示所有Nmap选项及其描述。
- en: A user who is new to Nmap will find the available options quite overwhelming.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Nmap新手来说，可用选项可能会让人感到不知所措。
- en: 'Fortunately, you only need one option to scan for the remote machine. That
    option is your target IP address or hostname, if you have set up the DNS correctly.
    This is done with the following command:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，您只需要一个选项来扫描远程机器。该选项是您的目标IP地址或主机名，如果您已正确设置DNS。这可以通过以下命令完成：
- en: '[PRE21]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The following is the result of the scan without any other options:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是没有其他选项的扫描结果：
- en: '[PRE22]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: From the preceding result, we can see that the target machine is very vulnerable
    to attack because it has many open ports.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的结果中，我们可以看到目标机器非常容易受到攻击，因为它有许多开放的端口。
- en: 'Before we continue to use Nmap, let''s take a look at the port states that
    can be identified by Nmap. There are six port states that are recognized by Nmap,
    as follows:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续使用Nmap之前，让我们看一下Nmap可以识别的端口状态。Nmap可以识别六种端口状态，如下所示：
- en: '**Open**: This means that there is an application accepting a TCP connection,
    UDP datagram, or SCTP association.'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**打开**: 这意味着有一个应用程序接受TCP连接、UDP数据报或SCTP关联。'
- en: '**Closed**: This means that although the port is accessible, there is no application
    listening on the port.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关闭**: 这意味着虽然端口是可访问的，但没有应用程序在该端口上监听。'
- en: '**Filtered**: This means that Nmap can''t determine whether the port is open
    or not because there is a packet-filtering device blocking the probe to reach
    the target.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过滤**: 这意味着Nmap无法确定端口是否打开，因为有一个数据包过滤设备阻止了探测到达目标。'
- en: '**Unfiltered**: This means that the port is accessible, but Nmap cannot determine
    whether it is open or closed.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未过滤**: 这意味着端口是可访问的，但Nmap无法确定它是打开还是关闭的。'
- en: '**Open|Filtered**: This means that Nmap is unable to determine whether a port
    is open or filtered. This happens when a scan of open ports doesn''t give a response.
    It can be achieved by setting the firewall to drop packets.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**打开|过滤**: 这意味着Nmap无法确定端口是打开还是过滤的。当打开端口的扫描没有响应时会发生这种情况。这可以通过设置防火墙来实现丢弃数据包。'
- en: '**Closed|Filtered**: This means Nmap is unable to determine whether a port
    is closed or filtered.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**关闭|过滤**: 这意味着Nmap无法确定端口是关闭还是过滤的。'
- en: After describing the port states, we will describe several options that are
    commonly used during penetration testing, and, after that, we will use those options
    in practice.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在描述端口状态之后，我们将描述在渗透测试中常用的几个选项，然后我们将在实践中使用这些选项。
- en: Nmap target specification
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap目标规范
- en: Nmap will treat everything on the command line that isn't an option or option
    argument as a target host specification. We suggest that you use the IP address
    specification instead of the hostname. By using the IP address, Nmap doesn't need
    to do DNS resolution first. This will speed up the port-scanning process.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap将处理命令行上不是选项或选项参数的所有内容作为目标主机规范。我们建议您使用IP地址规范而不是主机名。通过使用IP地址，Nmap不需要首先进行DNS解析。这将加快端口扫描过程。
- en: 'In the current version, Nmap supports the following IPv4 address specifications:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前版本中，Nmap支持以下IPv4地址规范：
- en: It supports a single host, such as `172.16.43.156`.
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持单个主机，比如`172.16.43.156`。
- en: It supports a whole network of adjacent hosts by using the CIDR notation, such
    as `172.16.43.0/24`. This specification will include 256 IP addresses ranging
    from `172.16.43.0` to `172.16.43.255`.
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持使用CIDR表示法的相邻主机的整个网络，比如`172.16.43.0/24`。这个规范将包括从`172.16.43.0`到`172.16.43.255`的256个IP地址。
- en: 'It supports an octet range addressing, such as `172.16.2-4,6.1`. This addressing
    will include four IP addresses: `172.16.2.1`, `172.16.3.1`, `172.16.4.1`, and
    `172.16.6.1`.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持八进制范围寻址，比如`172.16.2-4,6.1`。这种寻址将包括四个IP地址：`172.16.2.1`、`172.16.3.1`、`172.16.4.1`和`172.16.6.1`。
- en: It supports multiple host specifications, such as `172.16.43.1 172.168.3-5,9.1`.
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持多个主机规范，比如`172.16.43.1 172.168.3-5,9.1`。
- en: For the IPv6 address, Nmap only supports a fully qualified IPv6 format and hostname,
    such as `fe80::a8bb:ccff:fedd:eeff%eth0`.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 对于IPv6地址，Nmap只支持完全合格的IPv6格式和主机名，比如`fe80::a8bb:ccff:fedd:eeff%eth0`。
- en: Besides getting the target specification from the command line, Nmap also accepts
    a target definition from a text file by using the `-iL <inputfilename>` option.
    This option is useful if we already have the IP addresses from another program.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 除了从命令行获取目标规范外，Nmap还可以通过使用`-iL <inputfilename>`选项从文本文件中接受目标定义。如果我们已经从另一个程序获得了IP地址，这个选项就很有用。
- en: Make sure that the entries in that file use the Nmap-supported target-specification
    format. Each entry must be separated by spaces, tabs, or a new line.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 确保文件中的条目使用Nmap支持的目标规范格式。每个条目必须用空格、制表符或新行分隔。
- en: 'The following code is a sample of that file:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是该文件的示例：
- en: '[PRE23]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now, let's scan a network for `172.16.430/24`. We want to see the packets sent
    by Nmap. To monitor the packets sent, we can use a packet-capture utility, such
    as `tcpdump`.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们扫描`172.16.430/24`的网络。我们想要查看Nmap发送的数据包。为了监视发送的数据包，我们可以使用数据包捕获实用程序，比如`tcpdump`。
- en: 'Open a console and type the following command:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个控制台，输入以下命令：
- en: '[PRE24]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The `172.16.43.150` IP address belongs to our machine, which launches Nmap.
    You need to adjust it to your configuration.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`172.16.43.150` IP地址属于我们的机器，它启动了Nmap。您需要根据您的配置进行调整。'
- en: 'Open another console on the same machine and type the following command:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一台机器上打开另一个控制台，输入以下命令：
- en: '[PRE25]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'In the `tcpdump` console, you will see the following packet:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在`tcpdump`控制台中，您将看到以下数据包：
- en: '[PRE26]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: From the preceding packet information, we know that the attacking machine sent
    a packet with a SYN flag set from port `49270` to the target machine port `23`
    (Telnet). The SYN flag is set by default if Nmap is run by a privileged user,
    such as `root` in Kali Linux.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的数据包信息，我们知道攻击机器从端口`49270`向目标机器端口`23`（Telnet）发送了一个设置了SYN标志的数据包。如果Nmap由特权用户（如Kali
    Linux中的`root`）运行，默认情况下会设置SYN标志。
- en: 'The following screenshot shows a packet sent by the attacking machine to other
    machines and ports on the target network:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了攻击机器发送到目标网络上其他机器和端口的数据包：
- en: '![](img/0c288704-bc73-47b4-97be-79bf2b971c5e.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c288704-bc73-47b4-97be-79bf2b971c5e.png)'
- en: 'If the remote machine responds, the response packet will look like the following
    code:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 如果远程机器响应，响应数据包将如下所示：
- en: '[PRE27]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Note that the flag sent is denoted by the character `R`, which is reset. It
    means that port `1720` in the target machine is closed. We can verify this with
    the previous Nmap result.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，发送的标志由字符`R`表示，即重置。这意味着目标机器中的端口`1720`是关闭的。我们可以通过之前的Nmap结果来验证这一点。
- en: 'However, if the port is open, you will see the following network traffic:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果端口是开放的，您将看到以下网络流量：
- en: '[PRE28]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: You can see that the packet in the preceding code is to acknowledge the sequence
    number from the previous packet displayed. This packet has an acknowledgement
    number of `239440323`, while the previous packet had a sequence number of `239440322`.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到前面代码中的数据包是用来确认先前显示的数据包的序列号的。此数据包的确认号为`239440323`，而前一个数据包的序列号为`239440322`。
- en: Nmap TCP scan options
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap TCP扫描选项
- en: 'To be able to use most of the TCP scan options, Nmap needs a privileged user
    (a root-level account in the Unix world or an administrator-level account in the
    Windows world). This is used to send and receive raw packets. By default, Nmap
    will use a TCP SYN scan, but if Nmap doesn''t have a privileged user, it will
    use the TCP connect scan. The various scans used by Nmap are as follows:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够使用大多数TCP扫描选项，Nmap需要一个特权用户（Unix世界中的根级帐户或Windows世界中的管理员级帐户）。这用于发送和接收原始数据包。默认情况下，Nmap将使用TCP
    SYN扫描，但如果Nmap没有特权用户，则将使用TCP连接扫描。Nmap使用的各种扫描如下：
- en: '**TCP connect scan (**`-sT`**)**: This option will complete the three-way handshake
    with each target port. If the connection succeeds, the port is considered open.
    As a result of the need to do a three-way handshake for each port, this scan type
    is slow and it will most likely be logged by the target. This is the default scan
    option used if Nmap is run by a user who doesn''t have any privileges.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP连接扫描（-sT）：此选项将完成与每个目标端口的三次握手。如果连接成功，则认为端口是开放的。由于需要对每个端口进行三次握手，因此此扫描类型速度较慢，并且很可能会被目标记录。如果Nmap由没有任何特权的用户运行，则使用此默认扫描选项。
- en: '**SYN scan (**`-sS`**)**: This option is also known as **half-open** or **SYN
    stealth**. With this option, Nmap sends a SYN packet and then waits for a response.
    A SYN/ACK response means that the port is listening, while an RST/ACK response
    means that the port is not listening. If there is no response or an ICMP-unreachable
    error-message response, the port is considered to be filtered. This scan type
    can be performed quickly, and, because the three-way handshake is never completed,
    it is unobtrusive and stealthy. This is the default scan option if you run Nmap
    as a privileged user.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SYN扫描（-sS）：此选项也称为半开放或SYN隐身。使用此选项，Nmap发送一个SYN数据包，然后等待响应。SYN/ACK响应表示端口正在监听，而RST/ACK响应表示端口未在监听。如果没有响应或者是ICMP不可达的错误消息响应，则认为端口被过滤。此扫描类型可以快速执行，并且由于三次握手从未完成，因此不会引人注目和隐秘。如果以特权用户身份运行Nmap，则这是默认的扫描选项。
- en: '**TCP NULL scan (**`-sN`**), FIN scan (**`-sF`**), and XMAS scan (**`-sX`**)**:
    The `NULL` scan doesn''t set any control bits. The FIN scan only sets the FIN
    flag bit, and the `XMAS` scan sets the FIN, `PSH`, and URG flags. If an RST packet
    is received as a response, the port is considered closed, while no response means
    that the port is open/filtered.'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP NULL扫描（-sN）、FIN扫描（-sF）和XMAS扫描（-sX）：`NULL`扫描不设置任何控制位。FIN扫描只设置FIN标志位，而`XMAS`扫描设置FIN、PSH和URG标志。如果收到RST数据包作为响应，则认为端口关闭，而没有响应则表示端口是开放/被过滤的。
- en: '**TCP Maimon scan (**`-sM`**)**: The TCP Maimon scan was discovered by Uriel
    Maimon. A scan of this type will send a packet with the FIN/ACK flag bit set.
    BSD-derived systems will drop the packet if the port is open, and will respond
    with RST if the port is closed.'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP Maimon扫描（-sM）：TCP Maimon扫描是由Uriel Maimon发现的。此类型的扫描将发送一个设置了FIN/ACK标志位的数据包。如果端口是开放的，基于BSD的系统将丢弃数据包，并在端口关闭时响应RST。
- en: '**TCP ACK scan (**`-sA`**)**: This scan type is used to determine whether a
    firewall is stateful or not, and which ports are filtered. A network packet of
    this type only sets the ACK bit. If RST is returned, it means that the target
    is unfiltered.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP ACK扫描（-sA）：此扫描类型用于确定防火墙是否具有状态，并且哪些端口被过滤。此类型的网络数据包仅设置ACK位。如果返回RST，则表示目标未被过滤。
- en: '**TCP Window scan (**`-sW`**)**: This scan type works by examining the TCP
    Window field of the RST packet''s response. An open port will have a positive
    **TCP Window** value, while a closed port will have a zero TCP Window value.'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP窗口扫描（-sW）：此扫描类型通过检查RST数据包响应的TCP窗口字段来工作。开放端口将具有正的TCP窗口值，而关闭端口将具有零的TCP窗口值。
- en: '**TCP Idle scan (**`-sI`**)**: Using this technique, no packets are sent to
    the target by your machine; instead, the scan will bounce off to a zombie host
    you specify. An IDS will report the zombie as the attacker.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP空闲扫描（-sI）：使用此技术，您的机器不会向目标发送任何数据包；相反，扫描将反弹到您指定的僵尸主机。IDS将报告僵尸为攻击者。
- en: Nmap also supports you in creating your own custom TCP scan by giving you the
    option of **scanflags**. The argument to that option can be numerical, such as
    `9` for PSH and FIN, or symbolic names. Just put together any combination of URG,
    ACK, PSH, RST, SYN, FIN, ECE, CWR, ALL, and NONE in any order; for example, `--scanflags
    URGACKPSH` will set the flags URG, ACK, and PSH.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nmap还支持您通过提供**scanflags**选项来创建自己的自定义TCP扫描。该选项的参数可以是数字，例如`9`表示PSH和FIN，也可以是符号名称。只需以任何顺序组合URG、ACK、PSH、RST、SYN、FIN、ECE、CWR、ALL和NONE；例如，`--scanflags
    URGACKPSH`将设置URG、ACK和PSH标志。
- en: Disabling host discovery
  id: totrans-298
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 禁用主机发现
- en: If a host is blocking a ping request, Nmap may detect that the host is not active;
    so, Nmap may not perform heavy probing, such as port scanning, version detection,
    and operating system detection. To overcome this, Nmap has a feature for disabling
    host discovery. With this option, Nmap will assume that the target machine is
    available and will perform heavy probing against that machine.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 如果主机阻止了ping请求，Nmap可能会检测到主机不活动；因此，Nmap可能不会执行诸如端口扫描、版本检测和操作系统检测等重型探测。为了克服这一点，Nmap具有一个禁用主机发现的功能。使用此选项，Nmap将假定目标机器可用，并将对该机器执行重型探测。
- en: This option is activated using the `-Pn` option.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项使用`-Pn`选项激活。
- en: Nmap UDP scan options
  id: totrans-301
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap UDP扫描选项
- en: While the TCP scan has many types of scans, the UDP scan only has one type,
    which is the UDP scan (`-sU`). Even though the UDP scan is less reliable than
    the TCP scan, as a penetration tester, you should not ignore this scan, because
    there may be interesting services located on these UDP ports.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管TCP扫描有许多类型的扫描，但UDP扫描只有一种类型，即UDP扫描（`-sU`）。尽管UDP扫描不如TCP扫描可靠，但作为渗透测试人员，您不应忽视此扫描，因为这些UDP端口上可能有有趣的服务。
- en: The biggest problem with the UDP scan is how to perform the scan quickly. A
    Linux kernel limits the sending of the `ICMP Port Unreachable` message to one
    message per second. Doing a UDP scan of 65,536 ports to a machine will take more
    than 18 hours to complete.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: UDP扫描的最大问题是如何快速执行扫描。Linux内核限制发送`ICMP端口不可达`消息每秒一条。对一台机器进行65,536个端口的UDP扫描将需要超过18小时才能完成。
- en: 'To help mitigate this problem, there are several methods that can be used,
    as follows:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助缓解这个问题，可以使用几种方法，如下所示：
- en: Running the UDP scan in parallel
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行运行UDP扫描
- en: Scanning the most popular ports first
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先扫描最流行的端口
- en: Scanning behind the firewall
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在防火墙后面扫描
- en: Setting the `--host-timeout` option to skip slow hosts
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`--host-timeout`选项设置为跳过慢主机
- en: These methods can help to decrease the time required for doing UDP port scans.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法可以帮助减少进行UDP端口扫描所需的时间。
- en: 'Let''s look at a scenario where we want to find which UDP ports are open on
    the target machine. To speed up the scanning process, we will only check for ports
    `53` (DNS) and `161` (SNMP). The following is the command used to do this:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个场景，我们想要找出目标机器上开放的UDP端口。为了加快扫描过程，我们将仅检查端口`53`（DNS）和`161`（SNMP）。以下是用于执行此操作的命令：
- en: '[PRE29]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The following is the result of this command:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此命令的结果：
- en: '[PRE30]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Nmap port specification
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap端口规范
- en: In the default configuration, Nmap will only scan randomly the 1,000 most common
    ports for each protocol. The `nmap-services` file contains a popularity score
    for the selection of the top ports.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在默认配置中，Nmap将仅随机扫描每个协议的1,000个最常见端口。`nmap-services`文件包含用于选择顶端口的流行度分数。
- en: 'To change that configuration, Nmap provides several options:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改该配置，Nmap提供了几个选项：
- en: '`-p` **port range**: This scans only the defined ports. To scan ports `1` to
    `1024`, the command is `-p 1-1024`. To scan ports `1` to `65535`, the command
    is `-p-`.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p` **端口范围**：这只扫描定义的端口。要扫描端口`1`到`1024`，命令是`-p 1-1024`。要扫描端口`1`到`65535`，命令是`-p-`。'
- en: '`-F` **(fast)**: This will scan only 100 common ports.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-F` **（快速）**：这将仅扫描100个常见端口。'
- en: '`-r` **(don''t randomize port)**: This option will set sequential port scanning
    (from lowest to highest).'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-r` **（不随机化端口）**：此选项将设置顺序端口扫描（从最低到最高）。'
- en: '`--top-ports <1 or greater>`: This option will only scan the `N` highest-ratio
    ports found in the `nmap-service` file.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--top-ports <1或更大>`：此选项将仅扫描`nmap-service`文件中发现的`N`个最高比例端口。'
- en: 'To scan for ports `22` and `25` using the TCP NULL scan method, you can use
    the following command:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用TCP NULL扫描方法扫描端口`22`和`25`，可以使用以下命令：
- en: '[PRE31]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The following command lines are the result:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令行是结果：
- en: '[PRE32]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following are the packet''s dumped snippets:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是数据包的转储片段：
- en: '[PRE33]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'From the packets displayed in the preceding code, we can see the following:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的代码中显示的数据包中，我们可以看到以下内容：
- en: In the first and second packets, the attacking machine checks whether port `22`
    on the target machine is open. After a period of time, it checks port `25` on
    the target machine.
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第一和第二个数据包中，攻击机器检查目标机器上的端口`22`是否开放。一段时间后，它检查目标机器上的端口`25`。
- en: In the third and fourth packets, the attacking machine checks whether port `25`
    on the target machine is open. After a period of time, it checks port `22` on
    the target machine.
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第三和第四个数据包中，攻击机器检查目标机器上的端口`25`是否开放。一段时间后，它检查目标机器上的端口`22`。
- en: After waiting for some time, as there is still no response from the target machine,
    Nmap concludes that those two ports are open or filtered.
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等待一段时间后，由于目标机器仍未响应，Nmap得出结论认为这两个端口是开放的或被过滤的。
- en: Nmap output options
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap输出选项
- en: The Nmap result can be saved to an external file. This option is useful if you
    want to process Nmap result with other tools. Even if you save the output to a
    file, Nmap still displays the result on the screen.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap的结果可以保存到外部文件。如果您想要使用其他工具处理Nmap结果，此选项非常有用。即使将输出保存到文件，Nmap仍会在屏幕上显示结果。
- en: 'Nmap supports several output formats, as follows:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap支持几种输出格式，如下所示：
- en: '**Interactive output**: This is a default output format, and the result is
    sent to the standard output.'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交互式输出**：这是默认的输出格式，结果发送到标准输出。'
- en: '**Normal output (**`-oN`**)**: This format is similar to the interactive output,
    but it doesn''t include the runtime information and warnings.'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正常输出（**`-oN`**）**：此格式类似于交互式输出，但不包括运行时信息和警告。'
- en: '**XML output (**`-oX`**)**: This format can be converted to an HTML format,
    parsed by the Nmap graphical user interface (GUI), or imported to the database.
    We suggest you use this output format as much as you can.'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**XML输出（**`-oX`**）**：此格式可以转换为HTML格式，由Nmap图形用户界面（GUI）解析，或导入到数据库。我们建议您尽可能使用此输出格式。'
- en: '**Grepable output (**`-oG`**)**: This format is deprecated, but it is still
    quite popular. Grepable output consists of comments (lines starting with a pound
    sign (`#`)) and target lines. A target line includes a combination of six labeled
    fields that are separated by tabs and followed by a colon. The fields are `Host`,
    `Ports`, `Protocols`, `Ignored State`, `OS`, `Seq Index`, `IP ID Seq`, and `Status`.
    We sometimes use this output if we want to process the Nmap output using the UNIX
    commands, such as `grep` and `awk`.'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Grepable输出（`-oG`）：此格式已被弃用，但仍然相当受欢迎。Grepable输出包括注释（以井号（`#`）开头的行）和目标行。目标行包括六个标记字段的组合，这些字段由制表符分隔，并在冒号后面。字段是`Host`、`Ports`、`Protocols`、`Ignored
    State`、`OS`、`Seq Index`、`IP ID Seq`和`Status`。如果我们想要使用UNIX命令（如`grep`和`awk`）处理Nmap输出，有时会使用此输出。
- en: You can use the `-oA` option to save Nmap results in the three formats at once
    (normal, XML, and grepable).
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`-oA`选项一次保存Nmap结果为三种格式（正常、XML和grepable）。
- en: 'To save a scan result to an XML file (`myscan.xml`), use the following command:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 要将扫描结果保存到XML文件（`myscan.xml`），请使用以下命令：
- en: '[PRE34]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The following is a snippet of the XML file:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是XML文件的片段：
- en: '[PRE35]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'For brevity purposes, a number of the ports have been removed from the previous
    snippet. In the XML output, you will see each port that Nmap scans against. The
    following shows each of the ports being scanned separately and what the response
    is. Again, for brevity''s sake, all of the ports have not been included:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 出于简洁起见，上面的片段中删除了一些端口。在XML输出中，您将看到Nmap针对每个端口进行扫描。以下显示了每个被单独扫描的端口及其响应。同样，出于简洁起见，未包括所有端口：
- en: '[PRE36]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The XML output is a bit daunting to look at. To make it easier, you can convert
    the Nmap XML file to HTML. This allows you to have clean-looking output for reporting
    purposes, as some of the non-technical personnel you may report to may not be
    used to viewing raw outputs. To convert the XML file, you can use the `xsltproc`
    program. The following command is used to convert the XML file to an HTML file:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: XML输出有点令人生畏。为了使其更容易，您可以将Nmap XML文件转换为HTML。这样，您可以获得干净的输出以供报告使用，因为您可能向非技术人员报告，他们可能不习惯查看原始输出。要转换XML文件，您可以使用`xsltproc`程序。以下命令用于将XML文件转换为HTML文件：
- en: '[PRE37]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The following is a part of the HTML report, as displayed by the Firefox ESR
    browser included in Kali Linux:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是HTML报告的一部分，由Kali Linux中包含的Firefox ESR浏览器显示：
- en: '![](img/85f43d2b-f099-4327-8fec-0994fc3f867c.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![](img/85f43d2b-f099-4327-8fec-0994fc3f867c.png)'
- en: 'If you want to process the Nmap XML output to your liking, there are several
    programming language generic XML libraries that you can use for this purpose.
    Also, there are several libraries specifically developed to work with an Nmap
    output:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要根据自己的喜好处理Nmap XML输出，有几个通用的编程语言XML库可供您使用。此外，还有几个专门开发用于处理Nmap输出的库：
- en: '**Perl**: Nmap-Parser ([http://search.cpan.org/dist/Nmap-Parser/](http://search.cpan.org/dist/Nmap-Parser/))'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Perl：Nmap-Parser（[http://search.cpan.org/dist/Nmap-Parser/](http://search.cpan.org/dist/Nmap-Parser/)）
- en: '**Python**: python-nmap ([http://xael.org/norman/python/python-nmap/](http://xael.org/norman/python/python-nmap/))'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python：python-nmap（[http://xael.org/norman/python/python-nmap/](http://xael.org/norman/python/python-nmap/)）
- en: '**Ruby**: Ruby Nmap ([http://rubynmap.sourceforge.net/](http://rubynmap.sourceforge.net/))'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ruby：Ruby Nmap（[http://rubynmap.sourceforge.net/](http://rubynmap.sourceforge.net/)）
- en: '**PowerShell**: PowerShell script to parse Nmap XML output ([http://www.sans.org/windows-security/2009/06/11/powershell-script-to-parse-nmap-xml-output](http://www.sans.org/windows-security/2009/06/11/powershell-script-to-parse-nmap-xml-output))'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell：用于解析Nmap XML输出的PowerShell脚本（[http://www.sans.org/windows-security/2009/06/11/powershell-script-to-parse-nmap-xml-output](http://www.sans.org/windows-security/2009/06/11/powershell-script-to-parse-nmap-xml-output)）
- en: Nmap timing options
  id: totrans-354
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap时间选项
- en: 'Nmap comes with six timing modes that you can set with options (`-T`):'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap配有六种定时模式，您可以使用选项（`-T`）进行设置：
- en: '`paranoid (0)`: In this timing mode, a packet is sent every five minutes. The
    packets are sent serially. This mode is useful for avoiding IDS detection.'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`paranoid (0)`: 在此时间模式下，每五分钟发送一个数据包。数据包是串行发送的。此模式可用于避免IDS检测。'
- en: '`sneaky (1)`: This mode sends a packet every 15 seconds, and there are no packets
    sent in parallel.'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sneaky (1)`: 此模式每15秒发送一个数据包，没有并行发送数据包。'
- en: '`polite (2)`: This mode sends a packet every 0.4 seconds, and there is no parallel
    transmission.'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polite (2)`: 此模式每0.4秒发送一个数据包，没有并行传输。'
- en: '`normal (3)`: This mode sends multiple packets to multiple targets simultaneously.
    This is the default timing mode used by Nmap. It balances between time and network
    load.'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`normal (3)`: 此模式将多个数据包同时发送到多个目标。这是Nmap使用的默认时间模式。它在时间和网络负载之间平衡。'
- en: '`aggressive (4)`: Nmap will scan a given host for only five minutes before
    moving on to the next target. Nmap will not wait more than 1.25 seconds for a
    response.'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aggressive (4)`: Nmap将在移动到下一个目标之前仅扫描给定主机5分钟。Nmap不会等待超过1.25秒的响应。'
- en: '`insane (5)`: In this mode, Nmap will scan a given host for only 75 seconds
    before moving on to the the next target. Nmap will not wait for more than 0.3
    seconds for a response.'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`insane (5)`: 在此模式下，Nmap将在移动到下一个目标之前仅扫描给定主机75秒。Nmap不会等待超过0.3秒的响应。'
- en: In our experience, the default timing mode usually works well unless you want
    to have a stealthier or faster scan.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们的经验，默认的定时模式通常效果很好，除非您想要进行更隐秘或更快速的扫描。
- en: Useful Nmap options
  id: totrans-363
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有用的Nmap选项
- en: In this section, we will discuss several Nmap options that are quite useful
    when doing a penetration-testing job.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论在进行渗透测试工作时非常有用的几个Nmap选项。
- en: Service version detection
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务版本检测
- en: Nmap can also be asked to check the service version when doing port scanning.
    This information is very useful when you perform the vulnerability-identification
    process later on.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行端口扫描时，也可以要求Nmap检查服务版本。在进行后续的漏洞识别过程时，此信息非常有用。
- en: To use this feature, give Nmap the `-sV` option.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此功能，请给Nmap添加`-sV`选项。
- en: 'The following is an example for this feature''s usage. We want to find the
    software version used on port `22`:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此功能用法的示例。我们想要找到端口`22`上使用的软件版本：
- en: '[PRE38]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The following is the result of this command:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此命令的结果：
- en: '![](img/a839fe05-ccce-47e3-88f5-6a440c1a7a6b.png)'
  id: totrans-371
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a839fe05-ccce-47e3-88f5-6a440c1a7a6b.png)'
- en: From the preceding information, we know that on port `22` there is an SSH service
    using the `OpenSSH` software version 4.7p1, and the SSH protocol is `2.0`.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述信息，我们知道端口`22`上有一个使用`OpenSSH`软件版本4.7p1的SSH服务，SSH协议是`2.0`。
- en: Operating system detection
  id: totrans-373
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作系统检测
- en: Nmap can also be asked to check the operating system used on the target machine.
    This information is very useful when you perform the vulnerability-identification
    process later on.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap还可以查询目标机器使用的操作系统。在进行后续的漏洞识别过程中，这些信息非常有用。
- en: To use this feature, give Nmap the `-O` option.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此功能，请给Nmap加上`-O`选项。
- en: 'The following is an example of this feature''s usage. We want to find the operating
    system used on the target machine:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此功能用法的示例。我们想要找到目标机器上使用的操作系统：
- en: '[PRE39]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The following command lines are the result of this command:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令行是此命令的结果：
- en: '![](img/16d75c31-92c3-4c68-9052-bf0d2a833834.png)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
  zh: '![](img/16d75c31-92c3-4c68-9052-bf0d2a833834.png)'
- en: Based on the preceding information, we can see that the remote system is a Linux
    operating system using Linux kernel versions `2.6.9 - 2.6.33`. If there are vulnerabilities
    on those Linux kernels, we can exploit them.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上述信息，我们可以看到远程系统是使用Linux内核版本`2.6.9 - 2.6.33`的Linux操作系统。如果这些Linux内核存在漏洞，我们可以利用它们。
- en: Aggressive scan
  id: totrans-381
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Aggressive scan
- en: 'If you use the `-A` option, it will enable the following probe:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用`-A`选项，它将启用以下探测：
- en: Service-version detection (`-sV`)
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务版本检测（`-sV`）
- en: Operating-system detection (`-O`)
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统检测（`-O`）
- en: Script scanning (`-sC`)
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本扫描（`-sC`）
- en: Traceroute (`--traceroute`)
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Traceroute（`--traceroute`）
- en: 'It may take some time for this scan type to finish. The following command can
    be used for aggressive scanning:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 这种扫描类型可能需要一些时间才能完成。以下命令可用于进行主动扫描：
- en: '[PRE40]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The following is the abridged result of this command:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此命令的摘要结果：
- en: '![](img/9bbd9901-bb24-40b6-af62-ed66cb8ab16b.png)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bbd9901-bb24-40b6-af62-ed66cb8ab16b.png)'
- en: 'In addition to the detailed information about ports, services, and the certificates,
    further down the result we get detailed information concerning the Apache Webserver
    configured on this target machine:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 除了有关端口、服务和证书的详细信息之外，我们还可以在结果的后面获得有关配置在目标机器上的Apache Web服务器的详细信息：
- en: '![](img/1ac74298-c7a0-422d-985e-31a6c59ef639.png)'
  id: totrans-392
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1ac74298-c7a0-422d-985e-31a6c59ef639.png)'
- en: Nmap for scanning the IPv6 target
  id: totrans-393
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于扫描IPv6目标的Nmap
- en: In the previous section, we mentioned that you can specify an IPv6 target in
    Nmap. In this section, we will discuss this in depth.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们提到您可以在Nmap中指定IPv6目标。在本节中，我们将深入讨论这个问题。
- en: 'For this scenario, the following is the IPv6 address of each machine involved:'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种情况，每台机器的IPv6地址如下：
- en: '[PRE41]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'To scan an IPv6 target, just use the `-6` option and define the IPv6 target
    address. Currently, you can only specify individual IPv6 addresses. The following
    is a sample command to port scan the IPv6 address:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 要扫描IPv6目标，只需使用`-6`选项并定义IPv6目标地址。目前，您只能指定单个IPv6地址。以下是扫描IPv6地址的示例命令：
- en: '[PRE42]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The following is the result of this command:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此命令的结果：
- en: '![](img/f52fa5e0-9c8d-4aa1-b95a-ba9681002f98.png)'
  id: totrans-400
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f52fa5e0-9c8d-4aa1-b95a-ba9681002f98.png)'
- en: We can see that, in IPv6 testing, the number of ports open is less than in the
    IPv4 testing. This may be caused by services on the remote machine that do not
    support IPv6 yet.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在IPv6测试中，开放的端口数量比IPv4测试中少。这可能是由于远程机器上的服务尚不支持IPv6。
- en: Scanning with Netdiscover
  id: totrans-402
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Netdiscover进行扫描
- en: Netdiscover is another discovery tool, and is built into Kali Linux 2018.2\.
    Currently at the .03-pre-beta7 version and written by Jaime Penalba, Netdiscover
    can reform reconnaissance and discovery on both wireless and switched networks
    using ARP requests.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: Netdiscover是另一个发现工具，内置于Kali Linux 2018.2中。目前处于.03-pre-beta7版本，由Jaime Penalba编写，Netdiscover可以使用ARP请求对无线和交换网络进行侦察和发现。
- en: To launch Netdiscover, type `netdiscover –h` to view the usage options. (Should
    you only type the `netdiscover` command by itself, Netdiscover will launch a default
    scan.)
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Netdiscover，请键入`netdiscover -h`以查看使用选项。（如果只键入`netdiscover`命令，Netdiscover将启动默认扫描。）
- en: '![](img/8fdecc99-2a53-4356-890a-bf3081d6490a.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8fdecc99-2a53-4356-890a-bf3081d6490a.jpg)'
- en: 'To scan a range of IPs , type `netdiscover –r` followed by the IP range. For
    this example, we''ve used `netdiscover –r 10.10.0.0/24`. You may also choose to
    do a passive scan using the `netdiscover –p` option:'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 要扫描一系列IP地址，请键入`netdiscover -r`，然后输入IP范围。在本例中，我们使用了`netdiscover -r 10.10.0.0/24`。您还可以选择使用`netdiscover
    -p`选项进行被动扫描。
- en: '![](img/26f29542-14fe-47d3-aee9-3a95e00f644e.jpg)'
  id: totrans-407
  prefs: []
  type: TYPE_IMG
  zh: '![](img/26f29542-14fe-47d3-aee9-3a95e00f644e.jpg)'
- en: In the preceding scan, we can see that the discovery includes Dell and HP workstations,
    Cisco devices, and even Xerox multi-function devices.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的扫描中，我们可以看到发现了Dell和HP工作站、思科设备，甚至还有施乐多功能设备。
- en: The Nmap scripting engine
  id: totrans-409
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nmap脚本引擎
- en: Although Nmap itself has already become a powerful network-exploration tool,
    with the additional scripting engine capabilities, Nmap becomes a much more powerful
    tool. With the **Nmap Scripting Engine** (**NSE**), users can automate various
    networking tasks, such as checking for new security vulnerabilities in applications,
    detecting application versions, or other capabilities that are not available in
    Nmap. Nmap has already included various NSE scripts in its package, but users
    can also write their own scripts to suit their needs.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Nmap本身已经成为一个强大的网络探索工具，但通过额外的脚本引擎功能，Nmap变得更加强大。使用**Nmap脚本引擎**（**NSE**），用户可以自动化各种网络任务，例如检查应用程序中的新安全漏洞、检测应用程序版本或其他Nmap中不可用的功能。Nmap已经在其软件包中包含了各种NSE脚本，但用户也可以编写自己的脚本以满足其需求。
- en: 'The NSE scripts utilize the Lua programming language ([http://www.lua.org](http://www.lua.org))
    embedded in Nmap, and, currently, the NSE scripts are categorized as follows:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: NSE脚本利用了嵌入在Nmap中的Lua编程语言（[http://www.lua.org](http://www.lua.org)），目前，NSE脚本分为以下几类：
- en: '`auth`: The scripts in this category are used to find the authentication set
    on the target system; for example, by using the brute-force technique.'
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auth`：此类别中的脚本用于查找目标系统上的身份验证设置；例如，通过使用暴力破解技术。'
- en: '`default`: These scripts are run using the `-sC` or `-A` options. A script
    will be grouped in the default category if it satisfies the following requirements:'
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default`：这些脚本使用`-sC`或`-A`选项运行。如果脚本满足以下要求，脚本将被分组到默认类别中：'
- en: It must be fast
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它必须快速
- en: It needs to produce valuable and actionable information
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它需要产生有价值且可操作的信息
- en: Its output needs to be verbose and concise
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的输出需要详细而简洁
- en: It must be reliable
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它必须是可靠的
- en: It should not be intrusive of the target system
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不应对目标系统造成侵入
- en: It should divulge information to the third party
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它应该向第三方泄露信息
- en: '`discovery`: These scripts are used to find the network.'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discovery`：这些脚本用于查找网络。'
- en: '**DoS**: The scripts in this category may cause **Denial of Service** (**DoS**)
    on the target system. Please use them carefully.'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DoS**：此类别中的脚本可能会在目标系统上引起**拒绝服务**（**DoS**）。请谨慎使用。'
- en: '`exploit`: These scripts will exploit security vulnerabilities on the target
    system. The penetration tester needs to have permission to run these scripts on
    the target system.'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exploit`：这些脚本将利用目标系统上的安全漏洞。渗透测试人员需要获得在目标系统上运行这些脚本的权限。'
- en: '`external`: These scripts may divulge information to third parties.'
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`external`：这些脚本可能泄露信息给第三方。'
- en: '`fuzzer`: These scripts are used to do fuzzing on the target system.'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fuzzer`：这些脚本用于对目标系统进行模糊测试。'
- en: '`intrusive`: These scripts may crash the target system or use all of the target
    system''s resources.'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`intrusive`：这些脚本可能会使目标系统崩溃或使用目标系统的所有资源。'
- en: '`malware`: These scripts will check for the existence of malware or backdoors
    on the target system.'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`malware`：这些脚本将检查目标系统上恶意软件或后门的存在。'
- en: '`safe`: These scripts are not supposed to cause a service crash, **Denial of
    Service** (**DoS**), or exploit the target system.'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`safe`：这些脚本不应该导致服务崩溃，**拒绝服务**（**DoS**）或利用目标系统。'
- en: '`version`: These scripts are used with the version detection option (`-sV`)
    to carry out advanced detection for the service on the target system.'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`version`：这些脚本与版本检测选项（`-sV`）一起使用，以对目标系统上的服务进行高级检测。'
- en: '`vuln`: These scripts are used to check for security vulnerabilities on the
    target system.'
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vuln`：这些脚本用于检查目标系统的安全漏洞。'
- en: In Kali Linux, these Nmap scripts are located in `the /usr/share/nmap/scripts`
    directories, and, currently, Nmap Version 7.70, which is included with Kali Linux,
    contains 588 scripts.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kali Linux中，这些Nmap脚本位于`/usr/share/nmap/scripts`目录中，目前，包含在Kali Linux中的Nmap版本7.70包含588个脚本。
- en: 'There are several command-line arguments that can be used to call NSE, as follows:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个命令行参数可用于调用NSE，如下所示：
- en: '`-sC or --script=default`: This performs a scan using default scripts.'
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-sC或--script=default`：这将使用默认脚本执行扫描。'
- en: '`--script <filename> | <category> | <directories>`: This performs a scan using
    the script defined in filenames, categories, or directories.'
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--script <filename> | <category> | <directories>`：这将使用文件名、类别或目录中定义的脚本执行扫描。'
- en: '`--script-args <args>`: This provides a script argument. An example of these
    arguments is the username or the password if you use the `auth` category.'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--script-args <args>`：这提供了一个脚本参数。这些参数的一个示例是用户名或密码，如果您使用`auth`类别。'
- en: 'To port scan the `172.16.43.156` host and utilize the default script categories,
    we can give the following command:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 对于端口扫描`172.16.43.156`主机并利用默认脚本类别，我们可以给出以下命令：
- en: '[PRE43]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The following is an abridged result:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个缩短的结果：
- en: '[PRE44]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: From the preceding information, you can see that the Nmap result is now more
    thorough. This is because it utilizes the NSE default scripts.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的信息中，您可以看到Nmap结果现在更加彻底。这是因为它利用了NSE默认脚本。
- en: 'However, if you only want specific information on the target system, you can
    use the script by itself. If we want to collect information about the HTTP server,
    we can use several HTTP scripts in NSE, such as `http-enum`, `http-headers`, `http-methods`,
    and `http-php-version`, using the following command:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果您只想获取有关目标系统的特定信息，可以单独使用脚本。如果我们想收集有关HTTP服务器的信息，可以使用NSE中的几个HTTP脚本，例如`http-enum`，`http-headers`，`http-methods`和`http-php-version`，使用以下命令：
- en: '[PRE45]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The following is the result of this command:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此命令的结果：
- en: '![](img/ce668a8e-e17b-439b-948a-a521cfadb95f.png)'
  id: totrans-443
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ce668a8e-e17b-439b-948a-a521cfadb95f.png)'
- en: 'By utilizing four NSE scripts related to HTTP, we gain more information regarding
    the target system''s web server:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用与HTTP相关的四个NSE脚本，我们可以获得有关目标系统Web服务器的更多信息：
- en: 'There are several interesting directories to check: `Tikiwiki`, `test`, and
    `phpMyAdmin`'
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有几个有趣的目录要检查：`Tikiwiki`，`test`和`phpMyAdmin`
- en: 'We have an interesting file: `phpinfo.php`'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有一个有趣的文件：`phpinfo.php`
- en: We know the server is using PHP version `5.2.3 -5.2.5`
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们知道服务器正在使用PHP版本`5.2.3 -5.2.5`
- en: After discussing Nmap, let's discuss another port-scanner tool.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论了Nmap之后，让我们讨论另一个端口扫描工具。
- en: There is a useful NSE script called Nmap NSE Vulscan ([http://www.computec.ch/mruef/software/nmap_nse_vulscan-1.0.tar.gz](http://www.computec.ch/mruef/software/nmap_nse_vulscan-1.0.tar.gz))
    that can help you to map the version information you obtain from a target machine
    with a vulnerability database, such as CVE ([http://cve.mitre.org/](http://cve.mitre.org/)),
    VulDB ([https://vuldb.com/?](https://vuldb.com/?)), SecurityTracker ([http://securitytracker.com/](http://securitytracker.com/)),
    and SecurityFocus ([http://www.securityfocus.com/](http://www.securityfocus.com/)).
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个有用的NSE脚本称为Nmap NSE Vulscan（[http://www.computec.ch/mruef/software/nmap_nse_vulscan-1.0.tar.gz](http://www.computec.ch/mruef/software/nmap_nse_vulscan-1.0.tar.gz)），它可以帮助您将从目标机器获取的版本信息与CVE（[http://cve.mitre.org/](http://cve.mitre.org/)）、VulDB（[https://vuldb.com/?](https://vuldb.com/?)）、SecurityTracker（[http://securitytracker.com/](http://securitytracker.com/)）和SecurityFocus（[http://www.securityfocus.com/](http://www.securityfocus.com/)）等漏洞数据库进行映射。
- en: 'The following screenshot shows the sample result of the CVE script:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了CVE脚本的示例结果：
- en: '![](img/b42f504b-c463-4634-b76c-123e03fa979d.png)'
  id: totrans-451
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b42f504b-c463-4634-b76c-123e03fa979d.png)'
- en: Nmap options for firewall/IDS evasion
  id: totrans-452
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防火墙/IDS规避的Nmap选项
- en: 'During penetration testing, you may encounter a system that is using a firewall
    and an IDS to protect the system. If you just use the default settings, your action
    may get detected or you may not get the correct result from Nmap. The following
    options may be used to help you evade the firewall/IDS:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试期间，您可能会遇到使用防火墙和IDS保护系统的系统。如果您只使用默认设置，您的操作可能会被检测到，或者您可能无法从Nmap获得正确的结果。以下选项可用于帮助您规避防火墙/IDS：
- en: '`-f` **(fragment packets)**: The purpose of this option is to make it harder
    to detect the packets. By specifying this option once, Nmap will split the packet
    into 8 bytes or fewer after the IP header.'
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: -f **（分片数据包）**：此选项的目的是使数据包更难被检测到。通过指定此选项一次，Nmap将在IP头之后将数据包分割为8字节或更少。
- en: '`--mtu`: With this option, you can specify your own packet-size fragmentation.
    The **Maximum Transmission Unit** (**MTU**) must be a multiple of eight, or Nmap
    will give an error and exit.'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --mtu：使用此选项，您可以指定自己的数据包大小分片。**最大传输单元**（**MTU**）必须是8的倍数，否则Nmap将出错并退出。
- en: '`-D` **(decoy)**: By using this option, Nmap will send some of the probes from
    the spoofed IP addresses specified by the user. The idea is to mask the true IP
    address of the user in the log files. The user IP address is still in the logs.
    You can use `RND` to generate a random IP address, or `RND:number` to generate
    the `<number>` IP address. The hosts you use for decoys should be up, or you will
    flood the target. Also remember that, by using many decoys, you can cause network
    congestion, so you may want to avoid that, especially if you are scanning your
    client''s network.'
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: -D **（诱饵）**：通过使用此选项，Nmap将从用户指定的欺骗IP地址发送一些探测。其想法是掩盖用户在日志文件中的真实IP地址。用户IP地址仍然在日志中。您可以使用`RND`生成随机IP地址，或使用`RND：number`生成`<number>`个IP地址。您用于诱饵的主机应该是活动的，否则将会淹没目标。还要记住，使用许多诱饵可能会导致网络拥塞，因此您可能希望避免这种情况，特别是在扫描客户网络时。
- en: '`--source-port <portnumber> or -g (spoof source port)`: This option will be
    useful if the firewall is set up to allow all incoming traffic that comes from
    a specific port.'
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --source-port <portnumber>或-g（欺骗源端口）：如果防火墙设置为允许来自特定端口的所有传入流量，此选项将非常有用。
- en: '`--data-length`: This option is used to change the default data length sent
    by Nmap in order to avoid being detected as Nmap scans.'
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --data-length：此选项用于更改Nmap发送的默认数据长度，以避免被检测为Nmap扫描。
- en: '`--max-parallelism`: This option is usually set to one in order to instruct
    Nmap to send no more than one probe at a time to the target host.'
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --max-parallelism：通常将此选项设置为1，以指示Nmap一次发送不超过一个探测到目标主机。
- en: '`--scan-delay <time>`: This option can be used to evade an IDS/IPS that uses
    a threshold to detect port-scanning activity.'
  id: totrans-460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --scan-delay <time>：此选项可用于规避使用阈值检测端口扫描活动的IDS/IPS。
- en: You may also experiment with other Nmap options for evasion, as explained in
    the Nmap manual ([http://nmap.org/book/man-bypass-firewalls-ids.html](http://nmap.org/book/man-bypass-firewalls-ids.html)).
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以尝试其他Nmap规避选项，如Nmap手册中所述（[http://nmap.org/book/man-bypass-firewalls-ids.html](http://nmap.org/book/man-bypass-firewalls-ids.html)）。
- en: Automated scanning with Striker
  id: totrans-462
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Striker进行自动扫描
- en: Striker is an automated scanning and deep information-gathering tool built into
    Python, which performs port/service and vulnerability scanning. Much like the
    automated tools we used in the previous chapter (Red_Hawk and Devploit), Striker
    is simple to install and use.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: Striker是一个内置Python的自动扫描和深度信息收集工具，用于执行端口/服务和漏洞扫描。与我们在上一章中使用的自动化工具（Red_Hawk和Devploit）类似，Striker安装和使用都很简单。
- en: 'We must first download Striker. To do so, open a Terminal and change to the
    `Desktop` (or directory of your choice) by typing the following:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须首先下载Striker。为此，请打开终端并输入以下内容更改为`Desktop`（或您选择的目录）：
- en: '[PRE46]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Enter the following to clone Striker to your desktop or (or directory of your
    choice):'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下内容将Striker克隆到您的桌面或（或您选择的目录）：
- en: '[PRE47]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '![](img/43032ee7-6c3c-42c7-a787-6d2f322fd574.jpg)'
  id: totrans-468
  prefs: []
  type: TYPE_IMG
  zh: '![](img/43032ee7-6c3c-42c7-a787-6d2f322fd574.jpg)'
- en: Once the download has completed successfully (with objects and deltas at 100%,
    as seen in the previous screenshot), change to the Striker directory by typing
    `cd Striker` and then using the `ls` command to list the files within the Striker
    folder. You should see five files listed, including `requirements.txt` and `striker.py`.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦成功下载完成（如前一个屏幕截图中所示，对象和增量均为100%），输入`cd Striker`，然后使用`ls`命令列出Striker文件夹中的文件。您应该看到列出了五个文件，包括`requirements.txt`和`striker.py`。
- en: '![](img/61a0865f-64fa-4da7-abdd-96f580ac3100.jpg)'
  id: totrans-470
  prefs: []
  type: TYPE_IMG
  zh: '![](img/61a0865f-64fa-4da7-abdd-96f580ac3100.jpg)'
- en: For Striker to run without errors, we must first use the package management
    installer (`pip`) to ensure that all of the requirements necessary to run Striker
    are met, including the Whois module (which is necessary for information gathering).
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使Striker无错误地运行，我们必须首先使用软件包管理安装程序（`pip`）来确保满足运行Striker所需的所有要求，包括Whois模块（这对于信息收集是必要的）。
- en: 'To do so, we run the following two commands, `pip install -r requirements.txt`
    followed by `pip install whois`:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们运行以下两个命令，`pip install -r requirements.txt`，然后是`pip install whois`：
- en: '![](img/5cc78dab-f95c-413c-837a-25ccc92a6469.jpg)'
  id: totrans-473
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5cc78dab-f95c-413c-837a-25ccc92a6469.jpg)'
- en: 'Once all requirements have been installed successfully, type `pip install whois`
    (even though the requirement may have already been installed):'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 安装成功所有要求后，输入`pip install whois`（即使可能已经安装了要求）：
- en: '![](img/9d78d1aa-0b15-453d-9588-499324b0244d.jpg)'
  id: totrans-475
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9d78d1aa-0b15-453d-9588-499324b0244d.jpg)'
- en: 'Finally, to run Striker, we type `python striker.py`:'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，要运行Striker，我们输入`python striker.py`：
- en: '![](img/50b626aa-534b-42a0-bdf0-5ab1b39da866.jpg)'
  id: totrans-477
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50b626aa-534b-42a0-bdf0-5ab1b39da866.jpg)'
- en: The Striker GUI will now run. As a fully automated tool, all that is required
    from this point onward is the target IP or URL.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将运行Striker GUI。作为一个完全自动化的工具，从这一点开始所需的只是目标IP或URL。
- en: 'For this example, we have used the [http://scanme.nmap.org/](http://scanme.nmap.org/)
    website that is used in the Nmap scanning section. Compare the results of the
    scan with those found by Nmap earlier:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们使用了用于Nmap扫描部分的[http://scanme.nmap.org/](http://scanme.nmap.org/)网站。将扫描结果与Nmap之前发现的结果进行比较：
- en: '![](img/f527c7bc-f3e1-492c-95e1-dc8e358f1afe.jpg)'
  id: totrans-480
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f527c7bc-f3e1-492c-95e1-dc8e358f1afe.jpg)'
- en: 'Note that Striker also found DNS record information as well as two email addresses,
    as seen in the following screenshot:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Striker还发现了DNS记录信息以及两个电子邮件地址，如下截图所示：
- en: '![](img/3eda44f2-6431-47f2-95b2-749c267e8c36.jpg)'
  id: totrans-482
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3eda44f2-6431-47f2-95b2-749c267e8c36.jpg)'
- en: Anonymity using Nipe
  id: totrans-483
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Nipe进行匿名
- en: Nipe is a tool that utilizes the Tor network as a user's default gateway, thereby
    routing all traffic through the Tor network, which is commonly used to offer some
    level of privacy and anonymity. It should be noted that, when using a tool for
    privacy and anonymity, masking the IP address alone will not offer anonymity,
    as DNS information may still be available. Both IP and DNS information must be
    masked.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: Nipe是一种利用Tor网络作为用户默认网关的工具，从而通过Tor网络路由所有流量，通常用于提供一定程度的隐私和匿名性。需要注意的是，当使用隐私和匿名性工具时，仅掩盖IP地址将不会提供匿名性，因为DNS信息可能仍然可用。必须同时掩盖IP和DNS信息。
- en: 'We first install Nipe by cloning it to our machine on the desktop or directory
    of your choice. Open a terminal and change directories to the Desktop (or directory
    of your choice):'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先通过将Nipe克隆到我们的计算机的桌面或您选择的目录来安装Nipe。打开终端并更改目录到桌面（或您选择的目录）：
- en: '[PRE48]'
  id: totrans-486
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Clone Nipe to your machine by typing the following:'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 通过输入以下内容将Nipe克隆到您的计算机：
- en: '[PRE49]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '![](img/523e0fd8-b899-464c-9039-6b762b5234ee.jpg)'
  id: totrans-489
  prefs: []
  type: TYPE_IMG
  zh: '![](img/523e0fd8-b899-464c-9039-6b762b5234ee.jpg)'
- en: 'Change to the Nipe directory by typing `cd Nipe`, and then list the contents
    of the directory by typing `ls`:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 通过输入`cd Nipe`更改到Nipe目录，然后通过输入`ls`列出目录内容：
- en: '![](img/c4a53e4e-c19c-4fe8-8e06-933ffb8c891a.jpg)'
  id: totrans-491
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4a53e4e-c19c-4fe8-8e06-933ffb8c891a.jpg)'
- en: 'To install Nipe, type `cpan install Switch JSON LWP::UserAgent`. When prompted
    to perform an automatic installation, press *Enter*:'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Nipe，输入`cpan install Switch JSON LWP::UserAgent`。在提示进行自动安装时，按*Enter*：
- en: '![](img/77d30371-85ab-4ea6-9b5a-ca954dcab123.jpg)'
  id: totrans-493
  prefs: []
  type: TYPE_IMG
  zh: '![](img/77d30371-85ab-4ea6-9b5a-ca954dcab123.jpg)'
- en: 'To install Nipe dependencies, run the command, `perl nipe.pl install`:'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Nipe依赖项，运行命令`perl nipe.pl install`：
- en: '![](img/861f0543-4641-44e5-bc9f-534b131266de.jpg)'
  id: totrans-495
  prefs: []
  type: TYPE_IMG
  zh: '![](img/861f0543-4641-44e5-bc9f-534b131266de.jpg)'
- en: Before starting Nipe, check your public IP address and DNS IP, and compare them
    to the given IPs after starting Nipe. Some examples of websites you can use to
    view your public IP are [www.whatsmyipaddress.com](http://www.whatsmyipaddress.com)
    and [www.dnsleak.com](http://www.dnsleak.com).
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动Nipe之前，检查您的公共IP地址和DNS IP，并在启动Nipe后将它们与给定的IP进行比较。您可以使用的一些查看公共IP的网站示例是[www.whatsmyipaddress.com](http://www.whatsmyipaddress.com)和[www.dnsleak.com](http://www.dnsleak.com)。
- en: 'To start the Nipe service type `perl nipe.pl start`:'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Nipe服务，请输入`perl nipe.pl start`：
- en: '![](img/febcafd0-2fb9-4b59-872f-34bd0941ec02.jpg)'
  id: totrans-498
  prefs: []
  type: TYPE_IMG
  zh: '![](img/febcafd0-2fb9-4b59-872f-34bd0941ec02.jpg)'
- en: You can also restart the service to mask your IP to different regions by typing
    `perl nipe.pl restart`. All commands used for installing and using the Nipe tool
    can also be found on its GitHub page at [https://github.com/GouveaHeitor/nipe](https://github.com/GouveaHeitor/nipe).
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过输入`perl nipe.pl restart`重新启动服务，以将您的IP掩盖到不同的地区。安装和使用Nipe工具的所有命令也可以在其GitHub页面上找到[https://github.com/GouveaHeitor/nipe](https://github.com/GouveaHeitor/nipe)。
- en: Use the IP and DNS verification websites previously listed to check that your
    settings have indeed changed.
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 使用先前列出的IP和DNS验证网站来检查您的设置是否确实已更改。
- en: Summary
  id: totrans-501
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we discussed the target-discovery process. We started by discussing
    the purposes of target discovery: identifying the target machine and finding out
    the operating system used by the target machine. Then, we continued with the tools
    included with Kali Linux and GitHub that can be used for discovering and identifying
    target machines.'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了目标发现过程。我们首先讨论了目标发现的目的：识别目标机器并找出目标机器使用的操作系统。然后，我们继续使用Kali Linux和GitHub提供的工具，这些工具可用于发现和识别目标机器。
- en: We discussed several tools for host discovery and scanning, such as `ping`,
    Nmap, `p0f`, and Striker, and also looked at masking your IP and DNS using Nipe to
    evade detection.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了用于主机发现和扫描的几种工具，如`ping`，Nmap，`p0f`和Striker，并且还研究了使用Nipe来掩盖您的IP和DNS以逃避检测。
- en: In the next chapter, we will talk about vulnerability scanning and the tools
    that can be used in Kali Linux for this purpose.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论漏洞扫描以及在Kali Linux中用于此目的的工具。
- en: Questions
  id: totrans-505
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which tool can be used to send ICMP echo requests to several hosts at once?
    (`fping`)
  id: totrans-506
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个工具可以用于一次向多个主机发送ICMP回显请求？（`fping`）
- en: How many scripts are available in Nmap 7.7? (588 scripts)
  id: totrans-507
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nmap 7.7中有多少个脚本？（588个脚本）
- en: What is the purpose of the FIN flag? (It indicates that there is no more data
    to be sent and that the connection should be terminated.)
  id: totrans-508
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: FIN标志的目的是什么？（它表示没有更多数据要发送，并且连接应该被终止。）
- en: What does a filtered port indicate? (A packet-blocking device is preventing
    the probe from reaching the target.)
  id: totrans-509
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 过滤端口表示什么？（阻止数据包的设备阻止了探测到达目标。）
- en: Which Nmap option can be used to make it harder to detect packets when evading
    firewalls and IDS? (`-f`, which is used to fragment packets)
  id: totrans-510
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在规避防火墙和IDS时，可以使用哪个Nmap选项使数据包更难被检测到？（`-f`，用于分片数据包）
- en: What is the command used to scan a range of IPs using the Netdiscover tool?
    (netdiscover `-r`)
  id: totrans-511
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Netdiscover工具扫描一系列IP的命令是什么？（netdiscover `-r`）
- en: Which option can be used in Netdiscover to run a passive scan? (`-p`)
  id: totrans-512
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Netdiscover中可以使用哪个选项来运行被动扫描？（`-p`）
- en: Which website can be used to ensure that DNS information is not being leaked?
    ([www.dnsleak.com](http://www.dnsleak.com/))
  id: totrans-513
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个网站可以用来确保DNS信息没有泄漏？（[www.dnsleak.com](http://www.dnsleak.com/)）
- en: Further Reading
  id: totrans-514
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Linux networking tools: [https://gist.github.com/miglen/70765e663c48ae0544da08c07006791f](https://gist.github.com/miglen/70765e663c48ae0544da08c07006791f)'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 'Linux网络工具: [https://gist.github.com/miglen/70765e663c48ae0544da08c07006791f](https://gist.github.com/miglen/70765e663c48ae0544da08c07006791f)'
- en: 'Nmap scripting engine: [https://nmap.org/book/nse.html](https://nmap.org/book/nse.html)'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 'Nmap脚本引擎: [https://nmap.org/book/nse.html](https://nmap.org/book/nse.html)'
- en: 'Port scanning techniques: [https://nmap.org/book/man-port-scanning-techniques.html](https://nmap.org/book/man-port-scanning-techniques.html)'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '端口扫描技术: [https://nmap.org/book/man-port-scanning-techniques.html](https://nmap.org/book/man-port-scanning-techniques.html)'
