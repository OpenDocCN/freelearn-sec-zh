- en: '*Chapter 5*: Span Me If You Can'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第5章*：如果你能做到，给我加个SPAN'
- en: In the previous chapter, we covered the importance of using open source research
    to build a profile of your client, their company, users, and technology. In this
    chapter, we are going to dive deeper down the rabbit hole and discuss out-of-band
    network monitoring. For the last few years, **intrusion detection systems** (**IDS**)
    have been dominating the industrial cybersecurity space.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讲解了如何使用开源研究来构建客户、公司、用户和技术的档案。在本章中，我们将进一步深入讨论带外网络监控。在过去几年中，**入侵检测系统**（**IDS**）一直主导着工业网络安全领域。
- en: Companies such as Security Matters (acquired by ForeScout), Indegy (bought by
    Tenable), Sentryo (bought by Cisco), CyberX (bought by Microsoft), Claroty, Nozomi
    Networks, SCADAfence, and many others have flourished. Money from **venture capital**
    (**VC**) and **investment banking** (**IB**) has been poured into the passive
    monitoring space to provide awareness about the importance of automation technology,
    and the impact it has on critical infrastructure has grown as well.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 像Security Matters（被ForeScout收购）、Indegy（被Tenable收购）、Sentryo（被Cisco收购）、CyberX（被Microsoft收购）、Claroty、Nozomi
    Networks、SCADAfence等公司蓬勃发展。来自**风险投资**（**VC**）和**投资银行**（**IB**）的资金已经注入到被动监控领域，以提高对自动化技术重要性的认识，同时它对关键基础设施的影响也在不断增加。
- en: All this technology relies on the network infrastructure to be able to either
    use a **Switch Port Analyzer** (**SPAN**) or **Test Access Point** (**TAP**) on
    the traffic and send it to the IDS technology. It is imperative to understand
    how to perform out-of-band monitoring using the aforementioned methods, and understand
    what this means during your pentest if your customer has invested in a particular
    IDS vendor.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些技术都依赖于网络基础设施，能够使用**交换端口分析仪**（**SPAN**）或**测试接入点**（**TAP**）来捕获流量并将其发送到IDS技术。理解如何使用上述方法进行带外监控非常重要，并且在渗透测试过程中，如果客户已经投资了特定的IDS供应商，了解这一点尤为关键。
- en: As we move through this chapter, we are going to review what SPAN is and how
    to mirror traffic to a port, what a TAP is and how we can utilize it in a pentesting
    engagement, and discuss the various IDS technologies that utilize SPAN in the
    industrial space and what to expect when you encounter them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾什么是SPAN以及如何将流量镜像到端口，什么是TAP以及如何在渗透测试中使用它，并讨论在工业领域中利用SPAN的各种IDS技术，以及在遇到这些技术时应如何应对。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主要内容：
- en: Installing Wireshark
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Wireshark
- en: What is SPAN and how can we configure it
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是SPAN以及如何配置它
- en: Using a TAP during an engagement
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在参与活动中使用TAP
- en: Navigating IDS security monitoring
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导航IDS安全监控
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you will need the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章所需的内容：
- en: '**TP-Link TL-SG108E Smart Switch**: This is a relatively inexpensive switch
    and allows for simple port mirroring. We will look at this to get an understanding
    of how to configure port mirroring. A TP-Link TL-SG108E Smart Switch can be found
    on Amazon ([https://www.amazon.ca/TP-LINK-TL-SG108E-8-Port-Gigabit-Switch/dp/B00JKB63D8](https://www.amazon.ca/TP-LINK-TL-SG108E-8-Port-Gigabit-Switch/dp/B00JKB63D8)).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TP-Link TL-SG108E 智能交换机**：这是一款相对便宜的交换机，支持简单的端口镜像。我们将通过它来了解如何配置端口镜像。你可以在亚马逊上找到这款TP-Link
    TL-SG108E智能交换机：[https://www.amazon.ca/TP-LINK-TL-SG108E-8-Port-Gigabit-Switch/dp/B00JKB63D8](https://www.amazon.ca/TP-LINK-TL-SG108E-8-Port-Gigabit-Switch/dp/B00JKB63D8)。'
- en: '**Throwing Star LAN TAP**: This is an inexpensive LAN TAP that we can use to
    extract network packets and then review them later. A Throwing Star LAN TAP can
    be found at: [https://www.amazon.ca/Throwing-Original-Monitoring-Ethernet-Communication/dp/B077XY2TGD/ref=sr_1_1?dchild=1&keywords=throwing+star+lan+tap&qid=1626109845&sr=8-1](https://www.amazon.ca/Throwing-Original-Monitoring-Ethernet-Communication/dp/B077XY2TGD/ref=sr_1_1?dchild=1&keywords=throwing+star+lan+tap&qid=1626109845&sr=8-1).'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Throwing Star LAN TAP**：这是一款廉价的LAN TAP，我们可以用它提取网络数据包，然后稍后进行分析。可以在以下网址找到Throwing
    Star LAN TAP：[https://www.amazon.ca/Throwing-Original-Monitoring-Ethernet-Communication/dp/B077XY2TGD/ref=sr_1_1?dchild=1&keywords=throwing+star+lan+tap&qid=1626109845&sr=8-1](https://www.amazon.ca/Throwing-Original-Monitoring-Ethernet-Communication/dp/B077XY2TGD/ref=sr_1_1?dchild=1&keywords=throwing+star+lan+tap&qid=1626109845&sr=8-1)。'
- en: 'Wireshark/TShark, which can be installed from the following link: [https://www.wireshark.org/#download](https://www.wireshark.org/#download).'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过以下链接安装Wireshark/TShark：[https://www.wireshark.org/#download](https://www.wireshark.org/#download)。
- en: Tcpdump.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tcpdump。
- en: Installing Wireshark
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Wireshark
- en: After some soulful debate, I decided to move this section to the beginning of
    this chapter. I had planned it to be in the following chapter, but after reviewing
    this, I felt that it flowed nicely with the plans ahead. That being said, let's
    jump right into it. Wireshark is the de facto tool that's used by network engineers
    and security personnel alike to monitor all the bits of data moving through the
    network. When an issue arises, the first thing the individual or team does is
    open their laptop and start up Wireshark. I cannot emphasize this enough; Wireshark
    is fundamentally one of the most important tools that is used by the security
    industry and ironically, people seldom qualify it as a security tool. Wireshark
    is an absolute must for the proverbial tool bag that you are assembling for a
    pentesting engagement.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 经过一番深思熟虑的辩论后，我决定将这一部分移到本章的开头。原本我计划将其放在下一章，但在回顾后，我觉得它与接下来的内容衔接得很好。话虽如此，还是让我们直接开始吧。Wireshark
    是网络工程师和安全人员都在使用的事实标准工具，用于监控通过网络传输的所有数据位。当出现问题时，个人或团队首先做的就是打开笔记本电脑并启动 Wireshark。我无法过分强调这一点；Wireshark
    基本上是安全行业中最重要的工具之一，具有讽刺意味的是，人们很少将它归类为安全工具。Wireshark 是你为渗透测试工作组装的工具包中的必备之物。
- en: Go to [https://www.wireshark.org/#download](https://www.wireshark.org/#download)
    to be taken to Wireshark's stable release section. At the time of writing, this
    stable release is version 3.4.4 and was released March 10, 2021\. Now, for some
    of the "Terminal junkies," "CLI connoisseurs," and "shell samurais" out there,
    or even those that may be using "Brew" on an Apple laptop or Linux distro, the
    following commands are for you.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 [https://www.wireshark.org/#download](https://www.wireshark.org/#download)，你将被带到
    Wireshark 的稳定版本下载页面。在撰写本文时，当前的稳定版本是 3.4.4，发布于 2021 年 3 月 10 日。现在，对于一些“终端爱好者”，“CLI
    行家”和“shell 武士”，或者那些可能在 Apple 笔记本或 Linux 发行版上使用“Brew”的用户，下面的命令适合你们。
- en: macOS
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: macOS
- en: 'You can install Wireshark with Brew like so:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 Brew 来安装 Wireshark，如下所示：
- en: brew install wireshark
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: brew install wireshark
- en: Linux distros
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux 发行版
- en: 'You can install Wireshark with **apt-get** like so:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 **apt-get** 来安装 Wireshark，如下所示：
- en: sudo apt-get install wireshark
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt-get install wireshark
- en: Windows 10
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows 10
- en: 'I am simply going to leave you with this link: [https://en.wikiversity.org/wiki/Wireshark/Install](https://en.wikiversity.org/wiki/Wireshark/Install).'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我只是简单地给你这个链接：[https://en.wikiversity.org/wiki/Wireshark/Install](https://en.wikiversity.org/wiki/Wireshark/Install)。
- en: The installation is straightforward and there are lots of YouTube videos, wikis,
    blogs, and forums that you can reference.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程很简单，有很多 YouTube 视频、维基百科、博客和论坛可以作为参考。
- en: Note
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: During your installation, you will want to ensure that you install additional
    or complementary components. This is where TShark, dissector plugins, Editcap,
    Mergecap, and other key components come into play. As we move through the next
    few chapters, we'll touch on a number of these items.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装过程中，你需要确保安装额外的或互补的组件。此时，TShark、解码器插件、Editcap、Mergecap 以及其他关键组件就派上用场了。在接下来的几章中，我们将会涉及到其中的一些项目。
- en: 'Once you have installed Wireshark, open the program by double-clicking the
    desktop icon and make sure you can see all your network interfaces, as shown in
    the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你安装了 Wireshark，通过双击桌面图标打开程序，并确保你能看到所有的网络接口，如下图所示：
- en: '![Figure 5.1 – Wireshark capture interfaces'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.1 – Wireshark 捕获接口](image/Figure_5.01_B16321.jpg)'
- en: '](image/Figure_5.01_B16321.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.01_B16321.jpg)'
- en: Figure 5.1 – Wireshark capture interfaces
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1 – Wireshark 捕获接口
- en: Here, you will be able to pick an interface and start to listen to the traffic
    on the network. The key here is that the only network traffic you will see is
    broadcast, multicast, and unicast traffic that's directly related to that interface.
    If you were to select your Wi-Fi interface, for example, you would see lots of
    devices communicating on the network via multicast and broadcast communication,
    especially if you are like me and embrace the **Internet of Things** (**IoT**).
    I am making a special note of this as it leads into the next section, where we
    will look at more interesting data. By this, I mean data provided by unicast communication
    between specific devices. You must have access to a SPAN/mirror port or have installed
    a TAP between the devices communicating.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你将能够选择一个接口并开始监听网络流量。关键是，你看到的网络流量只会是广播、组播和单播流量，这些流量直接与该接口相关。例如，如果你选择你的 Wi-Fi
    接口，你将看到很多设备通过组播和广播通信在网络上进行交流，尤其是如果你像我一样，拥抱**物联网**（**IoT**）。我特别指出这一点，因为它引出了下一部分，我们将看看更有趣的数据。我的意思是，来自特定设备之间单播通信提供的数据。你必须访问
    SPAN/镜像端口或在设备之间安装 TAP 才能捕获这些数据。
- en: In this section, we learned how to install Wireshark using different methods,
    depending on our operating system. We made sure that we saw a list of network
    interfaces that we could utilize to capture traffic. Finally, we noted that the
    information that's gathered by simply listening to a network port is not a complete
    and detailed picture. We require access to SPAN or a TAP to see true device-to-device
    unicast communication. In the next section, we will discuss what SPAN/mirroring
    is and learn how to configure this functionality on a simple managed switch.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，我们学习了如何根据操作系统的不同使用不同的方法安装 Wireshark。我们确保查看了可以用来捕获流量的网络接口列表。最后，我们注意到，仅通过监听网络端口获取的信息并不能提供完整和详细的图景。我们需要访问
    SPAN 或 TAP 才能看到真实的设备间单播通信。在下一部分中，我们将讨论什么是 SPAN/镜像，并学习如何在一个简单的管理交换机上配置这一功能。
- en: What is SPAN and how can we configure it?
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是SPAN，如何配置它？
- en: In the previous section, we quickly installed Wireshark as a means to capture
    network traffic. We can now use Wireshark to verify our results. We will be able
    to do this once we've configured a simple SPAN/mirror port in this section. So,
    what is SPAN and what does it do? SPAN allows a user to duplicate all traffic
    on one or more ports on a managed switch, that supports SPAN/mirroring, to one
    or more ports on the same switch. This is commonly referred to as local SPAN.
    This is the primary method that is used to feed data to an IDS. There are extensions
    of SPAN called **Remote SPAN** (**RSPAN**) and **Encapsulated Remote SPAN** (**ERSPAN**).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一部分中，我们快速安装了 Wireshark 以捕获网络流量。现在，我们可以使用 Wireshark 来验证我们的结果。我们将能够做到这一点，一旦我们在这一部分配置了一个简单的
    SPAN/镜像端口。那么，什么是 SPAN，它的作用是什么？SPAN 允许用户将一个或多个端口上的所有流量复制到同一交换机上的一个或多个端口，前提是该交换机支持
    SPAN/镜像。这通常被称为本地 SPAN。这是将数据馈送到 IDS 的主要方法。SPAN 有一些扩展，称为**远程 SPAN**（**RSPAN**）和**封装远程
    SPAN**（**ERSPAN**）。
- en: RSPAN allows the user to associate remote network traffic with a dedicated VLAN
    and then trunk that data into an additional switch. This comes at a cost, however,
    as you start to dedicate switch ports to RSPAN traffic. You can no longer use
    those specific ports for normal traffic, thus reducing the number of ports that
    can be utilized for operational switching. However, utilizing RSPAN is very useful
    for monitoring data moving through the network during a pentest, since key information
    can be captured and used to breach the system. Credential data, operating systems,
    ports and services, and other useful information is passed across the network
    and directly into your machine via SPAN and captured with Wireshark, TShark, or
    Tcpdump.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: RSPAN 允许用户将远程网络流量与专用 VLAN 关联，然后将这些数据通过额外的交换机进行中继。然而，这需要付出一定的代价，因为你需要为 RSPAN
    流量专门分配交换机端口。你将无法再将这些端口用于正常流量，因此减少了可以用于操作交换的端口数量。然而，利用 RSPAN 在渗透测试中非常有用，因为可以捕获并利用通过网络传输的关键信息来突破系统。凭证数据、操作系统、端口和服务以及其他有用信息通过网络传输，并通过
    SPAN 直接传输到你的计算机，使用 Wireshark、TShark 或 Tcpdump 捕获。
- en: Note
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Using local SPAN or RSPAN causes the switch to increase load. If the switch
    is under heavy load, which means there's lots of traffic moving through the switch,
    using SPAN could cause packet loss and other unwanted behavior, such as production
    disruption. Loss of revenue due to downtime caused by an overloaded switch that
    starts to drop packets is the worst possible outcome during an engagement. So,
    be warned when performing this on switches that you don't fully control or understand.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用本地 SPAN 或 RSPAN 会导致交换机负载增加。如果交换机负载过重，也就是有大量流量通过交换机，使用 SPAN 可能会导致数据包丢失及其他不希望的行为，例如生产中断。由于交换机超负荷工作而开始丢包导致的停机造成的收入损失，是渗透测试中最糟糕的结果。因此，在对你不完全控制或不了解的交换机执行此操作时，务必小心。
- en: 'Note that the terms SPAN and port mirroring are interchangeable as they ultimately
    mean the same thing. So, if you were asking yourself why I was writing SPAN/mirror,
    it''s because they mean the same thing essentially and SPAN is really a Cisco-centric
    term. The switch mentioned in the *Technical requirements* section – the TP-Link
    TL-SG108E Smart Switch – utilizes port mirroring. A typical setup or architecture
    for a local SPAN is shown in the following diagram:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，SPAN 和端口镜像是可以互换使用的术语，因为它们本质上意味着相同的事情。所以，如果你在问我为什么写 SPAN/镜像，那是因为它们本质上是相同的，而
    SPAN 其实是一个以 Cisco 为中心的术语。在*技术要求*部分提到的交换机——TP-Link TL-SG108E 智能交换机——使用了端口镜像。以下图所示为本地
    SPAN 的典型设置或架构：
- en: '![Figure 5.2 – SPAN traffic'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.2 – SPAN 流量'
- en: '](image/Figure_5.02_B16321.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.02_B16321.jpg)'
- en: Figure 5.2 – SPAN traffic
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – SPAN 流量
- en: 'You can use any number of switches to test this setup. We are going to check
    the port settings; in the following screenshot, you can see that this switch is
    a simple eight-port switch. Four ports are being utilized – three operating at
    1 GHz and one operating at 100 MB:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用任意数量的交换机来测试这个设置。我们将检查端口设置；在以下截图中，你可以看到这是一台简单的八端口交换机。四个端口正在被使用——三个以 1 GHz
    运行，一个以 100 MB 运行：
- en: '![Figure 5.3 – Port Setting screen'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.3 – 端口设置屏幕'
- en: '](image/Figure_5.03_B16321.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.03_B16321.jpg)'
- en: Figure 5.3 – Port Setting screen
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – 端口设置屏幕
- en: Seeing that one port is negotiating at a lower speed, it is safe to say that
    PLC communication is on that port, with the port being port 2\. Granted I know
    this because I set up the lab, but during a real pentest, if you happen to get
    this level of access, it is safe to assume that lower speeds are due to industrial
    hardware communication.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 看到某个端口正在以较低的速度协商，安全地说，该端口用于 PLC 通信，并且该端口是端口 2。虽然我知道这是因为我设置了实验室，但在实际的渗透测试中，如果你恰好获得了这种级别的访问权限，可以安全地假设较低的速度是由于工业硬件通信造成的。
- en: 'After reviewing our port settings on the switch, we have a clear idea of what
    port is being used for the PLC, as well as what ports are open to be used to mirror
    the communication back to our host. Next, we will want to set up port mirroring.
    Select the **Monitoring** option from the menu on the left and then select **Port
    Mirror**. You will be taken to the following screen:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看了交换机的端口设置后，我们清楚地了解了哪个端口用于 PLC，以及哪些端口是开放的，可以用来将通信镜像回我们的主机。接下来，我们将设置端口镜像。从左侧菜单中选择**监控**选项，然后选择**端口镜像**。你将进入以下屏幕：
- en: '![Figure 5.4 – Port Mirror screen'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.4 – 端口镜像屏幕'
- en: '](image/Figure_5.04_B16321.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.04_B16321.jpg)'
- en: Figure 5.4 – Port Mirror screen
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4 – 端口镜像屏幕
- en: 'From here, I am going to choose **Enable** for the **Port Mirror** feature
    and select **Mirroring Port**, which will be **Port 1**, and click the **Apply**
    button, as shown in the following screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，我将选择**启用**端口镜像功能，并选择**镜像端口**，它将是**端口 1**，然后点击**应用**按钮，如下截图所示：
- en: '![Figure 5.5 – Enable Port Mirror'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.5 – 启用端口镜像'
- en: '](image/Figure_5.05_B16321.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.05_B16321.jpg)'
- en: Figure 5.5 – Enable Port Mirror
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5 – 启用端口镜像
- en: 'Next, we want to select the port that we want to monitor. As we discovered
    from reviewing the port settings, port 2 has the PLC connected to it. So, click
    on **Port 2** and enable both **Ingress** traffic and **Egress** traffic, as shown
    here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们要选择要监控的端口。通过检查端口设置，我们发现端口 2 已连接到 PLC。所以，点击**端口 2**，并启用**入口**流量和**出口**流量，如下所示：
- en: '![Figure 5.6 – Port 2 mirrored'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.6 – 端口 2 镜像'
- en: '](image/Figure_5.06_B16321.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.06_B16321.jpg)'
- en: Figure 5.6 – Port 2 mirrored
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6 – 端口 2 镜像
- en: 'If everything has worked according to the previous steps, the table will indicate
    that **Port2** has been enabled for both **Ingress** and **Egress** traffic, as
    shown in the following screenshot:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切按照前面的步骤进行操作，表格将显示 **端口2** 已启用 **Ingress** 和 **Egress** 流量，如下图所示：
- en: '![Figure 5.7 – Confirm Port 2 mirror'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.7 – 确认端口 2 镜像'
- en: '](image/Figure_5.07_B16321.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.07_B16321.jpg)'
- en: Figure 5.7 – Confirm Port 2 mirror
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.7 – 确认端口 2 镜像
- en: If you are following along and were able to get your hands on a Koyo Click,
    then proceed and open the CLICK Programming Software that we installed in [*Chapter
    2*](B16321_02_Epub_AM.xhtml#_idTextAnchor027), *Route the Hardware*, on the Windows
    7 host and connect to your PLC. If you are using a different vendor, such as Rockwell,
    make sure you open Studio 5000 or RSLogix and connect to your hardware. This communication
    between the engineering software and the PLC will create traffic across port 2
    on our switch. This is exactly what we want, since duplicated packets are being
    mirrored to port 1\. Connect a cable between port 1 and your host machine.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你跟着操作并且已经拿到了 Koyo Click，那么继续并打开我们在[*第二章*](B16321_02_Epub_AM.xhtml#_idTextAnchor027)中安装的
    CLICK 编程软件，*路由硬件*，在 Windows 7 主机上连接到你的 PLC。如果你使用的是其他厂商的设备，例如 Rockwell，确保你打开 Studio
    5000 或 RSLogix 并连接到你的硬件。工程软件和 PLC 之间的通信将在我们的交换机的端口 2 上创建流量。这正是我们想要的，因为复制的数据包会被镜像到端口
    1。将一根电缆连接到端口 1 和你的主机之间。
- en: 'On your host machine, open Wireshark and select the interface that you want
    to monitor. In my case, I have a **Thunderbolt** adapter on my Mac and I am using
    the interface labeled **en6**, as shown in the following screenshot:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的主机上，打开 Wireshark 并选择你想要监控的接口。在我的例子中，我的 Mac 上有一个 **Thunderbolt** 适配器，我使用的是标记为
    **en6** 的接口，如下图所示：
- en: '![Figure 5.8 – Interface selection'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.8 – 接口选择'
- en: '](image/Figure_5.08_B16321.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.08_B16321.jpg)'
- en: Figure 5.8 – Interface selection
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.8 – 接口选择
- en: 'Once selected, you will see the communication between the engineering software
    and the PLC, as shown in the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 选择后，你将看到工程软件和 PLC 之间的通信，如下图所示：
- en: '![Figure 5.9 – Wireshark'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.9 – Wireshark'
- en: '](image/Figure_5.09_B16321.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.09_B16321.jpg)'
- en: Figure 5.9 – Wireshark
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.9 – Wireshark
- en: Deep diving into Wireshark logs is outside the scope of this book, but we will
    briefly touch on a few key aspects in the next couple of chapters. Click on any
    packet and review the source and destination. If everything has been set up correctly,
    you will see the MAC address resolve to **KoyoElec_##:##:##**.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 深入分析 Wireshark 日志超出了本书的范围，但我们将在接下来的几章中简要触及一些关键方面。点击任意数据包并查看源地址和目标地址。如果一切设置正确，你将看到
    MAC 地址解析为 **KoyoElec_##:##:##**。
- en: 'Wireshark is just one way of examining traffic on the network graphically.
    If you want to review the same data from the Terminal, you can use Tcpdump. Open
    a Terminal and find your interface that is connected to port 2\. Type in the following
    command:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark 只是查看网络流量的一种图形化方式。如果你想通过终端查看相同的数据，可以使用 Tcpdump。打开终端并找到连接到端口 2 的接口。输入以下命令：
- en: tcpdump -i <interface> -v -X
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: tcpdump -i <interface> -v -X
- en: 'Tcpdump is the application that will capture the mirrored traffic. **i** in
    the command allows you to select the interface that you would like to listen to.
    In my case, this is the **en6** interface. The **v** command tells Tcpdump to
    display verbose data. Finally, **X** displays headers and data from each packet
    in hexadecimal and ASCII, as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Tcpdump 是捕获镜像流量的应用程序。命令中的 **i** 允许你选择要监听的接口。在我的案例中，这是 **en6** 接口。**v** 命令告诉
    Tcpdump 显示详细数据。最后，**X** 显示每个数据包的头部和数据，以十六进制和 ASCII 形式显示，如下图所示：
- en: '![Figure 5.10 – Tcpdump command'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.10 – Tcpdump 命令'
- en: '](image/Figure_5.10_B16321.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.10_B16321.jpg)'
- en: Figure 5.10 – Tcpdump command
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.10 – Tcpdump 命令
- en: 'The output from Tcpdump should match the same capture that was seen using Wireshark.
    Compare the two to make sure that you are seeing the same information. This capture
    is shown in the following screenshot:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Tcpdump 的输出应与通过 Wireshark 查看时看到的捕获数据一致。比较两者，确保你看到的是相同的信息。该捕获数据如下面的截图所示：
- en: '![Figure 5.11 – Tcpdump output'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.11 – Tcpdump 输出'
- en: '](image/Figure_5.11_B16321.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.11_B16321.jpg)'
- en: Figure 5.11 – Tcpdump output
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.11 – Tcpdump 输出
- en: At this point, you are probably wondering, *how does this apply to me and my
    pentesting future?* Understandably, it would be very odd to gain access to a switch
    console and just spend time setting up a SPAN session since many other interesting
    things can be done at that level of access. I am simply covering the core building
    blocks that IDS use to absorb data. This is very important since in the last 5
    or so years there has been an explosion in the adoption of passive monitoring
    in the industrial automation space. You will encounter IDS solutions in some form
    or another, and it is key to understand how they work and function. We will cover
    this in greater detail later in this chapter.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可能在想，*这与我和我的渗透测试未来有何关系？* 可以理解的是，访问交换机控制台并花时间设置一个 SPAN 会话可能会显得非常奇怪，因为在这个访问级别上可以做很多其他有趣的事情。我只是简单地介绍了
    IDS 用来吸收数据的核心构建块。这一点非常重要，因为在过去的五年左右，工业自动化领域被动监控的采用量激增。你将在某种形式上遇到 IDS 解决方案，理解它们的工作原理和功能是关键。我们将在本章稍后部分详细讨论这一点。
- en: In this section, we covered the importance of understanding what SPAN/port mirroring
    is and the technology that it enables. We walked through configuring a mirror
    port and using both Wireshark and Tcpdump to review and capture the traffic between
    the Koyo CLICK PLC and the engineering software. In the next section, we are going
    to discuss what a TAP is and how it compares to SPANing traffic. We will also
    discuss how TAPs are invaluable in terms of pentesting when you have physical
    access to your customer's infrastructure.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们讨论了理解 SPAN/端口镜像的重要性以及它所启用的技术。我们讲解了如何配置镜像端口，并使用 Wireshark 和 Tcpdump 来查看和捕获
    Koyo CLICK PLC 与工程软件之间的流量。在接下来的部分，我们将讨论 TAP 是什么，它与 SPAN 流量的比较。我们还将讨论当你有物理访问权限时，TAP
    在渗透测试中的重要性。
- en: Using a TAP during an engagement
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在一次渗透测试中使用 TAP
- en: In the previous section, we discussed what SPAN is and how to configure and
    use it. In this section, we are going to review what a TAP is, the different types
    of TAPs, and how they can be used in an engagement. Typically, TAPs are hardware
    devices that are inserted between two communication links so that we can perform
    full packet replication. TAPs can duplicate traffic to a single destination, or
    multiple destinations, which is called **regeneration**, or the TAP can provide
    consolidated traffic, which is referred to as aggregation.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们讨论了 SPAN 是什么以及如何配置和使用它。在本节中，我们将回顾 TAP 是什么、TAP 的不同类型以及它们如何在渗透测试中使用。通常，TAP
    是硬件设备，插入在两个通信链路之间，以便我们能够执行完整的包复制。TAP 可以将流量复制到单一目的地或多个目的地，这称为 **再生**，或者 TAP 可以提供汇总流量，这被称为聚合。
- en: There are a number of differences between TAPs and SPANs, but the most important
    in my mind is that SPAN is not a true passive solution as it creates overhead
    on the switch. That being said, TAPs produce a complete copy of the traffic, without
    this impacting the performance of the switch and knocking it over. The downside
    is that for you to gain access to the packets, you must do a cable swap, which
    could cause temporary disruption in the service.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: TAP 和 SPAN 之间有很多不同之处，但在我看来最重要的一点是，SPAN 并不是一种真正的被动解决方案，因为它会在交换机上产生额外负担。话虽如此，TAP
    会生成流量的完整副本，而不会影响交换机的性能或使其崩溃。缺点是，为了访问数据包，你必须更换电缆，这可能会导致服务的短暂中断。
- en: There are two primary types of TAPs – active and passive. Passive taps have
    no physical disconnect between interfaces, which allows communication to be maintained
    even if the TAP fails. Active TAPs, on the other hand, use power to duplicate
    communication between the interfaces, allowing it to operate at 1,000 M, whereas
    passive TAPs support 10/100 M networks. Using a passive TAP on gigabit networks
    will cause the network to degrade and produce performance issues. As you may recall,
    in the previous section, we saw that the PLC communication was operating at 100
    M by default. This allows us to use a passive TAP in an engagement without us
    having to worry about causing performance issues, but once again, I have to emphasize
    that you should really know what the network is doing prior to installing an implant
    into the network. This is a cautionary tale as I have definitely knocked over
    critical networks in the past during pentests. In our lab environment, you don't
    have to worry about taking anything critical out of service. This is part of the
    charm of having a lab to work with and test behavior in.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: TAP 主要有两种类型——主动和被动。被动 TAP 之间的接口没有物理断开，这样即使 TAP 出现故障，通信也能继续进行。而主动 TAP 则使用电源复制接口之间的通信，允许其以
    1,000 M 的速度运行，而被动 TAP 仅支持 10/100 M 网络。在千兆网络上使用被动 TAP 会导致网络性能下降并产生性能问题。正如你在前一部分中回顾的那样，我们看到
    PLC 通信默认在 100 M 下运行。这使得我们在进行渗透测试时可以使用被动 TAP，而不必担心引起性能问题，但我再次强调，在将植入物安装到网络之前，你必须确切了解网络的运行情况。这是一个警示故事，因为在过去的渗透测试中，我确实曾破坏过关键网络。在我们的实验室环境中，你无需担心会影响任何关键服务。这也是拥有实验室来进行测试和观察行为的一大魅力。
- en: 'A popular passive TAP is the Throwing Star LAN TAP by Great Scott Gadgets.
    It can be found at [https://greatscottgadgets.com/throwingstar/](https://greatscottgadgets.com/throwingstar/):'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一款流行的被动 TAP 是 Great Scott Gadgets 的 Throwing Star LAN TAP。它可以在 [https://greatscottgadgets.com/throwingstar/](https://greatscottgadgets.com/throwingstar/)
    找到：
- en: '![Figure 5.12 – Throwing Star LAN TAP'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.12 – Throwing Star LAN TAP'
- en: '](image/Figure_5.12_B16321.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.12_B16321.jpg)'
- en: Figure 5.12 – Throwing Star LAN TAP
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.12 – Throwing Star LAN TAP
- en: 'There are four connectors on the Throwing Star labeled J1 – J4, where J1 and
    J2 are the inline connections and J3 and J4 are the monitoring ports. For our
    lab, we will connect J1 to the Koyo CLICK PLC and then use a cable to connect
    J2 to the switch. Once you''ve done that, connect J3 to your laptop and use Wireshark,
    TShark, or Tcpdump to capture the traffic, as we did in the previous section.
    In this example, we will use TShark to capture and display the traffic. As you
    may recall from the *Installing Wireshark* section, TShark is an optional component
    that can be added during the installation process. Type in the following command
    to do so:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Throwing Star 上有四个连接器，标为 J1 – J4，其中 J1 和 J2 是内联连接，J3 和 J4 是监控端口。在我们的实验室中，我们将
    J1 连接到 Koyo CLICK PLC，然后使用一根电缆将 J2 连接到交换机。完成后，将 J3 连接到你的笔记本电脑，并使用 Wireshark、TShark
    或 Tcpdump 来捕获流量，正如我们在前一部分中所做的那样。在这个示例中，我们将使用 TShark 来捕获并显示流量。正如你在*安装 Wireshark*
    部分回顾的那样，TShark 是一个可选组件，可以在安装过程中添加。输入以下命令进行操作：
- en: Tshark -i <interface>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Tshark -i <interface>
- en: 'Similar to Tcpdump, the **-i** handle allows you to choose which interface
    you would like to utilize for the capture process. I will use the same interface
    we did previously here; that is, **en6**. You can see the command for this in
    the following screenshot:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Tcpdump 类似，**-i** 选项允许你选择用于捕获过程的接口。我将使用我们之前使用的相同接口，即 **en6**。你可以在下面的截图中看到相应的命令：
- en: '![Figure 5.13 – Throwing Star LAN TAP capture'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.13 – Throwing Star LAN TAP 捕获'
- en: '](image/Figure_5.13_B16321.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.13_B16321.jpg)'
- en: Figure 5.13 – Throwing Star LAN TAP capture
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.13 – Throwing Star LAN TAP 捕获
- en: 'The packets that are captured will and should be the same format we saw previously.
    I am including a screenshot here so that you can compare it with the previous
    capture of Tcpdump:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获的数据包将与我们之前看到的格式相同。我这里附上一张截图，方便你与之前的 Tcpdump 捕获进行对比：
- en: '![Figure 5.14 – TShark packet capture'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.14 – TShark 数据包捕获'
- en: '](image/Figure_5.14_B16321.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.14_B16321.jpg)'
- en: Figure 5.14 – TShark packet capture
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14 – TShark 数据包捕获
- en: Here, you can see how using a TAP can be very useful for gaining insight into
    a network. If you have physical access to a switch, you can simply insert the
    TAP and start capturing the data exchange on that port. This will allow you to
    understand the protocols being used, and possibly capture unique and sensitive
    information being passed and exchanged on the network.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到使用TAP对于深入了解网络非常有用。如果您可以物理接入交换机，只需插入TAP即可开始捕获该端口上的数据交换。这将使您能够理解正在使用的协议，并可能捕获正在网络上传递和交换的独特和敏感信息。
- en: 'Many vendors sell LAN TAPs, but I do recommend looking at what Hak5 has to
    offer in this space. Here is a link to their store and their implant tools in
    particular: [https://shop.hak5.org/collections/implants](https://shop.hak5.org/collections/implants).'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 许多供应商出售LAN TAPs，但我建议看看Hak5在这个领域提供了什么。这里是他们商店的链接和特别的植入工具：[https://shop.hak5.org/collections/implants](https://shop.hak5.org/collections/implants)。
- en: 'You can find the Throwing Star LAN TAP, the Throwing Star LAN TAP Pro, and
    other great implant tools such as the Packet Squirrel and the Plunder Bug LAN
    TAP. A Plunder Bug LAN TAP can be used to capture traffic in real time, exactly
    the same way as the Throwing Star LAN TAP does, to capture straight to USB-C.
    I wish to briefly mentioned Packet Squirrel as it can be left behind on engagements;
    you can recover it at a later date. We can set the payload to auto-generate PCAPs,
    which are very helpful when you want to discover possible credentials floating
    across the network. I know this strictly isn''t a TAP per se, but you can connect
    it to Hak5 Cloud C2 for management and exfil, which allows you to gain access
    to the network traffic of interest:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以找到Throwing Star LAN TAP、Throwing Star LAN TAP Pro以及其他出色的植入工具，如Packet Squirrel和Plunder
    Bug LAN TAP。Plunder Bug LAN TAP可以实时捕获流量，与Throwing Star LAN TAP完全相同的方式，直接捕获到USB-C。我希望简要提到Packet
    Squirrel，因为它可以留在工作中；您可以在以后的某个日期恢复它。我们可以设置有效载荷自动生成PCAPs，在您希望发现网络中漂浮的可能凭据时非常有帮助。我知道这严格来说不是TAP，但您可以将其连接到Hak5
    Cloud C2进行管理和数据外流，从而可以访问感兴趣的网络流量：
- en: '![Figure 5.15 – Packet Squirrel'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.15 – Packet Squirrel'
- en: '](image/Figure_5.15_B16321.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.15_B16321.jpg)'
- en: Figure 5.15 – Packet Squirrel
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.15 – Packet Squirrel
- en: If you look at the payload select switch, you will see that you can launch a
    number of pre-canned exploits. You can also spend time writing your own custom
    payload.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您查看有效载荷选择开关，您将看到可以启动多个预先制作的漏洞利用。您也可以花时间编写自己的自定义有效载荷。
- en: Story time
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 故事时间
- en: In the fall of 2016, I traveled to California to hang out at the Hak5 office.
    They were hosting a Red Team training event called **Pentest with Hak5**. There
    were a number of us attending the training event and the group hung out with Darren
    Kitchen, Sebastian Kinne, Rob "Mubix" Fuller, and Shannon Morse "Snubs." We spent
    a week doing hands-on training, learning how to use the Wi-Fi Pineapple, LAN Turtle,
    Rubber Ducky, and deep dive Metasploit. We practiced using the tools provided
    to us and at the end of the week, we were tasked with trying to stop the Evil
    Robot from deleting all the cat images from the internet. The Hak5 team is producing
    new and interesting tools that can and should be utilized in the field. I definitely
    recommend looking at their gear and becoming familiar with it. **– ThunderCats
    2016**
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 2016年秋天，我去了加利福尼亚州去Hak5办公室玩耍。他们正在举办一个名为**Pentest with Hak5**的红队培训活动。有很多人参加了培训活动，我们与Darren
    Kitchen、Sebastian Kinne、Rob "Mubix" Fuller和Shannon Morse "Snubs"一起度过了时间。我们花了一周时间进行实践培训，学习如何使用Wi-Fi
    Pineapple、LAN Turtle、Rubber Ducky和深入Metasploit。我们练习使用提供给我们的工具，并在一周结束时，我们的任务是试图阻止邪恶机器人删除互联网上所有的猫图像。Hak5团队正在开发新的有趣工具，可以在实际工作中使用。我强烈建议查看他们的装备并熟悉它。**–
    ThunderCats 2016**
- en: So far, we've talked about portable "implant" type TAPs. However, there are
    commercial-grade TAPs that companies utilize to build out-of-band security monitoring
    networks. There are some key vendors that play in this space, with one of the
    most notable being Gigamon. These larger "active" TAP solutions can support 1G
    and 10G networks, thus duplicating all the traffic to a monitoring device. We
    will see these devices specifically in "nuclear" installations and, potentially,
    depending on corporate security budgets, energy and other notable industrial industries.
    I'm saying this as the cost of the hardware and the sheer volume of the installation
    is typically a non-starter for most organizations, hence the de facto use of SPAN/mirror
    ports for IDS passive monitoring solutions.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们讨论了便携式“植入”类型的TAP。然而，还有一些商业级TAP是公司用来构建带外安全监控网络的。这个领域有一些重要的厂商，其中最著名的之一是Gigamon。这些更大型的“主动”TAP解决方案可以支持1G和10G网络，从而将所有流量复制到监控设备上。我们将特别在“核电”安装中看到这些设备，可能根据企业安全预算的不同，它们也会出现在能源及其他重要工业领域。我之所以这么说，是因为硬件的成本和安装的庞大体量通常对于大多数组织来说是个不可接受的因素，因此，SPNA/镜像端口实际上成为了IDS被动监控解决方案的默认选择。
- en: In this section, we discussed how you will encounter TAPs in some shape or form
    throughout your career, whether it be from gaining access to an out-of-band network
    while pentesting or from leaving an implant behind. It is very important to familiarize
    yourself with the different vendors in this space and to also utilize them in
    your lab. We installed a Throwing Star LAN TAP and used TShark to verify that
    we were capturing unicast communication between the Koyo Click PLC and the engineering
    software we installed in [*Chapter 2*](B16321_02_Epub_AM.xhtml#_idTextAnchor027),
    *Route the Hardware*. This has acted as a lead-up to the next section, where we
    will discuss IDS and the important role it started to play in industrial networks.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了如何在你整个职业生涯中以某种形式遇到TAP，无论是通过渗透测试访问带外网络，还是通过植入设备留下后门。非常重要的一点是，要熟悉这一领域的不同厂商，并在实验室中使用它们。我们安装了一个Throwing
    Star LAN TAP，并使用TShark验证我们是否成功捕获了Koyo Click PLC与我们在[*第二章*](B16321_02_Epub_AM.xhtml#_idTextAnchor027)中安装的工程软件之间的单播通信，*路由硬件*。这为下一节做了铺垫，我们将在下一节中讨论IDS及其在工业网络中开始扮演的重要角色。
- en: Navigating IDS security monitoring
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航IDS安全监控
- en: 'So far, we have installed Wireshark, learned about and configured a SPAN/mirror
    port, and installed a "passive" TAP. This has all led to this section. For those
    of you who are "purists" that may doubt the veracity of passive monitoring, note
    that various vendor technologies have been widely adopted and are encountered
    in almost all pentest engagements. I guess there is something to be said about
    a company''s security maturity: as they engage in third-party pentests, it would
    be safe to say that these same companies invest in new monitoring tools for their
    industrial networks.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经安装了Wireshark，了解并配置了SPAN/镜像端口，并安装了“被动”TAP。这一切都为本节内容铺平了道路。对于那些怀疑被动监控真实性的“纯粹主义者”，请注意，各种厂商的技术已经被广泛采用，并且在几乎所有的渗透测试工作中都会遇到。我想这可以反映出公司安全成熟度的一些信息：随着他们参与第三方渗透测试，可以肯定的是，这些公司会投资新的监控工具来监控他们的工业网络。
- en: 'In this section, we will touch on the various vendors in the IDS security monitoring
    space, provide a high-level overview of what they typically detect, how they plug
    into the broader security suite of tools for events and alerting, and learn how
    to bypass these products and go undetected during a pentesting engagement. This
    is because it is quite defeating having an IDS detect your IP address and send
    an API call to a **Network Access Control** (**NAC**), and then have that NAC
    push a set of new **Security Group Tags** (**SGTs**), essentially dropping your
    MAC address on all the switches:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论IDS安全监控领域的各种厂商，提供一个高层次的概述，讲解他们通常检测什么，如何将其融入更广泛的安全工具套件中以进行事件和警报监控，并学习如何在渗透测试过程中绕过这些产品，避免被检测到。因为如果IDS检测到你的IP地址并向**网络访问控制**（**NAC**）发送API调用，然后该NAC推送一组新的**安全组标签**（**SGT**），实质上会将你的MAC地址丢弃在所有交换机上，这会让你感到非常沮丧：
- en: '![Figure 5.16 – IDS'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.16 – IDS'
- en: '](image/Figure_5.16_B16321.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Figure_5.16_B16321.jpg)'
- en: Figure 5.16 – IDS
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.16 – IDS
- en: The idea and implementation of IDS has been around since the 1980s. This technology
    was driven by the need to bolster network security. Over the last 4 decades, many
    companies have either been bought, sold, or faded away. The evolution of IDS is
    very interesting and history-rich, but I want to narrow down and focus on the
    direct impact of IDS as it relates to the industrial space. In 1998, "Snort" was
    created, an "open source" network IDS. Like most technologies, "Snort" allowed
    hobbyists and other new start-up companies to leverage the rule-based engine and
    develop deeper detections. Fast forward another decade and companies such as Digital
    Bond and Industrial Defender started using custom rules tailored for industrial
    equipment and detecting malicious activities and attacks.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: IDS的理念和实施自1980年代以来就已存在。这项技术的推动力来源于对加强网络安全的需求。在过去的40年里，许多公司要么被收购，要么被出售，或逐渐消失。IDS的发展非常有趣且历史悠久，但我希望将焦点集中在IDS对工业领域的直接影响上。1998年，“Snort”问世，它是一个“开源”网络IDS。像大多数技术一样，“Snort”允许爱好者和其他初创公司利用基于规则的引擎，开发更深层次的检测。快进到下一个十年，像Digital
    Bond和Industrial Defender这样的公司开始使用针对工业设备定制的规则，以检测恶意活动和攻击。
- en: In 2009, a company called "Security Matters" was founded in the Netherlands,
    focusing specifically on industrial network detection. 11 years ago, in March
    2010, a paper titled "Sophia Proof of Concept Report" was published by three researchers
    working for the Idaho National Laboratory. The idea was to visually fingerprint
    industrial networks by simply listening to network traffic.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 2009年，一家名为“Security Matters”的公司在荷兰成立，专注于工业网络检测。11年前的2010年3月，爱达荷国家实验室的三位研究人员发布了一篇名为《Sophia概念验证报告》的论文。其目的是通过简单地监听网络流量来可视化地指纹化工业网络。
- en: In 2013, two companies were founded – one in the United States called "Dragos"
    and another in Switzerland called "Nozomi Networks" – both of which had products
    in the passive monitoring space. The former "Dragos" had a product called Cyberlens
    and the latter "Nozomi Networks" had a product called SCADAguardian.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 2013年，成立了两家公司——一家位于美国，名为“Dragos”，另一家位于瑞士，名为“Nozomi Networks”，这两家公司都在被动监控领域推出了产品。前者“Dragos”推出了名为Cyberlens的产品，后者“Nozomi
    Networks”推出了名为SCADAguardian的产品。
- en: In 2014, the industrial intrusion detection market exploded with a dozen or
    more companies launching such systems. The bulk came out of Israel and were championed
    by ex 8200 IDF members, though notable mentions include Indegy, SCADAFence, and
    Claroty. Sentryo was also founded in 2014 and was headquartered in France. All
    these companies are in a "protocol dissector" race, a race to see which company
    can produce the most diverse and comprehensive arsenal for asset discovery.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 2014年，工业入侵检测市场爆发，十多家公司推出了此类系统。大多数公司来自以色列，由前8200以色列国防军成员推动，尽管值得一提的还有Indegy、SCADAFence和Claroty。Sentryo也于2014年成立，总部位于法国。所有这些公司都在进行“协议分析器”竞赛，竞赛的目标是看哪家公司能为资产发现提供最丰富、最全面的工具。
- en: 'In the next chapter, we are going to deep dive into protocols and how they
    are structured, but for now, the most important take away is that IDS monitoring
    devices perform deep packet inspection and analyze the traffic for malicious behavior.
    All the systems mentioned previously track when new key elements occur, such as
    the following:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨协议及其结构，但目前最重要的要点是，IDS监控设备执行深度包检测，并分析流量中的恶意行为。之前提到的所有系统都会追踪新关键元素的出现，例子包括：
- en: New MAC address detected in the network
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络中检测到新的MAC地址
- en: New IP address detected in the network
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络中检测到新的IP地址
- en: New protocol detected in the network
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络中检测到新的协议
- en: New communication path detected in the network
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络中检测到新的通信路径
- en: These are elements you should keep in the back of your mind as you pivot through
    your customer's network from the corporate side down into the industrial network.
    Knowing that your machine will be detected and fingerprinted will help you develop
    different techniques and strategies to cover your tracks. At this point, we know
    that if these systems detect a new device and new communication, they will generate
    an event or alert, depending on the naming convention for each system. Understanding
    how the alert is handled by the IDS will be crucial; is the system integrated
    with an NAC or firewall? Will the integration cause an issue with traversing deeper
    into the network? Does the firewall block our connection attempts to lower-level
    systems? Does the NAC push SGTs to the switches it manages, ultimately dropping
    packets? All these are important questions to address when navigating a network.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在从企业端到工业网络的过程中，你应该将这些元素牢记在心。知道你的机器会被检测和指纹识别将帮助你开发不同的技术和策略来掩盖你的踪迹。在这一点上，我们知道如果这些系统检测到新设备和新通信，它们将生成一个事件或警报，取决于每个系统的命名约定。了解
    IDS 如何处理警报至关重要；系统是否与 NAC 或防火墙集成？集成是否会导致在网络中深入遍历时出现问题？防火墙是否会阻止我们连接到较低级别系统？NAC 是否会向其管理的交换机推送
    SGT，最终丢弃数据包？在浏览网络时，所有这些都是重要问题需要解决。
- en: 'Not all is lost, however, even with systems fully tuned and deploying the latest
    packet rules, YARA rules, signatures, and integrations. Fortunately, these IDS
    monitoring systems have weaknesses in their armor that we can exploit. Here is
    a short list of exploitable tactics we can use to subvert passive monitoring:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，并非一切都失去了，即使系统完全调整并部署了最新的数据包规则、YARA 规则、签名和集成。幸运的是，这些 IDS 监控系统在其装甲中存在我们可以利用的弱点。以下是我们可以使用的一些可利用的策略的简短列表，以颠覆被动监控：
- en: Node license saturation
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点许可饱和
- en: Alert exhaustion
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 警报耗尽
- en: Other protocol or uncommon port
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他协议或不常见端口
- en: Encrypted protocol usage
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密协议的使用
- en: Living off the land
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生存于土地
- en: I would be doing a disservice if I were to leave you with the impression that
    all IDS are vulnerable to these exploits. These are simply some tactics that have
    been discovered through previous engagements and research, and they affect various
    IDS devices in different ways.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我让你认为所有 IDS 都容易受到这些攻击的影响，那我就有所失职了。这些只是通过以前的参与和研究发现的一些策略，它们以不同的方式影响各种 IDS 设备。
- en: Node license saturation
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 节点许可饱和
- en: This technique works by introducing numerous new nodes to the network, which
    ultimately causes the monitoring solution to hit the license node count. After
    that, you can introduce your attack strategy since the IDS solution won't detect
    and/or alert your device as you pivot deeper into the network. By doing this,
    you have effectively blinded the system from viewing your activity.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术通过向网络引入大量新节点，最终导致监控解决方案达到许可节点计数。之后，你可以引入你的攻击策略，因为 IDS 解决方案不会检测和/或警报你的设备，当你在网络中深入时。通过这样做，你有效地使系统无法查看你的活动。
- en: Alert exhaustion
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 警报耗尽
- en: This is similar to node license saturation, but the IDS solution isn't vulnerable
    to a license count limit. Instead, it simply creates so much noise that the end
    user will never find the activity. Once again, this introduces an excessive number
    of new nodes and activity into the network, which can easily create hundreds of
    thousands of alerts in the system.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这类似于节点许可饱和，但 IDS 解决方案不容易受到许可计数限制的影响。相反，它只是制造了大量噪音，使最终用户永远找不到活动。再次，这引入了大量新节点和活动到网络中，这很容易在系统中创建数十万个警报。
- en: Other protocol or uncommon port
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他协议或不常见端口
- en: This works by utilizing uncommon ports to pass your attack through the system.
    Depending on the monitoring system, if the port hasn't been associated with a
    dissector, the IDS will tag the traffic as "other" and not perform any further
    analysis on it. An example would be passing HTTP over a non-standard port.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这通过利用不常见的端口将攻击传递到系统中。根据监控系统，如果端口尚未与解析器关联，IDS 将标记流量为“其他”，并且不会对其进行进一步分析。一个例子是通过非标准端口传递
    HTTP。
- en: Encrypted protocol usage
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加密协议的使用
- en: This is specifically for referencing or utilizing port **443** or HTTPS for
    a reverse shell through the network. Communication via port **443** is typically
    allowed as it gets tagged as HTTPS communication, so no further analysis is typically
    performed on the link, allowing us to pass through undetected.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这是专门用于通过网络进行反向外壳的端口**443**或HTTPS的参考或利用。通过端口**443**进行通信通常是允许的，因为它被标记为HTTPS通信，因此通常不会对链接进行进一步分析，从而使我们能够无法检测地通过。
- en: Living off the land
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生存于自然
- en: This is the most evasive tactic when it comes to performing pentests, since
    we can utilize devices and protocols that are already present in the network to
    go undetected. Very prominent attacks in the past utilized this strategy and led
    to a certain nuclear program being crippled – and yes, this is a reference to
    "Stuxnet." Gaining access to an HMI, data historian, or operator workstation allows
    us to send set point changes or configuration changes via normal methods and actions.
    Opening and closing valves from an HMI appears to be normal behavior and will
    go unnoticed in the network.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在进行渗透测试时最具隐蔽性的策略，因为我们可以利用网络中已经存在的设备和协议来实现不被检测。过去非常突出的攻击利用了这种策略，并导致某个核计划受到破坏
    - 是的，这是对“Stuxnet”的引用。访问HMI、数据历史记录或操作员工作站使我们能够通过正常方法和操作发送设定点更改或配置更改。通过HMI打开和关闭阀门似乎是正常行为，并且在网络中不会被注意到。
- en: In this section, we discussed what an IDS is and the history of the evolution
    of industrial IDS. We discussed what and how an IDS discovers and detects, and
    we also covered some methods for obfuscating our attacks from detection. Knowing
    about and utilizing these details will help you in the future during a customer
    engagement.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了什么是IDS以及工业IDS演变的历史。我们讨论了IDS是如何发现和检测的，我们还介绍了一些用于掩盖我们攻击的方法。了解并利用这些细节将有助于您在未来的客户参与中。
- en: Summary
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned what SPAN/mirroring and TAPs are, as well as the
    importance of understanding how they fit into the ICS ecosystem. Knowing what
    to look for on the network and how to interact with it is key to having a successful
    outcome. Discovering what traffic is communicating and exchanging data allows
    us to build out a network topology of the assets the client has in their network.
    Utilizing technologies such as Wireshark, TShark, and Tcpdump to listen to and
    review the traffic in real time is required during an engagement. More advanced
    technologies, such as the IDS vendors listed in this chapter, will even divulge
    auto-discovered vulnerabilities.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了什么是SPAN/镜像和TAP，以及了解它们如何融入ICS生态系统的重要性。了解如何查看网络上的内容以及如何与之交互对于取得成功至关重要。发现哪些流量正在通信和交换数据使我们能够构建客户在其网络中拥有的资产的网络拓扑。在参与过程中，需要利用诸如Wireshark、TShark和Tcpdump等技术实时监听和审查流量。本章列出的IDS供应商等更先进的技术甚至会披露自动发现的漏洞。
- en: In the next chapter, which is all about listening to a SPAN or TAP on the network,
    we will build packet captures that will allow us to analyze and dissect protocols
    being passed on the network. This is the secret sauce that IDS companies use to
    build out their product. This is an arms race for protocol dissectors. We will
    be deep diving into the packets and packet captures in the next chapter, [*Chapter
    6*](B16321_06_Epub_AM.xhtml#_idTextAnchor063)*, Packet Deep Dive*.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何监听网络上的SPAN或TAP，我们将构建数据包捕获，以便分析和解剖网络上传输的协议。这是IDS公司用来开发产品的秘密武器。这是协议解析器的一场军备竞赛。在下一章中，[*第6章*](B16321_06_Epub_AM.xhtml#_idTextAnchor063)*，数据包深入解析*，我们将深入研究数据包和数据包捕获。
