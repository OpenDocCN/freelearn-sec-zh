- en: Scanning Vulnerabilities Using Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用工具扫描漏洞
- en: In this chapter, we will see how to install MSFC, learn about the scanning process,
    and finally look at the analysis of the report. We will also be installing a tool
    called Nexpose, which will scan our system for vulnerabilities. We will also learn
    to generate reports and analyze them.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何安装MSFC，了解扫描过程，并最终查看报告分析。我们还将安装一个名为Nexpose的工具，它将扫描我们的系统以查找漏洞。我们还将学习如何生成报告并分析它们。
- en: 'This chapter covers the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: Installing MSFC
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装MSFC
- en: MSFC scan
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MSFC扫描
- en: MSFC analysis
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MSFC分析
- en: Installing Nexpose
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Nexpose
- en: Running Nexpose
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行Nexpose
- en: Nexpose analysis
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nexpose分析
- en: Installing MSFC
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装MSFC
- en: In this section, we will look at Metasploit Community. This is a web GUI that
    uses Metasploit, but it has features other than exploiting vulnerabilities. It
    can be used to discover open ports, just like Zenmap, and install services, but
    it doesn't stop there. It also maps these ports and services to existing exploits
    in Metasploit and existing modules. From there you can literally exploit a vulnerability
    straight away using Metasploit. Let's see how we can use it, and it will become
    clearer what it can be used for.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将查看Metasploit Community。这是一个基于Web的图形界面，使用Metasploit，但它除了漏洞利用功能外，还有其他功能。它可以像Zenmap一样用来发现开放端口和安装服务，但不仅仅如此。它还会将这些端口和服务映射到Metasploit中现有的漏洞和模块。从那里，你可以直接使用Metasploit利用漏洞。让我们看看如何使用它，随着了解，你将更清楚它的应用场景。
- en: 'The tool is not included in Kali Linux. We need to download it from [https://www.rapid7.com/products/metasploit/metasploit-community-registration.jsp](https://www.rapid7.com/products/metasploit/metasploit-community-registration.jsp).
    We will also need to use our email address because we will need the product activation
    key, which they''ll send to the email that we enter when we download. Once we
    download this, we''re going to navigate to our `Downloads` using the `cd` command
    to change directory. If we do `ls` to list the current files, we will be able
    to see that we have the installer `metasploit-latest-linux-x64-installer.run` file downloaded.
    The first thing we need to do is to change the permissions to an executable so
    that we can execute this file. To change the permissions in Linux, you use the
    `chmod` command, and then we will put in the permissions that we want to set,
    which is executable, `+x`, and we are going to put the filename, which is `metasploit-latest-linux-x64-installer.run`.
    Now, we will launch the command, which is as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具不包含在Kali Linux中。我们需要从[https://www.rapid7.com/products/metasploit/metasploit-community-registration.jsp](https://www.rapid7.com/products/metasploit/metasploit-community-registration.jsp)下载它。我们还需要使用我们的电子邮件地址，因为我们需要产品激活密钥，该密钥将通过我们下载时输入的电子邮件发送。下载完成后，我们将使用`cd`命令导航到我们的`Downloads`目录。如果我们执行`ls`列出当前文件，我们将看到已下载的安装程序`metasploit-latest-linux-x64-installer.run`文件。首先，我们需要更改权限为可执行权限，以便执行此文件。在Linux中更改权限，可以使用`chmod`命令，然后输入我们希望设置的权限，即可执行权限`+x`，然后输入文件名`metasploit-latest-linux-x64-installer.run`。接下来，我们将执行以下命令：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And if we do `ls` we will see that there is text that will be highlighted in
    green, which means that it''s an executable:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们执行`ls`命令，我们会看到某些文本被高亮显示为绿色，表示它是一个可执行文件：
- en: '![](assets/1dde7393-06ea-4e42-98c1-015e87c4e4d2.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1dde7393-06ea-4e42-98c1-015e87c4e4d2.png)'
- en: To run any executable in Linux all we have to do is type in `./` and enter the
    filename. The `./metasploit-latest-linux-x64-installer.run` file will run this
    executable for us. Now, we will just run through the process.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中运行任何可执行文件，只需键入`./`并输入文件名即可。`./metasploit-latest-linux-x64-installer.run`文件将为我们运行此可执行文件。现在，我们将按步骤执行该过程。
- en: 'The installation is very simple:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程非常简单：
- en: 'First, we click on I accept the agreement, and then we click Forward. We then
    select where we want to install it:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们点击“我接受协议”，然后点击“下一步”。接着选择我们希望安装的位置：
- en: '![](assets/ee87f777-0242-4890-b8c6-588c4c542387.png)It will say that the folder
    is not empty if we already have Metasploit there. If we want to reinstall it we
    are just going to call it metasploit2.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/ee87f777-0242-4890-b8c6-588c4c542387.png)如果我们已在该文件夹中安装了Metasploit，它会提示该文件夹非空。如果我们想重新安装，我们将把它命名为metasploit2。'
- en: 'It will ask us whether we want to start Metasploit as a service every time
    the machine starts. We can pick Yes or No. I prefer to pick No, but you can set
    it to Yes. Then the Metasploit UI will start automatically every time your computer
    starts. Click on Forward:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会问我们是否希望每次机器启动时都自动启动Metasploit作为服务。我们可以选择“是”或“否”。我个人喜欢选择“否”，但你也可以选择“是”。如果选择“是”，那么每次计算机启动时，Metasploit
    UI将自动启动。点击“Forward”：
- en: '![](assets/26055a75-08fe-4a78-a202-9c98395592a6.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/26055a75-08fe-4a78-a202-9c98395592a6.png)'
- en: 'Then it''s going to ask us for the SSL Port that will be used. Because the
    service runs as a web GUI, we can set that to anything we want, but we are going
    to leave it as `3790`:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后它会询问我们要使用的SSL端口。由于该服务以网页GUI形式运行，我们可以将其设置为任何我们想要的值，但我们将保持为`3790`：
- en: '![](assets/8146c863-6eaf-43e9-8a4a-6e11c75f49f7.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8146c863-6eaf-43e9-8a4a-6e11c75f49f7.png)'
- en: 'And then it''s asking us for the Server Name, and we are going to keep it as `localhost` because
    it''s being installed on our `localhost`:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后它会询问我们服务器名称，我们将保持为`localhost`，因为它安装在我们的`localhost`上：
- en: '![](assets/cf00b5d4-dd44-48c9-b30b-d81ff3165a31.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cf00b5d4-dd44-48c9-b30b-d81ff3165a31.png)'
- en: 'Database Server port; again keep this the same, don''t change it. Then there
    is the thin cluster port; again, keep this the same, `7337`. These are all configurations
    for the program to run. We don''t really need to mess with them. Only change them
    if you already installed the program and it won''t let you have the same port,
    but usually it should keep them the same:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库服务器端口；再次保持相同，不要更改它。接下来是薄集群端口；仍然保持相同，`7337`。这些都是程序运行所需的配置。我们其实不需要更改它们。只有在你已经安装了程序，并且它不允许你使用相同的端口时才需要更改它们，但通常情况下它应该会保持一致：
- en: '![](assets/b67d4764-8dad-48e2-80f2-2220bf478983.png)Setting  the database server
    port'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/b67d4764-8dad-48e2-80f2-2220bf478983.png)设置数据库服务器端口'
- en: Now, it's saying it's ready to install. Once you press Forward it will install
    it for you and it will ask you for a username and a password for the web interface.
    Set that as well, pick a username and a password, and the process will finish
    up smoothly.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，它提示安装已准备好。按下“Forward”后，它将为你安装，并会要求你为网页界面设置用户名和密码。设置好后，选择一个用户名和密码，安装过程将顺利完成。
- en: Now, once we finish the installer we want to run the `metasploit` service. Because
    it's going to be installed as a service, as a web server, when we want to use
    Metasploit Community we will have to run it using the `service` command, the same
    way we run any service in Linux. We enter `service metasploit start` to start
    that service. Once the service has started, all we have to do is go to a browser
    and navigate to `https`. Make sure to put `https` not `http://localhost/`, and
    then we enter the port that Metasploit runs on, which is `3790`. Press *Enter.* Now
    it's asking us to log in. We log in using the username and password that we picked
    while we installed the program, and then we will be able to use it. We'll be talking
    about logging in and using the tool in the next section.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一旦我们完成安装程序，就需要运行`metasploit`服务。因为它将作为服务安装，作为一个网页服务器，当我们想使用Metasploit Community时，我们必须使用`service`命令来运行它，就像在Linux中运行任何服务一样。我们输入`service
    metasploit start`来启动该服务。服务启动后，我们只需要打开浏览器，导航到`https`。确保输入的是`https`而不是`http://localhost/`，然后输入Metasploit运行的端口号，即`3790`。按下*Enter*键。现在它会要求我们登录。我们使用在安装程序时设置的用户名和密码登录，然后就可以开始使用它了。我们将在下一部分讨论如何登录和使用该工具。
- en: MSFC scan
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MSFC扫描
- en: 'Now, we are going to log in using the username and password that we set when
    we installed the tool. As we can see in the following screenshot, we have a web
    interface for using the tool:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将使用在安装工具时设置的用户名和密码登录。如下面的截图所示，我们可以看到一个用于使用该工具的网页界面：
- en: '![](assets/939175f3-5d1c-4471-9427-70ee44316f7d.png)Web Interface of Metasploit
    community'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/939175f3-5d1c-4471-9427-70ee44316f7d.png)Metasploit社区的网页界面'
- en: Now, we can access the account and go to our user settings or log out. We can
    also check for software updates.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以访问账户，进入用户设置或退出。我们也可以检查软件更新。
- en: The first time we log in, it will ask us to enter the activation key. The activation
    key will be sent as an email to the email address that we put when we downloaded
    the tool. Make sure you put a valid email address when you download the tool.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次登录时，它会要求我们输入激活码。激活码将通过电子邮件发送到我们在下载工具时提供的邮箱地址。确保在下载工具时提供有效的电子邮件地址。
- en: We're going to start a scan, and we are going to click on Project | New Project.
    We are going to call this project `metasploitable`, we are going to leave the Description empty,
    and then it's asking us for a Network range. We can set that the same way we did
    with Zenmap. We can set it to a range. It actually has a range that is within
    our subnet at the moment. It's `10.0.2.1` up to `254`. We can scan the whole network
    for vulnerabilities and exploits but for now, we're not going to do that; we're
    only going to target `10.0.2.4`, which is the Metasploitable machine.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开始扫描，并点击“项目 | 新建项目”。我们将把这个项目命名为`metasploitable`，将“描述”留空，然后它要求我们设置“网络范围”。我们可以像使用
    Zenmap 一样设置它。我们可以设置一个范围。实际上，它有一个范围，位于我们当前的子网内。是`10.0.2.1`到`254`。我们可以扫描整个网络的漏洞和攻击，但现在我们不会这么做；我们只会扫描`10.0.2.4`，也就是
    Metasploitable 机器。
- en: 'Now, we are going to click on Create Project. The following screenshot shows
    all the parameters we discussed:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将点击“创建项目”。下面的截图显示了我们讨论过的所有参数：
- en: '![](assets/90c43e85-b4c5-4d87-93cd-56dd21a4a3d0.png)Adding network range'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/90c43e85-b4c5-4d87-93cd-56dd21a4a3d0.png)添加网络范围'
- en: Now, the project has been created and we're going to start a scan on it. We
    are going to go on the Scan button on the left side of the screen and click that.
    We can just launch the scan like this, or we can go on Show Advanced Options to
    set some advanced options. If we have a range, we can use the exclude address
    to exclude some IPs. For example, if we were targeting the whole network from `1` to `254`,
    we can exclude our computer by just typing `10.0.2.15`, which is our IP, to exclude
    it from the search. You can also put a custom Nmap argument because Metasploit
    will actually use Nmap to get the services and the installed applications. We
    can add additional TCP ports or take away TCP ports. Again, we can do the same.
    We can even set the speed. We also have the UDP service discovery. It actually
    discovers the service that's installed on the port. We can also set credentials.
    If the target computer uses some sort of authentication then we can set it up,
    but our target doesn't use any of that, so we're fine. We can also set a tag for
    the target computer, or for the target scan. Now, we are not going to mess with
    these settings. Keep everything the same to keep it simple, and we are going to
    launch the scan. Give it some time to do the scan, and once this is over we'll
    see how we can analyze and discover, and see what we can do with the discovered
    information.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，项目已创建，我们将开始对其进行扫描。我们将点击屏幕左侧的“扫描”按钮，然后点击它。我们可以直接启动扫描，或者点击“显示高级选项”来设置一些高级选项。如果我们有一个范围，我们可以使用排除地址来排除某些IP。例如，如果我们要扫描从`1`到`254`的整个网络，我们可以通过输入`10.0.2.15`（这是我们的IP地址）将其排除在搜索之外。您还可以设置自定义
    Nmap 参数，因为 Metasploit 实际上会使用 Nmap 来获取服务和安装的应用程序。我们可以添加额外的 TCP 端口，或移除 TCP 端口。再者，我们可以做同样的事。我们甚至可以设置扫描速度。我们还可以启用
    UDP 服务发现，它实际上会发现端口上安装的服务。我们还可以设置凭据。如果目标计算机使用某种认证，我们可以进行设置，但我们的目标不使用任何认证，所以没有问题。我们还可以为目标计算机或目标扫描设置标签。现在，我们不打算调整这些设置。为了简便起见，我们保持设置不变，然后启动扫描。给它一些时间完成扫描，扫描完成后，我们将看看如何分析和发现，了解如何利用这些发现的信息。
- en: MSFC analysis
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MSFC 分析
- en: 'The scan process is over. It will nearly take two minutes, and it will discover
    one new host, because we only had one host, with 33 new services installed on
    it. Now, we''re going to go back and click on my Metasploitable machine to see
    what we have discovered. We can see in the following screenshot it has found 33 services
    and also it managed to detect one vulnerability:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描过程已完成。大约需要两分钟，它将发现一台新主机，因为我们只有一台主机，并且在其上安装了33个新服务。现在，我们将返回并点击我的 Metasploitable
    机器，查看我们发现了什么。我们可以在以下截图中看到，它发现了33个服务，并且成功检测到一个漏洞：
- en: '![](assets/b3a9072e-71d7-4e5a-9be9-6bee77512611.png)Results of Metasploitable
    scan'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/b3a9072e-71d7-4e5a-9be9-6bee77512611.png)Metasploitable 扫描结果'
- en: 'Go to Analysis | Hosts, and we will that see that we have our host here, and
    it has been scanned correctly. It''s a VMware, it''s a server, and it''s running
    on Linux 8.04:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 转到“分析 | 主机”，我们可以看到我们的主机在这里，并且已被正确扫描。它是 VMware，属于一台服务器，运行在 Linux 8.04 上：
- en: '![](assets/8cb75b3a-dd47-41d9-983d-bd796a21fabc.png)Host Scan'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/8cb75b3a-dd47-41d9-983d-bd796a21fabc.png)主机扫描'
- en: 'If we click on the IP, we will see in the following screenshot. The first thing
    that we see is the installed services:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击IP地址，我们会看到以下截图。我们首先看到的是安装的服务：
- en: '![](assets/2ea770b6-ee4f-4168-b37a-c8d413c5ca72.png)Installed services'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/2ea770b6-ee4f-4168-b37a-c8d413c5ca72.png)已安装的服务'
- en: We can see the NAME of the service, for example, dns, running on port `53`;
    the PROTO, which means the protocol is udp; it's an open port; and also we have
    the SERVICE INFORMATION.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到服务的名称，例如，`dns`，运行在端口`53`上；协议（PROTO）是`udp`；这是一个开放端口；同时我们也可以看到服务信息。
- en: 'You can switch through pages using the arrow buttons at the bottom-right of
    the page. It will show same results as Nmap, just with a better GUI. The Sessions tab is
    where we see the connections. If we exploited anything, we will see them in the
    sessions. The GUI looks like this:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用页面右下角的箭头按钮切换页面。它将显示与Nmap相同的结果，只是有一个更好的图形界面。会话（Sessions）标签是我们查看连接的地方。如果我们利用了任何东西，我们将在会话中看到它们。图形界面如下所示：
- en: '![](assets/9ebd4717-06c0-4f35-a9c7-beed49610da6.png)Exploited sessions'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/9ebd4717-06c0-4f35-a9c7-beed49610da6.png)已利用的会话'
- en: 'The Vulnerabilities tab will show you the vulnerabilities that have been discovered.
    With Nmap, we only got the services. In Metasploitable, it actually maps if it
    finds a vulnerability, and if Metasploit has an exploitation for that vulnerability
    it will actually show it to us. We can click on it and get more information about
    the vulnerability. The Credentials tab will show you if there are any interesting
    credentials that the program managed to find. We can see in the following screenshot
    that it''s managed to find the username and the password for PostgreSQL, which
    is postgres. It''s a weak password, and that is the password for the admin. If
    we click on the key icon under the VALIDATE column it will validate it for us,
    turning the status to Validated in the VALIDATION column:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞（Vulnerabilities）标签将显示已发现的漏洞。通过Nmap，我们只能获得服务信息。而在Metasploitable中，如果它发现了漏洞，且Metasploit有针对该漏洞的利用方法，它会将其展示给我们。我们可以点击它，获取更多关于该漏洞的信息。凭证（Credentials）标签将显示程序是否找到了任何有趣的凭证。我们可以看到在以下截图中，程序成功找到了PostgreSQL的用户名和密码，用户名是`postgres`，密码也为`postgres`。这是一个弱密码，且是管理员的密码。如果我们点击“验证”列下的密钥图标，它会为我们验证，状态将变为“已验证”。
- en: '![](assets/8b498ee4-3590-4575-84df-899f85d9d591.png)Credentials'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/8b498ee4-3590-4575-84df-899f85d9d591.png)凭证'
- en: 'Now, we can use the preceding information. We can go ahead and connect to the
    SQL database here using this information, using the username postgres and the
    password postgres. Let''s look at a quick example of this. We are going to our
    Terminal in Kali and we''re going to use the command that you used to connect
    to SQL, to PostgreSQL. It''s `psql`. Put the IP that we want to connect to after
    the `-h` option. The command is as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用前面的信息。我们可以继续使用这些信息连接到SQL数据库，使用用户名postgres和密码postgres。让我们来看一个简单的例子。我们将打开Kali中的终端，使用连接到SQL的命令，即`psql`。在`-h`选项后输入我们要连接的IP地址。命令如下所示：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, we enter the username. Now, it will ask for the password, and we're going
    to enter the password that we captured, which is postgres. We will be logged in
    to the database. We can run any SQL command now on the target computer. SQL is
    the language that is used to communicate with databases. We not going to go into
    too much detail here, just that we managed to capture a username and a password
    for a database, and the database we can communicate with using the SQL language.
    We can run the `select current_database();` command just as an example. We can
    see that it selected our `current_database`, which is also called `postgres`.
    Just a quick example to show that the captured data is correct; in Metasploit,
    in the Captured Data tab, there is no captured data from the file or from the
    target computer. But on Notes, we will see some interesting notes, some of them
    about the HTTP requests for some of the methods that we use. We can go through
    the notes, which can be useful for the information gathering process.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们输入用户名。现在，它会要求输入密码，我们将输入我们捕获的密码，即postgres。我们将登录到数据库。现在我们可以在目标计算机上运行任何SQL命令。SQL是与数据库进行通信的语言。我们这里不会深入讨论太多，只是说明我们成功捕获了数据库的用户名和密码，并且我们可以使用SQL语言与数据库进行通信。我们可以运行`select
    current_database();`命令作为示例。我们可以看到它选择了我们的`current_database`，也叫做`postgres`。这是一个快速的示例，证明捕获的数据是正确的；在Metasploit的捕获数据（Captured
    Data）标签中，没有来自文件或目标计算机的捕获数据。但在备注（Notes）中，我们将看到一些有趣的备注，其中一些关于我们使用的一些方法的HTTP请求。我们可以浏览这些备注，这对信息收集过程是有帮助的。
- en: 'The File Shares tab will show us any files being shared from the target computer.
    The Attempts tab will show you the attempts that we did on the target computer,
    and the Modules tab will show us the modules that can be used to exploit any found
    vulnerabilities. We have a vulnerability called the Java RMI Server, and we have
    a module to discover the Java RMI Server vulnerability. We''re going to launch Exploit:
    Java RMI Server Insecure Default Configuration Java Code Execution, and we will
    do this launch straight from the tool. We''re just going to click on Launch. It
    will allow us to run the exploit from within Metasploit Community. `exploit/multi/misc/java_rmi_server` is
    the module name; do `use exploit/multi/misc/java_rmi_server`, set the `PAYLOAD`,
    set the `LHOST`, set the `RHOST`, and then `exploit`, the same way that we did
    it before in `msfconsole`. Alternatively, we can let Metasploit Community do all
    the work for us.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**File Shares**标签将显示目标计算机上共享的任何文件。**Attempts**标签将显示我们在目标计算机上进行的尝试，而**Modules**标签将显示我们可以用来利用已发现漏洞的模块。我们有一个漏洞叫做**Java
    RMI Server**，并且我们有一个模块可以发现**Java RMI Server**漏洞。我们将启动**Exploit: Java RMI Server
    Insecure Default Configuration Java Code Execution**，并且我们将直接从工具中启动它。我们只需要点击**Launch**。它将允许我们在Metasploit
    Community中运行这个利用程序。`exploit/multi/misc/java_rmi_server`是模块名；执行`use exploit/multi/misc/java_rmi_server`，设置`PAYLOAD`，设置`LHOST`，设置`RHOST`，然后执行`exploit`，就像我们在`msfconsole`中做的那样。或者，我们可以让Metasploit
    Community为我们完成所有的工作。'
- en: 'We can see that it already picked the target address correctly, and we are
    going to set the connection to Reverse, and we are going to keep the Payload Type as Meterpreter.
    Now, we can choose the command shell as we can see in the following screenshot,
    which is what we used before, and Meterpreter is just a different type of payload
    that we''ll talk about later. Now, we are just going to run the module by clicking
    on Run Module:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到它已经正确选择了目标地址，并且我们将连接设置为**Reverse**，同时将**Payload Type**保持为**Meterpreter**。现在，我们可以选择命令行界面，如以下截图所示，这就是我们之前使用的，Meterpreter只是另一种类型的负载，我们稍后会详细介绍。现在，我们只需要点击**Run
    Module**来运行模块：
- en: '![](assets/f3c8459f-d47f-40eb-b58c-72cb02349e1b.png)Selection of command shell'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/f3c8459f-d47f-40eb-b58c-72cb02349e1b.png)命令行界面的选择'
- en: 'As we can see in the following screenshot, the module did run and the output
    is very similar to what you get from the Metasploit console, and it says that
    session 1 is open. It has already created a session for us. Now, we can communicate
    with it:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在以下截图中看到的，模块确实已经运行，并且输出非常类似于从Metasploit控制台得到的输出，并且它显示会话1已打开。它已经为我们创建了一个会话。现在，我们可以与它进行通信：
- en: '![](assets/ec947ac8-c83c-4fe0-881f-7a7e4b5e3507.png)Output of the Command shell'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/ec947ac8-c83c-4fe0-881f-7a7e4b5e3507.png)命令行界面的输出'
- en: We can see the Session tab as seen in the preceding screenshot. It has the number 1.
    If we click on that we will see that, we have a session open and it's on the Metasploitable
    machine, or on the Metasploitable project, and it used the Java RMI Server. If
    we click on that session we will see all the things that we can do on that computer.
    Now, we can use Collect System Data to get some sensitive data, but we won't be
    able to use that because it's all for the Pro version, and we have the Community
    version. We can use Access Filesystem, and we can literally have a web-based file
    browser. We can browse through the files of the target computer. Or we can just
    get a Command Prompt for the Meterpreter, like what we used to get before. If
    we go to Command shell by going to the previous page, we will see that we have
    a Meterpreter command shell that allows us to use the Meterpreter payload.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到前面截图中显示的**Session**标签。它的编号是1。如果我们点击它，我们会看到一个会话已经打开，并且是在Metasploitable机器上，或者是Metasploitable项目上，并且它使用了Java
    RMI服务器。如果我们点击该会话，我们将看到我们可以在那台计算机上执行的所有操作。现在，我们可以使用**Collect System Data**来获取一些敏感数据，但我们无法使用该功能，因为它仅适用于Pro版本，而我们的是社区版。我们可以使用**Access
    Filesystem**，并且我们实际上可以拥有一个基于Web的文件浏览器。我们可以浏览目标计算机上的文件，或者我们可以获取一个Meterpreter的命令提示符，就像我们之前所使用的那样。如果我们通过返回上一页进入**Command
    shell**，我们将看到我们有一个Meterpreter命令行界面，允许我们使用Meterpreter负载。
- en: Now, we are going to study the Meterpreter payload and how to use it in the
    post-exploitation, but we are just going to see that we have full access to the
    target computer from here and that we are able to do whatever we want to do on
    it. Metasploit did everything through the browser. We didn't have to go and run
    Metasploit and manually configure the payload and the exploit. Now, there is one
    last thing that we will see, which is the Modules tab. Some of these modules don't
    have to give us full access. Some of them can only be used to do a denial of service,
    and some of them are code execution vulnerabilities, but they might not work.
    We can try them and see if they work. We can click on them and run them from within
    the computer.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将研究Meterpreter有效负载以及如何在后期利用中使用它，但我们只会看到从这里我们可以完全访问目标计算机，并能够在其上执行任何我们想做的操作。Metasploit通过浏览器完成了一切。我们无需手动运行Metasploit并配置有效负载和利用程序。现在，我们将看到最后一个功能——模块标签。某些模块不需要为我们提供完全访问权限。有些模块只能用于执行拒绝服务攻击，有些则是代码执行漏洞，但它们可能无法工作。我们可以尝试它们，看看它们是否有效。我们可以点击它们并从计算机内部运行。
- en: In the gathering module, it doesn't exploit anything. It just allows us to upload
    files, and some of them give us a Meterpreter session. Just click on it, and we
    can run it from within the web interface. The tool also offers other features,
    such as the Web Apps feature, which scans for web apps. We can just go to report
    options, where we can create a report of the findings of everything that has been
    found, but the problem is these features are limited to the Pro edition. We can't
    really use them unless we pay for the program.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在收集模块中，它并不利用任何漏洞。它只是允许我们上传文件，其中一些文件会给我们带来一个Meterpreter会话。只需点击它，我们就可以从Web界面内运行它。该工具还提供其他功能，例如Web应用功能，可以扫描Web应用。我们只需进入报告选项，就可以创建一个包含所有发现的报告，但问题是这些功能仅限于专业版。除非我们支付费用，否则无法使用这些功能。
- en: Installing Nexpose
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Nexpose
- en: In this section, we will discuss a tool called Nexpose. Nexpose is made by Rapid7\.
    It's made by the same people that made Metasploit and Metasploit Community, and
    it's similar to Metasploit Community in the sense that it has a web GUI and it
    allows us to discover, assess, and act on discovered vulnerabilities. It also
    maps these vulnerabilities to existing exploits, but the difference is Metasploit
    Community only showed us exploits that can be used within Metasploit, whereas
    Nexpose actually shows us exploits that have been published somewhere other than
    Rapid7 and Metasploit. It works on a larger scale, it shows us more vulnerabilities,
    and it also helps us to create a report at the end of the scan so that we can
    share it with the technical people, and a high-level small report that can be
    shared with the managers. It also helps us create schedule scans. Suppose, for
    example, we have a company, or we are working on a big infrastructure and we want
    to do regular scans every week or every month; we can do that using this tool.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论一个名为Nexpose的工具。Nexpose由Rapid7公司开发。它由与Metasploit和Metasploit Community相同的团队制作，在某些方面与Metasploit
    Community相似，因为它具有Web图形界面，允许我们发现、评估并处理发现的漏洞。它还将这些漏洞映射到现有的利用程序，但不同之处在于，Metasploit
    Community只向我们展示可以在Metasploit内使用的漏洞，而Nexpose实际上会展示在Rapid7和Metasploit之外发布的漏洞。它的工作范围更广，展示了更多漏洞，并且帮助我们在扫描结束时创建报告，以便与技术人员共享，同时也能生成一个适合与管理层共享的简要报告。它还帮助我们创建定时扫描。例如，假设我们有一家公司，或者我们在处理大型基础设施，想要每周或每月进行定期扫描；我们可以使用这个工具来实现。
- en: 'Let''s see how to install it and run it, and the differences will become more
    clear:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何安装并运行它，区别会更加明显：
- en: Nexpose doesn't come pre-installed in Kali Linux; we have to install it manually.
    To download it you need to download it from [https://www.rapid7.com/products/nexpose/download/](https://www.rapid7.com/products/nexpose/download/).
    It'll ask you to fill in your name and address. Fill it in and download it. We
    will download the Community version, which is free. The first thing we are going
    to do before we can install it is stop the PostgreSQL service that comes it installed
    with, or that is running in Kali Linux. Just launch the `service postgresql stop` command, which
    will stop the SQL service.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nexpose在Kali Linux中并未预装，我们需要手动安装。要下载它，你需要从[https://www.rapid7.com/products/nexpose/download/](https://www.rapid7.com/products/nexpose/download/)下载。它会要求你填写姓名和地址。填写并下载。我们将下载免费的社区版本。在安装之前，首先要停止与其一同安装的PostgreSQL服务，或者停止在Kali
    Linux中运行的PostgreSQL服务。只需运行`service postgresql stop`命令即可停止SQL服务。
- en: 'Usually, when we run the Terminal we won''t be in the `Downloads` directory.
    We will need to change our directory to the `Downloads` directory using the `cd` command.
    Once we''re in the `Downloads` directory we can list all the available files,
    and we will find the `Nexpose Rapid7Setup-Linux64.bin` setup file. We need to
    change the permissions of this to an executable. If you have already changed the
    permissions, that''s when it will appear in green if we do the `ls` command. Let''s
    first use the `chmod` command to change the permissions so that we can execute
    that file. The command will be `chmod +x filename`; `filename` is the file that
    we want to change the permission of; for us it''s `Rapid7Setup-Linux64.bin`. Here
    is the command:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，当我们打开终端时，默认不会处于`Downloads`目录。我们需要使用`cd`命令切换到`Downloads`目录。当我们进入`Downloads`目录后，可以列出所有可用的文件，我们会找到`Nexpose
    Rapid7Setup-Linux64.bin`安装文件。我们需要将该文件的权限更改为可执行文件。如果你已经更改了权限，当我们执行`ls`命令时，它将以绿色显示。首先，我们使用`chmod`命令更改权限，使其成为可执行文件。命令为`chmod
    +x filename`；`filename`是我们想要更改权限的文件，对于我们来说是`Rapid7Setup-Linux64.bin`。下面是命令：
- en: '[PRE2]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now to run this installer. To run an executable in Linux systems, all we have
    to do is type `./` then enter the file that you want to run. For us, it''s `Rapid7Setup-Linux64.bin`.
    The command will be as follows:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，运行这个安装程序。要在Linux系统中运行可执行文件，我们只需输入`./`，然后输入你想运行的文件名。对于我们来说，是`Rapid7Setup-Linux64.bin`。命令如下：
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'An installer will pop up, as seen in the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 安装程序会弹出，如下截图所示：
- en: '![](assets/38ca95d0-767b-45d9-b6fb-89e263984d70.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/38ca95d0-767b-45d9-b6fb-89e263984d70.png)'
- en: Now, all we have to do is click Next, and then it will ask us to accept the
    agreement. We are going to install the console with the scan engine. We might
    come across a problem. Nexpose is only compatible with Kali 2\. If we want to
    go ahead with this, we're going to modify two files on our local system to make
    our system look like Kali 2 so that the installer will let us install it on our
    system. But if you don't face this issue, then you can just click Next at this
    point, but we will just go through the steps and modify two files to make my system
    look like Kali 2.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们只需要点击“下一步”，然后它会要求我们接受协议。我们将安装带有扫描引擎的控制台。我们可能会遇到一个问题：Nexpose只兼容Kali 2。如果我们想继续安装，我们需要修改本地系统的两个文件，使我们的系统看起来像Kali
    2，以便安装程序允许我们在系统上安装它。如果你没有遇到这个问题，那么现在只需点击“下一步”，但我们将通过修改两个文件来使我的系统看起来像Kali 2。
- en: 'Follow these steps only if you get an error saying your system is not compatible:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只有当你遇到系统不兼容的错误时，才按照以下步骤操作：
- en: Click on Finish. The file that contains the instructions that we need to change
    the version of our system to Kali 2 is in this book's GitHub repository ([https://github.com/PacktPublishing/Fundamentals-of-Ethical-Hacking-from-Scratch](https://github.com/PacktPublishing/Fundamentals-of-Ethical-Hacking-from-Scratch)).
    The two files that need to be changed are `lsb-release` and `os-release`. We are
    going to open two tabs, one for each file, and the first one is in the `/etc` directory,
    and it's called `lsb-release`. Before we modify the file, we are actually going
    to copy it and store a backup of it, because after we finish this step we are
    going to restore it to the way it was.
  id: totrans-73
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击完成（Finish）。我们需要修改系统版本为Kali 2的说明文件在本书的GitHub仓库中（[https://github.com/PacktPublishing/Fundamentals-of-Ethical-Hacking-from-Scratch](https://github.com/PacktPublishing/Fundamentals-of-Ethical-Hacking-from-Scratch)）。需要修改的两个文件是`lsb-release`和`os-release`。我们将打开两个标签页，每个文件一个，第一个文件位于`/etc`目录，名为`lsb-release`。在修改文件之前，我们将先复制它并备份，因为完成此步骤后我们将恢复文件至原始状态。
- en: We are going to create a new folder, and we are going to call it `backup`, and
    we will paste the file in the `backup` folder. After we do that we are going to
    modify the file according to the instructions. We are going to open it with Leafpad,
    and we are going to copy all of the content, save it, and quit. We are going to
    do the same with the next file, which is `os-release`, which is stored in `/usr/lib/os-release`.
    We are going to copy the file and put it in our `backup` folder. Then we are going
    to modify the code as per the instructions.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将创建一个新的文件夹，命名为`backup`，然后将文件粘贴到`backup`文件夹中。完成后，我们将根据说明修改文件。我们将使用Leafpad打开它，复制所有内容，保存并退出。接着，我们将对下一个文件进行相同的操作，这个文件是`os-release`，存储在`/usr/lib/os-release`路径下。我们将复制该文件并将其放入`backup`文件夹中，然后根据指示修改代码。
- en: OK, once everything is done, we are going to go back and run the installer again,
    and it should think that we have Kali 2 installed and proceed through the installation.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 好的，一旦一切完成，我们将返回并再次运行安装程序，它应该会认为我们已经安装了Kali 2，并继续安装。
- en: Scroll down, click Accept, the Next, and we will see that the software thinks
    that we have Kali 2, so it will let us proceed through the installation.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动，点击接受（Accept），然后点击下一步（Next），我们将看到软件认为我们已经安装了Kali 2，所以它会允许我们继续安装。
- en: 'Now, the port is already set to `5432` and we are going to click on Next:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，端口已设置为`5432`，我们将点击下一步（Next）：
- en: '![](assets/0d304feb-c5bb-4347-a0d3-fa5fe1774ac0.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0d304feb-c5bb-4347-a0d3-fa5fe1774ac0.png)'
- en: 'Now, we are going to put First Name, Last Name, and the Company. It will ask
    us to put the port for the database that''s going to be used with Nexpose:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要输入名字、姓氏和公司信息。系统会要求我们输入数据库的端口，该数据库将与Nexpose一起使用：
- en: '![](assets/8c2914b9-3ff7-485d-946a-67ccfc104023.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8c2914b9-3ff7-485d-946a-67ccfc104023.png)'
- en: 'Make sure we don''t check the box that is shown in the following screenshot.
    We will have a lot of issues if we check this box during installation; it basically
    should start Nexpose once the installation is over, but we are not going to check
    it. We will just go to install it and then start it later when we want to use
    it. We are not going to check this box, make sure it''s unchecked. And that''s
    it, now it''s going to install it for us:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保我们不勾选以下截图中显示的复选框。如果在安装过程中勾选此框，会出现很多问题；该框的作用是安装完成后自动启动Nexpose，但我们不打算勾选它。我们只会进行安装，安装完成后再手动启动它。请确保没有勾选此框，确保它保持未选中状态。现在，它将为我们进行安装：
- en: '![](assets/4764da1a-f52e-4828-ba02-aaeea9692ee6.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4764da1a-f52e-4828-ba02-aaeea9692ee6.png)'
- en: 'OK, once the the installation is successful, as we haven''t started Nexpose
    yet, if we go to `https://localhost:3780` then nothing''s going to work. We need
    to run the command first and then we can can access it. We are going to talk about
    that in the next section. For now, we are going to click on Finish, and we''re
    done:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，一旦安装成功，由于我们还没有启动Nexpose，如果我们访问`https://localhost:3780`，什么也不会发生。我们需要先运行一个命令，然后才能访问它。我们将在下一节讲解这个过程。目前，我们点击完成（Finish），这样就完成了：
- en: '![](assets/71a9802a-e8dc-40a9-8fd1-c6b614cecdd2.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/71a9802a-e8dc-40a9-8fd1-c6b614cecdd2.png)'
- en: Now, we're going to go back and make sure we set our files back to the way they
    were. Now, for those of you who haven't modified them, again skip this step; if
    you did modify them, then make sure to go back and set them back to the way they
    were.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将返回并确保将文件恢复到原来的状态。如果你没有修改过文件，可以跳过这一步；如果你修改过文件，请确保将它们恢复到原来的状态。
- en: Running Nexpose
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行 Nexpose
- en: OK, now that we have installed Nexpose successfully, let's see how we can run
    it and see what it is. We've spoken about it a lot and we went through the installation
    process, but we still haven't seen what the tool does. The first thing to do before
    we can run the tool is to make sure that the database that comes with Kali Linux
    is turned off, because Nexpose uses its own database. If we have both of them
    running on the same port, they'll conflict with each other. The first thing we're
    going to do is stop the `postgresql` service; make sure that we have it in our
    mind that every time, before we run Nexpose, we turn off our database. We do it
    using the same command that we used in Chapter 10, *Gaining Access to Computer
    Devices*. It's `service postgresql stop`, and it will make sure that the service
    is stopped.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在我们已经成功安装了 Nexpose，接下来让我们看看如何运行它并了解它的功能。我们之前讨论了很多，并且走过了安装过程，但我们还没有看到工具的实际功能。在我们能够运行工具之前，首先要确保
    Kali Linux 自带的数据库已关闭，因为 Nexpose 使用的是自己的数据库。如果它们在同一个端口上运行，会互相冲突。我们要做的第一件事是停止`postgresql`服务；记住，每次运行
    Nexpose 之前，都要关闭数据库。我们可以使用在第十章*获取计算机设备访问权限*中用过的命令来做到这一点。命令是`service postgresql
    stop`，它会确保服务已停止。
- en: 'Now, we''re going to navigate to the location where we installed Nexpose. Unless
    we changed the location during the installation process, it should be installed
    in the `/opt/rapid7/nexpose/` directory. The file that runs the server is stored
    in the directory called `nsc`, and the file that we want to run is called `nsc.sh`.
    We run it just the same way we ran the installer before. As we said before, to
    run an executable, always use `./` and then write the name of the executable.
    It''s `nsc.sh`:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将导航到安装 Nexpose 的位置。除非在安装过程中更改了安装位置，否则它应该安装在`/opt/rapid7/nexpose/`目录下。运行服务器的文件存储在名为`nsc`的目录中，我们要运行的文件是`nsc.sh`。我们可以像之前运行安装程序一样运行它。正如我们之前所说，运行可执行文件时，始终使用`./`，然后写上可执行文件的名称，即`nsc.sh`：
- en: '![](assets/c25016f4-6df6-43fc-a237-1518846dab59.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c25016f4-6df6-43fc-a237-1518846dab59.png)'
- en: Running this for the first time might take some time. Just let it do its thing
    until it runs, and once it finishes loading the framework we'll see how we can
    access it and use it.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次运行时可能需要一些时间。只需要让它运行，直到加载完成，一旦加载框架完成，我们就能看到如何访问并使用它。
- en: 'The tool has loaded successfully, and as you can see, it''s telling us that
    we can navigate to it using the `https://localhost:3780` URL :'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 工具已经成功加载，如你所见，它告诉我们我们可以通过`https://localhost:3780` URL进行访问：
- en: '![](assets/f262c4a5-c942-49e5-8650-df73cce99181.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f262c4a5-c942-49e5-8650-df73cce99181.png)'
- en: 'What we''re going to do now is launch our browser and copy the URL that it
    just gave us. Now it''s asking us to log in. Log in using the username and password
    that you created when you installed the tool:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们要做的是启动浏览器并复制它刚才给我们的URL。现在它要求我们登录。使用安装工具时创建的用户名和密码进行登录：
- en: '![](assets/570df380-8f65-49b5-9ed0-5b6c77f055c5.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/570df380-8f65-49b5-9ed0-5b6c77f055c5.png)'
- en: 'After logging in successfully, we can see in the following screenshot that
    the first thing it asks us to do is to enter the product key:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 登录成功后，我们可以在下图看到，首先它要求我们输入产品密钥：
- en: '![](assets/bea3d545-811b-4e6d-8652-0d3173fcb1a8.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/bea3d545-811b-4e6d-8652-0d3173fcb1a8.png)'
- en: 'Now, we know this is a free version, and when we downloaded the tool we had
    to fill out a form. In that form we put our email address, and then they send
    the product key to our email. Go to your email and get the product key and paste
    it. After pasting it, click on ACTIVATE WITH KEY. As we can see, the activation
    is successful. It''s going to refresh now. As we can see in the following screenshot,
    it is just showing us information about the license. Everything is activated and
    we''re good to go:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们知道这是一个免费版本，当我们下载该工具时，我们需要填写一份表格。在表格中，我们填写了电子邮件地址，然后他们会将产品密钥发送到我们的邮箱。去你的邮箱获取产品密钥并粘贴它。粘贴后，点击**使用密钥激活**。如我们所见，激活成功。它现在会刷新。如我们看到的下图，它只显示了关于许可证的信息。所有内容都已激活，我们可以开始使用了：
- en: '![](assets/cf179be1-3dde-48a2-ac76-8c9963d72c29.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cf179be1-3dde-48a2-ac76-8c9963d72c29.png)'
- en: 'We are going to go to Home from the left menu. We can see in the preceding
    screenshot that everything is empty. It is the home page of the tool. Before we
    start talking about what everything means, let''s go ahead and add a target, and
    then we''ll do a test and we''ll see because this stuff will be filled after we
    do a test. The first thing we are going to do is click on Create and click on Site to
    add a target:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从左侧菜单进入主页。我们可以在上面的截图中看到，一切都是空的。这是工具的主页。在我们开始讨论每个功能的意义之前，先添加一个目标，然后我们会做一个测试，因为这些内容会在我们测试后自动填充。我们要做的第一件事是点击**Create**，然后点击**Site**来添加目标：
- en: '![](assets/a0f54f7a-1be9-4a93-adde-c10b121b9866.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a0f54f7a-1be9-4a93-adde-c10b121b9866.png)'
- en: 'We are going to set the Name to `metasploitable`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将目标的**Name**设置为`metasploitable`：
- en: '![](assets/ff9cdaae-58c5-492e-9dee-b7c384d94a61.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ff9cdaae-58c5-492e-9dee-b7c384d94a61.png)'
- en: 'We are going to go to the **ASSETS** tab and we''re going to add the target.
    The target can be arranged the same way we added it when we were doing the network
    penetration things with Zenmap. We can add a range, or we can add a specific IP.
    In our example, we are actually targeting the Metasploitable machine. We''re going
    to add our target, which is `10.0.2.4`, and we''re going to add this to a group,
    and we''ll call that `test`, our group name:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将进入**ASSETS**标签页，添加目标。目标的添加方式与我们之前使用Zenmap进行网络渗透测试时相同。我们可以添加一个范围，或者添加一个特定的IP地址。在我们的例子中，我们实际是针对Metasploitable机器进行攻击。我们将添加目标，目标是`10.0.2.4`，并将其添加到一个组中，组名为`test`：
- en: '![](assets/dc5ad3b4-a116-4b3f-a65a-ff1244eedd18.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dc5ad3b4-a116-4b3f-a65a-ff1244eedd18.png)'
- en: Now, in the AUTHENTICATION tab, if the target uses some sort of authentication,
    nobody can access the target unless they need to authenticate with some sort of
    a service, such as an FTP service, a web HTTP authentication, a Telnet, or an
    SQL server. We can pick it from the AUTHENTICATION tab, enter the domain, username,
    and password, confirm your password, and that way the framework will be able to
    authenticate with that service and test the security of your server. Now, our
    server doesn't use any type of authentication. We don't need it. Also, if we are
    targeting a web application that has a login page, for example for users of Facebook,
    then we won't have access to most of Facebook's features unless we log in using
    a certain username and a password. Using this feature here, we can log in and
    then test the security of our target.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在**AUTHENTICATION**标签页中，如果目标使用某种认证方式，除非通过某种服务（如FTP服务、Web HTTP认证、Telnet或SQL服务器）进行身份验证，否则任何人都无法访问目标。我们可以从**AUTHENTICATION**标签页中选择认证方式，输入域名、用户名和密码，并确认密码。这样，框架就能够通过该服务进行认证，并测试服务器的安全性。现在，我们的服务器不使用任何认证方式，因此我们不需要此功能。此外，如果我们正在攻击一个需要登录的Web应用程序，例如Facebook的用户登录页面，那么除非我们使用用户名和密码登录，否则无法访问Facebook的大部分功能。使用这里的功能，我们可以先登录，然后再测试目标的安全性。
- en: 'The TEMPLATES tab is where we select the scan type. It''s very similar to the
    scan type with Zenmap. We''ve seen in Zenmap we had a quick scan, quick scan plus,
    and intense scan. It is the same. Each one of these profiles is different. It
    scans different things. For example, we have the Full audit, which takes a lot
    of time but pretty much checks for everything. Then we have Full audit enhanced
    logging without Web Spider:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**TEMPLATES**标签页是我们选择扫描类型的地方。它与Zenmap中的扫描类型非常相似。在Zenmap中，我们有快速扫描、快速扫描增强版和强力扫描，概念是一样的。每个配置文件不同，扫描的内容也不一样。例如，我们有**Full
    audit**，虽然时间较长，但几乎可以检查所有内容。还有**Full audit enhanced logging without Web Spider**：'
- en: '![](assets/07743c1c-8f00-4a40-98dd-03481441ddf5.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/07743c1c-8f00-4a40-98dd-03481441ddf5.png)'
- en: A Web Spider is a tool or a script that finds all the files and directories
    in our targets. The default one is the Full audit without Web Spider. We also
    have network-specific profiles, and we have web audits as well. I really encourage
    you to try most of them, and get familiar with them.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Web Spider是一个工具或脚本，用来查找目标中的所有文件和目录。默认的扫描配置是**Full audit without Web Spider**。我们也有网络专用的配置文件，此外还有Web审计。我非常鼓励你尝试大多数配置文件，并熟悉它们。
- en: 'We''re only going to try Full audit enhanced logging without Web Spider because
    using them is the same. We will be scanning for ICMP, TCP, and UDP ports. We are
    leaving it the same. We are going to leave the ENGINE tab the same as well, which
    means it''s going to use the local engine that we installed instead of using the
    one that is provided by Rapid7\. In the ALERTS tab, we can set up custom alerts
    so that when a vulnerability is found, we get a notification. The SCHEDULE is
    a really cool feature. Now, say we are working for a company or for an enterprise
    that keeps pushing code, new code every day, or maybe we do a test today and everything
    we are working on is good; our web servers, our programs, your applications, everything
    is up to date and there''s no vulnerabilities in them. Let''s say tomorrow we
    pushed a new vulnerable code, or maybe tomorrow someone discovers a new vulnerability
    with a program that we are using on our web server. We are not secure any more.
    This feature allows us to schedule this test so that it runs every week, or every
    hour, or every month, depending on how critical it is. Go into Create Schedule and
    create the schedule. We can set a Start Date, and we can set the Frequency to Every
    Day, every Thursday, every 26th, depending on what we want:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只会尝试进行完整的审计增强日志记录，而不使用Web Spider，因为使用它们是一样的。我们将扫描ICMP、TCP和UDP端口。我们将保持不变。我们也将保持ENGINE选项卡不变，这意味着它将使用我们安装的本地引擎，而不是使用Rapid7提供的引擎。在警报选项卡中，我们可以设置自定义警报，以便在发现漏洞时收到通知。计划是一个非常酷的功能。现在，假设我们为一家公司或企业工作，他们每天都在推送代码，或者今天我们做了一个测试，我们正在处理的一切都很好；我们的Web服务器、程序、应用程序，一切都是最新的，其中没有漏洞。假设明天我们推送了一个新的有漏洞的代码，或者明天有人发现了我们在Web服务器上使用的程序的一个新漏洞。我们就不再安全了。这个功能允许我们安排这个测试，使其每周、每小时或每月运行一次，具体取决于其重要性。进入创建计划并创建计划。我们可以设置开始日期，并将频率设置为每天、每周四、每月26日，具体取决于我们的需求：
- en: '![](assets/e4378e1a-e235-4eab-bb10-acffc3889da2.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e4378e1a-e235-4eab-bb10-acffc3889da2.png)'
- en: We create that schedule, and then the scan will run every interval that we specify,
    and we can even get it to produce a report for us. When we can go over the report
    and see what's changed, or what has been discovered.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了计划，然后扫描将在我们指定的每个间隔运行，我们甚至可以让它为我们生成报告。当我们查看报告并看到有什么变化，或者发现了什么时，我们可以进行检查。
- en: 'The most important part is that we put our target in the ASSETS tab. Then we
    select a template from the TEMPLATES tab. We have both of these tabs configured,
    we''re going to click on Save and Scan, which will save this configuration and
    start a scan for us. As we can see, our asset discovery is in progress, and after
    that we will talk about the results that we got:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的部分是我们将目标放在ASSETS选项卡中。然后我们从TEMPLATES选项卡中选择一个模板。当这两个选项卡都配置好后，我们将点击保存并扫描，这将保存这个配置并为我们启动扫描。正如我们所看到的，我们的资产发现正在进行中，之后我们将讨论我们得到的结果：
- en: '![](assets/8142414b-987d-43be-a9c6-5e6f3eb81bf3.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8142414b-987d-43be-a9c6-5e6f3eb81bf3.png)'
- en: Nexpose analysis
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nexpose分析
- en: 'Our scan is over and we are on the Assets page, and as we can see in the following
    screenshot we have one asset scanned. We can see that the asset is running Ubuntu,
    and the skill that we need to hack into this asset is Novice:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的扫描已经结束，我们现在在资产页面上，正如我们在下面的截图中所看到的，我们已经扫描了一个资产。我们可以看到这个资产正在运行Ubuntu，我们需要入侵这个资产的技能是初学者：
- en: '![](assets/53386dd5-d744-45c6-b175-958e3f784d66.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/53386dd5-d744-45c6-b175-958e3f784d66.png)'
- en: From the preceding screenshot, we can see that Nexpose shows us much more information
    than Metasploit Community, and it's a much more advanced vulnerability management
    framework.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图中，我们可以看到Nexpose向我们展示的信息比Metasploit Community更多，它是一个更先进的漏洞管理框架。
- en: We can see that we scanned one target, METASPLOITABLE, and the site is global.
    It's running on Ubuntu Linux 8.04, and we discovered no malware, 175 exploits, and 306 Vulnerabilities.
    Remember that with Metasploit Community we only discovered 1 exploitable vulnerability
    and 8 modules that can be used. Here, we discovered 306 vulnerabilities. We discovered
    many more vulnerabilities and exploits.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们扫描了一个目标，METASPLOITABLE，该站点是全球的。它运行在Ubuntu Linux 8.04上，我们没有发现恶意软件，175个漏洞利用和306个漏洞。请记住，使用Metasploit
    Community，我们只发现了1个可利用的漏洞和8个可用的模块。在这里，我们发现了306个漏洞。我们发现了更多的漏洞和漏洞利用。
- en: 'We can see that there is a risk factor, and the last time that the scan was
    done. If we scroll down, we can see the OPERATING SYSTEMS that we discovered.
    Again, it''s Ubuntu Linux 8.04. We can see the SOFTWARE that is installed on the
    target computer, not only the services that''s running on ports. We can see actual
    software installed on the target computer:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到有一个风险因素，以及上次扫描的时间。如果我们向下滚动，我们可以看到我们发现的**操作系统**。同样，它是**Ubuntu Linux 8.04**。我们可以看到安装在目标计算机上的**软件**，不仅是运行在端口上的服务。我们可以看到实际安装在目标计算机上的软件：
- en: '![](assets/cc14a36f-3b93-4367-83c9-484a640f89f9.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cc14a36f-3b93-4367-83c9-484a640f89f9.png)'
- en: This can be very useful after we hack the computer. After we've managed to hack
    into it, it's very useful to find local exploits that can be used to increase
    our privileges. For example, if we manage to, if we got a normal user and you
    wanted to become a root, then we can use a local buffer overflow to increase our
    privileges or to do other kinds of stuff. These are very useful in terms of post-exploitation.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们成功入侵计算机之后，这可能非常有用。在我们成功入侵后，找到可以用来提升权限的本地漏洞非常有用。例如，如果我们设法，如果我们获得了一个普通用户并且想要成为root用户，那么我们可以使用本地缓冲区溢出来提升权限或执行其他类型的操作。这些在后期利用方面非常有用。
- en: 'If we go down, we''ll see the SERVICES that are installed on the target computer.
    Just like Nmap gave it to us, we can see that HTTP is running, DNS, and so on:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们继续往下走，我们将看到安装在目标计算机上的**服务**。就像Nmap给我们的那样，我们可以看到**HTTP**正在运行，**DNS**等等：
- en: '![](assets/166ee2e7-d5a9-4d06-a8bb-a1fdd9534d73.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/166ee2e7-d5a9-4d06-a8bb-a1fdd9534d73.png)'
- en: 'If we click on any of these services we will see more information about them.
    For example, with an HTTP service, we have a description about it, and the ports
    that it''s running on. We can see that HTTP is running on port `80` and on port `8180`:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击任何这些服务，我们将看到更多关于它们的信息。例如，对于HTTP服务，我们有关于它的描述，以及它运行的端口。我们可以看到HTTP运行在端口`80`和端口`8180`上：
- en: '![](assets/2a8b5f62-f01a-4016-8189-b05b75efe9d1.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2a8b5f62-f01a-4016-8189-b05b75efe9d1.png)'
- en: 'Now, let''s scroll up, and if we want to have a closer look at the vulnerabilities
    we can go to the Vulnerabilities page:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们向上滚动，如果我们想更仔细地查看漏洞，我们可以转到**漏洞**页面：
- en: '![](assets/da6abec9-bab6-4788-9b2b-19a52233fe6e.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/da6abec9-bab6-4788-9b2b-19a52233fe6e.png)'
- en: 'As you can can see in the preceding screenshot, we have a graph about the vulnerabilities
    categorized based on their risk factor on the left, and on the right they''re
    categorized based on the skill level needed in order to exploit them. As we scroll
    down, we can see a list of all of vulnerabilities, and we can switch between them
    using the arrows:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的截图中所看到的，我们有一个关于漏洞的图表，左侧按照风险因素分类，右侧按照利用它们所需的技能水平分类。当我们向下滚动时，我们可以看到所有漏洞的列表，并可以使用箭头在它们之间切换：
- en: '![](assets/4e69f62d-05f8-4f53-83a1-46ff84df827b.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4e69f62d-05f8-4f53-83a1-46ff84df827b.png)'
- en: Again, if there is any malware we will see it under the malware icon, and if
    there is an exploitation we will see under the exploit icon. Now, all of the top
    vulnerabilities listed don't have an exploitation using a tool, but they are ordered
    based on the risk. The listed vulnerabilities are very risky, and as we proceed
    through them the risk decreases.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，如果有任何恶意软件，我们将在恶意软件图标下看到它，如果有利用漏洞，我们将在利用漏洞图标下看到它。现在，列出的前几个漏洞没有使用工具进行利用，但它们是根据风险排序的。列出的漏洞非常危险，随着我们继续进行，风险会降低。
- en: We can see in the preceding screenshot that we discovered that the VNC password
    is "password". We can go in and try to connect using VNC. VNC is a service that's
    very similar to Remote Desktop. Basically, it will show us the desktop and it
    will allow us to gain full access to the target computer, just like Remote Desktop.
    It's telling us that the password for login is password. It's also telling us
    that there is a back door Shell Backdoor Service running, and we used that already.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到在前面的截图中，我们发现了**VNC**的密码是"password"。我们可以尝试使用VNC连接。VNC是一种非常类似于远程桌面的服务。基本上，它会显示给我们桌面，并允许我们完全访问目标计算机，就像远程桌面一样。它告诉我们登录的密码是**password**。它还告诉我们有一个后门**Shell
    Backdoor Service**正在运行，我们已经使用过了。
- en: 'Now, let''s look at something that can be exploitable. We are going to click
    on the exploit icon to order them by the exploit, and we can see that all of these
    have an M logo, which means that they can be exploited using Metasploit:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一些可能被利用的东西。我们将点击漏洞图标以按漏洞排序，我们可以看到所有这些都有一个M标志，这意味着它们可以使用Metasploit进行利用：
- en: '![](assets/9ab3e50e-0b16-424c-bff3-00788655ddcd.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9ab3e50e-0b16-424c-bff3-00788655ddcd.png)'
- en: 'As you can see in the preceding screenshot we have the Remote Shell Service that
    we can use, and there is the Remote Login Service that can be used as well, which
    we have already had a look at. Let''s click on something that we haven''t seen
    before, for example, Default Tomcat User and Password. In the following screenshot
    we can see a description of this vulnerability:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如上图所示，我们可以使用 Remote Shell Service，另外也可以使用 Remote Login Service，之前我们已经看过这个。让我们点击一个我们之前没见过的选项，比如 Default
    Tomcat User and Password。在下图中我们可以看到关于这个漏洞的描述：
- en: '![](assets/e8a72270-f011-41b5-b484-bd9058f32a73.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e8a72270-f011-41b5-b484-bd9058f32a73.png)'
- en: 'Again, we can see the port that it''s running on, and you can see why it thinks
    that this particular target is vulnerable to this exploit:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我们可以看到它运行的端口，并且可以理解为什么它认为这个特定目标对这个漏洞是脆弱的：
- en: '![](assets/231ad15c-fe65-40fd-a355-273621e940bb.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/231ad15c-fe65-40fd-a355-273621e940bb.png)'
- en: 'If we scroll down, it will show you how we can exploit it:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们向下滚动，它会显示如何利用这个漏洞：
- en: '![](assets/86925b22-98e5-4708-a49c-a595686c11ff.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/86925b22-98e5-4708-a49c-a595686c11ff.png)'
- en: 'There are three different modules that can be used to exploit it, but it doesn''t
    really have to exploit it. Sometimes we just see modules that can be used to verify
    the existence of this exploit, but basically these are the modules associated
    with it. If we click on the Source Link of any Exploit, it will take us to the
    Rapid7 page that we used to see when we Googled stuff:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 有三个不同的模块可以用来利用它，但实际上不一定非得利用它。有时我们只是看到可以用来验证此漏洞存在的模块，但基本上这些就是与之相关的模块。如果我们点击任何 Exploit 的 Source
    Link，它会带我们到以前通过谷歌搜索时看到的Rapid7页面：
- en: '![](assets/d83098ee-4b66-4758-ad91-aa1765619b5b.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d83098ee-4b66-4758-ad91-aa1765619b5b.png)'
- en: 'We see the Module Name, which we can just copy and paste into Metasploit, where
    we can run `show options` and then `use` the exploit the same way that we''ve
    seen it in previous chapters. Scrolling down further reveals the REFERENCES to
    the particular exploit:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到了 Module Name，我们可以将其复制并粘贴到Metasploit中，接着运行 `show options`，然后像之前章节中看到的那样使用该漏洞。向下滚动还会显示关于该漏洞的 REFERENCES：
- en: '![](assets/37eb3cd8-e3d7-4c67-839b-14fa7658b9df.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/37eb3cd8-e3d7-4c67-839b-14fa7658b9df.png)'
- en: 'At the bottom, it''ll show us the REMEDIATIONS on how we can fix this exploit:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，它会显示关于如何修复该漏洞的 REMEDIATIONS：
- en: '![](assets/3134d833-30df-43f8-957f-4e405136da52.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3134d833-30df-43f8-957f-4e405136da52.png)'
- en: For this vulnerability, all we need to do is just change the administrator password
    and not use the default configuration.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个漏洞，我们所需要做的就是更改管理员密码，并且不要使用默认配置。
- en: 'Another useful thing is in the Reports tab:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的功能是在 Reports 标签页中：
- en: '![](assets/cdb1af1b-f3bc-4cd1-97a2-ebd2cb3c1d25.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cdb1af1b-f3bc-4cd1-97a2-ebd2cb3c1d25.png)'
- en: 'This framework allows us to generate reports for each scan that we do, and
    there are different types of template for the reports. Inside Create a report, we
    can see that there is an Audit Report that contains a lot of detailed information
    for the programmers or for the technical people. We can use an Executive Report,
    which has less information and is made for the managers or for the top-level people
    that don''t have much experience with technical stuff. We can select any template
    we want and name it anything. We will call this report `metasploitable report`,
    as shown in the preceding screenshot. If we scroll a little we can select the
    format that we want:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这个框架允许我们为每次扫描生成报告，并且报告有不同的模板类型。在 Create a report 中，我们可以看到有一个 Audit Report，其中包含大量的详细信息，适合程序员或技术人员。我们还可以使用 Executive
    Report，它包含的信息较少，适合经理或对技术不太了解的高层人员。我们可以选择任何想要的模板，并为其命名。我们将此报告命名为 `metasploitable
    report`，如上图所示。如果我们稍微向下滚动，就可以选择我们想要的格式：
- en: '![](assets/a40b59f3-623b-4ac8-93ba-b999d2f36b5e.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a40b59f3-623b-4ac8-93ba-b999d2f36b5e.png)'
- en: 'It''s set to PDF in the preceding screenshot. Then, we are going click on Select
    Scan, select our target scan that we want to generate a report for, and select metasploitable:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图中，它被设置为 PDF。接下来，我们将点击 Select Scan，选择我们要生成报告的目标扫描，并选择 metasploitable：
- en: '![](assets/581be750-12d7-45f8-b01c-634f51aa4af9.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/581be750-12d7-45f8-b01c-634f51aa4af9.png)'
- en: 'Then, we click on SAVE & RUN THE REPORT to generate the report:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们点击 SAVE & RUN THE REPORT 生成报告：
- en: '![](assets/c604bb29-ea5e-48a0-bf8a-fd9af6dc771e.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c604bb29-ea5e-48a0-bf8a-fd9af6dc771e.png)'
- en: 'We can also generate reports automatically every time, because we can schedule
    reports, schedule scans, and we can also schedule an automatic report each time
    a scan is done. For example, if we are scanning every week, you can also generate
    a report every week, every time that scan''s done. Now, just download the report
    by clicking on the report, and let''s see what it looks like:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以每次自动生成报告，因为我们可以安排报告、安排扫描，还可以每次扫描完成后安排自动报告。例如，如果我们每周扫描一次，您也可以每周生成一次报告，每次扫描完成后。现在，只需点击报告下载，就可以查看报告内容：
- en: '![](assets/b4d7a8b2-5c7e-4d45-929d-9bf1e0c1b9b8.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b4d7a8b2-5c7e-4d45-929d-9bf1e0c1b9b8.png)'
- en: 'As we can see in the following screenshot, it has the date, it has the title,
    it has all the exploits that have been found, but this is the executive report.
    It has small details about the exploits and more graphical stuff to show the executives
    the risks that have been found and how critical they are:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，它包含了日期、标题以及所有已发现的漏洞，但这是一个执行报告。它包含了有关漏洞的小细节，并且有更多图形化的内容，目的是向高层展示已发现的风险及其严重性：
- en: '![](assets/17843bba-7865-4eda-b62f-a31dbf43bec2.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/17843bba-7865-4eda-b62f-a31dbf43bec2.png)'
- en: As we can see in the preceding screenshot, Nexpose shows us much more detail
    and it's much more advanced. It's directed towards bigger companies, bigger infrastructures,
    where we need to always make sure everything is up to date, everything is installed,
    and there aren't any exploits.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如上图所示，Nexpose展示了更多细节，而且功能更加先进。它针对的是更大的公司和更复杂的基础设施，我们需要始终确保一切都是最新的，所有东西都已安装，并且没有漏洞。
- en: Summary
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have seen how we can use the Metasploit framework, which comes preinstalled
    with Kali Linux. We then used this framework for various scans and also studied
    how to analyze the reports generated. We then installed the Nexpose tool and saw
    how to use it to scan the vulnerabilities and get reports in the form of graphs.
    We also learned how to read through it.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了如何使用Metasploit框架，该框架预装在Kali Linux中。我们随后使用这个框架进行了各种扫描，并学习了如何分析生成的报告。接着，我们安装了Nexpose工具，并了解了如何使用它扫描漏洞并生成图形报告。我们还学习了如何解读报告内容。
- en: In the next chapter, we will be covering various client-side attacks.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论各种客户端攻击。
