- en: Exploiting and Exfiltrating Data from a Large Shipping Corporation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从大型航运公司中利用和外泄数据
- en: All companies, businesses, and industries use technology, and the way they use
    it is different. It is not the same web application for a retailer where there
    are priorities such as continuous services and big performance, as in an online
    banking application, where you need to be highly secure. Of course, all of these
    applications have common points, but as it is impossible to apply all controls,
    the most important thing is prioritizing the real requirements.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 所有公司、企业和行业都使用技术，以及他们使用技术的方式是不同的。对于零售商来说，他们的网站应用程序与在线银行应用程序不同，零售商的网站有着持续服务和高性能等优先事项，而在线银行应用程序需要高度安全。当然，所有这些应用程序都有共同点，但是由于不可能应用所有的控制，最重要的是优先考虑真正的需求。
- en: 'In this chapter, we will discuss another scenario, a shipping company. We will
    perform the same activities as in the past example, but this time using one of
    the most popular shipping companies: DHL.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论另一个场景，一个航运公司。我们将执行与过去示例中相同的活动，但这次使用最受欢迎的航运公司之一：DHL。
- en: We will be covering ...
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖...
- en: Automatic scan
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动扫描
- en: 'The simplest way to detect vulnerabilities such as SQL injections is by using
    Burp Suite''s scanner:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 检测SQL注入等漏洞的最简单方法是使用Burp Suite的扫描器：
- en: 'To launch the scan, open Burp Suite, go to the main Dashboard, and click on
    New scan:'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动扫描，打开Burp Suite，转到主仪表板，然后单击新扫描：
- en: '![](img/a5bf5de4-3054-4c13-96c6-ccd5b5821134.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a5bf5de4-3054-4c13-96c6-ccd5b5821134.png)'
- en: There is an option that we did not explore previously, which is used to control
    the scope during a scan. Imagine that your scope is not all of the DHL website—it
    is just [www.dhl.com](http://www.dhl.com), but there are other applications, such
    as [mydhl.dhl.com](http://mydhl.dhl.com) and [intranet.dhl.com](http://intranet.dhl.com),
    and so on.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个我们之前没有探索的选项，用于在扫描期间控制范围。想象一下，您的范围不是整个DHL网站——只是[www.dhl.com](http://www.dhl.com)，但还有其他应用程序，比如[mydhl.dhl.com](http://mydhl.dhl.com)和[intranet.dhl.com](http://intranet.dhl.com)，等等。
- en: 'To avoid that, Burp Suite can scan these other applications; click on Detailed
    scope configuration. Here we will see two tabs named Include prefix options and
    Exclude prefix options. Go to the second tab, Exclude Prefix Options, and enter
    the applications we don''t want to test, as follows:'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了避免这种情况，Burp Suite可以扫描这些其他应用程序；点击详细范围配置。在这里，我们将看到两个名为包括前缀选项和排除前缀选项的选项卡。转到第二个选项卡，排除前缀选项，并输入我们不想测试的应用程序，如下所示：
- en: '![](img/27828ec0-db85-461d-a85d-f977eaf5e85d.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](img/27828ec0-db85-461d-a85d-f977eaf5e85d.png)'
- en: As we can see in the preceding screenshot, it is not necessary to add all the
    URLs.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的屏幕截图中所看到的，不需要添加所有的URL。
- en: 'If we want to be more selective about the scope, we can choose a single URL
    and by clicking on Use advanced scope control, we can add each URL we want to
    test or not to test in the scope, as follows:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想对范围进行更精确的选择，我们可以选择单个URL，并通过单击使用高级范围控制，在范围中添加我们想要测试或不想测试的每个URL，如下所示：
- en: '![](img/423fc0e5-ba34-4295-bc19-79ae0274c648.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/423fc0e5-ba34-4295-bc19-79ae0274c648.png)'
- en: Burp Suite's scanner provides us with more options to control the scan.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite的扫描器为我们提供了更多控制扫描的选项。
- en: Click on Scan configuration. Here, you can configure options about how the scanner
    will perform the application discovery and how the security testing will be performed.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击扫描配置。在这里，您可以配置有关扫描器如何执行应用程序发现以及如何执行安全测试的选项。
- en: 'Click on Add new, and Burp Suite will launch a new window where it is possible
    to create a new rule, as follows:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加新的，Burp Suite将启动一个新窗口，可以在其中创建一个新规则，如下所示：
- en: '![](img/39959ffd-2ca7-4918-9f4a-eb6d02cd6c04.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/39959ffd-2ca7-4918-9f4a-eb6d02cd6c04.png)'
- en: In Audit optimization, we can define how fast the assessment is. I recommend
    selecting low fast. This is to avoid intrusion detection systems, load balancers,
    and other security and network appliances that can block the scanner. If you are
    testing in a QA environment where you have full control and direct access to the
    application server, without any network security control, you can select Fast.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在审计优化中，我们可以定义评估的速度。我建议选择低速。这是为了避免入侵检测系统、负载均衡器和其他可能阻止扫描器的安全和网络设备。如果您在一个QA环境中进行测试，在这种环境中，您可以完全控制并直接访问应用程序服务器，而没有任何网络安全控制，您可以选择快速。
- en: 'The next section, Issues reported, is for selecting the scan policy. Burp Suite
    by default has divided the possible issues by categories. However, you can also select
    by type. For example, for this exercise, we just select SQL injection vulnerabilities.
    It is very useful for fixing or verifying bugs, for example:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一部分，报告的问题，是用于选择扫描策略。Burp Suite默认情况下已经按类别划分了可能的问题。但是，您也可以按类型选择。例如，对于这个练习，我们只选择SQL注入漏洞。这对于修复或验证错误非常有用，例如：
- en: '![](img/6638210a-8da9-4588-8c81-468cf17a18b4.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6638210a-8da9-4588-8c81-468cf17a18b4.png)'
- en: In the Handling Application Errors During Testing tab, it is possible to configure
    how Burp Suite take actions when detecting errors. These options can help us to
    stop the scan when necessary. For example, currently, it is usual that some applications
    are hosted in a cloud service. The cloud services are great at blocking scanning
    activities, so it is probable that if we are testing a cloud hosted website, after
    a few minutes of testing, our IP address will get blocked and Burp Suite just
    receives timeout errors. We can stop the scan when this type of error occurs.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试期间处理应用程序错误选项卡中，可以配置Burp Suite在检测到错误时采取的操作。这些选项可以帮助我们在必要时停止扫描。例如，目前通常有一些应用程序托管在云服务中。云服务非常擅长阻止扫描活动，因此很可能如果我们正在测试托管在云中的网站，在测试几分钟后，我们的IP地址将被阻止，Burp
    Suite只会收到超时错误。我们可以在出现这种类型的错误时停止扫描。
- en: In Insertion point types, it is possible to define where you want to inject
    testing strings. For example, you can limit the testing just to the URL parameters,
    cookies, and so on. In my experience, it is better to test all the entry points
    that you can.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在插入点类型中，可以定义要注入测试字符串的位置。例如，您可以将测试限制在URL参数、cookies等。根据我的经验，最好测试所有可能的入口点。
- en: Ignoring insert points is an interesting option that could be useful when we
    want to limit the noise generated by the application or just reduce the number
    of tests.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 忽略插入点是一个有趣的选项，当我们想要限制应用程序生成的噪音或者减少测试数量时，这个选项可能会很有用。
- en: 'Do you remember that, in Intruder, you can select the parameters to test? Well,
    this is something similar to that. If we have tracking tokens or a session ID
    stored in a variable, it is not a good idea to test it, so we can get out of the
    scope by using this option:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您还记得在Intruder中可以选择要测试的参数吗？嗯，这与那个类似。如果我们有跟踪令牌或会话ID存储在变量中，那么测试它并不是一个好主意，因此我们可以使用这个选项来跳出范围：
- en: '![](img/c5f01202-9d19-4a93-8e83-de51f20a0438.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5f01202-9d19-4a93-8e83-de51f20a0438.png)'
- en: After configuring the options, click on Save and then on OK to start the scan.
    If you think it could be a policy to apply and will be required for more types
    of applications, you can save it as a library and reuse it. Scan results will
    be shown in the right section.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 配置选项后，点击“保存”，然后点击“确定”开始扫描。如果您认为这可能是一个需要应用并且将需要更多类型的应用程序的策略，您可以将其保存为库并重复使用。扫描结果将显示在右侧部分。
- en: SQLMap detection
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQLMap检测
- en: Now, we are going to use SQLMap to detect and exploit SQL injections in the
    DHL site.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将使用SQLMap来检测和利用DHL网站中的SQL注入。
- en: Looking for entry points
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找入口点
- en: 'The DHL application looks like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: DHL应用程序看起来是这样的：
- en: '![](img/fc284b05-f4ed-440d-9892-f8dac76fb9ec.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fc284b05-f4ed-440d-9892-f8dac76fb9ec.png)'
- en: 'Straight away, we can see different inputs to test, for example, the search
    bar and the tracking box, but look at the following request:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以立即看到不同的输入要测试，例如搜索栏和跟踪框，但是看一下以下请求：
- en: '![](img/60420cc8-e828-4d9a-b3d1-e39c80df46b0.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/60420cc8-e828-4d9a-b3d1-e39c80df46b0.png)'
- en: 'In this request, we can see some variables, but to determine which of them
    can be used as injection points, we need to analyze the behavior they have, as
    follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个请求中，我们可以看到一些变量，但要确定哪些可以用作注入点，我们需要分析它们的行为，如下所示：
- en: '`brand`: It looks like the application supports some companies, so maybe "DHL"
    is part of a catalog, and it could be susceptible to injection.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`brand`：看起来应用程序支持一些公司，所以也许“DHL”是目录的一部分，可能容易受到注入攻击。'
- en: '`AWB`: This variable is a tracking number, which is used to look for the location
    of a package. It is obvious that this is a great entry point.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWB`：这个变量是一个跟踪号码，用于查找包裹的位置。很明显这是一个很好的入口点。'
- en: '`AWBS_crossrefpar1_taskcenter_taskcentertabs_item1229046233349_par_expandablelink_insideparsys_fasttrack`:
    It also looks like an ID, so it could be an injection point.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWBS_crossrefpar1_taskcenter_taskcentertabs_item1229046233349_par_expandablelink_insideparsys_fasttrack`：它看起来也像是一个ID，所以可能是一个注入点。'
- en: It is important to reduce the number of points to test, because in a productive
    application, the more testing that's done, the more that noise is created.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 减少要测试的点很重要，因为在一个生产应用程序中，测试越多，产生的噪音就越多。
- en: Using SQLMap
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SQLMap
- en: 'Using the secondary button of the mouse, click on Send to SQLMapper, as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用鼠标的辅助按钮，点击“发送到SQLMapper”，如下所示：
- en: '![](img/764bd46d-e88c-480b-be1f-f68eb4a48a51.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/764bd46d-e88c-480b-be1f-f68eb4a48a51.png)'
- en: To limit the parameters to test, go to the Injection tab and enter the parameters, separated
    by commas, and click on the Run button.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要限制要测试的参数，转到“注入”选项卡，输入参数，用逗号分隔，然后点击“运行”按钮。
- en: SQLMap will be launched and, if any of these parameters are vulnerable, SQLMap
    will detect and exploit the injection. When SQLMap detects that you are exploiting
    a Blind SQL injection, it will ask you to continue. Just press *Y*.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: SQLMap将被启动，如果这些参数中有任何一个是有漏洞的，SQLMap将检测并利用注入。当SQLMap检测到您正在利用盲目的SQL注入时，它会要求您继续。只需按*Y*。
- en: Intruder detection
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Intruder检测
- en: Detecting SQL injections using a manual request is also an option. I recommend that
    you perform it when you are reviewing an application without a successful vulnerability
    detection.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 使用手动请求来检测SQL注入也是一个选项。我建议在审查应用程序时进行，而没有成功检测到漏洞。
- en: 'First, we detect the entry points, as we reviewed in the previous section.
    To detect vulnerable points related to Blind SQL injection, you can use the following
    testing string:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们要检测入口点，就像我们在前一节中审查的那样。要检测与盲目SQL注入相关的易受攻击的点，您可以使用以下测试字符串：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can also use its counterpart in the DBMS. But why should we do that? Well,
    as you may remember, the most important characteristic in Blind SQL injections
    is that they do not return errors or outputs directly to the user. So, by using
    this string, we are waiting to see the delay in the response:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用它在DBMS中的对应项。但是为什么要这样做呢？嗯，您可能记得，盲目SQL注入最重要的特征是它们不会直接向用户返回错误或输出。因此，通过使用这个字符串，我们期待看到响应的延迟：
- en: 'To cover more parameters, we need the Intruder tool. Do the same analysis about
    the parameters behavior to determine which request could be susceptible to being
    vulnerable and, using the secondary button of the mouse, click on Send to Intruder
    as follows:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了覆盖更多的参数，我们需要Intruder工具。对参数行为进行相同的分析，以确定哪个请求可能容易受到攻击，并使用鼠标的辅助按钮，点击“发送到Intruder”，如下所示：
- en: '![](img/4f318829-40cd-4a1b-991e-8ed5d02a40ce.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4f318829-40cd-4a1b-991e-8ed5d02a40ce.png)'
- en: 'In Intruder, for a fast testing, add the delay query as the only one payload
    and launch it to all the parameters, as follows:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Intruder中，为了快速测试，将延迟查询添加为唯一的有效负载，然后启动到所有参数，如下所示：
- en: '![](img/20e3a4d2-2931-41bb-9f26-fa5293f8e869.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20e3a4d2-2931-41bb-9f26-fa5293f8e869.png)'
- en: 'Back in the Positions tab, click on Start attack. If you think you have detected
    a possible vulnerability, right-click on the request and select Send to repeater.
    Once you are in the repeater, modify the testing string to add more delay time,
    as follows:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到“位置”选项卡，点击“开始攻击”。如果你认为已经发现了可能的漏洞，右键点击请求，选择“发送到重复器”。一旦进入重复器，修改测试字符串以增加延迟时间，如下所示：
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The idea is to determine when to use the time to receive the response, if the
    vulnerability actually exists.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法是确定何时使用时间来接收响应，以确定漏洞是否真实存在。
- en: 'It is possible to use the Burp Suite Collaborator. It is a good trick to use
    it in these cases, as the Collaborator is an external entity that interacts as
    receptor to send the database''s output, as shown in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用Burp Suite Collaborator。在这些情况下使用它是一个很好的技巧，因为Collaborator是一个外部实体，作为接收器与数据库交互，如下截图所示：
- en: '![](img/0520e5d1-2139-454c-9e9a-7bcd6c7a6cf6.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0520e5d1-2139-454c-9e9a-7bcd6c7a6cf6.png)'
- en: Exploitation
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用
- en: After you have detected a vulnerable variable, mark it with a wildcard in the
    Intruder tool.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你发现了一个有漏洞的变量，在入侵工具中用通配符标记它。
- en: 'Imagine you want to know the tracking number of a package in the shipping website.
    Click on the Payloads tab, and as the payload type, select the Numbers option.
    We will need to inject a range of numbers, from 0000000000 to 9999999999, from
    one to one, as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你想要在运输网站上知道一个包裹的追踪号码。点击“有效载荷”选项卡，选择“数字”选项作为有效载荷类型。我们需要注入一系列数字，从0000000000到9999999999，依次注入，如下所示：
- en: '![](img/8a714039-80a1-4ffa-bc42-858978fd218f.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a714039-80a1-4ffa-bc42-858978fd218f.png)'
- en: 'As it is not possible to dump the registers stored in the database, we will
    find the tracking number using a Boolean value. Send a request using the correct
    tracking number, by our Intruder attack; the application will return a `True` value
    in as a response:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 由于无法转储存储在数据库中的寄存器，我们将使用布尔值来找到追踪号码。通过我们的入侵攻击发送一个使用正确追踪号码的请求；应用程序将返回一个`True`值作为响应：
- en: For easy detection, ...
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便检测，...
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this final chapter, we reviewed other scenarios that can be used to assess
    an application. In this chapter, we looked for SQL injections and exploited one
    of them using different methods.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在这最后一章中，我们回顾了其他可以用来评估应用程序的场景。在这一章中，我们寻找了SQL注入，并利用了其中的一种方法。
- en: For an application security assessment, I recommend avoiding the manual exploitation
    methods, because we will have less time to use them. They are useful when it is
    not possible to find vulnerabilities using other methods.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于应用程序安全评估，我建议避免手动利用方法，因为我们将有更少的时间来使用它们。当使用其他方法无法找到漏洞时，它们是有用的。
- en: In this chapter, you learned how to analyze the parameter behavior in a request
    to infer what could be vulnerable and reduce the time analysis. Later, we looked
    into detecting Blind SQL injection vulnerabilities using Burp Suite's scanner,
    SQLMap, and the Intruder tool. Finally, we learned how to guess a tracking number
    using Intruder to exploit a Blind SQL injection.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你学会了如何分析请求中参数的行为，以推断可能存在漏洞并减少时间分析。之后，我们使用Burp Suite的扫描器、SQLMap和入侵工具来检测盲目SQL注入漏洞。最后，我们学会了如何使用入侵工具猜测追踪号码来利用盲目SQL注入。
