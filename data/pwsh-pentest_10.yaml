- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Brute Forcing in PowerShell
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 PowerShell 中进行暴力破解
- en: In this chapter, we will explore **brute forcing** within security testing.
    As organizations strive to fortify their digital perimeters, understanding the
    intricacies of brute-force attacks becomes paramount. This chapter embarks on
    a journey through the methodology, tools, and ethical considerations surrounding
    brute forcing as an indispensable component of security assessments. Brute forcing,
    the systematic trial and error method to uncover passwords or keys, provides a
    stark reality check for system vulnerabilities.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨安全测试中的**暴力破解**。随着组织努力加强其数字防线，理解暴力破解攻击的复杂性变得至关重要。本章将带领读者了解暴力破解的思路、工具以及其作为安全评估不可或缺部分的伦理考量。暴力破解，作为一种系统的试探性方法，用于发现密码或密钥，为系统漏洞提供了严峻的现实警示。
- en: From its conceptual foundations to practical implementations, we delve into
    the nuances of this technique, shedding light on its significance in identifying
    weak points within authentication mechanisms. Additionally, we navigate the ethical
    considerations and legal implications associated with leveraging brute-force attacks
    for security testing purposes, emphasizing responsible and authorized practices.
    As we unravel the complexities, security professionals will gain valuable insights
    into the importance of mitigating brute-force risks, bolstering their ability
    to safeguard against unauthorized access.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从其概念基础到实际应用，我们深入探讨了这一技术的细节，阐明了它在识别身份验证机制中的弱点方面的重要性。此外，我们还探讨了在安全测试中利用暴力破解攻击所涉及的伦理考量和法律影响，强调了负责任和授权的实践。在揭示这些复杂性时，安全专业人员将获得有关减少暴力破解风险的重要见解，增强他们抵御未经授权访问的能力。
- en: This chapter will look at brute forcing network services such as **File Transfer
    Protocol** (**FTP**) and **Secure Shell** (**SSH**), as well as brute forcing
    **Representational State Transfer** (**REST**)/**Simple Object Access Protocol**
    (**SOAP**) web services. To illustrate attack techniques, we will use worked examples
    in PowerShell.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨暴力破解网络服务，如**文件传输协议**（**FTP**）和**安全外壳协议**（**SSH**），以及暴力破解**表现性状态转移**（**REST**）/**简单对象访问协议**（**SOAP**）Web
    服务。为了说明攻击技术，我们将使用 PowerShell 中的实际示例。
- en: 'The chapter will cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要内容：
- en: Brute forcing, in general, using PowerShell
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说，使用 PowerShell 进行暴力破解
- en: Brute forcing FTP using PowerShell
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PowerShell 对 FTP 进行暴力破解
- en: Brute forcing SSH using PowerShell
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PowerShell 对 SSH 进行暴力破解
- en: Brute forcing web services using PowerShell
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PowerShell 对 Web 服务进行暴力破解
- en: Brute forcing a hash
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对哈希值进行暴力破解
- en: Brute forcing, in general, using PowerShell
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一般来说，使用 PowerShell 进行暴力破解
- en: Brute forcing is a technique employed in security assessments to guess passwords
    systematically and exhaustively, encryption keys, or other sensitive information
    by trying all possible combinations until the correct one is found. This method
    is critical in evaluating the robustness of security measures implemented by systems,
    networks, or applications. Security professionals use brute forcing to identify
    vulnerabilities and weaknesses, helping organizations strengthen their defenses
    against unauthorized access and potential cyber threats.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力破解是一种在安全评估中使用的技术，通过系统地和彻底地尝试所有可能的组合，直到找到正确的密码、加密密钥或其他敏感信息。这种方法在评估系统、网络或应用程序实施的安全措施的强度时至关重要。安全专业人员使用暴力破解来识别漏洞和弱点，帮助组织加强防御，以抵御未经授权的访问和潜在的网络威胁。
- en: In password security assessments, brute forcing involves attempting every conceivable
    combination of characters until the correct password is discovered. This method
    is effective against weak or easily guessable passwords and underscores the importance
    of using strong, complex passwords to protect sensitive accounts. Security experts
    often employ sophisticated tools to automate the brute-forcing process, leveraging
    computational power to test numerous combinations rapidly within a short timeframe.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在密码安全评估中，暴力破解指的是通过尝试所有可能的字符组合，直到找到正确密码为止。这种方法对弱密码或容易猜测的密码非常有效，强调了使用强大、复杂密码来保护敏感账户的重要性。安全专家通常使用复杂的工具来自动化暴力破解过程，利用计算能力在短时间内快速测试大量组合。
- en: Encryption keys, which are pivotal in securing data during transmission or storage,
    are also subject to brute-force attacks. By systematically trying all possible
    key combinations, attackers aim to decrypt encrypted information. The success
    of a brute-force attack depends on factors such as the encryption algorithm’s
    strength and the key’s length and complexity. A security assessment utilizing
    brute forcing against encryption helps evaluate the resilience of cryptographic
    systems and identifies areas that require strengthening.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 加密密钥在数据传输或存储过程中起着至关重要的作用，也容易受到暴力破解攻击。攻击者通过系统地尝试所有可能的密钥组合，旨在解密加密的信息。暴力破解攻击的成功与加密算法的强度、密钥的长度和复杂性等因素有关。通过暴力破解加密进行的安全评估有助于评估加密系统的韧性，并识别需要加强的领域。
- en: It’s crucial to note that while brute forcing is a valuable technique for security
    assessments, it is also resource intensive and time consuming. As a result, organizations
    must balance the need for comprehensive security testing with the potential impact
    on system performance and user experience.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 需要特别注意的是，尽管暴力破解是进行安全评估的有效技术，但它也消耗资源且耗时。因此，组织必须在进行全面安全测试和考虑系统性能及用户体验影响之间找到平衡。
- en: 'PowerShell, a task automation, and configuration management framework from
    Microsoft, is a powerful tool that can be leveraged for various security testing
    activities, including brute forcing. Its scripting capabilities and integration
    with Windows systems make it a preferred choice for security professionals conducting
    assessments. Here’s an overview of how PowerShell can be used for brute forcing
    in security testing:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 是微软的一种任务自动化和配置管理框架，是一种功能强大的工具，可用于各种安全测试活动，包括暴力破解。其脚本功能和与 Windows
    系统的集成使其成为安全专业人员进行评估时的首选工具。以下是 PowerShell 如何在安全测试中用于暴力破解的概述：
- en: Automated scripting
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化脚本
- en: 'PowerShell allows security professionals to create scripts that automate the
    process of attempting different combinations of passwords or authentication tokens.
    The following scripts can be customized to iterate through a predefined list of
    passwords or generate combinations based on specific criteria:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 允许安全专业人员创建脚本，自动化尝试不同密码或认证令牌组合的过程。以下脚本可以根据特定标准进行定制，以遍历预定义的密码列表或生成组合：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Password list attacks
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密码列表攻击
- en: PowerShell can conduct password list attacks by reading from a file containing
    a list of potential passwords. The script iterates through each password, attempting
    authentication until a successful login is achieved or the list is exhausted.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 可以通过读取包含潜在密码列表的文件来执行密码列表攻击。该脚本会遍历每个密码，尝试进行身份验证，直到成功登录或密码列表用尽。
- en: Dictionary attacks
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字典攻击
- en: PowerShell can perform **dictionary attacks** by combining words and phrases
    commonly used in passwords. Security professionals may leverage publicly available
    word lists or create custom dictionaries tailored to the specific target.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 可以通过组合常见的密码词语和短语执行**字典攻击**。安全专业人员可以利用公开的词汇表或创建针对特定目标的自定义字典。
- en: Credential stuffing
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 凭证填充
- en: 'PowerShell scripts can automate **credential stuffing attacks** by attempting
    to use previously compromised username and password pairs on different services.
    This helps identify instances where users reuse credentials across multiple platforms.
    The following is a skeleton that can be used to perform credential stuffing:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 脚本可以通过尝试在不同服务上使用先前泄露的用户名和密码对来自动化**凭证填充攻击**。这有助于识别用户在多个平台上重用凭证的情况。以下是用于执行凭证填充的框架：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Rate limiting and stealth
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 限速与隐匿
- en: PowerShell scripts can incorporate features to avoid detection, such as introducing
    delays between login attempts to evade rate-limiting mechanisms implemented by
    the target system.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 脚本可以结合一些防止被检测到的功能，例如在登录尝试之间引入延迟，以避开目标系统实施的限速机制。
- en: It’s essential to note that while PowerShell can be a valuable tool for security
    testing, its use should adhere to ethical guidelines and legal considerations.
    Unauthorized brute-forcing attempts can have serious consequences, and testing
    should only be conducted with proper authorization and in controlled environments.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，尽管 PowerShell 可以作为安全测试的有价值工具，但其使用应遵守道德准则和法律规定。未经授权的暴力破解尝试可能带来严重后果，测试应仅在获得适当授权和受控环境中进行。
- en: Brute forcing FTP using PowerShell
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PowerShell 进行 FTP 暴力破解
- en: Brute forcing an FTP server involves systematically attempting different combinations
    of usernames and passwords to gain unauthorized access. PowerShell, with its scripting
    capabilities and .NET framework integration, can be a powerful tool for automating
    this process during security testing. The following is a detailed guide on how
    PowerShell can be utilized for FTP server brute forcing in a security testing
    scenario.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力破解 FTP 服务器涉及系统地尝试不同的用户名和密码组合，以获得未授权访问。PowerShell 借助其脚本功能和 .NET 框架集成，可以成为在安全测试过程中自动化这一过程的强大工具。以下是
    PowerShell 如何用于在安全测试场景中对 FTP 服务器进行暴力破解的详细指南。
- en: Setting up the environment
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置环境
- en: Before attempting any security testing, it’s crucial to have explicit authorization
    and ensure the testing is conducted in a controlled environment. Additionally,
    gather information about the FTP server, such as its address, port, and whether
    it allows anonymous logins.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行任何安全测试之前，确保获得明确授权，并确保测试在受控环境中进行。此外，收集关于 FTP 服务器的信息，例如其地址、端口以及是否允许匿名登录。
- en: Creating credential lists
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建凭证列表
- en: 'Prepare lists of usernames and passwords for the brute-force attack. These
    lists can be obtained from sources, including known default credentials, leaked
    password databases, or generated based on common patterns. PowerShell allows you
    to read these lists from external files easily. In PowerShell, we load the contents
    of a file into a variable for later processing. In the following, we will load
    a list of usernames and passwords:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为暴力破解攻击准备用户名和密码列表。这些列表可以通过多种途径获得，包括已知的默认凭证、泄露的密码数据库，或者基于常见模式生成。PowerShell 允许你轻松地从外部文件读取这些列表。在
    PowerShell 中，我们将文件的内容加载到变量中以供后续处理。接下来，我们将加载一份用户名和密码列表：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: FTP login attempt script
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FTP 登录尝试脚本
- en: 'Write a PowerShell script to automate FTP login attempts using the prepared
    credentials. PowerShell’s scripting capabilities allow nested loops to iterate
    through all possible combinations. In the following code, we will cycle through
    the list of usernames and passwords for an FTP server in an attempt to brute force
    a logon:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个 PowerShell 脚本，通过预先准备的凭证自动化 FTP 登录尝试。PowerShell 的脚本能力允许使用嵌套循环遍历所有可能的组合。在以下代码中，我们将循环遍历
    FTP 服务器的用户名和密码列表，尝试暴力破解登录：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This script attempts to log in with each combination of username and password.
    It uses the **FtpWebRequest** class to create an FTP connection and then handles
    the server’s response. A successful login triggers further actions, while failed
    attempts and the corresponding error messages are captured.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本尝试使用每个用户名和密码组合进行登录。它使用 **FtpWebRequest** 类创建 FTP 连接，并处理服务器的响应。成功的登录将触发进一步的操作，而失败的尝试及相应的错误信息将被捕获。
- en: Handling FTP server responses
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理 FTP 服务器的响应
- en: 'FTP servers respond with various codes, indicating the success or failure of
    login attempts. PowerShell scripts can interpret these responses to determine
    the outcome of each brute-force attempt. For example, a response code starting
    with **2** indicates success, while **4** or **5** indicates an error:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: FTP 服务器通过不同的代码响应，指示登录尝试的成功与失败。PowerShell 脚本可以解析这些响应，以确定每次暴力破解尝试的结果。例如，以 **2**
    开头的响应代码表示成功，而 **4** 或 **5** 则表示错误：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Rate limiting and stealth
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 限制速率与隐蔽性
- en: 'To avoid detection and mitigate the risk of being blocked by the FTP server,
    consider introducing delays between login attempts. This can be achieved using
    PowerShell’s **Start-Sleep** cmdlet:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免被检测到并减少被 FTP 服务器封锁的风险，可以在登录尝试之间引入延迟。这可以通过 PowerShell 的 **Start-Sleep** cmdlet
    实现：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Logging and reporting
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志记录与报告
- en: 'Implement logging to record the results of the brute-force attack. PowerShell
    scripts can log successful logins, failed attempts, and any relevant information
    for later analysis:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 实现日志记录，记录暴力破解攻击的结果。PowerShell 脚本可以记录成功的登录、失败的尝试以及任何相关信息，以便后续分析：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This log file can be crucial for analyzing the results of the brute-force attack
    and identifying patterns or vulnerabilities in the FTP server’s security.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这个日志文件对于分析暴力破解攻击的结果以及识别 FTP 服务器安全中的模式或漏洞至关重要。
- en: In conclusion, PowerShell provides a flexible and powerful platform for automating
    FTP server brute forcing during security testing. However, it’s crucial to use
    these techniques responsibly and with the appropriate permissions to ensure the
    integrity and legality of the testing process.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，PowerShell 提供了一个灵活且强大的平台，用于在安全测试期间自动化 FTP 服务器的暴力破解。然而，必须负责任地使用这些技术，并在适当的权限下进行，以确保测试过程的完整性和合法性。
- en: Brute forcing SSH using PowerShell
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PowerShell 对 SSH 进行暴力破解
- en: Brute forcing an SSH server involves systematically attempting different combinations
    of usernames and passwords to gain unauthorized access. PowerShell, with its scripting
    capabilities and .NET framework integration, can be a powerful tool for automating
    this process during security testing. the following is a detailed guide on how
    PowerShell can be utilized for SSH server brute forcing in a security testing
    scenario.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对 SSH 服务器进行暴力破解涉及系统地尝试不同的用户名和密码组合，以获取未授权访问。PowerShell 通过其脚本功能和 .NET 框架集成，可以成为在安全测试中自动化此过程的强大工具。以下是如何在安全测试场景中使用
    PowerShell 进行 SSH 服务器暴力破解的详细指南。
- en: Setting up the environment
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置环境
- en: Before attempting any security testing, it’s crucial to have explicit authorization
    and ensure the testing is conducted in a controlled environment. Additionally,
    gather the necessary information about the SSH server, such as its address, port,
    and whether it allows password authentication.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行任何安全性测试之前，确保获得明确的授权，并确保测试在受控环境中进行。此外，收集有关 SSH 服务器的必要信息，如地址、端口以及是否允许密码验证。
- en: Creating credential lists
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建凭证列表
- en: 'Prepare lists of usernames and passwords for the brute-force attack. These
    lists can be obtained from various sources, including known default credentials,
    leaked password databases, or generated based on common patterns. PowerShell allows
    you to read these lists from external files easily:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 为暴力破解攻击准备用户名和密码的列表。这些列表可以从各种来源获得，包括已知的默认凭证、泄露的密码数据库，或基于常见模式生成的。PowerShell 可以轻松地从外部文件读取这些列表：
- en: '[PRE7]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: SSH login attempt script
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SSH 登录尝试脚本
- en: 'Write a PowerShell script to automate SSH login attempts using the prepared
    credentials. PowerShell’s scripting capabilities allow nested loops to iterate
    through all possible combinations:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 编写 PowerShell 脚本，使用准备好的凭证自动化 SSH 登录尝试。PowerShell 的脚本功能允许嵌套循环遍历所有可能的组合：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This script attempts to log in with each combination of username and password.
    It uses the **sshpass** command to pass the password to the SSH command and the
    **Invoke-Expression** cmdlet to execute the SSH command. A successful login triggers
    further actions, while failed attempts and the corresponding error messages are
    captured.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本尝试使用每种用户名和密码组合进行登录。它使用 **sshpass** 命令将密码传递给 SSH 命令，并使用 **Invoke-Expression**
    cmdlet 执行 SSH 命令。成功登录后触发进一步的操作，而失败的尝试和相应的错误消息会被捕捉。
- en: Handling SSH server responses
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理 SSH 服务器响应
- en: 'SSH servers respond with various messages, indicating the success or failure
    of login attempts. PowerShell scripts can interpret these responses to determine
    the outcome of each brute-force attempt:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: SSH 服务器会以各种消息响应，指示登录尝试的成功或失败。PowerShell 脚本可以解析这些响应，以确定每次暴力破解尝试的结果：
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Rate limiting and stealth
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 速率限制与隐匿性
- en: 'To avoid detection and mitigate the risk of being blocked by the SSH server,
    consider introducing delays between login attempts. This can be achieved using
    PowerShell’s **Start-Sleep** cmdlet:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免被检测并减轻被 SSH 服务器屏蔽的风险，考虑在登录尝试之间引入延迟。可以使用 PowerShell 的 **Start-Sleep** cmdlet
    实现这一点：
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Logging and reporting
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志记录与报告
- en: 'Implement logging to record the results of the brute-force attack. PowerShell
    scripts can log successful logins, failed attempts, and any relevant information
    for later analysis:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 实现日志记录以记录暴力破解攻击的结果。PowerShell 脚本可以记录成功的登录、失败的尝试以及任何相关信息，以便后续分析：
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This log file can be crucial for analyzing the results of the brute-force attack
    and identifying patterns or vulnerabilities in the SSH server’s security.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 该日志文件对于分析暴力破解攻击的结果，并识别 SSH 服务器安全中的模式或漏洞至关重要。
- en: In conclusion, PowerShell provides a flexible and powerful platform for automating
    SSH server brute forcing during security testing. However, it’s crucial to use
    these techniques responsibly and with the appropriate permissions to ensure the
    integrity and legality of the testing process.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，PowerShell为在安全测试过程中自动化SSH服务器暴力破解提供了一个灵活且强大的平台。然而，必须负责任地使用这些技术，并且获得适当的许可，以确保测试过程的完整性和合法性。
- en: Brute forcing web services using PowerShell
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PowerShell进行Web服务暴力破解
- en: Brute forcing a web service, whether it’s SOAP or REST, involves systematically
    attempting different combinations of credentials to gain unauthorized access.
    PowerShell, with its scripting capabilities and ability to interact with web services,
    can be a valuable tool for automating this process during security testing. In
    this detailed guide, we’ll explore how PowerShell can be used for web service
    brute forcing, covering aspects such as handling SOAP and REST requests, incorporating
    authentication methods, and considering ethical considerations.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对一个Web服务进行暴力破解，无论是SOAP还是REST，都涉及系统性地尝试不同的凭证组合，以获得未经授权的访问权限。PowerShell凭借其脚本能力以及与Web服务交互的能力，可以成为在安全测试过程中自动化这一过程的有价值工具。在本详细指南中，我们将探讨如何使用PowerShell进行Web服务暴力破解，涵盖处理SOAP和REST请求、集成认证方法以及考虑道德问题等方面。
- en: Understanding the web service
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解Web服务
- en: Before initiating any security testing, it’s crucial to have a clear understanding
    of the web service you’re targeting. This involves identifying the type of web
    service (SOAP or REST), understanding the authentication mechanisms in place,
    and familiarizing yourself with the API documentation.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动任何安全测试之前，了解你所针对的Web服务至关重要。这包括识别Web服务的类型（SOAP或REST）、了解已实施的认证机制，并熟悉API文档。
- en: Setting up the environment
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置环境
- en: Ensure that you have explicit authorization for security testing and that it’s
    conducted in a controlled environment. Additionally, become acquainted with the
    web service’s API documentation to understand the endpoints, authentication methods,
    and any rate-limiting policies.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已获得安全测试的明确授权，并且测试在受控环境中进行。此外，熟悉Web服务的API文档，以了解端点、认证方法以及任何限速策略。
- en: Installing required modules
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装所需的模块
- en: 'PowerShell has modules that can simplify interactions with web services. Depending
    on your testing requirements, you might need to install modules such as **Invoke-RestMethod**
    or **Invoke-WebRequest**:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell有一些模块可以简化与Web服务的交互。根据你的测试需求，你可能需要安装像**Invoke-RestMethod**或**Invoke-WebRequest**这样的模块：
- en: '[PRE12]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Creating credential lists
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建凭证列表
- en: 'Prepare lists of credentials for the brute-force attack. These lists can include
    combinations of usernames and passwords or tokens, depending on the authentication
    method used by the web service. Read these lists from external files using PowerShell:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 准备暴力破解攻击所需的凭证列表。这些列表可以包括用户名和密码的组合，或者令牌，具体取决于Web服务使用的认证方法。使用PowerShell从外部文件读取这些列表：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Web service authentication
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Web服务认证
- en: Understand the authentication mechanism used by the web service. Adapt your
    PowerShell script accordingly to handle the authentication process.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 了解Web服务使用的认证机制。根据认证过程调整你的PowerShell脚本。
- en: Basic authentication (REST)
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本认证（REST）
- en: 'For basic authentication web services, include the credentials in the HTTP
    request header:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基本认证的Web服务，将凭证包含在HTTP请求头中：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Token-based authentication (REST)
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于令牌的认证（REST）
- en: 'If the web service uses token-based authentication, include the token in the
    HTTP headers:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Web服务使用基于令牌的认证，请将令牌包含在HTTP头部：
- en: '[PRE15]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Handling SOAP authentication
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理SOAP认证
- en: 'SOAP services often use XML-based authentication. You may need to construct
    SOAP envelopes with the appropriate credentials:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: SOAP服务通常使用基于XML的认证。你可能需要构造带有适当凭证的SOAP信封：
- en: '[PRE16]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Handling web service responses
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理Web服务响应
- en: 'Interpret the responses from the web service to determine the success or failure
    of each brute-force attempt. Web services typically return status codes or specific
    response fields indicating the outcome:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 解读Web服务的响应，以判断每次暴力破解尝试的成功与否。Web服务通常返回状态码或特定的响应字段来指示结果：
- en: '[PRE17]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Rate limiting and stealth
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 限速和隐匿性
- en: To avoid detection and adhere to any rate-limiting policies the web service
    imposes, introduce delays between login attempts.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免被检测到并遵守Web服务所实施的任何限速政策，请在登录尝试之间引入延迟。
- en: 'For example, introduce delays between login attempts:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在登录尝试之间引入延迟：
- en: '[PRE18]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Logging and reporting
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志记录和报告
- en: 'Implement logging to record the results of the brute-force attack. PowerShell
    scripts can log successful logins, failed attempts, and any relevant information
    for later analysis:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 实现日志记录以记录暴力破解攻击的结果。PowerShell 脚本可以记录成功的登录、失败的尝试以及任何相关信息，供后续分析使用：
- en: '[PRE19]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Adapting to web service specifics
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 适应 Web 服务的特定要求
- en: Every web service is unique, and the script should be adapted based on the specific
    details of the target service. This includes understanding the API endpoints,
    request and response formats, error handling, and any other service-specific considerations.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Web 服务都是独特的，脚本应根据目标服务的具体细节进行调整。这包括理解 API 端点、请求和响应格式、错误处理以及其他服务特定的注意事项。
- en: Handling CAPTCHA and multifactor authentication
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理 CAPTCHA 和多因素认证
- en: Suppose the web service employs additional security measures such as CAPTCHA
    or **multifactor authentication** (**MFA**). In that case, the script must account
    for these. Integration with external tools or manual intervention may be required
    to handle such challenges.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 Web 服务使用了额外的安全措施，如 CAPTCHA 或 **多因素认证**（**MFA**）。在这种情况下，脚本必须考虑到这些因素。可能需要与外部工具集成或进行手动干预来处理这些挑战。
- en: Iterating and refining
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迭代与优化
- en: Brute forcing is an iterative process. Analyze the results, refine your approach,
    and iterate through the testing cycle. Adjust the script based on feedback and
    continue testing until a satisfactory level of security is achieved.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力破解是一个迭代过程。分析结果，优化方法，并循环进行测试。根据反馈调整脚本，继续测试，直到达到令人满意的安全级别。
- en: In conclusion, PowerShell can be a powerful tool for automating web service
    brute forcing in both SOAP and REST scenarios. However, it’s crucial to approach
    such testing responsibly, ensuring explicit authorization and adherence to ethical
    and legal guidelines. Always prioritize the security and integrity of the systems
    being tested.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，PowerShell 可以是自动化 Web 服务暴力破解的强大工具，适用于 SOAP 和 REST 场景。然而，采取负责任的测试方法至关重要，确保获得明确授权并遵守道德和法律准则。始终优先考虑被测试系统的安全性和完整性。
- en: Bruteforcing a hash
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 暴力破解哈希
- en: Brute forcing a hash is a technique employed in security testing to uncover
    plaintext values corresponding to hashed passwords or data. PowerShell, with its
    scripting capabilities and cryptographic functions, can be utilized for this purpose.
    This detailed guide will explore how PowerShell can be employed for hash brute
    forcing, covering the essential concepts, techniques, and ethical considerations.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力破解哈希是一种用于安全测试的技术，用于揭示与哈希密码或数据对应的明文值。PowerShell 通过其脚本功能和加密功能，可以用于此目的。本详细指南将探讨如何使用
    PowerShell 进行哈希暴力破解，涵盖基本概念、技术和道德考虑。
- en: Understanding hash brute forcing
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解哈希暴力破解
- en: Hash functions transform input data into fixed-length strings of characters,
    producing a unique hash for each unique input. While hashes are designed to be
    one-way functions, meaning they cannot be reversed to reveal the original input,
    brute forcing involves systematically trying various inputs until a matching hash
    is found.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希函数将输入数据转换为固定长度的字符字符串，为每个唯一的输入生成一个唯一的哈希值。虽然哈希设计为单向函数，意味着它们不能被反转以揭示原始输入，但暴力破解涉及通过系统地尝试各种输入，直到找到匹配的哈希值。
- en: Setting up the environment
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置环境
- en: Before delving into hash brute forcing, having explicit is crucial and ensuring
    that testing is conducted in a controlled environment is crucial. Additionally,
    gather information about the hash algorithm used, such as MD5 and SHA-256.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行哈希暴力破解之前，必须确保获得明确授权，并确保测试在受控环境中进行。此外，收集有关所使用哈希算法的信息，如 MD5 和 SHA-256。
- en: Hash types and hashcat
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 哈希类型和 hashcat
- en: PowerShell may not be the most performant tool for hash cracking due to its
    interpreted nature. **Hashcat**, a specialized tool for hash cracking, is often
    preferred for efficiency. However, PowerShell can still be valuable for educational
    purposes and scenarios where external tools are restricted.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 PowerShell 是解释型语言，它可能不是进行哈希破解时性能最好的工具。**Hashcat** 是一款专门用于哈希破解的工具，通常因其高效性而受到偏好。然而，PowerShell
    仍然可以在教育目的或外部工具受限的场景中发挥作用。
- en: PowerShell script for hash brute forcing
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PowerShell 脚本用于哈希暴力破解
- en: 'Let’s create a simple PowerShell script for hash brute forcing. We’ll use a
    basic brute-force approach to demonstrate the concept in this example. Remember
    that using a specialized tool such as Hashcat is more efficient for real-world
    scenarios:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个简单的PowerShell脚本来进行哈希暴力破解。我们将使用一种基本的暴力破解方法来演示这个概念。请记住，在实际场景中，使用像Hashcat这样的专用工具会更高效：
- en: '[PRE20]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This script attempts to brute force an MD5 hash for the **hello** word by generating
    strings of varying lengths and comparing their hashes with the target hash.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本通过生成不同长度的字符串并将它们的哈希与目标哈希进行比较，尝试暴力破解**hello**词语的MD5哈希。
- en: Customization for different hash algorithms
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 针对不同哈希算法的定制
- en: 'Modify the hash algorithm in the **Create** method to adapt the script for
    different hash algorithms. For example, use **SHA256** for SHA-256 hashes:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在**Create**方法中修改哈希算法，以适应不同的哈希算法。例如，使用**SHA256**来处理SHA-256哈希：
- en: '[PRE21]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Salting
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加盐
- en: Real-world scenarios often involve **salting**, which is where a random value
    is added to the password before hashing. PowerShell scripts can be extended to
    handle salted hashes, but they significantly increase complexity.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 真实世界的场景通常涉及**加盐**，即在对密码进行哈希之前添加一个随机值。PowerShell脚本可以扩展以处理加盐哈希，但这大大增加了复杂性。
- en: Handling larger character sets and optimizing
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理更大的字符集和优化
- en: You’d need to optimize the script and handle a larger character set for efficient
    brute forcing. Hashcat and similar tools excel in handling these scenarios due
    to their optimized code and support for GPU acceleration.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要优化脚本，并处理更大的字符集以提高暴力破解效率。Hashcat和类似工具在处理这些场景时表现出色，因为它们具有优化的代码并支持GPU加速。
- en: Summary
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter on brute forcing as a vital aspect of security testing, we embarked
    on a journey through various domains, unraveling the intricacies of this technique.
    Beginning with the foundational understanding of brute forcing, we explored its
    significance in identifying vulnerabilities within authentication systems. The
    chapter delved into the specific application of brute forcing in different contexts,
    including FTP servers, SSH servers, web services (SOAP and REST), and hashes.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章关于暴力破解作为安全测试重要组成部分的内容中，我们开始了一个探索之旅，揭示了这一技术的复杂性。我们从对暴力破解的基本理解开始，探讨了它在识别认证系统漏洞中的重要性。本章深入探讨了暴力破解在不同场景中的具体应用，包括FTP服务器、SSH服务器、Web服务（SOAP和REST）以及哈希。
- en: We navigated through the intricacies of automating login attempts using PowerShell
    for FTP servers, emphasizing the need for responsible and authorized testing.
    The exploration extended to SSH servers, where PowerShell scripts were leveraged
    for systematic username and password combinations to unveil potential weaknesses
    in the authentication process. The chapter provided an in-depth guide on the ethical
    considerations and best practices associated with such security testing.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们深入探讨了如何使用PowerShell自动化FTP服务器的登录尝试，强调了负责任和授权测试的必要性。探索还扩展到SSH服务器，PowerShell脚本被用于系统化地尝试用户名和密码组合，以揭示认证过程中的潜在弱点。本章提供了关于这类安全测试的伦理考虑和最佳实践的详细指南。
- en: Transitioning to both SOAP and REST web services, we showcased how PowerShell
    can be a powerful tool for automating brute-force attacks. From understanding
    the authentication methods to handling web service responses, the chapter offered
    insights into the nuances of security testing within these dynamic environments.
    The emphasis was on adapting scripts based on the specifics of each web service,
    considering rate limiting, and incorporating ethical considerations into the testing
    process.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 过渡到SOAP和REST Web服务时，我们展示了PowerShell如何成为自动化暴力攻击的强大工具。从了解认证方法到处理Web服务响应，本章提供了在这些动态环境中进行安全测试的细节洞察。重点在于根据每个Web服务的具体情况调整脚本，考虑速率限制，并将伦理考量融入测试过程。
- en: The exploration reached its pinnacle with a focus on hash brute forcing. The
    chapter illustrated how PowerShell scripts can systematically attempt various
    inputs to uncover plaintext values corresponding to hashed passwords or data.
    Though not as performant as specialized tools such as hashcat, the script served
    as an educational tool, offering a glimpse into the methodologies and ethical
    considerations associated with hash cracking.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 探讨的高潮聚焦于哈希暴力破解。章节展示了如何通过 PowerShell 脚本系统性地尝试不同的输入，以揭示与哈希密码或数据对应的明文值。尽管其性能不如专门的工具（如
    hashcat），该脚本作为教育工具，提供了对哈希破解方法学和伦理考量的初步了解。
- en: This chapter is a comprehensive guide to the multifaceted landscape of brute
    forcing in security testing. It equips security professionals with the knowledge
    and tools necessary to identify weaknesses in FTP, SSH, web services, and hash
    implementations, fostering a holistic approach to securing digital environments
    in the face of evolving cybersecurity challenges.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是对安全测试中暴力破解的多方面场景的全面指南。它为安全专业人士提供了必要的知识和工具，以识别 FTP、SSH、Web 服务和哈希实现中的弱点，促使在面对不断变化的网络安全挑战时，采用全方位的方法来保护数字环境。
- en: In the next chapter, we will have an in-depth exploration of the essential principles
    of remote administration; the chapter delves into the core technologies that empower
    PowerShell to connect administrators with their remote targets.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将深入探讨远程管理的基本原则；本章将详细讲解支持 PowerShell 连接管理员与远程目标的核心技术。
