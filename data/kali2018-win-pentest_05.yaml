- en: Password Attacks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码攻击
- en: Anybody you meet will tell you that weak passwords are responsible for dozens
    of successful intrusions, both local and remote. As a trained network administrator,
    or security engineer, you have counselled users to make their passwords stronger
    many times. What you may not be aware of is that many technology professionals
    make weak passwords or patterns of passwords that endanger not just their own
    accounts, but the entire network that they maintain. This chapter will show you
    several tools for testing the passwords on your network, so you can help guide
    your users to the habit of better passwords.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您遇到的任何人都会告诉您，弱密码是导致许多成功入侵的原因，无论是本地还是远程。作为受过训练的网络管理员或安全工程师，您已经多次建议用户使其密码更加安全。您可能没有意识到的是，许多技术专业人员使用弱密码或密码模式，不仅危及自己的帐户，而且危及他们维护的整个网络。本章将向您展示几种测试网络密码的工具，以便您可以帮助指导用户养成更好密码的习惯。
- en: 'We will learn the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章学习以下主题：
- en: Password attack planning
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码攻击计划
- en: Meet my friend, Johnny
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 见我的朋友，约翰尼
- en: Meet Johnny's dad, John the Ripper
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 见约翰尼的父亲，约翰·里帕
- en: Meet the ex—xHydra
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 见前任—xHydra
- en: 'It is the nature of hashing algorithms that all hashes should be about the
    same length, and it really doesn''t seem any more likely that someone could crack
    the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希算法的性质是所有哈希应该大致相同的长度，似乎并不更可能有人能够破解以下内容：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any quicker than they could crack:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 任何比他们更快破解的：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Sadly, even on a slow computer, the first hash of the password `Password` is
    going to be cracked in fewer than 20 seconds, while the second password hash for
    `GoodLuckTryingToCrackMyPassword!` may take several months to crack. The following
    list illustrates some of the passwords you will find in any of the dozens of word
    lists that you can find on the internet, and that make cracking passwords so much
    easier. Some common hashes can be cracked by [https://www.google.com](https://www.google.com),
    just by pasting the hash into the search bar. Most web applications and operating
    systems add a few characters, called `salt`, to the user's password choice, so
    as to make a simple cryptographic hash a bit more complicated and less guessable.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，即使在一台慢速计算机上，密码`Password`的第一个哈希值也将在不到20秒内被破解，而`GoodLuckTryingToCrackMyPassword!`的第二个密码哈希值可能需要数月才能破解。以下列表说明了您可以在互联网上找到的数十个单词列表中找到的一些密码，这些密码使得破解密码变得更加容易。一些常见的哈希可以通过[https://www.google.com](https://www.google.com)破解，只需将哈希粘贴到搜索栏中即可。大多数网络应用程序和操作系统会向用户选择的密码添加一些字符，称为“盐”，以使简单的加密哈希变得更加复杂和不易猜测。
- en: 'The following screenshot shows some examples of passwords in clear text and
    their hash values:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了一些明文密码示例及其哈希值：
- en: '![](img/a177e90f-92d6-4fbc-8bfb-dc7486f52ed6.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/a177e90f-92d6-4fbc-8bfb-dc7486f52ed6.png)
- en: Password attack planning
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码攻击计划
- en: Passwords are normally the keys to any system or network. Ever since the dawn
    of computers, passwords have been used to lock system data from unwanted eyes.
    So password cracking is a much-needed skill in the hacking trade. Capture or crack
    the right password and you have the keys to the kingdom, access to anywhere, any
    time. We'll also talk a bit about creating strong passwords as we go along. If
    you are a systems administrator reading this book, you're the person we are talking
    about. It is your password an attacker is going after. Sure, typing a 12- or 14-character
    password every time you log in to something is a pain, but how important is your
    network?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 密码通常是任何系统或网络的关键。自计算机诞生以来，密码一直被用来阻止未经授权的人查看系统数据。因此，密码破解是黑客行业中非常需要的技能。捕获或破解正确的密码，您就拥有了通往王国的钥匙，可以随时随地访问任何地方。随着我们的讨论，我们还将谈一下如何创建强密码。如果您是一位阅读本书的系统管理员，那么您就是我们所说的人。攻击者正在寻找的是您的密码。当然，每次登录时输入12或14个字符的密码都很痛苦，但您的网络有多重要呢？
- en: Personally, we wish the word *password* hadn't been used for this function from
    the beginning. It should be called keys. Normal users of systems cry and whine
    about password-protected data. Most relate the word *password* to entry into a
    clubhouse or something. A user will have locks and burglar alarms on all his property
    but will use a four-letter password on his computer. People relate the word *key*
    to locking something important. Actually, if your password is just a *word*, you
    will be pwned in minutes. It's best to use passphrases. Something like *Mary had
    a little lamb*. is a lot better than just a word. We'll see just how important
    this is in this chapter as we think about the passwords you use.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我们希望从一开始就不要使用*密码*这个词来表示这个功能。它应该被称为密钥。系统的普通用户会因为受密码保护的数据而哭泣和抱怨。大多数人将*密码*这个词与进入俱乐部或其他东西联系起来。用户会在所有财产上安装锁和防盗警报，但在计算机上使用一个四个字母的密码。人们将*密钥*这个词与锁定重要物品联系起来。实际上，如果您的密码只是一个*单词*，您将在几分钟内被攻破。最好使用密码短语。像*玛丽有一只小羊*之类的东西比单个单词好得多。随着我们在本章中思考您使用的密码的重要性，我们将看到这一点有多重要。
- en: Cracking the NTLM code (revisited)
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 破解NTLM代码（重温）
- en: One method of password attacks was covered in [Chapter 4](20fa14ea-ee8e-413e-80b6-bba429512e6c.xhtml),
    *Sniffing and Spoofing*. On a Windows network running NetBIOS, capturing NTLM
    hashes is child's play. They're just floating around in the ARP cloud waiting
    to be plucked. As we have shown in the earlier chapters, when you are using Metasploit,
    you don't need to even crack this hash to a password but can just pass the hash
    to another Windows system.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 密码攻击的一种方法在[第4章](20fa14ea-ee8e-413e-80b6-bba429512e6c.xhtml)中已经涵盖，*嗅探和欺骗*。在运行NetBIOS的Windows网络上，捕获NTLM哈希就像小孩玩耍一样简单。它们就漂浮在ARP云中等待被摘取。正如我们在前几章中所展示的，当您使用Metasploit时，您甚至不需要将此哈希破解为密码，而只需将哈希传递给另一个Windows系统。
- en: Sometimes, you need the actual password. System admins sometimes get lazy and
    use the same password on several classes of devices. Let's say you have some Windows
    hashes and you need to get into a router or a Linux machine to which you are not
    sure of the password. There is a good chance that the passwords are the same on
    other systems, so you can crack the hashes that the NTLM protocol leaks. Lots
    of us are guilty of reusing passwords for infrastructure devices, even though
    we know better. It might be safer to use different usernames and passwords for
    routers and other infrastructure devices, and never use the domain administrator
    accounts to log in to any machines, unless it is absolutely necessary.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你需要实际的密码。系统管理员有时会变懒，会在几类设备上使用相同的密码。假设你有一些Windows哈希值，你需要进入一个路由器或一个你不确定密码的Linux机器。很有可能其他系统的密码是相同的，所以你可以破解NTLM协议泄漏的哈希值。我们中的许多人都有在基础设施设备上重复使用密码的行为，尽管我们知道更好的做法。对于路由器和其他基础设施设备，使用不同的用户名和密码可能更安全，除非绝对必要，不要使用域管理员帐户登录任何机器。
- en: 'Hacker hint:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客提示：
- en: Turn off NetBIOS and use Active Directory with Kerberos and LDAP for Window's
    logins and network functions.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭NetBIOS，并使用Kerberos和LDAP的Active Directory进行Windows登录和网络功能。
- en: In this chapter, we will be looking at cracking passwords and not just passing
    hashes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将研究破解密码，而不仅仅是传递哈希值。
- en: Password lists
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码列表
- en: For any good password cracker, sometimes the fastest way to crack a password
    is by using a password list. It's even best to sometimes run a list of, say, the
    500 worst passwords against the users on your system to find those lazy *losers*
    who are using bad passwords. A bad password most of the time can be broken in
    seconds compared to hours, days, or weeks when using a strong pass-phrase.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何一个好的密码破解器，有时破解密码的最快方法是使用密码列表。有时甚至最好运行一个包含最差的500个密码的列表，以查找那些使用糟糕密码的懒惰者。大多数情况下，一个糟糕的密码可以在几秒钟内被破解，而使用强密码短语可能需要几个小时、几天或几周。
- en: 'Kali contains many password you can fine them in the following directory `/usr/share/wordlists`.
    The following is also a link and a listing of some good password files. A Google
    search will also lead you to lists of common passwords and also lists of passwords,
    stolen from websites. When using a list of stolen passwords, only use the lists
    that have been scrubbed of the usernames. Using a full set of stolen credentials
    (username and password) could land you in trouble. With a list of just passwords,
    you just have a list of words with no link back to the original user. This is
    safe and legal to use: [https://wiki.skullsecurity.org/Passwords](https://wiki.skullsecurity.org/Passwords).'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Kali包含许多密码，你可以在以下目录`/usr/share/wordlists`中找到它们。以下也是一些好的密码文件的链接和列表。谷歌搜索也会带你找到常见密码的列表，以及从网站上窃取的密码列表。当使用被窃取的密码列表时，只使用已经清理过用户名的列表。使用完整的被盗凭证（用户名和密码）可能会让你陷入麻烦。只有密码列表，你只有一个没有与原始用户关联的单词列表。这是安全和合法的使用：[https://wiki.skullsecurity.org/Passwords](https://wiki.skullsecurity.org/Passwords)。
- en: '![](img/d37e5369-d28b-42f0-9ba6-e6d0ff48b941.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d37e5369-d28b-42f0-9ba6-e6d0ff48b941.png)'
- en: Cleaning a password list
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 清理密码列表
- en: Sometimes, when you get a list of passwords, the list might be tabbed columns
    in a text file or maybe have strange spaces of tabs mixed with the words in the
    file. You'll want to clean these spaces and tabs and have a single word per line
    for the word list to work with password crackers.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，当你得到一个密码列表时，列表可能是文本文件中的制表列，或者可能有奇怪的空格或制表符与文件中的单词混合。你需要清理这些空格和制表符，并且每行只有一个单词，以便单词列表可以与密码破解器一起使用。
- en: One of the earliest concepts of Unix was small programs within the system that
    can be piped together to perform complex tasks. Linux is the Red Headed Cousin
    of Unix and these tools are in every distribution of Linux, including Kali. This
    is old school but it works very well once you understand how to do it. We are
    going to go through each program used and then show how to string these together
    to perform this task all in a single line of commands.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Unix的最早概念之一是系统中的小程序可以被管道连接在一起执行复杂的任务。Linux是Unix的红头发表亲，这些工具都包含在每个Linux发行版中，包括Kali。这是老派的方法，但一旦你理解了如何做，它就非常有效。我们将逐个介绍使用的每个程序，然后展示如何将它们串联在一起以执行这个任务，所有命令都在一行中。
- en: The following is a list of 500 common passwords. The words were listed in an
    HTML table and the rows were numbered so, when copied to a text file, what we
    get in the raw form is shown next. Most of the word lists you can find have approximately
    the same extremely common bad passwords, and although we are working in English,
    there are word lists in other languages. Weak passwords are not strictly the province
    of the English-speaking world.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是500个常见密码的列表。这些单词被列在一个HTML表中，并且行号已经编号，所以当复制到文本文件时，原始形式如下所示。你可以找到的大多数单词列表都包含大约相同的极其常见的糟糕密码，尽管我们使用的是英语，但其他语言也有单词列表。弱密码并不严格属于英语世界。
- en: 'That said, the next screenshot is a great example of very common, but very
    weak, English-language passwords. It would waste space to show all 500 words,
    so we are presenting the `500-common-original.txt` file on the publisher''s website:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，下一个截图是非常常见但非常薄弱的英语密码的一个很好的例子。展示所有500个单词会浪费空间，所以我们在出版商的网站上提供了`500-common-original.txt`文件：
- en: '![](img/a93639c7-a6aa-4cbb-bc90-9b3603c7deb1.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a93639c7-a6aa-4cbb-bc90-9b3603c7deb1.png)'
- en: Note that we have the line numbers to the left which we need to discard and
    five words per line separated by tabs and spaces. We will want to move each word
    to a new line.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们左侧有行号需要丢弃，每行有五个单词，用制表符和空格分隔。我们需要将每个单词移到新的一行。
- en: 'The `cat` command reads a text file and prints out to the screen or to another
    file. Using it along with the `cut` command, we will strip out the line numbers
    first. The `cut` command sees the tabs as spacers between fields so the numbers
    are the first field in the line. We want to cut the numbers and leave the words
    so we cut the first field and keep the others. To do this, run the following command:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`cat`命令读取文本文件并将其打印到屏幕或另一个文件中。与`cut`命令一起使用，我们将首先剥离行号。`cut`命令将制表符视为字段之间的间隔，因此数字是行中的第一个字段。我们想要剪切数字并保留单词，所以我们剪切第一个字段并保留其他字段。为此，请运行以下命令：'
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We get the returned output return as follows. If you look, you will see that
    this is a list of the first word only in every line and not the whole list. Using
    the `-f2` flag, we have cut everything except the second field in every line.
    The following screenshot has some words scrubbed out to keep this book''s G-rating,
    but some people are vulgar by nature. Some words in the list may not be fit to
    print, but they are in the top 500 common passwords. When hacking, you are dealing
    with a person''s nature, and that is not necessarily socially correct. People
    are often found to choose rude words, when they believe nobody will ever see what
    they wrote, or where they believe themselves to be anonymous:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '我们得到了如下返回的输出。如果你看一下，你会发现这是每行中仅有的第一个单词的列表，而不是整个列表。使用`-f2`标志，我们已经剪切了除每行中的第二个字段之外的所有内容。以下截图已经删除了一些单词，以保持本书的G级评级，但有些人天生粗鲁。列表中的一些单词可能不适合打印，但它们是前500个常见密码。在黑客行为中，你正在处理一个人的本性，这并不一定是社会上正确的。人们经常会选择粗鲁的词语，当他们认为没有人会看到他们写的东西，或者他们认为自己是匿名的时候。 '
- en: '![](img/ee8a388b-6f2a-4f71-979c-15a6321290e2.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ee8a388b-6f2a-4f71-979c-15a6321290e2.png)'
- en: 'Since we want all the words from each line, we have to include the other five
    columns in the command. Five words in a line, plus the number, is six fields to
    a line and we want to cut the first field (the number) and keep the rest, so we
    change the `-f` flag to `-f2-6`; this will cut field 1 and print out fields 2
    through 6\. We see that the return has cut out the number row but we still have
    five words per line. This will not run correctly in the password cracker; we still
    need to move all the words to their own line:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们想要每行的所有单词，我们必须在命令中包括其他五列。一行中有五个单词，加上数字，共有六个字段，我们想要剪切第一个字段（数字）并保留其余部分，所以我们将`-f`标志更改为`-f2-6`；这将剪切字段1并打印出字段2到6。我们看到返回已经去掉了数字行，但我们仍然每行有五个单词。这在密码破解器中不会正确运行；我们仍然需要将所有单词移到自己的一行上：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This command string gets rid of the line numbers, although it would not be
    a matter of more than a couple of seconds to leave the line numbers in. It wouldn''t
    be as neat, though, and sometimes neatness counts. The following screenshot is
    the output of the command:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令字符串去掉了行号，尽管保留行号不会超过几秒钟。但这样做不够整洁，有时整洁是很重要的。以下截图是该命令的输出：
- en: '![](img/c3d81414-1091-441c-a92e-03d04b4f6e40.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c3d81414-1091-441c-a92e-03d04b4f6e40.png)'
- en: 'To get all the words on a new line, we use the `--output-delimiter` flag and
    use the value of `$''\n''`, which tells the output for every delimiter which is
    the tab space in the line to move the next field to a new line:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让所有单词都在新的一行上，我们使用`--output-delimiter`标志，并使用`$'\n'`的值，这告诉输出每个分隔符（即制表符空格）在该行上将下一个字段移到新的一行：
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/5096d4b3-8650-4010-9de3-bdd5b00a550d.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5096d4b3-8650-4010-9de3-bdd5b00a550d.png)'
- en: Now we have each word on a new line, but we also need to print this to a file
    for use. To do this, we will use the redirect command `>` to send the output to
    a new text file. Be careful, as the `>` command sends the output of the commands
    being run to a file, but if the filename exists, it will overwrite the contents
    of the file. If you want to increase the size of a file you already have, use
    the `>>` command to append the output to an already existing file.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们每个单词都在新的一行上，但我们还需要将其打印到文件中以供使用。为此，我们将使用重定向命令`>`将输出发送到新的文本文件。请注意，`>`命令将正在运行的命令的输出发送到文件，但如果文件名存在，它将覆盖文件的内容。如果要增加已有文件的大小，请使用`>>`命令将输出附加到已有文件中。
- en: 'The following screenshot shows the commands sending the words to the working
    file of weak passwords, and testing the output file for content and format:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了将单词发送到弱密码的工作文件，并测试输出文件的内容和格式：
- en: '![](img/89240884-a7be-49d5-998b-148d100b7551.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89240884-a7be-49d5-998b-148d100b7551.png)'
- en: 'Run the `ls` command to double-check that you are in the right directory, and
    that your chosen output file does not exist, and then run the following output
    to a file:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`ls`命令来双重检查你是否在正确的目录中，并且你选择的输出文件不存在，然后运行以下输出到一个文件：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Hacker note:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客笔记：
- en: If you accidentally run the command as `cat 500-common-orginal.txt | cut -f2-6
    --output-delimiter=$'\n' > 500-common-original.txt`, you will overwrite your original
    file and be left with nothing to recreate, in the event that your new file contents
    are not what you wanted.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你意外地运行了`cat 500-common-orginal.txt | cut -f2-6 --output-delimiter=$'\n' >
    500-common-original.txt`命令，你将覆盖原始文件，并且最终得不到你想要的新文件内容。
- en: Notice that this time there is no output to the screen but, when the `ls` command
    is run again, we see the new file in the working directory. By catting the new
    file, we see our new password file ready for use.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这次屏幕上没有输出，但当再次运行`ls`命令时，我们会看到工作目录中的新文件。通过查看新文件，我们可以看到我们准备好供使用的新密码文件。
- en: My friend, Johnny
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我的朋友约翰尼
- en: First, we will talk about my friend, Johnny. Johnny is a GUI frontend for my
    other friend, John. For most password cracking tasks, this is an easy way to use
    John. It uses the normal defaults for most password cracking sessions. Once you
    have captured some hashes, save them to a text file and open Johnny.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将谈谈我的朋友约翰尼。约翰尼是我另一个朋友约翰的GUI前端。对于大多数密码破解任务，这是使用约翰的简单方法。它使用大多数密码破解会话的正常默认值。一旦你捕获了一些哈希值，将它们保存到一个文本文件中并打开约翰尼。
- en: 'The following is a screenshot from the LxDE desktop showing where Johnny can
    be found. You can also find it on all the other desktops under the same header
    location, Applications | 05 - Password Attacks | johnny:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是LXDE桌面的屏幕截图，显示了Johnny的位置。您还可以在所有其他桌面上找到它，位置相同，应用程序| 05 - 密码攻击| johnny：
- en: '![](img/b1b70fb3-78ff-4d0a-992e-0738285fc569.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1b70fb3-78ff-4d0a-992e-0738285fc569.png)'
- en: 'We are using the password hashes from a previous exploit earlier in the book,
    where we were passing the hash. We have shortened the list to only include the
    hashes of the two accounts that we think have critical access to the networked
    systems:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在使用书中早期的先前利用中的密码哈希，当时我们正在传递哈希。我们已经将列表缩短，只包括我们认为对网络系统具有关键访问权限的两个帐户的哈希：
- en: '![](img/c0494d80-bd5c-4de9-ae1f-c1537e70bdb9.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c0494d80-bd5c-4de9-ae1f-c1537e70bdb9.png)'
- en: Once Johnny is open, click on the Open Passwd File button and pick the text
    file where you have saved the user's hash values. This will load the file into
    Johnny.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Johnny打开，点击“打开密码文件”按钮，选择您保存用户哈希值的文本文件。这将把文件加载到Johnny中。
- en: 'Hacker note:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客笔记：
- en: It is best to delete the guest and any other user account that you do not want
    to crack. This will cut down on the length of time it takes to crack the passwords.
    As you see, we are only cracking two accounts.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最好删除访客和任何其他您不想破解的用户帐户。这将减少破解密码所需的时间。如您所见，我们只破解了两个帐户。
- en: 'The following screenshot is your first view of Johnny''s interface. Very simple,
    and powerful:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是您对Johnny界面的第一印象。非常简单，但功能强大：
- en: '![](img/00de9048-f07f-4d58-9ef0-b28c4ea265a3.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00de9048-f07f-4d58-9ef0-b28c4ea265a3.png)'
- en: Because this is a test network, there are only two usernames in the dialog window.
    In a production network, there would be as many usernames as people in the organization
    permitted to log into the system. It is likely that at least one of these users
    has administrative privileges.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这是一个测试网络，对话框窗口中只有两个用户名。在生产网络中，将有与组织中被允许登录系统的人数一样多的用户名。很可能这两个用户中至少有一个具有管理员特权。
- en: 'Hacker''s note:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客的笔记：
- en: Remember that the administrator's account is always UID 500\. Sometimes, an
    administrator will change the name of the administrator account. This does hide
    the account in some cases, but once you get the UIDs of the accounts, finding
    the administrator is as easy as 500.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，管理员帐户始终是UID 500。有时，管理员会更改管理员帐户的名称。这在某些情况下会隐藏帐户，但一旦您获得了帐户的UID，找到管理员就像500一样容易。
- en: '![](img/f3a72e5f-fd23-4dfe-afc4-f8b605d29c57.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3a72e5f-fd23-4dfe-afc4-f8b605d29c57.png)'
- en: 'We know these hashes come from a Windows 7 system. With Windows 7, LM hashes
    are no longer used by default, so we must change the default LM hash cracking.
    You will get the following error in the Output tab if this is not changed:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道这些哈希来自Windows 7系统。在Windows 7中，默认不再使用LM哈希，因此我们必须更改默认的LM哈希破解。如果不更改，您将在“输出”选项卡中收到以下错误：
- en: '![](img/baa2a6ed-d7e9-4864-b02c-291725df4137.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/baa2a6ed-d7e9-4864-b02c-291725df4137.png)'
- en: 'Click on the Options tab and change the auto detect to nt2, as shown in the
    following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“选项”选项卡，并将自动检测更改为nt2，如下截图所示：
- en: '![](img/33e4bbf3-983d-49f3-948e-dfcf41a13b90.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/33e4bbf3-983d-49f3-948e-dfcf41a13b90.png)'
- en: 'Now click the Passwords tab and then click the Start Attack button. This will
    begin the cracking process. You can see the process in the bottom tab on the screen:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在点击“密码”选项卡，然后点击“开始攻击”按钮。这将开始破解过程。您可以在屏幕底部选项卡中看到该过程：
- en: '![](img/a20267d6-67e1-4d0c-8fa0-ec0616c1609a.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a20267d6-67e1-4d0c-8fa0-ec0616c1609a.png)'
- en: Note that it now shows the format as nt2 and is running. Have a cup of coffee.
    This might take a while.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，它现在显示格式为nt2并正在运行。喝杯咖啡吧。这可能需要一段时间。
- en: Also note that we have a Pause Attack button. If needed, you can pause the attack.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意我们有一个“暂停攻击”按钮。如果需要，您可以暂停攻击。
- en: Sometimes, open source applications have quirks. Johnny is no different. Sometimes
    when doing a cracking run, the process will run and crack the passwords but they
    will not show in the GUI window. If the Pause Attack button has grayed out and
    only the Start button can be clicked, the run has completed, and the passwords
    have been cracked. You can find the cracking information by clicking on the Options
    button. This page will also show you the length of time it took to run and that
    the passwords cracked. This the best page to get all the results of the run.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，开源应用程序会有怪癖。Johnny也不例外。有时，在进行破解运行时，该过程将运行并破解密码，但密码不会显示在GUI窗口中。如果“暂停攻击”按钮变灰，只能点击“开始”按钮，则运行已完成，并且密码已被破解。您可以通过单击“选项”按钮找到破解信息。此页面还将显示运行所需的时间以及破解的密码。这是获取运行所有结果的最佳页面。
- en: 'You can see in the next screenshot that it took 7 hours and 18 minutes to crack
    two passwords with six and seven characters, using the complexity of uppercase
    and lowercase letters, numbers, and special characters:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在下一个截图中看到，使用大写和小写字母、数字和特殊字符的复杂性，破解两个密码分别花费了7小时18分钟，一个有六个字符，一个有七个字符：
- en: '![](img/dd94adae-ec16-4f22-a677-4b8dff46b6df.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd94adae-ec16-4f22-a677-4b8dff46b6df.png)'
- en: John the Ripper (command line)
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: John the Ripper（命令行）
- en: John the Ripper is the application that underlies Johnny. You may be like us,
    and be more comfortable on the command line than in a GUI, when using password
    cracking tools, such as John the Ripper. You may go for the CLI because it uses
    fewer resources than the GUI, or because you are working through an SSH connection
    to a server without a GUI interface. It is easy to use John the Ripper, and there
    are a lot more options and ways to use John by using the command line that have
    not yet been added to Johnny.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: John the Ripper是Johnny的基础应用程序。您可能和我们一样，在使用密码破解工具（如John the Ripper）时，更喜欢命令行而不是GUI。您可能选择CLI，因为它比GUI使用更少的资源，或者因为您正在通过SSH连接到没有GUI界面的服务器进行工作。使用John
    the Ripper很容易，而且通过使用命令行，可以使用更多选项和方法来使用John，这些选项和方法尚未添加到Johnny中。
- en: 'You can see all the various hashing algorithms supported by John and test the
    speed of your system for cracking by running the following command:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到John支持的各种哈希算法，并通过运行以下命令测试系统的破解速度：
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This will run through all the various hashing algorithms supported by John
    and give you the speed it will take for the various hashes. The following screenshot
    shows the read-out from the `test` flag:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这将运行John支持的所有各种哈希算法，并为各种哈希所需的速度提供信息。以下截图显示了`test`标志的输出：
- en: '![](img/aa2f8949-fc96-47cd-a7b5-3225742bb706.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa2f8949-fc96-47cd-a7b5-3225742bb706.png)'
- en: 'We''re going to run John against a set of hashes obtained from an earlier exploitation
    of a system. Note the flags we are using to perform this. We are using `--format=nt2`
    and then picking the file:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将对从先前对系统的利用中获得的一组哈希运行John。请注意我们使用的标志来执行此操作。我们使用`--format=nt2`，然后选择文件：
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](img/ec663315-266f-4fcf-abf2-c54ff114df92.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ec663315-266f-4fcf-abf2-c54ff114df92.png)'
- en: With this cracking run, we are cracking passwords that are more than six characters.
    Note the time it has taken to run this process. This shows, when it comes to passwords,
    the length is more important than the complexity.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这次破解运行，我们正在破解超过六个字符的密码。请注意运行此过程所花费的时间。这表明，当涉及密码时，长度比复杂性更重要。
- en: 'In the following screenshot, you can see that it took 1 day and 23 hours to
    crack a pretty simple seven-character password. The second password which was
    eight characters long did not crack after 4 days, 14 hours, and 56 minutes. Yes,
    each extra character makes the time it takes to crack grow exponentially:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，您可以看到破解一个相当简单的七位字符密码花了1天23小时。第二个八位字符的密码在4天14小时56分钟后仍未破解。是的，每增加一个字符，破解所需的时间就会呈指数增长：
- en: '![](img/b800440e-7b0f-49b8-bbb6-7c5c41e4f0eb.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b800440e-7b0f-49b8-bbb6-7c5c41e4f0eb.png)'
- en: 'By running the `-show` flag after the run, you can see the cracked word, and
    that we have one still left to crack:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在运行后运行“-show”标志，您可以看到已破解的单词，以及我们还有一个未破解的单词：
- en: '![](img/3e46c6d9-95e8-44d0-9c42-5b17ba9787da.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e46c6d9-95e8-44d0-9c42-5b17ba9787da.png)'
- en: This cracking was done on a VM with one running processor. Adding processors
    will increase the number of running threads during cracking, and that makes the
    job take less time. People have built machines filled with processors and GPU
    cards that can crack passwords like we are using in a matter of hours. Some use
    Amazon AWS and set up instances with a lot of processing power, but this costs
    a lot of money. It's also known that some ingenious college students have fired
    up the college supercomputer meant for modeling the solar system and used these
    systems to crack passwords really fast. Even if your neighborhood evil hacker
    has these kinds of systems, the longer password is still better. Systems like
    these are the reason for using passwords or pass-phrases with a length over 14
    characters. Even with pass-phrases over 14 characters, this shows that if you
    have the hash, it is just a matter of time, money, and processing power before
    you have the password.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这次破解是在一个运行处理器的虚拟机上完成的。增加处理器将增加破解过程中运行的线程数量，从而缩短任务所需的时间。有些人构建了装满处理器和GPU卡的机器，可以在几小时内破解我们正在使用的密码。有些人使用亚马逊AWS并设置具有大量处理能力的实例，但这需要大量资金。众所周知，一些聪明的大学生启动了用于建模太阳系的大学超级计算机，并使用这些系统快速破解密码。即使您的邻里邪恶黑客拥有这些系统，更长的密码仍然更好。这些系统是使用长度超过14个字符的密码或密码短语的原因。即使使用超过14个字符的密码短语，这表明如果您拥有哈希值，那么只是时间、金钱和处理能力的问题，您就可以得到密码。
- en: xHydra
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: xHydra
- en: xHydra is a GUI frontend for the password cracker called Hydra. Hydra can be
    used for both offline and online password cracking. Hydra can be used for many
    types of online attacks, including attacks against MySQL, SMB, MSSQL, and many
    types of HTTP/HTTPS logins, just to name a few.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: xHydra是一个名为Hydra的密码破解器的图形用户界面前端。Hydra可用于离线和在线密码破解。Hydra可用于许多类型的在线攻击，包括针对MySQL、SMB、MSSQL和许多类型的HTTP/HTTPS登录的攻击，仅举几例。
- en: We are going to use xHydra to attack a running MySQL service on a machine running
    a WordPress site. Since the machine is running a WordPress site and a MySQL service,
    it is an easy guess that the database login's username is `wordpress`, the default
    admin account. By default, MySQL doesn't block brute-force attacks, so we know
    we stand a good chance with this attack.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用xHydra攻击运行WordPress站点的机器上运行的MySQL服务。由于该机器正在运行WordPress站点和MySQL服务，因此可以猜测数据库登录的用户名是`wordpress`，即默认的管理员帐户。默认情况下，MySQL不会阻止暴力破解攻击，因此我们知道这次攻击有很大的机会成功。
- en: 'To start xHydra in Kali Version 1.x, you would go to 05 - Password Attacks
    | Online Attacks | hydra-gtk. The hydra-gtk will start xHydra. Yes, I know it''s
    confusing but they are the same. The following screenshot shows the menu from
    LxDE. (yes, that is my motorcycle in the background, and yes it is a Harley):'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Kali版本1.x中启动xHydra，您需要转到05 - 密码攻击|在线攻击|hydra-gtk。hydra-gtk将启动xHydra。是的，我知道这很令人困惑，但它们是相同的。以下截图显示了来自LXDE的菜单。（是的，那是我后面的摩托车，是哈雷）
- en: '![](img/1ffa25b9-111d-4611-a5b6-5cec03520755.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1ffa25b9-111d-4611-a5b6-5cec03520755.png)'
- en: 'Something to remember: in Kali, as in any other Linux distribution, you can
    either open Terminal and type your command at the prompt, or you can open a command
    dialog by hitting *Alt* + *F2*. This will give you what is called the **Run Box**.
    All desktops have this function. In the following two screenshots, we are showing
    how to find xHydra, `# locate xhydra` and how to launch it from a command line
    in Terminal, with just the name `xhydra`; and how it looks when you invoke a command
    from the *Alt* + *F2* keyboard shortcut. The following is the Run Box from Gnome
    3:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的一点是，在Kali中，就像在任何其他Linux发行版中一样，您可以打开终端并在提示符处输入命令，也可以通过按下*Alt* + *F2*打开命令对话框。这将为您提供所谓的**运行框**。所有桌面都有这个功能。在接下来的两个截图中，我们展示了如何找到xHydra，`#
    locate xhydra`以及如何在终端中通过名称`xhydra`启动它；以及当您通过*Alt* + *F2*键盘快捷键调用命令时的外观。以下是Gnome
    3的运行框：
- en: '![](img/c86d986a-e75d-40ed-ac59-c9dff6db2724.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c86d986a-e75d-40ed-ac59-c9dff6db2724.png)'
- en: 'Hacker hint:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客提示：
- en: As we have discussed, Gnome 3 does things *they're way!* even if it is wrong
    and confusing. You type in the command you want to run, and hit *Enter* to run
    it. The Close button will just cancel your action, and bring you back to the desktop.
    With all other desktops the Run Box gives you a Run or OK button, which will run
    the command. Also, typing the command and hitting *Enter* will run the command
    in these Run Boxes.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所讨论的，Gnome 3会以*它们的方式*做事情！即使它是错误的和令人困惑的。您输入要运行的命令，然后按*Enter*来运行它。关闭按钮将取消您的操作，并将您带回桌面。在所有其他桌面上，运行框会给您一个运行或确定按钮，它将运行命令。此外，在这些运行框中键入命令并按*Enter*将运行命令。
- en: 'You can also open xHydra from the command line, by typing the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过命令行打开xHydra，方法是输入以下内容：
- en: '[PRE8]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The ampersand command (`&`) tells the Bash Terminal to background the application,
    and it gives you back the Command Prompt. If you do not add the ampersand, you
    have locked up your Terminal window until you finish using xHydra. It will run,
    but if you close this Terminal window, xHydra will also shut down.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '&命令告诉Bash终端将应用程序后台化，并将命令提示符还给您。如果不添加&，您将锁定终端窗口，直到完成使用xHydra。它会运行，但如果关闭此终端窗口，xHydra也将关闭。'
- en: 'Using the ampersand will background any command run from the command line:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用&会将从命令行运行的任何命令后台化：
- en: '![](img/c5734e65-2a6f-4c89-a6ab-c54217aec61e.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5734e65-2a6f-4c89-a6ab-c54217aec61e.png)'
- en: When xHydra is opened, we get the following window. The first tab, Target, is
    for setting the targets and protocols for the attack. You can attack a single
    IP address, or a target list of hosts from a text file. The Protocol field is
    to pick the type of the protocol. Note, at the bottom of the window is the command-line
    string that would be used if running the attack from the command line.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 打开xHydra后，我们会得到以下窗口。第一个选项卡“目标”用于设置攻击的目标和协议。您可以攻击单个IP地址，或从文本文件中选择目标主机列表。协议字段是选择协议类型。请注意，窗口底部显示了从命令行运行攻击时将使用的命令行字符串。
- en: 'This is a helpful learning tool to learn the command-line options and how they
    work:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个有用的学习工具，可以学习命令行选项及其工作原理：
- en: '![](img/f80b8bde-5cfd-4b3e-903c-9e5ffa3ab9bf.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f80b8bde-5cfd-4b3e-903c-9e5ffa3ab9bf.png)'
- en: We are attacking a single host so we add the IP address, set the port to `3306`,
    the default MySQL service port, and pick mysql for the Protocol.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在攻击一个单一的主机，所以我们添加IP地址，将端口设置为`3306`，默认的MySQL服务端口，并选择mysql作为协议。
- en: 'Notice that there are several nice options in the options section of this window.
    If SSL was enabled on the MySQL server, you would place a check in the box for
    SSL. This would also be checked for any other service using SSL, such as SSMTP,
    SIMAP, or SLDAP. The Be Verbose checkbox will give you a more detailed output
    while running. The Show Attempts checkbox, while running, will show you the actual
    passwords being run against the system. This is interesting to watch but produces
    a lot of output:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此窗口的选项部分有几个不错的选项。如果MySQL服务器启用了SSL，您将在SSL框中打勾。对于任何其他使用SSL的服务，如SSMTP、SIMAP或SLDAP，也会打勾。详细输出复选框将在运行时给您更详细的输出。显示尝试复选框在运行时将显示实际针对系统运行的密码。这很有趣，但会产生大量输出：
- en: '![](img/fd66bbd3-5759-4984-9a01-47aadd3479b8.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd66bbd3-5759-4984-9a01-47aadd3479b8.png)'
- en: Click on the Passwords tab to set up the password part of the attack. Here,
    we add the user `root` and pick the Generate radio button and change the field
    to `1:8:a`. In the bottom field, you might want to check the Try login as password
    and Try empty password fields.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 单击密码选项卡设置攻击的密码部分。在这里，我们添加用户`root`，选择生成单选按钮，并将字段更改为`1:8:a`。在底部字段中，您可能需要勾选尝试登录作为密码和尝试空密码字段。
- en: In the Generate field, we have added `1:8:a`. This tells Hydra to run passwords
    from one to eight characters. The lowercase `a` tells Hydra to run lowercase letters
    only. If we add the string `1:8:aA1% .`, this will generate passwords from one
    to eight, including uppercase and lowercase letters, numbers, percent signs, spaces
    (yes, there is a space between the % and the comma), and dots. Mix and match from
    here.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成字段中，我们添加了`1:8:a`。这告诉Hydra运行密码从一到八个字符。小写字母`a`告诉Hydra只运行小写字母。如果我们添加字符串`1:8:aA1%
    .`，这将生成包括大写和小写字母、数字、百分号、空格（是的，在百分号和逗号之间有一个空格）和点的密码。从这里混合和匹配。
- en: 'Here again, you will find the checkbox field for Try login for password, which
    will try the login name as the password, like `admin:admin`, and the checkbox
    for blank passwords. You will also find here a checkbox for reversing the login
    name, such as `nimda`, for the password for the `admin` login:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您将找到尝试登录密码的复选框字段，它将尝试使用登录名作为密码，如`admin:admin`，以及空密码的复选框。您还将在这里找到一个用于反转登录名的复选框，例如`nimda`，用于`admin`登录的密码：
- en: '![](img/87cdeb43-c1f1-4c45-95b9-f98603569365.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/87cdeb43-c1f1-4c45-95b9-f98603569365.png)'
- en: 'Set up the Tuning tab next:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来设置调整选项卡：
- en: Since we are attacking one host, turn down the number of tasks to eight
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于我们正在攻击一个主机，将任务数量减少到八个
- en: Since the host is on the same network, turn down the timeout value to 10
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于主机在同一网络上，将超时值降低到10
- en: Since this is one host and the attack is using one username, check the box to
    exit after first pair found
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于这是一个主机，攻击使用一个用户名，所以勾选框选项以在找到第一对后退出
- en: 'You will find later that the tasks set may be lower than the actual running
    tasks. We have set it to 8, but later we will see that the actual running tasks
    is 4\. Four running threads is all the server will handle, so that''s all we get.
    The running threads can change based on other things happening on the Kali attack
    workstation, as loads change, so it is best to set it for more than the running
    load. Be aware that setting it too high from the actual running tasks (for example,
    setting it to 16), will cause the application to hang. This number may also be
    higher or lower depending on the type of service being exploited:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您将会发现，设置的任务可能低于实际运行的任务。我们设置为8，但后来我们会看到实际运行的任务是4。服务器只能处理四个运行线程，所以我们只能得到这些。运行线程可以根据Kali攻击工作站上发生的其他事情而改变，因此最好设置为比运行负载更多。请注意，将其设置得比实际运行任务高（例如，将其设置为16）会导致应用程序挂起。这个数字也可能会根据被利用的服务类型而有所增加或减少：
- en: '![](img/201d9c41-27c3-4e03-a29f-06680e12e652.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/201d9c41-27c3-4e03-a29f-06680e12e652.png)'
- en: 'The Specific tab for the MySQL attack will stay with the defaults. Actually,
    the MySQL attack doesn''t use any of these settings:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL攻击的具体选项卡将保持默认设置。实际上，MySQL攻击不使用任何这些设置：
- en: '![](img/ce0b29f1-4f5d-4e0e-bab4-67978b5308e1.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ce0b29f1-4f5d-4e0e-bab4-67978b5308e1.png)'
- en: 'Now we are ready to click on the Start tab and we see that we are running four
    threads against that one server. This might take a while:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备点击“开始”选项卡，我们看到我们正在对那台服务器运行四个线程。这可能需要一段时间：
- en: '![](img/f418e277-5979-4076-ad61-b68b45f0ea05.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f418e277-5979-4076-ad61-b68b45f0ea05.png)'
- en: 'Hacker hint:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客提示：
- en: Please note that the authors of the software, like the writers of this book,
    ask that you don't use these tools or information for military, secret service,
    or illegal purposes. Remember to use your Jedi powers only for good.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，软件的作者，就像本书的作者一样，要求您不要将这些工具或信息用于军事、特工或非法目的。请记住，只能将您的绝地力量用于善良。
- en: Hmmm. We have 217,180,146,596 password combinations still to try and an estimated
    time up of 199,661,463 days and 22 hours. It may be time to get a beefier Kali
    workstation. This is going to take a while. Maybe a 546,659 year vacation is the
    best decision for the evil hackers.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯。我们还有217,180,146,596个密码组合要尝试，估计时间为199,661,463天22小时。也许是时候换一个更强大的Kali工作站了。这可能需要一段时间。也许546,659年的假期是邪恶黑客的最佳选择。
- en: 'Luckily, the estimate is high. Following, we see that our test has now run
    for 70 hours and 39 minutes without cracking a password of five characters in
    length. During this time, the run has attempted 75,754 passwords leaving 12,280,876
    to go with an estimated runtime of 11,454 days and 13 hours. So, for the benefit
    of the book we are stopping the test here, with an estimated 32 years left:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，估计值很高。接下来，我们看到我们的测试现在已经运行了70小时39分钟，没有破解长度为五个字符的密码。在此期间，运行已尝试了75,754个密码，还剩下12,280,876个，估计运行时间为11,454天13小时。因此，为了书籍的利益，我们在这里停止测试，估计还剩下32年：
- en: '![](img/fb38ebf8-99fc-48e6-af27-ab215c8a5e9e.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fb38ebf8-99fc-48e6-af27-ab215c8a5e9e.png)'
- en: The speed of this test is mainly determined by the resources and set-up of the
    victim server. Our victim server here is a low-rent VM so this is one reason for
    such a slow test. Also, at the first part of this run, we got a warning that MySQL
    doesn't like a lot of parallel connections. The speed will increase against a
    target server running more resources. Another limiting factor is that the target
    server may be so weak that a sustained brute-force attack might knock the machine
    off the network. Even a strong server with large amounts of resources available
    might experience a **denial of service** (**DoS**) condition. When doing brute-force
    attacks, you might want to aim for low and slow rates of attack speed. As an attacker,
    you do not want to alert the administrators to the attack.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这次测试的速度主要由受害服务器的资源和设置决定。我们的受害服务器是一个低租金的VM，这也是测试如此缓慢的原因之一。另一个限制因素是目标服务器可能太弱，持续的暴力攻击可能会将机器从网络中踢出。即使是具有大量资源的强大服务器也可能会出现**拒绝服务**（DoS）的情况。在进行暴力攻击时，您可能希望以较低和较慢的攻击速度为目标。作为攻击者，您不希望提醒管理员发动攻击。
- en: 'This test also demonstrates that capturing the hashes and cracking them offline
    is usually faster than performing the attack online. Another thing to remember:
    if any intrusion services are running on the system, your attack will be noticed
    sometime in the years it runs.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这个测试还表明，捕获哈希并离线破解通常比在线攻击更快。还有一件事要记住：如果系统上运行任何入侵服务，您的攻击将在数年内被注意到。
- en: 'So, let''s try a password list attack on the same system. Note that we have
    changed the settings from Generate to Password List and selected the `rockyou.txt`
    password list from the many password lists included in Kali. The following screenshot
    lists the directories and shows the `rockyou.txt` file compressed. You will need
    to decompress it for use:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们在同一系统上尝试密码列表攻击。请注意，我们已将设置从生成更改为密码列表，并从Kali中包含的许多密码列表中选择了`rockyou.txt`密码列表。以下屏幕截图列出了目录并显示了压缩的`rockyou.txt`文件。您需要解压缩才能使用：
- en: '![](img/ed0c5474-c7d0-49b7-9c55-0861edbd23e9.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed0c5474-c7d0-49b7-9c55-0861edbd23e9.png)'
- en: 'In the following screenshot, we have selected the uncompressed file and we
    are ready to go:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们已选择了未压缩的文件，准备好开始：
- en: '![](img/af59282f-a357-4752-84e0-e0ba1be76a0f.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af59282f-a357-4752-84e0-e0ba1be76a0f.png)'
- en: Through the modern miracle of Hollywood, we see we have cracked the password
    `evil1`. After 562 tries and 31 hours, we have it. This is a lot of time for the
    amount of tries. Again, the speed of the service accepting the passwords is the
    defining factor and takes a while. Software firewalls and password-attempt limits
    on the target server can make it take longer, or make it even impossible.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 通过好莱坞现代奇迹，我们看到我们已经破解了密码`evil1`。经过562次尝试和31小时，我们成功了。这对于尝试的次数来说是很长的时间。再次强调，服务接受密码的速度是决定性因素，并且需要一段时间。目标服务器上的软件防火墙和密码尝试限制可能会使其花费更长的时间，甚至使其变得不可能。
- en: 'If the correct password was farther down the password list, it would have taken
    longer:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果正确的密码在密码列表中更靠后，那么破解所需的时间会更长：
- en: '![](img/a6247528-385f-4abf-8a27-b28d83faceae.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a6247528-385f-4abf-8a27-b28d83faceae.png)'
- en: Summary
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you got to use three new tools for password cracking, and also
    learned how to add a new item to the main menu. Johnny, and his progenitor, John
    the Ripper, are the most popular tools you can find on Kali, for cracking hashes
    on the local machine, so you will probably choose one of these two tools when
    you are testing your users' password decisions.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你学会了使用三种新的密码破解工具，并且学会了如何将新项目添加到主菜单中。Johnny和他的前辈John the Ripper是你可以在Kali上找到的最受欢迎的工具，用于在本地机器上破解哈希值，所以当你测试用户的密码决策时，你可能会选择这两种工具中的一种。
- en: Hydra has many more options than basic John-based tools, but with the improved
    power comes increased complexity. Hydra is designed to attack specific devices
    over the wire, but as you discovered, the attack surface is very small and the
    tool is very noisy.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra比基于John的基本工具有更多的选项，但随着增强的功能，复杂性也增加了。Hydra旨在通过网络攻击特定设备，但正如你发现的那样，攻击面很小，而且工具非常吵闹。
- en: You have also learned that Hydra can use the GPU instead of the CPU, giving
    you even faster cracking times.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 你还学会了Hydra可以使用GPU而不是CPU，从而使你的破解速度更快。
- en: In the next chapter, we will learn about the ancient and broken protocols, NetBIOS
    and LLMR, and how to exploit and gain access to Windows systems using their vulnerabilities.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习古老和破损的协议NetBIOS和LLMR，以及如何利用它们的漏洞来获取对Windows系统的访问权限。
- en: Further reading
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'More on John The Ripper: [https://www.openwall.com/john/](https://www.openwall.com/john/)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关John The Ripper的更多信息：[https://www.openwall.com/john/](https://www.openwall.com/john/)
- en: 'More on Hashcat: [https://hashcat.net/hashcat/](https://hashcat.net/hashcat/)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关Hashcat的更多信息：[https://hashcat.net/hashcat/](https://hashcat.net/hashcat/)
- en: 'More on Hydra: [https://github.com/vanhauser-thc/thc-hydra/](https://github.com/vanhauser-thc/thc-hydra/)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关Hydra的更多信息：[https://github.com/vanhauser-thc/thc-hydra/](https://github.com/vanhauser-thc/thc-hydra/)
