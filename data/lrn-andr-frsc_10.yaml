- en: Android Malware Analysis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android 恶意软件分析
- en: 'In this chapter, we will perform dynamic and static analysis of the malicious
    Android application we identified in the previous chapter. We will cover the following
    topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将对在上一章中识别的恶意 Android 应用进行动态和静态分析。我们将涵盖以下主题：
- en: Dynamic analysis of malicious Android applications using an online sandbox
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用在线沙箱进行恶意 Android 应用的动态分析
- en: 'Static analysis of malicious Android applications:'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意 Android 应用的静态分析：
- en: Unpacking Android applications
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解包 Android 应用
- en: Manifest file decoding and analysis
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Manifest 文件解码与分析
- en: Android application decompilation
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android 应用反编译
- en: Viewing and analyzing decompiled code
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看和分析反编译代码
- en: Dynamic analysis of malicious Android applications
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恶意 Android 应用的动态分析
- en: The easiest way to perform a malicious Android application analysis is to run
    it in a controlled environment. You already know how to run an emulator and install
    applications via ADB, so you may install a suspicious application in a clean virtual
    system and see what artefacts are left after you run it. For example, you can
    find SQLite databases with data collected by a malicious application or its configuration
    files.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 分析恶意 Android 应用的最简单方法是将其运行在受控环境中。你已经知道如何运行模拟器并通过 ADB 安装应用程序，因此你可以在干净的虚拟系统中安装一个可疑应用程序，并查看运行后留下的任何痕迹。例如，你可以找到恶意应用程序收集的数据的
    SQLite 数据库，或其配置文件。
- en: Dynamic analysis using an online sandbox
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用在线沙箱进行动态分析
- en: An easier and more efficient approach is to use pre-built sandboxes for malware
    analysis. One of these sandboxes is **Joe Sandbox**. It supports automated dynamic
    analysis of different types of applications, including Windows, macOS, Linux,
    iOS, and of course Android. You can register for a free account and enable 10
    free analyses per month. The sandbox for Android applications can be accessed
    here: [https://www.joesandbox.com/#android](https://www.joesandbox.com/#android).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 更简单且高效的方法是使用预构建的沙箱进行恶意软件分析。其中一个沙箱是**Joe Sandbox**。它支持自动化的动态分析，涵盖多种应用类型，包括 Windows、macOS、Linux、iOS，当然还有
    Android。你可以注册一个免费账户，每月启用 10 次免费的分析。Android 应用的沙箱可以在这里访问：[https://www.joesandbox.com/#android](https://www.joesandbox.com/#android)。
- en: 'Only a few simple steps are required to run an application in the sandbox:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 只需要几个简单的步骤即可在沙箱中运行应用程序：
- en: First, choose the file you want to analyze using the **Choose file...** button.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，使用**选择文件...**按钮选择你要分析的文件。
- en: Adjust the run time; you can run the application in the sandbox from 30 to 500
    seconds
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调整运行时间；你可以在沙箱中运行应用程序 30 到 500 秒。
- en: Accept the terms and conditions, and click the **Analyze** button.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接受条款和条件，并点击**分析**按钮。
- en: Once the analysis is complete, you will receive an email with a link to the
    analysis results. In our case, it was [https://www.joesandbox.com/analysis/67297](https://www.joesandbox.com/analysis/67297).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦分析完成，你将收到一封带有分析结果链接的电子邮件。在我们的案例中，它是[https://www.joesandbox.com/analysis/67297](https://www.joesandbox.com/analysis/67297)。
- en: Let's walk through the HTML report and discuss its most important parts.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们浏览 HTML 报告并讨论其最重要的部分。
- en: 'Joe Sandbox has its own detection mechanism based on automated analysis results.
    In our case, the sample got 72 points out of 100 and is classified as **malicious**:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Joe Sandbox 有自己基于自动化分析结果的检测机制。在我们的案例中，样本得到了 72 分（满分 100），并被分类为**恶意**：
- en: '![](img/dbf2309a-e01f-4775-9546-831da8f9e609.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dbf2309a-e01f-4775-9546-831da8f9e609.png)'
- en: 'It also uses antivirus engines and VirusTotal to scan the uploaded sample.
    According to the report, our sample is detected as **ANDROID/Spy.Banker.YD.G****en**
    by Avira, and is also detected by 51% of antivirus engines on VirusTotal, as shown
    in the following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 它还使用杀毒引擎和 VirusTotal 扫描上传的样本。根据报告，我们的样本被 Avira 检测为**ANDROID/Spy.Banker.YD.G****en**，并且
    51% 的杀毒引擎在 VirusTotal 上也进行了检测，截图如下：
- en: '![](img/34cca771-b32a-416e-bb88-529e0c8195f1.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34cca771-b32a-416e-bb88-529e0c8195f1.png)'
- en: 'According to the next section, our sample attempted to escalate its privileges,
    requesting root rights via running a `su` command, and then tried to add a new
    device administrator:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 根据下一部分，我们的样本尝试提升其权限，通过运行 `su` 命令请求 root 权限，然后尝试添加新的设备管理员：
- en: '![](img/aa67ca66-b0b9-48be-928b-3900dc65b2ff.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa67ca66-b0b9-48be-928b-3900dc65b2ff.png)'
- en: 'Let''s look at the Networking section. It seems our sample attempted to download
    a new APK file, `new.apk`, from `www.poog.co.kr`, but failed to do so as the file
    was unavailable:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看一下**网络**部分。看起来我们的示例尝试从`www.poog.co.kr`下载一个新的 APK 文件`new.apk`，但由于文件不可用，下载失败：
- en: '![](img/c2839e5a-fa85-46c4-9bcc-417152493612.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c2839e5a-fa85-46c4-9bcc-417152493612.png)'
- en: 'Another interesting section is E-Banking Fraud. Our sample contains package
    name strings related to banking; they may be used for the detection of banking
    applications installed on the device. Also, it is able to add an overlay to other
    applications, and has permission to list currently running applications:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的部分是**电子银行欺诈**。我们的样本包含与银行相关的包名字符串；它们可能用于检测设备上安装的银行应用。此外，它还能够为其他应用添加覆盖层，并具有列出当前运行应用程序的权限：
- en: '![](img/d22aa7a5-13c5-4320-b096-6d66a389381c.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d22aa7a5-13c5-4320-b096-6d66a389381c.png)'
- en: 'The next section shows that the analyzed application requested permissions
    to perform phone calls in the background, send SMS, and write to SMS storage.
    Also, it''s able to send SMS using SmsManager and end incoming calls; this is
    typical for banking Trojans:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分显示分析的应用请求了在后台进行电话拨打、发送短信和写入短信存储的权限。此外，它还能够使用SmsManager发送短信并结束来电；这些行为是银行木马的典型特征：
- en: '![](img/091aec59-9b21-40a3-8df4-df0f5cc8e5ca.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/091aec59-9b21-40a3-8df4-df0f5cc8e5ca.png)'
- en: 'The **System Summary** section shows us a list of potentially dangerous permissions
    our sample requested:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**系统摘要**部分向我们展示了样本请求的潜在危险权限列表：'
- en: '![](img/90f68fdd-9266-4eda-8450-b340718b2096.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90f68fdd-9266-4eda-8450-b340718b2096.png)'
- en: 'Let''s look at each of them closely:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看一下它们：
- en: '`CALL_PHONE`: Allows an application to initiate phone calls'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CALL_PHONE`：允许应用发起电话拨打'
- en: '`GET_TASKS`: Allows an application to collect information about currently running
    applications'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GET_TASKS`：允许应用收集关于当前运行应用程序的信息'
- en: '`INTERNET`: Allows an application to open network sockets'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INTERNET`：允许应用打开网络套接字'
- en: '`READ_CONTACTS`: Allows an application to read contacts data'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`READ_CONTACTS`：允许应用读取联系人数据'
- en: '`READ_PHONE_STATE`: Allows an application to access phone state in read-only
    mode, including phone number and cellular network information'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`READ_PHONE_STATE`：允许应用以只读模式访问电话状态，包括电话号码和蜂窝网络信息'
- en: '`READ_SMS`: Allows an application to read SMS'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`READ_SMS`：允许应用读取短信'
- en: '`RECEIVE_SMS`: Allows an application to receive SMS'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RECEIVE_SMS`：允许应用接收短信'
- en: '`SEND_SMS`: Allows an application to send SMS'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SEND_SMS`：允许应用发送短信'
- en: '`SYSTEM_ALERT_WINDOW`: Allows an application to create windows shown on top
    of all other applications'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SYSTEM_ALERT_WINDOW`：允许应用创建在所有其他应用上方显示的窗口'
- en: '`WAKE_LOCK`: Allows an application to keep the processor from sleeping or the
    screen from dimming'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WAKE_LOCK`：允许应用防止处理器进入睡眠状态或防止屏幕变暗'
- en: '`WRITE_CONTACTS`: Allows an application to write contact data'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WRITE_CONTACTS`：允许应用写入联系人数据'
- en: '`WRITE_EXTERNAL_STORAGE`: Allows an application to write to external storage,
    for example, an SD card'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WRITE_EXTERNAL_STORAGE`：允许应用写入外部存储，例如SD卡'
- en: '`WRITE_SETTINGS`: Allows an application to read or write the system settings'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WRITE_SETTINGS`：允许应用读取或写入系统设置'
- en: '`WRITE_SMS`: Allows an application to write SMS stored on the phone or its
    SIM card, or delete them'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WRITE_SMS`：允许应用写入存储在手机或SIM卡上的短信，或删除它们'
- en: 'We already know that our sample attempted to download an APK file. If we look
    at the **Persistence and Installation Behavior** section, we see that it is able
    not only to download applications, but also to install them:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经知道我们的样本尝试下载一个APK文件。如果我们查看**持久性和安装行为**部分，我们会发现它不仅能够下载应用程序，还能安装它们：
- en: '![](img/6134b9cd-9fec-457a-a252-d0ff347b4c2b.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6134b9cd-9fec-457a-a252-d0ff347b4c2b.png)'
- en: 'To survive reboots, the sample requested permission to execute the code after
    the phone is rebooted (`RECEIVE_BOOT_COMPLETED`), created a new wake lock to have
    the device stay on, and was able to start a service for autostart purposes:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在重启后生存，样本请求了在手机重启后执行代码的权限（`RECEIVE_BOOT_COMPLETED`），创建了一个新的唤醒锁来保持设备处于开启状态，并能够启动一个服务以实现自启动功能：
- en: '![](img/e73758e9-8e69-4c5c-915e-617faa45ce61.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e73758e9-8e69-4c5c-915e-617faa45ce61.png)'
- en: 'Let''s dive into the **Hooking and other Techniques for Hiding and Protection**
    section. The sample is able to abort broadcast events; it helps malicious application
    to hide phone events, such as incoming SMS:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解**钩子和其他隐藏及保护技术**部分。该样本能够中止广播事件；它帮助恶意应用隐藏电话事件，如接收到的短信：
- en: '![](img/a3c4ec4c-da51-43b5-8fd9-96bec706711e.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a3c4ec4c-da51-43b5-8fd9-96bec706711e.png)'
- en: 'Another interesting piece of information here is that our sample requested
    permission to terminate background processes:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的信息是，我们的样本请求了终止后台进程的权限：
- en: '![](img/4a710d47-1900-496d-909e-06c495f6aad8.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4a710d47-1900-496d-909e-06c495f6aad8.png)'
- en: 'The **Language, Device and Operating System Detection** section shows that
    the sample collects information about the SIM provider country code, service provider
    name, mobile country code, mobile network code, WiFi MAC address, voicemail number,
    operating system version, and unique device IDs, such as **International Mobile
    Equipment Identity** (**IMEI**), **M****obile Equipment IDentifier** (**MEID**), and
    **Electronic Serial Number** (**ESN**):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**Language, Device and Operating System Detection**部分显示样本收集了有关SIM提供商国家代码、服务提供商名称、移动国家代码、移动网络代码、WiFi
    MAC地址、语音邮件号码、操作系统版本以及唯一设备ID的信息，如**国际移动设备身份识别码**（**IMEI**）、**移动设备识别码**（**MEID**）和**电子序列号**（**ESN**）：'
- en: '![](img/e5fde6bf-7902-4979-9396-ffc343433342.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5fde6bf-7902-4979-9396-ffc343433342.png)'
- en: 'The following screenshot shows the unique device IDs collected by the sample:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了样本收集的唯一设备ID：
- en: '![](img/e75da8f1-a373-4402-94a3-5643434470b3.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e75da8f1-a373-4402-94a3-5643434470b3.png)'
- en: 'The next section shows that the application monitors outgoing phone calls,
    is able to create SMS data, and checks whether a SIM card is installed:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分显示应用程序监控外拨电话，能够创建短信数据，并检查是否安装了SIM卡：
- en: '![](img/cbd61e43-0831-4a63-b56b-7f90fd1bf50b.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cbd61e43-0831-4a63-b56b-7f90fd1bf50b.png)'
- en: 'What is more, it monitors incoming phone calls and reads originating phone
    numbers, parses SMS (body and originating number), and queries the list of installed
    applications and packages:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，它监控来电并读取来电号码，解析短信（正文和来电号码），并查询已安装的应用程序和包列表：
- en: '![](img/996fa3ea-66cb-47a1-acbd-fa5815b40fa5.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/996fa3ea-66cb-47a1-acbd-fa5815b40fa5.png)'
- en: 'Finally, if we look at the **URLs** subsection of the **Antivirus Detection**
    section, we see that the APK file that our sample attempted to download was detected
    as malicious by Avira URL Cloud:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果我们查看**Antivirus Detection**部分的**URLs**子部分，我们可以看到我们的样本试图下载的APK文件被Avira URL
    Cloud检测为恶意：
- en: '![](img/3c6ba1c3-8db3-4960-bfee-f05398b0cb44.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3c6ba1c3-8db3-4960-bfee-f05398b0cb44.png)'
- en: You may have noticed that there are more URLs in the previous screenshot; these
    are potentially malware command and control servers.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到在之前的截图中有更多的URLs；这些可能是恶意软件的命令与控制服务器。
- en: 'To sum up, let''s gather together the pieces of information we got from the
    dynamic analysis of our sample with **Joe Sandbox**:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，让我们汇总从**Joe Sandbox**动态分析中得到的信息：
- en: Based on antivirus detection and the artefacts we have uncovered, the piece
    of malware we analyzed is a banking Trojan.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于病毒检测和我们发现的伪装物品，我们分析的这款恶意软件是一个银行木马。
- en: It's able to download additional pieces of malware from `www.poog.co.kr`.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它能够从`www.poog.co.kr`下载其他恶意软件。
- en: It collects information about banking-related applications.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它收集有关银行相关应用程序的信息。
- en: It is able to add an overlay to other applications.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它能够为其他应用程序添加覆盖层。
- en: It is able to monitor incoming and outgoing calls, read and write SMS messages,
    and intercept them.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它能够监控进出电话，读取和写入短信，并拦截它们。
- en: It is able to terminate the processes of other applications.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它能够终止其他应用程序的进程。
- en: It's able to collect information about the device it's running on.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它能够收集运行设备的信息。
- en: It requests permission to execute the code after the phone is rebooted for persistence.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它请求在手机重启后执行代码，以实现持久性。
- en: It potentially uses `http://rtrjkrykki.iego.net/appHome/` or `http://192.151.226.138:80/appHome/`
    as a command and control server.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可能使用`http://rtrjkrykki.iego.net/appHome/`或`http://192.151.226.138:80/appHome/`作为命令与控制服务器。
- en: The next sections will walk you through the steps required to perform static
    analysis of Android malicious applications.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分将带你了解执行Android恶意应用静态分析所需的步骤。
- en: Static analysis of malicious Android applications
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恶意Android应用程序的静态分析
- en: To perform dynamic analysis of the previously identified malicious Android application,
    we ran it in a controlled environment with the help of Joe Sandbox. In contrast
    to dynamic analysis, static analysis allows an examiner to understand malware
    behavior without actually running it. Let's start the static analysis of our malware
    sample, beginning with unpacking it.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对之前识别的恶意Android应用程序进行动态分析，我们在Joe Sandbox的帮助下将其运行在受控环境中。与动态分析相比，静态分析允许检查员在不实际运行恶意软件的情况下理解其行为。让我们从解包开始，进行我们的恶意软件样本的静态分析。
- en: Unpacking Android applications
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解包Android应用程序
- en: To view the contents of an APK file, you can use any archiver. A good example
    is 7-Zip, a free and open source archiver, which is available here: [https://www.7-zip.org/download.html](https://www.7-zip.org/download.html).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看 APK 文件的内容，你可以使用任何压缩工具。一个好的例子是 7-Zip，这是一个免费的开源压缩工具，可以在这里下载：[https://www.7-zip.org/download.html](https://www.7-zip.org/download.html)。
- en: 'To unpack an APK file, right-click on it, choose **7-Zip**, and then **Open
    archive**:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要解压 APK 文件，右键点击它，选择 **7-Zip**，然后选择 **打开压缩包**：
- en: '![](img/c1e0d50c-c566-49bd-be70-b483be267b05.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1e0d50c-c566-49bd-be70-b483be267b05.png)'
- en: Contents of an APK file
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: APK 文件内容
- en: 'Now you can browse the contents of the APK file and export its parts for further
    analysis. In the next section, we will focus on the Android manifest file: `AndroidManifest.xml`.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以浏览 APK 文件的内容并导出其部分内容进行进一步分析。在下一节中，我们将重点关注 Android 清单文件：`AndroidManifest.xml`。
- en: Manifest file decoding and analysis
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Manifest 文件解码与分析
- en: The manifest file describes essential information about an application to the
    Android build tools, the Android operating system, and Google Play. If you open
    such a file in a text editor, you will see that most of the data is encoded and
    can't normally be viewed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Manifest 文件描述了应用程序的基本信息，供 Android 构建工具、Android 操作系统和 Google Play 使用。如果你在文本编辑器中打开这样的文件，你会看到大部分数据被编码，无法正常查看。
- en: If we want to analyze its contents, we need to use an Android binary XML decoder.
    One such decoder is `axmldec`, which is available for download here: [https://github.com/ytsutano/axmldec/releases](https://github.com/ytsutano/axmldec/releases).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想分析其内容，我们需要使用 Android 二进制 XML 解码器。一个这样的解码器是 `axmldec`，可以在这里下载：[https://github.com/ytsutano/axmldec/releases](https://github.com/ytsutano/axmldec/releases)。
- en: 'To decode the extracted manifest file, run `axmldec` from the Command Prompt
    with the following argument:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要解码提取的 manifest 文件，请在命令提示符下运行 `axmldec`，并使用以下参数：
- en: '[PRE0]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The output file can be easily viewed with a text editor of your choice. The
    file contains lots of useful pieces of information. For example, we can get the
    package name:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 输出文件可以通过你选择的文本编辑器轻松查看。该文件包含大量有用的信息。例如，我们可以获取包名：
- en: '[PRE1]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Also, we can get information about the main activity. It is the first screen
    to appear when the user launches the application. Each activity can then start
    another activity in order to perform different actions. In our case, the main
    activity is `com.cc.MainActinn`:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还可以获取有关主活动的信息。主活动是用户启动应用时第一个出现的屏幕。每个活动可以启动另一个活动以执行不同的操作。在我们的例子中，主活动是 `com.cc.MainActinn`：
- en: '[PRE2]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'There is another activity – `com.cc.WebInterfaceActivity`:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一个活动 – `com.cc.WebInterfaceActivity`：
- en: '[PRE3]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This activity has a number of **broadcast receivers**. Broadcast receivers allow
    applications to receive **intents** that are broadcast by the system or by other
    applications. An intent is a message defined by an intent object that describes
    an action to perform. When an application issues an intent to the system, the
    system locates an application component that can handle the intent, based on the
    intent filter declarations in the manifest file.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这个活动有若干 **广播接收器**。广播接收器允许应用程序接收系统或其他应用程序广播的 **意图**。意图是由意图对象定义的消息，描述了要执行的操作。当一个应用程序向系统发出意图时，系统会根据
    manifest 文件中的意图过滤器声明，定位一个能够处理该意图的应用组件。
- en: 'Let''s start from `com.cc.MyAdminReceiver`, which is used for gaining device
    admin privileges:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 `com.cc.MyAdminReceiver` 开始，它用于获取设备管理员权限：
- en: '[PRE4]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The next broadcast receiver is `com.cc.BootRt`:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个广播接收器是 `com.cc.BootRt`：
- en: '[PRE5]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'As you can see, it receives the following information:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，它接收以下信息：
- en: Whether the device finished its booting process
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备是否完成了启动过程
- en: Whether the device is shutting down
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备是否正在关机
- en: Whether the user is present after the device wakes up
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备唤醒后是否有用户在场
- en: 'Another broadcast receiver is `com.cc.A123`:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个广播接收器是 `com.cc.A123`：
- en: '[PRE6]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'It receives the following information/performs the following actions:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 它接收以下信息/执行以下操作：
- en: If the device finished its booting process the phone state
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备完成了启动过程，手机状态
- en: If it starts a new outgoing call
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果开始了一个新的外拨电话
- en: If it's connected to a power source
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否连接了电源
- en: If it's disconnected from a power source
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否断开了电源
- en: If the timezone changed
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果时区发生变化
- en: If the time was set
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果时间已设置
- en: If the time has changed
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果时间已更改
- en: If a user ID has been removed
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户 ID 已被删除
- en: If the device has entered USB Mass Storage mode
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备已进入 USB 大容量存储模式
- en: If the device has exited USB Mass Storage mode
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备已退出 USB 大容量存储模式
- en: If a new application package has been installed
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果已安装新的应用包
- en: If an existing application package has been changed
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果现有的应用包已被更改
- en: If the user has cleared the data of a package
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户已清除包的数据
- en: If an application is first launched
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果应用程序首次启动
- en: If an application has been completely removed from the device
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果应用程序已从设备中完全移除
- en: If an application has been downloaded and installed
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果应用程序已下载并安装
- en: If a package needs to be verified
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果需要验证包
- en: If a new version of an application package has been installed
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果安装了应用包的新版本
- en: If an application has been fully or only partially uninstalled
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果应用程序已完全或部分卸载
- en: If the user has restarted a package
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户重新启动了一个包
- en: If a new version of a current application has been installed over an existing
    one
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果现有的应用程序被新版本安装并覆盖
- en: If external media is present but cannot be mounted
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果外部媒体存在但无法挂载
- en: If package management should be started due to a low-memory condition
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果由于内存不足，需要启动包管理
- en: If external media was removed from a SD card slot, but the mount point was not
    unmounted
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果外部媒体从SD卡槽中移除，但挂载点未被卸载
- en: If the **Media Button** was pressed
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果按下了**媒体按钮**
- en: If external media is present and being disk checked
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果外部媒体存在并正在进行磁盘检查
- en: If the user has expressed the desire to remove the external storage media
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户表示希望移除外部存储媒体
- en: If external media is present and mounted
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果外部媒体存在并已挂载
- en: If external media is present, but is using an incompatible filesystem or is
    blank
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果外部媒体存在，但使用了不兼容的文件系统或是空白的
- en: If external media has been removed
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果外部媒体已被移除
- en: If the media scanner has finished scanning a directory
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果媒体扫描器已完成扫描目录
- en: Requests the media scanner scans a file and adds it to the media database
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求媒体扫描器扫描一个文件并将其添加到媒体数据库
- en: If the media scanner has started scanning a directory
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果媒体扫描器已开始扫描目录
- en: If external media is unmounted because it is being shared via USB Mass Storage
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果外部媒体因通过USB大容量存储共享而被卸载
- en: If the current device's locale has changed
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果当前设备的区域设置已更改
- en: If an input method has been changed
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果输入法已更改
- en: If a wired headset has been plugged in or unplugged
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果插入或拔出了有线耳机
- en: If a GTalk connection has been disconnected
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果GTalk连接已断开
- en: If a GTalk connection has been established
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果GTalk连接已建立
- en: If the resources for a set of packages are currently unavailable since the media
    on which they exist is unavailable
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一组包的资源当前不可用，因为存储它们的媒体不可用
- en: If the resources for a set of packages are currently available
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一组包的资源当前可用
- en: If there are changes in the physical docking state of the device
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备的物理对接状态发生变化
- en: If a low storage space condition on the device no longer exists
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备上不再存在存储空间不足的情况
- en: If there is a low storage space condition on the device
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备存储空间不足
- en: If the date has changed
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果日期发生变化
- en: If a user action should request a temporary system dialog to dismiss
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户操作要求显示临时系统对话框以进行关闭
- en: If the Camera Button was pressed
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果按下了相机按钮
- en: If the battery is now okay after being low
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果电池在低电后已恢复正常
- en: If the device has been in a low battery condition
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备处于低电状态
- en: Charging state, level, and other information about the battery
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 充电状态、电池电量级别及其他电池信息
- en: If the user has switched the phone into or out of Airplane Mode
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户已将手机切换到飞行模式或退出飞行模式
- en: If a provider's data has changed, for example, the number of unread emails changes
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果服务提供商的数据发生变化，例如未读电子邮件数量发生变化
- en: If the device is shutting down
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备正在关机
- en: If the user is present after the device wakes up
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备唤醒后用户存在
- en: If the current system wallpaper has changed
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果当前系统的壁纸已更改
- en: If Wi-Fi is enabled, disabled, enabling, disabling, or unknown
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果Wi-Fi已启用、禁用、正在启用、正在禁用或状态未知
- en: Calls the `su` binary to get root access
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用`su`二进制文件以获取root权限
- en: If a change in network connectivity has occurred
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果网络连接发生变化
- en: If a new text-based SMS message has been received by the device
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果设备接收到新的基于文本的短信
- en: 'Also, we have information about three services in our malicious application''s
    manifest file, `com.cc.service.Int`, `com.cc.service.Ir`, and `com.cc.service.Hearttttt`:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们在恶意应用程序的清单文件中有关于三个服务的信息，`com.cc.service.Int`、`com.cc.service.Ir`和`com.cc.service.Hearttttt`：
- en: '[PRE7]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Unlike activities, services do not have a visual user interface. If you look
    at their intent filters, you will notice that each service receives a broadcast
    once the device finishes its booting process, so it can be started automatically
    in the background.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 与活动不同，服务没有可视的用户界面。如果你查看它们的意图过滤器，你会注意到每个服务在设备完成启动过程后都会接收到一个广播信号，因此它可以在后台自动启动。
- en: 'The last section of the manifest file contains the permissions the application
    uses:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 清单文件的最后部分包含应用程序使用的权限：
- en: '[PRE8]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We have already discussed permissions in the dynamic analysis section, so we
    won't cover them here again. Let's dive even deeper and start working on code
    decompilation.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在动态分析部分讨论过权限问题，因此这里不再重复。现在，让我们深入研究并开始进行代码反编译。
- en: Android application decompilation
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安卓应用程序反编译
- en: For this step, we will need another file from the APK file: `classes.dex`. To
    convert `.dex` (Dalvik Executable) to `.class` files in a `.jar` container, we
    need to perform decompilation. We can use `dex2jar` to solve this task, which
    is available here: [https://github.com/pxb1988/dex2jar](https://github.com/pxb1988/dex2jar).
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，我们需要从APK文件中获取另一个文件：`classes.dex`。为了将`.dex`（Dalvik执行文件）转换为`.class`文件并打包到`.jar`容器中，我们需要进行反编译。我们可以使用`dex2jar`来完成这个任务，工具下载地址：[https://github.com/pxb1988/dex2jar](https://github.com/pxb1988/dex2jar)。
- en: 'To decompile `classes.dex`, run `d2j-dex2jar.bat` from the Command Prompt with
    the following argument:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 要反编译`classes.dex`，请在命令提示符中运行`d2j-dex2jar.bat`，并使用以下参数：
- en: '[PRE9]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This is it. Now, we have a `classes.jar` file that contains all of the Java
    classes from `classes.dex`. We will view and analyze this `.jar` file in the following
    section.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这里。现在，我们有一个`classes.jar`文件，里面包含了`classes.dex`中的所有Java类。我们将在下一部分查看和分析这个`.jar`文件。
- en: Viewing and analyzing decompiled code
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看和分析反编译的代码
- en: Now we can view and analyze the data we unpacked and decompiled in the previous
    steps. We can use JD-GUI to do this. JD-GUI is a free utility that is able to
    display the Java source codes of `.class` files. You can download this tool here: [http://jd.benow.ca/](http://jd.benow.ca/).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以查看和分析我们在之前步骤中解压和反编译的数据。我们可以使用JD-GUI来进行这个操作。JD-GUI是一个免费的工具，能够显示`.class`文件的Java源代码。你可以在这里下载这个工具：[http://jd.benow.ca/](http://jd.benow.ca/)。
- en: 'Here are the contents of `classes.jar` displayed by JD-GUI:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这是JD-GUI显示的`classes.jar`内容：
- en: '![](img/504e6253-9391-429b-87f0-6129b4f22693.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/504e6253-9391-429b-87f0-6129b4f22693.png)'
- en: The contents of classes.jar
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`classes.jar`的内容'
- en: 'We already know a lot about our banking Trojan; let''s try to learn something
    new from code analysis. We identified two suspicious URLs as the result of dynamic
    analysis, `rtrjkrykki.iego.net/appHome/` and `192.151.226.138:80/appHome/`. Most
    likely this is the same server, so let''s try to find at least one of the URLs
    in the code using JD-GUI:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经知道了很多关于银行木马的信息，现在让我们通过代码分析来学习一些新的东西。通过动态分析，我们识别出了两个可疑的URL，`rtrjkrykki.iego.net/appHome/`和`192.151.226.138:80/appHome/`。很可能这两个是同一个服务器，所以我们可以尝试在代码中使用JD-GUI查找至少一个URL：
- en: '![](img/ed826477-6013-4b1e-b39f-2707e9306fc8.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed826477-6013-4b1e-b39f-2707e9306fc8.png)'
- en: Searching for URL with JD-GUI
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 使用JD-GUI搜索URL
- en: 'Okay, now we know that the URL is found in `ConstantDatas.class`. Let''s look
    inside:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在我们知道URL位于`ConstantDatas.class`中。让我们看一下：
- en: '![](img/8a3c4026-7f41-4089-b19f-e8eccb3cc532.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a3c4026-7f41-4089-b19f-e8eccb3cc532.png)'
- en: A part of the ConstantDatas.class contents
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`ConstantDatas.class`内容的一部分'
- en: 'If we search for `BANKURL`, we will find that it''s used in `MainActinn.class`:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们搜索`BANKURL`，我们会发现它在`MainActinn.class`中被使用：
- en: '![](img/e572e059-3d73-479e-a273-32b876ea4ee2.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e572e059-3d73-479e-a273-32b876ea4ee2.png)'
- en: A part of the MainActinn.class contents
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`MainActinn.class`内容的一部分'
- en: 'Look at the following line: `"ConstantDatas.URL = ConstantDatas.BANKURL;"`.
    Let''s search for `ConstantDatas.URL` now. We''ll find a good hit in `Hearttttt.class`:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这一行："ConstantDatas.URL = ConstantDatas.BANKURL;"。现在让我们搜索`ConstantDatas.URL`。我们会在`Hearttttt.class`中找到一个很好的匹配：
- en: '![](img/405dcae8-8b94-4553-be09-828ff7329e88.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![](img/405dcae8-8b94-4553-be09-828ff7329e88.png)'
- en: A part of the Hearttttt.class contents
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`Hearttttt.class`内容的一部分'
- en: Here, you can see that the application collects information about the device
    it's installed on and its operating system, installed banking applications, mobile
    country code and mobile network code, unique subscriber ID, and so on, and posts
    this data in JSON format to `192.151.226.138:80/appHome/servlet/OnLine`.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到应用程序收集关于设备的信息，包括安装的操作系统、已安装的银行应用程序、移动国家代码和移动网络代码、唯一的用户订阅ID等，并将这些数据以JSON格式发送到`192.151.226.138:80/appHome/servlet/OnLine`。
- en: As you can see, you can get a lot of additional information from static code
    analysis; sometimes it's relatively easy, sometimes it's not, as a malware sample
    can be highly obfuscated.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，通过静态代码分析，你可以获得大量的附加信息；有时这相对简单，有时则不然，因为恶意软件样本可能会高度混淆。
- en: To analyze code with a higher rate of success, we highly recommend you start
    learning Android programming. Refer to the books provided in the *Further reading*
    section.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 为了以更高的成功率进行代码分析，我们强烈建议你开始学习Android编程。请参考*深入阅读*部分提供的书籍。
- en: Summary
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter introduced you to dynamic and static analysis of malicious Android
    applications. You've learned how to use an online sandbox to perform dynamic analysis,
    unpack an Android application, analyze its manifest file, and decompile its code.
    Finally, you've been introduced to the concepts of decompiled code analysis.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了恶意Android应用程序的动态和静态分析。你已经学习了如何使用在线沙箱进行动态分析，如何解包Android应用程序，分析其清单文件，并反编译其代码。最后，你已经了解了反编译代码分析的概念。
- en: Further reading
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'Please refer to the following references:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅以下参考资料：
- en: '*Documentation for app developers*: [https://developer.android.com/docs/](https://developer.android.com/docs/)'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*应用开发者文档*：[https://developer.android.com/docs/](https://developer.android.com/docs/)'
- en: '*John Horton, Android Programming for Beginners - Second Edition*: [https://www.packtpub.com/application-development/android-programming-beginners-second-edition](https://www.packtpub.com/application-development/android-programming-beginners-second-edition)'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*John Horton，《Android编程入门（第二版）》*：[https://www.packtpub.com/application-development/android-programming-beginners-second-edition](https://www.packtpub.com/application-development/android-programming-beginners-second-edition)'
