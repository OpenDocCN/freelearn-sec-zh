- en: Working with Sparta
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Sparta
- en: 'Sparta is a reconnaissance tool that integrates a number of the tools we''ve
    covered into a single GUI.  It includes Nmap, Hydra, Nikto, Netcat, and a number
    of other tools. Additionally, Sparta can be configured to use other tools by editing
    the `sparta.conf` file. The following are the recipes we will cover in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 是一个集成了我们已涵盖的多个工具的侦察工具，提供一个统一的图形用户界面（GUI）。它包括 Nmap、Hydra、Nikto、Netcat
    等工具。此外，Sparta 可以通过编辑 `sparta.conf` 文件来配置使用其他工具。以下是本章我们将讨论的内容：
- en: Information gathering with Sparta
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Sparta 进行信息收集
- en: Creating custom commands for Sparta
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 Sparta 创建自定义命令
- en: Port scanning with Sparta
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Sparta 进行端口扫描
- en: Fingerprinting with Sparta
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Sparta 进行指纹识别
- en: Vulnerability scanning with Sparta
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Sparta 进行漏洞扫描
- en: Web application scanning with Sparta
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Sparta 进行 Web 应用扫描
- en: Information gathering with Sparta
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Sparta 进行信息收集
- en: Sparta offers a great deal of functionality out of the box. In this recipe,
    we will take a look at the Sparta interface, explore what Sparta does by default
    when you add hosts to the scope, look at some of the tools Sparta utilizes, and
    brute-force passwords.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 默认提供了很多功能。在这个示例中，我们将查看 Sparta 界面，探索当您将主机添加到范围时 Sparta 默认的操作，查看 Sparta
    使用的一些工具，并进行暴力破解密码。
- en: Getting ready
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Sparta comes pre-bundled with Kali Linux 2\. To use it to perform scans, you
    will need to have a remote system that is running network services. In the examples
    provided, an instance of Metasploitable2 is used to perform this task. For more
    information on how to set up Metasploitable2, refer to [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 已预装 Kali Linux 2。要使用它进行扫描，您需要有一个运行网络服务的远程系统。在提供的示例中，使用 Metasploitable2
    实例来执行此任务。有关如何设置 Metasploitable2 的更多信息，请参考[第 1 章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)，*入门指南*。
- en: How to do it...
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s now dive straight into Sparta:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们直接进入 Sparta：
- en: 'To get started, navigate to Applications | Information Gathering | sparta:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，请导航到 应用程序 | 信息收集 | sparta：
- en: '![](../images/00310.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00310.jpeg)'
- en: 'Once Sparta has started, we need to define our target. In the Hosts pane, select
    Click here to add host(s) to scope.  For our examples, we will be using an IP
    address of `172.16.69.128`:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 Sparta 启动，我们需要定义目标。在主机窗格中，选择点击此处添加主机到范围。对于我们的示例，我们将使用 IP 地址 `172.16.69.128`：
- en: '![](../images/00314.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00314.jpeg)'
- en: 'Once you click on the Add to scope button, the scans begin. First, Sparta will
    run a staged Nmap scan. The staged Nmap scan is a number of scans actually, which
    will determine open ports and running services:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“添加到范围”按钮后，扫描开始。首先，Sparta 将运行一个分阶段的 Nmap 扫描。分阶段的 Nmap 扫描实际上是一系列扫描，用于确定开放端口和运行的服务：
- en: '![](../images/00317.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00317.jpeg)'
- en: 'As the scans progress, the services found will begin showing up in the Services
    window to the right of the Hosts pane. Additionally, it will do its best to identify
    specific software and versions where it can:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随着扫描的进行，找到的服务将开始出现在右侧的服务窗口中，位于主机窗格的右侧。此外，Sparta 会尽可能识别特定的软件和版本：
- en: '![](../images/00318.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00318.jpeg)'
- en: 'We can also see information about the services found by clicking on the Services
    pane. This would be more useful if we were scanning a network range and wanted
    to see what was found listed by service rather than host:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以通过点击服务窗格来查看找到的服务信息。如果我们扫描的是一个网络范围，并希望按服务而非主机列出找到的内容，这将更有用：
- en: '![](../images/00322.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00322.jpeg)'
- en: 'Upon discovery of certain services, Sparta will automatically deploy tools
    to gather further information. In the following screenshot, on discovering an
    FTP service running, Sparta launches Hydra in an effort to uncover passwords,
    as shown in the following screenshot:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在发现某些服务后，Sparta 会自动部署工具以收集进一步的信息。在以下截图中，当发现正在运行的 FTP 服务时，Sparta 启动了 Hydra，试图破解密码，如下图所示：
- en: '![](../images/00587.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00587.jpeg)'
- en: 'If a web service is discovered, it will run nikto. Additionally, it runs screenshooter
    to take a screenshot of the website found:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果发现了 Web 服务，它将运行 nikto。此外，它还会运行 screenshooter 来截取找到网站的截图：
- en: '![](../images/00326.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00326.jpeg)'
- en: 'When we look at all the information Sparta has acquired and organized for us,
    it is quite impressive. It has found a number of services and discovered usernames
    and passwords for a great deal of them, including MySQL, PostgreSQL, and FTP services.
    However, there is one FTP service it was not able to find credentials for; check
    out the following screenshot:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们查看Sparta所收集和组织的所有信息时，给人留下了深刻的印象。它已经找到了许多服务，并发现了大量服务的用户名和密码，包括MySQL、PostgreSQL和FTP服务。然而，它没有找到某个FTP服务的凭据；请查看以下屏幕截图：
- en: '![](../images/00330.jpeg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00330.jpeg)'
- en: 'Given that no password was found, let''s see whether we can find it using Sparta''s
    Brute tab. If we click on that tab, we can configure the IP, Port, and Service:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于没有找到密码，我们来看看能否通过Sparta的暴力破解选项卡找到密码。如果点击该选项卡，我们可以配置IP、端口和服务：
- en: '![](../images/00332.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00332.jpeg)'
- en: 'We will also use a Username list and Password list. We do this by clicking
    on the radio button and browsing to the lists we want to use. Kali has some great
    word lists in the `/usr/share/wordlists` directory.  We will use `/usr/share/wordlists/unix_users.txt`
    for the Username list and `/usr/share/wordlists/unix_passwords.txt` for the Passwords
    list:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还将使用用户名列表和密码列表。我们通过点击单选按钮并浏览到我们想要使用的列表来实现这一点。Kali在`/usr/share/wordlists`目录下提供了一些很棒的词汇列表。我们将使用`/usr/share/wordlists/unix_users.txt`作为用户名列表，`/usr/share/wordlists/unix_passwords.txt`作为密码列表：
- en: '![](../images/00335.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00335.jpeg)'
- en: 'Once we have it properly configured, we are presented with a dialog box; just
    click on the Run button and let it do the work. It finds the username/password
    combination in short order and displays it back to the screen:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们正确配置好，就会出现一个对话框；只需点击“运行”按钮，让它来完成工作。它会很快找到用户名/密码组合，并将其显示在屏幕上：
- en: '![](../images/00339.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00339.jpeg)'
- en: How it works...
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Sparta has a number of tools already integrated into its GUI and is an excellent
    way of consolidating your reconnaissance into one place. Upon configuring your
    scope, it will scan one or more hosts for open ports and services. Additional
    tools are also used to scan when certain services are discovered.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta已经集成了许多工具，且它是将侦察结果整合到一个地方的绝佳方式。配置好范围后，它将扫描一个或多个主机的开放端口和服务。当发现某些服务时，还会使用其他工具进行扫描。
- en: Creating custom commands for Sparta
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Sparta创建自定义命令
- en: In the previous recipe, we saw what Sparta can do out of the box. A great feature
    of Sparta is the ability to add other tools. These can then show up in the contextual
    menus, and the results can be consolidated within the Sparta interface. In this
    recipe, we cover how to custom-integrate a new tool.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们看到Sparta开箱即用的功能。Sparta的一个很棒的功能是可以添加其他工具。这些工具可以出现在上下文菜单中，结果可以在Sparta界面中汇总。在本示例中，我们将介绍如何自定义集成一个新工具。
- en: Getting ready
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Sparta comes pre-bundled with Kali Linux 2\. To use Sparta to perform scans,
    you will need to have remote systems that are running network services. In the
    examples provided, a combination of Linux and Windows systems are used. For more
    information on setting up systems in a local lab environment, refer to the *Installing
    Metasploitable2* and *Installing Windows Server* recipes in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta预装了Kali Linux 2。要使用Sparta执行扫描，您需要有运行网络服务的远程系统。在提供的示例中，使用了Linux和Windows系统的组合。有关在本地实验环境中设置系统的更多信息，请参阅[第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中的*安装Metasploitable2*和*安装Windows
    Server*部分，*入门指南*。
- en: We will also be editing Sparta's configuration file; refer to the *Using text
    editors (Vim and GNU nano)* recipe in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将编辑Sparta的配置文件；请参阅[第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中的*使用文本编辑器（Vim和GNU
    nano）*部分，*入门指南*。
- en: How to do it...
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Sparta is a great interface for performing our scanning and collecting our information
    in one place. Before we begin, let's make a change to Sparta that will prevent
    it from running all its tools automatically. As we saw in the previous recipe,
    Sparta will do a great deal of scanning and launch a number of tools based on
    what it finds. This may not always be the approach we want to take, especially
    if we are trying to be stealthy. To make this change, open a terminal window and
    type `vi /usr/share/sparta/sparta.conf`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta是一个很棒的界面，可以在一个地方执行扫描并收集我们的信息。在开始之前，让我们对Sparta进行一些更改，以防止它自动运行所有工具。正如我们在前面的步骤中看到的，Sparta会执行大量扫描，并根据它发现的内容启动多个工具。这种方式可能并非总是我们希望采用的，特别是当我们试图保持低调时。要进行这个更改，打开一个终端窗口并输入`vi
    /usr/share/sparta/sparta.conf`。
- en: 'Change the line `enable-scheduler-on-import=True` to `enable-scheduler=False`
    and save:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 将行`enable-scheduler-on-import=True`更改为`enable-scheduler=False`并保存：
- en: '![](../images/00651.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00651.jpeg)'
- en: 'The following steps will guide you to create custom commands:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导你创建自定义命令：
- en: 'To get started, navigate to Applications | Information Gathering | sparta:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，请导航到“应用程序 | 信息收集 | sparta”：
- en: Once Sparta has started, we need to define our target. Select Click here to
    add host(s) to scope. For our examples, we will be using an IP range of `172.16.69.0/24`.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦Sparta启动，我们需要定义我们的目标。选择“点击此处添加主机到范围”。在我们的示例中，我们将使用`172.16.69.0/24`的IP范围。
- en: Uncheck Run staged nmap scan. If left checked, it will run a number of Nmap
    scans identifying ports and services: ![](../images/00344.jpeg)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消勾选“运行阶段性nmap扫描”。如果保持勾选，它将执行一系列Nmap扫描，识别端口和服务：![](../images/00344.jpeg)
- en: 'After the Nmap host discovery scan has been run, we can see the discovered
    IPs under the Hosts tab, as seen in the following screenshot:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行Nmap主机发现扫描后，我们可以在“主机”标签下看到已发现的IP，如下图所示：
- en: '![](../images/00670.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00670.jpeg)'
- en: 'Now that we have a list of discovered hosts, we can right-click on any one
    of them to see a menu of what we can do next, as shown in the following screenshot:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了一份已发现主机的列表，我们可以右键点击任何一台主机，查看接下来可以执行的操作菜单，如下图所示：
- en: '![](../images/00220.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00220.jpeg)'
- en: 'Before we go any further, let''s save our Sparta session by going to File |
    Save As. Save your session:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们继续之前，让我们通过“文件 | 另存为”保存我们的Sparta会话。保存你的会话：
- en: We can add additional tools to Sparta, provided they run in non-interactive
    mode. To demonstrate this, we will add `fping` to the tools contained within Sparta.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以向Sparta中添加更多工具，只要它们以非交互模式运行。为了演示这一点，我们将把`fping`添加到Sparta包含的工具中。
- en: 'There are three types of actions you can define in Sparta:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在Sparta中，你可以定义三种类型的操作：
- en: '**Host**: A host action is one that would target a specific machine'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机**：主机操作是针对特定计算机的操作'
- en: '**Port**: Port actions target a specific port or service'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口**：端口操作针对特定的端口或服务'
- en: '**Terminal**: Terminal actions allow you to spawn a terminal from within Sparta'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**终端**：终端操作允许你从Sparta内启动一个终端'
- en: 'To add an action, it needs to be defined in the following format:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加一个操作，它需要按照以下格式进行定义：
- en: '`tool=label, command, services`'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`tool=label, command, services`'
- en: 'Let''s not look at the meaning of each of these words:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下这些词的含义：
- en: '`tool`: This is the name of the tool we are adding.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tool`：这是我们正在添加的工具名称。'
- en: '`label`: This is what will show within the contextual menus in Sparta.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`label`：这是在Sparta的上下文菜单中显示的内容。'
- en: '`command`: This is what you would type if running the tool from the terminal.
    The `command` tool uses the following placeholders: `[IP]`, `[PORT]`, and `[OUTPUT]`.
    These variables are replaced with the appropriate values at runtime.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`command`：这是你在终端中运行工具时输入的内容。`command`工具使用以下占位符：`[IP]`、`[PORT]`和`[OUTPUT]`。这些变量将在运行时被替换为相应的值。'
- en: '`services`: Services is a list of Nmap service names the tool would apply to.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`services`：服务是工具将应用的Nmap服务名称列表。'
- en: Let's now define a tool as an example. For our example, we will use the command
    `fping`. This will be a host action, as `fping` is used to see whether a host
    is up. Running `fping` from the command line would look something like `fping
    172.16.69.130`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们定义一个工具作为示例。以我们示例中的命令`fping`为例。这将是一个主机操作，因为`fping`用于检查主机是否在线。从命令行运行`fping`可能是类似`fping
    172.16.69.130`的形式。
- en: 'You should see something similar to the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到类似以下截图的内容：
- en: '![](../images/00291.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00291.jpeg)'
- en: 'Now, let''s add `fping` to Sparta. Open a terminal window and type the following
    command:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们将`fping`添加到Sparta中。打开一个终端窗口并输入以下命令：
- en: '[PRE0]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You should see something similar to the following screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到类似以下的截图：
- en: '![](../images/00206.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00206.jpeg)'
- en: 'Now, we will add a tool to the Sparta configuration. We will define `fping`
    under `[HostActions]`, shown as follows:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将向Sparta配置中添加一个工具。我们将在`[HostActions]`下定义`fping`，如下所示：
- en: '[PRE1]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You will note that we do not use `[PORT]` or `[OUTPUT]` as `fping` does not
    require them. Also, `services` is not required in our definition because `fping`
    is a host action.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，我们没有使用`[PORT]`或`[OUTPUT]`，因为`fping`不需要它们。同时，`services`在我们的定义中不需要，因为`fping`是一个主机操作。
- en: Save the file by hitting the *Esc* key, then typing, `:wq` and hitting the *Enter*
    key.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按*Esc*键保存文件，然后输入`:wq`并按*Enter*键。
- en: In order to see our new command in Sparta, we will need to restart the service.
    To close Sparta, go to the File | Exit menu option. Now we can reopen Sparta.
    Once started, go to the File | Open menu option and load back in the Sparta scan
    we saved earlier.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在Sparta中查看我们的新命令，我们需要重新启动服务。要关闭Sparta，请转到“文件 | 退出”菜单选项。现在我们可以重新打开Sparta。启动后，转到“文件
    | 打开”菜单选项并加载之前保存的Sparta扫描。
- en: 'Now when we right-click on the host, you will see Run fping, the host action
    we created. Select that option, and our `fping` command will run. You will notice
    that a new tab opens up within Sparta, displaying the results:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当我们右键点击主机时，你会看到“运行fping”，这是我们创建的主机操作。选择该选项，我们的`fping`命令将运行。你会注意到，Sparta中会打开一个新标签，显示结果：
- en: '![](../images/00221.jpeg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00221.jpeg)'
- en: How it works...
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Sparta has a number of tools already integrated into its GUI and is an excellent
    way of consolidating your reconnaissance into one place. If you have other tools
    you would like to integrate, you can do so by modifying the configuration and
    adding tools to expand its capabilities.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta已经集成了多个工具到其图形界面中，是将你的侦察工作整合到一个地方的绝佳方式。如果你有其他工具希望集成，可以通过修改配置并添加工具来扩展其功能。
- en: Port scanning with Sparta
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Sparta进行端口扫描
- en: Sparta conducts port scanning out of the box using Nmap. In this recipe, we
    will discuss how we can conduct port scanning by adding tools and customizing
    the Sparta interface.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta开箱即用地使用Nmap进行端口扫描。在本教程中，我们将讨论如何通过添加工具并自定义Sparta界面来执行端口扫描。
- en: Getting ready
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Sparta comes pre-bundled with Kali Linux 2\. To use Sparta to perform scans,
    you will need to have remote systems that are running network services. In the
    examples provided, a combination of Linux and Windows systems is used. For more
    information on setting up systems in a local lab environment, refer to the *Installing
    Metasploitable2* and *Installing Windows Server* recipes in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta与Kali Linux 2一起预装。要使用Sparta执行扫描，你需要有运行网络服务的远程系统。在提供的示例中，使用了Linux和Windows系统的组合。有关在本地实验环境中设置系统的更多信息，请参阅[第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中的*安装Metasploitable2*和*安装Windows
    Server*教程，*入门*。
- en: We will also be editing Sparta's configuration file. Refer to the *Using text
    editors (Vim and GNU nano) recipe* in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426), *Getting
    Started*.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将编辑Sparta的配置文件。请参阅[第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中的*使用文本编辑器（Vim和GNU
    nano）教程*，*入门*。
- en: How to do it...
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s now learn to perform port scanning with Sparta:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何使用Sparta进行端口扫描：
- en: 'Sparta uses Nmap to perform its port-scanning operations. We can see this by
    right-clicking on a host and navigating to the Portscan submenu. A number of Nmap
    scanning options are available to us; these options are also configurable in the
    `sparta.conf` file:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Sparta使用Nmap执行端口扫描操作。我们可以通过右键单击主机并导航到“端口扫描”子菜单来看到这一点。我们可以使用多个Nmap扫描选项，这些选项也可以在`sparta.conf`文件中配置：
- en: '![](../images/00235.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00235.jpeg)'
- en: 'If we want to add other options with different tools, we can do that as well.
    Let''s begin by adding an option to conduct a stealth scan using `hping3`.  Close
    the Sparta application and open a terminal window. From here, let''s edit the
    Sparta configuration file using the following command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想要添加其他选项与不同的工具一起使用，我们也可以这样做。我们从添加一个选项开始，使用`hping3`进行隐身扫描。关闭Sparta应用程序并打开一个终端窗口。在这里，让我们使用以下命令编辑Sparta配置文件：
- en: '[PRE2]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now let''s add a new host action, defined as `hping3=hping3 (stealth scan),
    hping3 [IP] --scan 0-65535`. You should see something similar to the following
    screenshot:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们添加一个新的主机操作，定义为`hping3=hping3（隐身扫描），hping3 [IP] --scan 0-65535`。你应该会看到类似以下的截图：
- en: '![](../images/00598.jpeg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00598.jpeg)'
- en: 'We can now save our changes and reopen Sparta. Now if we right-click on a host,
    we see our new host action, hping3 (stealth scan):'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以保存更改并重新打开Sparta。现在，如果我们右键点击主机，就会看到新的主机操作：hping3（隐匿扫描）：
- en: '![](../images/00353.jpeg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00353.jpeg)'
- en: 'Clicking on this option runs our stealth scan against the designated host.
    A new tab is opened, displaying the results of the scan:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击此选项会对指定主机执行隐匿扫描。打开一个新标签，显示扫描结果：
- en: '![](../images/00277.jpeg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00277.jpeg)'
- en: 'Let''s add one more port-scanning option. Once again, we close Sparta and will
    edit the `/usr/share/sparta/sparta.conf` file.  This time, we will add a host
    action option to conduct a connect scan via `dmitry`.  We configure our host action
    as follows:  `dmitry-connect=dmitry (connect scan), dmitry -p [IP]`. Then, we
    save the file:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们添加一个端口扫描选项。再次关闭Sparta并编辑`/usr/share/sparta/sparta.conf`文件。这次，我们将添加一个主机操作选项，通过`dmitry`执行连接扫描。我们将主机操作配置如下：`dmitry-connect=dmitry
    (connect scan), dmitry -p [IP]`。然后，保存文件：
- en: '![](../images/00292.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00292.jpeg)'
- en: 'Let''s now relaunch Sparta and load our hosts. We once again, see a new host
    action:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们重新启动Sparta并加载主机。我们再次看到一个新的主机操作：
- en: '![](../images/00313.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00313.jpeg)'
- en: 'Select dimitry (connect scan) from our host actions menu, and the scan is fired
    off. A new tab is opened, displaying the results of our connect scan:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我们的主机操作菜单中选择dimitry（连接扫描），扫描就会启动。打开一个新标签，显示我们的连接扫描结果：
- en: '![](../images/00323.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00323.jpeg)'
- en: How it works...
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作原理...
- en: Sparta has a number of tools already integrated into its GUI and is an excellent
    way of consolidating your reconnaissance into one place. Sparta uses Nmap to scan
    for ports by default. In this recipe, we've expanded Sparta's capabilities adding
    `hping3` and `dmitry`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta的GUI中已集成了许多工具，是将您的侦察工作集中在一个地方的绝佳方式。默认情况下，Sparta使用Nmap进行端口扫描。在本配方中，我们扩展了Sparta的功能，添加了`hping3`和`dmitry`。
- en: Fingerprinting with Sparta
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Sparta进行指纹识别
- en: The next step in our discovery process is fingerprinting, something we talked
    about earlier in [Chapter 5](part0189.html#5K7QA1-cf89710d791c4a3bb78ec273d9322426),
    *Fingerprinting*.  When fingerprinting, we want to uncover more details about
    the operating system and software services being used. Sparta allows us to continue
    gathering these details, keeping the details within its interface.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现过程中的下一步是指纹识别，这是我们在[第5章](part0189.html#5K7QA1-cf89710d791c4a3bb78ec273d9322426)中讨论过的内容，*指纹识别*。在进行指纹识别时，我们希望揭示更多关于操作系统和使用的服务软件的细节。Sparta允许我们继续收集这些细节，并将它们保存在其界面中。
- en: Getting ready
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Sparta comes pre-bundled with Kali Linux 2\. To use Sparta to perform scans,
    you will need to have remote systems running network services. In the examples
    provided, a combination of Linux and Windows systems is used. For more information
    on setting up systems in a local lab environment, refer to the *Installing Metasploitable2*
    and *Installing Windows Server recipes* in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta预装在Kali Linux 2中。要使用Sparta进行扫描，您需要确保远程系统正在运行网络服务。在提供的示例中，使用了Linux和Windows系统的组合。有关在本地实验室环境中设置系统的更多信息，请参阅[第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中的*安装Metasploitable2*和*安装Windows
    Server配方*，*入门指南*。
- en: We will also be editing Sparta's configuration file; refer to the *Using text
    editors (Vim and GNU nano)* recipe in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将编辑Sparta的配置文件；请参阅[第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中*使用文本编辑器（Vim和GNU
    nano）*的配方，*入门指南*。
- en: How to do it...
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'You will remember from our discussion of fingerprinting in [Chapter 5](part0440.html#D3JNG1-cf89710d791c4a3bb78ec273d9322426),
    *Fingerprinting*, that after we identify our hosts and ports, we want to continue
    gathering more detailed information about the OS and services running. Sparta
    has some great preconfigured tools to help with this.  As an example, let''s examine
    the contextual menus we now get when right-clicking on a service.  In the following
    example, we are examining an FTP service, and we are given the options to open
    a Telnet session, opening with Netcat, and grabbing the banner, among others:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 你会记得我们在[第5章](part0440.html#D3JNG1-cf89710d791c4a3bb78ec273d9322426)中讨论过指纹识别，*指纹识别*，在识别出主机和端口之后，我们希望继续收集有关操作系统和正在运行的服务的详细信息。Sparta提供了一些很棒的预配置工具来帮助完成这项工作。举个例子，让我们来看一下右键点击服务时弹出的上下文菜单。在下面的示例中，我们正在检查一个FTP服务，并且我们有以下选项：打开Telnet会话、使用Netcat打开、抓取横幅等：
- en: '![](../images/00340.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00340.jpeg)'
- en: 'Sparta will change the contextual menus depending on the service. In the following
    example, we''re looking at an HTTP service. Given this, Sparta presents us with
    some new items related to web services, such as Run nikto and Launch dirbuster:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 会根据服务类型改变上下文菜单。在以下示例中，我们查看的是 HTTP 服务。因此，Sparta 向我们展示了一些与 Web 服务相关的新项目，如运行
    nikto 和启动 dirbuster：
- en: '![](../images/00354.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00354.jpeg)'
- en: 'Let''s configure a new host action that will allow us to analyze SNMP. This
    will be a host action and be displayed in that contextual menu. In order to achieve
    this, we follow these steps:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们配置一个新的主机操作，这将允许我们分析 SNMP。这将是一个主机操作，并显示在上下文菜单中。为了实现这一目标，我们按照以下步骤进行：
- en: 'As before, we close Sparta and edit our Sparta configuration file using the `vi
    /usr/share/sparta/sparta.conf` command.  Under `[HostActions]`, we add a new item,
    `snmp=SNMPwalk, snmpwalk [IP] -c public -v 2c`:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如之前所述，我们关闭 Sparta 并使用 `vi /usr/share/sparta/sparta.conf` 命令编辑 Sparta 配置文件。在
    `[HostActions]` 下，我们添加一个新项 `snmp=SNMPwalk, snmpwalk [IP] -c public -v 2c`：
- en: '![](../images/00373.jpeg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00373.jpeg)'
- en: Once we are done editing, save and exit the configuration file.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑完成后，保存并退出配置文件。
- en: 'Now when we launch Sparta and reload our hosts, we can see a new host action
    when we right-click on a given host:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当我们启动 Sparta 并重新加载主机时，右键点击某个主机时，我们可以看到一个新的主机操作：
- en: '![](../images/00392.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00392.jpeg)'
- en: 'If we run SNMPwalk, we can see the results opened up in a new tab, as shown
    in the following screenshot:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们运行 SNMPwalk，我们可以看到结果在新标签页中打开，如下图所示：
- en: '![](../images/00413.jpeg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00413.jpeg)'
- en: How it works...
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Sparta has a number of tools already integrated into its GUI and is an excellent
    way of consolidating your reconnaissance into one place. Sparta uses Nmap to collect fingerprinting
    information. In this recipe, we added SNMPwalk to its capabilities.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 已经集成了许多工具到其图形界面中，是将你的侦察工作整合到一个地方的极好方式。Sparta 使用 Nmap 收集指纹信息。在这个配方中，我们增加了
    SNMPwalk 功能。
- en: Vulnerability scanning with Sparta
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Sparta 进行漏洞扫描
- en: As we have seen, Sparta is a great tool for conducting our reconnaissance and
    collecting that information in a central repository. We will now see how we can
    use Sparta and Nmap NSE together to scan for specific vulnerabilities in our target
    systems.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，Sparta 是一个非常适合进行侦察的工具，并将信息收集到一个中央仓库中。接下来，我们将看到如何将 Sparta 和 Nmap NSE 一起使用，扫描我们目标系统中的特定漏洞。
- en: Getting ready
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Sparta comes pre-bundled with Kali Linux 2\. To use Sparta to perform scans,
    you will need to have remote systems that are running network services. In the
    examples provided, a combination of Linux and Windows systems is used. For more
    information on setting up systems in a local lab environment, refer to the *Installing
    Metasploitable2* and *Installing Windows Server* recipes in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 已预装在 Kali Linux 2 中。要使用 Sparta 进行扫描，你需要远程系统正在运行网络服务。在提供的示例中，使用了 Linux
    和 Windows 系统的组合。有关在本地实验环境中设置系统的更多信息，请参见 [第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中关于*安装
    Metasploitable2* 和 *安装 Windows Server* 的配方，*入门*部分。
- en: We will also be editing Sparta's configuration file, refer to the *Using text
    editors (Vim and GNU nano)* recipe in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将编辑 Sparta 的配置文件，请参见 [第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中关于*使用文本编辑器（Vim
    和 GNU nano）*的配方，*入门*部分。
- en: How to do it...
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s now learn to perform vulnerability scanning with Sparta:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何使用 Sparta 进行漏洞扫描：
- en: In order to add a new port action, we close Sparta and use `vi` once again to
    edit the Sparta configuration file using the `vi /usr/share/sparta/sparta.conf` command.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了添加新的端口操作，我们关闭 Sparta，再次使用 `vi` 编辑 Sparta 配置文件，命令为 `vi /usr/share/sparta/sparta.conf`。
- en: 'Navigate down to the `[PortActions]` section, and we will add a new action.
    Back in [Chapter 6](part0255.html#7J5VE1-cf89710d791c4a3bb78ec273d9322426), *Vulnerability
    Scanning*, we used Nmap NSE to check for one of the four vulnerabilities exploited
    by the Stuxnet worm. We will add a port action here that will run this check.
    We will define our `[PortAction]` as `smb-vuln=Check` and for printer spooler
    impersonation, `vuln, nmap -p[PORT] --script=smb-vuln-ms10-061 [IP] -vvvv` and `netbios-ssn,microsoft-ds`:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`[PortActions]`部分，我们将添加一个新的操作。回到[第6章](part0255.html#7J5VE1-cf89710d791c4a3bb78ec273d9322426)，*漏洞扫描*，我们使用
    Nmap NSE 检查 Stuxnet 蠕虫利用的四个漏洞中的一个。我们将在这里添加一个端口操作来运行这个检查。我们将定义`[PortAction]`为`smb-vuln=Check`，对于打印机后台程序伪装，`vuln,
    nmap -p[PORT] --script=smb-vuln-ms10-061 [IP] -vvvv`和`netbios-ssn,microsoft-ds`：
- en: '![](../images/00661.jpeg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00661.jpeg)'
- en: 'Save the configuration file, open Sparta, and reload our Sparta project. We
    navigate down to one of our Windows XP boxes and look at the services available.
    We can see that port `445` is open, and the `microsoft-ds` service is available.
     If we right-click on that service, we can see our newly defined port action is
    there and available to use:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存配置文件，打开 Sparta，重新加载我们的 Sparta 项目。我们导航到其中一台 Windows XP 机器并查看可用服务。我们可以看到`445`端口是开放的，并且`microsoft-ds`服务可用。如果我们右键点击该服务，可以看到我们新定义的端口操作已经存在并可用：
- en: '![](../images/00448.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00448.jpeg)'
- en: 'Now we can check for this vulnerability right within the Sparta interface.
    If we run the check, a new tab is opened and the results of the test are displayed:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以直接在 Sparta 界面中检查此漏洞。如果我们运行检查，新的标签页将被打开，并显示测试结果：
- en: '![](../images/00464.jpeg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00464.jpeg)'
- en: How it works...
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Sparta has a number of tools already integrated into its GUI and is an excellent
    way of consolidating your reconnaissance into one place. Sparta is very configurable;
    in this recipe, we added the ability for Nmap NSE commands to check for specific
    vulnerabilities.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 已经将许多工具集成到其图形用户界面中，是将侦察信息集中管理的绝佳方式。Sparta 非常可配置；在本教程中，我们添加了 Nmap NSE
    命令的功能，以检查特定的漏洞。
- en: Web application scanning with Sparta
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Sparta 进行 Web 应用扫描
- en: Sparta comes preconfigured with a number of tools we can use to examine web
    services. In the following recipe, we'll look at its scanning capabilities.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 配备了多种工具，我们可以用来检查 web 服务。在接下来的教程中，我们将查看它的扫描功能。
- en: Getting ready
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备开始
- en: Sparta comes pre-bundled with Kali Linux 2\. To use Sparta to perform scans,
    you will need to have remote systems that are running network services. In the
    examples provided, a combination of Linux and Windows systems is used. For more
    information on setting up systems in a local lab environment, refer to the *Installing
    Metasploitable2* and *Installing Windows Server* recipes in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 配备了 Kali Linux 2。要使用 Sparta 执行扫描，您需要有运行网络服务的远程系统。在提供的示例中，使用了 Linux 和
    Windows 系统的组合。有关在本地实验室环境中设置系统的更多信息，请参考[第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中的*安装
    Metasploitable2*和*安装 Windows Server*教程，*入门*部分。
- en: We will also be editing Sparta's configuration file; refer to the *Using text
    editors (Vim and GNU nano)* recipe in [Chapter 1](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426),
    *Getting Started*.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将编辑 Sparta 的配置文件；请参考[第1章](part0026.html#OPEK1-cf89710d791c4a3bb78ec273d9322426)中的*使用文本编辑器（Vim
    和 GNU nano）*教程，*入门*部分。
- en: How to do it...
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Sparta comes preconfigured with a number of port actions defined for web services.
    If we right-click on a web service, we can see our available actions listed. We
    will take a look at a couple of these port actions in this recipe:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta 配备了多种已定义的端口操作用于 web 服务。如果我们右键点击 web 服务，可以看到列出可用的操作。在本教程中，我们将查看其中的一些端口操作：
- en: '![](../images/00074.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00074.jpeg)'
- en: 'Run nikto: One of the first options that stands out is the ability to run Nikto
    against our target web service. You will remember from our coverage of Nikto in [Chapter
    9](part0381.html#BBB6A1-cf89710d791c4a3bb78ec273d9322426), *Web Application Scanning*, that
    it spiders through a target application and also makes numerous preconfigured
    requests, attempting to identify potentially dangerous scripts and files that
    exist in an application:'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行 nikto：其中一个显著的选项是能够针对我们的目标 web 服务运行 Nikto。你应该还记得我们在[第9章](part0381.html#BBB6A1-cf89710d791c4a3bb78ec273d9322426)中讲解的
    Nikto，*Web 应用扫描*，它会遍历目标应用并进行大量预配置的请求，尝试识别应用中可能存在的危险脚本和文件：
- en: '![](../images/00490.jpeg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00490.jpeg)'
- en: 'Run nmap (scripts) on port: If we run Nmap scripts on the port, we get some
    banner grabs identifying http-methods, http-server-header, and http-title:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在端口上运行nmap（脚本）：如果我们在端口上运行Nmap脚本，我们会得到一些横幅抓取，识别出http-methods、http-server-header和http-title：
- en: '![](../images/00505.jpeg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00505.jpeg)'
- en: 'Launch dirbuster: We can also run dirbuster and the OWASP tool, which will
    look for directories and files on the target server. If we click on Launch dirbuster,
    the target URL and port are preconfigured. It can do a pure brute-force attack
    or list based off a file. For our example, we will give it a list of directories
    to try. There are a number of these lists available in the ` /usr/share/wordlists/dirbuster/`
    directory:'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动dirbuster：我们还可以运行dirbuster和OWASP工具，它们将查找目标服务器上的目录和文件。如果我们点击启动dirbuster，目标URL和端口会自动预配置。它可以进行纯暴力破解攻击，或者基于文件的列表进行攻击。在我们的示例中，我们将提供一个目录列表供它尝试。这个列表有很多可以在`/usr/share/wordlists/dirbuster/`目录下找到：
- en: '![](../images/00519.jpeg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00519.jpeg)'
- en: 'Dirbuster can take some time to run, largely depending on the type of scanning
    and/or the size of the word list we give it. Once we click on Start, dirbuster
    begins its checks and reports back in a new tab about what it finds:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Dirbuster可能需要一些时间来运行，主要取决于扫描类型和/或我们提供的字典列表的大小。一旦我们点击 Start，dirbuster便开始检查，并在新标签页中报告它所发现的内容：
- en: '![](../images/00531.jpeg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00531.jpeg)'
- en: 'Run whatweb: Whatweb, as configured by our Sparta port action, provides us
    information about the web servers, operating system, and languages. Whatweb is
    quite powerful, and you may want to consider creating your own port actions after
    reviewing its capabilities. To learn more about whatweb, use its help document
    by typing `whatweb -h` in your terminal. For our example, we will use whatweb
    as it comes configured in Sparta:'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行whatweb：Whatweb是由Sparta端口动作配置的，它为我们提供关于Web服务器、操作系统和语言的信息。Whatweb非常强大，在审视其功能后，你可能会考虑创建自己的端口动作。要了解更多关于whatweb的信息，可以通过在终端输入`whatweb
    -h`来查看其帮助文档。在我们的示例中，我们将使用Sparta中配置好的whatweb：
- en: '![](../images/00538.jpeg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00538.jpeg)'
- en: 'Launch webslayer: Finally, you will see an option for using webslayer within
    the context menu. Unfortunately, webslayer is not included in the Kali Linux 2.0
    distribution. If you try to run it, it will just crash, as can be seen in the
    following screenshot:'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动webslayer：最后，你会在上下文菜单中看到使用webslayer的选项。不幸的是，webslayer并未包含在Kali Linux 2.0发行版中。如果你尝试运行它，它会崩溃，以下是崩溃的截图：
- en: '![](../images/00626.jpeg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00626.jpeg)'
- en: How it works...
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它的工作原理...
- en: Sparta has a number of tools already integrated into its GUI and is an excellent
    way of consolidating your reconnaissance into one place. Sparta comes preconfigured
    with a number of great tools for analyzing web applications. In this recipe, we
    explored how to use these tools to test discovered web services.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Sparta已经将多个工具集成到其图形用户界面（GUI）中，是将侦察工作整合到一个地方的绝佳方式。Sparta预配置了许多优秀的工具用于分析Web应用程序。在本示例中，我们探讨了如何使用这些工具来测试已发现的Web服务。
