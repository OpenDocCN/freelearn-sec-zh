- en: Metasploit Components and Environment Configuration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit组件和环境配置
- en: 'For any tool that we use to perform a particular task, it''s always helpful
    to know that tool inside out. A detailed understanding of the tool enables us
    to use it aptly, making it perform to the fullest of its capability. Now that
    you have learned some of the absolute basics of the Metasploit Framework and its
    installation, in this chapter, you will learn how the Metasploit Framework is
    structured and what the various components of the Metasploit ecosystem. The following
    topics will be covered in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们用来执行特定任务的任何工具，了解该工具的内部始终是有帮助的。对工具的详细了解使我们能够恰当地使用它，使其充分发挥其能力。现在您已经学会了Metasploit
    Framework及其安装的一些绝对基础知识，在本章中，您将学习Metasploit Framework的结构以及Metasploit生态系统的各种组件。本章将涵盖以下主题：
- en: Anatomy and structure of Metasploit
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit的解剖和结构
- en: Metasploit components--auxiliaries, exploits, encoders, payloads, and post
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit组件--辅助模块、利用、编码器、有效载荷和后期
- en: Getting started with msfconsole and common commands
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用msfconsole和常用命令
- en: Configuring local and global variables
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置本地和全局变量
- en: Updating the framework
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新框架
- en: Anatomy and structure of Metasploit
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit的解剖和结构
- en: 'The best way to learn the structure of Metasploit is to browse through its
    directory. When using a Kali Linux, the Metasploit Framework is usually located
    at path `/usr/share/metasploit-framework`, as shown in the following screenshot:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 学习Metasploit结构的最佳方法是浏览其目录。在使用Kali Linux时，Metasploit Framework通常位于路径`/usr/share/metasploit-framework`，如下面的屏幕截图所示：
- en: '![](img/27cf4c84-1f03-4d55-8e27-dd8e43a708e5.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/27cf4c84-1f03-4d55-8e27-dd8e43a708e5.jpg)'
- en: 'At a broad level, the Metasploit Framework structure is as shown in the following
    screenshot:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在较高层次上，Metasploit Framework的结构如下所示：
- en: '![](img/15ec4cab-a7ef-44c7-903f-ffc91f0201a9.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/15ec4cab-a7ef-44c7-903f-ffc91f0201a9.jpg)'
- en: The Metasploit Framework has a very clear and well-defined structure, and the
    tools/utilities within the framework are organized based on their relevance in
    various phases of the penetration testing life cycle. We'll be using tools/utilities
    from each of these categories as we progress through the book.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit Framework具有非常清晰和明确定义的结构，框架内的工具/实用程序根据它们在渗透测试生命周期的各个阶段中的相关性进行组织。随着我们在本书中的进展，我们将使用来自每个类别的工具/实用程序。
- en: In the next section, we'll have a brief overview of all the Metasploit components.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将简要概述所有Metasploit组件。
- en: Metasploit components
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit组件
- en: The Metasploit Framework has various component categories based on their role
    in the penetration testing phases. The following sections will provide a detailed
    understanding of what each component category is responsible for.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit Framework具有基于其在渗透测试阶段中的角色的各种组件类别。以下各节将详细了解每个组件类别的责任。
- en: Auxiliaries
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 辅助模块
- en: You have learned so far that Metasploit is a complete penetration testing framework
    and not just a tool. When we call it a framework, it means that it consists of
    many useful tools and utilities. Auxiliary modules in the Metasploit Framework
    are nothing but small pieces of code that are meant to perform a specific task
    (in the scope of our penetration testing life cycle). For example, you might need
    to perform a simple task of verifying whether a certificate of a particular server
    has expired or not, or you might want to scan your subnet and check whether any
    of the FTP servers allow anonymous access. Such tasks can be very easily accomplished
    using auxiliary modules present in the Metasploit Framework.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经了解到Metasploit是一个完整的渗透测试框架，而不仅仅是一个工具。当我们称其为框架时，这意味着它包含许多有用的工具和实用程序。Metasploit
    Framework中的辅助模块只是用于执行特定任务（在我们的渗透测试生命周期范围内）的小代码片段。例如，您可能需要执行一个简单的任务，验证特定服务器的证书是否已过期，或者您可能想要扫描您的子网并检查是否有任何FTP服务器允许匿名访问。使用Metasploit
    Framework中存在的辅助模块可以非常轻松地完成这些任务。
- en: There are 1000 plus auxiliary modules spread across 18 categories in the Metasploit
    Framework.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在Metasploit Framework中有1000多个辅助模块分布在18个类别中。
- en: 'The following table shows various categories of auxiliary modules present in
    the Metasploit Framework:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了Metasploit Framework中存在的各种辅助模块的各个类别：
- en: '| `gather` | `pdf` | `vsploit` |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `gather` | `pdf` | `vsploit` |'
- en: '| `bnat` | `sqli` | `client` |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `bnat` | `sqli` | `client` |'
- en: '| `crawler` | `fuzzers` | `server` |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `crawler` | `fuzzers` | `server` |'
- en: '| `spoof` | `parser` | `voip` |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `spoof` | `parser` | `voip` |'
- en: '| `sniffer` | `analyze` | `dos` |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `sniffer` | `analyze` | `dos` |'
- en: '| `docx` | `admin` | `scanner` |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `docx` | `admin` | `scanner` |'
- en: Don't get overwhelmed with the number of auxiliary modules present in the Metasploit
    Framework. You may not need to know each and every module individually. You just
    need to search the right module in the required context and use it accordingly.
    We will now see how to use an auxiliary module.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 不要被Metasploit Framework中存在的辅助模块数量所压倒。您可能不需要单独了解每个模块。您只需要在所需的上下文中搜索正确的模块并相应地使用它。现在我们将看到如何使用辅助模块。
- en: 'During the course of this book, we will use many different auxiliary modules
    as and when required; however, let''s get started with a simple example:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的过程中，我们将根据需要使用许多不同的辅助模块；但是，让我们从一个简单的例子开始：
- en: Open up the terminal window and start Metasploit using the command `msfconsole`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端窗口，并使用命令`msfconsole`启动Metasploit。
- en: Select the `auxiliary` module `portscan/tcp` to perform a port scan against
    a target system.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`auxiliary`模块`portscan/tcp`来对目标系统执行端口扫描。
- en: Using the `show` command, list down all parameters that need to be configured
    in order to run this auxiliary module.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`show`命令，列出运行此辅助模块所需配置的所有参数。
- en: Using the `set RHOSTS` command, set the IP address of our target system.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`set RHOSTS`命令，设置我们目标系统的IP地址。
- en: Using the `set PORTS` command, select the port range you want to scan on your
    target system.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`set PORTS`命令，选择要在目标系统上扫描的端口范围。
- en: Using the `run` command, execute the auxiliary module with the parameters configured
    earlier.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`run`命令，执行先前配置的参数的辅助模块。
- en: 'You can see the use of all the previously mentioned commands in the following
    screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下截图中看到所有先前提到的命令的使用：
- en: '![](img/5444ac03-268e-4203-afe2-a517f6ce0114.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5444ac03-268e-4203-afe2-a517f6ce0114.jpg)'
- en: Exploits
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用
- en: 'Exploits are the most important part of the Metasploit Framework. An exploit
    is the actual piece of code that will give you the required access to the target
    system. There are 2500 plus exploits spread across more than 20 categories based
    on platform that exploit is supported. Now, you might be thinking that out of
    so many available exploits, which is the one that needs to be used. The decision
    to use a particular exploit against a target can be made only after extensive
    enumeration and vulnerability assessment of our target. (Refer to the section
    penetration testing life cycle from [Chapter 1](225d5f1a-f19d-43ba-90eb-c41039afaad7.xhtml),
    *Introduction to Metasploit and Supporting Tools*). Proper enumeration and a vulnerability
    assessment of the target will give us the following information based on which
    we can choose the correct exploit:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 利用是Metasploit框架中最重要的部分。利用是实际的代码片段，将为您提供对目标系统所需的访问权限。根据支持利用的平台，有2500多个利用分布在20多个类别中。现在，您可能会想到在这么多可用的利用中，需要使用哪一个。只有在对目标进行广泛的枚举和漏洞评估之后，才能决定使用特定的利用对目标进行攻击（参见[第1章](225d5f1a-f19d-43ba-90eb-c41039afaad7.xhtml)中的渗透测试生命周期部分，*Metasploit和支持工具简介*）。对目标进行适当的枚举和漏洞评估将为我们提供以下信息，基于这些信息，我们可以选择正确的利用：
- en: Operating system of the target system (including exact version and architecture)
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标系统的操作系统（包括确切的版本和架构）
- en: Open ports on the target system (TCP and UDP)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标系统上的开放端口（TCP和UDP）
- en: Services along with versions running on the target system
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标系统上运行的服务及其版本
- en: Probability of a particular service being vulnerable
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特定服务存在漏洞的概率
- en: 'The following table shows the various categories of exploits available in the
    Metasploit Framework:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了Metasploit框架中提供的各种利用类别：
- en: '| **Linux** | **Windows** | **Unix** | **OS X** | **Apple iOS** |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| **Linux** | **Windows** | **Unix** | **OS X** | **Apple iOS** |'
- en: '| `irix` | `mainframe` | `freebsd` | `solaris` | `bsdi` |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `irix` | `mainframe` | `freebsd` | `solaris` | `bsdi` |'
- en: '| `firefox` | `netware` | `aix` | `android` | `dialup` |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `firefox` | `netware` | `aix` | `android` | `dialup` |'
- en: '| `hpux` | `jre7u17` | `wifi` | `php` | `mssql` |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `hpux` | `jre7u17` | `wifi` | `php` | `mssql` |'
- en: In the upcoming chapters, we'll see how to use an exploit against a vulnerable
    target.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将看到如何针对易受攻击的目标使用利用。
- en: Encoders
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编码器
- en: In any of the given real-world penetration testing scenario, it's quite possible
    that our attempt to attack the target system would get detected/noticed by some
    kind of security software present on the target system. This may jeopardize all
    our efforts to gain access to the remote system. This is exactly when encoders
    come to the rescue. The job of the encoders is to obfuscate our exploit and payload
    in such a way that it goes unnoticed by any of the security systems on the target
    system.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何给定的现实世界渗透测试场景中，我们尝试攻击目标系统很可能会被目标系统上存在的某种安全软件检测到/注意到。这可能会危及我们所有的努力来获取对远程系统的访问权限。这正是编码器发挥作用的时候。编码器的工作是以这样的方式混淆我们的利用和有效载荷，以至于它在目标系统上的任何安全系统都不会被注意到。
- en: 'The following table shows the various encoder categories available in the Metasploit
    Framework:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了Metasploit框架中提供的各种编码器类别：
- en: '| `generic` | `mipsbe` | `ppc` |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `generic` | `mipsbe` | `ppc` |'
- en: '| `x64` | `php` | `mipsle` |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `x64` | `php` | `mipsle` |'
- en: '| `cmd` | `sparc` | `x86` |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `cmd` | `sparc` | `x86` |'
- en: We'll be looking at encoders in more detail in the upcoming chapters.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的章节中更详细地了解编码器。
- en: Payloads
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有效载荷
- en: To understand what a payload does, let's consider a real-world example. A military
    unit of a certain country develops a new missile that can travel a range of 500
    km at very high speed. Now, the missile body itself is of no use unless it's filled
    with the right kind of ammunition. Now, the military unit decided to load high
    explosive material within the missile so that when the missile hits the target,
    the explosive material within the missile explodes and causes the required damage
    to the enemy. So, in this case, the high explosive material within the missile
    is the payload. The payload can be changed based on the severity of damage that
    is to be caused after the missile is fired.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有效载荷的作用，让我们考虑一个现实世界的例子。某个国家的军事单位开发了一种新型导弹，可以以非常高的速度飞行500公里。现在，导弹本身是没有用的，除非它装满了正确类型的弹药。现在，军事单位决定在导弹内部装载高爆材料，这样当导弹击中目标时，导弹内部的高爆材料就会爆炸，对敌人造成所需的伤害。因此，在这种情况下，导弹内的高爆材料就是有效载荷。根据导弹发射后要造成的破坏程度，可以更改有效载荷。
- en: 'Similarly, payloads in the Metasploit Framework let us decide what action is
    to be performed on the target system once the exploit is successful. The following
    are the various payload categories available in the Metasploit Framework:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，在Metasploit框架中的有效载荷让我们决定在成功利用后对目标系统执行什么操作。以下是Metasploit框架中提供的各种有效载荷类别：
- en: '**Singles**: These are sometimes also referred to as inline or non staged payloads.
    Payloads in this category are a completely self-contained unit of the exploit
    and require shellcode, which means they have everything that is required to exploit
    the vulnerability on the target. The disadvantage of such payloads is their size.
    Since they contain the complete exploit and shellcode, they can be quite bulky
    at times, rendering them useless in certain scenarios with size restrictions.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Singles**：有时也称为内联或非分段有效载荷。此类别中的有效载荷是利用的完全独立单元，并且需要shellcode，这意味着它们具有利用目标漏洞所需的一切。这种有效载荷的缺点是它们的大小。由于它们包含完整的利用和shellcode，它们有时可能相当庞大，使它们在某些有大小限制的场景中变得无用。'
- en: '**Stagers**: There are certain scenarios where the size of the payload matters
    a lot. A payload with even a single byte extra may not function well on the target
    system. The stagers payload come handy in such a situation. The stagers payload
    simply sets up a connection between the attacking system and the target system.
    It doesn''t have the shellcode necessary to exploit the vulnerability on the target
    system. Being very small in size, it fits in well in many scenarios.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分段**：在某些情况下，有效载荷的大小非常重要。即使是多一个字节的有效载荷在目标系统上也可能无法正常运行。在这种情况下，分段有效载荷非常有用。分段有效载荷简单地在攻击系统和目标系统之间建立连接。它没有在目标系统上利用漏洞所需的shellcode。由于体积非常小，它在许多情况下都能很好地适用。'
- en: '**Stages**: Once the stager type payload has set up a connection between the
    attacking system and the target system, the "stages" payloads are then downloaded
    on the target system. They contain the required shellcode to exploit the vulnerability
    on the target system.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阶段**：一旦分段类型的有效载荷建立了攻击系统和目标系统之间的连接，“阶段”有效载荷就会被下载到目标系统上。它们包含在目标系统上利用漏洞所需的shellcode。'
- en: 'The following screenshot shows a sample payload that can be used to obtain
    a reverse TCP shell from a compromised Windows system:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了一个示例有效载荷，可用于从受损的Windows系统获取反向TCP shell：
- en: '![](img/cd86e78f-33cc-4b84-9df3-6edf7952937d.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd86e78f-33cc-4b84-9df3-6edf7952937d.jpg)'
- en: You will be learning how to use various payloads along with exploits in the
    upcoming chapters.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，您将学习如何使用各种有效载荷以及利用。
- en: Post
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后期
- en: 'The **post** modules contain various scripts and utilities that help us to
    further infiltrate our target system after a successful exploitation. Once we
    successfully exploit a vulnerability and get into our target system, post-exploitation
    modules may help us in the following ways:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**post**模块包含各种脚本和实用程序，可以在成功利用后帮助我们进一步渗透目标系统。一旦成功利用漏洞并进入目标系统，后期利用模块可能以以下方式帮助我们：'
- en: Escalate user privileges
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升用户权限
- en: Dump OS credentials
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转储操作系统凭据
- en: Steal cookies and saved passwords
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 窃取cookie和保存的密码
- en: Get key logs from the target system
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从目标系统获取按键日志
- en: Execute PowerShell scripts
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行PowerShell脚本
- en: Make our access persistent
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使我们的访问持久化
- en: 'The following table shows the various categories of "post" modules available
    in the Metasploit Framework:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了Metasploit Framework中可用的各种“post”模块的不同类别：
- en: '| **Linux** | **Windows** | **OS X** | **Cisco** |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| **Linux** | **Windows** | **OS X** | **Cisco** |'
- en: '| Solaris | Firefox | Aix | Android |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| Solaris | Firefox | Aix | Android |'
- en: '| Multi | Zip | Powershell |  |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 多功能 | Zip | Powershell |  |'
- en: The Metasploit Framework has more than 250 such post-exploitation utilities
    and scripts. We'll be using some of them when we discuss more on post-exploitation
    techniques in the upcoming chapters.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit Framework有250多个后期利用实用程序和脚本。在接下来的章节中，我们将讨论更多关于后期利用技术的内容时，会使用其中一些。
- en: Playing around with msfconsole
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 玩转msfconsole
- en: Now that we have a basic understanding of the structure of the Metasploit Framework,
    let's get started with the basics of `msfconsole` practically.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对Metasploit Framework的结构有了基本的了解，让我们开始实际学习`msfconsole`的基础知识。
- en: The `msfconsole` is nothing but a simple command-line interface of the Metasploit
    Framework. Though `msfconsole` may appear a bit complex initially, it is the easiest
    and most flexible way to interact with the Metasploit Framework. We'll use `msfconsole`
    for interacting with the Metasploit framework throughout the course of this book.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`msfconsole`只是Metasploit Framework的简单命令行界面。虽然`msfconsole`可能一开始看起来有点复杂，但它是与Metasploit
    Framework交互的最简单和最灵活的方式。在本书的学习过程中，我们将一直使用`msfconsole`与Metasploit框架进行交互。'
- en: Some of the Metasploit editions do offer GUI and a web-based interface. However,
    from a learning perspective, it's always recommended to master the command-line
    console of the Metasploit Framework that is `msfconsole`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 一些Metasploit版本确实提供了GUI和基于Web的界面。然而，从学习的角度来看，始终建议掌握Metasploit Framework的命令行控制台`msfconsole`。
- en: 'Let''s look at some of the `msfconsole` commands:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一些`msfconsole`命令：
- en: 'The `banner` command: The `banner` command is a very simple command used to
    display the Metasploit Framework banner information. This information typically
    includes its version details and the number of exploits, auxiliaries, payloads,
    encoders, and nops generators available in the currently installed version.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`banner`命令：`banner`命令是一个非常简单的命令，用于显示Metasploit Framework的横幅信息。此信息通常包括其版本详细信息以及当前安装版本中可用的漏洞、辅助工具、有效载荷、编码器和nop生成器的数量。'
- en: 'Its syntax is `msf> banner`. The following screenshot shows the use of the
    `banner` command:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 它的语法是`msf> banner`。以下截图显示了`banner`命令的使用：
- en: '![](img/58b4e734-0bff-4b84-be19-b7bc9a4e66d7.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/58b4e734-0bff-4b84-be19-b7bc9a4e66d7.jpg)'
- en: 'The `version` command: The `version` command is used to check the version of
    the current Metasploit Framework installation. You can visit the following site
    in order to check the latest version officially released by Metasploit:'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`version`命令：`version`命令用于检查当前Metasploit Framework安装的版本。您可以访问以下网站以检查Metasploit官方发布的最新版本：'
- en: '[https://github.com/rapid7/metasploit-framework/wiki/Downloads-by-Version](https://github.com/rapid7/metasploit-framework/wiki/Downloads-by-Version)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/rapid7/metasploit-framework/wiki/Downloads-by-Version](https://github.com/rapid7/metasploit-framework/wiki/Downloads-by-Version)'
- en: 'Its syntax is `msf> version`. The following screenshot shows the use of the
    `version` command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 它的语法是`msf> version`。以下截图显示了`version`命令的使用：
- en: '![](img/f158beba-59f0-48ff-9cdc-d725fa9c3c62.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f158beba-59f0-48ff-9cdc-d725fa9c3c62.jpg)'
- en: 'The `connect` command: The `connect` command present in the Metasploit Framework
    gives similar functionality to that of a putty client or netcat. You can use this
    feature for a quick port scan or for port banner grabbing.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`connect`命令：Metasploit Framework中的`connect`命令提供了类似于putty客户端或netcat的功能。您可以使用此功能进行快速端口扫描或端口横幅抓取。'
- en: 'Its syntax is `msf> connect <ip:port>`. The following screenshot shows the
    use of the `connect` command:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 它的语法是`msf> connect <ip:port>`。以下截图显示了`connect`命令的使用：
- en: '![](img/462a7394-2152-419f-9905-19a6355f0e3d.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/462a7394-2152-419f-9905-19a6355f0e3d.jpg)'
- en: 'The `help` command: As the name suggests, the `help` command offers additional
    information on the usage of any of the commands within the Metasploit Framework.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`help`命令：顾名思义，`help`命令提供有关Metasploit Framework中任何命令的使用的附加信息。'
- en: 'Its syntax is `msf> help`. The following screenshot shows the use of the `help`
    command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf> help`。以下截图显示了`help`命令的使用：
- en: '![](img/7264dc7f-0742-4616-9a98-aa8d4ff5bbf5.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7264dc7f-0742-4616-9a98-aa8d4ff5bbf5.jpg)'
- en: 'The `route` command: The `route` command is used to add, view, modify, or delete
    the network routes. This is used for pivoting in advanced scenarios, which we
    will cover later in this book.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`route`命令：`route`命令用于添加、查看、修改或删除网络路由。这用于高级场景中的枢纽，我们将在本书的后面部分介绍。 '
- en: 'Its syntax is `msf> route`. The following screenshot shows the use of the `route`
    command:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf> route`。以下截图显示了`route`命令的使用：
- en: '![](img/fa5f8fb1-6c01-4200-b0ce-ec3d79a91402.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fa5f8fb1-6c01-4200-b0ce-ec3d79a91402.jpg)'
- en: 'The `save` command: At times, when performing a penetration test on a complex
    target environment, a lot of configuration changes are made in the Metasploit
    Framework. Now, if the penetration test needs to be resumed again at a later point
    of time, it would be really painful to configure the Metasploit Framework again
    from scratch. The `save` command saves all the configurations to a file and it
    gets loaded upon the next startup, saving all the reconfiguration efforts.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`save`命令：有时，在对复杂目标环境进行渗透测试时，Metasploit Framework会进行许多配置更改。现在，如果需要稍后再次恢复渗透测试，从头开始重新配置Metasploit
    Framework将非常痛苦。`save`命令将所有配置保存到文件中，并在下次启动时加载，节省了所有重新配置的工作。'
- en: 'Its syntax is `msf>save`. The following screenshot shows the use of the `save`
    command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf>save`。以下截图显示了`save`命令的使用：
- en: '![](img/7a17a776-4823-42c4-9305-f000a33faf19.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7a17a776-4823-42c4-9305-f000a33faf19.jpg)'
- en: 'The `sessions` command: Once our target is exploited successfully, we normally
    get a shell session on the target system. If we are working on multiple targets
    simultaneously, then there might be multiple sessions actively open at the same
    time. The Metasploit Framework allows us to switch between multiple sessions as
    and when required. The `sessions` command lists down all the currently active
    sessions established with various target systems.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sessions`命令：一旦我们成功利用目标，通常会在目标系统上获得一个shell会话。如果我们同时在多个目标上工作，可能会同时打开多个会话。Metasploit
    Framework允许我们根据需要在多个会话之间切换。`sessions`命令列出了与各个目标系统建立的所有当前活动会话。'
- en: 'Its syntax is `msf>sessions`. The following screenshot shows the use of the
    `sessions` command:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf>sessions`。以下截图显示了`sessions`命令的使用：
- en: '![](img/1f2d3a78-714a-4fc4-9a5f-35dbd857601e.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f2d3a78-714a-4fc4-9a5f-35dbd857601e.jpg)'
- en: 'The `spool` command: Just like any application has debug logs that help out
    in debugging errors, the `spool` command prints out all the output to a user-defined
    file along with the console. The output file can later be analyzed based on the
    requirement.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`spool`命令：就像任何应用程序都有帮助调试错误的调试日志一样，`spool`命令将所有输出打印到用户定义的文件以及控制台。稍后可以根据需要分析输出文件。'
- en: 'Its syntax is `msf>spool`. The following screenshot shows the use of the `spool`
    command:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf>spool`。以下截图显示了`spool`命令的使用：
- en: '![](img/65a945d8-6273-4aff-a321-d14209ccd793.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65a945d8-6273-4aff-a321-d14209ccd793.jpg)'
- en: 'The `show` command: The `show` command is used to display the available modules
    within the Metasploit Framework or to display additional information while using
    a particular module.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show`命令：`show`命令用于显示Metasploit Framework中可用的模块，或在使用特定模块时显示附加信息。'
- en: 'Its syntax is `msf> show`. The following screenshot shows the use of the `show`
    command:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf> show`。以下截图显示了`show`命令的使用：
- en: '![](img/1a7b8409-4229-42c5-885a-3432802c1a70.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1a7b8409-4229-42c5-885a-3432802c1a70.jpg)'
- en: 'The `info` command: The `info` command is used to display details about a particular
    module within the Metasploit Framework. For example, you might want to view information
    on meterpreter payload, such as what the supported architecture ia and what the
    options required in order to execute this are:'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`info`命令：`info`命令用于显示Metasploit Framework中特定模块的详细信息。例如，您可能希望查看有关meterpreter有效载荷的信息，例如支持的架构和执行所需的选项：'
- en: 'Its syntax is `msf> info`. The following screenshot shows the use of the `info`
    command:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf> info`。以下截图显示了`info`命令的使用：
- en: '![](img/0b92866c-e5a6-4203-a7f5-e95acd2c95c6.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b92866c-e5a6-4203-a7f5-e95acd2c95c6.jpg)'
- en: 'The `irb` command: The `irb` command invokes the interactive Ruby platform
    from within the Metasploit Framework. The interactive Ruby platform can be used
    for creating and invoking custom scripts typically during the post-exploitation
    phase.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`irb`命令：`irb`命令从Metasploit Framework内部调用交互式Ruby平台。交互式Ruby平台可用于在后期利用阶段创建和调用自定义脚本。'
- en: 'Its syntax is `msf>irb`. The following screenshot shows the use of the `irb`
    command:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf>irb`。以下截图显示了`irb`命令的使用：
- en: '![](img/be2a6bc4-77c8-4e3a-babb-a9b753d35136.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be2a6bc4-77c8-4e3a-babb-a9b753d35136.jpg)'
- en: 'The `makerc` command: When we use the Metasploit Framework for pen testing
    a target, we fire a lot many commands. At end of the assignment or that particular
    session, we might want to review what all activities we performed through Metasploit.
    The `makerc` command simply writes out all the command history for a particular
    session to a user defined output file.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`makerc`命令：当我们使用Metasploit Framework对目标进行渗透测试时，会发出许多命令。在任务结束或特定会话结束时，我们可能希望回顾通过Metasploit执行的所有活动。`makerc`命令简单地将特定会话的所有命令历史写入用户定义的输出文件。'
- en: 'Its syntax is `msf>makerc`. The following screenshot shows the use of the `makerc`
    command:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法为`msf>makerc`。以下截图显示了`makerc`命令的使用：
- en: '![](img/bb26c1eb-8e9f-4811-b165-e5c5f77b3c5c.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bb26c1eb-8e9f-4811-b165-e5c5f77b3c5c.jpg)'
- en: Variables in Metasploit
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit中的变量
- en: 'For most exploits that we use within the Metasploit Framework, we need to set
    values to some of the variables. The following are some of the common and most
    important variables in the Metasploit Framework:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们在Metasploit框架中使用的大多数利用，我们需要为一些变量设置值。以下是Metasploit框架中一些常见和最重要的变量：
- en: '| **Variable name** | **Variable description** |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| **变量名称** | **变量描述** |'
- en: '| `LHOST` | Local Host: This variable contains the IP address of the attacker''s
    system that is the IP address of the system from where we are initiating the exploit.
    |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `LHOST` | 本地主机：此变量包含攻击者系统的IP地址，即我们发起利用的系统的IP地址。|'
- en: '| `LPORT` | Local Port: This variable contains the (local) port number of the
    attacker''s system. This is typically needed when we are expecting our exploit
    to give us reverse shell. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| `LPORT` | 本地端口：此变量包含攻击者系统的（本地）端口号。当我们期望利用给我们提供反向shell时，通常需要这个。|'
- en: '| `RHOST` | Remote Host: This variable contains the IP address of our target
    system. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `RHOST` | 远程主机：此变量包含目标系统的IP地址。|'
- en: '| `RPORT` | Remote Port: This variable contains the port number on the target
    system that we will attack/exploit. For example, for exploiting an FTP vulnerability
    on a remote target system, RPORT will be set to 21. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `RPORT` | 远程端口：此变量包含我们将攻击/利用的目标系统上的端口号。例如，要利用远程目标系统上的FTP漏洞，RPORT将设置为21。|'
- en: 'The `get` command: The `get` command is used to retrieve the value contained
    in a particular local variable within the Metasploit Framework. For example, you
    might want to view what is the IP address of the target system that you have set
    for a particular exploit.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get`命令：`get`命令用于检索Metasploit框架中特定本地变量中包含的值。例如，您可能想查看为特定利用设置的目标系统的IP地址。'
- en: 'Its syntax is `msf>get`. The following screenshot shows the use of the `msf>
    get` command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法是`msf>get`。以下截图显示了`msf> get`命令的使用：
- en: '![](img/e67fe1c2-7067-48b1-af06-6dbaf39b2a2e.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e67fe1c2-7067-48b1-af06-6dbaf39b2a2e.jpg)'
- en: 'The `getg` command: The `getg` command is very similar to the `get` command,
    except it returns the value contained in the global variable.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getg`命令：`getg`命令与`get`命令非常相似，只是返回全局变量中包含的值。'
- en: 'Its syntax is `msf> getg`. The following screenshot shows the use of the `msf>
    getg` command:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法是`msf> getg`。以下截图显示了`msf> getg`命令的使用：
- en: '![](img/21ba77ae-8ba7-417e-9ff6-dcbb9a602d2d.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21ba77ae-8ba7-417e-9ff6-dcbb9a602d2d.jpg)'
- en: 'The `set` and `setg` commands: The `set` command assigns a new value to one
    of the (local) variables (such as `RHOST`, `RPORT`, `LHOST`, and `LPPORT`) within
    the Metasploit Framework. However, the `set` command assigns a value to the variable
    that is valid for a limited session/instance. The `setg` command assigns a new
    value to the (global) variable on a permanent basis so that it can be used repeatedly
    whenever required.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`set`和`setg`命令：`set`命令为Metasploit框架中的一个（本地）变量（如`RHOST`、`RPORT`、`LHOST`和`LPPORT`）分配一个新值。但是，`set`命令为一个有限的会话/实例分配一个变量的值。`setg`命令为（全局）变量永久分配一个新值，以便在需要时可以重复使用。'
- en: 'Its syntax is:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 其语法是：
- en: '[PRE0]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can see the `set` and `setg` commands in the following screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在以下截图中看到`set`和`setg`命令：
- en: '![](img/2a690008-4b20-45aa-9323-462d09b1e925.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a690008-4b20-45aa-9323-462d09b1e925.jpg)'
- en: 'The `unset` and `unsetg` commands: The `unset` command simply clears the value
    previously stored in a (local) variable through the `set` command. The `unsetg`
    command clears the value previously stored in a (global) variable through the
    `setg` command:'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unset`和`unsetg`命令：`unset`命令简单地清除通过`set`命令之前存储在（本地）变量中的值。`unsetg`命令通过`setg`命令清除之前存储在（全局）变量中的值：'
- en: 'syntax is:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 语法是：
- en: '[PRE1]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can see the `unset` and `unsetg` commands in the following screenshot:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在以下截图中看到`unset`和`unsetg`命令：
- en: '![](img/6d69985e-c49e-474d-9ca7-aa714603e711.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d69985e-c49e-474d-9ca7-aa714603e711.jpg)'
- en: Updating the Metasploit Framework
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新Metasploit框架
- en: The Metasploit Framework is commercially backed by Rapid 7 and has a very active
    development community. New vulnerabilities are discovered almost on a daily basis
    in various systems. For any such newly discovered vulnerability, there's quite
    a possibility that you get a ready-to-use exploit in the Metasploit Framework.
    However, in order to keep abreast with the latest vulnerabilities and exploits,
    it's important to keep the Metasploit Framework updated. You may not need to update
    the framework on a daily basis (unless you are very actively involved in penetration
    testing); however, you can target for weekly updates.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架由Rapid 7提供商业支持，并拥有一个非常活跃的开发社区。几乎每天都会在各种系统中发现新的漏洞。对于任何这种新发现的漏洞，很有可能在Metasploit框架中获得一个现成的利用。但是，为了跟上最新的漏洞和利用，保持Metasploit框架的更新是很重要的。您可能不需要每天更新框架（除非您非常积极地参与渗透测试）；但是，您可以定期进行更新。
- en: 'The Metasploit Framework offers a simple utility called `msfupdate` that connects
    to the respective online repository and fetches the updates:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架提供了一个简单的实用程序称为`msfupdate`，它连接到相应的在线存储库并获取更新：
- en: '![](img/d3a1b5d7-47e2-4514-99aa-aba935b30953.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d3a1b5d7-47e2-4514-99aa-aba935b30953.jpg)'
- en: Summary
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we have seen how the Metasploit Framework is structured and
    some common console commands. In the next chapter, we''ll practically start using
    the Metasploit Framework for performing information gathering and enumeration
    on our target systems. For using most modules within the Metasploit Framework,
    remember the following sequence:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看到了Metasploit框架的结构和一些常见的控制台命令。在下一章中，我们将实际开始使用Metasploit框架来执行对目标系统的信息收集和枚举。对于在Metasploit框架中使用大多数模块，记住以下顺序：
- en: Use the `use` command to select the required Metasploit module.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`use`命令选择所需的Metasploit模块。
- en: Use the `show options` command to list what all variables are required in order
    to execute the selected module.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`show options`命令列出执行所选模块所需的所有变量。
- en: Use the `set` command to set the values for required variables.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`set`命令设置所需变量的值。
- en: Use the `run` command to execute the module with the variables configured earlier.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`run`命令执行先前配置的变量的模块。
- en: Exercises
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: 'You can try the following exercises:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以尝试以下练习：
- en: Browse through the directory structure of the Metasploit Framework
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览Metasploit Framework的目录结构
- en: Try out some of the common console commands discussed in this chapter
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试一些本章讨论的常见控制台命令
- en: Update the Metasploit Framework to the latest available version
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新Metasploit Framework到最新可用版本
