- en: File Recovery and Data Carving with Foremost, Scalpel, and Bulk Extractor
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Foremost、Scalpel和Bulk Extractor进行文件恢复和数据切割
- en: Now that we’ve learned how to create forensic images of evidence, let’s take
    a look at the file recovery and data carving process using Foremost, Scalpel,
    and Bulk Extractor.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学会了如何创建证据的取证镜像，让我们来看看如何使用Foremost、Scalpel和Bulk Extractor进行文件恢复和数据切割。
- en: When we last covered filesystems, we saw that various operating systems use
    their own filesystems to be able to store, access, and modify data. So too, storage
    media use filesystems to do the very same.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 上次我们讨论文件系统时，我们看到各种操作系统使用自己的文件系统来存储、访问和修改数据。同样，存储介质也使用文件系统来做同样的事情。
- en: Metadata, or data about data, helps the operating system identify the data.
    Metadata includes technical information, such as the creation and modification
    dates, and the file type of the data. This data makes it much easier to locate
    and index files.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 元数据，或关于数据的数据，帮助操作系统识别数据。元数据包括技术信息，如创建和修改日期，以及数据的文件类型。这些数据使定位和索引文件变得更加容易。
- en: File carving retrieves data and files from unallocated space using specific
    characteristics such as file structure and file headers, instead of traditional
    metadata created by, or associated with, filesystems.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 文件切割是从未分配空间中检索数据和文件，使用文件结构和文件头部等特定特征，而不是由文件系统创建或关联的传统元数据。
- en: As the name implies, **unallocated space** is an area of storage media that
    has been marked by the operating system or file table as empty or unallocated
    to any file or data. Although the location of, and information about, the files
    are not present and sometimes corrupted, there are still characteristics about
    the file that reside in its header and footer that can identify the file or even
    fragments of the file.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名称所示，**未分配空间**是存储介质上被操作系统或文件表标记为空或未分配给任何文件或数据的区域。尽管文件的位置和信息不在，有时会损坏，但文件的头部和尾部仍然包含可以识别文件甚至文件片段的特征。
- en: Even if a file extension has been changed or is missing altogether, file headers
    contain information that can identify the file type and attempt to carve the file
    by analyzing header and footer information. Data carving is quite a lengthy process
    and should be done using automated tools to save time. It also helps if the investigator
    has an idea of what file types they are looking for, to have a better focus and
    to save time. Nevertheless, this is forensics and we know that time and patience
    are key.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 即使文件扩展名已更改或完全丢失，文件头包含的信息可以识别文件类型，并尝试通过分析头部和尾部信息来切割文件。数据切割是一个相当冗长的过程，应该使用自动化工具来节省时间。如果调查人员知道他们正在寻找的文件类型，这也有助于更好地聚焦和节省时间。尽管如此，这是取证工作，我们知道时间和耐心至关重要。
- en: 'Some common file types, as displayed in hexadecimal format within the file
    headers, include:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一些常见的文件类型，如十六进制格式在文件头中显示：
- en: '**Joint Photographic Experts Group** (**JPEG**):  `FF D8 FF E0`'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**联合图像专家组**（**JPEG**）：`FF D8 FF E0`'
- en: '**Portable Document Format** (**PDF**):  `25 50 44 46`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**便携式文档格式**（**PDF**）：`25 50 44 46`'
- en: While more on analysis of files and headers will be looked at in later chapters,
    let’s have a look at three tools for data carving in Kali Linux.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然关于文件和头部的更多分析将在后面的章节中进行，让我们来看看Kali Linux中用于数据切割的三种工具。
- en: Forensic test images used in Foremost and Scalpel
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Foremost和Scalpel中使用的取证测试镜像
- en: For this tool, a digital forensic tool testing image, created by Nick Micus,
    specifically for testing data carving tools, was used. One of the main reasons
    for choosing this particular image for this exercise is that Nick Mikus is listed
    as one of the contributing developers of Foremost. As seen in the first line of
    Foremost, which displays the version number alongside authors Jesse Kornblum and
    Kris Kendall. The image can be downloaded freely at [http://dftt.sourceforge.net/test11/index.html](http://dftt.sourceforge.net/test11/index.html).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个工具，使用了由Nick Micus创建的数字取证工具测试镜像，专门用于测试数据切割工具。选择这个特定的镜像进行练习的主要原因之一是Nick Mikus被列为Foremost的贡献开发者之一。正如在Foremost的第一行中所看到的，显示了版本号以及作者Jesse
    Kornblum和Kris Kendall。该镜像可以在[http://dftt.sourceforge.net/test11/index.html](http://dftt.sourceforge.net/test11/index.html)上免费下载。
- en: Once you've become familiar with this exercise, you can try extracting data
    from other images also available on that site at [http://dftt.sourceforge.net/](http://dftt.sourceforge.net/).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦熟悉了这个练习，可以尝试从[http://dftt.sourceforge.net/](http://dftt.sourceforge.net/)上的其他镜像中提取数据。
- en: Using Foremost for file recovery and data carving
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Foremost进行文件恢复和数据切割
- en: 'Foremost is a simple and effective CLI tool that recovers files by reading
    the headers and footers of the files. We can start Foremost by clicking on Applications |
    11-Forensics | foremost:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Foremost是一个简单而有效的CLI工具，通过读取文件的头部和尾部来恢复文件。我们可以通过单击应用程序| 11-取证| Foremost来启动Foremost：
- en: '![](img/8a35cc71-8e26-4d0a-8357-eec87f6fe818.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a35cc71-8e26-4d0a-8357-eec87f6fe818.png)'
- en: 'Once Foremost is successfully started, a Terminal opens, displaying the program
    version, creators, and some of the many switches for usage:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Foremost成功启动，一个终端会打开，显示程序版本、创建者和许多用法开关。
- en: '![](img/f55a3e8a-aa63-4909-b8f9-fba5a5cbd1d9.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f55a3e8a-aa63-4909-b8f9-fba5a5cbd1d9.png)'
- en: 'To have a better understanding of Foremost and the switches used, try browsing
    the Foremost `System Manager''s Manual`. This can be done by entering the following
    command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要更好地了解Foremost和使用的开关，请尝试浏览Foremost的`系统管理手册`。可以通过输入以下命令来完成：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/45743965-1b38-4240-918d-6c8e69571163.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45743965-1b38-4240-918d-6c8e69571163.png)'
- en: 'The syntax for using Foremost is as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Foremost的语法如下：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this example, we have specified the `11-carve-fat.dd` file located on the
    desktop as the input file (`-i`)  and specified an empty folder named `Foremost_recovery`
    as the output file (`-o`). Additionally, other switches can also be specified
    as needed.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们指定了位于桌面上的`11-carve-fat.dd`文件作为输入文件（`-i`），并指定了一个名为`Foremost_recovery`的空文件夹作为输出文件（`-o`）。另外，还可以根据需要指定其他开关。
- en: 'To begin carving the `11-carve-fat.dd` image with Foremost, we type the following
    command in the Terminal:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用Foremost切割`11-carve-fat.dd`图像，我们在终端中输入以下命令：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](img/86339bd9-e25d-4f99-a86d-a11189df3981.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/86339bd9-e25d-4f99-a86d-a11189df3981.png)'
- en: Although the characters found look quite unclear while processing, the results
    will be clearly categorized and summarized in the specified output folder.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在处理过程中找到的字符看起来相当模糊，但结果将清晰地分类和总结在指定的输出文件夹中。
- en: For quick access to some of the commands in Foremost, you may also use `foremost
    -h`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要快速访问Foremost中的一些命令，也可以使用`foremost -h`。
- en: 'It is important that the specified output folder be empty or you will encounter
    problems, as shown in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 指定的输出文件夹必须为空，否则您将遇到问题，如下图所示：
- en: '![](img/a65fefeb-050c-4e67-97b7-2d2de957d2e4.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a65fefeb-050c-4e67-97b7-2d2de957d2e4.png)'
- en: Viewing Foremost results
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看Foremost结果
- en: 'Once Foremost has completed the carving process, we can proceed to the `Foremost_recovery`
    output folder:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Foremost完成切割过程，我们就可以进入`Foremost_recovery`输出文件夹：
- en: '![](img/67ff1db0-c18d-4cd7-ae65-ccfd56d630cb.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/67ff1db0-c18d-4cd7-ae65-ccfd56d630cb.png)'
- en: 'If we open the output directory, we can see the carved items, categorized by
    file type along with an `audit.txt` folder, which contains details of the findings:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们打开输出目录，我们可以看到按文件类型分类的切割项目，以及包含发现详细信息的`audit.txt`文件夹：
- en: '![](img/cd539ac9-45d7-4586-9cc4-0ae6c5f87f87.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd539ac9-45d7-4586-9cc4-0ae6c5f87f87.png)'
- en: 'Within the `audit.text` file, we see a list view of the items found by Foremost,
    along with their `Sizes` and `File Offset` location:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在`audit.text`文件中，我们看到了Foremost找到的项目的列表视图，以及它们的`大小`和`文件偏移`位置：
- en: '![](img/cf2fd23a-664f-4842-aa93-a4c6cff77a41.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf2fd23a-664f-4842-aa93-a4c6cff77a41.png)'
- en: 'When scrolling down on the `audit.txt` file, you should see a summary of the
    files found, which is particularly useful when carving larger images:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在`audit.txt`文件上滚动时，您应该看到找到的文件的摘要，这在切割较大的图像时特别有用：
- en: '![](img/bddcc7f0-9ced-492a-b455-90f4ee737bf4.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bddcc7f0-9ced-492a-b455-90f4ee737bf4.png)'
- en: 'The first three files listed in the `audit.txt` files are `.jpg` image files
    and we can see these files in the `jpg` sub-folder within the `Foremost_recovery`
    output folder:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在`audit.txt`文件中列出的前三个文件是`.jpg`图像文件，我们可以在`Foremost_recovery`输出文件夹的`jpg`子文件夹中看到这些文件：
- en: '![](img/e5cb82bd-d9ae-4bad-99d2-0c72948f26cc.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5cb82bd-d9ae-4bad-99d2-0c72948f26cc.png)'
- en: As we can see, Foremost is quite the powerful data recovery and file carving
    tool. File carving can take a very long time depending on the size of the drive
    or image used. If the type of file that needs to be recovered is already known,
    it may be wise to specify this type of file using the `-t` option, to reduce the
    amount of time taken when compared with searching the entire image.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，Foremost是一个非常强大的数据恢复和文件切割工具。文件切割可能需要很长时间，具体取决于驱动器或图像的大小。如果需要恢复的文件类型已知，可以使用`-t`选项指定该文件类型，以减少与搜索整个图像相比所需的时间。
- en: Before running Foremost again, remember to choose a new or empty output folder.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在再次运行Foremost之前，请记住选择一个新的或空的输出文件夹。
- en: Using Scalpel for data carving
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Scalpel进行数据切割
- en: Scalpel was created as an improvement of a much earlier version of Foremost.
    Scalpel aims to address the high CPU and RAM usage issues of Foremost when carving
    data.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Scalpel是作为Foremost的一个较早版本的改进而创建的。Scalpel旨在解决Foremost在切割数据时的高CPU和RAM使用问题。
- en: Specifying file types in Scalpel
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Scalpel中指定文件类型
- en: 'Unlike Foremost, file types of interest must be specified by the investigator
    in the Scalpel configuration file. This file is called `scalpel.conf` and is located
    at `etc/scapel/`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 与Foremost不同，调查人员必须在Scalpel配置文件中指定感兴趣的文件类型。该文件称为`scalpel.conf`，位于`etc/scapel/`：
- en: '![](img/d0eefa08-2fbe-411e-b161-1d188a6106a6.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d0eefa08-2fbe-411e-b161-1d188a6106a6.png)'
- en: 'To specify the file types, the investigator must remove the comments at the
    start of the line containing the file type as all supported file types are commented
    out with a hashtag at the beginning of the file type. The following screenshot
    shows the default Scalpel configuration file (`scalpel.conf`) with all file types
    commented out. Notice that each line begins with a hashtag:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要指定文件类型，调查人员必须删除包含文件类型的行开头的注释，因为所有支持的文件类型都以文件类型开头的哈希标签进行注释。以下屏幕截图显示了默认的Scalpel配置文件（`scalpel.conf`），其中所有文件类型都被注释掉。请注意，每行都以井号开头：
- en: '![](img/e8fddfa4-2092-4c05-994d-a1e8fca13ff6.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e8fddfa4-2092-4c05-994d-a1e8fca13ff6.png)'
- en: 'We''ve removed the hash tags at the beginning of some of the lines to let Scalpel
    know to search for these specific file types, this also reduces the time taken
    to otherwise search for all supported file types. The following screenshot shows
    that Scalpel will be searching for GIF and JPG files as the comments have been
    removed:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经删除了一些行开头的哈希标签，以便让Scalpel知道搜索这些特定的文件类型，这也减少了搜索所有支持的文件类型所需的时间。以下屏幕截图显示了Scalpel将搜索GIF和JPG文件，因为注释已被删除：
- en: '![](img/482395f9-c697-4bb3-b9ff-61b89b8fafa5.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/482395f9-c697-4bb3-b9ff-61b89b8fafa5.png)'
- en: Be sure to perform this step before specifying the image to be carved. Failure
    to do so presents the investigator with a helpful error message reminding them
    to do so.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定要切割的图像之前，请务必执行此步骤。未能这样做将向调查人员显示一个有用的错误消息，提醒他们这样做。
- en: '![](img/bf26887e-cf53-4e2e-b891-2a32f7c2a326.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf26887e-cf53-4e2e-b891-2a32f7c2a326.png)'
- en: Using Scalpel for file carving
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Scalpel进行文件切割
- en: 'Once we have made our changes to include file types and saved the `scalpel.conf`
    file, we can then start Scalpel by clicking on the Show Applications button on
    the sidebar and enter `scalpel` into the search box which then appears at the
    top of the screen, as seen here. Click on the `scalpel` box to begin:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对包括文件类型在内的更改并保存了`scalpel.conf`文件，我们就可以通过单击侧边栏上的“显示应用程序”按钮并在顶部出现的搜索框中输入`scalpel`来启动Scalpel，如图所示。单击`scalpel`框开始：
- en: '![](img/bf959d79-d831-48ed-9d42-728a4f3c35a5.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf959d79-d831-48ed-9d42-728a4f3c35a5.png)'
- en: 'Once started, a Terminal opens showing the version number (1.60), the author
    (Golden G. Richard III), and as mentioned, states that it is based on Foremost
    0.69\. As seen with Foremost, Scalpel-usage syntax and additional options are
    also displayed:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启动，终端会显示版本号（1.60）、作者（Golden G. Richard III），并且如前所述，它是基于Foremost 0.69。与Foremost一样，Scalpel的用法语法和其他选项也会显示出来：
- en: '![](img/0b873456-62ca-46c1-976b-95525e337716.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b873456-62ca-46c1-976b-95525e337716.png)'
- en: For this example, the same image used for carving with Foremost (`11-carve-fat.dd`)
    was used. As with Foremost also, the input file and output folder must be specified.
    To list the available options and switches in Scalpel, use `scalpel -h`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，使用了与Foremost相同的图像进行雕刻（`11-carve-fat.dd`）。与Foremost一样，必须指定输入文件和输出文件夹。要列出Scalpel中可用的选项和开关，请使用`scalpel
    -h`。
- en: 'The following syntax was used in Scalpel:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Scalpel使用了以下语法：
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](img/3fcc076f-00b8-456f-ac3d-4619a7e76b9b.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3fcc076f-00b8-456f-ac3d-4619a7e76b9b.png)'
- en: In the previous screenshot, we can see that Scalpel builds a carve-list showing
    the file type with header and footer information as well as the number of files
    carved.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到Scalpel构建了一个雕刻列表，显示了带有页眉和页脚信息的文件类型，以及雕刻出的文件数量。
- en: 'Taking a closer look at the last few lines produced by the Scalpel output,
    we can see that the carving process was `100%` complete with `18` files being
    carved:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细查看Scalpel输出产生的最后几行，我们可以看到雕刻过程完成了`100%`，共雕刻出了`18`个文件：
- en: '![](img/3ab4830e-a7a3-4688-9347-9a721ddcec93.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ab4830e-a7a3-4688-9347-9a721ddcec93.png)'
- en: Viewing results of Scalpel
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看Scalpel的结果
- en: 'Now we can head over to the output folder named `ScalpelOutput` to have a look
    at the carved files:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以转到名为`ScalpelOutput`的输出文件夹，查看雕刻出的文件：
- en: '![](img/4e4424e7-fc6a-4870-9296-ace81f661146.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e4424e7-fc6a-4870-9296-ace81f661146.png)'
- en: 'The results of the Scalpel output are similar to that of Foremost, with both
    output folders containing various subfolders with carved files along with an `audit.txt`
    file with details of the findings:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Scalpel输出的结果与Foremost类似，两个输出文件夹都包含各种子文件夹，其中包括雕刻文件以及一个包含发现细节的`audit.txt`文件：
- en: '![](img/34039eef-f724-492b-a347-2dcc3396fcdb.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34039eef-f724-492b-a347-2dcc3396fcdb.png)'
- en: 'Within the `jpg-1-o` folder, we can see five `.jpg` files, three with actual
    images:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在`jpg-1-o`文件夹中，我们可以看到五个`.jpg`文件，其中三个是实际图像：
- en: '![](img/cd898e16-6c23-46d1-a351-7952d152e56f.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd898e16-6c23-46d1-a351-7952d152e56f.png)'
- en: 'Even though Scalpel''s results showed that five files with `.jpg` headers and
    footers were identified in the carve list when the tool was run, some of these
    may not open. These files are most likely false positives:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Scalpel的结果显示在运行工具时在雕刻列表中识别出了五个带有`.jpg`头和页脚的文件，但其中一些可能无法打开。这些文件很可能是误报：
- en: '![](img/3342e410-c602-40a1-a970-96433a177f61.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3342e410-c602-40a1-a970-96433a177f61.png)'
- en: 'The following screenshot shows a snippet of the `audit.txt` file, displaying
    information about the carved files:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了`audit.txt`文件的片段，显示了有关雕刻文件的信息：
- en: '![](img/6d3edb83-529e-4aa0-bc9f-5b5d28d58835.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d3edb83-529e-4aa0-bc9f-5b5d28d58835.png)'
- en: Comparing Foremost and Scalpel
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较Foremost和Scalpel
- en: Although Scalpel returned more files than Foremost, carry out your own exercise
    in comparing the carved files found by both Foremost and Scalpel. Unfortunately,
    the filenames returned by both tools are not the original filenames and in some
    instances, there may be duplicates of carved files as many files may be fragmented
    and appear to be separate files. Try manually going through the files found in
    the output folders of both Foremost and Scalpel and do your own comparative research
    to see which tool was more successful.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Scalpel返回的文件比Foremost多，但是请自行比较Foremost和Scalpel找到的雕刻文件。不幸的是，这两个工具返回的文件名不是原始文件名，在某些情况下，可能会有雕刻文件的重复，因为许多文件可能是碎片化的，看起来像是单独的文件。尝试手动查看Foremost和Scalpel输出文件夹中找到的文件，并进行自己的比较研究，看看哪个工具更成功。
- en: 'The test image file (`11-carve-fat.dd`) used in both Foremost and Scalpel contains
    15 files of various types, as listed on the download page ([http://dftt.sourceforge.net/test11/index.html](http://dftt.sourceforge.net/test11/index.html)).
    This should be useful when doing a comparison of the carved files:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在Foremost和Scalpel中使用的测试图像文件（`11-carve-fat.dd`）包含了各种类型的15个文件，如下载页面上所列出的那样（[http://dftt.sourceforge.net/test11/index.html](http://dftt.sourceforge.net/test11/index.html)）。这在比较雕刻文件时应该很有用：
- en: '![](img/65d187ef-7e75-479a-9b72-1478f3be3569.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65d187ef-7e75-479a-9b72-1478f3be3569.png)'
- en: Bulk_extractor
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bulk_extractor
- en: Bulk_extractor is the third and final tool that we'll cover in this chapter.
    Foremost and Scalpel, as we've seen so far, are quite impressive at file recovery
    and carving, but are limited to specific file types. For further extraction of
    data, we can use Bulk Extractor.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Bulk_extractor是本章中我们将介绍的第三个也是最后一个工具。正如我们迄今所见，Foremost和Scalpel在文件恢复和雕刻方面非常出色，但仅限于特定文件类型。为了进一步提取数据，我们可以使用Bulk
    Extractor。
- en: While Foremost and Scalpel can recover images, audio, video, and compressed
    files, Bulk Extractor extracts several additional types of information that can
    be very useful in investigations.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Foremost和Scalpel可以恢复图像、音频、视频和压缩文件，但Bulk Extractor可以提取几种额外类型的信息，这在调查中可能非常有用。
- en: 'Although Bulk Extractor is quite capable of recovering and carving image, video,
    and document type files, other data that can be carved and extracted by Bulk Extractor
    includes:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Bulk Extractor能够恢复和雕刻图像、视频和文档类型文件，但Bulk Extractor可以雕刻和提取的其他数据包括：
- en: Credit card numbers
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信用卡号码
- en: Email addresses
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件地址
- en: URLs
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网址
- en: Online searches
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线搜索
- en: Website information
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站信息
- en: Social media profiles and information
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社交媒体资料和信息
- en: Forensic test image for Bulk_extractor
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于Bulk_extractor的取证测试图像
- en: For this example, we will work with a freely-available evidence file named `terry-work-usb-2009-12-11.E01`*.*
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用一个名为`terry-work-usb-2009-12-11.E01`的免费可用证据文件。
- en: This file can be downloaded directly from the digital corpora website which
    allows the use of forensic evidence images for forensic research purposes. The
    file used in this exercise can be downloaded directly from [http://downloads.digitalcorpora.org/corpora/scenarios/2009-m57-patents/drives-redacted/](http://downloads.digitalcorpora.org/corpora/scenarios/2009-m57-patents/drives-redacted/).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件可以直接从数字语料库网站下载，该网站允许将法证图像用于法证研究。本练习中使用的文件可以直接从[http://downloads.digitalcorpora.org/corpora/scenarios/2009-m57-patents/drives-redacted/](http://downloads.digitalcorpora.org/corpora/scenarios/2009-m57-patents/drives-redacted/)下载。
- en: 'The required file is the last file on the download page and is only 32 MB in
    size:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的文件是下载页面上的最后一个文件，大小只有32MB：
- en: '![](img/20496426-2cf8-4668-9b00-95872bb229fd.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20496426-2cf8-4668-9b00-95872bb229fd.png)'
- en: Using Bulk_extractor
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Bulk_extractor
- en: 'Start Bulk Extractor by first typing `bulk_extractor -h` to display some commonly-used
    parameters and options:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 首先输入`bulk_extractor -h`来启动Bulk Extractor，显示一些常用的参数和选项：
- en: '![](img/44a57f8a-d554-48f1-8bec-d1260a93a4c1.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/44a57f8a-d554-48f1-8bec-d1260a93a4c1.png)'
- en: Like Foremost and Scalpel, the syntax for using `bulk_extractor` is quite simple
    and requires that an output folder (`-o`) and the forensic image be specified. 
    For this exercise, as previously mentioned, we will be extracting data from the
    `terry-work-usb-2009-12-11.E01` image and saving the output to a folder named
    `bulk-output`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 与Foremost和Scalpel一样，使用`bulk_extractor`的语法非常简单，只需要指定一个输出文件夹（`-o`）和法证图像。在本练习中，如前所述，我们将从`terry-work-usb-2009-12-11.E01`图像中提取数据，并将输出保存到名为`bulk-output`的文件夹中。
- en: 'The syntax used is as follows:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的语法如下：
- en: '[PRE4]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/4a98f349-aad3-4563-b9cb-0e669c88a58a.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4a98f349-aad3-4563-b9cb-0e669c88a58a.png)'
- en: 'Once completed, `bulk_extractor` indicates that all threads have finished and
    provides a summary of the process and even some findings. As seen in the following
    screen, `bulk_extractor` displays the MD5 hash, the total MB processed and even
    reports that three email features have been found:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，`bulk_extractor`指示所有线程已完成，并提供了过程的摘要，甚至还有一些发现。如下图所示，`bulk_extractor`显示了MD5哈希值，处理的总MB数，甚至报告找到了三个电子邮件特征：
- en: '![](img/62c2a63f-05bf-45ff-9161-73ceb3557044.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/62c2a63f-05bf-45ff-9161-73ceb3557044.png)'
- en: Viewing results of Bulk_extractor
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看Bulk_extractor的结果
- en: 'To view the output of and findings by `bulk_extractor`, we can also display
    a list of directories within the Terminal by typing `ls -l`. We can see that the
    `bulk_output` folder has been created by `bulk_extractor`:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看`bulk_extractor`的输出和发现，我们还可以在终端中显示目录列表，输入`ls -l`。我们可以看到`bulk_extractor`创建了`bulk_output`文件夹：
- en: '![](img/e01aab30-f523-4c5d-8445-42bff1b3f6de.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e01aab30-f523-4c5d-8445-42bff1b3f6de.png)'
- en: 'We can now list the contents of our output folder (`bulk_output`) by typing
    `ls -l bulk_output`:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以输入`ls -l bulk_output`来列出我们的输出文件夹（`bulk_output`）的内容：
- en: '![](img/299af976-74aa-41b0-8d9f-9848bfaa95b6.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/299af976-74aa-41b0-8d9f-9848bfaa95b6.png)'
- en: 'The list has been split in two to show some of the artifacts found by `bulk_extractor`:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 列表已分成两部分，显示了`bulk_extractor`找到的一些工件：
- en: '![](img/bd8ec484-ab2b-4c1b-a84b-3da02bd7a84f.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bd8ec484-ab2b-4c1b-a84b-3da02bd7a84f.png)'
- en: It should be noted that not all listed text files will contain data. Only the
    ones with numbers larger than `0` to the left of the text filenames will actually
    contain data.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，并非所有列出的文本文件都包含数据。只有左侧数字大于`0`的文本文件名才会实际包含数据。
- en: The text file `ccn.txt` is an abbreviation for **credit card numbers** and will
    contain credit card information that may have been stolen, illegally used, or
    stored with possible intention to commit credit card fraud.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 文本文件`ccn.txt`是**信用卡号**的缩写，其中包含可能被盗用、非法使用或存储以可能用于信用卡欺诈的信用卡信息。
- en: 'If we browse to the output folder location, we can view all extracted data
    within the individual text files. Viewing the `telephone_histogram.txt` file reveals
    telephone numbers:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们浏览到输出文件夹位置，我们可以查看所有提取的数据，这些数据位于各个文本文件中。查看`telephone_histogram.txt`文件会显示电话号码：
- en: '![](img/173b0289-1008-40e6-bda9-3bf10d6a8439.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/173b0289-1008-40e6-bda9-3bf10d6a8439.png)'
- en: 'The `url.txt` file reveals many websites and links visited:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`url.txt`文件显示了访问的许多网站和链接：'
- en: '![](img/3675fd3b-5af2-489c-b3c7-8c0824b9d392.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3675fd3b-5af2-489c-b3c7-8c0824b9d392.png)'
- en: While this was a simple exercise done with a small evidence file, be sure to
    have a look at the many others available at [http://digitalcorpora.org/](http://digitalcorpora.org/)
    and see what `bulk_extractor` reveals. Try downloading as many of the images as
    possible if your bandwidth and storage permit, and also use the other tools we'll
    use in other chapters.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的练习，使用了一个小的证据文件，请务必查看[http://digitalcorpora.org/](http://digitalcorpora.org/)上提供的许多其他文件，并查看`bulk_extractor`揭示了什么。如果您的带宽和存储允许，尽可能下载更多的图像，并使用其他章节中将使用的其他工具。
- en: Summary
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about file recovery and data extraction using three
    readily-available tools within Kali Linux. We first performed file carving using
    the very impressive Foremost, which searched the entire image for supported file
    types within the file header and footers. We then did the same using the newer
    Scalpel, but had to make a slight modification by selecting the file types we
    wished to carve. Both Foremost and Scalpel presented us with an `audit.txt` file
    summarizing the carve list and its details along with subfolders containing the
    actual evidence.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了使用Kali Linux中的三个现成可用的工具进行文件恢复和数据提取。我们首先使用了非常出色的Foremost进行文件刻录，它在文件头和尾部搜索支持的文件类型。然后我们使用了更新的Scalpel进行相同的操作，但需要稍作修改，选择我们希望刻录的文件类型。Foremost和Scalpel都向我们呈现了一个`audit.txt`文件，总结了刻录列表及其详细信息，以及包含实际证据的子文件夹。
- en: Bulk_extractor is a wonderful tool that carves data and also finds useful information
    such as email addresses, visited URLs, Facebook URLs, credit card numbers, and
    a variety of other information. Bulk_extractor is great for investigations requiring
    file recovery and carving, together with either Foremost or Scalpel, or even both.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Bulk_extractor是一个很棒的工具，它可以刻录数据，还可以找到诸如电子邮件地址、访问的URL、Facebook的URL、信用卡号码以及各种其他信息。Bulk_extractor非常适合需要文件恢复和刻录的调查，可以与Foremost或Scalpel一起使用，甚至两者都可以。
- en: Now that we've covered file carving and recovery, let's move on to something
    more analytical. In the next chapter, we'll take a look at exploring RAM and the
    paging file as part of memory forensics, using the very powerful volatility. See
    you there!
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了文件刻录和恢复，让我们转向更加分析性的内容。在下一章中，我们将探讨探索RAM和分页文件作为内存取证的一部分，使用非常强大的volatility。到时见！
