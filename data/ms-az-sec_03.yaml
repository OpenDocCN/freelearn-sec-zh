- en: '*Chapter 2*: Governance and Security'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 2 章*: 治理与安全'
- en: Before digging deep into technical features that help to secure and protect
    your cloud environments on Azure, we first need to stop, reflect, plan, and act
    accordingly. Governance is essential and you need guardrails in the cloud. When
    talking about cloud computing, customers often exhibit a kind of *let's get started*
    mentality. That's great, but in the cloud, there also need to be rules. In addition
    to that, you surely don't want to end up with a cloud construct that does not
    entirely fit your company's needs, do you?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入研究帮助保护和保障 Azure 云环境的技术特性之前，我们首先需要停下来，反思、规划并据此行动。治理至关重要，云中需要有护栏。谈到云计算时，客户往往会表现出一种
    *开始行动* 的心态。这很好，但在云中，也需要有规则。除此之外，你当然不希望最后得到一个完全不适合你公司需求的云构架，对吧？
- en: 'With this chapter, we want to help you design the foundation for a secure cloud
    strategy and act according to your plan by leading you through the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章旨在帮助你设计一个安全的云战略基础，并根据你的计划采取行动，我们将引导你通过以下主题：
- en: Understanding governance in Azure
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Azure 中的治理
- en: Using common sense to avoid mistakes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运用常识避免错误
- en: Using management locks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用管理锁
- en: Using management groups for governance
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用管理组进行治理
- en: Understanding Azure Policy
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Azure 策略
- en: Defining Azure blueprints
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义 Azure 蓝图
- en: Azure Resource Graph
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 资源图
- en: Understanding governance in Azure
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Azure 中的治理
- en: 'If we take a deeper look at what governance actually means, we find a good
    definition in the online business dictionary. The first part of this definition
    is as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们深入研究治理的实际含义，我们可以在在线商业词典中找到一个很好的定义。这个定义的第一部分如下：
- en: '**Establishment of policies, and continuous monitoring of their proper implementation,
    by the members of the governing body of an organization.**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**由组织治理机构成员制定政策，并持续监控其正确实施。**'
- en: 'To read the entire definition, go to the following link: [http://www.businessdictionary.com/definition/governance.html](http://www.businessdictionary.com/definition/governance.html)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要阅读完整定义，请访问以下链接：[http://www.businessdictionary.com/definition/governance.html](http://www.businessdictionary.com/definition/governance.html)
- en: The most important words in this definition are *policies*, *monitoring*, and
    *implementation*. If you switch *implementation* for *deployment*, you get three
    aspects that are essential for security. So, you could say that governance is
    essential for security!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个定义中最重要的词是 *政策*、*监控* 和 *实施*。如果你将 *实施* 换成 *部署*，你会得到三个对安全至关重要的方面。所以，你可以说治理对安全至关重要！
- en: What's true in real life is true within the context of IT, too. I'm talking
    about rules. Rules only really work if they are enforced by *policies*. You can
    tell your administrators what they are not allowed to do. But if they can do what
    they are not allowed to, they are still able to accidentally break your rules.
    So, you need to define policies that help you to enforce or to monitor your corporate
    rules.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现实生活中适用的规则，在 IT 领域也是适用的。我说的是规则。规则只有在通过 *政策* 强制执行时才会真正有效。你可以告诉管理员他们不能做什么。但如果他们能够做不该做的事，依然有可能不小心违反你的规则。所以，你需要定义一些政策，帮助你执行或监控公司规则。
- en: '*Monitoring* is the second important part in terms of security. If you don''t
    see what happens, you have no chance to react or make the right decisions. This
    is why monitoring is so important and there is no way around it. In later chapters,
    we will cover some monitoring best practices for Azure that will help you to get
    the right amount of information for your environments.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*监控* 是安全中第二个重要的部分。如果你看不到发生了什么，就没有机会做出反应或做出正确的决策。这就是为什么监控如此重要且不可避免的原因。在后续章节中，我们将介绍一些适用于
    Azure 的监控最佳实践，帮助你获取适量的信息以应对环境的需求。'
- en: Finally, there is *implementation*. You can use the Azure portal to manually
    deploy Azure resources. However, with that approach, you will definitely need
    a tight set of policies that enforce your rules so that manual deployments will
    not break them. If you want to make sure that all environments will strictly adhere
    to your rules, automatic deployments are your way to go. With a robust governance
    plan with policies and **role-based access controls** (**RBAC**), and by using
    deployments from a DevOps pipeline, such as Azure DevOps, you can make sure that
    your deployments and the target environment will be consistent. If you then make
    sure that changes to your environment can only be done from your DevOps pipeline
    tool, but never manually from the Azure portal, you are on your way to protecting
    your environments from inadvertent changes. You can use PowerShell for *imperative*
    deployments or **Azure Resource Manager** (**ARM**) templates, and Terraform for
    *declarative* deployments. Whatever best fits your needs, use it!
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最后是*实施*。你可以使用 Azure 门户手动部署 Azure 资源。然而，采用这种方法时，你肯定需要一套严格的策略来执行你的规则，确保手动部署不会破坏这些规则。如果你希望确保所有环境都严格遵守你的规则，自动化部署是你应该采用的方式。通过制定强有力的治理计划、实施策略和**基于角色的访问控制**（**RBAC**），并通过像
    Azure DevOps 这样的 DevOps 管道进行部署，你可以确保你的部署和目标环境的一致性。然后，如果你确保环境中的所有更改只能通过你的 DevOps
    管道工具进行，而不能通过 Azure 门户手动进行，你就能保护你的环境免受意外更改的影响。你可以使用 PowerShell 进行*命令式*部署，使用 **Azure
    资源管理器**（**ARM**）模板和 Terraform 进行*声明式*部署。无论哪个最适合你的需求，使用它！
- en: 'Important Note: Different deployment models'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明：不同的部署模型
- en: If you're using imperative scripting languages such as PowerShell to deploy
    resources, you need to explicitly describe what should be done in order to get
    the infrastructure you want. You need to define the steps in the correct order.
    With declarative languages such as ARM templates or Terraform, you only describe
    what resources have to be deployed to your target environment, so it's not about
    the *how* but about the *what*. We will cover examples for all of these languages
    later in this book.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用像 PowerShell 这样的命令式脚本语言来部署资源，你需要明确描述为了获取所需的基础设施，应该做哪些事情。你需要按正确的顺序定义步骤。而对于像
    ARM 模板或 Terraform 这样的声明式语言，你只需描述需要部署到目标环境的资源，因此这里关注的不是*如何*做，而是*做什么*。本书稍后会提供这些语言的示例。
- en: With Azure, and with cloud computing in general, we need new approaches for
    security and management on the one hand, but, on the other hand, there are traditional,
    decades-old industry principles that still are valid. There is the principle of
    least privilege, or POLP. This principle states that programs or users should
    have the least number of privileges necessary to complete their tasks.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Azure 和云计算时，我们需要在安全性和管理方面采用新的方法，一方面，另一方面，仍然有一些传统的、已有数十年历史的行业原则是有效的。其中就有最小权限原则（POLP）。该原则规定程序或用户应只拥有完成任务所必需的最少权限。
- en: 'Segregation of duties, or SoD, is another principle that is still valid even
    in the cloud era. SoD is the concept of having more than one person required to
    complete a task. For example, you might have a team that is responsible for creating
    and managing accounts in Azure Active Directory, but another team that is responsible
    for Office 365 Management, and thus for creating user mailboxes. A third team
    might take care of Azure resources. In this resource team, there are administrators
    who manage databases, other people that take care of networks, and then there
    are your VM specialists managing only compute resources. SoD is also part of multi-step
    approvals. For example, when one of your administrators requests a role they are
    eligible for, someone else has to approve that request:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 职责分离（SoD）是一个即使在云时代依然有效的原则。SoD 是指完成某项任务需要不止一个人的概念。例如，你可能有一个团队负责在 Azure Active
    Directory 中创建和管理帐户，但另一个团队负责 Office 365 管理，因此也负责创建用户邮箱。第三个团队可能负责管理 Azure 资源。在这个资源团队中，有管理员负责管理数据库，其他人负责管理网络，还有一些虚拟机专家专注于计算资源的管理。SoD
    也是多步审批的一部分。例如，当你的管理员申请他们有资格获得的角色时，必须由其他人批准该请求：
- en: '![Figure. 2.1 –  Plan first, act second – defining a possible Azure hierarchy'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.1 – 先规划，后执行 – 定义可能的 Azure 层级结构'
- en: '](img/Fig._2.1.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.1.jpg)'
- en: Figure. 2.1 – Plan first, act second – defining a possible Azure hierarchy
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 先规划，后执行 – 定义可能的 Azure 层级结构
- en: 'When starting your cloud journey with Microsoft Azure, the first thing to do
    is plan your Azure hierarchy, which describes how Azure subscriptions, tenants,
    and directories depend on each other in an enterprise environment. The idea is
    to have only one contract for one enterprise, but to have several Azure subscriptions.
    Every Azure subscription is tied to exactly one Azure Active Directory tenant
    (of which you ideally also only have one!). What you may want to do is divide
    your company into locations, such as Europe and North America. Alternatively,
    you may want to divide your company based on departments, such as IT and finance
    departments. You may want to do both – or you could even choose another hierarchy.
    Whatever fits your needs, go for it and do it before actually starting. There
    are three high-level hierarchy patterns: *functional*, in which subscriptions
    are created based on enterprise departments, such as IT and accounting; *business
    unit,* which can be used to differentiate between business units, such as aerospace
    and automotive; and *geographic,* in which subscriptions are created based on
    a company''s geolocations. The hierarchy you go for should match your enterprise''s
    management and geographics so that it supports you in granting access and billing
    according to your company''s needs.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用 Microsoft Azure 云服务时，首先要做的是规划你的 Azure 层次结构，这描述了 Azure 订阅、租户和目录在企业环境中是如何相互依赖的。目的是为一个企业拥有一个合同，但有多个
    Azure 订阅。每个 Azure 订阅都与一个 Azure Active Directory 租户绑定（理想情况下，你应该只有一个！）。你可能想按位置划分公司，例如欧洲和北美。或者，你可能希望按部门划分公司，例如
    IT 部门和财务部门。你也可以选择两者都做——甚至可以选择其他层次结构。无论什么最适合你的需求，都应该在实际开始之前完成。高层次的层次结构模式有三种：*职能型*，即基于企业部门（如
    IT 和会计）创建订阅；*业务单元型*，可以用来区分业务单元，如航空航天和汽车行业；以及*地理型*，即根据公司地理位置创建订阅。你选择的层次结构应该与你企业的管理需求和地理位置相匹配，以便在根据公司需求授予访问权限和计费时提供支持。
- en: Now that you know what governance is and why it is important, let's move on
    and see what tools we have to make our lives easier in terms of governance and
    security.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道了治理是什么以及它为何重要，让我们继续看看有哪些工具可以帮助我们简化治理和安全方面的工作。
- en: Using common sense to avoid mistakes
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运用常识避免错误
- en: I have often been asked how I make sure that an Azure administrator does not
    accidentally delete productive resources in the cloud. The answer, besides the
    use of technical features to be discussed in the next section, is that *common
    sense* helps a lot! You don't accidentally walk into your on-premises data center
    and pull one of your servers out of its rack and throw it out of a window, do
    you? You usually do not run a *nuke all* script against your Hyper-V farm just
    to wonder where all your VMs have gone later that day, do you? And you surely
    do not accidentally erase your productive SAN! On Azure, you cannot accidentally
    delete a resource group.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我常常被问到，如何确保 Azure 管理员不会不小心删除云中的生产资源。除了下一节将要讨论的技术功能之外，答案是*常识*非常有帮助！你不会不小心走进本地数据中心，把你的服务器从机架上拉出来并把它扔出窗外，对吧？你通常不会对
    Hyper-V 农场运行一个*一键清除*脚本，然后等到当天稍后才意识到所有虚拟机都不见了吧？而且你肯定不会不小心删除你的生产 SAN！在 Azure 中，你不可能不小心删除一个资源组。
- en: Well, you can, if you accidentally confirm the "Are you sure?" dialog and then
    accidentally enter the resource group's name into the prompt. Resources are even
    more easily removed – either by accident or by intention. So, we need something
    that helps us to reduce the risk of accidents. Common sense and a good sense of
    caution are the first steps toward a successful governance approach in the cloud.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，如果你不小心确认了“你确定吗？”对话框，然后不小心将资源组的名称输入到提示框中，那么是可以的。资源甚至更容易被删除——无论是偶然还是故意的。因此，我们需要一些方法来帮助我们减少事故的风险。常识和良好的谨慎态度是云治理成功的第一步。
- en: 'However, even when being careful, you can still accidentally delete stuff that
    you shouldn''t. For example, you could accidentally delete single resources, such
    as a storage account, a key vault, or whatever else. I remember one summer afternoon
    about 10 years ago when I was running a Linux firewall distribution on a small-sized
    hardware mainboard, comparable with today''s Raspberry Pi''s. I used this tiny
    piece of hardware as my home firewall solution and it was doing a great job. It
    had three local area network connections for three different networks, there was
    even a Wi-Fi-module onboard, and the OS was installed on a CF card. Only the RAM
    was limited and since the CF card was exclusively reserved for the OS installation,
    all logs were written on a RAM disk. This is why I had to regularly delete log
    files from the `/var/log/*` directories. I did not want to enable log rotation,
    but rather I wanted to export logs to another Linux server that was running in
    my environment. Well, long story short, what I can tell you is that running the
    following command while having elevated rights works pretty well – even if you
    have not changed your working directory to the intended one:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，即使小心谨慎，您仍然可能不小心删除不该删除的东西。例如，您可能会不小心删除单个资源，如存储账户、密钥保管库或其他任何资源。我记得大约 10 年前的一个夏日下午，我在一块小型硬件主板上运行
    Linux 防火墙发行版，它和今天的 Raspberry Pi 类似。我将这块小硬件作为我的家庭防火墙解决方案，它做得非常出色。它有三个局域网连接，连接到三个不同的网络，甚至还有一个
    Wi-Fi 模块，并且操作系统安装在 CF 卡上。只有 RAM 是有限的，由于 CF 卡专门用于操作系统安装，所有日志都写入了 RAM 磁盘。因此，我必须定期从
    `/var/log/*` 目录中删除日志文件。我不想启用日志轮转，而是希望将日志导出到我环境中的另一台 Linux 服务器。好吧，长话短说，我可以告诉你，运行以下命令时，拥有提升权限的情况下效果相当不错——即使你没有将工作目录切换到预期的目录：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: So, I had one more Saturday afternoon reinstalling and reconfiguring the firewall.
    Next time, think before you act! Lesson learned.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我又有一个星期六下午重新安装和重新配置防火墙。下次，行动之前要三思而后行！教训得到了。
- en: In the next section, we will explore a technical feature to prevent administrators
    from accidentally deleting Azure resources.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨一个技术功能，用于防止管理员不小心删除 Azure 资源。
- en: Using management locks
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用管理锁
- en: 'Of course, there is a technical feature that prevents you from accidentally
    deleting anything on Azure – a feature called *management locks*. There are two
    different types of lock in Azure:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，也有一个技术功能可以防止您不小心删除 Azure 上的任何内容——一个叫做 *管理锁* 的功能。Azure 中有两种不同类型的锁：
- en: '*Delete* locks ensure that no one can delete resources from your Azure subscription,
    by accident or on purpose. Authorized users can still read and modify a resource,
    but they can no longer delete it.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*删除*锁确保没有人能够不小心或故意删除您 Azure 订阅中的资源。授权用户仍然可以读取和修改资源，但他们不再能够删除它。'
- en: '*ReadOnly* locks make sure that only authorized users are able to read a resource,
    but also that they cannot modify it nor delete it.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*只读*锁确保只有授权用户能够读取资源，同时确保他们无法修改或删除资源。'
- en: In every subscription I create, I usually use a **core resource group** to which
    I deploy resources that are used across several other resource groups. For example,
    if I have a virtual network that is used by several services across an entire
    subscription, or a key vault in which I store administrative credentials as secrets,
    then these types of resources are created in one of my core resource groups. As
    you can imagine, the resources there are very important, and so I always use a
    Delete lock on the scope of this core resource group.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在我创建的每个订阅中，我通常使用一个**核心资源组**，将跨多个资源组使用的资源部署到该资源组中。例如，如果我有一个虚拟网络，它被整个订阅中的多个服务使用，或者我有一个密钥保管库，用于存储作为机密的管理员凭证，那么这些资源就会被创建在我的核心资源组之一中。正如您所想象的那样，那里的资源非常重要，因此我总是在这个核心资源组的范围内使用删除锁。
- en: 'When talking about scopes in this chapter, we are talking about management
    hierarchies. Locks, policies, and access rights always apply to a particular scope
    and they are always applied from the top down:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章讨论范围时，我们讨论的是管理层次结构。锁、策略和访问权限始终应用于特定的范围，并且它们始终是从上到下应用的：
- en: '![Figure. 2.2 – Azure scope from the top down: management group, subscription,'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.2 – 从上到下的 Azure 范围：管理组、订阅，'
- en: resource group, and single resource
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 资源组和单个资源
- en: '](img/Fig._2.2.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.2.jpg)'
- en: 'Figure. 2.2 – Azure scope from the top down: management group, subscription,'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 从上到下的 Azure 范围：管理组、订阅，
- en: resource group, and single resource
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 资源组和单个资源
- en: 'If you create a lock at the subscription level, it will apply to all resource
    groups and to all resources within that particular subscription. If you create
    it at the resource group level, it will only apply to resources within that particular
    resource group:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在订阅级别创建锁定，它将适用于该订阅下的所有资源组以及所有资源。如果在资源组级别创建锁定，它只会应用于该资源组内的资源：
- en: '![Figure. 2.3 – Azure management locks on a resource group'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.3 – Azure 资源组的管理锁定'
- en: '](img/Fig._2.3.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.3.jpg)'
- en: Figure. 2.3 – Azure management locks on a resource group
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – Azure 资源组的管理锁定
- en: 'To demonstrate, I have created a storage account, **masteringazuresecurity**,
    in one of my core resources groups. If you selected **Locks** in the left management
    pane, you would see that someone has created a **Delete** lock with the name **MasteringAzSecDemo**
    at the resource group level. When you now try to delete the storage account, the
    following message will appear:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示，我在我的核心资源组之一中创建了一个存储账户 **masteringazuresecurity**。如果你在左侧管理窗格中选择了 **锁定**，你会看到有人在资源组级别创建了一个名为
    **MasteringAzSecDemo** 的 **删除** 锁定。当你尝试删除该存储账户时，以下消息将会显示：
- en: '![Figure. 2.4 – Warning message when trying to delete a locked resource'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.4 – 尝试删除被锁定资源时的警告消息'
- en: '](img/Fig._2.4.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.4.jpg)'
- en: Figure. 2.4 – Warning message when trying to delete a locked resource
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 尝试删除被锁定资源时的警告消息
- en: 'Important Note:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: You can only create or delete management locks when you have access to the `Microsoft.Authorization/*`
    or `Microsoft.Authorization/locks/*` management actions. There are several built-in
    roles in Azure, of which only *Owner* and *User Access Administrator* are granted
    those particular management actions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在你具有 `Microsoft.Authorization/*` 或 `Microsoft.Authorization/locks/*` 管理操作的访问权限时，才能创建或删除管理锁。在
    Azure 中有几个内置角色，其中只有 *所有者* 和 *用户访问管理员* 才被授予这些特定的管理操作权限。
- en: Now you know how management locks are used in Azure and about the scopes that
    can be used to create them. In the next section, we will explore using management
    groups, one of the most important levels of scope, and how you can leverage them
    to define your cloud governance.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了如何在 Azure 中使用管理锁定以及可以用来创建它们的范围。在下一节中，我们将探讨如何使用管理组，这是最重要的范围层次之一，以及如何利用它们来定义你的云治理。
- en: Using management groups for governance
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用管理组进行治理
- en: 'As mentioned previously, it is essential to have a plan and stick to it in
    terms of governance, guardrails, rules, and policies. Organizations that use many
    subscriptions need an efficient way to manage access, policies, and compliance
    rules for all their subscriptions. With Azure management groups, we are given
    a level of scope above the subscription level:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，在治理、护栏、规则和政策方面，制定计划并遵守计划是至关重要的。使用多个订阅的组织需要一种高效的方式来管理所有订阅的访问、策略和合规规则。通过
    Azure 管理组，我们可以在订阅级别之上提供一个范围层次：
- en: '![Figure. 2.5 – Example of a management group hierarchy'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.5 – 管理组层级结构示例'
- en: '](img/Fig._2.5.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.5.jpg)'
- en: Figure. 2.5 – Example of a management group hierarchy
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – 管理组层级结构示例
- en: With management groups, we can configure different management scopes that allow
    us to granularly manage all governance settings with little effort. The preceding
    diagram shows a possible management group hierarchy. As you can see, a management
    group can contain both subscriptions and other management groups. The example
    shows a hierarchy in which several types of subscriptions have been created and
    attached to different management groups. You can have **pay-as-you-go** (**PAYG**)
    subscriptions, **enterprise agreement** (**EA**) subscriptions, and **dev/test**
    subscriptions in a single tenant and attach them to any of your management groups.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通过管理组，我们可以配置不同的管理范围，使我们能够轻松地管理所有治理设置，且无需太多精力。前面的图示展示了一个可能的管理组层级结构。如图所示，一个管理组可以包含多个订阅和其他管理组。该示例显示了一个层级结构，其中已创建并附加到不同管理组的几种类型的订阅。你可以在同一租户中拥有
    **按需付费**（**PAYG**）订阅、**企业协议**（**EA**）订阅和**开发/测试**订阅，并将它们附加到任何管理组。
- en: Maybe you want to make sure that all the resources you create in Azure for production
    are only stored in both of the European Azure regions, West Europe and North Europe.
    In this scenario, you can create a management group that contains all your production
    subscriptions and then apply a policy to the management group that limits resource
    creation to only those regions. Another scenario for management groups might be
    to provide user access to several Azure subscriptions at once instead of managing
    access for every single subscription individually.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 也许您希望确保在 Azure 中为生产环境创建的所有资源仅存储在欧洲的两个 Azure 区域，West Europe 和 North Europe。在这种情况下，您可以创建一个包含所有生产订阅的管理组，然后将策略应用于该管理组，以限制资源仅能在这些区域创建。管理组的另一个使用场景可能是为多个
    Azure 订阅一次性提供用户访问权限，而不是为每个订阅单独管理访问权限。
- en: Each Azure AD directory is given a top-level management group called a root
    management group. All subscriptions and management groups that are created for
    this Azure tenant belong to this root group. The root management group enables
    customers to create global policies and role assignments that are valid for all
    Azure subscriptions within an Azure tenant's scope.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Azure AD 目录都有一个顶级管理组，称为根管理组。为该 Azure 租户创建的所有订阅和管理组都属于此根组。根管理组使客户能够创建适用于 Azure
    租户范围内所有 Azure 订阅的全局策略和角色分配。
- en: 'The root group''s default display name is **Tenant Root Group**. Here are some
    important facts that you should know regarding a tenant root group:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 根组的默认显示名称是**租户根组**。以下是关于租户根组的一些重要信息，您应该了解：
- en: Only user accounts that have been assigned *Owner* or *Contributor* roles on
    the tenant root group are able to change their display name.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有在租户根组上被分配了*所有者*或*贡献者*角色的用户账户才能更改其显示名称。
- en: The root group cannot be deleted or moved to another management group.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根组不能被删除或移动到其他管理组。
- en: In an Azure hierarchy, all subscriptions and management groups fold up to the
    one tenant root group in the respective directory. There is only one tenant root
    group, and all other management groups, subscriptions, and resources are child
    objects within this tenant root group. That said, all resources within all subscriptions
    fold up to the tenant root group for global management. New subscriptions are
    automatically attached to the tenant root group when created.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Azure 层次结构中，所有订阅和管理组都归属于各自目录中的一个租户根组。每个目录只有一个租户根组，而所有其他管理组、订阅和资源都是此租户根组的子对象。换句话说，所有订阅中的所有资源都归属于租户根组以进行全局管理。新订阅在创建时会自动附加到租户根组。
- en: No one is given default access to the tenant root group. Only Azure AD global
    administrators have the right to elevate themselves to gain access and to make
    changes if necessary.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有任何人被默认赋予租户根组的访问权限。只有 Azure AD 全局管理员有权提升自己的权限以获取访问权限并在必要时进行更改。
- en: You might want to give your security administrators read access to all resources
    that are created within the scope of your Azure AD tenant as they need to see
    all your subscriptions and management groups. Alternatively, you want to give
    application access to all your Azure subscriptions; for example, the ability to
    automatically deploy resources or to gather information about billing. Therefore,
    you might want to change some settings on your tenant root group so that you only
    have to manage access rights once. As no one is able to access a tenant root group
    by default, you first need to elevate access for an Azure AD Global administrator.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能希望将安全管理员赋予对在 Azure AD 租户范围内创建的所有资源的只读访问权限，因为他们需要查看所有订阅和管理组。或者，您可能希望为所有 Azure
    订阅提供应用程序访问权限；例如，自动部署资源或收集计费信息的能力。因此，您可能希望更改租户根组的某些设置，以便您只需管理一次访问权限。由于默认情况下没有人能够访问租户根组，您首先需要为
    Azure AD 全局管理员提升访问权限。
- en: When elevating access for an Azure AD Global administrator, the account is assigned
    the User Access Management role in Azure at the root scope (/). This role at the
    root scope allows the account to view all resources and assign access to any subscription
    or management group in the whole directory!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当为 Azure AD 全局管理员提升访问权限时，在 Azure 中根范围（/）下为该账户分配了用户访问管理角色。在根范围下，此角色允许账户查看所有资源，并分配访问权限到整个目录下的任何订阅或管理组！
- en: 'To elevate access, carry out the following steps:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要提升访问权限，请执行以下步骤：
- en: Sign in to the Azure portal or Azure Active Directory Admin Center as a Global
    administrator.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为全局管理员登录到 Azure 门户或 Azure Active Directory 管理中心。
- en: Click **Azure Active Directory** and then **Properties** in the navigation list:![Figure.
    2.6 – Azure Active Directory – Properties
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Azure Active Directory**，然后在导航列表中点击**属性**：![图 2.6 – Azure Active Directory
    – 属性
- en: '](img/Fig._2.6.jpg)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Fig._2.6.jpg)'
- en: Figure. 2.6 – Azure Active Directory – Properties
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.6 – Azure Active Directory – 属性
- en: 'Under **Access management for Azure resources**, set the toggle switch to **Yes**:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Azure 资源的访问管理**下，将切换按钮设置为**是**：
- en: '![Figure. 2.7 – Enable access management for all Azure resources'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.7 – 启用所有 Azure 资源的访问管理'
- en: '](img/Fig._2.7.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.7.jpg)'
- en: Figure. 2.7 – Enable access management for all Azure resources
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – 启用所有 Azure 资源的访问管理
- en: Tip
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Access rights should always be as restrictive as possible, and they should only
    be granted when needed. That said, be sure to remove elevated access once you
    have made your changes to the tenant root group.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 访问权限应始终尽可能严格，并且应仅在需要时授予。因此，在你对租户根组进行更改后，一定要移除提升的访问权限。
- en: 'To remove elevated access, either set the toggle switch back to `User Access
    Administrator` role assignment from the root scope:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要移除提升的访问权限，可以将切换按钮从根范围的 `用户访问管理员` 角色分配恢复：
- en: '[PRE1]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Important Note:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: In order to be able to execute this PowerShell command, you need to install
    the latest version of the Az PowerShell module. As you cannot have both the old
    AzureRM and new Az PowerShell modules installed in parallel, you first need to
    uninstall the AzureRM module. For more information, please refer to [https://docs.microsoft.com/en-us/powershell/azure](https://docs.microsoft.com/en-us/powershell/azure).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够执行此 PowerShell 命令，你需要安装最新版本的 Az PowerShell 模块。由于不能同时安装旧版的 AzureRM 和新版的 Az
    PowerShell 模块，你需要首先卸载 AzureRM 模块。有关更多信息，请参阅 [https://docs.microsoft.com/en-us/powershell/azure](https://docs.microsoft.com/en-us/powershell/azure)。
- en: You just learned how management groups are used for governance. In the next
    section, we will look at Azure Policy, the service that enforces your rules.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚学习了如何使用管理组进行治理。在接下来的章节中，我们将介绍 Azure Policy，它是一个强制执行规则的服务。
- en: Understanding Azure Policy
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Azure Policy
- en: Rules are important, but to be sure that they are not broken, you either need
    to monitor their application or you need to enforce them. With Azure Policy, you
    get a service that you can use to achieve both. Azure Policy allows you to create,
    assign, and manage policies. Policies that you define enforce different rules
    for resources that you create in a policy's scope.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 规则很重要，但为了确保它们不被违反，你需要监控它们的应用，或者强制执行它们。通过 Azure Policy，你可以使用一个服务来实现这两者。Azure
    Policy 允许你创建、分配和管理策略。你定义的策略强制执行在策略范围内创建的资源的不同规则。
- en: The Azure Policy service evaluates resources for non-compliance with assigned
    policies and then applies a defined action. For example, you may want to only
    allow your Azure administrators to create Azure resources in the North Europe
    and West Europe Azure regions, or you may only want to have a certain VM SKU size
    in one of your Azure subscriptions. In these cases, you can create a policy. Once
    this policy is created and activated, new and existing resources are evaluated
    for policy compliance. New resources are prevented from being created if they
    are non-compliant and existing resources can be brought into compliance if needed.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Policy 服务会评估资源是否违反已分配的策略，然后执行定义的操作。例如，你可能只希望允许 Azure 管理员在北欧和西欧的 Azure
    区域中创建 Azure 资源，或者你可能只希望在某个 Azure 订阅中使用某一特定的 VM SKU 尺寸。在这些情况下，你可以创建一个策略。一旦这个策略被创建并激活，新的和现有的资源将会被评估是否符合政策要求。如果不符合要求，新的资源将被禁止创建，现有资源也可以根据需要进行合规性调整。
- en: 'There are four different effect types that you can define for your policies:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为你的策略定义四种不同的效果类型：
- en: '**Disabled** is useful when testing the effect of a new policy definition or
    when you want to disable only one assignment instead of all assignments of a particular
    policy definition.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁用**在测试新的策略定义效果时非常有用，或者当你只想禁用特定策略定义的一个分配，而不是所有分配时。'
- en: '**Append** is used to add additional fields to a requested resource during
    resource creation or a resource update. With an append policy, you can, for example,
    add tags to a resource such as **resourceOwner** or **costCenter**.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附加**用于在资源创建或更新过程中向请求的资源添加额外字段。使用附加策略时，你可以例如为资源添加标签，如**resourceOwner**或**costCenter**。'
- en: '**Deny** is used to deny a resource request that does not match your compliance
    standard. The resource request will fail after evaluation. With a deny policy,
    you can, for example, prevent your administrators from creating resources in Azure
    regions that you do not allow, or prevent them from deploying VM SKU sizes you
    have not approved.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拒绝** 用于拒绝不符合你的合规标准的资源请求。评估后，资源请求将失败。使用拒绝策略，你可以例如防止管理员在不允许的 Azure 区域创建资源，或防止他们部署未经批准的虚拟机
    SKU 大小。'
- en: '**Audit** is used to create a warning event in the activity log when evaluating
    a non-compliant resource. The resource request will not be stopped, but you will
    be able to be informed about non-compliance.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审核** 用于在评估不合规资源时在活动日志中创建警告事件。资源请求不会被停止，但你会收到不合规的通知。'
- en: 'When using Azure Policy, you might need to create a custom policy definition
    or use one of the built-in policy definitions that already come with Azure, such
    as any of these:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Azure 策略时，你可能需要创建自定义策略定义或使用 Azure 自带的某些内置策略定义，例如以下几种：
- en: '**Allowed Locations:** This policy definition restricts the available locations
    for new resources. It is used to enforce your geo-compliance requirements.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**允许的位置：** 此策略定义限制了新资源可用的位置。它用于执行你的地理合规要求。'
- en: '**Audit VMs that do not use managed disks:** This policy audits VMs that do
    not use managed disks. A warning event for every VM will be generated in the activity
    log.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审核未使用托管磁盘的虚拟机：** 此策略审核未使用托管磁盘的虚拟机。每个虚拟机会在活动日志中生成一个警告事件。'
- en: '**Allowed Virtual Machine SKUs:** This definition specifies a set of VM SKUs
    that you can deploy.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**允许的虚拟机 SKU：** 此定义指定了可以部署的虚拟机 SKU 集。'
- en: Policy definitions describe resource compliance and what effect to use when
    a resource is, or becomes, non-compliant. The schema for policy definitions is
    documented at [https://schema.management.azure.com/schemas/2018-05-01/policyDefinition.json](https://schema.management.azure.com/schemas/2018-05-01/policyDefinition.json).
    Policy definitions are created in JSON.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 策略定义描述了资源合规性以及当资源不合规或变得不合规时应使用的效果。策略定义的架构文档请参见 [https://schema.management.azure.com/schemas/2018-05-01/policyDefinition.json](https://schema.management.azure.com/schemas/2018-05-01/policyDefinition.json)。策略定义是以
    JSON 格式创建的。
- en: 'A policy definition contains the following elements:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 策略定义包含以下元素：
- en: Mode
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模式
- en: Parameters
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数
- en: Display name (as it is found in the Azure portal or in the CLI)
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示名称（在 Azure 门户或 CLI 中的显示方式）
- en: Description (what this policy is actually doing, when to use it, and so on)
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述（此策略的实际作用，何时使用等）
- en: Policy rule (the rule definition)
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略规则（规则定义）
- en: 'Logical evaluation: What is the condition for resource compliance?'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑评估：资源合规性的条件是什么？
- en: 'Effect: What happens if a resource is non-compliant?'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 效果：如果资源不合规，会发生什么？
- en: Mode
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模式
- en: 'The policy mode determines which resource types are evaluated by the policy.
    There are two modes supported:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 策略模式决定了政策评估哪些资源类型。支持两种模式：
- en: '**all**: All resource groups and resource types are evaluated.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**all**：评估所有资源组和资源类型。'
- en: '**indexed**: Only resource types that support tags and locations are evaluated.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**indexed**：仅评估支持标签和位置的资源类型。'
- en: If you create a policy through the Azure portal, the mode is always set to Apply.
    If you use PowerShell or the Azure CLI, you can specify the mode parameter manually.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你通过 Azure 门户创建策略，则模式始终设置为 Apply。如果使用 PowerShell 或 Azure CLI，则可以手动指定模式参数。
- en: 'Important Note:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明：
- en: If your custom policy definition does not include a mode value, it defaults
    to *all* in PowerShell and to *null* in the Azure CLI. The *null* value is the
    same as using *indexed* for backward-compatibility reasons.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的自定义策略定义不包含模式值，则在 PowerShell 中默认设置为 *all*，在 Azure CLI 中默认设置为 *null*。*null*
    值等同于出于向后兼容的原因使用 *indexed*。
- en: Parameters
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参数
- en: Parameters in a policy definition help to reduce the number of policy definitions.
    You can think of them as fields in a form, such as name, surname, and street address.
    The parameters always stay the same; only their values change depending on who
    fills the form out. By including parameters in your policy definition, you can
    reuse the policy and just change the values accordingly.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 策略定义中的参数有助于减少策略定义的数量。你可以将它们视为表单中的字段，例如名字、姓氏和街道地址。参数始终保持不变；只有根据填写表单的人不同，其值才会变化。通过在策略定义中包含参数，你可以重复使用该策略，并相应地更改值。
- en: Parameter properties
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数属性
- en: 'A parameter has the following properties:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 参数具有以下属性：
- en: '`name`: The name of your parameter.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：你的参数的名称。'
- en: '`type`: The parameter type can be a `string`, `array`, `object`, `boolean`,
    `integer`, `float`, or `datetime`.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`：参数类型可以是`string`、`array`、`object`、`boolean`、`integer`、`float`或`datetime`。'
- en: '`metadata`: The parameter''s sub-properties used by the Azure portal to display
    user-friendly information about the parameter.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metadata`：Azure门户使用的参数子属性，用于显示参数的用户友好信息。'
- en: '`description`: An explanation of what the parameter is used for.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`：对参数用途的说明。'
- en: '`display name`: A friendly name for the parameter shown in the Azure portal.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`display name`：在Azure门户中显示的参数的友好名称。'
- en: '`strongType`: (Optional) This property is used when assigning the policy through
    the Azure portal. A current list of supported `strongType` options is published
    at [https://docs.microsoft.com/en-us/azure/governance/policy/concepts/definition-structure#strongtype](https://docs.microsoft.com/en-us/azure/governance/policy/concepts/definition-structure#strongtype).'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strongType`：（可选）此属性在通过Azure门户分配策略时使用。目前支持的`strongType`选项列表可以在[https://docs.microsoft.com/en-us/azure/governance/policy/concepts/definition-structure#strongtype](https://docs.microsoft.com/en-us/azure/governance/policy/concepts/definition-structure#strongtype)找到。'
- en: '`assignPermissions`: (Optional) If this value is set to `true`, the Azure portal
    will create role assignments during policy assignment. This option can be useful
    if you want to assign permissions outside the policy''s assignment scope.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assignPermissions`：（可选）如果此值设置为`true`，Azure门户将在策略分配过程中创建角色分配。如果你想在策略分配范围之外分配权限，此选项可能会很有用。'
- en: '`defaultValue`: (Optional) If no value is specified during policy assignment,
    this value is used. `defaultValue` is mandatory if you update an existing policy
    definition that is already assigned.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`defaultValue`：（可选）如果在策略分配时未指定值，则使用此值。如果你更新一个已分配的现有策略定义，则`defaultValue`是必需的。'
- en: '`allowedValues`: (Optional) This property provides an array of values that
    the parameter will accept during policy assignment.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`allowedValues`：（可选）此属性提供一个值的数组，参数在策略分配期间将接受这些值。'
- en: 'You may want to restrict Azure resource creation to only a few Azure regions.
    In a policy that is used to only allow resource creation in European Azure regions,
    you could define a parameter called `allowedLocations`. With each policy assignment,
    this parameter would be used and evaluated. With the `strongType` value defined,
    you would get an additional field in the Azure portal when assigning the policy:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能希望将Azure资源的创建限制在少数几个Azure区域。在一个仅允许在欧洲Azure区域创建资源的策略中，你可以定义一个名为`allowedLocations`的参数。在每次策略分配时，都会使用并评估此参数。定义了`strongType`值后，在Azure门户中分配策略时会出现一个额外字段：
- en: '[PRE2]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding code shows the parameter definition section in an Azure policy
    definition. The `allowedLocations` parameter, in this case, is an array that contains
    two allowed values, `northeurope` and `westeurope`. The default value is set to
    `westeurope`, which means that this is the location that is taken by default if
    you do not set the parameter to another value. Then, in the policy rule, the parameter
    is referenced as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码展示了Azure策略定义中的参数定义部分。在这种情况下，`allowedLocations`参数是一个数组，包含两个允许的值，`northeurope`和`westeurope`。默认值设置为`westeurope`，这意味着如果你未将参数设置为其他值，系统将默认选择此位置。然后，在策略规则中，参数的引用如下：
- en: '[PRE3]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The whole policy definition for this purpose might look like this:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 为此目的，整个策略定义可能如下所示：
- en: '[PRE4]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Policy assignments
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 策略分配
- en: When you create a policy definition, you need to assign it to a specific scope
    for the policy to take effect. This is what Microsoft calls a policy assignment.
    The scope for a policy assignment can be anything from a management group over
    a subscription down to a resource group. Policy assignments are passed on from
    parent to child resources. So, policies that are assigned to a management group
    or a subscription are also applied to all downstream resources within that scope.
    But you can also exclude a subscope from the policy assignment. For example, say
    you want to prevent your administrators from creating resources outside Europe.
    However, you have one resource group in which you need to create IoT resources
    outside Europe. In this case, you could create a policy definition that only allows
    resource creation in one of the European Azure regions. This policy is assigned
    to the management group so it will be applied to all subscriptions, resource groups,
    and resources within that scope. Then, you exclude the one resource group with
    the exception from the policy assignment so the policy will not be applied to
    that group.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建策略定义时，您需要将其分配到特定的作用域，以使策略生效。这就是微软所称的策略分配。策略分配的作用域可以是从管理组、订阅到资源组的任何内容。策略分配会从父资源传递到子资源。因此，分配给管理组或订阅的策略也会应用于该作用域内的所有下游资源。但您也可以将某个子作用域排除在策略分配之外。例如，假设您想防止管理员在欧洲以外的地方创建资源。然而，您有一个资源组需要在欧洲以外的地方创建物联网资源。在这种情况下，您可以创建一个策略定义，仅允许在某个欧洲
    Azure 区域内创建资源。此策略被分配到管理组，因此将应用于该作用域内的所有订阅、资源组和资源。然后，您将排除该资源组的策略分配，因此该策略不会应用于该组。
- en: Initiative definitions
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动定义
- en: Policies are used to enforce exactly one rule. Initiatives are collections of
    several rules that belong together. For example, there is a pre-configured initiative
    definition that comes with Azure Security Center. In this initiative definition,
    you will find all the audit policies that will reflect in the recommendations
    section of Azure Security Center, which is covered later in this book. Initiatives
    are used to simplify policy assignments. With initiatives, you do not need to
    assign several policies. You assign one initiative and add the corresponding policies
    to it.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 策略用于强制执行一条规则。启动是几个相关规则的集合。例如，Azure 安全中心自带的一个预配置启动定义。在这个启动定义中，您将找到所有的审计策略，这些策略将在
    Azure 安全中心的建议部分中显示，这部分内容将在本书后面介绍。启动用于简化策略分配。使用启动，您无需分配多个策略。只需分配一个启动并将相应的策略添加到其中。
- en: Initiative assignments
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动分配
- en: Just like with policies, initiatives need to be assigned to a specific scope
    in order to be applied. The scope for initiative assignments is identical to a
    policy assignment's scope.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 与策略一样，启动也需要分配到特定作用域才能生效。启动分配的作用域与策略分配的作用域相同。
- en: Policy best practices
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 策略最佳实践
- en: 'When it comes to policy, there are some best practices that you should keep
    in mind:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在策略方面，有一些最佳实践是您应该牢记的：
- en: Define policies and initiatives at the management group level. By doing so,
    you can assign them to all child subscriptions and resource groups without needing
    to redefine them. If you define policies and initiatives at the subscription level,
    you can only assign them to this single subscription. So, in short, definitions
    should be created at the management group level, while assignments can be at the
    management, subscription, or resource group level.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在管理组级别定义策略和启动。通过这样做，您可以将它们分配给所有子订阅和资源组，而无需重新定义它们。如果在订阅级别定义策略和启动，您只能将它们分配给该单个订阅。因此，简而言之，定义应在管理组级别创建，而分配可以在管理、订阅或资源组级别进行。
- en: As always, before blocking your users from working, you should first test your
    new policies. You can do so by defining audit policies instead of starting with
    a deny policy. With the audit effect, you can get a feeling for the impact your
    policy definition will make. A deny policy could break your DevOps deployment
    chain and, with an audit effect, you will get an idea of what your policy will
    do later.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像往常一样，在阻止用户工作之前，您应该首先测试您的新策略。您可以通过定义审计策略，而不是直接使用拒绝策略来做到这一点。通过审计效果，您可以感受您的策略定义会产生的影响。拒绝策略可能会破坏您的
    DevOps 部署链，而通过审计效果，您可以了解您的策略在以后会产生什么影响。
- en: It is a good idea to create initiative definitions, even if you only want to
    create a single policy definition. If you have an initiative, you can easily add
    further policies later if you need to do so.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使你只想创建一个单一的策略定义，创建计划定义也是一个好主意。如果你有了计划，你可以在以后轻松地添加更多策略，前提是你需要这么做。
- en: All policies within an initiative definition are evaluated when the initiative
    definition is evaluated. If you have a particular policy you do not want to be
    evaluated within that context, you should remove it from the definition and assign
    it individually.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在评估计划定义时，会评估该计划中的所有策略。如果你有某个特定的策略不希望在该上下文中进行评估，你应该将其从定义中移除，并单独进行分配。
- en: In the preceding sections, you have learned about governance in general, scopes,
    policies, and locks. In the next section, you will learn how to bring it all together
    by defining Azure blueprints.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分中，你已经了解了治理的基本概念、范围、策略和锁定。接下来的部分，你将学习如何通过定义Azure蓝图将这些内容整合起来。
- en: Defining Azure blueprints
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义Azure蓝图
- en: 'Now that you know how to define your Azure hierarchy and how to work with locks
    and policies, you might want to create a template that is valid for all your subscriptions
    and for those that are yet to be created as well. With the Azure blueprints service,
    you get exactly what you need for this purpose. A blueprint, in this case, is
    a repeatable template that you define once and then use during the creation of
    all your Azure subscriptions in the future. The good thing here is that you can
    define organizational sets of rules and automatically apply them to all your subscriptions
    while accelerating the deployment process at the same time. With Azure Blueprints,
    you can declaratively deploy Azure resources and artifacts to all your subscriptions,
    such as the following:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何定义Azure层次结构以及如何使用锁定和策略，你可能希望创建一个适用于所有订阅和未来创建的订阅的模板。使用Azure蓝图服务，你可以为此目的获得正是你需要的东西。在这种情况下，蓝图是一个可重复使用的模板，你只需定义一次，然后在未来所有Azure订阅的创建过程中使用它。这里的好处是，你可以定义组织规则集，并自动将它们应用到所有订阅，同时加速部署过程。借助Azure蓝图，你可以声明式地将Azure资源和工件部署到所有订阅中，例如以下内容：
- en: Role assignments
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色分配
- en: Policy assignments
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略分配
- en: ARM templates
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM模板
- en: Resource groups
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源组
- en: Locks
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锁定
- en: In the section about management locks in this chapter, I explained that I usually
    have a core resource group in all of my subscriptions and my customers' subscriptions.
    These resource groups are usually locked so they are protected from accidental
    deletion. In larger organizations, you might want to give your developers or specialty
    departments options for creating their own environments without breaking your
    rules. No matter what it is, as soon as you want to automate complex deployments
    of standardized Azure environments, Azure Blueprints is your service of choice!
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章关于管理锁定的部分中，我提到我通常在所有订阅和客户订阅中拥有一个核心资源组。这些资源组通常会被锁定，以防止意外删除。在较大的组织中，你可能希望为开发人员或专业部门提供创建自己环境的选项，而不破坏你的规则。无论是什么情况，只要你想要自动化复杂的标准化Azure环境部署，Azure蓝图就是你首选的服务！
- en: Blueprint definitions
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 蓝图定义
- en: 'Azure blueprints are defined by so-called artifacts. An artifact can currently
    be one of the following:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Azure蓝图是通过所谓的工件定义的。当前，工件可以是以下之一：
- en: '**Resource group**: A resource group that is created by a blueprint can be
    used by other artifacts within the scope of the blueprint. For example, you can
    create a resource group in a blueprint and then reference an ARM template to this
    new resource group.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源组**：由蓝图创建的资源组可以被蓝图范围内的其他工件使用。例如，你可以在蓝图中创建一个资源组，然后将一个ARM模板引用到这个新的资源组。'
- en: '**Policy assignment**: You can assign an existing policy to a subscription
    or resource group that a blueprint is assigned to. For example, you can assign
    the only-European-Azure-locations policy from one of the preceding chapters in
    this book.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**策略分配**：你可以将现有策略分配给一个已分配蓝图的订阅或资源组。例如，你可以将本书前几章中的“仅限欧洲Azure位置”策略分配给一个订阅。'
- en: '**Role assignment**: You can assign management access to a subscription that
    this blueprint is assigned to. For example, you can automatically assign contributor
    rights to new subscriptions for your infrastructure administrators.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**角色分配**：你可以为分配给此蓝图的订阅分配管理权限。例如，你可以为基础设施管理员的新订阅自动分配贡献者权限。'
- en: '**ARM template**: With an ARM template, you can declaratively deploy complex
    Azure environments. ARM templates can be used within the scope of Azure blueprints.
    For example, you can automatically create a new Log Analytics workspace in a core
    resource group that is created within the scope of a blueprint.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ARM 模板**：使用 ARM 模板，你可以声明式地部署复杂的 Azure 环境。ARM 模板可以在 Azure 蓝图的范围内使用。例如，你可以在蓝图范围内自动在核心资源组中创建一个新的
    Log Analytics 工作区。'
- en: 'Important Note:'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示：
- en: A blueprint definition can be saved either to a management group or a subscription.
    If you create a blueprint definition at the management group level, you can use
    the blueprint for assignment on all child subscriptions within the scope of this
    particular management group.
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 蓝图定义可以保存到管理组或订阅中。如果你在管理组级别创建蓝图定义，你可以在此特定管理组范围内对所有子订阅使用该蓝图进行分配。
- en: Blueprint publishing
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 蓝图发布
- en: Every new blueprint that is created will initially be in *draft* mode. After
    finishing all configurations, the blueprint needs to be *published*. When publishing
    a blueprint, you need to define a *version* string and optional change notes.
    When additional changes are made to this blueprint, the published version will
    still exist and changes are done in draft mode, again.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 每个新创建的蓝图最初都处于 *草稿* 模式。完成所有配置后，蓝图需要被 *发布*。发布蓝图时，你需要定义一个 *版本* 字符串，并可以选择性地添加更改说明。当对该蓝图进行额外更改时，已发布的版本仍然存在，而更改将在草稿模式下进行。
- en: When changing a blueprint (and saving the changes), several versions of the
    same blueprint will exist to make sure that you can still assign old versions
    and that published versions are not touched when applying changes to the blueprint.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当修改蓝图（并保存更改）时，同一个蓝图会存在多个版本，以确保你仍然可以分配旧版本，并且在应用更改时不会影响已发布的版本。
- en: 'You can start by creating a new blank blueprint or selecting one of the blueprint
    examples from the Azure portal. For example, there are blueprint definitions that
    assign policies that are necessary to address specific NIST SP 800-53 R4 or ISO
    27001 controls:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过创建一个新的空白蓝图或从 Azure 门户选择一个蓝图示例来开始。例如，有些蓝图定义会分配必要的策略，以满足特定的 NIST SP 800-53
    R4 或 ISO 27001 控制要求：
- en: '![Figure. 2.8 – When creating a blueprint definition, you can choose'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.8 – 创建蓝图定义时，你可以选择'
- en: one of the predefined sample blueprints
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 预定义的示例蓝图之一
- en: '](img/Fig._2.8.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.8.jpg)'
- en: Figure. 2.8 – When creating a blueprint definition, you can choose one of the
    predefined sample blueprints
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – 创建蓝图定义时，你可以选择一个预定义的示例蓝图
- en: 'To start creating a blueprint definition, do the following:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始创建蓝图定义，请执行以下操作：
- en: Navigate to **All Services** -> **Blueprints**.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **所有服务** -> **蓝图**。
- en: Select **Create**.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **创建**。
- en: When the wizard appears, you need to give your blueprint a name and then select
    the location to save your blueprint definition. In the following screenshot, I
    decided to save the blueprint in my `Tenant Root Group` to be able to use the
    blueprint in all subscriptions that are or may later be attached to my Azure AD
    tenant:![Figure. 2.9 – Creating a blueprint – basic information
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当向导出现时，你需要为你的蓝图命名，然后选择保存蓝图定义的位置。在下面的截图中，我决定将蓝图保存在我的 `Tenant Root Group` 中，以便在所有当前或将来可能附加到我的
    Azure AD 租户的订阅中使用该蓝图：![图 2.9 – 创建蓝图 – 基本信息
- en: '](img/Fig._2.9.jpg)'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Fig._2.9.jpg)'
- en: Figure. 2.9 – Creating a blueprint – basic information
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.9 – 创建蓝图 – 基本信息
- en: 'I decided to use the `ISO 27001` blueprint sample for this demonstration. On
    the second tab, the **Artifacts** tab, you can add, remove, or edit artifacts
    according to your needs. You can save your draft anytime and come back later if
    you want to change, add, or remove anything:'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我决定使用 `ISO 27001` 蓝图示例进行本演示。在第二个标签页 **工件** 标签页中，你可以根据需要添加、移除或编辑工件。你可以随时保存草稿，稍后再回来修改、添加或移除任何内容：
- en: '![Figure. 2.10 – Context dialog after saving the blueprint in draft mode'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.10 – 保存蓝图到草稿模式后的上下文对话框'
- en: '](img/Fig._2.10.jpg)'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Fig._2.10.jpg)'
- en: Figure. 2.10 – Context dialog after saving the blueprint in draft mode
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.10 – 保存蓝图到草稿模式后的上下文对话框
- en: When you are done, you need to publish your blueprint definition to a new version.
    The version is basically a custom text field that you need to define. It makes
    sense to select version numbers so that you can easily iterate through your versions.
    However, you can use whatever blueprint version names fit your needs. I decided
    to name the blueprint version `0.1`:![Figure. 2.11 – Context dialog after publishing
    the new blueprint
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，你需要将蓝图定义发布为新版本。版本基本上是一个自定义文本字段，你需要定义它。选择版本号是有意义的，这样你可以轻松地迭代版本。然而，你可以使用任何适合你需求的蓝图版本名称。我决定将蓝图版本命名为`0.1`：![图
    2.11 – 发布新蓝图后显示的上下文对话框
- en: '](img/Fig._2.11.jpg)'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Fig._2.11.jpg)'
- en: Figure. 2.11 – Context dialog after publishing the new blueprint
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.11 – 发布新蓝图后显示的上下文对话框
- en: After publishing your blueprint, the context dialog changes and gives you a
    new menu option, **Assign blueprint**.
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 发布蓝图后，上下文对话框会发生变化，并为你提供一个新菜单选项，**分配蓝图**。
- en: 'You can now assign your new blueprint to any of your existing subscriptions
    or choose to create a new subscription right from the dialog:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以将新的蓝图分配给任何现有的订阅，或者直接从对话框中选择创建一个新的订阅：
- en: '![Figure. 2.12 – New blueprint assignment'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.12 – 新蓝图分配'
- en: '](img/Fig._2.12.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.12.jpg)'
- en: Figure. 2.12 – New blueprint assignment
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – 新蓝图分配
- en: As soon as you assign your blueprint, the policies you defined in the blueprint
    definition are applied, and resource groups and resources are created. You can
    also assign a lock when assigning a blueprint. If you apply a lock during blueprint
    assignment, you can only remove it when unassigning the blueprint.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你分配了蓝图，蓝图定义中定义的策略将被应用，同时资源组和资源也会被创建。你还可以在分配蓝图时分配锁定。如果你在蓝图分配时应用了锁定，则只有在取消分配蓝图时才能移除它。
- en: 'Important Note:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示：
- en: You can assign a management lock when assigning a blueprint to a subscription.
    However, if you do so, the lock cannot simply be removed by a subscription owner
    but only when unassigning the blueprint from the subscription.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在将蓝图分配给订阅时分配管理锁定。但是，如果你这样做，锁定不能仅由订阅所有者移除，而只能在取消从订阅中分配蓝图时移除。
- en: You need to define a location for your blueprint assignment. This is because
    blueprints use **Managed Identity** (**MI**) to deploy the artifacts you define
    in your blueprint definition, such as resources and resource groups. You can either
    use a *system-assigned* MI or decide to use a *user-assigned* MI. If you use a
    system-assigned MI, which is the default, this MI is temporarily granted owner
    rights on the subscription(s) within the scope of your blueprint assignment. Owner
    access is needed to make sure that all your artifacts and locks can properly be
    created and set by the Blueprints service. When the blueprint assignment process
    is finished, owner access for the system-assigned MI is automatically removed
    from your subscription(s).
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要为蓝图分配定义一个位置。这是因为蓝图使用**托管身份**（**MI**）来部署你在蓝图定义中定义的工件，如资源和资源组。你可以使用*系统分配的*
    MI，也可以选择使用*用户分配的* MI。如果你使用系统分配的 MI（默认设置），该 MI 将临时被授予在蓝图分配范围内的订阅的所有者权限。需要拥有者权限，以确保蓝图服务能够正确创建和设置所有的工件和锁定。当蓝图分配过程完成后，系统分配的
    MI 的拥有者权限会自动从你的订阅中移除。
- en: 'Depending on the artifacts you have defined in your blueprint definition, you
    might have to define your artifact parameters during the assignment process:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你在蓝图定义中定义的工件，你可能需要在分配过程中定义工件参数：
- en: '![Figure. 2.13 – Artifact parameters are configured during blueprint assignments'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.13 – 在蓝图分配期间配置工件参数'
- en: '](img/Fig._2.13.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.13.jpg)'
- en: Figure. 2.13 – Artifact parameters are configured during blueprint assignments
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – 在蓝图分配期间配置工件参数
- en: In our example, we started with the ISO 27001 blueprint example. This blueprint
    definition contains several policies, such as policies for restricting resource
    deployment to only a few Azure regions or for deploying Azure Log Analytics agents
    to Windows and Linux VMs. All parameters for these policies could have been defined
    in the blueprint definition already. However, if we had done so, all parameters
    would always be the same for all subscriptions and could not be defined depending
    on the subscription you assign a blueprint to. This might be great for corporate
    restrictions that need to be enforced for every system environment, but it would
    restrict the blueprint/policy flexibility.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们从 ISO 27001 蓝图示例开始。这个蓝图定义包含多个政策，比如限制资源部署仅限于少数 Azure 区域，或者将 Azure Log
    Analytics 代理部署到 Windows 和 Linux 虚拟机。所有这些政策的参数本应已经在蓝图定义中进行定义。然而，如果我们这样做了，所有参数对于所有订阅都会相同，且无法根据你分配蓝图的订阅来定义。这对需要在每个系统环境中强制执行的公司限制可能非常有用，但这也会限制蓝图/政策的灵活性。
- en: The best practice for this case is to define all parameters that can never be
    changed in the blueprint definition. For example, this could be useful if there
    are only certain Azure regions that are permitted for your company's resources.
    But for Log Analytics, it makes sense to deploy a separate workspace to every
    Azure region, so as to avoid being charged for cross-region network traffic. This
    would ideally be defined during blueprint assignment.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，最佳实践是定义所有在蓝图定义中永远不能更改的参数。例如，如果公司资源仅允许部署在某些 Azure 区域，这将非常有用。但对于 Log Analytics，最好在每个
    Azure 区域部署一个单独的工作区，以避免因跨区域网络流量而产生费用。这应该在蓝图分配时定义。
- en: Tip
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: '**Best Practice**: Define artifact parameters that are valid for all your subscriptions
    in the *blueprint definition*. Define artifact parameters that only fit specific
    subscriptions during *blueprint assignment*.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**最佳实践**：在*蓝图定义*中定义适用于所有订阅的工件参数。在*蓝图分配*过程中定义仅适用于特定订阅的工件参数。'
- en: Now that you know how to define your governance concepts and how all the features
    we have today work together, we will take a close look at Azure Resource Graph,
    an engine that helps you to gather information about all the resources you have
    created within the scope of your Azure tenant.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解如何定义治理概念，以及我们今天所拥有的所有功能如何协同工作，我们将深入了解 Azure 资源图，这是一个帮助你收集在 Azure 租户范围内创建的所有资源信息的引擎。
- en: Azure Resource Graph
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure 资源图
- en: Have you ever tried to get information about all the Azure resources that are
    deployed outside of Europe? Or what about listing all the Azure VMs across all
    your subscriptions? In the *Understanding Governance in Azure* section, I mentioned
    that monitoring is essential for security and that you are clueless if you do
    not have effective monitoring practices. Now, if you tried to get information
    such as the information we have discussed when covering **Azure Resource Manager**
    (**ARM**), you might end up waiting forever. You might not even have the ability
    to get all the information you need at once.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾尝试获取所有部署在欧洲以外的 Azure 资源的信息？或者，如何列出你所有订阅中的所有 Azure 虚拟机（VM）？在*理解 Azure 中的治理*部分，我提到过监控对于安全至关重要，如果没有有效的监控实践，你就像一头瞎子。现在，如果你尝试获取类似我们在讲解**Azure
    资源管理器**（**ARM**）时讨论的信息，你可能会一直等待。你甚至可能没有能力一次性获取所需的所有信息。
- en: Azure Resource Graph is a relatively new service that helps you to gather information
    about all your Azure resources across all your tenants' Azure subscriptions. Sounds
    great, doesn't it? Well, it is great.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 资源图（Azure Resource Graph）是一个相对较新的服务，帮助你收集所有租户的 Azure 订阅中的资源信息。听起来很棒，对吧？确实，它非常棒。
- en: You can think of Azure Resource Graph as a large index database for all your
    resources that can be queried using **Kusto Query Language** (**KQL**). As soon
    as you create a new or update an existing resource, ARM notifies Azure Resource
    Graph of this change and the Azure Resource Graph database is updated. To make
    sure that there is no notification missed, and in case you update resources outside
    of ARM, Azure Resource Graph regularly runs a full scan of your resources in addition
    to receiving the notifications, so that the database is kept current.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以把 Azure Resource Graph 看作是一个大型的索引数据库，包含所有资源，可以使用**Kusto 查询语言**（**KQL**）进行查询。每当你创建或更新资源时，ARM
    会通知 Azure Resource Graph 这一变化，Azure Resource Graph 数据库会进行更新。为了确保没有漏掉任何通知，并且在你在
    ARM 之外更新资源时，Azure Resource Graph 会定期进行全扫描，除了接收通知外，这样数据库能够保持最新。
- en: In order to be able to use Azure Resource Graph to query your resources, you
    need to have at least read access to the resources you want to query. In other
    words, you are presented with results only for the resources that you are allowed
    to see. So, query results always depend on the account that is currently logged
    in to the Azure portal, the Azure CLI, PowerShell, or the REST API.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够使用 Azure Resource Graph 查询你的资源，你需要至少具有查询资源的读取权限。换句话说，你只能看到你有权限查看的资源。因此，查询结果始终取决于当前登录
    Azure 门户、Azure CLI、PowerShell 或 REST API 的帐户。
- en: Querying Azure Resource Graph with PowerShell
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 PowerShell 查询 Azure Resource Graph
- en: 'If you want to use PowerShell to query Azure Resource Graph, follow these steps:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用 PowerShell 查询 Azure Resource Graph，请按照以下步骤操作：
- en: Install the `Az.resourcegraph` PowerShell module with the following commands.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装 `Az.resourcegraph` PowerShell 模块。
- en: '[PRE5]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then, import the module into your current PowerShell session:'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，将模块导入到当前的 PowerShell 会话中：
- en: '[PRE6]'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Make sure that the module was properly installed by using the following PowerShell
    command:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下 PowerShell 命令来确保模块已正确安装：
- en: '[PRE7]'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You should see the following output:'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '![Figure. 2.14 – The Az.ResourceGraph module was successfully installed and
    imported'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.14 – Az.ResourceGraph 模块已成功安装并导入'
- en: '](img/Fig._2.14.jpg)'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Fig._2.14.jpg)'
- en: Figure. 2.14 – The Az.ResourceGraph module was successfully installed and imported
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.14 – Az.ResourceGraph 模块已成功安装并导入
- en: Currently, the Az.ResourceGraph PowerShell module online contains one cmdlet,
    which is Search-AzGraph. This might be subject to change in the future, so make
    sure to always use the latest version of the PowerShell module.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Az.ResourceGraph PowerShell 模块在线包含一个 cmdlet，即 Search-AzGraph。将来可能会有所变化，所以请确保始终使用最新版本的
    PowerShell 模块。
- en: You can now start to query Azure Resource Graph with PowerShell. Let's, for
    example, get a list of all Azure resources that contain the word "core" in their
    name. We want to limit the output to five results. Now, the interesting thing
    is that the Search-AzGraph cmdlet already gives you the database column, which
    is to be queried, so for the query, you only need to define your filter logic.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以开始使用 PowerShell 查询 Azure Resource Graph。例如，我们想获取所有资源名称中包含“core”一词的 Azure
    资源列表，并限制输出为五个结果。现在，有趣的地方是，Search-AzGraph cmdlet 已经为你提供了需要查询的数据库列，所以在查询时，你只需要定义你的过滤逻辑。
- en: 'A KQL query usually looks like this:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 KQL 查询通常是这样的：
- en: '[PRE8]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Since the database name is given by Search-AzGraph, we only need to define
    the filter logic. So, for the result just described, your PowerShell command,
    including the query, could be as follows:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 由于数据库名称是由 Search-AzGraph 给出的，我们只需要定义过滤逻辑。因此，对于刚才描述的结果，你的 PowerShell 命令，包括查询，可能如下所示：
- en: '[PRE9]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This command will give you up to five results that contain the word core anywhere
    in the resource name:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令将为你提供最多五个结果，这些结果的资源名称中包含“core”一词：
- en: '![Figure. 2.15 – Your first Azure Resource Graph query result with PowerShell'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.15 – 你的第一次 Azure Resource Graph 查询结果（使用 PowerShell）'
- en: '](img/Fig._2.15.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.15.jpg)'
- en: Figure. 2.15 – Your first Azure Resource Graph query result with PowerShell
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.15 – 你的第一次 Azure Resource Graph 查询结果（使用 PowerShell）
- en: You've now learned how to use Powershell to query Azure Resource Graph. In the
    next section, you will learn how to leverage Azure CLI for the same results.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经学会了如何使用 PowerShell 查询 Azure Resource Graph。在接下来的章节中，你将学习如何使用 Azure CLI
    获取相同的查询结果。
- en: Querying Azure Resource Graph with the Azure CLI
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Azure CLI 查询 Azure Resource Graph
- en: 'As you might have recognized from the preceding screenshot, I am using PowerShell
    Core in a macOS Bash terminal. This works absolutely fine, and since I am into
    both PowerShell and macOS, for me this is a great way to go. However, with the
    Azure CLI, the Python-based command-line interface that can be run on Windows,
    macOS, and Linux, you can also easily query Azure Resource Graph. If you have
    already installed the latest version of the Azure CLI, you just need to interactively
    log in with the following command:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 如你从前面的截图中可能已经看到的，我在 macOS 的 Bash 终端中使用 PowerShell Core。这完全没有问题，因为我既喜欢 PowerShell
    又喜欢 macOS，对我来说这是个不错的选择。然而，使用 Azure CLI（基于 Python 的命令行界面，可以在 Windows、macOS 和 Linux
    上运行），你也可以轻松查询 Azure Resource Graph。如果你已经安装了最新版本的 Azure CLI，你只需通过以下命令进行交互式登录：
- en: '[PRE10]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You will then be informed that there is a browser window open that you can
    use to enter your credentials, beat the MFA challenge, and handle all the other
    security stuff that comes with Azure AD (and which we will address in the next
    chapter of this book). As soon as you have logged in, the Azure CLI will give
    you an overview of all the subscriptions that your account has access rights to:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，系统会提醒你，浏览器窗口已打开，你可以在其中输入凭据，完成多重身份验证挑战，并处理所有与 Azure AD 相关的其他安全事务（这些内容将在本书的下一章讨论）。登录后，Azure
    CLI 会显示你账户所拥有访问权限的所有订阅概况：
- en: '![Figure. 2.16 – Azure CLI – interactive login successful'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.16 – Azure CLI – 交互式登录成功'
- en: '](img/Fig._2.16.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.16.jpg)'
- en: Figure. 2.16 – Azure CLI – interactive login successful
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.16 – Azure CLI – 交互式登录成功
- en: 'If you now try to get help for `az graph` (which is the starting command to
    get access to Azure Resource Graph), you will see an error message because the
    graph extension needs to be added to your Azure CLI environment first:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在尝试获取 `az graph` 的帮助（这是访问 Azure Resource Graph 的起始命令），你将看到一条错误信息，因为需要先将图形扩展添加到你的
    Azure CLI 环境中：
- en: '![Figure 2.17 – Error message when the Azure Resource Graph extension has not
    yet been enabled in the Azure CLI'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.17 – 当 Azure Resource Graph 扩展尚未启用时，Azure CLI 中的错误信息'
- en: '](img/Fig._2.17.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.17.jpg)'
- en: Figure 2.17 – Error message when the Azure Resource Graph extension has not
    yet been enabled in the Azure CLI
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.17 – 当 Azure Resource Graph 扩展尚未启用时，Azure CLI 中的错误信息
- en: 'So, let''s add the graph extension:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们添加图形扩展：
- en: 'Enter the following command into the Bash session:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Bash 会话中输入以下命令：
- en: '[PRE11]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You can now run the same query you have run in PowerShell (but with the Azure
    CLI syntax):'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以运行在 PowerShell 中运行的相同查询（但使用 Azure CLI 语法）：
- en: '[PRE12]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Running this query will give you the following output:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此查询将返回以下输出：
- en: '![Figure 2.18 – Your first Azure Resource Graph query result with the Azure
    CLI'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.18 – 你的第一个 Azure Resource Graph 查询结果（使用 Azure CLI）'
- en: '](img/Fig._2.18.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Fig._2.18.jpg)'
- en: Figure 2.18 – Your first Azure Resource Graph query result with the Azure CLI
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.18 – 你的第一个 Azure Resource Graph 查询结果（使用 Azure CLI）
- en: So, the query itself will stay the same. It is only wrapped in the Azure CLI
    syntax instead of PowerShell.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，查询本身将保持不变。它只是被包装在 Azure CLI 语法中，而不是 PowerShell。
- en: Advanced queries
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级查询
- en: Now that you know how to run queries against Azure Resource Graph with the Azure
    CLI and PowerShell, you may be interested in running some advanced queries, right?
    So, here you go. The queries you find here can be run in both the Azure CLI and
    Powershell.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何在 Azure CLI 和 PowerShell 中运行查询了，或许你有兴趣运行一些高级查询，对吧？那么，这里是相关查询。你在这里找到的查询可以在
    Azure CLI 和 PowerShell 中运行。
- en: 'First, let''s try to get more information about a resource – not just the name
    and type, and without limiting the output to a number of results; let''s filter
    for a particular subscription. The query might be as follows:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们尝试获取更多关于资源的信息——不仅仅是名称和类型，并且不限制输出结果的数量；让我们筛选特定的订阅。查询可能如下所示：
- en: '[PRE13]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The command for the Azure CLI is as follows:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: Azure CLI 的命令如下：
- en: '[PRE14]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'For PowerShell, you enter the following command:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 PowerShell，你输入以下命令：
- en: '[PRE15]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You will see, depending on your access rights and the resource type, that the
    results of your query will now give you a lot of information. A screenshot of
    the single resource that shows up as the result in my environment, a virtual network,
    would take up about two pages of this book. The nice thing is that even if there
    are lots of resources returned by your query, you will get your results in near-real
    time because you query the Azure Resource Graph database instead of Azure Resource
    Manager, which would have to "talk" to each and every resource first.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到，根据你的访问权限和资源类型，你的查询结果将为你提供大量信息。在我的环境中，作为查询结果出现的单个资源——一个虚拟网络——的截图大约会占用本书的两页。幸运的是，即使你的查询返回了很多资源，由于你查询的是
    Azure 资源图数据库而不是 Azure 资源管理器，你的结果也会接近实时返回，而 Azure 资源管理器必须“与”每个资源先进行通信。
- en: Summary
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you have learned why governance is essential for security and
    what features Azure has to offer to help you in building a governance concept
    for your company. You've learned how to group and organize subscriptions and resources,
    how to enforce policies and all the best practices to ensure that you do so effectively
    and without breaking your system, and how to create consistent and repeatable
    environments. We know that it is not easy to find a way through this jungle of
    options, but when you stop, think, plan, act, and repeat, you will be on a good
    path to finding what fits your needs perfectly.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你已经了解了为什么治理对安全至关重要，以及 Azure 提供了哪些功能来帮助你为公司建立治理概念。你已经学会了如何分组和组织订阅和资源，如何执行策略，以及所有最佳实践，以确保你有效且不破坏系统地进行操作，并创建一致且可重复的环境。我们知道，在这片选择的丛林中找到一条出路并不容易，但当你停下来、思考、计划、行动并重复时，你将走上发现最适合你需求的道路。
- en: In the next chapter, you will not only learn how to keep track of access rights
    and monitor any anomalies in user behavior by learning how to manage cloud identities,
    but you will also learn about strategies to protect identities and how to reduce
    the attack surface of privileged accounts.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将不仅学习如何通过管理云身份来跟踪访问权限并监控用户行为中的任何异常，还将学习保护身份的策略，以及如何减少特权账户的攻击面。
- en: Questions
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are the most important parts of governance?
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 治理中最重要的部分是什么？
- en: A. Policies
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A. 策略
- en: B. Monitoring
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B. 监控
- en: C. Implementation
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C. 实施
- en: D. All of the above
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D. 以上所有
- en: What needs to be defined in governance when deployment is in question?
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在部署问题中，治理中需要定义什么？
- en: A. We need to define what can be deployed
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A. 我们需要定义可以部署的内容
- en: B. We need to define deployment steps
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B. 我们需要定义部署步骤
- en: C. We need to define both what and how
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C. 我们需要定义“什么”和“如何”
- en: D. This depends on the deployment method
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D. 这取决于部署方法
- en: Which feature prevents the accidental removal of resources?
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个功能可以防止意外删除资源？
- en: A. Resource locks
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A. 资源锁定
- en: B. Delete locks
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B. 删除锁定
- en: C. Management locks
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C. 管理锁定
- en: What is the top level of a group hierarchy?
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 群组层级的最高级别是什么？
- en: A. Tenant
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A. 租户
- en: B. Management group
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B. 管理组
- en: C. Subscription
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C. 订阅
- en: D. Resource group
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D. 资源组
- en: At which level are Azure Blueprints applied?
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 蓝图应用在哪个级别？
- en: A. Resource
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A. 资源
- en: B. Subscription
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B. 订阅
- en: C. Resource group
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C. 资源组
- en: What can we define with Azure Blueprints?
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以用 Azure 蓝图定义什么？
- en: A. Role assignments
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A. 角色分配
- en: B. Policy assignments
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B. 策略分配
- en: C. Both of the above
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C. 以上两者
- en: D. None of the above
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D. 以上都不是
- en: What is Azure Resource Graph?
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是 Azure 资源图？
- en: A. A service to control deployments
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: A. 控制部署的服务
- en: B. A service to gather information
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: B. 一个收集信息的服务
- en: C. Both of the above
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C. 以上两者
- en: D. None of the above
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D. 以上都不是
