- en: Writing Burp Suite Extensions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写Burp Suite扩展
- en: Other HTTP proxies offer good performance, but, Burp Suite is indisputably the
    best tool due to its extension capability. As we have seen in the previous chapters,
    extensions add a lot of functions, and so they can be focused on one particular
    problem.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 其他HTTP代理提供了良好的性能，但是Burp Suite无疑是最好的工具，因为它具有扩展功能。正如我们在前面的章节中所看到的，扩展添加了许多功能，因此它们可以专注于特定的问题。
- en: The ability to create extensions provides great help to the user in automating testing
    activities. Burp Suite supports Java, Python, and Ruby to develop extensions,
    so it is flexible in providing easy access for developers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 创建扩展的能力为用户在自动化测试活动中提供了极大的帮助。Burp Suite支持Java、Python和Ruby来开发扩展，因此它在为开发人员提供便捷访问方面非常灵活。
- en: In this chapter, we will review the development process of a new extension and
    provide some tricks and tips for doing so on our Burp Suite installation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾新扩展的开发过程，并提供一些在我们的Burp Suite安装中进行此操作的技巧和提示。
- en: 'We will cover the following topics in the chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Setting up the development environment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: Writing a Burp Suite extension
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写Burp Suite扩展
- en: Executing the extension
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行扩展
- en: Setting up the development environment
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置开发环境
- en: 'To develop your own extensions, you can use open source **integrated development
    environments** (**IDEs**), such as NetBeans or Eclipse. Choose the most comfortable
    IDE for yourself. In this case, we will use NetBeans:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要开发自己的扩展，可以使用NetBeans或Eclipse等开源**集成开发环境**（**IDE**）。选择最适合自己的IDE。在这种情况下，我们将使用NetBeans：
- en: 'Go to the NetBeans website ([https://netbeans.org/](https://netbeans.org/))
    and download the latest version. Installation is not needed since NetBeans is
    developed in Java and distributed as a JAR file; just unzip the download file
    and click on the netbeans-bin icon, as demonstrated in the following screenshot:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到NetBeans网站（[https://netbeans.org/](https://netbeans.org/)）并下载最新版本。不需要安装，因为NetBeans是用Java开发并作为JAR文件分发的；只需解压下载文件并单击netbeans-bin图标，如下截图所示：
- en: '![](img/18960f26-1eda-4543-82e8-4e5ca45ced02.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/18960f26-1eda-4543-82e8-4e5ca45ced02.png)'
- en: Before starting to work with NetBeans, go to [https://www.oracle.com/technetwork/java/javase/downloads/](https://www.oracle.com/technetwork/java/javase/downloads/)
    and ...
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开始使用NetBeans之前，转到[https://www.oracle.com/technetwork/java/javase/downloads/](https://www.oracle.com/technetwork/java/javase/downloads/)并...
- en: Writing a Burp Suite extension
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写Burp Suite扩展
- en: 'The basic class structure for any Burp Suite extension is in the following
    code, which is provided by PortSwigger:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite扩展的基本类结构如下代码所示，由PortSwigger提供：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is basically the class definition that is used to create all of Burp Suite's
    extensions. Now, let's start to modify the code.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上是用于创建所有Burp Suite扩展的类定义。现在，让我们开始修改代码。
- en: Burp Suite's API
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Burp Suite的API
- en: 'Keeping in mind that all extensions are developed by taking the PortSwigger-provided
    structure (which was previously shown) as the code base, the entry point for your
    extension is as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，所有扩展都是通过采用PortSwigger提供的结构（如前所示）作为代码基础来开发的，您的扩展的入口点如下：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If you want to call your own extension, you will need to use the following
    method:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要调用自己的扩展，需要使用以下方法：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following code shows the byte utilities. They are useful for managing strings,
    searching substrings, encoding, decoding, and more:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示了字节实用程序。它们对于管理字符串、搜索子字符串、编码、解码等非常有用：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Modifying the user-agent using an extension
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用扩展修改用户代理
- en: Let's now analyze the code of an extension to modify the user-agent in the HTTP
    request, using the basic structure provided by PortSwigger.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们分析一下扩展的代码，以修改HTTP请求中的用户代理，使用PortSwigger提供的基本结构。
- en: Creating the user-agents (strings)
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建用户代理（字符串）
- en: 'The first thing we need to modify a user-agent is with substitute user-agents.
    In the next part of the code, we create a list of default user-agents to be used
    in the extension; the extension also provides the option to use an XML file with
    the strings, as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要修改用户代理的第一件事是使用替代用户代理。在代码的下一部分中，我们创建了一个默认用户代理列表，用于在扩展中使用；扩展还提供了使用包含字符串的XML文件的选项，如下所示：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Creating the GUI
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建GUI
- en: PortSwigger simplified the way to integrate extensions with Burp Suite to create
    a new Burp Suite tab, and the elements just need a few lines of code.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: PortSwigger简化了将扩展与Burp Suite集成以创建新的Burp Suite选项卡的方式，这些元素只需要几行代码。
- en: 'First, we need to define a new tab for our extension in Burp Suite''s window,
    as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在Burp Suite窗口中为我们的扩展定义一个新选项卡，如下所示：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We also need to create a box for putting in all our options, along with the
    labels for each one, as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要创建一个框，用于放置所有选项，以及每个选项的标签，如下所示：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Additionally, we need to add that there is no application or extension without
    default values to present to the user when it is open, as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，需要补充说明的是，没有默认值的应用程序或扩展在打开时无法向用户呈现，如下所示：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The operation
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作
- en: 'The previous blocks of code showed all of the extension content and the graphical
    interface, but the following lines show the operation of the extension itself:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码块显示了所有扩展内容和图形界面，但以下行显示了扩展本身的操作：
- en: 'First, we set up the initial variables and components, as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们设置初始变量和组件，如下所示：
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Discovering authentication weaknesses
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发现认证弱点
- en: After services, ports, and technology detection, the next step is to navigate
    and understand the application's flow. Here, we will focus on the authentication
    section.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务、端口和技术检测之后，下一步是导航和了解应用程序的流程。在这里，我们将重点放在认证部分。
- en: So, open Burp Suite, and after configuring the web browser, go to [https://www.mercadolibre.com.mx/](https://www.mercadolibre.com.mx/).
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，打开Burp Suite，并在配置Web浏览器后，转到[https://www.mercadolibre.com.mx/](https://www.mercadolibre.com.mx/)。
- en: As we mentioned before, Mercado Libre is a big online retailer, which is an
    intermediate party between sellers and buyers offering package services and financial
    services.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，Mercado Libre是一个大型在线零售商，是卖家和买家之间的中间商，提供包裹服务和金融服务。
- en: Enter valid credentials in the login section in order to understand how works.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在登录部分输入有效的凭据，以了解其工作原理。
- en: 'A resume about the authentication flow is given here:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关于认证流程的简要介绍在这里：
- en: The user enters an email address or username and a password
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户输入电子邮件地址或用户名和密码
- en: The user is logged in
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户已登录
- en: If the user closes the session, the next time they enter the login section,
    they just need to enter their password, as their username is already taken
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果用户关闭会话，下次进入登录部分时，他们只需要输入密码，因为他们的用户名已经被占用。
- en: 'Let''s check the login request:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们检查登录请求：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Let''s also, the response to this login request:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们也来看看这个登录请求的响应：
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Using the preceding blocks of code, we can detect the following things:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上述代码块，我们可以检测到以下内容：
- en: The application is using a load balancer or an anti-DDoS service. We can see
    in the response how the request is redirected to a determinate server.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该应用程序正在使用负载均衡器或反DDoS服务。我们可以在响应中看到请求是如何被重定向到一个确定的服务器的。
- en: The application uses a token to track requests; it may not be possible to exploit
    vulnerabilities such as CSRF.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该应用程序使用令牌来跟踪请求；可能无法利用CSRF等漏洞。
- en: The application has XSS protection, which avoids the extraction of information.
    For example, extracting the user's session using JavaScript.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该应用程序具有XSS保护，可以避免信息的提取。例如，使用JavaScript提取用户的会话。
- en: The application includes a SAMEORIGIN policy. In this book, we have not covered
    this. This control is used to avoid execute actions from external entities.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该应用程序包括一个SAMEORIGIN策略。在本书中，我们还没有涉及这个。这个控制用于避免来自外部实体的执行操作。
- en: User credentials are sent in the request's body.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户凭据被发送到请求的主体中。
- en: The application uses the XML format. This means that the application is using
    an internal API.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该应用程序使用XML格式。这意味着该应用程序正在使用内部API。
- en: Now, we have some information about the authentication flow. In a real assessment,
    you would need to map the whole application, and the complete application flow.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一些关于认证流程的信息。在实际评估中，您需要映射整个应用程序和完整的应用程序流程。
- en: Now, we are going to review issues related to authentication.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将审查与认证相关的问题。
- en: Executing the extension
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行扩展
- en: After you finish writing the extension, launch the Burp Suite application and
    then click on Run | Run Project. The application will be launched with our extension
    running into it.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写完扩展后，启动Burp Suite应用程序，然后单击Run | Run Project。应用程序将启动，并在其中运行我们的扩展。
- en: '![](img/efaae54f-63b4-4347-990e-5ea069a60fb0.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/efaae54f-63b4-4347-990e-5ea069a60fb0.png)'
- en: 'For this extension, you need to create a session handling and configure the
    options in the User-Agent tab, as demonstrated in the following screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个扩展，您需要创建一个会话处理并在用户代理选项卡中配置选项，如下截图所示：
- en: '![](img/b44c15c5-2c28-487b-9a4b-0542cd7963e8.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b44c15c5-2c28-487b-9a4b-0542cd7963e8.png)'
- en: 'As you can see in the following screenshot, the application ran without errors:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在以下截图中所见，该应用程序运行时没有出现错误：
- en: '![](img/f3c97148-1ff9-4b05-98d4-f5159f0f97aa.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3c97148-1ff9-4b05-98d4-f5159f0f97aa.png)'
- en: If you want ...
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要...
- en: Summary
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we analyzed how to create our own extension and the different
    functions and methods provided by PortSwigger, which not only helped us to create
    a new extension but also showed us how to modify existing extensions that needed
    to be adapted to our requirements.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们分析了如何创建我们自己的扩展以及PortSwigger提供的不同函数和方法，这不仅帮助我们创建了一个新的扩展，还向我们展示了如何修改现有的扩展，以适应我们的要求。
- en: The next chapter looks at a real-world case of how a large online retailer was
    compromised by having its authentication implementation broken.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将介绍一个真实案例，说明一个大型在线零售商是如何因为认证实现的破坏而受到影响的。
