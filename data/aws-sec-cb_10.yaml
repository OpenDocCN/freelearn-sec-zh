- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Additional Services and Practices for AWS Security
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS 安全的附加服务和实践
- en: We have looked into many security-related concepts and services throughout this
    book. There are still more security services and practices that can help us make
    our AWS infrastructure secure. In this chapter, we will look into some of these
    additional services and practices that are worth paying attention to. Unlike other
    chapters, we will not go very deep into these services. You can refer to the links
    provided in the *See also* section for further learning. We will learn about some
    security-related managed services such as **AWS Resource Access Manager** ( **AWS
    RAM** ), **AWS Systems Manager Parameter Store** , **AWS Secrets Manager** , **AWS
    Trusted Advisor** , and **AWS Artifact** . We will also see how we can use **Amazon
    Machine Images** ( **AMIs** ) and security products from AWS Marketplace.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们已经探讨了许多与安全相关的概念和服务。还有更多安全服务和实践可以帮助我们保护 AWS 基础设施的安全。在本章中，我们将探讨一些值得关注的额外服务和实践。与其他章节不同，我们不会对这些服务进行深入探讨。你可以参考*另见*部分提供的链接，进一步学习。我们将了解一些与安全相关的托管服务，如**AWS
    资源访问管理器**（**AWS RAM**）、**AWS Systems Manager 参数存储**、**AWS Secrets Manager**、**AWS
    Trusted Advisor**和**AWS Artifact**。我们还将了解如何使用**Amazon 机器镜像**（**AMIs**）和来自 AWS
    Marketplace 的安全产品。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下配方：
- en: Setting up and using AWS RAM
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置和使用 AWS RAM
- en: Storing sensitive data with the Systems Manager Parameter Store
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Systems Manager 参数存储存储敏感数据
- en: Using AWS Secrets Manager to manage RDS credentials
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AWS Secrets Manager 管理 RDS 凭证
- en: Creating an AMI instead of using EC2 user data
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 AMI 而不是使用 EC2 用户数据
- en: Using security products from AWS Marketplace
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用来自 AWS Marketplace 的安全产品
- en: Using AWS Trusted Advisor for recommendations
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AWS Trusted Advisor 获取建议
- en: Using AWS Artifact for compliance reports
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AWS Artifact 进行合规性报告
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Before diving into the recipes of this chapter, we need to ensure we have the
    following requirements in place:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入了解本章的配方之前，我们需要确保已满足以下要求：
- en: We need at least an active AWS account to complete the recipes within this chapter.
    Unless specifically mentioned in the recipe, I will be using the **awsseccb-sandbox-1**
    account that we created in the *Multi-account management with AWS Organizations*
    recipe in [*Chapter 1*](B21384_01.xhtml#_idTextAnchor020) , and I won’t be utilizing
    any AWS Organizations features.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完成本章中的配方，至少需要一个有效的 AWS 账户。除非配方中特别提到，否则我将使用在[*第 1 章*](B21384_01.xhtml#_idTextAnchor020)中的*多账户管理与
    AWS Organizations*配方中创建的**awsseccb-sandbox-1**账户，并且不会使用任何 AWS Organizations 功能。
- en: For administrative actions, we need a user who has **AdministratorAccess** permission
    to the AWS account we are working with.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于管理操作，我们需要一个具有**AdministratorAccess**权限的用户来访问我们正在使用的 AWS 账户。
- en: The code files for this book are available at [https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition](https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition)
    . The code files for this chapter are available at [https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition/tree/main/Chapter10](https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition/tree/main/Chapter10)
    .
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码文件可以在[https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition](https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition)上找到。本章的代码文件可以在[https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition/tree/main/Chapter10](https://github.com/PacktPublishing/AWS-Security-Cookbook-Second-Edition/tree/main/Chapter10)上找到。
- en: Setting up and using AWS RAM
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置和使用 AWS RAM
- en: '**AWS RAM** enables us to securely share AWS resources with other AWS accounts
    or within our AWS organization. The resources we can share include transit gateways,
    subnets, AWS License Manager configurations, and Amazon Route 53 resolver rules.
    In this recipe, we will learn to use AWS RAM to share a subnet.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS RAM** 使我们能够与其他 AWS 账户或 AWS 组织内部的其他账户安全地共享 AWS 资源。我们可以共享的资源包括传输网关、子网、AWS
    License Manager 配置和 Amazon Route 53 解析器规则。在这个配方中，我们将学习如何使用 AWS RAM 来共享子网。'
- en: Getting ready
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'We need the following to successfully complete the recipe:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要以下内容才能成功完成配方：
- en: A management account with AWS Organizations set up as discussed in the *Multi-account
    management with AWS Organizations* recipe from [*Chapter 1*](B21384_01.xhtml#_idTextAnchor020)
    . I will be using the **aws-sec-cookbook-1** account that we created in that recipe.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置为管理账户并已按照在[*第 1 章*](B21384_01.xhtml#_idTextAnchor020)中的*多账户管理与 AWS Organizations*配方中讨论的方式配置的
    AWS Organizations。我将使用在该配方中创建的**aws-sec-cookbook-1**账户。
- en: A member account within the organization to share resources with.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在组织内的成员帐户以共享资源。
- en: VPC and subnets by following the *Setting up VPC plus VPC resources with minimal
    effort* recipe in [*Chapter 5*](B21384_05.xhtml#_idTextAnchor169) , however, you
    may skip creating a NAT gateway.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过遵循[*第5章*](B21384_05.xhtml#_idTextAnchor169)中的*设置VPC及其VPC资源的最小化步骤*食谱创建VPC和子网，然而，您可以跳过创建NAT网关。
- en: How to do it...
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We can set up and use AWS RAM as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按如下方式设置和使用AWS RAM：
- en: Go to the **Resource Access Manager** service in the AWS Management Console.
    If we are using the service for the first time, click on **Settings** from the
    left sidebar, select the **Enable sharing with AWS Organizations** option, click
    **Save settings** , and go back to the **Resource Access** **Manager** dashboard.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到AWS管理控制台中的**资源访问管理器**服务。如果我们是第一次使用该服务，请点击左侧边栏中的**设置**，选择**启用与AWS Organizations的共享**选项，点击**保存设置**，然后返回到**资源访问管理器**仪表板。
- en: '![Figure 10.1 – Enable sharing with AWS Organizations](image/B21384_10_1.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图10.1 – 启用与AWS Organizations的共享](image/B21384_10_1.jpg)'
- en: Figure 10.1 – Enable sharing with AWS Organizations
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 – 启用与AWS Organizations的共享
- en: Click on **Create a** **resource share** .
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建一个** **资源共享**。
- en: For **Resource share name** , provide the **my-subnet-share** value.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**资源共享名称**，提供**my-subnet-share**值。
- en: In the section titled **Resources - optional** , in the dropdown for **Select
    resource type** , select **Subnets** , and from the subnet list, select a subnet
    we created for this recipe, as discussed in the *Getting* *ready* section.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**资源 - 可选**部分，在**选择资源类型**的下拉菜单中，选择**子网**，然后从子网列表中选择我们为本食谱创建的子网，正如在*准备*部分所讨论的那样。
- en: Scroll down and click **Next** . We will be taken to the **Associate managed
    permissions** page. Leave everything as default, scroll down, and click **Next**
    .
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并点击**下一步**。我们将进入**关联托管权限**页面。保持默认设置，向下滚动并点击**下一步**。
- en: On the **Grant access to principals** page, under the **Principals** section,
    select **Allow sharing only within your organization** , under **Select principal
    type** , choose **AWS account** , enter the account number of another AWS account,
    click **Add** , scroll down, and click **Next** . It will lead to the **Review
    and create** page. Review the details, scroll down, and click **Create** **resource
    share** .
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**授予访问权限给主体**页面的**主体**部分，选择**仅在您的组织内共享**，在**选择主体类型**下，选择**AWS帐户**，输入另一个AWS帐户的帐户号，点击**添加**，向下滚动并点击**下一步**。这将跳转到**审核和创建**页面。审核详细信息，向下滚动并点击**创建**
    **资源共享**。
- en: To verify the resource share, log in to the account that we specified in *Step
    6* and go to the AWS **Resource Access Manager** dashboard. Click on **Resource
    shares** under **Shared with me** from the left sidebar.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要验证资源共享，登录到我们在*步骤6*中指定的帐户，然后进入AWS **资源访问管理器**仪表板。在左侧边栏中点击**共享给我的资源**下的**资源共享**。
- en: '![Figure 10.2 – Shared resources in our member account](image/B21384_10_2.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图10.2 – 我们成员帐户中的共享资源](image/B21384_10_2.jpg)'
- en: Figure 10.2 – Shared resources in our member account
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2 – 我们成员帐户中的共享资源
- en: We should see the subnet that was shared. We need to select the same Region
    where we created the shares to see the shares.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该能看到被共享的子网。我们需要选择与我们创建共享时相同的区域，以查看这些共享。
- en: How it works...
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: First, we enabled sharing within our AWS organization. This can be done from
    the **AWS RAM** console, as we saw in this recipe. If we do not enable sharing
    within our AWS organization, the accounts we add will be considered external accounts,
    even if they are part of our organization. We added a resource share for a subnet
    and shared it with another account within our OU.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们在我们的AWS组织中启用了共享。这可以通过**AWS RAM**控制台完成，正如我们在本食谱中看到的那样。如果我们没有在AWS组织内启用共享，我们添加的帐户将被视为外部帐户，即使它们是我们组织的一部分。我们为一个子网添加了资源共享，并将其与我们组织单元（OU）内的另一个帐户共享。
- en: There’s more...
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'We shared a subnet resource type with AWS RAM. The following are the resource
    type options currently available: **Aurora DB Clusters** , **Capacity Reservations**
    , **CodeBuild Projects** , **CodeBuild Report Groups** , **Dedicated Hosts** ,
    **Image Builder Components** , **Image Builder Image Recipes** , **Image Builder
    Images** , **License Configurations** , **Resolver Rules** , **Traffic Mirror
    Targets** , and **Transit Gateways** .'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们与AWS RAM共享了一个子网资源类型。目前可用的资源类型选项包括：**Aurora数据库集群**、**容量预留**、**CodeBuild项目**、**CodeBuild报告组**、**专用主机**、**映像构建组件**、**映像构建镜像食谱**、**映像构建镜像**、**许可证配置**、**解析器规则**、**流量镜像目标**、**传输网关**等。
- en: See also
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: You can read more about AWS RAM at [https://www.cloudericks.com/blog/getting-started-with-aws-ram](https://www.cloudericks.com/blog/getting-started-with-aws-ram)
    .
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.cloudericks.com/blog/getting-started-with-aws-ram](https://www.cloudericks.com/blog/getting-started-with-aws-ram)阅读有关AWS
    RAM的更多信息。
- en: Storing sensitive data with the Systems Manager Parameter Store
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AWS系统管理器参数存储存储敏感数据
- en: We can store data using the **Systems Manager Parameter Store** with and without
    encryption, and then reference it from various services without having to hardcode
    the data in any place. In this recipe, we will learn how to store data with encryption
    in an AWS Systems Manager Parameter Store and then retrieve it from an EC2 instance.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用**系统管理器参数存储**存储数据，可以选择加密或不加密，然后从各种服务中引用它，而无需在任何地方硬编码数据。在本操作中，我们将学习如何在AWS系统管理器参数存储中加密存储数据，然后从EC2实例中检索它。
- en: Getting ready
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'We need the following to successfully complete the recipe:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要以下内容才能成功完成本操作：
- en: A working AWS account and a user as described in the *Technical* *requirements*
    section.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个有效的AWS账户和在*技术要求*部分描述的用户。
- en: An EC2 instance in the default VPC, within a public subnet within the VPC. For
    **Amazon Machine Image (AMI)** , select **Amazon Linux 2023 AMI** . For **Instance
    type** , select **t2.micro** , For **Key pair (login)** , select an existing one
    you have access to or create a new one. Under **Network settings** , make sure
    the value for **Auto-assign public IP** is **Enable** and **Create security group**
    is selected with the value for **Allow SSH traffic from** set as **Anywhere**
    . We learned about EC2 in [*Chapter 5*](B21384_05.xhtml#_idTextAnchor169) .
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在默认VPC中的EC2实例，位于VPC内的公共子网中。对于**Amazon机器映像（AMI）**，选择**Amazon Linux 2023 AMI**；对于**实例类型**，选择**t2.micro**；对于**密钥对（登录）**，选择你有权限访问的现有密钥对或创建一个新密钥对。在**网络设置**下，确保**自动分配公有IP**的值为**启用**，并选择**创建安全组**，将**允许来自**设置为**任何地方**的SSH流量。我们在[*第5章*](B21384_05.xhtml#_idTextAnchor169)中学习了EC2。
- en: You would benefit from being familiar with KMS. We learned about KMS in [*Chapter
    3*](B21384_03.xhtml#_idTextAnchor088) .
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将受益于熟悉KMS。在[*第3章*](B21384_03.xhtml#_idTextAnchor088)中，我们学习了KMS。
- en: How to do it...
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: First, we will create a parameter in the AWS Systems Manager Parameter Store.
    Then, we will attach a role necessary for accessing the AWS Systems Manager from
    an EC2 instance. Finally, we will retrieve the parameter’s information from that
    EC2 instance.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将在AWS系统管理器参数存储中创建一个参数。然后，我们将附加一个角色，用于从EC2实例访问AWS系统管理器。最后，我们将从该EC2实例检索参数信息。
- en: Creating a parameter in the AWS Systems Manager Parameter Store
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在AWS系统管理器参数存储中创建参数
- en: 'We can create a Systems Manager Parameter Store parameter as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下方式创建一个系统管理器参数存储参数：
- en: Go to the **Systems Manager** service in the AWS management dashboard.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入AWS管理控制台中的**系统管理器**服务。
- en: Click on **Parameter Store** from the left sidebar.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧边栏点击**参数存储**。
- en: Click on **Create parameter** .
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建参数**。
- en: On the **Create parameter** page, for **Name** , enter **MySecureParameter**
    , for **Description — Optional** , enter **My Secure Parameter** , and select
    **Tier** as **Standard** .
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**创建参数**页面，填写**名称**为**MySecureParameter**，**描述（可选）**填写**My Secure Parameter**，并选择**层级**为**标准**。
- en: For **Type** , select **SecureString** , for **KMS key source** , select **My
    current account** , for **KMS Key ID** , leave the default value of **alias/aws/ssm**
    as is, and for **Value** , enter **MySecureValue** .
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**类型**，选择**SecureString**；对于**KMS密钥源**，选择**我的当前账户**；对于**KMS密钥ID**，保持默认值**alias/aws/ssm**不变；对于**值**，输入**MySecureValue**。
- en: 'Scroll down and click on **Create parameter** . We should get this message:
    **Create parameter** **request succeeded!** .'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并点击**创建参数**。我们应该会看到如下信息：**创建参数请求成功！**
- en: Next, we will create and attach a role to our EC2 instance to access the AWS
    Systems Manager.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建并将角色附加到我们的EC2实例，以便访问AWS Systems Manager。
- en: Creating and attaching a role for the AWS Systems Manager
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建并附加角色以使用AWS Systems Manager
- en: 'To use the AWS Systems Manager from an EC2 instance, we need to attach a role
    to an EC2 instance, as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要从EC2实例使用AWS Systems Manager，我们需要将角色附加到EC2实例，如下所示：
- en: Go to the **IAM** dashboard in the AWS Management Console.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到AWS管理控制台中的**IAM**仪表板。
- en: Click on **Roles** from the left sidebar and click on **Create role** .
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧边栏点击**角色**，然后点击**创建角色**。
- en: Under **Trusted entity type** , select **AWS service** , and select **EC2**
    from the list of services for **Service or** **use case** .
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**受信实体类型**下，选择**AWS服务**，然后从服务列表中选择**EC2**，作为**服务或使用案例**。
- en: Scroll down and select **EC2 Role for AWS Systems Manager** . Click **Next**
    .
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并选择**EC2角色用于AWS Systems Manager**。点击**下一步**。
- en: '![Figure 10.3 – Select trusted entity](image/B21384_10_3.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图10.3 – 选择受信实体](image/B21384_10_3.jpg)'
- en: Figure 10.3 – Select trusted entity
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – 选择受信实体
- en: On the **Add permissions** pane, click on **Next** .
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**添加权限**面板上，点击**下一步**。
- en: In the **Name, review, and create** page, for **Role name** , provide the **MySSMManInstanceRole**
    value, and for **Description** , provide the **Amazon SSM Managed Instance Core
    Role** value. Review the entire page and then click on **Create role** . We should
    see the message that the role was created successfully.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**名称、审核并创建**页面中，输入**角色名称**为**MySSMManInstanceRole**，**描述**为**Amazon SSM管理实例核心角色**。审核整个页面，然后点击**创建角色**。我们应该会看到角色创建成功的消息。
- en: Attach this role to our EC2 instance as we saw in the *Cross-service access
    via IAM roles on EC2 instances* recipe from [*Chapter 2*](B21384_02.xhtml#_idTextAnchor043)
    .
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如同在[《第2章》](B21384_02.xhtml#_idTextAnchor043)的*通过IAM角色在EC2实例上进行跨服务访问*一节中看到的那样，将此角色附加到我们的EC2实例。
- en: Retrieving parameters from the AWS Systems Manager Parameter Store
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从AWS Systems Manager参数存储中检索参数
- en: 'We can retrieve the parameter value from our EC2 instance. SSH into the EC2
    instance and run the following command:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从EC2实例中检索参数值。SSH进入EC2实例并运行以下命令：
- en: '[PRE0]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We should get a response like the following:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该会收到类似以下的响应：
- en: '![Figure 10.4 – Getting the parameter](image/B21384_10_4.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图10.4 – 获取参数](image/B21384_10_4.jpg)'
- en: Figure 10.4 – Getting the parameter
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4 – 获取参数
- en: The parameter value will be decrypted. We also have a **get-parameter** subcommand
    for the **aws ssm** CLI command; however, currently, the **AWS-provided AmazonEC2RoleForEC2**
    role does not include it. You can add the permission manually and then use **get-parameter**
    .
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 参数值将被解密。我们还有一个**get-parameter**子命令，用于**aws ssm** CLI命令；但是，当前**AWS提供的AmazonEC2RoleForEC2**角色不包括它。你可以手动添加权限，然后使用**get-parameter**。
- en: How it works...
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we created a parameter in the AWS Systems Manager Parameter
    Store and retrieved it. We can use the parameter from any service without needing
    to hardcode its values. Now, we can update the value for that parameter from one
    place.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们在AWS Systems Manager参数存储中创建了一个参数并检索了它。我们可以从任何服务中使用该参数，而无需硬编码其值。现在，我们可以从一个地方更新该参数的值。
- en: For retrieving and decrypting the parameter value that was encrypted, we used
    the **get-parameters** subcommand of the **aws ssm** CLI command with the **--with-decryption**
    option. The default is **--no-with-decryption** if none is specified and does
    not decrypt the value.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检索和解密加密的参数值，我们使用了**get-parameters**子命令，该命令是**aws ssm** CLI命令的一部分，并带有**--with-decryption**选项。如果未指定，则默认选项为**--no-with-decryption**，并且不会解密值。
- en: We can also create parameters without encryption by setting **Type** to **String**
    instead of **Secure String** .
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过将**类型**设置为**String**而不是**Secure String**来创建不加密的参数。
- en: There’s more...
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'In this recipe, we only used one of the features of the AWS Systems Manager,
    namely the Parameter Store. Let’s quickly go through some more important features
    of the AWS Systems Manager:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们只使用了AWS Systems Manager的一个功能，即参数存储。让我们快速浏览一下AWS Systems Manager的其他一些重要功能：
- en: AWS Systems Manager allows us to group resources such as EC2 instances, S3 buckets,
    and **Relational Database Service** ( **RDS** ) instances. After we’ve done this,
    we can perform actions, such as installing a patch across a group.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS Systems Manager允许我们将EC2实例、S3存储桶和**关系数据库服务**（**RDS**）实例等资源进行分组。完成此操作后，我们可以执行一些操作，例如在一组资源中安装补丁。
- en: We can use the parameter in the AWS Systems Manager Parameter Store from various
    services, such as EC2, Lambda, and CloudFormation. We can also use the parameter
    in a Systems Manager **run** command.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以在AWS系统管理器参数存储中使用该参数，来自不同的服务，如EC2、Lambda和CloudFormation。我们也可以在系统管理器的**run**命令中使用该参数。
- en: The **run** command can be used to automate admin tasks and configuration changes
    across a group of EC2 machines.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**run**命令可用于在一组EC2机器上自动执行管理任务和配置更改。'
- en: The EC2 role for a simple Systems Manager permits us to use the EC2 **run**
    command from our EC2 instances.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的系统管理器EC2角色允许我们从EC2实例上使用**run**命令。
- en: We can specify EC2 target instances manually or based on a tag attached to the
    EC2 instances.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以手动指定EC2目标实例或基于附加到EC2实例的标签来指定目标实例。
- en: When we configure a **run** command from the console, AWS provides us with the
    corresponding CLI command that we can run.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们从控制台配置**run**命令时，AWS会为我们提供相应的CLI命令，我们可以执行。
- en: For working with the **run** command, the SSM agent needs to be installed on
    the instances.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用**run**命令，需要在实例上安装SSM代理。
- en: We can use the **run** command to execute actions on on-premises systems as
    well.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还可以使用**run**命令对本地系统执行操作。
- en: See also
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: You can read more about the AWS Systems Manager at [https://www.cloudericks.com/blog/getting-started-with-aws-systems-manager-ssm](https://www.cloudericks.com/blog/getting-started-with-aws-systems-manager-ssm)
    .
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在[https://www.cloudericks.com/blog/getting-started-with-aws-systems-manager-ssm](https://www.cloudericks.com/blog/getting-started-with-aws-systems-manager-ssm)上阅读更多关于AWS系统管理器的信息。
- en: You can read more about using KMS with the AWS Systems Manager Parameter Store
    at [https://www.cloudericks.com/blog/using-aws-kms-with-aws-ssm-parameter-store](https://www.cloudericks.com/blog/using-aws-kms-with-aws-ssm-parameter-store)
    .
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在[https://www.cloudericks.com/blog/using-aws-kms-with-aws-ssm-parameter-store](https://www.cloudericks.com/blog/using-aws-kms-with-aws-ssm-parameter-store)上阅读更多关于将KMS与AWS系统管理器参数存储结合使用的信息。
- en: Using AWS Secrets Manager to manage RDS credentials
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AWS Secrets Manager管理RDS凭证
- en: In this recipe, we will learn to use AWS Secrets Manager to manage RDS credentials.
    This is a more secure alternative to managing and rotating the RDS credentials
    manually.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将学习如何使用AWS Secrets Manager管理RDS凭证。这是一种更安全的方式来管理和轮换RDS凭证，而不是手动操作。
- en: Getting ready
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'We need the following to successfully complete the recipe:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要以下内容才能成功完成本食谱：
- en: A working AWS account and a user as described in the *Technical* *requirements*
    section.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个有效的AWS账户和如*技术要求*部分所述的用户。
- en: 'An RDS database instance created in RDS with defaults, but with the following
    exceptions:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在RDS中创建的RDS数据库实例，采用默认设置，但有以下例外：
- en: For **Instance configuration** , select **serverless v2** to keep costs to the
    minimum.
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于**实例配置**，选择**无服务器v2**以保持最低成本。
- en: 'For **Credentials Settings** , provide values for **Master username** and **Master
    password** , as shown in the following figure:'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于**凭证设置**，请提供**主用户名**和**主密码**的值，如下图所示：
- en: '![Figure 10.5 – Credentials Settings for the RDS database](image/B21384_10_5.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.5 – RDS数据库的凭证设置](image/B21384_10_5.jpg)'
- en: Figure 10.5 – Credentials Settings for the RDS database
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5 – RDS数据库的凭证设置
- en: Important note
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: If we select the **Managed in AWS Secrets Manager** option in *Figure 10* *.5*
    , then RDS will generate a password and store it within the Secrets Manager without
    the need for the steps outlined in this recipe. However, we want to demonstrate
    storing secrets manually within this recipe and hence we selected the **Self**
    **managed** option.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在*图10* *5*中选择了**在AWS Secrets Manager中管理**选项，那么RDS将生成一个密码并将其存储在Secrets Manager中，而无需执行本食谱中列出的步骤。然而，我们希望演示如何手动存储密钥，因此选择了**自主管理**选项。
- en: How to do it...
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'We can configure AWS Secrets Manager to manage the credentials of an RDS database
    as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按如下方式配置AWS Secrets Manager来管理RDS数据库的凭证：
- en: Go to the **Secrets Manager** service in the AWS Management Console.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入AWS管理控制台中的**Secrets Manager**服务。
- en: From the left sidebar, click on **Secrets** . On the **Secrets** page, click
    on **Store a** **new secret** .
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧边栏，点击**Secrets**。在**Secrets**页面，点击**存储新密钥**。
- en: 'For **Secret type** , select **Credentials for Amazon RDS database** , as shown
    in the following figure:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**密钥类型**，选择**Amazon RDS数据库的凭证**，如下图所示：
- en: '![Figure 10.6 – Choosing a Secret type option in AWS Secrets Manager](image/B21384_10_6.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.6 – 在AWS Secrets Manager中选择密钥类型选项](image/B21384_10_6.jpg)'
- en: Figure 10.6 – Choosing a Secret type option in AWS Secrets Manager
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6 – 在 AWS Secrets Manager 中选择秘密类型选项
- en: Provide the values of **Master username** and **Master password** as **User
    name** and **Password** respectively.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **主用户名** 和 **主密码** 的值分别提供给 **用户名** 和 **密码** 字段。
- en: For the **Encryption key** option, select the default encryption key from the
    dropdown. We may also create a KMS encryption key following the recipes in [*Chapter
    3*](B21384_03.xhtml#_idTextAnchor088) and use it instead, but for this recipe,
    we will use the default one.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 **加密密钥** 选项，从下拉菜单中选择默认的加密密钥。我们也可以按照 [*第 3 章*](B21384_03.xhtml#_idTextAnchor088)
    中的食谱创建一个 KMS 加密密钥并使用它，但在此食谱中，我们将使用默认密钥。
- en: In the **Database** section select the database we created in the *Getting ready*
    section and click on **Next** .
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **数据库** 部分，选择我们在 *准备阶段* 创建的数据库并点击 **下一步**。
- en: Provide **prod/CloudericksApp/Postgres** for the **Secret name** field and **Access
    to Postgress prod database for the Cloudericks app** for the **Description** field.
    Optionally, add any tags and click **Next** .
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供 **prod/CloudericksApp/Postgres** 作为 **秘密名称** 字段的值，并提供 **Cloudericks 应用程序的
    Postgress 生产数据库访问权限** 作为 **描述** 字段的值。可选地，添加任何标签，然后点击 **下一步**。
- en: For **Configure automatic rotation** , enable **Automatic rotation** . Then,
    select **Schedule expression builder** for **Rotation schedule** , set **Time
    unit** to **Days** , and enter **30** for **Days** . For **Window duration – optional**
    , leave as default and select the checkbox for **Rotate immediately when the secret
    is stored. The next rotation will begin on** **your schedule** .
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 **配置自动轮换**，启用 **自动轮换**。然后，选择 **计划表达式生成器** 作为 **轮换计划**，将 **时间单位** 设置为 **天**，并将
    **天数** 设置为 **30**。对于 **窗口持续时间 - 可选**，保持默认选项，并选中 **在秘密存储时立即轮换。下一次轮换将在** **您的计划**
    上开始。
- en: '![Figure 10.7 – Configuring automatic rotation](image/B21384_10_7.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7 – 配置自动轮换](image/B21384_10_7.jpg)'
- en: Figure 10.7 – Configuring automatic rotation
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – 配置自动轮换
- en: In the **Rotation function** section, select **Create a rotation function**
    . For **Lambda rotation function** , provide the **postgres-rotation-lambda**
    name. Select **Single user** for **Rotation strategy** and click **Next** .
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **轮换函数** 部分，选择 **创建轮换函数**。对于 **Lambda 轮换函数**，提供 **postgres-rotation-lambda**
    名称。选择 **单用户** 作为 **轮换策略**，然后点击 **下一步**。
- en: '![Figure 10.8 – Configuring the rotation function](image/B21384_10_8.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.8 – 配置轮换函数](image/B21384_10_8.jpg)'
- en: Figure 10.8 – Configuring the rotation function
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – 配置轮换函数
- en: On the **Review** page, carefully review all the details. Additionally, sample
    code is provided for different languages, including Java, JavaScript, C#, Python3,
    Ruby, Go, and Rust, demonstrating how to retrieve the secret from our application,
    as shown in *Figure 10* *.9* . Finally, click **Store** .
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **审查** 页面，仔细检查所有详细信息。此外，还提供了不同语言的示例代码，包括 Java、JavaScript、C#、Python3、Ruby、Go
    和 Rust，演示如何从我们的应用程序中检索秘密，如 *图 10* *.9* 所示。最后，点击 **存储**。
- en: '![Figure 10.9 – Sample code to retrieve secrets from Secrets Manager](image/B21384_10_9.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.9 – 从 Secrets Manager 检索秘密的示例代码](image/B21384_10_9.jpg)'
- en: Figure 10.9 – Sample code to retrieve secrets from Secrets Manager
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – 从 Secrets Manager 检索秘密的示例代码
- en: Once we get the success message, go to the new secret to verify the details.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦收到成功消息，转到新秘密以验证详细信息。
- en: Scroll down and go to the **Overview** tab, and then click **Retrieve secret
    value** to view our secret. If you want to edit them, you can do so using the
    **Edit** button.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动并转到 **概述** 标签页，然后点击 **检索秘密值** 以查看我们的秘密。如果你想编辑它们，可以使用 **编辑** 按钮进行修改。
- en: If we want to delete a secret, we can go to the secret, click on the **Actions**
    dropdown, and click on **Delete secret** . We must specify a waiting period of
    between 7 and 30 days before the secret will be deleted.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们想删除一个秘密，可以进入该秘密，点击 **操作** 下拉菜单，然后点击 **删除秘密**。我们必须指定一个等待期，时间为 7 到 30 天之间，才能删除该秘密。
- en: How it works...
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'In this recipe, we stored credentials for our RDS database in Secrets Manager.
    For the secret type, we selected **Credentials for Amazon RDS database** . The
    following are the other secret type options currently available in the console:
    **Credentials for Redshift cluster** , **Credentials for DocumentDB database**
    , **Credentials for other database** , and **Other type of secrets** (e.g., API
    key).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将我们的 RDS 数据库凭证存储在 Secrets Manager 中。对于秘密类型，我们选择了 **Amazon RDS 数据库凭证**。以下是当前在控制台中可用的其他秘密类型选项：**Redshift
    集群凭证**、**DocumentDB 数据库凭证**、**其他数据库凭证** 和 **其他类型的秘密**（例如，API 密钥）。
- en: We enabled automatic key rotation with a duration of 30 days. We can also select
    60 days or 90 days, or provide a custom period up to 365 days. I selected the
    default encryption key for this recipe. Instead, you can use a KMS key you created.
    We learned about KMS keys in [*Chapter 3*](B21384_03.xhtml#_idTextAnchor088) .
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们启用了30天的自动密钥轮换。我们还可以选择60天或90天，或提供最多365天的自定义周期。我为此配方选择了默认加密密钥。您也可以使用您创建的KMS密钥。我们在[*第3章*](B21384_03.xhtml#_idTextAnchor088)中学习了有关KMS密钥的知识。
- en: After configuring a secret, our application can make an API call to Secrets
    Manager to retrieve the secret programmatically. While storing the secret, AWS
    provides us with sample code for different languages to retrieve the secret. Currently,
    there are sample codes for Java, JavaScript, C#, Python3, Ruby, Go, and Rust.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 配置秘密后，我们的应用程序可以通过Secrets Manager进行API调用，以编程方式检索秘密。在存储秘密时，AWS为我们提供了用于不同语言的示例代码以检索秘密。目前，Java、JavaScript、C＃、Python3、Ruby、Go和Rust均有示例代码。
- en: We saw a warning that the first rotation would happen immediately upon storing
    this secret. Therefore, if any of our applications are still using hardcoded credentials
    and are not updated to use the APIs to get the latest credentials, those applications
    will fail.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到警告称，此秘密存储后会立即进行第一次轮换。因此，如果我们的任何应用程序仍在使用硬编码凭据，并且未更新为使用API获取最新凭据，则这些应用程序将失败。
- en: There’s more...
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: 'AWS Secrets Manager may look like AWS Systems Manager Parameter Store. Let’s
    quickly compare Secrets Manager with Parameter Store:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Secrets Manager可能看起来像AWS Systems Manager参数存储。让我们快速比较Secrets Manager和参数存储：
- en: Secrets Manager is primarily used for storing database credentials, API keys,
    and SSH keys. Parameter Store is primarily used for storing license codes, configuration
    data, user-defined parameters, and database strings, and is less commonly used
    for passwords too.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Secrets Manager主要用于存储数据库凭据、API密钥和SSH密钥。参数存储主要用于存储许可证代码、配置数据、用户定义的参数和数据库字符串，并且较少用于密码。
- en: AWS Secrets Manager is charged per secret per month and per API call. AWS Systems
    Manager Parameter Store does not charge for standard parameters but charges us
    for advanced parameters based on the number of advanced parameters stored and
    per API interaction.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS Secrets Manager按秘密每月和每次API调用收费。AWS Systems Manager参数存储不收取标准参数的费用，但根据存储的高级参数数量和每次API交互收费高级参数。
- en: Secrets Manager has built-in integration with RDS databases. Secrets Manager
    supports the built-in rotation of secrets for RDS. It also supports the rotation
    of non-RDS databases using custom Lambda functions.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Secrets Manager具有与RDS数据库的内置集成。Secrets Manager支持对RDS进行秘密的内置轮换。它还支持使用自定义Lambda函数对非RDS数据库进行轮换。
- en: Parameter Store is integrated with AWS Systems Manager.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数存储已与AWS Systems Manager集成。
- en: See also
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Read more about the AWS Secrets Manager and Parameter Store comparison at [https://www.cloudericks.com/blog/comparing-aws-secrets-manager-and-parameter-store](https://www.cloudericks.com/blog/comparing-aws-secrets-manager-and-parameter-store)
    .
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://www.cloudericks.com/blog/comparing-aws-secrets-manager-and-parameter-store](https://www.cloudericks.com/blog/comparing-aws-secrets-manager-and-parameter-store)中阅读有关AWS
    Secrets Manager和Parameter Store的比较。
- en: Creating an AMI instead of using EC2 user data
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建AMI而不使用EC2用户数据
- en: In this recipe, we will create an AMI with a web server and then launch an instance
    from that AMI. Instances from AMIs have faster boot times than instances with
    the same configuration defined through EC2 user data. In the *Launching an EC2
    instance with a web server using user data* recipe from [*Chapter 5*](B21384_05.xhtml#_idTextAnchor169)
    , we used EC2 user data to update our operating system and set up a simple web
    server at launch.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，我们将创建一个带有Web服务器的AMI，然后从该AMI启动实例。从AMI创建的实例比通过EC2用户数据定义相同配置的实例具有更快的启动时间。在[*第5章*](B21384_05.xhtml#_idTextAnchor169)的*使用用户数据启动带Web服务器的EC2实例*配方中，我们使用EC2用户数据更新了操作系统并在启动时设置了简单的Web服务器。
- en: Getting ready
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'We need the following to successfully complete the recipe:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要以下内容才能成功完成该配方：
- en: A working AWS account and a user as described in the *Technical* *requirements*
    section.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按*技术要求*部分描述的工作AWS帐户和用户。
- en: A launched EC2 instance, launched following the *Launching an EC2 instance with
    a web server using user data* recipe in [*Chapter 5*](B21384_05.xhtml#_idTextAnchor169)
    .
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据[*第5章*](B21384_05.xhtml#_idTextAnchor169)中的*使用用户数据启动带Web服务器的EC2实例*配方启动的EC2实例。
- en: How to do it...
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'We can create an AMI from an EC2 instance as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从EC2实例创建AMI如下：
- en: Go to the **EC2** service in the console.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入控制台中的**EC2** 服务。
- en: Click on **Instances** , select our instance, click **Actions** , expand **Image
    and templates** , and then click **Create image** .
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**实例**，选择我们的实例，点击**操作**，展开**镜像和模板**，然后点击**创建镜像**。
- en: On the **Create image** screen, provide **Image name** and **Image description
    - optional** . Use the defaults for the other parameters and click on **Create
    image** .
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**创建镜像**屏幕上，提供**镜像名称**和**镜像描述 - 可选**。对于其他参数使用默认值，然后点击**创建镜像**。
- en: If we go to the AMIs list, our AMI should display its initial status as **Pending**
    . Once the status changes to **Available** , create a new instance from this AMI.
    While launching the instance, choose our AMI from the **My** **AMI** tab.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们进入 AMI 列表，我们的 AMI 应该显示其初始状态为**待处理**。一旦状态变为**可用**，就可以从这个 AMI 创建一个新实例。在启动实例时，从**我的**
    **AMI** 标签中选择我们的 AMI。
- en: How it works...
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we created an AMI from an EC2 instance. Information related
    to the launch of an instance, including any organization-specific configuration,
    can be saved into an AMI. We used Amazon Linux 2023 as our base AMI within this
    recipe and hence used commands that are specific to Amazon Linux 2023. If you
    are using Amazon Linux 2, you can also use the same commands.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们从一个 EC2 实例创建了一个 AMI。与启动实例相关的信息，包括任何特定于组织的配置，都可以保存到 AMI 中。我们在这个食谱中使用了
    Amazon Linux 2023 作为基础 AMI，因此使用了特定于 Amazon Linux 2023 的命令。如果你使用的是 Amazon Linux
    2，也可以使用相同的命令。
- en: We did a similar configuration in [*Chapter 5*](B21384_05.xhtml#_idTextAnchor169)
    using EC2 user data. Instances from AMIs have faster boot times than instances
    with the same configuration defined through EC2 user data. This is because we
    can have packages preinstalled in an AMI, whereas we need to install them at launch
    with user data.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第 5 章*](B21384_05.xhtml#_idTextAnchor169) 中使用 EC2 用户数据做了类似的配置。来自 AMI 的实例比通过
    EC2 用户数据定义的具有相同配置的实例具有更快的启动时间。这是因为我们可以在 AMI 中预安装软件包，而在启动时使用用户数据时需要安装它们。
- en: There’s more...
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Let’s quickly go through some important concepts related to AMIs:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览一些与 AMI 相关的重要概念：
- en: Multiple EC2 instances can be launched from a single AMI.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以从一个 AMI 启动多个 EC2 实例。
- en: AMIs are specific to a Region, but you can copy them across Regions. While launching
    an instance, we can choose between the AMIs suggested by Amazon, our own AMIs,
    AWS Marketplace AMIs, and community AMIs. We can also filter the list based on
    additional parameters.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AMI 是特定于某一地区的，但我们可以跨区域复制它们。在启动实例时，我们可以在 Amazon 提供的 AMI、我们自己的 AMI、AWS Marketplace
    AMI 和社区 AMI 之间进行选择。我们还可以根据其他参数筛选列表。
- en: We should only use public AMIs that we trust. We can check ratings for AMIs
    before using them.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们只应使用我们信任的公共 AMI。在使用 AMI 之前，我们可以检查其评分。
- en: AMIs are stored in S3. Hence, we will be charged based on S3 pricing, which
    is also dependent on our free tier eligibility and usage. However, we won’t be
    able to see the AMI or its bucket from the S3 console.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AMI 存储在 S3 中。因此，我们将根据 S3 定价收费，这也取决于我们的免费使用配额和使用情况。不过，我们将无法从 S3 控制台查看 AMI 或其存储桶。
- en: By default, AMIs are private for our account and Region. We can make our AMIs
    public for other AWS accounts to use or sell them through AWS Marketplace.
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，AMI 对我们的账户和区域是私有的。我们可以将 AMI 设置为公共，供其他 AWS 账户使用，或通过 AWS Marketplace 销售它们。
- en: See also
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: You can read more about AMIs at [https://www.cloudericks.com/blog/getting-started-with-amis-for-ec2-instances-in-aws](https://www.cloudericks.com/blog/getting-started-with-amis-for-ec2-instances-in-aws)
    .
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在 [https://www.cloudericks.com/blog/getting-started-with-amis-for-ec2-instances-in-aws](https://www.cloudericks.com/blog/getting-started-with-amis-for-ec2-instances-in-aws)
    阅读更多关于 AMI 的内容。
- en: Read more about AMI hardening at [https://www.cloudericks.com/blog/ami-hardening-for-ensuring-security-and-stability-in-our-aws-environment](https://www.cloudericks.com/blog/ami-hardening-for-ensuring-security-and-stability-in-our-aws-environment)
    .
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读更多关于 AMI 加固的内容，请访问 [https://www.cloudericks.com/blog/ami-hardening-for-ensuring-security-and-stability-in-our-aws-environment](https://www.cloudericks.com/blog/ami-hardening-for-ensuring-security-and-stability-in-our-aws-environment)。
- en: Using security products from AWS Marketplace
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用来自 AWS Marketplace 的安全产品
- en: In this recipe, we will learn to use various **security products** from AWS
    Marketplace. Many third-party companies will install and configure their products
    and solutions on EC2 instances and provide them as AMIs in AWS Marketplace. Marketplace
    AMIs can be considered EC2 instances with pre-configured software. Alternatively,
    we can also buy the products directly from these vendors and do the configurations
    on our own.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何使用AWS Marketplace中的各种**安全产品**。许多第三方公司会在EC2实例上安装和配置他们的产品和解决方案，并将它们作为AMI在AWS
    Marketplace上提供。Marketplace AMIs可以被视为预先配置软件的EC2实例。或者，我们也可以直接从这些供应商那里购买产品，并自行进行配置。
- en: Getting ready...
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪...
- en: We need a working AWS account, and a user as described in the *Technical* *requirements*
    section.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个可用的AWS账户，以及在*技术* *要求*部分中描述的用户。
- en: How to do it...
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'We can find and use security-related AMIs from AWS Marketplace as follows:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下步骤找到并使用AWS Marketplace中与安全相关的AMI：
- en: Go to the **EC2** service on the dashboard.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到仪表板上的**EC2**服务。
- en: Click on **Instances** from the left sidebar and click **Launch instances**
    .
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧边栏点击**实例**，然后点击**启动实例**。
- en: Under **Application and OS Images (Amazon Machine Image)** , click on **Browse**
    **more AMIs** .
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**应用程序和操作系统镜像（Amazon Machine Image）**下，点击**浏览更多AMI**。
- en: '![Figure 10.10 – Browsing AMIS from AWS Marketplace](image/B21384_10_10.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图10.10 – 从AWS Marketplace浏览AMIS](image/B21384_10_10.jpg)'
- en: Figure 10.10 – Browsing AMIS from AWS Marketplace
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.10 – 从AWS Marketplace浏览AMIS
- en: Go to the **AWS Marketplace AMIs** tab and search for **security** in the search
    bar. As of this writing, 10719 AMIs are available.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**AWS Marketplace AMIs**选项卡，在搜索栏中搜索**安全**。截至本文撰写时，有10719个AMI可用。
- en: '![Figure 10.11 – AWS Marketplace AMIs](image/B21384_10_11.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图10.11 – AWS Marketplace AMIs](image/B21384_10_11.jpg)'
- en: Figure 10.11 – AWS Marketplace AMIs
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.11 – AWS Marketplace AMIs
- en: We can further filter results based on parameters such as **Operating System**
    , **Software Free Trial** , **Software Pricing Plans** , and **Support** from
    the left sidebar. Once we decide on a product, we can follow the recipes within
    [*Chapter 5*](B21384_05.xhtml#_idTextAnchor169) , to complete launching the instance.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以根据左侧边栏的**操作系统**、**软件免费试用**、**软件定价计划**和**支持**等参数进一步筛选结果。一旦我们决定了一个产品，我们可以按照[*第5章*](B21384_05.xhtml#_idTextAnchor169)中的步骤，完成启动实例的过程。
- en: How it works...
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: AWS may not be able to provide all the security products we need. Many third-party
    companies have developed products and solutions that complement AWS services for
    security and compliance. We saw how to find such AMIs in AWS Marketplace. Once
    we decide on a product, we can launch an instance with that AMI. For more details
    about the particular product we selected, we can refer to the respective product’s
    documentation.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: AWS可能无法提供我们需要的所有安全产品。许多第三方公司开发了与AWS服务相辅相成的安全和合规解决方案。我们看到了如何在AWS Marketplace中找到这样的AMI。一旦我们决定了一个产品，我们可以使用该AMI启动一个实例。关于我们选择的特定产品的更多详细信息，我们可以参考相应产品的文档。
- en: There’s more...
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: '**Network packet inspection** , also referred to as **deep packet inspection**
    ( **DPI** ), inspects packet headers and data contents of packets to detect non-compliant
    data, viruses, spam, and so on, and can take actions such as blocking and logging.
    It combines the functionalities of a traditional firewall with an **intrusion
    detection system** ( **IDS** ) or an **intrusion prevention** **system** ( **IPS**
    ).'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络数据包检查**，也称为**深度数据包检查**（**DPI**），检查数据包头和数据包内容，以检测不符合规定的数据、病毒、垃圾邮件等，并可以采取阻止和记录等措施。它结合了传统防火墙的功能与**入侵检测系统**（**IDS**）或**入侵预防系统**（**IPS**）的功能。'
- en: '**AWS Web Application Firewall** ( **WAF** ), the firewall service in AWS,
    can check for known exploits such as SQL injection, cross-site scripting, and
    so on. However, AWS cannot do a complete network packet inspection and lacks the
    functionality of an IDS and IPS. We can, however, use solutions from AWS Marketplace.
    There are solutions provided by vendors including Alert Logic, Trend Micro, McAfee,
    Palo Alto Networks, and Cisco Systems, among others.'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS Web应用程序防火墙**（**WAF**），AWS中的防火墙服务，可以检查已知的漏洞，如SQL注入，跨站脚本等。然而，AWS无法进行完整的网络数据包检查，也缺乏IDS和IPS的功能。不过，我们可以使用AWS
    Marketplace中的解决方案。供应商包括Alert Logic、Trend Micro、McAfee、Palo Alto Networks和思科系统等。'
- en: See also
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: You can read about security products in AWS Marketplace at [https://www.cloudericks.com/blog/getting-started-with-aws-marketplace](https://www.cloudericks.com/blog/getting-started-with-aws-marketplace)
    .
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在AWS Marketplace中阅读有关安全产品的信息，网址为[https://www.cloudericks.com/blog/getting-started-with-aws-marketplace](https://www.cloudericks.com/blog/getting-started-with-aws-marketplace)。
- en: Using AWS Trusted Advisor for recommendations
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AWS可信顾问进行建议
- en: In this recipe, we will learn to use Trusted Advisor. **Trusted Advisor** is
    an online tool in AWS that provides recommendations related to cost optimizations,
    performance, security, fault tolerance, and service limits.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何使用可信顾问。**可信顾问**是AWS中提供与成本优化、性能、安全、容错性和服务限制相关建议的在线工具。
- en: Getting ready
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We need a working AWS account, and a user as described in the *Technical* *requirements*
    section.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个可用的AWS账户，以及*技术要求*部分所描述的用户。
- en: How to do it...
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We can use Trusted Advisor as follows:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下方式使用可信顾问：
- en: 'Go to the **Trusted Advisor** service in the AWS Management Console. We should
    see the **Recommendations** categories and basic recommendations on the dashboard
    landing page, as shown in the following figure:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到AWS管理控制台中的**可信顾问**服务。我们应该在仪表板登陆页面上看到**建议**类别和基本建议，如下图所示：
- en: '![Figure 10.12 – The Trusted Advisor dashboard](image/B21384_10_12.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.12 – 可信顾问仪表板](image/B21384_10_12.jpg)'
- en: Figure 10.12 – The Trusted Advisor dashboard
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.12 – 可信顾问仪表板
- en: Click on **Security** from the left sidebar to see recommendations related to
    security.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧边栏中的**安全**，查看与安全相关的建议。
- en: '![Figure 10.13 – The Security recommendation page](image/B21384_10_13.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.13 – 安全建议页面](image/B21384_10_13.jpg)'
- en: Figure 10.13 – The Security recommendation page
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.13 – 安全建议页面
- en: Click on **Download all checks** to download all checks or click on the download
    button for a recommendation to download the details of that recommendation.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下载所有检查**以下载所有检查，或者点击建议的下载按钮以下载该建议的详细信息。
- en: Click on **Refresh all checks** to download all checks or click on the refresh
    button for a recommendation to refresh the details of that recommendation.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**刷新所有检查**以下载所有检查，或者点击建议的刷新按钮以刷新该建议的详细信息。
- en: Click on **Service limits** from the left sidebar to see recommendations related
    to service limits such as services that use more than 80% of service quota.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧边栏中的**服务限制**，查看与服务限制相关的建议，例如使用超过服务配额80%的服务。
- en: Important note
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: As of this writing, except for **Security** and **Service limits** , all other
    recommendations are only available after upgrading. We can upgrade after clicking
    on **Recommendations** from the left sidebar or after going to any of the recommendation
    category options in the left sidebar except **Security** and **Service limits**
    .
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 截至本文撰写时，除了**安全**和**服务限制**之外，所有其他建议都需要升级才能使用。我们可以在点击左侧边栏中的**建议**或者在左侧边栏中的任何建议类别选项中除了**安全**和**服务限制**之外进行升级。
- en: How it works...
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Trusted Advisor provides recommendations related to cost optimizations, performance,
    security, fault tolerance, service limits, and operational excellence. There are
    two service levels: the Basic plan and the fully Trusted Advisor. The Basic plan
    is free and covers core checks and recommendations. Fully Trusted Advisor functionality
    is available for the Developer, Business, and Enterprise AWS support plans.'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 可信顾问提供与成本优化、性能、安全、容错性、服务限制和运营卓越相关的建议。有两种服务级别：基本计划和完全可信顾问。基本计划是免费的，涵盖核心检查和建议。完全可信顾问功能适用于开发者、商业和企业AWS支持计划。
- en: There’s more...
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The Trusted Advisor Basic plan currently has no recommendations available under
    cost optimization, performance, fault tolerance, and operational excellence. For
    these categories, recommendations are available only with the fully Trusted Advisor.
    For the **Security** and **Service limits** categories, some recommendations come
    with both the Basic plan as well as the full Trusted Advisor.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 可信顾问基本计划目前在成本优化、性能、容错性和运营卓越方面没有可用的建议。对于这些类别，只有完全可信顾问才提供建议。对于**安全**和**服务限制**类别，一些建议既适用于基本计划，也适用于完全可信顾问。
- en: See also
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: You can read more about Trusted Advisor at [https://www.cloudericks.com/blog/understanding-aws-trusted-advisor](https://www.cloudericks.com/blog/understanding-aws-trusted-advisor)
    .
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://www.cloudericks.com/blog/understanding-aws-trusted-advisor](https://www.cloudericks.com/blog/understanding-aws-trusted-advisor)了解更多关于
    Trusted Advisor 的信息。
- en: Using AWS Artifact for compliance reports
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS Artifact 进行合规性报告
- en: In this recipe, we will learn to use AWS Artifact. AWS Artifact is a free, self-service
    portal for accessing AWS’s compliance reports. AWS Artifact can be used to access
    AWS’s security and compliance reports and select online agreements.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何使用 AWS Artifact。AWS Artifact 是一个免费的自助门户，用于访问 AWS 的合规性报告。AWS Artifact
    可用于访问 AWS 的安全和合规性报告，并选择在线协议。
- en: Getting ready
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We need a working AWS account, and a user as described in the *Technical* *requirements*
    section.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个可用的 AWS 账户，以及在*技术* *要求*部分描述的用户。
- en: How to do it...
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We can use AWS Artifact as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下方式使用 AWS Artifact：
- en: Go to the **AWS Artifact** service in the console.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到控制台中的**AWS Artifact**服务。
- en: Click on **Reports** in the left sidebar to see the available reports.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧边栏中点击**报告**查看可用报告。
- en: '![Figure 10.14 – Reports from AWS Artifact](image/B21384_10_14.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.14 – AWS Artifact 的报告](image/B21384_10_14.jpg)'
- en: Figure 10.14 – Reports from AWS Artifact
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.14 – AWS Artifact 的报告
- en: Click **Agreements** in the left sidebar to see **Account agreements** and **Organization
    agreements** .
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧边栏中点击**协议**查看**账户协议**和**组织协议**。
- en: '![Figure 10.15 – Agreements](image/B21384_10_15.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.15 – 协议](image/B21384_10_15.jpg)'
- en: Figure 10.15 – Agreements
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.15 – 协议
- en: Tip
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: We can click on the **Organization agreements** tab from an organization’s master
    account to manage agreements for our master account and all member accounts in
    our organization.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从组织的主账户中点击**组织协议**选项卡，管理主账户和组织中所有成员账户的协议。
- en: Select any agreement and click on the **Download agreement** button to download
    the agreement. If an **Accept NDA to download report** message appears, we need
    to select the **I have read and agree to the all the terms of the** **NDA** checkbox.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择任何协议，然后点击**下载协议**按钮下载协议。如果出现**接受 NDA 下载报告**的消息，我们需要选择**我已阅读并同意所有 NDA 条款**复选框。
- en: '![img](image/B21384_10_16.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![img](image/B21384_10_16.jpg)'
- en: Click **Accept NDA** **and download** .
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**接受 NDA** **并下载**。
- en: '![Figure 10.16 – Accepting and downloading the report](image/B21384_10_17.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.16 – 接受并下载报告](image/B21384_10_17.jpg)'
- en: Figure 10.16 – Accepting and downloading the report
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.16 – 接受并下载报告
- en: How it works...
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'We’ve learned to use AWS Artifact for checking compliance reports. The following
    are some of the reports currently available with AWS Artifact: Accessibility Conformance
    Report (VPAT) – Amazon Cognito User Pool, HDS Certification in English, ABS Cloud
    Computing Implementation Guide 2.0 – Workbook, Accessibility Conformance Report
    (VPAT) – Amazon API Gateway, Accessibility Conformance Report (VPAT) – Amazon
    AppFlow, Accessibility Conformance Report (VPAT) – Amazon AppStream 2.0, Accessibility
    Conformance Report (VPAT) – Amazon Simple Queue Service, Accessibility Conformance
    Report (VPAT) – Amazon Simple Notification Service (SNS), and Accessibility Conformance
    Report (VPAT) – Amazon Simple Email Service (SES).'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学会使用 AWS Artifact 来检查合规性报告。以下是目前在 AWS Artifact 中可用的一些报告：可访问性符合性报告（VPAT）–
    Amazon Cognito 用户池，英文版 HDS 认证，ABS 云计算实施指南 2.0 – 工作簿，可访问性符合性报告（VPAT）– Amazon API
    网关，可访问性符合性报告（VPAT）– Amazon AppFlow，可访问性符合性报告（VPAT）– Amazon AppStream 2.0，可访问性符合性报告（VPAT）–
    Amazon 简单队列服务，可访问性符合性报告（VPAT）– Amazon 简单通知服务（SNS），以及可访问性符合性报告（VPAT）– Amazon 简单邮件服务（SES）。
- en: There’s more...
  id: totrans-236
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'We saw many AWS services within this book to help us secure our infrastructure
    on AWS. However, that is not an exhaustive list. AWS also constantly adds more
    services and features. Let’s quickly go through some more services related to
    security:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们看到了许多 AWS 服务，帮助我们在 AWS 上保护基础设施。然而，这并不是一个详尽的列表。AWS 还不断添加更多服务和功能。让我们快速浏览一些与安全相关的更多服务：
- en: '**Amazon Detective** is a service that can help in finding the root cause of
    potential security issues by analyzing and visualizing security data. As of this
    writing, this service is in preview.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon Detective** 是一个可以通过分析和可视化安全数据来帮助找到潜在安全问题根本原因的服务。截至本文撰写时，此服务处于预览阶段。'
- en: '**AWS Control Tower** helps us to set up and govern a multi-account AWS environment
    based on best practices related to security and compliance. End users can provision
    new accounts following the company-wide compliance policies centrally established,
    and the cloud administrators can see a complete overview of the landing zone.
    A landing zone is a container for all of our OUs, accounts, users, and other resources
    that need to be compliant. Landing zones should be in a non-member account of
    an organization.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS控制塔**帮助我们根据与安全和合规性相关的最佳实践建立和管理多账户AWS环境。最终用户可以根据公司范围内集中建立的合规性政策提供新账户，云管理员可以查看着陆区域的完整概述。着陆区域是所有需要合规的OU、账户、用户和其他资源的容器。着陆区域应该位于组织的非成员账户中。'
- en: '**AWS License Manager** helps us manage licenses from third-party vendors,
    such as Microsoft, Oracle, and SAP when we bring them to AWS. We can control their
    usage and even set customized rules on their usage for different groups of users.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS许可证管理器**帮助我们管理来自第三方供应商（如微软、甲骨文和SAP）的许可证，当我们将它们引入AWS时。我们可以控制它们的使用，甚至为不同用户组设置定制规则。'
- en: '**AWS Personal Health Dashboard** is a service available to customers with
    the Premium support plan to monitor, manage, and optimize their AWS environment.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS个人健康仪表板**是一项提供给高级支持计划客户的服务，用于监视、管理和优化他们的AWS环境。'
- en: '**AWS Well-Architected Tool** is a management service based on the AWS **Well-Architected
    Framework** . We can define workloads against current AWS best practices and this
    tool will provide guidance on how to improve our cloud architectures.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS良构架构工具**是基于AWS **良构架构框架**的管理服务。我们可以根据当前AWS最佳实践定义工作负载，这个工具将提供如何改进我们的云架构的指导。'
- en: See also
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: You can read about AWS Artifact at [https://www.cloudericks.com/blog/getting-started-with-aws-artifact](https://www.cloudericks.com/blog/getting-started-with-aws-artifact)
    .
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://www.cloudericks.com/blog/getting-started-with-aws-artifact](https://www.cloudericks.com/blog/getting-started-with-aws-artifact)了解关于AWS
    Artifact的信息。
