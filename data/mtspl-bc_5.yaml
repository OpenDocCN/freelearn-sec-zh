- en: Testing Services with Metasploit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit测试服务
- en: 'Let us now talk about testing the various specialized services. It is likely
    that during our career as a penetration tester we will come across a company or
    a testable environment that only requires testing to be performed on a particular
    server, and this server may run services such as databases, VoIP, or a SCADA control
    system. In this chapter, we will look at the various development strategies to
    use while carrying out penetration tests on these services. In this section, we
    will cover the following points:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们谈谈测试各种专门的服务。很可能在我们作为渗透测试人员的职业生涯中，我们会遇到一个只需要在特定服务器上执行测试的公司或可测试环境，而这个服务器可能运行数据库、VoIP或SCADA控制系统等服务。在本章中，我们将探讨在执行这些服务的渗透测试时使用的各种开发策略。在本节中，我们将涵盖以下几点：
- en: Carrying out database penetration tests
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行数据库渗透测试
- en: The fundamentals of ICS and their critical nature
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ICS的基础知识及其关键性质
- en: Understanding SCADA exploitation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解SCADA的利用
- en: Testing Voice over Internet Protocol services
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试互联网协议语音服务
- en: Service-based penetration testing requires exceptional skills and a sound knowledge
    of the services that we can successfully exploit. Therefore, in this chapter,
    we will look at both the theoretical and the practical challenges of carrying
    out efficient service-based testing.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 基于服务的渗透测试需要出色的技能和对我们可以成功利用的服务的深入了解。因此，在本章中，我们将探讨进行高效的基于服务的测试所面临的理论和实际挑战。
- en: Testing MySQL with Metasploit
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit测试MySQL
- en: It's well known that Metasploit supports extensive modules for Microsoft's SQL
    server. However, it supports a number of functionalities for other databases as
    well. We have plenty of modules for other databases in Metasploit that support
    popular databases, such as MySQL, PostgreSQL, and Oracle. In this chapter, we
    will cover Metasploit modules for testing a MySQL database.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 众所周知，Metasploit支持Microsoft的SQL服务器的广泛模块。但是，它也支持其他数据库的许多功能。我们在Metasploit中有许多其他数据库的模块，支持流行的数据库，如MySQL、PostgreSQL和Oracle。在本章中，我们将介绍用于测试MySQL数据库的Metasploit模块。
- en: If you are someone who comes across MSSQL more often, I have covered MSSQL testing
    with Metasploit in my *Mastering Metasploit* book series.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你经常遇到MSSQL，我在*精通Metasploit*图书系列中已经介绍了使用Metasploit进行MSSQL测试。
- en: 'Refer to MSSQL testing from the *Mastering Metasploit* book series at:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考*精通Metasploit*图书系列中的MSSQL测试：
- en: '[https://www.packtpub.com/networking-and-servers/mastering-metasploit-second-edition](https://www.packtpub.com/networking-and-servers/mastering-metasploit-second-edition)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.packtpub.com/networking-and-servers/mastering-metasploit-second-edition](https://www.packtpub.com/networking-and-servers/mastering-metasploit-second-edition)'
- en: 'So let''s conduct a port scan to see if a database has a target machine running
    on the IP address `172.28.128.3`, as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们进行端口扫描，看看数据库是否在IP地址`172.28.128.3`上运行，如下所示：
- en: '![](img/00087.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00087.jpeg)'
- en: We can clearly see we have port 3306 open, which is a standard port for the
    MySQL database.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以清楚地看到我们打开了端口3306，这是MySQL数据库的标准端口。
- en: Using Metasploit's mysql_version module
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit的mysql_version模块
- en: 'Let''s fingerprint the version of the MySQL instance by using the `mysql_version`
    module from `auxiliary/scanner/mysql`, as shown in the following screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`auxiliary/scanner/mysql`中的`mysql_version`模块来指纹识别MySQL实例的版本，如下截图所示：
- en: '![](img/00083.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00083.jpeg)'
- en: We can see that we have MYSQL 5.0.51a-3ubuntu5 running on the target.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们在目标上运行的是MYSQL 5.0.51a-3ubuntu5。
- en: Brute-forcing MySQL with Metasploit
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit对MySQL进行暴力破解
- en: 'Metasploit offers great brute-force modules for MySQL databases. Let''s use
    the `mysql_login` module to start testing for credentials, as shown in the following
    screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit为MySQL数据库提供了很好的暴力破解模块。让我们使用`mysql_login`模块开始测试凭据，如下面的截图所示：
- en: '![](img/00154.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00154.jpeg)'
- en: 'We can set the required options, which are `RHOSTS`, to the IP address of the
    target, then set `BLANK_PASSWORDS` to true and simply `run` the module as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以设置所需的选项，即`RHOSTS`为目标的IP地址，然后将`BLANK_PASSWORDS`设置为true，然后简单地`run`模块，如下所示：
- en: '![](img/00175.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00175.jpeg)'
- en: We can see that the database is running with the user as root with a blank password.
    While conducting on-site VAPT, you will often come across many database servers
    running with default credentials. In the next few sections, we will use these
    credentials to harvest more details about the target.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到数据库正在以root用户和空密码运行。在进行现场VAPT时，您经常会遇到许多使用默认凭据运行的数据库服务器。在接下来的几节中，我们将使用这些凭据来收集有关目标的更多详细信息。
- en: Finding MySQL users with Metasploit
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit查找MySQL用户
- en: 'Metasploit offers a `mysql_hashdump` module to gather details such as the USERNAME
    and PASSWORD hashes for the other users of the MySQL database. Let''s see how
    we can use this module:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit提供了一个`mysql_hashdump`模块，用于收集MySQL数据库的其他用户的用户名和密码哈希等详细信息。让我们看看如何使用这个模块：
- en: '![](img/00110.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00110.jpeg)'
- en: 'We just need to set `RHOSTS`; we can skip setting the PASSWORD since it''s
    blank. Let''s `run` the module:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要设置`RHOSTS`；我们可以跳过设置密码，因为它是空的。让我们`run`模块：
- en: '![](img/00114.jpeg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00114.jpeg)'
- en: We can see that we have four other users where only the user admin is password
    protected. Additionally, we can copy the hash and run it against password cracking
    tools to obtain clear text passwords.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到有四个其他用户，只有用户admin受到密码保护。此外，我们可以复制哈希并将其运行到密码破解工具中，以获得明文密码。
- en: Dumping the MySQL schema with Metasploit
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit转储MySQL模式
- en: 'We can also dump the entire MySQL schema with the `mysql_schemadump` module,
    as shown in the following screen:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`mysql_schemadump`模块转储整个MySQL模式，如下屏幕所示：
- en: '![](img/00097.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00097.jpeg)'
- en: 'We set the `USERNAME` and the `RHOSTS` option to `root` and `172.28.128.3`
    respectively and run the module as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将`USERNAME`和`RHOSTS`选项分别设置为`root`和`172.28.128.3`，然后运行模块，如下所示：
- en: '![](img/00270.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00270.jpeg)'
- en: We can see we have successfully dumped the entire schema to the `/root/msf/loot`
    directory, as shown in the preceding screenshot. Dumping the schema will give
    us a better view of the tables and the types of database running on the target,
    and will also help in building crafted SQL queries, which we will see in a short
    while.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们已成功将整个模式转储到`/root/msf/loot`目录中，如前面的屏幕截图所示。转储模式将为我们提供更好的表视图和目标上运行的数据库类型，并且还将有助于构建精心制作的SQL查询，我们将在短时间内看到。
- en: Using file enumeration in MySQL using Metasploit
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit在MySQL中进行文件枚举
- en: 'Metasploit offers the `mysql_file_enum` module to look for directories and
    files existing on the target. This module helps us figure out directory structures
    and the types of application running on the target''s end. Let''s see how we can
    run this module:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit提供了`mysql_file_enum`模块来查找目标上存在的目录和文件。该模块帮助我们弄清目录结构和目标端运行的应用程序类型。让我们看看如何运行这个模块：
- en: '![](img/00187.jpeg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00187.jpeg)'
- en: Primarily, we need to set the USERNAME, RHOSTS, and FILE_LIST parameters to
    make this module work on the target.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要设置USERNAME、RHOSTS和FILE_LIST参数，以使该模块在目标上运行。
- en: 'The `FILE_LIST` option will contain the path of the list of directories we
    want to check. We created a simple file at `/root/desktop/` with the name file
    and put three entries in it, namely /var, /var/www, and /etc/passwd. Let''s run
    the module and analyze the results as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`FILE_LIST` 选项将包含我们想要检查的目录列表的路径。我们在`/root/desktop/`创建了一个简单的文件，名为file，并在其中放入了三个条目，即/var、/var/www和/etc/passwd。让我们运行模块并分析结果如下：'
- en: '![](img/00068.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00068.jpeg)'
- en: We can see that all the directories we checked exist on the target system, thus
    giving us a better view of the directory structure and key files on the destination
    end.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们检查的所有目录都存在于目标系统上，从而为我们提供了目录结构和目标端关键文件的更好视图。
- en: Checking for writable directories
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查可写目录
- en: 'Metasploit also provides a `mysql_writable_dirs` module that helps to figure
    out writable directories on the target. We can run this module in a similar way
    as we did with the previous modules by setting the DIR_LIST option to our file
    containing the list of directories, along with the RHOSTS and USERNAME options,
    as shown in the following screen:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit还提供了一个`mysql_writable_dirs`模块，用于查找目标上的可写目录。我们可以通过将DIR_LIST选项设置为包含目录列表的文件，以及设置RHOSTS和USERNAME选项的方式来运行此模块，就像我们之前使用其他模块一样，如下图所示：
- en: '![](img/00105.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00105.jpeg)'
- en: 'Setting all the options, let''s run the module on the target and analyze the
    results as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 设置所有选项，让我们在目标上运行模块并分析结果，如下所示：
- en: '![](img/00138.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00138.jpeg)'
- en: We can see that in /var/www/html the /tmp/ directories are writable. We will
    look at how we can make use of the writable directories in a short while.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在`/var/www/html`中，`/tmp/`目录是可写的。我们将看看如何在短时间内利用可写目录。
- en: Enumerating MySQL with Metasploit
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit进行MySQL枚举
- en: 'A particular module to use for the detailed enumeration of the MySQL database
    also exists in Metasploit. The module `auxiliary/admin/mysql/mysql_enum` single-handedly
    provides a ton of information for many of the modules. Let''s use this module
    to gain information about the target as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit中还存在一个用于详细枚举MySQL数据库的特定模块。`auxiliary/admin/mysql/mysql_enum`模块单独为许多模块提供了大量信息。让我们使用这个模块来获取有关目标的信息，如下所示：
- en: '![](img/00144.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00144.jpeg)'
- en: 'Setting the `RHOSTS`, `USERNAME`, and `PASSWORD` (if not blank) options, we
    can run the module as shown in the preceding screenshot. We can see that the module
    has gathered a variety of information, such as the server hostname, data directory,
    logging state, SSL information, and privileges, as shown in the following screen:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 设置`RHOSTS`、`USERNAME`和`PASSWORD`（如果不为空）选项，我们可以像前面的屏幕截图所示的那样运行模块。我们可以看到模块已经收集了各种信息，例如服务器主机名、数据目录、日志状态、SSL信息和权限，如下图所示：
- en: '![](img/00177.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00177.jpeg)'
- en: Having gathered enough information about the database, let us also execute some
    interesting SQL queries on the target in the next section.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 已经收集了关于数据库的足够信息，让我们在下一节中还执行一些有趣的SQL查询。
- en: Running MySQL commands through Metasploit
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Metasploit运行MySQL命令
- en: 'Now that we have information regarding the database schema, we can run any
    SQL command using the `auxiliary/admin/mysql/mysql_sql` module, as shown in the
    following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经获得了关于数据库模式的信息，我们可以使用`auxiliary/admin/mysql/mysql_sql`模块运行任何SQL命令，如下图所示：
- en: '![](img/00206.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00206.jpeg)'
- en: Providing the SQL command using the SQL option, we can run any MySQL command
    on the target. However, we will obviously require setting the `RHOST`, `USERNAME`,
    and `PASSWORD` options as well.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通过设置SQL选项提供SQL命令，我们可以在目标上运行任何MySQL命令。但是，我们显然还需要设置`RHOST`、`USERNAME`和`PASSWORD`选项。
- en: Gaining system access through MySQL
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过MySQL获得系统访问权限
- en: 'We just saw how we could run SQL queries through MySQL. Let''s run some interesting
    and dangerous queries to obtain complete access to the machine, as shown in the
    following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚看到了如何通过MySQL运行SQL查询。让我们运行一些有趣且危险的查询，以获取对机器的完全访问权限，如下面的屏幕截图所示：
- en: '![](img/00240.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00240.jpeg)'
- en: 'In the preceding screenshot, we set the SQL option to the select "<?php phpinfo()
    ?>" INTO OUTFILE "/var/www/html/a.php" command and ran the module against the
    target. This command will write the text <?php phpinfo() ?> to a file named a.php
    at path /var/www/html/a.php. We can confirm the successful execution of the module
    by browsing to the file through the browser, as shown in the following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，我们将SQL选项设置为select "<?php phpinfo() ?>" INTO OUTFILE "/var/www/html/a.php"命令，并针对目标运行了模块。此命令将文本<?php
    phpinfo() ?>写入名为a.php的文件，路径为/var/www/html/a.php。我们可以通过浏览器确认模块的成功执行，如下图所示：
- en: '![](img/00255.jpeg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00255.jpeg)'
- en: 'Bingo! We have successfully managed to write a file on the target. Let''s enhance
    this attack vector by writing a `<?php system($_GET[''cm'']);?>` string into an
    another file called `b.php` in the same directory. Once written, this file will
    receive system commands using the `cm` parameter and will execute them using the
    system function in PHP. Let''s send this command as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们已成功在目标上写入文件。让我们通过将`<?php system($_GET['cm']);?>`字符串写入同一目录中的另一个名为`b.php`的文件来增强这个攻击向量。一旦写入，该文件将使用`cm`参数接收系统命令，并使用PHP中的系统函数执行它们。让我们按照以下方式发送这个命令：
- en: '![](img/00241.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00241.jpeg)'
- en: To escape double quotes, we will use backslash in the SQL command.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免双引号，我们将在SQL命令中使用反斜杠。
- en: 'Running the module, we can now verify the existence of the `b.php` file through
    the browser as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 运行模块，我们现在可以通过浏览器验证`b.php`文件的存在，如下所示：
- en: '![](img/00146.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00146.jpeg)'
- en: We can see that providing a system command such as `cat/etc/password` as a parameter
    to the `b.php` file outputs the content of the `/etc/passwd` file on the screen,
    denoting a successful remote code execution.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，将系统命令（例如`cat/etc/password`）作为`b.php`文件的参数输出`/etc/passwd`文件的内容到屏幕上，表示成功的远程代码执行。
- en: 'To gain system access, we can quickly generate a Linux meterpreter payload
    and can host it on our machine as we did for the examples in the earlier chapters.
    Let''s download our meterpreter payload to the target by supplying the `wget`
    command followed by the path of our payload in the `cm` parameter, as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得系统访问权限，我们可以快速生成一个Linux meterpreter有效载荷，并像在前几章中那样将其托管在我们的机器上。让我们通过提供`wget`命令，后跟我们有效载荷的路径和`cm`参数，将我们的meterpreter有效载荷下载到目标，如下所示：
- en: '![](img/00172.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00172.jpeg)'
- en: 'We can verify whether the file was downloaded successfully to the target by
    issuing the `ls` command as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过发出`ls`命令来验证文件是否成功下载到目标位置：
- en: '![](img/00189.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00189.jpeg)'
- en: 'Yup, our file was downloaded successfully. Let''s provide the necessary permissions
    as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我们的文件已成功下载。让我们按照以下方式提供必要的权限：
- en: '![](img/00230.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00230.jpeg)'
- en: 'We performed a `chmod 777` to the `29.elf` file, as shown in the preceding
    screenshot. We will need to set up a handler for the Linux meterpreter as we did
    with our previous examples. However, make sure that the handler is running before
    issuing the command to execute the binary. Let''s execute the binary through the
    browser as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对`29.elf`文件执行了`chmod 777`，如前面的屏幕截图所示。我们需要为Linux meterpreter设置一个处理程序，就像我们之前的例子一样。但是，在执行命令来执行二进制文件之前，请确保处理程序正在运行。让我们通过浏览器执行二进制文件，如下所示：
- en: '![](img/00252.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00252.jpeg)'
- en: Yeah! We got the meterpreter access to the target and can now perform any post-exploitation
    functions we choose.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 是的！我们已经获得了对目标的meterpreter访问，并且现在可以执行我们选择的任何后期利用功能。
- en: In the case of a privileged user other than root, we can provide `+x` instead
    of `777` while using the `chmod` command.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于除root之外的特权用户，我们可以在使用`chmod`命令时使用`+x`而不是`777`。
- en: Refer to *Chapter 5* from the book *Mastering Metasploit* for more on testing
    MSSQL databases.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 有关测试MSSQL数据库的更多信息，请参阅书籍《精通Metasploit》的*第5章*。
- en: Always make a note of all the backdoors left on the server throughout any entire
    penetration test so that a proper cleanup can be performed by the end of the engagement.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 始终记录在整个渗透测试过程中在服务器上留下的所有后门，以便在参与结束时可以进行适当的清理。
- en: The fundamentals of SCADA
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SCADA的基础知识
- en: '**Supervisory Control and Data Acquisition** (**SCADA**) is required for controlling
    activities in dams, power grid stations, oil refineries, large server control
    services, and so on.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**监控和数据采集**（**SCADA**）用于控制大坝、电网站、炼油厂、大型服务器控制服务等活动。'
- en: SCADA systems are built for highly specific tasks, such as controlling the level
    of dispatched water, managing the gas lines, controlling the electricity power
    grid to monitor power in a particular city, and various other operations.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: SCADA系统是为非常具体的任务而构建的，例如控制分派水的水平、管理天然气管道、控制电力网格以监视特定城市的电力以及各种其他操作。
- en: Analyzing security in SCADA systems
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在SCADA系统中分析安全性
- en: In this section, we will discuss how we can breach the security of SCADA systems.
    We have plenty of frameworks that can test SCADA systems, but discussing them
    will push us beyond the scope of this book. Therefore, keeping it simple, we will
    restrict our discussion to SCADA exploitation only, carried out using Metasploit.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何突破SCADA系统的安全性。我们有很多框架可以测试SCADA系统，但讨论它们将使我们超出本书的范围。因此，简单起见，我们将限制我们的讨论仅限于使用Metasploit进行SCADA利用。
- en: The fundamentals of testing SCADA
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试SCADA的基础知识
- en: Let us understand the basics of exploiting SCADA systems. SCADA systems can
    be compromised using a variety of exploits in Metasploit, which were added recently
    to the framework. Also, some of the SCADA servers that are located might have
    the default username and password; this is rarely the case these days, but there
    still might be a possibility that the username and password are unchanged in the
    target server.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解如何利用SCADA系统的基础知识。SCADA系统可以使用Metasploit中最近添加到框架中的各种漏洞进行攻击。此外，一些位于SCADA服务器上的默认用户名和密码可能是默认的；这在当今很少见，但仍然可能存在用户名和密码在目标服务器上未更改的可能性。
- en: 'Let us try finding some SCADA servers. We can achieve this by using an excellent
    resource—[http://www.shodanhq.com](http://www.shodanhq.com):'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试找到一些SCADA服务器。我们可以通过使用一个很好的资源[http://www.shodanhq.com](http://www.shodanhq.com)来实现这一点：
- en: First, we need to create an account for the Shodan website.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要为Shodan网站创建一个帐户。
- en: After registering, we can simply find our API key for the Shodan services within
    our account. Obtaining the API key, we can search for various services through
    Metasploit.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册后，我们可以在我们的帐户中轻松找到Shodan服务的API密钥。获取API密钥后，我们可以通过Metasploit搜索各种服务。
- en: Let us try to find the SCADA systems configured with technologies from Rockwell
    Automation using the `auxiliary/gather/shodan_search` module.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们尝试使用`auxiliary/gather/shodan_search`模块找到配置了Rockwell Automation技术的SCADA系统。
- en: 'In the `QUERY` option, we will just type in `Rockwell`, as shown in the following
    screenshot:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`QUERY`选项中，我们将只输入`Rockwell`，如下截图所示：
- en: '![](img/00265.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00265.jpeg)'
- en: 'We set the `SHODAN_APIKEY` option to the API key found in our Shodan account.
    Let us put the `QUERY` option as `Rockwell` and analyze the results as follows:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将`SHODAN_APIKEY`选项设置为我们Shodan账户中找到的API密钥。让我们将`QUERY`选项设置为`Rockwell`并分析结果如下：
- en: '![](img/00263.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00263.jpeg)'
- en: As we can clearly see, we have found a large number of systems on the Internet
    running SCADA services with Rockwell Automation by using the Metasploit module.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们清楚地看到的，我们使用Metasploit模块找到了许多在互联网上运行Rockwell Automation的SCADA服务的系统。
- en: SCADA-based exploits
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于SCADA的利用
- en: Over the last few years, SCADA systems have been exploited at much higher rates
    than in previous years. SCADA systems may suffer from various kinds of vulnerabilities,
    such as stack-based overflow, integer overflow, cross-site scripting, and SQL
    injection.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年中，SCADA系统的被利用率比以往任何时候都要高。SCADA系统可能受到各种漏洞的影响，如基于堆栈的溢出、整数溢出、跨站脚本和SQL注入。
- en: Moreover, the impact of these vulnerabilities may cause danger to life and property,
    as we have discussed before. The reason why hacking SCADA devices is possible
    is largely due to both the fact that SCADA developers and operators have programmed
    the system without a focus on security and the fact that the operating procedures
    used are inadequate.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这些漏洞的影响可能对生命和财产造成危险，正如我们之前讨论的那样。黑客攻击SCADA设备可能的原因主要是因为SCADA开发人员和操作人员在编程系统时没有关注安全性，以及使用的操作程序不足。
- en: Let us see an example of a SCADA service and try to exploit it with Metasploit.
    However, please do not pick a random host from Shodan and try exploiting it. SCADA
    systems are very critical and can result in some serious prison time. Anyway,
    in the following example, we will exploit the DATAC RealWin SCADA Server 2.0 system
    based on a Windows XP system using Metasploit.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个SCADA服务的例子，并尝试使用Metasploit进行利用。但是，请不要随意选择Shodan上的主机并尝试利用它。SCADA系统非常关键，可能导致严重的监禁时间。无论如何，在以下示例中，我们将使用Metasploit在基于Windows
    XP系统的DATAC RealWin SCADA Server 2.0系统上进行利用。
- en: The service runs on port 912, which is vulnerable to buffer overflow in the
    sprintf C function. The sprintf function is used in the DATAC RealWin SCADA server's
    source code to display a particular string constructed from the user input. The
    vulnerable function, when abused by the attacker, can lead to full compromise
    of the target system.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务在端口912上运行，该端口对sprintf C函数的缓冲区溢出存在漏洞。sprintf函数在DATAC RealWin SCADA服务器的源代码中用于显示从用户输入构造的特定字符串。当攻击者滥用这个有漏洞的函数时，可能会导致目标系统被完全攻陷。
- en: 'Let us try exploiting the DATAC RealWin SCADA Server 2.0 system with Metasploit
    by using the `exploit/windows/scada/realwin_scpc_initialize` exploit as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试使用`exploit/windows/scada/realwin_scpc_initialize`利用来利用DATAC RealWin SCADA
    Server 2.0系统。
- en: '![](img/00267.jpeg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00267.jpeg)'
- en: 'We set the `RHOST` as `192.168.10.108` and the `payload` as `windows/meterpreter/bind_tcp`.
    The default port for DATAC RealWin SCADA is `912`. Let us exploit the target and
    check whether we can `exploit` the vulnerability:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将`RHOST`设置为`192.168.10.108`，`payload`设置为`windows/meterpreter/bind_tcp`。DATAC
    RealWin SCADA的默认端口是`912`。让我们利用目标并检查我们是否可以`exploit`这个漏洞：
- en: '![](img/00272.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00272.jpeg)'
- en: 'Bingo! We successfully exploited the target. Let us load the `mimikatz` extension
    using the `load` command to find the system''s password in clear text, as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！我们成功地利用了目标。让我们使用`load`命令加载`mimikatz`扩展，以找到系统的明文密码，如下所示：
- en: '![](img/00275.jpeg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00275.jpeg)'
- en: We can see that by issuing a `kerberos` command, we can locate the password
    in clear text.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，通过发出`kerberos`命令，我们可以找到明文密码。
- en: We have plenty of exploits in Metasploit that specifically target vulnerabilities
    in SCADA systems. To find out more information about these vulnerabilities, you
    can refer to the greatest resource on the web for SCADA hacking and security at
    [http://www.scadahacker.com](http://www.scadahacker.com). You should be able to
    see many exploits listed under the *msf-scada* section at [http://scadahacker.com/resources/msf-scada.html](http://scadahacker.com/resources/msf-scada.html).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在Metasploit中有很多专门针对SCADA系统漏洞的利用。要了解有关这些漏洞的更多信息，您可以参考网络上关于SCADA黑客和安全的最佳资源[http://www.scadahacker.com](http://www.scadahacker.com)。您应该能够在[http://scadahacker.com/resources/msf-scada.html](http://scadahacker.com/resources/msf-scada.html)的*msf-scada*部分下找到许多列出的利用。
- en: The website [http://www.scadahacker.com](http://www.scadahacker.com) has maintained
    a list of vulnerabilities found in various SCADA systems over the past few years.
    The beauty of the list lies in the fact that it provides precise information about
    the SCADA product, the vendor of the product, the systems component, Metasploit
    reference module, disclosure details, and the first Metasploit module disclosure
    dates as well.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 网站[http://www.scadahacker.com](http://www.scadahacker.com)在过去几年中一直在维护着各种SCADA系统中发现的漏洞列表。这个列表的美妙之处在于它提供了关于SCADA产品、产品供应商、系统组件、Metasploit参考模块、披露细节以及第一个Metasploit模块披露日期的精确信息。
- en: Implementing secure SCADA
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施安全的SCADA
- en: 'Securing SCADA is a tough job when it has to be applied practically; however,
    we can look for some of the following key points when securing SCADA systems:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当实际应用时，保护SCADA是一项艰巨的工作；然而，当保护SCADA系统时，我们可以寻找以下一些关键点：
- en: Keep an eye on every connection made to SCADA networks and figure out whether
    any unauthorized attempts were made to access the system
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密切关注对SCADA网络的每一次连接，并查明是否有任何未经授权的尝试访问系统
- en: Make sure that all the network connections are disconnected when they are not
    required, and, if the SCADA systems are air gapped, that any other endpoint that
    eventually connects to it is secured and scrutinized in the same manner
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保在不需要时断开所有网络连接，并且如果SCADA系统是空气隔离的，那么最终连接到它的任何其他端点都必须以相同的方式进行安全和审查
- en: Implement all the security features provided by the system vendors
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施系统供应商提供的所有安全功能
- en: Implement IDPS technologies for both internal and external systems and apply
    incident monitoring for 24 hours
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为内部和外部系统实施IDPS技术，并应用24小时的事件监控
- en: Document all the network infrastructure and provide individual roles to administrators
    and editors
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录所有网络基础设施，并为管理员和编辑分配个人角色
- en: Establish IR teams and blue teams for identifying attack vectors on a
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立IR团队和蓝队来识别对一个
- en: regular basis
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 定期
- en: Restricting networks
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制网络
- en: Network connectivity can be made limited in the event of attacks related to
    unauthorized access, unwanted open services, and so on. Implementing this solution
    by removing or uninstalling services is the best possible defense against various
    SCADA attacks.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在未经授权访问、不需要的开放服务等攻击事件发生时，可以限制网络连接。通过删除或卸载服务来实施这一解决方案是对各种SCADA攻击的最佳防御。
- en: SCADA systems are implemented on Windows XP boxes, and this increases the attack
    surface significantly. If you are applying SCADA systems, make sure your Windows
    boxes are up to date to prevent the more common attacks.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: SCADA系统部署在Windows XP系统上，这显著增加了攻击面。如果您正在应用SCADA系统，请确保您的Windows系统是最新的，以防止更常见的攻击。
- en: Testing Voice over Internet Protocol services
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试互联网协议语音服务
- en: Let us now focus on testing **Voice over Internet Protocol** (**VoIP**)-enabled
    services and see how we can check for various flaws that might affect VoIP services.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们专注于测试**互联网协议语音**（**VoIP**）启用的服务，并看看我们如何检查可能影响VoIP服务的各种缺陷。
- en: VoIP fundamentals
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VoIP基础知识
- en: VoIP is a much less costly technology when compared to the traditional telephonic
    services. VoIP provides much more flexibility than traditional telephony in terms
    of telecommunication, and offers various features, such as multiple extensions,
    caller ID services, logging, the recording of each call made, and so on. Some
    companies now have their **Private Branch exchange** (**PBX**) on IP-enabled phones
    these days.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统电话服务相比，VoIP是一种成本更低的技术。VoIP在电信方面比传统电话更加灵活，并提供各种功能，如多个分机、来电显示服务、日志记录、每通电话的录音等。一些公司现在在IP电话上有他们的**私有分支交换**（**PBX**）。
- en: The traditional and still-present telephonic system is still vulnerable to interception
    through physical access, such that if an attacker alters the connection of a phone
    line and attaches their transmitter, they will be able to make and receive calls
    to their device and can enjoy Internet and fax services.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的电话系统仍然容易通过物理访问进行窃听，如果攻击者改变电话线的连接并连接他们的发射器，他们将能够使用他们的设备拨打和接听电话，并享受互联网和传真服务。
- en: However, in the case of VoIP services, we can compromise security without going
    on to the wires. Nevertheless, attacking VoIP services is a tedious task if you
    do not have a basic knowledge of how it works. This section sheds light on how
    we can compromise VoIP in a network without intercepting the wires.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在VoIP服务的情况下，我们可以在不进入线路的情况下破坏安全。然而，如果您对其工作原理没有基本的了解，攻击VoIP服务是一项繁琐的任务。本节介绍了我们如何在网络中破坏VoIP而不拦截线路。
- en: Additionally, in the hosted services-type VoIP technology, there is no PBX at
    the client premises. However, all the devices at the client premises connect to
    the PBX of the service provider via the Internet—that is, by using **Session Initiation
    Protocol** (**SIP**) lines using IP/VPN technologies.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在托管服务类型的VoIP技术中，客户端处没有PBX。然而，客户端处的所有设备通过互联网连接到服务提供商的PBX，即通过使用IP/VPN技术使用**会话初始协议**（**SIP**）线路。
- en: 'Let us see how this technology works with the help of the following diagram:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下图表如何解释这项技术：
- en: '![](img/00155.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00155.jpeg)'
- en: 'Many SIP service providers on the Internet provide connectivity for softphones,
    which can be used directly to enjoy VoIP services. Also, we can use any client
    softphone to access the VoIP services, such as Xlite, as shown in the following
    screenshot:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上有许多SIP服务提供商为软电话提供连接，可以直接使用以享受VoIP服务。此外，我们可以使用任何客户端软电话来访问VoIP服务，如Xlite，如下面的屏幕截图所示：
- en: '![](img/00006.gif)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00006.gif)'
- en: Fingerprinting VoIP services
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指纹识别VoIP服务
- en: We can fingerprint VoIP devices over a network using the SIP scanner modules
    built into Metasploit. A commonly known SIP scanner is the **SIP endpoint scanner**
    that is built into Metasploit. We can use this scanner to identify devices that
    are SIP enabled on a network by issuing the request for options from the various
    SIP services.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Metasploit内置的SIP扫描器模块对网络上的VoIP设备进行指纹识别。一个常见的SIP扫描器是内置在Metasploit中的**SIP终端扫描器**。我们可以使用这个扫描器通过向各种SIP服务发出选项请求来识别网络上启用SIP的设备。
- en: Let us carry on with scanning VoIP services using the options auxiliary module
    under
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续使用辅助模块下的选项来扫描VoIP服务
- en: '`/auxiliary/scanner/sip` and analyze the results. The target here is a Windows
    XP system with the Asterisk PBX VoIP client running. We start by loading the auxiliary
    module for scanning SIP services over a network, as shown in the following screenshot:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`/auxiliary/scanner/sip`并分析结果。目标是运行Asterisk PBX VoIP客户端的Windows XP系统。我们首先加载用于扫描网络上的SIP服务的辅助模块，如下面的屏幕截图所示：'
- en: '![](img/00061.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00061.jpeg)'
- en: 'We can see that we have plenty of options that we can use with the `auxiliary/scanner/sip/options`
    auxiliary module. We need to configure only the `RHOSTS` option. However, for
    a vast network, we can define the IP ranges with the **Classless Inter-domain
    Routing** (**CIDR**) identifier. Once run, the module will start scanning for
    IPs that may be using SIP services. Let us run this module as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，我们有很多选项可以与`auxiliary/scanner/sip/options`辅助模块一起使用。我们只需要配置`RHOSTS`选项。然而，对于庞大的网络，我们可以使用**无类域间路由**（**CIDR**）标识符定义IP范围。运行后，该模块将开始扫描可能正在使用SIP服务的IP。让我们按照以下方式运行此模块：
- en: '![](img/00239.jpeg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00239.jpeg)'
- en: As we can clearly see, when this module runs, it returns a lot of information
    related to the IPs that are using SIP services. This information contains the
    agent denoting the name and version of the PBX and verbs, which define the type
    of requests supported by the PBX. Hence, we can use this module to gather a lot
    of knowledge about the SIP services on the network.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们可以清楚地看到的那样，当此模块运行时，它返回了许多与使用SIP服务的IP相关的信息。这些信息包含了代理，表示PBX的名称和版本，以及动词，定义了PBX支持的请求类型。因此，我们可以使用此模块来收集关于网络上SIP服务的大量知识。
- en: Scanning VoIP services
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描VoIP服务
- en: 'After finding out information about the various option requests supported by
    the target, let us now scan and enumerate the users of the VoIP services using
    another Metasploit module—namely `auxiliary/scanner/sip/enumerator`. This module
    will search for VoIP services over a target range and will try to enumerate its
    users. Let us see how we can achieve this:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在找到目标支持的各种选项请求的信息后，让我们现在使用另一个Metasploit模块`auxiliary/scanner/sip/enumerator`来扫描和枚举VoIP服务的用户。这个模块将在目标范围内搜索VoIP服务，并尝试枚举其用户。让我们看看我们如何实现这一点：
- en: '![](img/00032.jpeg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00032.jpeg)'
- en: 'We now have listed the options that we can use with this module. We will now
    set some of the following options to run this module successfully:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经列出了可以与此模块一起使用的选项。我们现在将设置一些以下选项以成功运行此模块：
- en: '![](img/00271.jpeg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00271.jpeg)'
- en: As we can see, we have set the `MAXEXT`, `MINEXT`, `PADLEN`, and `RHOSTS` options.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，我们已经设置了`MAXEXT`，`MINEXT`，`PADLEN`和`RHOSTS`选项。
- en: In the enumerator module used in the preceding screenshot, we defined `MINEXT`
    and `MAXEXT` as `3000` and `3005` respectively. `MINEXT` is the extension number
    to start the search from, and `MAXEXT` refers to the last extension number to
    complete the search on. These options can be set for a gigantic range—such as
    `MINEXT` to `0` and `MAXEXT` to `9999`—to find out the various users using VoIP
    services on extension numbers `0` to `9999`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面截图中使用的enumerator模块中，我们将`MINEXT`和`MAXEXT`分别定义为`3000`和`3005`。`MINEXT`是开始搜索的分机号，`MAXEXT`是完成搜索的最后一个分机号。这些选项可以设置为巨大的范围，比如`MINEXT`设置为`0`，`MAXEXT`设置为`9999`，以找出在分机号`0`到`9999`上使用VoIP服务的各种用户。
- en: 'Let us run this module on a target range by setting the `RHOSTS` variable to
    the CIDR value, as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将此模块在目标范围上运行，将`RHOSTS`变量设置为CIDR值，如下所示：
- en: '![](img/00021.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00021.jpeg)'
- en: 'Setting `RHOSTS` as `192.168.65.0/24` will scan the entire subnet. Now, let
    us run this module and see what output it presents:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 将`RHOSTS`设置为`192.168.65.0/24`将扫描整个子网。现在，让我们运行此模块，看看它呈现了什么输出：
- en: '![](img/00069.jpeg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00069.jpeg)'
- en: This search returned many users using SIP services. Also, the effect of `MAXEXT`
    and `MINEXT` was that only the users from the extensions `3000` to `3005` were
    scanned. An extension can be thought of as a standard address for users in a particular
    network.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这次搜索返回了许多使用SIP服务的用户。此外，`MAXEXT`和`MINEXT`的影响是只扫描了从`3000`到`3005`的分机用户。分机可以被视为特定网络中用户的标准地址。
- en: Spoofing a VoIP call
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 伪造VoIP呼叫
- en: 'Having gained enough knowledge about the various users using SIP services,
    let us try making a fake call to the user using Metasploit. Assuming that the
    target user is running SipXphone 2.0.6.27 on a Windows XP platform, let us send
    the user a fake invite request using the `auxiliary/VoIP/sip_invite_spoof` module,
    as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在获得关于使用SIP服务的各种用户的足够知识后，让我们尝试使用Metasploit向用户发起一个虚假呼叫。假设目标用户在Windows XP平台上运行SipXphone
    2.0.6.27，让我们使用`auxiliary/VoIP/sip_invite_spoof`模块发送一个虚假的邀请请求给用户，如下所示：
- en: '![](img/00077.jpeg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00077.jpeg)'
- en: We will set the RHOSTS option with the IP address of the target and the EXTENSION
    as 4444 for the target. Let us keep SRCADDR to 192.168.1.1, which will spoof the
    address source making the call.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用目标的IP地址设置RHOSTS选项，并将EXTENSION设置为目标的4444。让我们将SRCADDR保持为192.168.1.1，这将伪装呼叫的源地址。
- en: 'Let us now `run` the module as follows:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在按照以下方式`run`该模块：
- en: '![](img/00131.jpeg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00131.jpeg)'
- en: 'Let us see what is happening on the victim''s side:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看受害者那边发生了什么：
- en: '![](img/00160.jpeg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00160.jpeg)'
- en: We can clearly see that the softphone is ringing and displaying the caller as
    192.168.1.1, and is also displaying the predefined message from Metasploit.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以清楚地看到软电话正在响铃，并显示呼叫者为192.168.1.1，并且还显示了来自Metasploit的预定义消息。
- en: Exploiting VoIP
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用VoIP
- en: 'To gain complete access to the system, we can try exploiting the softphone
    software as well. We have the target''s IP address from the previous scenarios.
    Let us scan and exploit it with Metasploit. However, there are specialized VoIP
    scanning tools available within Kali operating systems that are specifically designed
    to test VoIP services only. The following is a list of applications that we can
    use to exploit VoIP services:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完全访问系统，我们也可以尝试利用软电话软件。我们已经从之前的情景中得到了目标的IP地址。让我们用Metasploit来扫描和利用它。然而，在Kali操作系统中有专门设计用于测试VoIP服务的专用VoIP扫描工具。以下是我们可以用来利用VoIP服务的应用程序列表：
- en: Smap
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Smap
- en: Sipscan
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sipscan
- en: Sipsak
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sipsak
- en: VoiPong
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VoiPong
- en: Svmap
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Svmap
- en: Coming back to the exploitation part of this exercise, we have some of the exploits
    in Metasploit that can be utilized on softphones. Let us look at an example of
    this.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 回到这个练习的利用部分，我们在Metasploit中有一些可以用于软电话的利用。让我们看一个例子。
- en: 'The application that we are going to exploit here is SipXphone version 2.0.6.27\.
    This application''s interface may look similar to the following screenshot:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要利用的应用程序是SipXphone版本2.0.6.27。该应用程序的界面可能类似于以下截图：
- en: '![](img/00179.jpeg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00179.jpeg)'
- en: About the vulnerability
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于漏洞
- en: The vulnerability lies in the handling of the Cseq value by the application.
    Sending an overlong string causes the application to crash, and in most cases,
    it will allow the attacker to run malicious code and gain access to the system.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞存在于应用程序对Cseq值的处理中。发送一个过长的字符串会导致应用程序崩溃，并且在大多数情况下，它将允许攻击者运行恶意代码并访问系统。
- en: Exploiting the application
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用应用程序
- en: 'Let us now exploit the SipXphone version 2.0.6.27 application with Metasploit.
    The exploit that we are going to use here is `exploit/windows/sip/sipxphone_cseq`.
    Let us load this module into Metasploit and set the required options:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们利用Metasploit来exploit SipXphone版本2.0.6.27应用程序。我们要使用的exploit是`exploit/windows/sip/sipxphone_cseq`。让我们将这个模块加载到Metasploit中，并设置所需的选项：
- en: '![](img/00208.jpeg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00208.jpeg)'
- en: 'We need to set the values for `RHOST`, `LHOST`, and `payload`. As everything
    is now set, let us `exploit` the target application as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要设置`RHOST`、`LHOST`和`payload`的值。现在一切都设置好了，让我们像下面这样`exploit`目标应用程序：
- en: '![](img/00242.jpeg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00242.jpeg)'
- en: Voila! We got the meterpreter in no time at all. Hence, exploiting VoIP with
    Metasploit can be easy in the case of software-based bugs. However, when testing
    VoIP devices and other service-related bugs, we can use third-party tools for
    adequate testing.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！我们很快就得到了meterpreter。因此，利用Metasploit进行VoIP的exploit在软件漏洞的情况下可能很容易。然而，在测试VoIP设备和其他与服务相关的漏洞时，我们可以使用第三方工具进行充分的测试。
- en: An excellent resource for testing VoIP can be found at [http://www.viproy.com](http://www.viproy.com).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 测试VoIP的一个很好的资源可以在[http://www.viproy.com](http://www.viproy.com)找到。
- en: Summary and exercises
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结和练习
- en: 'Throughout this chapter, we saw how we could test MySQL databases, VoIP services,
    and SCADA systems for a number of vulnerabilities. We saw how an attacker gaining
    access to just the database could end up having system-level access. We also saw
    how vulnerabilities in ICS and SCADA can lead an attacker to compromise an entire
    server, which may result in enormous damage, and we saw how PBX deployed in various
    companies can be used not only to spoof calls but to compromise the whole client
    system. To practice your skills, you can perform the following further exercises
    at your own pace:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了如何测试MySQL数据库、VoIP服务和SCADA系统的多个漏洞。我们看到了攻击者只要获得数据库访问权限就可能最终获得系统级别的访问权限。我们还看到了ICS和SCADA中的漏洞如何导致攻击者
    compromise整个服务器，这可能导致巨大的损害，我们还看到了部署在各个公司的PBX不仅可以用于欺骗电话，还可以 compromise整个客户端系统。为了练习你的技能，你可以按照自己的节奏进行以下进一步的练习：
- en: Try testing MSSQL and PostgreSQL databases and make a note of the modules.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试测试MSSQL和PostgreSQL数据库，并记下模块。
- en: Download other software-based SCADA systems and try exploiting them locally.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载其他基于软件的SCADA系统，并尝试在本地exploit它们。
- en: Try to run system commands for MSSQL.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试为MSSQL运行系统命令。
- en: Resolve error 13 on MySQL for writing files onto the server.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决MySQL写入服务器时的错误13。
- en: The database testing covered in this chapter was performed on Metasploitable
    2\. Try setting up the same environment locally and repeat the exercise.
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章涵盖的数据库测试是在Metasploitable 2上执行的。尝试在本地设置相同的环境并重复练习。
- en: In the last five chapters, we covered a variety of modules, exploits, and services,
    which took a good amount of time. Let's look at how we can speed up the process
    of testing with Metasploit in [Chapter 6](part0114.html#3CN040-a731d733dba14ccabae643b74e2c8790),
    *Fast-Paced Exploitation with Metasploit*.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的五章中，我们涵盖了各种模块、exploits和服务，这花费了大量的时间。让我们看看如何在[第6章](part0114.html#3CN040-a731d733dba14ccabae643b74e2c8790)中使用Metasploit加速测试过程，*Fast-Paced
    Exploitation with Metasploit*。
