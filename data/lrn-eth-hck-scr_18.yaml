- en: Website Pentesting - Information Gathering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网站渗透测试 - 信息收集
- en: In this chapter, we are going to focus on various techniques to gather information
    about the client using the `Whois` command, Netcraft, and Robtex. Then, we will
    see how we can attack a server by targeting websites that are hosted on that server.
    Moving toward the information gathering section, we are going to learn about subdomains
    and how they they can be useful for performing attacks. Later, we are going to
    look for files on the target system to gather some information and also analyze
    that data.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章节中，我们将专注于使用 `Whois` 命令、Netcraft 和 Robtex 等工具来收集客户信息的各种技巧。接着，我们将学习如何通过针对托管在该服务器上的网站来攻击服务器。进入信息收集部分后，我们将学习子域名以及它们在执行攻击时的作用。之后，我们将搜索目标系统中的文件，以收集一些信息并分析这些数据。
- en: 'The following topics are covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节将涵盖以下主题：
- en: Information gathering
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信息收集
- en: Website on the same server
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同一服务器上的网站
- en: Information gathering form target websites
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从目标网站收集信息
- en: Information gathering using tools
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用工具进行信息收集
- en: Now, as we saw in the previous chapter how gathering information about the client
    will help us to launch attacks on victims, in this section, we are going to be
    using commands such as Whois, and tools such as Netcraft and Robtex to gather
    information from target systems.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在上一章节所见，了解客户的相关信息将有助于我们对受害者发动攻击，在本节中，我们将使用诸如 Whois 等命令，以及 Netcraft 和 Robtex
    等工具，从目标系统收集信息。
- en: The Whois Lookup
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Whois 查找
- en: The first thing we do before we start trying to exploit or find any vulnerabilities
    is information gathering. Therefore, we try to gather as much information as possible
    about the target, and web applications are no different. We're going to start
    by trying to get as much information as we can about the target IP address, the
    domain name info, the technology that is used on the website, which programming
    language is used, what kind of server is installed on it, and what kind of database
    is being used. We're going to gather information about the company and its DNS
    records, and we'll also see if we can find any files that are not listed, or any
    subdomains that are not visible to other people. Now, we can use any of the information
    gathering tools that we used before; for example, we can use Maltego and just
    insert an entity as a website, and then start running actions. It's exactly the
    same as we did with a normal person, in [Chapter 11](ed4df884-d2d6-4c71-a1a4-28e4a508ed19.xhtml),
    *Client Side Attacks - Social Engineering*. We can also use Nmap, or even Nexpose,
    and test the infrastructure of the website and see what information we can gather
    from that. Again, we won't be going over that because we've seen it in previous
    chapters. There is no difference between a website or a normal computer—as we
    know, a website is just another computer. So, what we are going to be focusing
    on are technologies that we will only see on websites, such as domain names, DNS
    records, and stuff like that, that we either won't be able to use or haven't seen
    before in the previous chapters.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始尝试利用或寻找任何漏洞之前，首先要做的是信息收集。因此，我们尽可能多地收集关于目标的信息，网络应用程序也不例外。我们将从尽可能收集目标 IP 地址、域名信息、网站使用的技术、编程语言、安装的服务器类型以及使用的数据库类型开始。我们还将收集有关公司及其
    DNS 记录的信息，并查看能否找到任何未列出的文件，或者任何其他人无法看到的子域名。现在，我们可以使用之前使用过的任何信息收集工具；例如，我们可以使用 Maltego，只需将实体设置为网站，然后开始执行操作。这和我们在[第11章](ed4df884-d2d6-4c71-a1a4-28e4a508ed19.xhtml)中对普通人进行的操作*客户端攻击
    - 社会工程学*完全相同。我们还可以使用 Nmap，甚至 Nexpose，测试网站的基础设施，看看能从中收集到什么信息。再次强调，我们不会在本章详细讲解这些，因为之前章节已经介绍过了。网站和普通计算机没有区别——正如我们所知，网站只不过是另一台计算机。所以，我们将专注于在网站上才能看到的技术，例如域名、DNS
    记录等，这些内容是我们在之前的章节中没有接触过或无法使用的。
- en: Now, the first thing that we're going to have a look at is Whois Lookup. Whois
    Lookup is a protocol that's used to find the owners of internet resources, for
    example, a server, an IP address, or a domain. So, we're not actually hacking;
    we're literally just retrieving info from a database that contains information
    about owners of stuff on the internet. So, for example, when we sign up for a
    domain name, if we wanted to register a domain name, for example, za1d.com, when
    we do that, we have to supply information about the person who is signing in,
    the address, and then the domain name will be stored in our name and people will
    see that Zaid owns the domain name. That is all we're going to do.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们首先要了解的是 Whois 查找。Whois 查找是一种用于查找互联网资源所有者的协议，例如服务器、IP 地址或域名。因此，我们并不是真正在进行黑客攻击；我们仅仅是从一个包含互联网资源所有者信息的数据库中检索信息。例如，当我们注册域名时，如果我们想注册一个域名，比如
    za1d.com，当我们这样做时，我们需要提供关于注册人的信息、地址，然后该域名将会登记在我们的名下，其他人就能看到 Zaid 拥有这个域名。这就是我们要做的所有事情。
- en: If we google Whois Lookup, we will see a lot of websites providing the service,
    so we will use [http://whois.domaintools.com/](http://whois.domaintools.com/),
    [enter our target domain name, `isecurity.org`, and press Search:](http://whois.domaintools.com/)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们搜索 Whois 查找，我们会看到很多提供此服务的网站，因此我们将使用 [http://whois.domaintools.com/](http://whois.domaintools.com/)，[输入我们的目标域名
    `isecurity.org`，然后点击搜索：](http://whois.domaintools.com/)
- en: '![](assets/7fb19dd6-55dd-4948-84cf-8afbf703b6c2.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7fb19dd6-55dd-4948-84cf-8afbf703b6c2.png)'
- en: 'As we can see in the following screenshot, we get a lot of information about
    our target website:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，我们可以获取到关于目标网站的大量信息：
- en: '![](assets/a03e1a73-2e8e-4f98-88e2-897643826552.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a03e1a73-2e8e-4f98-88e2-897643826552.png)'
- en: We can see the email address that we can use to contact the domain name info.
    Usually, we will be able to see the address of the company that has registered
    the domain name, but we can see that this company is using privacy on their domain;
    but if they haven't, that is, if they're not using privacy, we will be able to
    see their address and more information about the actual company.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到可以用来联系域名信息的电子邮件地址。通常，我们会看到注册域名的公司的地址，但我们可以看到该公司在其域名上使用了隐私保护；但如果他们没有使用隐私保护，也就是说，如果他们没有启用隐私保护，我们将能够看到他们的地址以及关于实际公司的更多信息。
- en: We can see when the domain name was created, and we can see the IP Address of
    `isecur1ty.org`. If we ping the IP, we should get the same IP address as mentioned
    in the preceding screenshot.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到域名创建的时间，并且可以看到 `isecur1ty.org` 的 IP 地址。如果我们 ping 该 IP，我们应该得到与前面截图中提到的相同的
    IP 地址。
- en: 'If we run `ping www.isecur1ty.org`, the same IP address is returned:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们运行 `ping www.isecur1ty.org`，会返回相同的 IP 地址：
- en: '![](assets/cac971d0-c79f-42cf-bb77-064ad109ad0f.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cac971d0-c79f-42cf-bb77-064ad109ad0f.png)'
- en: We can see the IP Location, we can see the Domain Status, and we can also access
    the History, but we need to register for that. Now, again, we can use this information
    to find exploits.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 IP 位置，可以看到域名状态，我们还可以访问历史记录，但需要注册才能查看。现在，我们可以利用这些信息来寻找漏洞。
- en: 'In the following screenshot, in the Whois Record, we can find more information
    about the company that registered this domain:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的截图中，在 Whois 记录中，我们可以找到更多关于注册此域名的公司的信息：
- en: '![](assets/b6464299-a43d-4903-ba99-283d6dd2c3f1.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b6464299-a43d-4903-ba99-283d6dd2c3f1.png)'
- en: This is basic information, but it's very helpful in the long run, just to know
    what our target is, what their IP is, and what services they are using. We can
    also see the name servers that are being used and we can see which company they
    are provided by.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是基本信息，但从长远来看，它非常有帮助，能让我们了解目标是什么、它们的 IP 是什么，以及它们使用了哪些服务。我们还可以看到所使用的名称服务器，以及这些服务器由哪家公司提供。
- en: Netcraft
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Netcraft
- en: 'In this section, we are going to learn how to get information about the technologies
    used by the target website. We''re going to use a website called Netcraft ([https://www.netcraft.com](https://www.netcraft.com)),
    and we''re going to put the target address, select our target as `isecur1ty.org`,
    and click on the arrow:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将学习如何获取关于目标网站所使用技术的信息。我们将使用一个名为 Netcraft 的网站（[https://www.netcraft.com](https://www.netcraft.com)），然后输入目标地址，选择我们的目标
    `isecur1ty.org`，并点击箭头：
- en: '![](assets/fe67198d-5022-43e7-a2f6-36a78a804572.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fe67198d-5022-43e7-a2f6-36a78a804572.png)'
- en: 'After, click on Site Report:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击站点报告：
- en: '![](assets/214d352f-8b3e-4596-9304-3fe6339e6bda.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/214d352f-8b3e-4596-9304-3fe6339e6bda.png)'
- en: 'In the following screenshot, we can see some basic information, such as the
    Site title, a Description, Keywords, and when the website was created:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到一些基本信息，例如站点标题、描述、关键词以及网站创建的时间：
- en: '![](assets/7e4ec4da-8a0b-4727-93a1-5959939b1b06.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7e4ec4da-8a0b-4727-93a1-5959939b1b06.png)'
- en: 'Scrolling down further, we can see the website itself, the Domain, the IP address,
    and just as we saw in the previous section, the Domain registrar, which is the
    company who registered the domain for isecur1ty:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 再向下滚动，我们可以看到网站本身，域名，IP 地址，就像我们在前一部分看到的那样，域名注册商是为 isecur1ty 注册域名的公司：
- en: '![](assets/49278c3f-45b5-498f-8d00-3e0feb81c2d6.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/49278c3f-45b5-498f-8d00-3e0feb81c2d6.png)'
- en: In the preceding screenshot, we would normally see information about the organization,
    but here, we can't , because isecur1ty is using privacy protection. Usually, we
    should be able to see such information and even more.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们通常能看到有关组织的信息，但在这里我们看不到，因为 isecur1ty 正在使用隐私保护。通常，我们应该能够看到这些信息，甚至更多。
- en: In the preceding screenshot we can see that it's hosted in the UK, we can see
    the **Nameserver**, which is `ns1.digitalocean.com`, and again, if we just go
    to `ns1.digitalocean.com`, we will discover that this is a website for web hosting.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到它托管在英国，我们可以看到**Nameserver**，它是 `ns1.digitalocean.com`，再一次，如果我们直接访问
    `ns1.digitalocean.com`，我们会发现这是一个提供网站托管的服务。
- en: Now, we know this is a web hosting company, and in worst-case scenarios we can
    use this or try to hack into `ns1.digitalocean.com` itself to gain access to isecur1ty.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们知道这是一个网站托管公司，在最坏的情况下，我们可以利用这个信息，或者尝试黑入 `ns1.digitalocean.com` 本身，以获得对 isecur1ty
    的访问权限。
- en: 'Scrolling down further, we will see the Hosting History of the hosting companies
    that isecur1ty used, and we can see that the latest one is running on Linux with
    Apache, the same server that we saw in the previous section, 2.2.31 with Unix
    mod_ssl and all the other add-ons:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 继续向下滚动，我们将看到 isecur1ty 使用的托管公司的托管历史，我们可以看到最新的托管服务是在 Linux 上运行，使用 Apache，和我们在前一部分看到的一样，版本是
    2.2.31，并且带有 Unix mod_ssl 和其他所有附加组件：
- en: '![](assets/917674b4-4c65-4f39-be3c-79926dce3069.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/917674b4-4c65-4f39-be3c-79926dce3069.png)'
- en: 'Again, this is very important to find vulnerabilities and exploits on our target
    computer:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，找到目标计算机的漏洞和利用方式非常重要：
- en: 'Scrolling down to Web Trackers, it will show us the third-party resources or
    applications used on our target, so we can see that our target uses Google, MaxCDN,
    and other Google services. This could also help us to find or gain access to the
    target computer:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动到 Web Trackers，它将显示我们目标使用的第三方资源或应用程序，因此我们可以看到我们的目标使用了 Google、MaxCDN 和其他
    Google 服务。这也可能帮助我们找到或获得对目标计算机的访问：
- en: '![](assets/9fdc3766-d29f-4749-86ff-ade16326c583.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9fdc3766-d29f-4749-86ff-ade16326c583.png)'
- en: 'The Technology tab is one of the most important tabs or sections in here, because
    it shows us the technologies used on the target website:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: “技术”标签是这里最重要的标签或部分之一，因为它向我们展示了目标网站使用的技术：
- en: '![](assets/3c6f3dbb-1b71-4549-8407-ad4d007b5f72.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3c6f3dbb-1b71-4549-8407-ad4d007b5f72.png)'
- en: We can see in the preceding screenshot it's using the Apache web server, and
    on the Server-Side, we can see that the website uses PHP, which means the website
    can understand and run PHP code. This is very important because, in the future,
    if we manage to run any kind of code on our target, then we know the code should
    be sent as PHP code. To create payloads on Metasploit or on Veil-Evasion, we should
    create them in PHP format and the target website will be able to run them because
    it supports PHP. On the Client-Side, we can see in the preceding screenshot that
    the website supports JavaScript, so if we run JavaScript, or if we manage to run
    JavaScript code on the website, it won't be executed on the website; it will be
    executed on the users side who are viewing the website, because JavaScript is
    a client-side language and PHP is server-side. If we manage to run PHP code, it
    will be executed on the server itself. If we manage to run JavaScript, it will
    be executed on the users or the peoples machine who visit the website. It's the
    same with jQuery. This is just a framework for JavaScript.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在上面的截图中看到它正在使用 Apache Web 服务器，在服务器端，我们可以看到该网站使用了 PHP，这意味着该网站能够理解并运行 PHP
    代码。这一点非常重要，因为如果我们将来能够在目标上运行任何类型的代码，我们就知道代码应该以 PHP 代码的形式发送。要在 Metasploit 或 Veil-Evasion
    上创建有效载荷，我们应该以 PHP 格式创建它们，目标网站能够运行它们，因为它支持 PHP。在客户端，我们可以在前面的截图中看到该网站支持 JavaScript，所以如果我们运行
    JavaScript，或者我们成功在网站上运行 JavaScript 代码，它不会在网站上执行，而是在查看网站的用户的设备上执行，因为 JavaScript
    是客户端语言，而 PHP 是服务器端语言。如果我们成功运行 PHP 代码，它将直接在服务器上执行。如果我们成功运行 JavaScript，它将在访问该网站的用户的机器上执行。jQuery
    也是如此，它只是 JavaScript 的一个框架。
- en: 'Scrolling down, we can see in the following screenshot that the website uses
    WordPress Self-Hosted software. This is very important. Netcraft will also show
    any web applications being used on the website:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动，我们可以在以下截图中看到该网站使用了 WordPress 自托管软件。这一点非常重要。Netcraft 还会显示网站上使用的任何 Web 应用程序：
- en: '![](assets/ad727726-d9a1-45b8-bafd-d08f64dac3f0.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ad727726-d9a1-45b8-bafd-d08f64dac3f0.png)'
- en: WordPress is just a web application, so we could see other examples in our case,
    and it's an open source web application, there are a lot of other websites might
    have. The good thing is we can go and find exploits or vulnerabilities within
    the web application. If we are lucky enough to find an existing one, then we can
    go ahead and exploit it on the target website. For example, we have WordPress
    in our example, so if we go to [https://www.exploit-db.com/](https://www.exploit-db.com/)
    and search for WordPress, we'll manage to find lot of exploits related to WordPress.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress 只是一个 Web 应用程序，因此我们可以看到我们案例中的其他示例，它是一个开源 Web 应用程序，可能有许多其他网站也在使用。幸运的是，我们可以去查找
    Web 应用程序中的漏洞或弱点。如果我们足够幸运找到现有的漏洞，我们就可以在目标网站上利用它。例如，在我们的示例中我们使用的是 WordPress，所以如果我们去
    [https://www.exploit-db.com/](https://www.exploit-db.com/) 搜索 WordPress，我们会发现很多与
    WordPress 相关的漏洞。
- en: 'There are different versions of WordPress. We need to make sure that we have
    the same version as our target. We''ll look at examples to see how to use exploits,
    but it just shows how powerful information gathering is. Scrolling further, we
    can also find other information, such as that the website uses HTML5 and CSS,
    and all that kind of stuff:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress 有不同的版本。我们需要确保我们和目标使用的是相同的版本。我们将通过示例来查看如何利用漏洞，但这只是展示了信息收集的强大功能。继续向下滚动，我们还可以找到其他信息，比如该网站使用了
    HTML5 和 CSS 等内容：
- en: '![](assets/d11444af-49be-4359-b930-797edecd4d73.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d11444af-49be-4359-b930-797edecd4d73.png)'
- en: Hence, Netcraft is really useful for getting to know the website. We gathered
    information regarding the site—that it runs on PHP, and runs JavaScript. It uses
    WordPress, so we can use WordPress to hack into the website, and if we scroll
    up, we also discovered the web hosting of the website. Therefore, in worst-case
    scenarios, we can try to hack into a web hosting server and gain access to our
    target website.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Netcraft 对了解网站非常有用。我们收集到了关于该网站的信息——它运行在 PHP 上，并支持 JavaScript。它使用 WordPress，因此我们可以利用
    WordPress 对网站进行攻击。如果我们向上滚动，我们还发现了该网站的 Web 主机。因此，在最坏的情况下，我们可以尝试攻击 Web 主机服务器，并获得对目标网站的访问权限。
- en: Robtex
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Robtex
- en: 'In this section, we''ll learn how we can get comprehensive DNS information
    about the target website. Just to give a quick review on what DNS is, when we
    type **FACEBOOK.COM**, a **DNS SERVER** will convert the name into an IP address.
    The **DNS SERVER** contains a number of records, each pointing to a different
    domain or to a different IP. Sometimes, they point to the same IP, but in general,
    they request the domain name, it gets converted into an IP address, and, depending
    on the address, the information needs to be stored somewhere. We''re going to
    query the **DNS SERVER** and see what information we can get through it. The process
    is illustrated in the following diagram:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何获取目标网站的综合DNS信息。简要回顾一下DNS的概念，当我们输入**FACEBOOK.COM**时，**DNS服务器**会将该名称转换为IP地址。**DNS服务器**包含多个记录，每个记录指向不同的域名或不同的IP地址。有时它们指向相同的IP地址，但一般情况下，它们会请求域名并将其转换为IP地址，之后，依据地址，信息需要被存储在某个地方。我们将查询**DNS服务器**并查看我们能从中获取哪些信息。以下图示展示了这个过程：
- en: '![](assets/5dbbe6fd-a15b-4fcc-9a1b-b942941bd753.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5dbbe6fd-a15b-4fcc-9a1b-b942941bd753.png)'
- en: We're going to be using a website called Robtex ([https://www.robtex.com/](https://www.robtex.com/)),
    searching `isecur1ty.org`. Next, just click on GO and select the first result
    on the website.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个名为Robtex的网站（[https://www.robtex.com/](https://www.robtex.com/)），搜索`isecur1ty.org`。接下来，点击GO并选择网站上的第一个结果。
- en: 'Now, we can see here that this report contains a lot of information, but we
    have a nice little index that will help us navigate through it. A lot of this
    information is a little bit advanced, so we will be skipping through a lot of
    it because we want to keep this as basic as possible. Web penetration testing
    is a vast topic in itself. Hence, we''re going to keep this a little bit basic,
    and we''ll see what information we can see in the following screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以看到这个报告包含了很多信息，但我们有一个很好的索引帮助我们浏览。很多信息比较复杂，因此我们会跳过其中的一些内容，因为我们希望尽量保持内容的基础性。网络渗透测试本身是一个庞大的话题。因此，我们会保持内容的简单性，并查看以下截图中能看到的哪些信息：
- en: '![](assets/e0892665-f7a8-46c3-a26a-a1044ce50d3c.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e0892665-f7a8-46c3-a26a-a1044ce50d3c.png)'
- en: 'Firstly, we get information about the website. We can see the DNS records,
    we can see the Name servers that have been used, and we can see some Mail servers.
    We can also see the RECORDS that we were talking about and the DNS server:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们获取到网站的信息。我们可以看到DNS记录，看到使用的名称服务器，以及一些邮件服务器。我们还可以看到我们提到过的记录和DNS服务器：
- en: '![](assets/dc06dc78-30cd-4c86-8dab-b606746be790.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dc06dc78-30cd-4c86-8dab-b606746be790.png)'
- en: 'Here, we can see all of these records. We can see the a record, the one that
    converts a domain name to an IP address, and if we remember, when we were performing
    DNS spoofing, we added an `A` record in our `dns.conf` and `iter.conf` files.
    The a record is actually what''s used in the DNS servers to link isecur1ty.org
    to its IP address, but again, there is another type of record; for example, we
    have the ns record, which links the domain, the name server. We can also see the
    mx record in the following screenshot, which links it to the mail server, and
    we can see that the website uses a Google mail server, so it''s probably using
    Gmail to provide mail services:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到所有这些记录。我们可以看到A记录，它将域名转换为IP地址。如果我们记得，在执行DNS欺骗时，我们在`dns.conf`和`iter.conf`文件中添加了一个`A`记录。A记录实际上是DNS服务器用来将isecur1ty.org链接到其IP地址的记录，但还有另一种类型的记录；例如，我们有NS记录，它将域名与名称服务器关联。我们还可以在下面的截图中看到MX记录，它将域名链接到邮件服务器，并且可以看到该网站使用了Google邮件服务器，因此它可能使用Gmail提供邮件服务：
- en: '![](assets/2558e0a1-502b-485d-83b1-90aac18463ee.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2558e0a1-502b-485d-83b1-90aac18463ee.png)'
- en: 'Scrolling further, we have a graph of how all of the services interact with
    each other, how the services use the records, and how they are translated into
    IP addresses:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动，我们看到了一张图，展示了所有服务如何相互作用，服务如何使用这些记录，以及它们如何被转换为IP地址：
- en: '![](assets/342d8404-bdc8-49fa-8e4c-b2c4b087530d.png)Services interacting with
    each other'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/342d8404-bdc8-49fa-8e4c-b2c4b087530d.png)服务之间的相互作用'
- en: 'In the Shared tab, we will see if any of these resources are being shared:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在共享选项卡中，我们将查看是否有任何资源正在共享：
- en: '![](assets/ec927cd9-dcf1-4d6d-9db8-a421a8b73a6c.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ec927cd9-dcf1-4d6d-9db8-a421a8b73a6c.png)'
- en: We can also see that it's using three Name servers. We can see the Mail servers,
    and we can also see a number of websites pointing to the same IP address, and
    a number of domain names, pointing to the same IP address. Therefore, the preceding
    websites are stored on the same web server. Now, again, there is more information
    about the name servers and websites that are Sharing mail servers. It doesn't
    mean that these websites are on the same server, but the most important thing
    is that we have the websites pointing to the same IP, which means that these websites
    exist on the same server. Now, if you gain access to any of the websites mentioned,
    it will be very easy to gain access to [isecur1ty.org](http://www.isecur1ty.org/).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到它使用了三个名称服务器。我们可以看到邮件服务器，并且还可以看到多个网站指向相同的IP地址，多个域名也指向相同的IP地址。因此，上述网站存储在同一Web服务器上。现在，再次有关于名称服务器和共享邮件服务器的网站的更多信息。这并不意味着这些网站在同一服务器上，但最重要的是我们看到这些网站指向相同的IP地址，这意味着这些网站存在于同一服务器上。现在，如果你获得了上述任何一个网站的访问权限，那么攻击[isecur1ty.org](http://www.isecur1ty.org/)将变得非常容易。
- en: Websites on the same server
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 同一服务器上的网站
- en: Websites are installed on web servers on normal computers, as we said before.
    These normal computers have IP addresses and, using the IP address, we can access
    our target website. Now, in many scenarios, our target website, or our target
    server, will contain a large number of websites, hence it'll have the website
    that we are targeting, but it will also contain other websites on the same server,
    hence on the same filesystem. For example, if we could not find any vulnerabilities
    in our target website, we can still try to hack into any other website that is
    installed on the same server. If we can do that, then we will be able to gain
    access to the server. Gaining access to the server basically means that we have
    access to all the other websites, because the server is just a computer, and we
    can navigate to the website that we want to hack and gain access to that website.
    Suppose we are trying to hack into a website and we can't find an exploit, then
    the next step will be trying to hack any other website that existing on the same
    server. Hence, what we mean by exist on the same server is they have the same
    IP address.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 网站安装在普通计算机上的网络服务器上，正如我们之前所说，这些普通计算机有IP地址，利用IP地址，我们可以访问目标网站。现在，在许多场景中，我们的目标网站或目标服务器上会包含大量的网站，因此它不仅包含我们要攻击的网站，还会包含同一服务器上的其他网站，即同一文件系统上的网站。例如，如果我们在目标网站中找不到任何漏洞，我们仍然可以尝试攻击安装在同一服务器上的其他网站。如果我们能做到这一点，那么我们就能访问服务器。访问服务器基本上意味着我们能够访问所有其他网站，因为服务器只是一个计算机，我们可以导航到我们想要攻击的网站并获得访问权限。假设我们试图攻击一个网站，但找不到漏洞，那么下一步就是尝试攻击同一服务器上存在的任何其他网站。因此，我们所说的同一服务器上存在的意思是它们有相同的IP地址。
- en: Information gathering from target websites
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从目标网站收集信息
- en: So far, we have just been using commands and tools to gather information about
    the victim. Now, we will make use you information that we get from URLs the victims
    browses, also how we can analyze the files from the targets machine to which we
    have access to and what useful information we can gather through them. We will
    then see how to use the gathered information to launch attacks.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只是使用命令和工具来收集有关受害者的信息。现在，我们将利用从受害者浏览的网址获取的信息，以及如何分析我们可以访问的目标机器上的文件，并查看我们能通过它们收集到哪些有用的信息。然后，我们将看看如何使用收集到的信息发起攻击。
- en: Finding subdomains
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找子域名
- en: In this section we're going to study subdomains. We see subdomains everywhere,
    for example, `subdomain.target.com`. Now, if we have `beta.facebook.com`, we would
    have `mobile.facebook.com`, or we might have user.facebook.com. Suppose we google
    `mail.google.com`, which just takes us to Gmail. Why subdomains are important
    is, in a lot of cases, websites have subdomains for their own users, for example,
    for employees or for certain customers, so they're not advertised unless it's
    some sort of a VIP customer or we are an employee. We will not see these subdomains
    on search engines and we will never see a link leading to them, so they might
    contain vulnerabilities or exploits that will help us gain access to the whole
    website, but we just never knew about them because they're not advertised. Another
    thing is, a lot of the big websites, when they're trying to install a new update
    or add a new feature to the website, install it in a subdomain, so we have `beta.facebook.com`,
    which actually contains a beta version of Facebook, which contains experimental
    features. Now, experimental features are great because they're still under development,
    and there's a really high chance of finding exploits in them. This is actually
    true, not so long ago, someone was able to brute-force the restore password key
    for any Facebook user and was able to gain access to any Facebook user's account.
    This was only possible through `beta.facebook.com` because Facebook used to check
    for a number of attempts or failed attempts, and they just didn't implement that
    security feature in beta because they didn't think anyone was going to go there.
    Beta usually contains more problems than the normal website, so it is very useful
    to try and hack into it. In this section, we will see how we can find any subdomains
    that have not been advertised, or even advertised ones, so we'll be able to get
    subdomains of our target.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习子域名。我们到处都能看到子域名，例如，`subdomain.target.com`。现在，如果我们有`beta.facebook.com`，那么我们也许会有`mobile.facebook.com`，或者我们可能会看到`user.facebook.com`。假设我们在谷歌搜索`mail.google.com`，它会直接带我们到
    Gmail。子域名之所以重要，是因为在很多情况下，网站会为自己的用户设置子域名，例如，为员工或特定客户设置，因此这些子域名通常不会公开，除非是某种VIP客户或者我们是员工。我们不会在搜索引擎上看到这些子域名，也永远不会看到通向它们的链接，因此它们可能包含漏洞或利用程序，帮助我们访问整个网站，但我们根本不知道它们的存在，因为它们没有被公开。另一个原因是，很多大网站在尝试安装新更新或添加新功能时，会先在子域名上进行安装，所以我们会看到`beta.facebook.com`，它实际上包含了Facebook的测试版，并且包含一些实验性功能。现在，实验性功能非常棒，因为它们仍然在开发阶段，发现漏洞的机会很大。事实上，最近就有人通过`beta.facebook.com`暴力破解了任何Facebook用户的恢复密码密钥，成功进入任何Facebook用户的账户。这只通过`beta.facebook.com`才有可能，因为Facebook曾经只在正式版中检查失败的尝试次数，而他们在测试版中并没有实现这个安全功能，因为他们认为没有人会访问那里。Beta版通常比正式版包含更多的问题，因此尝试入侵它非常有用。在本节中，我们将学习如何找到那些没有被公开的子域名，甚至是公开的子域名，从而获得我们目标的子域名。
- en: 'We''re going to use a tool called knock. The tool is very simple. We don''t
    really need to install it; all we have to do is download it using a `git` command.
    The command is `git clone`, and then we put the URL of the tool as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个叫做knock的工具。这个工具非常简单，我们实际上不需要安装它；我们只需要使用`git`命令下载它。命令是`git clone`，然后我们将工具的URL放在下面：
- en: '[PRE0]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once it''s downloaded, navigate to it using the `cd` command and we''ll see
    that we have the `.py` file. We are going to run it using the `python knockpy.py`
    command, and then we will enter the website that we want to get the subdomains
    of, which is `isecur1ty.org`. The following is the command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，使用`cd`命令进入它，我们会看到一个`.py`文件。我们将使用`python knockpy.py`命令运行它，然后输入我们想要获取子域名的网站，即`isecur1ty.org`。以下是命令：
- en: '[PRE1]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After execution, the command will show some information about the website,
    as seen in the following screenshot:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后，命令将显示一些关于网站的信息，如下图所示：
- en: '![](assets/405732dc-6b54-4b9a-babd-2dd77937fb2e.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/405732dc-6b54-4b9a-babd-2dd77937fb2e.png)'
- en: 'It will perform a brute-force and a Google-based subdomain search for isecur1ty,
    and it will show us any subdomain that isecur1ty might have that we could try
    and test the security of and see what''s installed on it. Maybe we will be able
    to gain access to the website through that subdomain. Once the scan is complete,
    as we can see in the following screenshot, we managed to find seven subdomains
    that were not advertised:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 它将执行一次暴力破解和基于 Google 的子域名搜索，针对 isecur1ty，展示我们可以尝试并测试其安全性并查看其安装内容的任何子域名。也许我们能够通过该子域名访问网站。一旦扫描完成，如下图所示，我们成功找到了七个未公开的子域名：
- en: '![](assets/9e3557f2-7e80-4e4b-809c-ebb31c12126c.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9e3557f2-7e80-4e4b-809c-ebb31c12126c.png)'
- en: Now, one of them is `ftp.isecur1ty.org`. We already know about `isecurity.org`,
    `localhost.isecur1ty.org` is just a local subdomain. We can see that the mail
    server `mail.isercur1ty.org` has its own subdomain as well, and we can see a very
    interesting one, `news.isecur1ty.org`. It actually did contain a beta version
    of a script that was been worked on. Hence, if someone was trying to hack into
    our website, they'd actually see that there is a script under development, and
    there's a high chance that they would have been able to find a vulnerability in
    it and gain access to the whole website.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个是 `ftp.isecur1ty.org`。我们已经知道 `isecurity.org`，`localhost.isecur1ty.org` 只是一个本地子域名。我们可以看到邮件服务器
    `mail.isecur1ty.org` 也有自己的子域名，我们还可以看到一个很有意思的子域名 `news.isecur1ty.org`。它实际上包含了一个正在开发中的脚本的测试版本。因此，如果有人试图入侵我们的网站，他们会看到一个正在开发中的脚本，并且有很大的机会能够找到其中的漏洞，从而获得整个网站的访问权限。
- en: This just shows us again how important information gathering is, which can be
    used to gain access to websites. If we don't do it, we will be missing a lot of
    things. For example, we might be missing a whole script with a whole number of
    vulnerabilities, or we could be missing an admin login page or an employee login
    page.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这再次显示了信息收集的重要性，它可以用于获取网站访问权限。如果我们不做这些，我们会错过很多东西。例如，我们可能会错过一个包含多个漏洞的完整脚本，或者错过一个管理员登录页面或员工登录页面。
- en: Information gathering using files
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用文件进行信息收集
- en: So far, we have learned how to find any subdomains that exist within our target
    website that have not been listed. In this section, we're going to see how we
    can find files and directories that are stored on our target computer or our target
    website. Again, these could be useful because these files could contain passwords,
    they could contain config information, or they could contain information about
    the actual server, which will help us further exploit our target.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经学会了如何找到目标网站上未列出的子域名。在本节中，我们将看到如何查找存储在目标计算机或目标网站上的文件和目录。同样，这些文件可能包含密码、配置文件，或者包含有关实际服务器的信息，这将帮助我们进一步利用目标。
- en: 'Let''s just first see what is meant by files and directories, just to show
    the structure of directories on a web server. We have our Metasploitable machine
    and, as we know, usually the web server stuff is stored in `var/www/` directory.
    If we run `ls`, we will see that we have a number of files and directories, as
    shown in the following screenshot:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看看“文件和目录”是什么意思，展示 Web 服务器上的目录结构。我们有我们的 Metasploitable 机器，通常 Web 服务器的内容存储在
    `var/www/` 目录中。如果我们运行 `ls`，我们将看到如下一些文件和目录：
- en: '![](assets/799aad7d-757f-498a-b8a6-5accc9bed102.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/799aad7d-757f-498a-b8a6-5accc9bed102.png)'
- en: If we run the `ls -la` command, it gives us a list of precise information about
    files and directories.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们运行 `ls -la` 命令，它将给出有关文件和目录的详细信息。
- en: We can see in the preceding screenshot that we have a directory called `mutillidae`.
    Mutillidae is a web application that is designed to behave just like Metasploitable.
    It is designed so that it has a number of exploits so that we can learn how to
    hack using it. You will see that it's installed in a directory called `mutillidae`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在上面的截图中看到有一个名为 `mutillidae` 的目录。Mutillidae 是一个设计用来像 Metasploitable 一样运行的
    Web 应用程序。它的设计包含了许多漏洞，帮助我们学习如何利用它进行黑客攻击。你将看到它安装在名为 `mutillidae` 的目录中。
- en: 'Now, if we go to the IP address of the Metasploitable machine `10.0.2.4`, there
    is easy access for us to Mutillidae. If we click on the URL, `10.0.2.15 /mutillidae`,
    we should see the following:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们访问 Metasploitable 机器的 IP 地址 `10.0.2.4`，我们可以轻松访问 Mutillidae。如果我们点击 URL，`10.0.2.15
    /mutillidae`，应该能看到如下内容：
- en: '![](assets/43b422ac-3d9e-4244-95ba-4c028b0d85a3.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/43b422ac-3d9e-4244-95ba-4c028b0d85a3.png)'
- en: 'That means we are inside the `mutillidae` directory. So, every time we see
    a forward slash, that usually means we are inside a directory. Now, if we run
    `cd mutillidae` and we also run the `ls` command, we will see that we have a large
    number of files:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们在`mutillidae`目录内。因此，每当我们看到一个正斜杠时，通常意味着我们在一个目录内。现在，如果我们运行`cd mutillidae`并且运行`ls`命令，我们会看到有大量的文件：
- en: '![](assets/8beb301b-5799-482d-99af-f1a3ffd987a0.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8beb301b-5799-482d-99af-f1a3ffd987a0.png)'
- en: For example, let's say we wanted to open one of these files and we have `index.php`.
    If we do `index.php`, then this is our current file on the browser, it's called
    `index.php`, we will be able to see it in the URL .
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们想要打开其中一个文件，我们有`index.php`。如果我们输入`index.php`，那么这是我们当前在浏览器上的文件，它叫做`index.php`，我们能够在网址中看到它。
- en: 'Now, what we learned from this is that `mutillidae` is just a directory inside
    our web root. So, at the moment, the Metasploitable web application is stored
    in `/var/www/mutillidae` directory and then the file that we are accessing is
    `index.php`. If we run the `pwd` command, we will see that we''re in `/var/www/mutillidae`:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们从中学到的是，`mutillidae`只是我们网页根目录中的一个子目录。所以，目前，Metasploitable网页应用程序存储在`/var/www/mutillidae`目录下，接着我们访问的文件是`index.php`。如果我们运行`pwd`命令，我们会看到我们在`/var/www/mutillidae`目录下：
- en: '![](assets/113ead2a-be0a-4cfc-97dc-e4720dd7389b.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/113ead2a-be0a-4cfc-97dc-e4720dd7389b.png)'
- en: The IP address kind of hides where our `www` route is, it hides the `/var/www`
    route, and then everything after that will be displayed after the IP address.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: IP地址某种程度上隐藏了我们的`www`根目录，它隐藏了`/var/www`路径，然后在IP地址后面显示的将是所有内容。
- en: 'Therefore, what we''re looking to find is all the directories and the files
    that we cannot see. So, through the links, we will be able to access different
    types and different pages. This is the same with any other website, but there
    are always files and directories hidden that we just never see. We''ll see how
    we can get URLs for the files and access them, and read the information in them.
    To do that, we''re going to use a tool called `dirb`, and to see how to use that
    tool we''re going to run the `man dirb` command to see all the options associated
    with that tool. In the following screenshot, we can see the syntax. To use the
    tool, we just type in `dirb`, the URL of our target, and then output a wordlist.
    The way it works is based on a brute-force attack, and just uses a wordlist of
    names and it sends requests with those names. Any time it finds something it tells
    us, then we will find a file with a name from the wordlist. So, it is only able
    to find names and directories based on the wordlist that we provide:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们要查找的是所有我们无法看到的目录和文件。通过这些链接，我们将能够访问不同类型的页面。这与其他任何网站都一样，但总是有一些隐藏的文件和目录我们从未见过。我们将看到如何获取文件的URL并访问它们，读取其中的信息。为此，我们将使用一个叫做`dirb`的工具，接着为了了解如何使用这个工具，我们会运行`man
    dirb`命令，查看与该工具相关的所有选项。在下面的截图中，我们可以看到语法。要使用该工具，我们只需输入`dirb`，目标网址，然后输出一个字典列表。它的工作方式是基于暴力破解攻击，使用的是一个包含名字的字典列表，并用这些名字发送请求。每当它找到某个东西时，它会告诉我们，然后我们就能找到一个与字典列表中的名字相符的文件。因此，它只能根据我们提供的字典列表找到名字和目录：
- en: '![](assets/62ffa452-7c12-427b-89c5-8bdbd7e8ea35.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/62ffa452-7c12-427b-89c5-8bdbd7e8ea35.png)'
- en: We can create a wordlist using `crunch` or we can use wordlists that come with
    the `dirb` tool. The options here allow us to configure how the tool works. We
    can change things around the way we want them. For example, we can disable the
    recursive nests of the tools so it just runs on one directory instead of trying
    a number of directories. We can get it to ask us if we want it to access the directory
    or not, instead of automatically accessing directories and trying to find files
    within those directories, because this could be exhaustive if our target is a
    big website; there might be a lot of directories and then the tool would try to
    access all of them and find files within all of them. We can see how big the tree
    could go. We can also set it to use a username and a password if the target websites
    use some sort of authentication, and we can use `-v` for verbose output and `-o`
    to output the results to a file.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`crunch`创建字典文件，或者使用`dirb`工具自带的字典文件。这里的选项允许我们配置工具的工作方式。我们可以根据需要更改设置。例如，我们可以禁用工具的递归目录遍历，让它只在一个目录中运行，而不是尝试多个目录。我们还可以让它询问我们是否要访问某个目录，而不是自动访问目录并尝试在其中查找文件，因为如果我们的目标是一个大型网站，这可能会变得非常耗时；可能有很多目录，工具会尝试访问所有这些目录并在其中查找文件。我们可以看到树的深度有多大。如果目标网站使用某种认证方式，我们还可以设置使用用户名和密码，并且可以使用`-v`选项来输出详细信息，使用`-o`将结果输出到文件中。
- en: 'Now, let''s look at a very simple example. We are just going to run `dirb`
    on our target, which is `http://10.0.2.4`. We inserted `http://` because, remember,
    we''re targeting a website not an IP address. Then, we are going to put the directory,
    in our case the `mutillidae` directory, that we want to find files and directories
    within. We don''t want it to access anything within other directories, because
    we have a number of scripts installed on the Metasploitable web server; we only
    want it to work on the `mutillidae` directory. So, the command is as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一个非常简单的例子。我们只是要在我们的目标`http://10.0.2.4`上运行`dirb`。我们加上了`http://`，因为记住，我们的目标是一个网站，而不是一个IP地址。接着，我们将输入我们想要查找文件和目录的目录，在我们这个例子中是`mutillidae`目录。我们不希望它访问其他目录中的内容，因为我们在Metasploitable
    Web服务器上安装了一些脚本；我们只希望它在`mutillidae`目录下工作。所以，命令如下：
- en: '[PRE2]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After writing the command in the Terminal and hitting *Enter*, it will start
    to find URLs and files within the web application. We can see the command in action
    in the following screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中输入命令并按下*回车*后，它将开始在Web应用程序中查找URL和文件。我们可以在以下截图中看到命令的执行情况：
- en: '![](assets/b1bb987c-84ae-4082-8534-bc8ffc81b281.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b1bb987c-84ae-4082-8534-bc8ffc81b281.png)'
- en: It will take a while for it to process `dirb` will use a wordlist file and it
    will use a default small wordlist file that is stored in `usr/share/dirb/wordlists/common.txt`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 处理过程需要一段时间，`dirb`将使用一个字典文件，并且它会使用存储在`usr/share/dirb/wordlists/common.txt`中的默认小型字典文件。
- en: We can have a look at the `usr/share/dirb/wordlists/common.txt` directory and
    see if there are any other wordlists that we would like to use, but we can use
    them only by placing the full path to the wordlist after the command. Therefore,
    instead of the way we wrote the command, just state the path where our wordlist
    is placed. For example, let's say, if it's in the `root` directory, we type it
    as `root/wordlist.txt`, but at the moment, it's using the default one, which is
    stored in the `usr/share/dirb/wordlists/common.txt` directory. In the next section,
    we'll see how to analyze the files we downloaded using the `dirb` tool.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查看`usr/share/dirb/wordlists/common.txt`目录，看看是否有其他我们想使用的字典文件，但我们只能通过在命令后面提供字典文件的完整路径来使用它们。因此，和我们之前写命令的方式不同，我们只需要指定字典文件所在的路径。例如，假设它在`root`目录下，我们可以这样写：`root/wordlist.txt`，但目前使用的是默认的字典文件，存储在`usr/share/dirb/wordlists/common.txt`目录下。在下一部分中，我们将看到如何分析使用`dirb`工具下载的文件。
- en: Analyzing file results
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析文件结果
- en: 'We can see in the following screenshot of the result that the `dirb` tool was
    able to find a number of files. Some of them we already know:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下的结果截图中，我们可以看到`dirb`工具能够找到一些文件。其中一些文件我们已经知道：
- en: '![](assets/ff8cb731-a24f-46fe-89c5-02cdd64126ff.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ff8cb731-a24f-46fe-89c5-02cdd64126ff.png)'
- en: Now, as we can see in the preceding screenshot, `favicon.ico` is just an icon; `footer`
    and `header` are probably only style files; and `index.php` is the index that
    we usually see. We can see that we discovered a `login` page that allows people
    to log in.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，正如我们在前面的截图中看到的，`favicon.ico`只是一个图标；`footer`和`header`可能只是样式文件；而`index.php`是我们通常看到的首页。我们可以看到我们发现了一个`login`页面，允许用户登录。
- en: 'Now, in many scenarios, we would be able to find the username and password
    of a target by exploiting a really complex vulnerability, and then end up not
    being able to log in because we couldn''t find where to log in. In such cases,
    tools like `dirb` can be very useful. We can see that the `phpinfo.php` file is
    usually very useful because it displays a lot of information about the PHP interpreter
    running on the web server, and as we can see in the following screenshot, the
    file contains a lot of information:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在很多场景中，我们可能通过利用一个非常复杂的漏洞找到目标的用户名和密码，结果却因为找不到登录入口而无法登录。在这种情况下，像`dirb`这样的工具非常有用。我们可以看到，`phpinfo.php`文件通常非常有用，因为它显示了关于在Web服务器上运行的PHP解释器的很多信息，正如我们在接下来的截图中看到的，这个文件包含了大量的信息：
- en: '![](assets/82eac66f-f25a-4b8a-a8d7-22d42af11275.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/82eac66f-f25a-4b8a-a8d7-22d42af11275.png)'
- en: Preceding information's are useful, and we can get to know some of the directories.
    From the preceding screenshot, we know that it's running php5, the configuration
    is stored in the `.cgi` file. `.ini` files are usually the config files for PHP,
    so we can see all the places where they are stored.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的信息很有用，我们可以了解一些目录。从前面的截图中，我们知道它正在运行php5，配置存储在`.cgi`文件中。`.ini`文件通常是PHP的配置文件，因此我们可以看到它们存储的位置。
- en: 'When we scroll down further, we will see the permissions installed. We will
    also see that it has MySQL, so it''s using MySQL:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们进一步向下滚动时，我们会看到安装的权限。我们还会看到它安装了MySQL，所以它正在使用MySQL：
- en: '![](assets/10120ce0-c178-4092-990f-cd4c19b59e3e.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/10120ce0-c178-4092-990f-cd4c19b59e3e.png)'
- en: 'We can see in the preceding screenshot the directories where different types
    of configurations are stored. We can also see all the modules and extensions that
    are being used with PHP, so the `phpinfo.php` file is very useful. We can see
    in the following screenshot that we managed to find where the `phpMyAdmin` login
    is, and that''s basically the login that''s used to log in to the database:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在前面的截图中看到不同类型的配置文件存储的目录。我们还可以看到所有与PHP一起使用的模块和扩展，因此`phpinfo.php`文件非常有用。我们可以在接下来的截图中看到，我们成功找到了`phpMyAdmin`的登录页面，这基本上是用来登录数据库的：
- en: '![](assets/001b5255-cf84-443a-97bc-69fdfa0b41bd.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/001b5255-cf84-443a-97bc-69fdfa0b41bd.png)'
- en: 'Another very useful file is the `robots.txt` file, which tells search engines,
    such as Google, how to deal with the website. Hence, it usually contains files
    that we don''t want the website or Google to see or to read. Now, if we can read
    the `robots.txt` file, then we''ll be able to see what the web admin is trying
    to hide. We can see in the following screenshot that the web admin doesn''t want
    Google to see a directory called `passwords`, and it doesn''t want us to see a
    file called `config.inc` either. Niether does it want it to see these other files:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个非常有用的文件是`robots.txt`文件，它告诉搜索引擎（如Google）如何处理网站。因此，它通常包含我们不希望网站或Google看到或读取的文件。如果我们能读取`robots.txt`文件，那么我们就能看到网站管理员想要隐藏的内容。我们可以在下图中看到，网站管理员不希望Google看到一个名为`passwords`的目录，并且不希望我们看到名为`config.inc`的文件，也不希望它看到以下这些文件：
- en: '![](assets/c6ca8df1-5f24-43bf-8e89-3de25f5f3d32.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c6ca8df1-5f24-43bf-8e89-3de25f5f3d32.png)'
- en: 'Now, let''s see the `./passwords` and `./config.inc` files:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下`./passwords`和`./config.inc`文件：
- en: '![](assets/b9c3c79b-8417-43dc-9735-c2d64bbf28c8.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b9c3c79b-8417-43dc-9735-c2d64bbf28c8.png)'
- en: 'We can see in the preceding screenshot that there is a file called `accounts.txt`
    and, clicking on the file, we can see that we''ve got some usernames and passwords.
    So, we can see that there is a `admin` user, with the `adminpass` password and
    we can see that we have a password for the `adrian` user, which is `somepassword`.
    So, we managed to find usernames and passwords, as seen in the following screenshot:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在前面的截图中看到一个名为`accounts.txt`的文件，点击该文件后，我们可以看到一些用户名和密码。因此，我们可以看到有一个`admin`用户，密码是`adminpass`，并且我们可以看到`adrian`用户的密码是`somepassword`。所以，我们成功找到了用户名和密码，如下图所示：
- en: '![](assets/ab225073-98cd-4ba1-b961-aac580787ffa.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ab225073-98cd-4ba1-b961-aac580787ffa.png)'
- en: 'Now, we''re still not sure what the preceding usernames and passwords are for,
    but we''re sure that we were able to find very useful information. Another useful
    file is the `config.inc` file, and we can see in the following screenshot that
    we have information that allows us to connect to the database, because they have
    `$dbhost`, `$dbuser`, `$dbpass`, and `$dbname` parameters:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们仍不确定前面的用户名和密码是用来做什么的，但我们确定我们已经找到了非常有用的信息。另一个有用的文件是`config.inc`文件，我们可以在下面的截图中看到，其中包含了允许我们连接到数据库的信息，因为它们有`$dbhost`、`$dbuser`、`$dbpass`和`$dbname`参数：
- en: '![](assets/e04713ec-0376-44f0-95ad-6f7f83118eba.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e04713ec-0376-44f0-95ad-6f7f83118eba.png)'
- en: We can see that the username is `root` and the password is blank, so we can
    go ahead and try to connect to the database based on the commands from the preceding
    screenshot, and then we should be able to get access to the database.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到用户名是`root`，密码为空，因此我们可以根据前面的截图中的命令继续尝试连接到数据库，然后我们应该能够访问数据库。
- en: Also, we're still not sure where we can use them, but we can add them to a list
    to try to log in to the admin, or just store them in a list so that we can use
    them if we carry out a brute-force attack.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们仍不确定这些信息可以用在哪里，但我们可以将它们添加到列表中，尝试登录管理员账户，或者仅仅将它们存储在列表中，以便在进行暴力破解攻击时使用。
- en: Summary
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter focused on gathering information. Firstly, we used tools such as
    WhoIs Lookup, Netcraft, and Robtex. Then, we focused on how we can use the websites
    hosted on a server to exploit that particular server. We then learned about domains
    and how they can act as an important source of information that can we use to
    attack a victim. Later, we studied how to access files on a target system or target
    websites, and also how to analyze important information from various files.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点讲解了信息收集。首先，我们使用了WhoIs查询、Netcraft和Robtex等工具。然后，我们重点探讨了如何利用托管在服务器上的网站来攻击该服务器。接着，我们学习了域名以及它们如何成为可以用于攻击受害者的重要信息来源。之后，我们研究了如何访问目标系统或目标网站上的文件，并且如何从各种文件中分析出重要信息。
- en: Now, in the next chapter, we are going to see how important and powerful information
    gathering can be to launch attacks on victims.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在下一章中，我们将看到信息收集是多么重要和强大，它能够帮助我们发起对受害者的攻击。
