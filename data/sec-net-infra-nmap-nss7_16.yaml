- en: Privilege Escalation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权限升级
- en: In the last chapter, we learned about the various aspects of web application
    security. In this chapter, we are going to discuss various concepts related to
    privilege escalation. We will get familiar with various privilege-escalation concepts
    along with practical techniques of escalating privileges on compromised Windows
    and Linux systems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了有关Web应用程序安全的各个方面。在本章中，我们将讨论与权限升级相关的各种概念。我们将熟悉各种权限升级概念，以及在受损的Windows和Linux系统上提升权限的实际技术。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中涵盖以下主题：
- en: Defining privilege escalation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义权限升级
- en: Horizontal versus vertical privilege escalation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 水平与垂直权限升级
- en: Privilege escalation on Windows
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows上的权限升级
- en: Privilege escalation on Linux
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux上的权限升级
- en: What is privilege escalation?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是权限升级？
- en: Before we get into any technical details about privilege escalation, let's first
    get a basic understanding of privileges. The literal dictionary meaning of the
    word *privilege* is a special right, advantage, or immunity granted or available
    only to a particular person or group. When it comes to the computing world, privileges
    are something that are managed by the operating system. There might be ten users
    on a single system, but not all may have the same level of privileges. As per
    security best practices, the principle of least privilege is often followed. That
    means each user is assigned only those bare-minimum privileges that are absolutely
    essential to perform their tasks. This principle helps eliminate the possibility
    of the abuse of unnecessary, excessive privileges.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入讨论权限升级的任何技术细节之前，让我们首先对权限有一些基本的了解。单词*privilege*的字面字典意思是特权、优势或豁免，只授予或仅对特定人或团体可用。在计算世界中，权限是由操作系统管理的。在单个系统上可能有十个用户，但并非所有用户都具有相同级别的权限。根据安全最佳实践，通常遵循最小权限原则。这意味着每个用户只被分配绝对必要的最低权限来执行其任务。这个原则有助于消除滥用不必要的过多权限的可能性。
- en: In the context of security assessments, privilege escalation becomes an important
    factor. Let's assume you have managed to successfully exploit a vulnerability
    in a remote system and got SSH access. However, your actions are restricted because
    the user you have compromised doesn't have high privileges. Now, you would certainly
    want to have the highest level of privileges so that you can explore various aspects
    of the compromised system. Privilege escalation would elevate privileges of a
    normal user to that of the user with the highest privileges. Once done, you have
    complete control over the compromised system.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在安全评估的背景下，权限升级变得非常重要。假设您成功地利用了远程系统中的漏洞并获得了SSH访问权限。但是，由于您已经妥协的用户权限有限，您的操作受到了限制。现在，您肯定希望拥有最高级别的权限，以便您可以探索受损系统的各个方面。权限升级将普通用户的权限提升到具有最高权限的用户。完成后，您将完全控制受损的系统。
- en: 'To understand some basics of how privileges work, the following diagram shows
    various protection rings:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解权限如何工作的一些基础知识，以下图表显示了各种保护环：
- en: '![](img/0e6b2097-2f41-49ae-bbd9-a5486745d594.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e6b2097-2f41-49ae-bbd9-a5486745d594.png)'
- en: 'This diagram shows four rings:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图表显示了四个环：
- en: '**Ring 0**: Belongs to the kernel of the operating system and has the highest
    privileges.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环0**：属于操作系统的内核，具有最高的权限。'
- en: '**Ring 1 and Ring 2**:  Mostly used by the device drivers that interface between
    the operating system and various hardware devices. These rings certainly have
    good privileges but less than **Ring 0**.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环1和环2**：主要由设备驱动程序使用，它们在操作系统和各种硬件设备之间进行接口。这些环具有很好的权限，但低于**环0**。'
- en: '**Ring 3**: Where most of our end applications operate. They have the lowest
    privileges.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环3**：大多数我们的最终应用程序运行的地方。它们拥有最低的权限。'
- en: So, in the case of privilege escalation, if you want to exploit an application
    vulnerability and get access to **Ring 3**, then you need to find a way to elevate
    privileges to higher rings. In a Windows environment, a user with the highest
    privileges is commonly referred to as an **administrator**, while in a Linux environment,
    a user with highest privileges is referred to as **root**.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在权限升级的情况下，如果您想利用应用程序漏洞并访问**环3**，那么您需要找到一种方法将权限提升到更高的环。在Windows环境中，具有最高权限的用户通常被称为**管理员**，而在Linux环境中，具有最高权限的用户被称为**root**。
- en: Horizontal versus vertical privilege escalation
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 水平与垂直权限升级
- en: 'As we saw in the previous section, privilege escalation means gaining privileges
    that you are not authorized to have. Privilege escalation can be one of two types:
    horizontal or vertical.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前一节中看到的，权限升级意味着获得未经授权的权限。权限升级可以是水平或垂直的两种类型之一。
- en: '![](img/b7acdb54-474e-4268-ab6b-af1b8fc3d1d5.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b7acdb54-474e-4268-ab6b-af1b8fc3d1d5.png)'
- en: Horizontal privilege escalation
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 水平权限升级
- en: 'Refer to the preceding diagram; there are four users in total: three normal
    users and one administrator. The users are shown as per their hierarchy. Now,
    if **Normal User 1** is able to access the data of **Normal User 2**, it would
    be referred to as horizontal privilege escalation since both the users are on
    the same level in the hierarchy.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 参考前面的图表；总共有四个用户：三个普通用户和一个管理员。用户按照其层次显示。现在，如果**普通用户1**能够访问**普通用户2**的数据，这将被称为水平权限升级，因为两个用户在层次结构中处于相同的级别。
- en: Vertical privilege escalation
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 垂直权限升级
- en: With reference to the preceding diagram, if **Normal User 1** is able to access
    the data and gain the privileges of the **Administrator**, it would be referred
    to as vertical privilege escalation. **Normal User 1** and the **Administrator**
    are both at different levels in the hierarchy.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 关于前面的图表，如果**普通用户1**能够访问数据并获得**管理员**的权限，这将被称为垂直权限升级。**普通用户1**和**管理员**在层次结构中处于不同的级别。
- en: Privilege escalation on Windows
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows上的权限升级
- en: As we saw in the previous section, on a Windows system, the user with the highest
    privileges is known as the **administrator**. Once we compromise a system using
    any of the available exploits, our aim should be to elevate the user privileges
    to that of the administrator.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前一节中看到的，在Windows系统上，拥有最高特权的用户被称为**管理员**。一旦我们使用任何可用的利用程序来入侵系统，我们的目标应该是将用户特权提升到管理员级别。
- en: 'The following screenshot shows an exploitation of the `ms08_067_netapi` vulnerability
    with Windows XP as the target. Metasploit successfully exploited the vulnerability
    and gave a meterpreter session, as shown in the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了对Windows XP目标利用`ms08_067_netapi`漏洞的过程。Metasploit成功利用了漏洞，并提供了一个meterpreter会话，如下面的截图所示：
- en: '![](img/727e96bb-8f37-40c2-937d-82ba2794e9ad.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/727e96bb-8f37-40c2-937d-82ba2794e9ad.png)'
- en: 'The meterpreter provides us with the ability to escalate privileges. The `getsystem`
    command is specifically used for privilege escalation on the compromised Windows
    system. The following screenshot shows the use of the `getsystem` command in order
    to get the administrator-level privileges on the target system:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Meterpreter为我们提供了提升特权的能力。`getsystem`命令专门用于提升已受损的Windows系统的特权。下面的截图显示了使用`getsystem`命令以获取目标系统上管理员级别特权的过程：
- en: '![](img/c8ecb3ab-e892-4a6e-8308-2c6bc0a68e24.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c8ecb3ab-e892-4a6e-8308-2c6bc0a68e24.png)'
- en: Privilege escalation on Linux
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上的特权升级
- en: In this section, we'll see how we can exploit a vulnerability in a Linux system
    and then escalate our privileges. We'll be using Metasploitable 2 as our target.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到如何利用Linux系统中的漏洞，然后提升我们的特权。我们将使用Metasploitable 2作为我们的目标。
- en: 'Before we can even think of privilege escalation, we must have at least normal-level
    access to the target system. In this case, our target system''s IP address is
    `192.168.25.129`. We start by initiating SPARTA in order to gather some quick
    information about our target. We add the target IP in the scope of the SPARTA
    scan, as shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们甚至考虑提升特权之前，我们必须至少具有对目标系统的普通级别访问权限。在这种情况下，我们的目标系统的IP地址是`192.168.25.129`。我们首先启动SPARTA，以快速收集有关我们目标的一些信息。我们将目标IP添加到SPARTA扫描的范围内，如下面的截图所示：
- en: '![](img/172b285b-f4c1-4034-bfc3-1359c8b8d845.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/172b285b-f4c1-4034-bfc3-1359c8b8d845.png)'
- en: 'Once the SPARTA scan is complete, we get to know what services are running
    on our target system. Now we find out that the target system is running one service,
    `distccd` (as shown in the following screenshot), that is a distributed computing
    application used for source-code compilation:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦SPARTA扫描完成，我们就可以知道目标系统上运行着哪些服务。现在我们发现目标系统正在运行一个名为`distccd`的服务（如下面的截图所示），这是一个用于源代码编译的分布式计算应用程序：
- en: '![](img/85a5c835-ce30-48ee-a9ad-555b680d763f.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/85a5c835-ce30-48ee-a9ad-555b680d763f.png)'
- en: 'Now that we know the service to be exploited, we''ll open up the Metasploit
    console to look for any exploits related to `distcc`:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道要利用的服务，我们将打开Metasploit控制台，查找与`distcc`相关的任何利用程序。
- en: '![](img/d12e255e-05cc-43bf-9c9b-6a370e251855.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d12e255e-05cc-43bf-9c9b-6a370e251855.png)'
- en: 'We get an exploit named `distcc_exec` readily available in Metasploit. We now
    look for parameters that we need to configure using the `show options` command.
    Then we set the value of the `RHOST` (target) parameter and fire the `exploit` command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到一个名为`distcc_exec`的利用程序，在Metasploit中已经准备好。现在我们使用`show options`命令查找需要配置的参数。然后我们设置`RHOST`（目标）参数的值，并执行`exploit`命令：
- en: '![](img/38874d81-4c43-4c23-bea7-fee0e81e9a57.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38874d81-4c43-4c23-bea7-fee0e81e9a57.png)'
- en: 'The exploit succeeds and presents us with a remote command shell. However,
    the shell has limited privileges and now we need to escalate privileges to that
    of root. Using the `uname` command, we get to know that the target is based on
    Linux kernel 2.6.X. So, we need to find out which privilege-escalation exploit
    would suit this kernel version. We can search for specific exploits using the
    `searchsploit` utility. The following command will list the exploit we need:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 利用成功，并为我们提供了一个远程命令shell。但是，该shell的特权有限，现在我们需要提升特权到root。使用`uname`命令，我们得知目标基于Linux内核2.6.X。因此，我们需要找出适合该内核版本的特权提升利用程序。我们可以使用`searchsploit`实用程序搜索特定的利用程序。以下命令将列出我们需要的利用程序：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We can now use the `wget` command on our target system to download the exploit,
    as shown in the following screenshot. Once downloaded, we use the following command
    to compile the exploit locally:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在目标系统上使用`wget`命令下载利用程序，如下面的截图所示。下载后，我们使用以下命令在本地编译利用程序：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/11ccd073-b969-45ca-b3b6-d22fac1f374a.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/11ccd073-b969-45ca-b3b6-d22fac1f374a.png)'
- en: 'On our Kali Linux system, we start a Netcat listener on port `12345` using
    the following command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的Kali Linux系统上，我们使用以下命令在端口`12345`上启动Netcat监听器：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As soon as the exploit is executed on the target system, we get a reverse shell
    on our Kali system, as shown in the following screenshot, with root privileges.
    Hence we have succeeded in escalating the privileges from normal user to root:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在目标系统上执行了利用程序，我们就会在Kali系统上获得一个具有root权限的反向shell，如下面的截图所示。因此，我们已成功将权限从普通用户提升为root：
- en: '![](img/6b996677-1aec-49e6-a422-aba2bce85f56.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6b996677-1aec-49e6-a422-aba2bce85f56.png)'
- en: Summary
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the importance of privileges across various
    platforms, such as Windows and Linux, and the relevance of escalating privileges
    during penetration testing.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了特权在各种平台（如Windows和Linux）上的重要性，以及在渗透测试期间提升特权的相关性。
