- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Threat Hunting with Wazuh
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Wazuh进行威胁狩猎
- en: Approximately 80% of threats can be mitigated with the assistance of tier 1
    and 2 **security operations center** (**SOC**) analysts and automated security
    tools; the remaining 20% requires your attention. Threat hunting is an important
    proactive security method for finding threats and holes in security that are hard
    to spot with regular security measures. Threat hunting uses advanced analytics,
    threat intelligence, and human expertise to go beyond automated detection and
    actively seek, find, and fix any security holes or threats that might be hiding
    in an organization’s network. By being proactive, security teams can spot and
    stop complex threats before they happen. This reduces the time that attackers
    can stay on the network and stops possible breaches. In this chapter, we will
    learn how Wazuh can help security teams to proactively detect advanced threats.
    Wazuh offers an extensive overview of an organization’s security features by analyzing
    large amounts of logs, along with offering real-time monitoring, custom advanced
    rulesets, threat intelligence, MITRE ATT&CK mapping, and much more.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 大约80%的威胁可以通过一级和二级**安全运营中心**(**SOC**)分析师以及自动化安全工具的帮助得到缓解；剩下的20%则需要你关注。威胁狩猎是一个重要的主动安全方法，用于发现那些常规安全措施难以察觉的威胁和安全漏洞。威胁狩猎通过使用先进的分析、威胁情报和人工专业知识，超越自动化检测，积极寻找、发现并修复组织网络中可能隐藏的安全漏洞或威胁。通过主动防范，安全团队可以在复杂的威胁发生之前发现并阻止它们。这减少了攻击者在网络上停留的时间，并防止了潜在的入侵。在本章中，我们将学习Wazuh如何帮助安全团队主动检测高级威胁。Wazuh通过分析大量日志，提供组织安全特性的广泛概述，并提供实时监控、自定义高级规则集、威胁情报、MITRE
    ATT&CK映射等功能。
- en: 'In this chapter, we will cover the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Proactive threat hunting with Wazuh
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Wazuh进行主动威胁狩猎
- en: Log data analysis for threat hunting
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于威胁狩猎的日志数据分析
- en: MITRE ATT&CK mapping on Wazuh
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MITRE ATT&CK与Wazuh的映射
- en: Threat hunting using Osquery
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Osquery进行威胁狩猎
- en: Command monitoring
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令监控
- en: Proactive threat hunting with Wazuh
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Wazuh进行主动威胁狩猎
- en: Organizations can use Wazuh for proactive threat hunting, a security practice
    that helps them find and report possible security threats before they become significant
    threats. This can take the form, for example, of analyzing network traffic patterns
    to detect anomalous behavior that may indicate a potential cyber threat. By contrast,
    the main goal of reactive cybersecurity defenses is to react to threats once they
    are identified or after an incident has taken place. As an example, antivirus
    software detects and eradicates known malware, and firewalls prevent malicious
    traffic from entering the network based on predefined rules by the security team.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 组织可以使用Wazuh进行主动威胁狩猎，这是一种安全实践，帮助它们在威胁变得严重之前，发现并报告潜在的安全威胁。例如，这可以表现为分析网络流量模式，以检测可能表明潜在网络威胁的异常行为。相比之下，反应性网络安全防御的主要目标是在威胁被识别或事件发生后进行反应。例如，杀毒软件会检测并消除已知的恶意软件，防火墙根据安全团队预定义的规则，阻止恶意流量进入网络。
- en: When you do proactive threat hunting, you look for possible risks or weaknesses
    in a network before any damage can be caused. Instead of waiting for alerts or
    known signatures, we can use Wazuh to conduct threat hunting by performing real-time
    log analysis across multiple platforms, correlating events to detect potential
    security issues, along with integrating third-party tools to enhance our event
    visibility and detection capabilities.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行主动威胁狩猎时，你需要在损害发生之前，寻找网络中的潜在风险或漏洞。与其等待警报或已知的特征码，我们可以通过使用Wazuh进行实时日志分析，跨多个平台相关联事件，检测潜在的安全问题，并结合第三方工具以增强事件可见性和检测能力，进行威胁狩猎。
- en: 'In this section, we will cover the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将涵盖以下内容：
- en: Threat-hunting methodologies
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁狩猎方法
- en: Threat-hunting steps
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁狩猎步骤
- en: How to use Wazuh for proactive threat hunting
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Wazuh进行主动威胁狩猎
- en: Threat-hunting methodologies
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 威胁狩猎方法
- en: 'When threat hunters look into a system, they assume that attackers are already
    there and look for strange behavior that could indicate that bad things are happening.
    While conducting proactive threat hunting, the first step of looking for a threat
    usually falls into three main categories:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当威胁狩猎人员调查系统时，他们假设攻击者已经在系统内，并寻找可能表明有坏事发生的异常行为。在进行主动威胁狩猎时，通常第一步是将寻找威胁的工作分为三大类：
- en: '**Hypothesis-based investigation**: Threat hunters often start hypothesis-based
    investigations when they find a new threat within the pool of attack information.
    This gives them information about the newest **tactics, techniques, and procedures**
    (**TTPs**) that attackers are using. Once threat hunters have found a new TTP,
    they check whether the attacker’s unique behaviors are common in their own area.
    For this, our Wazuh platform needs the following configured:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于假设的调查**：当威胁猎手在攻击信息池中发现新威胁时，他们通常会开始基于假设的调查。这为他们提供了关于攻击者正在使用的最新**战术、技术和程序**（**TTPs**）的信息。一旦威胁猎手发现了新的TTP，他们会检查攻击者的独特行为是否在自己领域内常见。为此，我们的Wazuh平台需要配置以下内容：'
- en: File integrity monitoring rules to detect any unauthorized changes
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件完整性监控规则，以检测任何未经授权的更改
- en: Enabling rootkits behavior detection
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用rootkit行为检测
- en: Log collection from different security solutions such as Antivirus, **Endpoint
    Detection and Response** (**EDR**), and email security
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从不同的安全解决方案（如杀毒软件、**端点检测与响应**（**EDR**）和电子邮件安全）收集日志
- en: Vulnerability detection
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 漏洞检测
- en: Command monitoring
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令监控
- en: '**Intelligence-based hunting**: Intelligence-based hunting is a way to actively
    look for threats in response to different sources of intelligence. IOCs, IP addresses,
    hash values, and domain names are some of the threat intelligence sources that
    you can exploit. In order to accomplish this, Wazuh should be integrated with
    the following:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于情报的狩猎**：基于情报的狩猎是一种主动寻找威胁的方法，旨在响应来自不同情报源的信息。IOC（指标）、IP地址、哈希值和域名是你可以利用的一些威胁情报源。为了实现这一目标，Wazuh应集成以下内容：'
- en: Third-party threat intelligence tools such as VirusTotal or AbuseIPDB
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三方威胁情报工具，如VirusTotal或AbuseIPDB
- en: MISP
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: MISP
- en: OpenCTI
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenCTI
- en: Host or network artifacts from **computer emergency response teams** (**CERTs**)
    or **information sharing and analysis centers** (**ISACs**) allow you to export
    automated warnings or communicate crucial information about fresh threats in other
    businesses. These are mostly paid services, but they do offer highly curated information.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 来自**计算机应急响应团队**（**CERTs**）或**信息共享与分析中心**（**ISACs**）的主机或网络数据可以让你导出自动化警报或传达关于其他企业中新威胁的关键信息。这些通常是付费服务，但它们提供了高度筛选的信息。
- en: 'Investigation using **indicators of attack** (**IOA**): This is one of the
    most popular and widely used methods for threat hunting. The idea is simple: “Not
    every threat group is after you” or even if they are, why you should prioritize
    them. The first step is to identify the threat group based on its target location,
    industry, and software by using a free detection playbook called **ATT&CK Navigator**.
    This online platform is built by MITRE, a not-for-profit organization that operates
    **Federally Funded Research and Development Centers** (**FFRDCs**) in the United
    States.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**攻击指标**（**IOA**）进行调查：这是威胁狩猎中最流行和广泛使用的方法之一。这个方法很简单：“并非每个威胁团体都会针对你”，或者即使他们针对你，为什么你应该优先处理他们。第一步是通过使用MITRE开发的免费的检测手册**ATT&CK
    Navigator**，根据威胁团体的目标地点、行业和软件来识别威胁团体。这个在线平台由MITRE建立，MITRE是一家非营利组织，运营**联邦资助研究与发展中心**（**FFRDCs**）在美国。
- en: Threat-hunting steps
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 威胁狩猎步骤
- en: 'A proactive threat-hunting method consists of three stages: the *initial trigger
    phase*, the *investigation phase*, and the *resolution phase* (or, in some situations,
    an escalation to other teams as part of a communications or action plan). Let’s
    examine these three steps of the threat-hunting process in more detail:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 主动的威胁狩猎方法包括三个阶段：*初始触发阶段*、*调查阶段*和*解决阶段*（或者，在某些情况下，作为沟通或行动计划的一部分，向其他团队进行升级）。让我们更详细地探讨威胁狩猎过程中的这三个步骤：
- en: '**Choosing the** **right trigger**'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**选择正确的触发器**'
- en: Threat hunting is usually an in-depth effort. The threat hunter gathers data
    about the environment and formulates hypotheses on potential threats.
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁狩猎通常是一项深入的工作。威胁猎手收集环境数据，并就潜在威胁提出假设。
- en: Next, the threat hunter selects a trigger for further investigation. This might
    be a specific system, an area of the network, a hypothesis brought on by a disclosed
    vulnerability or patch, knowledge of a zero-day exploit, an abnormality seen in
    the security dataset, or a request coming from another department within the company.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，威胁猎手选择一个触发器进行进一步调查。这可能是一个特定的系统、网络的某个区域、由于公开漏洞或补丁而产生的假设、对零日漏洞的了解、安全数据集中的异常行为，或来自公司其他部门的请求。
- en: '**Investigation**'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**调查**'
- en: After a trigger has been identified, the hunt continues to focus on proactively
    looking for anomalies that support or contradict the theoretical threat.
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在识别出触发条件后，狩猎仍然专注于主动寻找支持或反驳理论威胁的异常情况。
- en: The threat hunter works with the assumption that “*My network is compromised
    by a new malware or exploit*” and conducts reverse engineering to prove the assumption.
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁狩猎者假设“*我的网络被新型恶意软件或漏洞攻击了*”，并进行逆向工程以验证这一假设。
- en: Threat hunters employ a variety of tools to help them analyze logs from multiple
    devices and security controls including server logs, Sysmon, antivirus logs, and
    spam filter logs.
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁狩猎者使用各种工具帮助分析来自多设备和安全控制的日志，包括服务器日志、Sysmon、杀毒软件日志和垃圾邮件过滤日志。
- en: '**Resolution** **and reporting**'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**解决** **与报告**'
- en: 'During the investigative phase, threat hunters gather crucial information and
    provide answers to the following questions:'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在调查阶段，威胁狩猎者收集关键数据，并回答以下问题：
- en: '*Who?* – i.e., perhaps an insider threat was involved'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*谁？* – 即，可能涉及内部威胁'
- en: '*What?* – A timeline of incidents in chronological order'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*什么？* – 按时间顺序排列的事件时间轴'
- en: '*Where?* – Details of the affected system including computers and servers'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*哪里？* – 受影响系统的详细信息，包括计算机和服务器'
- en: '*Why?* – A lack of security controls, poor planning, human error, an external
    attack, and so on'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为什么？* – 缺乏安全控制、规划不当、人为错误、外部攻击等'
- en: This information is circulated to other teams and tools during the resolution
    phase so that they may respond, prioritize, analyze, or retain the data for future
    use.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些信息会在解决阶段传递给其他团队和工具，以便它们作出响应、优先处理、分析或保留数据以供将来使用。
- en: Proactive threat hunting with Wazuh
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Wazuh 进行主动威胁狩猎
- en: 'Proactive threat hunting with Wazuh entails an ongoing and methodical search
    for indicators of potential security threats in the environment of your organization.
    To conduct threat hunting, Wazuh can be leveraged by security teams for comprehensive
    log data analysis, seamless integration with MITRE ATT&CK, and the utilization
    of Osquery (an endpoint analytics tool) and regular monitoring. Let’s cover each
    of these Wazuh capabilities in detail:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Wazuh 进行主动威胁狩猎意味着在组织环境中持续而系统地搜索潜在安全威胁的指示。为了进行威胁狩猎，安全团队可以利用 Wazuh 进行全面的日志数据分析、与
    MITRE ATT&CK 的无缝集成，以及使用 Osquery（一种端点分析工具）和定期监控。让我们详细介绍这些 Wazuh 功能：
- en: '**Log data analysis**: Threat detection is significantly more effective when
    log data generated by various devices and systems within an organization is analyzed.
    Wazuh functions as a centralized platform for log management and analysis, receiving
    and examining data from a wide range of origins, including endpoints, servers,
    and network devices. In order to conduct a log analysis of each of the devices
    in your network, you need to have decoders for each of them. Wazuh extracts meaningful
    information from log data obtained from various sources using decoders.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志数据分析**：当分析由组织内各种设备和系统生成的日志数据时，威胁检测会更加有效。Wazuh 作为一个集中式日志管理与分析平台，接收并审查来自多个来源的数据，包括端点、服务器和网络设备。为了对网络中每个设备的日志进行分析，你需要为每个设备配置解码器。Wazuh
    使用解码器从来自不同来源的日志数据中提取有意义的信息。'
- en: '**MITRE ATT&CK mapping**: The internationally acclaimed MITRE **Adversarial
    Tactics, Techniques, and Common Knowledge** (**ATT&CK**) framework offers a thorough,
    current knowledge base on adversary tactics and techniques. Wazuh uses MITRE ATT&CK
    to map observed security events to certain ATT&CK approaches, improving threat-hunting
    capabilities. Security teams can gain a better understanding of prospective adversaries’
    strategies by using this mapping.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MITRE ATT&CK 映射**：国际知名的 MITRE **对抗战术、技术与常识**（**ATT&CK**）框架提供了关于对手战术和技术的全面、最新的知识库。Wazuh
    使用 MITRE ATT&CK 将观察到的安全事件映射到特定的 ATT&CK 方法，从而提升威胁狩猎能力。安全团队可以通过这种映射更好地了解潜在对手的策略。'
- en: '**Osquery integration**: An open-source, cross-platform endpoint security framework
    called Osquery enables organizations to communicate with and query their endpoint
    devices to obtain important data for threat hunting. Wazuh and Osquery combine
    to give an organization’s endpoints a comprehensive picture with endpoint visibility
    and live querying.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Osquery 集成**：Osquery 是一个开源的跨平台端点安全框架，使组织能够与端点设备进行通信并查询获取重要的威胁狩猎数据。Wazuh 和
    Osquery 结合，为组织的端点提供全面的端点可视化和实时查询功能。'
- en: '**Command monitoring**: You can use Wazuh’s command tracking feature to track
    the output of certain commands and treat that output as log content. Command monitoring
    can be used for threat hunting to monitor many system properties, such as disk
    space usage, load averages, changes in network listeners, and the state of processes
    that are already running.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令监控**：您可以使用 Wazuh 的命令跟踪功能来跟踪某些命令的输出，并将该输出视为日志内容。命令监控可用于威胁狩猎，监视系统的许多属性，如磁盘空间使用情况、负载平均值、网络监听器的变化，以及已运行进程的状态。'
- en: Let’s get some deeper and more practical knowledge of Wazuh’s log data analysis
    functionality. This capability of Wazuh helps us to perform manual threat hunting
    by analyzing tons of log information.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解 Wazuh 的日志数据分析功能。Wazuh 的这一能力帮助我们通过分析大量日志信息进行手动威胁狩猎。
- en: Log data analysis for threat hunting
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 威胁狩猎的日志数据分析
- en: '**Log data analysis** is a critical component of threat hunting. It involves
    inspecting and retrieving useful information from log files generated by various
    systems, applications, and devices. Traditional security methods may miss suspicious
    patterns or events, but threat hunters can detect them through constant monitoring
    and analysis of logs. Threat hunters examine log data in search of certain **Indicators
    of Compromise** (**IOCs**). These IOCs could be domain names, IP addresses, file
    hashes, or other identifiers linked to known security risks. The problem is that
    not all logs are the same. Depending on the source of the logs you want to gather,
    you may need to create a tailored Wazuh decoder. In this section, we will review
    the following:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**日志数据分析**是威胁狩猎的关键组成部分。它涉及检查和检索由各种系统、应用程序和设备生成的日志文件中的有用信息。传统的安全方法可能会错过可疑的模式或事件，但威胁狩猎人员可以通过持续监控和分析日志来发现这些异常。威胁狩猎人员通过检查日志数据，寻找特定的**妥协指标**（**IOCs**）。这些
    IOCs 可能是域名、IP 地址、文件哈希或其他与已知安全风险相关的标识符。问题是并非所有日志都是相同的。根据您希望收集的日志来源，您可能需要创建定制的 Wazuh
    解码器。在本节中，我们将回顾以下内容：'
- en: Wazuh decoders
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 解码器
- en: Building decoders
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建解码器
- en: Log collection
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志收集
- en: Log data analysis
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志数据分析
- en: Wazuh decoders
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Wazuh 解码器
- en: A **Wazuh decoder** is a component that interprets and extracts useful information
    from raw log data. It collects data from log files or events created by many sources,
    such as operating systems, applications, and network devices, and converts it
    into a standardized format that can easily be analyzed and related. We don’t have
    to create decoders every time we onboard a new endpoint as Wazuh has a selection
    of prebuilt decoders for sources such as Linux, Windows, and macOS.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**Wazuh 解码器**是一个组件，用于解释和提取原始日志数据中的有用信息。它从许多来源（如操作系统、应用程序和网络设备）生成的日志文件或事件中收集数据，并将其转换为标准化格式，便于分析和关联。我们不必每次接入新终端时都创建解码器，因为
    Wazuh 提供了适用于 Linux、Windows 和 macOS 等来源的预构建解码器。'
- en: Wazuh decoders are normally provided as XML files and stored at `/var/ossec/etc/decoders`.
    Each decoder is tailored to a certain log source such as `0025-apache_decoders.xml`
    for Apache, `0100-fortigate_decoders.xml` for FortiGate firewalls, and so on.
    These decoders specify how to parse log data, extract pertinent information (such
    as timestamps, IP addresses, user IDs, and so on), and transform it into a structured
    format suitable for security analysis and threat hunting. Wazuh decoders are extremely
    customizable, allowing users to create custom decoders for specific log sources
    as needed.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 解码器通常以 XML 文件形式提供，并存储在 `/var/ossec/etc/decoders` 目录下。每个解码器针对特定的日志来源量身定制，例如，`0025-apache_decoders.xml`
    适用于 Apache，`0100-fortigate_decoders.xml` 适用于 FortiGate 防火墙，等等。这些解码器指定了如何解析日志数据，提取相关信息（如时间戳、IP
    地址、用户 ID 等），并将其转换为适合安全分析和威胁狩猎的结构化格式。Wazuh 解码器具有极高的可定制性，允许用户根据需要为特定日志来源创建自定义解码器。
- en: Building decoders
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建解码器
- en: 'Creating a custom Wazuh decoder begins with the creation of an XML file that
    explains how to decode and parse log data from a given source. If you want to
    build a custom decoder, you need to first take a look at an example event from
    the source. For example, let’s take a Check Point Firewall log from the decoder
    file available on GitHub at [https://github.com/wazuh/wazuh-ruleset/blob/master/decoders/0050-checkpoint_decoders.xml](https://github.com/wazuh/wazuh-ruleset/blob/master/decoders/0050-checkpoint_decoders.xml):'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 创建自定义 Wazuh 解码器从创建一个 XML 文件开始，该文件解释如何解码和解析来自特定源的日志数据。如果你想构建自定义解码器，你需要首先查看源的示例事件。例如，我们可以查看
    GitHub 上提供的 Check Point 防火墙日志，位于 [https://github.com/wazuh/wazuh-ruleset/blob/master/decoders/0050-checkpoint_decoders.xml](https://github.com/wazuh/wazuh-ruleset/blob/master/decoders/0050-checkpoint_decoders.xml)：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once you have the log, pay close attention to its format. Divide your log into
    two parts: *prematch* and *custom match*. `Jan 21 15:15:45 myCP Checkpoint: 21Jan2019
    15:15:45`. Second, the **custom match** section varies every time. We can also
    call these the *parent decoder* and *child decoder* respectively. Let’s begin
    by writing the prematch decoder first.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '一旦你获得了日志，注意其格式。将日志分为两部分：*预匹配*和*自定义匹配*。`Jan 21 15:15:45 myCP Checkpoint: 21Jan2019
    15:15:45`。其次，**自定义匹配**部分每次都会有所不同。我们也可以分别称它们为*父解码器*和*子解码器*。我们先从编写预匹配解码器开始。'
- en: Parent decoder
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 父解码器
- en: 'When creating a Wazuh decoder, it is a good practice to create a parent decoder
    and then a child decoder to simplify and organize the decoder rules in a file.
    The parent decoder usually consists of the date, time, and device name, and the
    child decoder consists of a specific pattern match. To extract the relevant information
    from the logs, we need to use a regular expression. A regular expression is a
    sequence of characters defining a search. The parent decoder is defined using
    the following `<``prematch>` tags:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建 Wazuh 解码器时，最好先创建一个父解码器，再创建子解码器，以简化和组织文件中的解码器规则。父解码器通常包括日期、时间和设备名称，而子解码器包含特定的模式匹配。为了从日志中提取相关信息，我们需要使用正则表达式。正则表达式是定义搜索的一系列字符。父解码器使用以下
    `<prematch>` 标签定义：
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the preceding regular expression, we can see the following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的正则表达式中，我们可以看到以下内容：
- en: The `\d` operator is used to denote numeric characters from 0 to 9 for the time
    field.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`\d` 操作符用于表示时间字段中的数字字符，从 0 到 9。'
- en: The `\s` operator is used to represent alphabetical characters from `a` to `z`.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`\s` 操作符用于表示字母字符，从 `a` 到 `z`。'
- en: Child decoder
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 子解码器
- en: 'The following decoder rule already exists in the Wazuh decoder ruleset with
    the filename `0050-checkpoint_decoders.xml`. To extract further information from
    the Check Point firewall log, multiple decoder rules have to be created. These
    are used to extract items such as the source IP address, destination IP address,
    source port, destination port, and service. All the rules must start with the
    parent decoder “`checkpoint-syslog`”:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下解码器规则已经存在于 Wazuh 解码器规则集中，文件名为 `0050-checkpoint_decoders.xml`。为了从 Check Point
    防火墙日志中提取更多信息，必须创建多个解码器规则。这些规则用于提取源 IP 地址、目标 IP 地址、源端口、目标端口和服务等项目。所有规则必须以父解码器“`checkpoint-syslog`”开头：
- en: '[PRE2]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'While you are building your decoder, you can get help from the Wazuh built-in
    decoder validator module by running `/var/ossec/bin/wazuh-logtest`. You can also
    perform this test on the Wazuh dashboard by navigating to **Ruleset Test** under
    the **Tools** section. Once you execute the module, you need to enter your original
    Check Point log:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建解码器时，你可以通过运行 `/var/ossec/bin/wazuh-logtest` 来获得 Wazuh 内置解码器验证器模块的帮助。你也可以在
    Wazuh 仪表板上进行此测试，通过导航到 **规则集测试**，在 **工具** 部分下。执行该模块后，你需要输入原始的 Check Point 日志：
- en: '![Figure 6.1 – Executing Wazuh’s decoder validator](img/B19549_6_01.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.1 – 执行 Wazuh 的解码器验证器](img/B19549_6_01.jpg)'
- en: Figure 6.1 – Executing Wazuh’s decoder validator
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1 – 执行 Wazuh 的解码器验证器
- en: 'In the preceding screenshot, we can see the following:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到以下内容：
- en: The phase 1 output shows the pre-decoding, which simply takes the log and processes
    it
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一阶段的输出显示了预解码过程，它只是简单地接收日志并处理它。
- en: The phase 2 and phase 3 output shows that the decoder name `checkpoint-syslog-ids`
    has been detected properly and we receive information such as `srcip`, `dstip`,
    protocol, and `extra_data`
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二阶段和第三阶段的输出显示，解码器名称`checkpoint-syslog-ids`已正确检测，并且我们收到了信息，如`srcip`、`dstip`、协议和`extra_data`。
- en: After creating both the parent and child decoders, we need to create a Wazuh
    rule to trigger an alert once there is a match.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完父和子解码器后，我们需要创建一个 Wazuh 规则，一旦匹配就触发警报。
- en: Creating Wazuh rules
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Wazuh 规则
- en: 'Wazuh rules examine the extracted decoder fields to determine the type of message
    received. The final rule that is matched determines whether an alert is created,
    as well as its level and category groups. For any event that triggers the Check
    Point FW decoders, the following grouping rule will issue an alert:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 规则检查提取的解码器字段以确定接收到的消息类型。匹配的最终规则确定是否创建警报，以及其级别和类别组。对于触发 Check Point FW
    解码器的任何事件，以下分组规则将发出警报：
- en: '[PRE3]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the preceding code, `<decoded_as>` represents the name of the decoder.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，`<decoded_as>` 表示解码器的名称。
- en: Alright, we have learned to create a decoder and the corresponding Wazuh rule,
    taking a Check Point firewall log as an example. Once you have a decoder, you
    can then create a Wazuh rule. If there is a match against any of the events received
    by the Wazuh manager, it will generate a security alert on the dashboard. To conduct
    a comprehensive threat-hunting program, all types of events have to be available
    on the Wazuh platform and hence, building a custom decoder should also be part
    of this process. In the next section, we will learn how Wazuh collects and categorizes
    different types of log data.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们已经学会了创建解码器和相应的 Wazuh 规则，以 Check Point 防火墙日志为例。一旦有了解码器，您可以创建 Wazuh 规则。如果与
    Wazuh 管理器接收的任何事件匹配，它将在仪表板上生成安全警报。要进行全面的威胁猎杀程序，所有类型的事件都必须在 Wazuh 平台上可用，因此构建自定义解码器也应成为此过程的一部分。在接下来的部分中，我们将学习
    Wazuh 如何收集和分类不同类型的日志数据。
- en: Log data collection
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志数据收集
- en: '**Log data collection** means getting logs from different network sources and
    putting them all together. It is critical for threat hunters to access all types
    of logs from across endpoints, servers, security devices, and so on. The Wazuh
    indexer is responsible for log analysis as it stores and indexes alerts generated
    by the Wazuh server. By default, Wazuh will give you alerts that are triggered
    by Wazuh rules. However, we need access to all the events for better threat-hunting
    practice. We will learn to pull out all the events and archive them on the Wazuh
    server. Let’s first discuss the different indices used to store our event types.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**日志数据收集** 意味着从不同网络源获取日志并将它们整合在一起。对于威胁猎手来说，从各个端点、服务器、安全设备等收集所有类型的日志是至关重要的。Wazuh
    索引器负责日志分析，因为它存储并索引由 Wazuh 服务器生成的警报。默认情况下，Wazuh 将提供由 Wazuh 规则触发的警报。然而，我们需要访问所有事件以进行更好的威胁猎杀实践。我们将学习如何提取所有事件并在
    Wazuh 服务器上存档。让我们首先讨论用于存储事件类型的不同索引。'
- en: wazuh-alerts
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: wazuh-alerts
- en: This is the default index that stores the alerts generated by the Wazuh server.
    When normal events get triggered by a rule with high priority, we see the alert
    and it gets stored in the `wazuh-alerts` index.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这是存储 Wazuh 服务器生成的警报的默认索引。当规则优先级高的事件触发正常事件时，我们会看到警报，并将其存储在 `wazuh-alerts` 索引中。
- en: All the information in the `wazuh-alerts` index. To see the `wazuh-alerts` index,
    navigate to the `wazuh-alerts` index will be selected.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 所有信息都在 `wazuh-alerts` 索引中。要查看 `wazuh-alerts` 索引，请导航到将选中的 `wazuh-alerts` 索引。
- en: '![Figure 6.2 – wazuh-alerts index](img/B19549_6_02.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2 – wazuh-alerts 索引](img/B19549_6_02.jpg)'
- en: Figure 6.2 – wazuh-alerts index
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – wazuh-alerts 索引
- en: wazuh-archives
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: wazuh-archives
- en: 'This index keeps track of all events that come in from the Wazuh server, even
    if they don’t set off alerts. The `wazuh-archives` index stores logs and allows
    queries that give more information about what’s happening on monitored endpoints.
    `wazuh-archives` is disabled by default to save space on the Wazuh server. Remember,
    to run an effective threat-hunting program, it is crucial to enable this index.
    Please follow these steps to turn it on, and once it is configured, two new files
    will be created to store all the events, `/var/ossec/logs/archives/archives.log`
    and `/var/ossec/logs/archives/archives.log`:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 此索引跟踪来自 Wazuh 服务器的所有事件，即使它们不触发警报。`wazuh-archives` 索引存储日志并允许查询，提供有关监视端点上发生情况的更多信息。`wazuh-archives`
    默认情况下已禁用，以节省 Wazuh 服务器的空间。请记住，要运行有效的威胁猎手程序，启用此索引至关重要。请按照以下步骤打开它，并一旦配置完成，将创建两个新文件来存储所有事件，即
    `/var/ossec/logs/archives/archives.log` 和 `/var/ossec/logs/archives/archives.log`：
- en: '`/var/ossec/etc/ossec.conf` file, set the value of `<logall>` and `<logall_json>`
    to `yes`:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/ossec/etc/ossec.conf` 文件中，将 `<logall>` 和 `<logall_json>` 的值设置为 `yes`：'
- en: '[PRE4]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Restart the Wazuh manager**: In order for the Wazuh manager to put into effect
    your changes, you are required to restart it with the following command:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**重启 Wazuh 管理器**：为了使 Wazuh 管理器生效你的更改，你需要使用以下命令重启它：'
- en: '[PRE5]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: wazuh-archives index, go to Stack management > index patterns and click on Create
    index pattern.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: wazuh-archives 索引，转到 Stack 管理 > 索引模式，然后点击创建索引模式。
- en: '[PRE6]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Figure 6.3 – Create index pattern](img/B19549_6_03.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – 创建索引模式](img/B19549_6_03.jpg)'
- en: Figure 6.3 – Create index pattern
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – 创建索引模式
- en: '`wazuh-archives-*` index pattern to match all available indices, as shown in
    the following screenshot, and click on **Next step**.'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`wazuh-archives-*` 索引模式以匹配所有可用索引，如下截图所示，然后点击 **下一步**。'
- en: '![Figure 6.4 – Define index pattern](img/B19549_6_04.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.4 – 定义索引模式](img/B19549_6_04.jpg)'
- en: Figure 6.4 – Define index pattern
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4 – 定义索引模式
- en: '`timestamp` in the **Time** **field** box.'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**时间** **字段**框中的`timestamp`。'
- en: '![Figure 6.5 – Set primary time field](img/B19549_6_05.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.5 – 设置主要时间字段](img/B19549_6_05.jpg)'
- en: Figure 6.5 – Set primary time field
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5 – 设置主要时间字段
- en: '**View the dashboard**: Now, to view the events on the dashboard, navigate
    to **Discover** under **OpenSearch Dashboards**.'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**查看仪表盘**：现在，要查看仪表盘上的事件，导航到 **OpenSearch Dashboards** 下的 **发现**。'
- en: '![Figure 6.6 – Discover under the OpenSearch Dashboards menu](img/B19549_6_06.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.6 – 在 OpenSearch Dashboards 菜单下发现](img/B19549_6_06.jpg)'
- en: Figure 6.6 – Discover under the OpenSearch Dashboards menu
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6 – 在 OpenSearch Dashboards 菜单下发现
- en: Make sure you select the **wazuh-archives** index and finally, we get all the
    events.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你选择了 **wazuh-archives** 索引，最后，我们获得了所有事件。
- en: '![Figure 6.7 – Select wazuh-archives](img/B19549_6_07.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.7 – 选择 wazuh-archives](img/B19549_6_07.jpg)'
- en: Figure 6.7 – Select wazuh-archives
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.7 – 选择 wazuh-archives
- en: wazuh-monitoring
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: wazuh-monitoring
- en: This index keeps track of information about the state of Wazuh agents over time.
    The Wazuh agent’s state could be *Pending*, *Active*, *Disconnected*, or *Never
    Connected*. This information is very helpful for finding Wazuh agents that aren’t
    reporting to the dashboard for a number of reasons that need to be looked into.
    If you want to see all the events from the `wazuh-monitoring` index, navigate
    to **Discover** and then change the index to **wazuh-monitoring**.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 此索引跟踪有关 Wazuh 代理状态随时间变化的信息。Wazuh 代理的状态可能是 *待处理*、*活动*、*断开连接* 或 *从未连接*。这些信息对于查找未向仪表盘报告的
    Wazuh 代理非常有帮助，这些代理因多种原因需要进一步调查。如果你想查看所有来自 `wazuh-monitoring` 索引的事件，请导航到 **发现**，然后将索引更改为
    **wazuh-monitoring**。
- en: '![Figure 6.8 – Select wazuh-monitoring](img/B19549_6_08.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.8 – 选择 wazuh-monitoring](img/B19549_6_08.jpg)'
- en: Figure 6.8 – Select wazuh-monitoring
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.8 – 选择 wazuh-monitoring
- en: Everything you see under the **Agents** tab comes from the wazuh-monitoring
    index.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你在 **Agents** 标签下看到的所有内容都来自 wazuh-monitoring 索引。
- en: '![Figure 6.9 – Wazuh Agents tab](img/B19549_6_09.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.9 – Wazuh Agents 标签](img/B19549_6_09.jpg)'
- en: Figure 6.9 – Wazuh Agents tab
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.9 – Wazuh Agents 标签
- en: wazuh-statistics
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: wazuh-statistics
- en: This index holds information about the Wazuh server’s overall performance. This
    information is very important for making sure that the Wazuh server uses its computing
    resources in the best way possible.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此索引包含有关 Wazuh 服务器整体性能的信息。这些信息对于确保 Wazuh 服务器以最佳方式使用计算资源非常重要。
- en: Log data analysis
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志数据分析
- en: 'Log data analysis is a critical component of threat hunting because it gives
    you a lot of information about the activities of systems, and networks. This information
    helps you find security threats early, spot unusual activity and also helps you
    find IOCs. Also note that log collection and log analysis are also important in
    incident response, forensic investigations, security compliance, and many more
    areas. Let’s do some live testing with our `wazuh-archives` log events. We will
    run some notable MITRE ATT&CK techniques on Windows Server 2012 Server using APT
    Simulator and then we will conduct some log data analysis. Let’s get started:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 日志数据分析是威胁狩猎的重要组成部分，因为它可以提供大量有关系统和网络活动的信息。这些信息帮助你早期发现安全威胁，识别异常活动，并帮助你找到 IOCs。还要注意，日志收集和日志分析在事件响应、法医调查、安全合规性等多个领域也至关重要。让我们来做一些关于
    `wazuh-archives` 日志事件的实时测试。我们将使用 APT 模拟器在 Windows Server 2012 上运行一些著名的 MITRE ATT&CK
    技巧，然后进行一些日志数据分析。让我们开始吧：
- en: Prerequisites
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 先决条件
- en: You will need Windows Server 2012 or higher.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要 Windows Server 2012 或更高版本。
- en: '**Sysmon installation**: In this first step, we need to install Sysmon and
    integrate it with Wazuh. Please refer to [*Chapter 2*](B19549_02.xhtml#_idTextAnchor042)*,
    Malware Detection Using Wazuh*, the *Integrating Sysmon to detect fileless malware*
    section in particular, as it covers the step-by-step process to install Sysmon
    on Windows machines.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Sysmon安装**：在第一步中，我们需要安装Sysmon并将其与Wazuh集成。请参考[*第2章*](B19549_02.xhtml#_idTextAnchor042)《使用Wazuh检测恶意软件》部分，特别是“将Sysmon集成以检测无文件恶意软件”一节，因为它涵盖了在Windows机器上安装Sysmon的逐步过程。'
- en: '`APTSimulator-0.9.4` folder, and execute the `APTSimulator.bat` file.'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`APTSimulator-0.9.4`文件夹，并执行`APTSimulator.bat`文件。'
- en: Type `0`. This will run every test including collection, command and control,
    credential access, defense evasion, discovery, execution, lateral movement, persistence,
    and privilege escalation.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型`0`。这将运行包括收集、指挥与控制、凭证访问、规避防御、发现、执行、横向移动、持久性和权限提升在内的所有测试。
- en: '`agent.id`. In my case, `agent.id` is `002`.'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`agent.id`。在我的例子中，`agent.id`是`002`。'
- en: '![Figure 6.10 – Visualizing APT alerts](img/B19549_6_10.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图6.10 – 可视化APT警报](img/B19549_6_10.jpg)'
- en: Figure 6.10 – Visualizing APT alerts
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10 – 可视化APT警报
- en: We have learned to create custom decoders, covered the different Wazuh log data
    indices, and analyzed the log data. In the next section, we will explore the MITRE
    ATT&CK framework and how Wazuh maps the MITRE ATT&CK tactics and techniques.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学会了创建自定义解码器，涵盖了不同的Wazuh日志数据索引，并分析了日志数据。在下一节中，我们将探讨MITRE ATT&CK框架，以及Wazuh如何映射MITRE
    ATT&CK的战术和技术。
- en: MITRE ATT&CK mapping
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MITRE ATT&CK映射
- en: 'We cannot begin threat hunting by assuming everyone in the world is after us.
    We need a targeted threat actor or threat campaign-based approach. This is where
    both Wazuh and MITRE ATT&CK become helpful. Wazuh can collect and trigger any
    alerts, but for threat hunting, we need to focus on relevant and high-priority
    threats to our business and need to map this to our Wazuh rules. The MITRE ATT&CK
    framework helps threat hunters to focus on these kinds of threats and Wazuh allows
    us to map each of the techniques of those threat actors to Wazuh rules. As a result,
    threat hunters can hone their focus and save tremendous amounts of time. In this
    section, we will cover the following topics:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不能通过假设全世界的人都在针对我们来开始威胁狩猎。我们需要一种基于目标威胁行为者或威胁活动的方式。这正是Wazuh和MITRE ATT&CK能够派上用场的地方。Wazuh可以收集并触发任何警报，但对于威胁狩猎，我们需要集中关注对我们业务相关的高优先级威胁，并需要将其映射到我们的Wazuh规则。MITRE
    ATT&CK框架帮助威胁狩猎人员专注于这些威胁，而Wazuh则允许我们将这些威胁行为者的每项技术映射到Wazuh规则。这样，威胁狩猎人员可以集中注意力，节省大量时间。在这一节中，我们将涵盖以下主题：
- en: What is MITRE ATT&CK?
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是MITRE ATT&CK？
- en: The ATT&CK framework
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ATT&CK框架
- en: Prioritizing the adversary’s techniques
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优先考虑对手的技术
- en: MITRE ATT&CK mapping
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MITRE ATT&CK映射
- en: What is MITRE ATT&CK?
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是MITRE ATT&CK？
- en: The **MITRE ATT&CK** framework was developed by the MITRE Corporation to provide
    a uniform taxonomy for analyzing and categorizing cyber threats. It provides a
    common language that both defensive and offensive teams in security operations
    can utilize to improve their capabilities.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**MITRE ATT&CK**框架是由MITRE公司开发的，旨在提供一个统一的分类法来分析和归类网络威胁。它提供了一个共同的语言，安全操作中的防御和进攻团队都可以利用它来提升他们的能力。'
- en: Tactics, techniques, and procedures (TTPs)
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 战术、技术和流程（TTPs）
- en: 'The **MITRE ATT&CK framework** is used to categorize and comprehend cyber attackers’
    **tactics, methods, and procedures** (**TTPs**) during security operations. TTPs
    are used for organizing threat intelligence, threat detection, building an effective
    incident response, conducting a security gap analysis, and threat hunting. Let’s
    first understand what the TTP concept involves:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**MITRE ATT&CK框架**用于在安全操作过程中对网络攻击者的**战术、方法和流程**（**TTPs**）进行分类和理解。TTPs用于组织威胁情报、威胁检测、构建有效的事件响应、进行安全漏洞分析和威胁狩猎。让我们首先了解TTP概念的内容：'
- en: '**Tactics**: These are the main modes of action that attackers use to reach
    their targets. Consider tactics as the “*what*” of an attack, such as gaining
    initial access or causing damage.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**战术**：这些是攻击者用来达到目标的主要行动模式。可以把战术看作是攻击的“*目的*”，比如获得初步访问权限或造成损害。'
- en: '**Techniques**: Techniques are precise ways or acts that attackers use to carry
    out their tactics. They are the “*how*” of an attack, outlining the processes
    or tools utilized to achieve an objective.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术**：技术是攻击者用来执行其战术的具体方法或行为。它们是攻击的“*如何*”，列出了为达成目标而使用的过程或工具。'
- en: '**Procedures**: Procedures involve greater levels of specificity and detail
    in comparison to techniques. Procedures are like “*step-by-step instructions*”
    for carrying out an attack.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**程序**：与技术相比，程序涉及更高层次的细节和具体性。程序就像是“*一步步的操作指南*”来执行攻击。'
- en: ATT&CK framework
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ATT&CK 框架
- en: 'MITRE ATT&CK is made up of several critical components that work together to
    provide a thorough understanding of adversary TTPs:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: MITRE ATT&CK 由多个关键组件组成，这些组件共同作用，以提供对对手 TTP 的透彻理解：
- en: Matrices
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵
- en: Tactics
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 战术
- en: Techniques
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术
- en: Procedures
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 程序
- en: Groups
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 群组
- en: Software
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件
- en: Matrices
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 矩阵
- en: 'The ATT&CK framework has three matrices: *Enterprise*, *Mobile*, and *Cloud*.
    The Enterprise Matrix is the most widely used matrix in the ATT&CK framework.
    Let’s understand some of the technologies covered under each of these matrices
    as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: ATT&CK 框架有三个矩阵：*企业*、*移动*和*云*。企业矩阵是 ATT&CK 框架中最常用的矩阵。接下来我们了解一下在这些矩阵下涵盖的一些技术：
- en: '![Figure 6.11 – MITRE ATT&CK matrices](img/B19549_6_11.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.11 – MITRE ATT&CK 矩阵](img/B19549_6_11.jpg)'
- en: Figure 6.11 – MITRE ATT&CK matrices
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.11 – MITRE ATT&CK 矩阵
- en: The Enterprise Matrix contains information about platforms such as Windows,
    macOS, Azure, Office 365, SaaS, IaaS, network, and cloud
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业矩阵包含有关平台的信息，如 Windows、macOS、Azure、Office 365、SaaS、IaaS、网络和云。
- en: The Mobile Matrix covers techniques used by adversaries related to Android or
    iOS
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动矩阵涵盖了与 Android 或 iOS 相关的对手技术。
- en: ICS covers industrial control system-related tactics and techniques
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ICS 涵盖了与工业控制系统相关的战术和技术。
- en: Throughout this chapter, our primary focus will be on the Enterprise Matrix.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们的主要关注点将是企业矩阵。
- en: Tactics
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 战术
- en: MITRE ATT&CK provides 14 **tactics** that consist of several sets of techniques.
    In the following screenshot, you can see at the top of each column all of the
    tactics, and under each tactic column, you can find several techniques.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: MITRE ATT&CK 提供了 14 个 **战术**，每个战术由多组技术组成。在下图中，你可以看到每一列的顶部是所有战术，而每个战术列下方则列出了多个技术。
- en: '![Figure 6.12 – MITRE ATT&CK Tactics](img/B19549_6_12.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.12 – MITRE ATT&CK 战术](img/B19549_6_12.jpg)'
- en: Figure 6.12 – MITRE ATT&CK Tactics
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.12 – MITRE ATT&CK 战术
- en: Techniques
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 技术
- en: '**Techniques** are specific means or procedures used by opponents to carry
    out tactics. For example, under the *Execution tactic*, you might find techniques
    such as *Command-Line Interface* or *Scripting*. Visit [attack.mitre.org](http://attack.mitre.org)
    and click on any technique to display a list of sub-techniques. As an example,
    I selected the **Reconnaissance** tactic, then under that I clicked on the **Gather
    Victim Network Information** technique, and as a result, I got six sub-techniques:
    **Domain Properties**, **DNS**, **Network Trust Dependencies**, **Network Topology**,
    **IP Addresses**, and **Network Security Appliances** as shown in the following
    screenshot.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**技术**是对手用来实施战术的具体手段或程序。例如，在*执行战术*下，可能会找到像*命令行界面*或*脚本编写*这样的技术。访问 [attack.mitre.org](http://attack.mitre.org)，点击任何技术以显示子技术的列表。举个例子，我选择了**侦察**战术，然后点击了其中的**收集受害者网络信息**技术，结果我得到了六个子技术：**域名属性**、**DNS**、**网络信任依赖**、**网络拓扑**、**IP
    地址**和**网络安全设备**，如以下截图所示。'
- en: '![Figure 6.13 – MITRE ATT&CK techniques](img/B19549_6_13.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.13 – MITRE ATT&CK 技术](img/B19549_6_13.jpg)'
- en: Figure 6.13 – MITRE ATT&CK techniques
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.13 – MITRE ATT&CK 技术
- en: Procedures
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 程序
- en: '**Procedures** describe step by step and in detail how adversaries perform
    various techniques. In our preceding example, we got six sub-techniques. Click
    on any of those sub-techniques and you will land on a page with a list of example
    procedures.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序**详细描述了对手如何逐步执行各种技术。在我们前面的例子中，我们得到了六个子技术。点击任何一个子技术，你将跳转到一个包含示例程序列表的页面。'
- en: '![Figure 6.14 – MITRE ATT&CK procedures](img/B19549_6_14.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.14 – MITRE ATT&CK 程序](img/B19549_6_14.jpg)'
- en: Figure 6.14 – MITRE ATT&CK procedures
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.14 – MITRE ATT&CK 程序
- en: Groups
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 群组
- en: '**Groups** are sets of threat actors or cybercriminal organizations that are
    known to use specific TTPs. You can refer to a list of all threat actors documented
    by MITRE ATT&CK at [https://attack.mitre.org/groups/](https://attack.mitre.org/groups/).'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**群组**是已知使用特定 TTP（战术、技术、程序）的一组威胁行为者或网络犯罪组织。你可以在 [https://attack.mitre.org/groups/](https://attack.mitre.org/groups/)
    查阅 MITRE ATT&CK 记录的所有威胁行为者列表。'
- en: Software
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 软件
- en: '**Software** lists the exact pieces of malware, tools, and software that attackers
    use to carry out their objectives. This helps threat hunters to identify the threat
    group based on the tools they use.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**软件**列出了攻击者用来执行目标的确切恶意软件、工具和软件。这有助于威胁狩猎人员根据攻击者使用的工具来识别威胁组。'
- en: Prioritizing the adversary’s techniques
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优先排序敌对方的技术
- en: 'ATT&CK Navigator is a powerful analytical tool developed by MITRE as a part
    of the MITRE ATT&CK framework. It provides a web-based interactive interface,
    helping threat hunters and security professionals to explore, visualize, and prioritize
    techniques used by threat actors. ATT&CK Navigator also helps in aligning security
    controls against known adversary techniques. You can access the tool at [https://mitre-attack.github.io/attack-navigator/](https://mitre-attack.github.io/attack-navigator/):'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: ATT&CK Navigator是MITRE开发的强大分析工具，作为MITRE ATT&CK框架的一部分。它提供了一个基于Web的交互式界面，帮助威胁狩猎人员和安全专家探索、可视化并优先排序威胁行为者使用的技术。ATT&CK
    Navigator还帮助对已知的敌对技术对齐安全控制。你可以在[https://mitre-attack.github.io/attack-navigator/](https://mitre-attack.github.io/attack-navigator/)访问该工具。
- en: '![Figure 6.15 – ATT&CK Navigator](img/B19549_6_15.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图6.15 – ATT&CK Navigator](img/B19549_6_15.jpg)'
- en: Figure 6.15 – ATT&CK Navigator
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15 – ATT&CK Navigator
- en: 'The numbers in the preceding screenshot refer to the following:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 上述截图中的数字对应如下：
- en: '**1** is **layer**, used to create multiple ATT&CK framework layers.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1**是**层**，用于创建多个ATT&CK框架层。'
- en: '**2** is **section controls**, which gives the following options:'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**2**是**部分控制**，提供以下选项：'
- en: Selection behavior
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择行为
- en: A search button for selecting techniques, threat groups, software, campaigns,
    data sources, and more
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个搜索按钮，用于选择技术、威胁组、软件、活动、数据源等
- en: The option to deselect all techniques
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 取消选择所有技术的选项
- en: '**3** is **layer controls**, which have the following options:'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3**是**层控制**，具有以下选项：'
- en: The option to add metadata information to each layer, including a name, description,
    and other custom metadata
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向每个层添加元数据的选项，包括名称、描述和其他自定义元数据
- en: Download the layer in JSON format
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以JSON格式下载层
- en: Export the layer in XML format
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将层导出为XML格式
- en: Download the layer in SVG format
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以SVG格式下载层
- en: A filter option to display techniques based on Linux, macOS, Windows, containers,
    and so on
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据Linux、macOS、Windows、容器等显示技术的过滤选项
- en: Sorting the techniques based on AI
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据AI对技术进行排序
- en: 'Color setup: You can choose a specific color for certain tactics on the interface'
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜色设置：你可以为界面上的某些策略选择特定的颜色
- en: '**4** is **technique controls**, which is useful to mark specific techniques
    with a color and score. We will use this feature when we combine multiple layers
    to identify overlapping techniques of multiple threat actors.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**4**是**技术控制**，它用于为特定技术标记颜色和分数。当我们将多个层组合起来识别多个威胁行为者的重叠技术时，我们将使用此功能。'
- en: Practical use case using MITRE ATT&CK
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用MITRE ATT&CK的实际使用案例
- en: 'Let me take you through a practical use case to perform threat hunting using
    MITRE ATT&CK. Imagine yourself as a threat hunter working for a financial services
    organization based in the United States. After doing some research on the **Groups**
    page ([https://attack.mitre.org/groups/](https://attack.mitre.org/groups/)) of
    the MITRE ATT&CK official website, you settled on two relevant threat actors that
    target financial services organizations based in the United States. These are
    APT19 and APT38\. (Remember, this is only an example – I suggest you do your research
    based on your specific industry, software, target countries, and so on.) To discover
    the priority techniques, we need to find common techniques used by both APT19
    and APT38\. To do this, we need to customize the ATT&CK Navigator layers as explained
    in the following steps:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 让我通过一个实际的使用案例来带你进行基于MITRE ATT&CK的威胁狩猎。假设你是一个威胁狩猎人员，为一家位于美国的金融服务组织工作。在MITRE ATT&CK官方网站的**Groups**页面（[https://attack.mitre.org/groups/](https://attack.mitre.org/groups/)）上进行了一些研究后，你确定了两个针对美国金融服务组织的相关威胁行为者。它们分别是APT19和APT38。（记住，这只是一个示例——我建议你根据自己的行业、软件、目标国家等进行研究。）为了发现优先级技术，我们需要找到APT19和APT38都使用的共同技术。为此，我们需要按照以下步骤自定义ATT&CK
    Navigator的层：
- en: Open ATT&CK Navigator, click **Create New Layer**, and then select **Enterprise**
    as shown in the following screenshot.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开ATT&CK Navigator，点击**创建新层**，然后选择**企业**，如以下截图所示。
- en: '![Figure 6.16 – Create a new layer in ATT&CK Navigator](img/B19549_6_16.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![图6.16 – 在ATT&CK Navigator中创建新层](img/B19549_6_16.jpg)'
- en: Figure 6.16 – Create a new layer in ATT&CK Navigator
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.16 – 在 ATT&CK Navigator 中创建新层
- en: Click the search button under **section controls** and search for **APT19**
    under **Threat Groups**.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **部分控制** 下的搜索按钮，并在 **威胁组** 中搜索 **APT19**。
- en: '![Figure 6.17 – Select APT19 from Threat Groups](img/B19549_6_17.jpg)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.17 – 从威胁组中选择 APT19](img/B19549_6_17.jpg)'
- en: Figure 6.17 – Select APT19 from Threat Groups
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.17 – 从威胁组中选择 APT19
- en: Next, click the layer information button under `APT19` with the description
    `TTPs of APT19 - Initial` `threat analysis`.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击 `APT19` 下的层信息按钮，描述为 `APT19 的 TTPs - 初始` `威胁分析`。
- en: '![Figure 6.18 – Enter basic information about the layer](img/B19549_6_18.jpg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.18 – 输入层的基本信息](img/B19549_6_18.jpg)'
- en: Figure 6.18 – Enter basic information about the layer
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.18 – 输入层的基本信息
- en: Next, set the color of the APT19 techniques to red. To do this, click on the
    background color button under **technique controls**.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将 APT19 技术的颜色设置为红色。为此，点击 **技术控制** 下的背景颜色按钮。
- en: '![Figure 6.19 – Apply a color to the APT19 techniques](img/B19549_6_19.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.19 – 为 APT19 技术应用颜色](img/B19549_6_19.jpg)'
- en: Figure 6.19 – Apply a color to the APT19 techniques
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.19 – 为 APT19 技术应用颜色
- en: Next, click on scoring under `1`.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击 `1` 下的评分。
- en: '![Figure 6.20 – Set a score for the APT19 techniques](img/B19549_6_20.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.20 – 为 APT19 技术设置评分](img/B19549_6_20.jpg)'
- en: Figure 6.20 – Set a score for the APT19 techniques
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.20 – 为 APT19 技术设置评分
- en: 'Repeat the same steps for APT38 with the following details:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对 APT38 重复相同的步骤，使用以下信息：
- en: Create a new layer.
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新层。
- en: Click the search button under `APT38` with the description `TTPs of APT38 -
    Initial` `threat analysis`.
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `APT38` 下的搜索按钮，描述为 `APT38 的 TTPs - 初始` `威胁分析`。
- en: Set the color of the APT38 techniques to green by clicking on the background
    color button under `2`.
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 `2` 下的背景颜色按钮，将 APT38 技术的颜色设置为绿色。
- en: The final APT38 layer will look like the following.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最终的 APT38 层将如下所示。
- en: '![Figure 6.21 – APT38 layer](img/B19549_6_21.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.21 – APT38 层](img/B19549_6_21.jpg)'
- en: Figure 6.21 – APT38 layer
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.21 – APT38 层
- en: Now, merge both layers to get the common techniques used by both APT19 and APT38\.
    This will help us to prioritize the adversary’s techniques. Click on **Create
    New Layer** and then click on **Create Layer from** **other layers**.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，合并两个层，得到 APT19 和 APT38 都使用的共同技术。这将帮助我们优先考虑对手使用的技术。点击 **创建新层**，然后点击 **从其他层创建层**。
- en: '![Figure 6.22 – Create Layer from other layers](img/B19549_6_22.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.22 – 从其他层创建层](img/B19549_6_22.jpg)'
- en: Figure 6.22 – Create Layer from other layers
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.22 – 从其他层创建层
- en: 'Enter the following information:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下信息：
- en: '`Enterprise` `ATT&CK v13`'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`企业` `ATT&CK v13`'
- en: '`a+b`'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`a+b`'
- en: You can leave everything else blank, then click on the **Create** button at
    the bottom.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将其他部分保持空白，然后点击底部的 **创建** 按钮。
- en: '![Figure 6.23 – Provide the domain and set expression](img/B19549_6_23.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.23 – 提供域并设置表达式](img/B19549_6_23.jpg)'
- en: Figure 6.23 – Provide the domain and set expression
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.23 – 提供域并设置表达式
- en: Once you click on **Create**, you will find a new layer with red techniques
    from APT19, yellow techniques from APT38, and green techniques that are common
    to both APT groups, as shown in the following screenshot.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建** 后，你将看到一个新层，其中包含来自 APT19 的红色技术、来自 APT38 的黄色技术，以及两组 APT 都共有的绿色技术，如下图所示。
- en: '![Figure 6.24 – Layers showing techniques from APT19 and APT38](img/B19549_6_24.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.24 – 显示 APT19 和 APT38 技术的层](img/B19549_6_24.jpg)'
- en: Figure 6.24 – Layers showing techniques from APT19 and APT38
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.24 – 显示 APT19 和 APT38 技术的层
- en: 'Based on the final layers, there are four common techniques. The threat hunter
    could now start their hunting process by focusing on these four techniques:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 基于最终的层，有四种常见的技术。威胁猎人可以通过聚焦于这四种技术开始他们的猎杀过程：
- en: '**Drive-by Compromise** with technique ID T1189 under the **Initial** **Access**
    tactic'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**驱动-by 入侵**，技术 ID 为 T1189，属于 **初始** **访问** 策略'
- en: '**Modify Registry** with technique ID T1112 under the **Defense** **Evasion**
    tactic'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**修改注册表**，技术 ID 为 T1112，属于 **防御** **规避** 策略'
- en: '**System Information Discovery** with technique ID T1082 under the **Discovery**
    tactic'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统信息发现**，技术 ID 为 T1082，属于 **发现** 策略'
- en: '**System Owner/User Discovery** with technique ID T1033 under the **Discovery**
    tactic'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统所有者/用户发现**，技术 ID 为 T1033，属于 **发现** 策略'
- en: Wazuh MITRE ATT&CK mapping
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Wazuh MITRE ATT&CK 映射
- en: 'Wazuh maps the security events in the environment to the MITRE ATT&CK framework’s
    TTPs. Wazuh helps security teams by matching them with known threat groups’ TTPs.
    In order to map a MITRE ATT&CK technique ID to a specific Wazuh event, you need
    to add the `<mitre>` tag under the given rule. For example, if you want to create
    a Wazuh rule to associate SSH brute-force attacks with MITRE technique ID T1110,
    you will use the following rule:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 将环境中的安全事件映射到 MITRE ATT&CK 框架的 TTPs。Wazuh 通过与已知威胁团体的 TTPs 匹配，帮助安全团队。在将
    MITRE ATT&CK 技术 ID 映射到特定的 Wazuh 事件时，你需要在给定的规则下添加 `<mitre>` 标签。例如，如果你想创建一个 Wazuh
    规则，将 SSH 暴力破解攻击与 MITRE 技术 ID T1110 相关联，你将使用以下规则：
- en: '[PRE7]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can also verify all the security events related to MITRE ID T1110 by going
    to the MITRE ATT&CK module in Wazuh and searching for **T1110** under **Techniques**.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过进入 Wazuh 中的 MITRE ATT&CK 模块，并在 **Techniques** 下搜索 **T1110**，来验证所有与 MITRE
    ID T1110 相关的安全事件。
- en: '![Figure 6.25 – MITRE ATT&CK visualization in Wazuh](img/B19549_6_25.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.25 – Wazuh 中的 MITRE ATT&CK 可视化](img/B19549_6_25.jpg)'
- en: Figure 6.25 – MITRE ATT&CK visualization in Wazuh
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.25 – Wazuh 中的 MITRE ATT&CK 可视化
- en: Once you click on **T1110**, you will see all the security events associated
    with this MITRE ID, as shown in the following screenshot.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击 **T1110**，你将看到与此 MITRE ID 相关的所有安全事件，如下图所示。
- en: '![Figure 6.26 – Security events related to MITRE ATT&CK technique ID T1110](img/B19549_6_26.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.26 – 与 MITRE ATT&CK 技术 ID T1110 相关的安全事件](img/B19549_6_26.jpg)'
- en: Figure 6.26 – Security events related to MITRE ATT&CK technique ID T1110
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.26 – 与 MITRE ATT&CK 技术 ID T1110 相关的安全事件
- en: We have learned to prioritize techniques using ATT&CK Navigator and created
    a Wazuh rule mapped to a MITRE ATT&CK technique ID. This helps security teams
    and threat hunters to discover triggers to start their investigations. In the
    next section, we will learn to utilize the Osquery tool to conduct comprehensive
    threat hunting.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学会了如何使用 ATT&CK Navigator 来优先排序技术，并创建了一个映射到 MITRE ATT&CK 技术 ID 的 Wazuh 规则。这有助于安全团队和威胁猎手发现触发器并开始调查。在接下来的部分中，我们将学习如何使用
    Osquery 工具进行全面的威胁狩猎。
- en: Threat hunting using Osquery
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Osquery 进行威胁狩猎
- en: 'When it comes to threat hunting, we need in-depth visibility of endpoint activities
    and the ability to run queries to allow the threat hunter to retrieve IOCs, suspicious
    activities, and vulnerabilities in a given endpoint. **Osquery** is the ideal
    tool for this purpose. It helps threat hunters treat their entire IT infrastructure,
    including endpoints, as a structured database that can be queried using SQL-like
    commands. You can get real-time, detailed information about your systems with
    Osquery and keep an eye on them for signs of compromise. In this section, we will
    cover the following topics:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在威胁狩猎方面，我们需要深入了解端点活动，并能够运行查询，让威胁猎手检索 IOC、可疑活动和给定端点的漏洞。**Osquery** 是实现这一目标的理想工具。它帮助威胁猎手将整个
    IT 基础设施（包括端点）视为一个可以通过 SQL 类似命令查询的结构化数据库。你可以通过 Osquery 获取系统的实时详细信息，并密切关注是否有妥协迹象。在本节中，我们将讨论以下主题：
- en: What is Osquery?
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Osquery？
- en: Installing Osquery
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Osquery
- en: Integrating Osquery with Wazuh
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Osquery 与 Wazuh 集成
- en: Threat hunting with Osquery and Wazuh
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Osquery 和 Wazuh 进行威胁狩猎
- en: What is Osquery?
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 Osquery？
- en: '**Osquery** is an open-source tool built by Facebook in 2014\. It converts
    the target operating system into a relational database and allows us to ask questions
    from the table using SQL queries containing things such as information about the
    state of remote machines, running processes, active user accounts, active network
    connections, and much more. Osquery can be installed on Windows, Linux, macOS,
    and FreeBSD.'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '**Osquery** 是一个由 Facebook 于 2014 年构建的开源工具。它将目标操作系统转换为关系数据库，并允许我们通过 SQL 查询从表格中提问，查询内容包括远程机器的状态、正在运行的进程、活跃的用户帐户、活跃的网络连接等信息。Osquery
    可以安装在 Windows、Linux、macOS 和 FreeBSD 上。'
- en: 'Osquery is heavily used by security analysts, **digital forensic and incident
    response** (**DFIR**) analysts, and threat hunters. Before we discuss how threat
    hunters can utilize Osquery with Wazuh, let me first share with you some simple
    use cases of Osquery:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: Osquery 被安全分析师、**数字取证与事件响应**（**DFIR**）分析师和威胁猎手广泛使用。在讨论威胁猎手如何结合 Wazuh 使用 Osquery
    之前，先与大家分享一些 Osquery 的简单用例：
- en: '**Use case #1 – query for the top 10 largest processes by resident** **memory
    size**'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用例 #1 – 查询按常驻内存大小排序的前 10 个最大进程**'
- en: 'To get the list of the top 10 largest processes by memory size, use this query:'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 若要获取按内存大小排序的前 10 个最大进程列表，请使用以下查询：
- en: '[PRE8]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Figure 6.27 – Result of top 10 largest processes by memory size](img/B19549_6_27.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.27 – 根据内存大小列出的前 10 个最大进程结果](img/B19549_6_27.jpg)'
- en: Figure 6.27 – Result of top 10 largest processes by memory size
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.27 – 根据内存大小列出的前 10 个最大进程结果
- en: '**Use case #2 – query the list of the top 10 most active processes with** **process
    counts**'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用例 #2 – 查询最活跃的前 10 个进程及其进程计数**'
- en: 'In this use case, we will utilize Osquery to retrieve from the system the top
    10 active processes based on their frequency and process count. The query is as
    follows:'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此用例中，我们将使用 Osquery 从系统中检索最活跃的前 10 个进程，基于它们的频率和进程计数。查询如下：
- en: '[PRE9]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Once the query is executed, you will get the result in the form of a table with
    the process names and corresponding frequencies. The output is shown in the following
    screenshot.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦查询执行完成，您将以表格形式获取进程名称及其对应的频率。输出结果如下图所示。
- en: '![Figure 6.28 – Result of the top 10 most active processes with process counts](img/B19549_6_28.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.28 – 最活跃的前 10 个进程及其进程计数结果](img/B19549_6_28.jpg)'
- en: Figure 6.28 – Result of the top 10 most active processes with process counts
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.28 – 最活跃的前 10 个进程及其进程计数结果
- en: Before we integrate Osquery with Wazuh, we need to install Osquery in each of
    the individual Wazuh agents.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在将 Osquery 与 Wazuh 集成之前，我们需要在每个独立的 Wazuh 代理上安装 Osquery。
- en: Installing Osquery
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Osquery
- en: The process of installing Osquery is different for each platform. In this section,
    we will cover the installation of Osquery on an Ubuntu machine and a Windows machine.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: Osquery 的安装过程因平台不同而有所差异。在本节中，我们将介绍如何在 Ubuntu 机器和 Windows 机器上安装 Osquery。
- en: Installing Osquery on Ubuntu Server/Desktop
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Ubuntu 服务器/桌面上安装 Osquery
- en: 'Installation of Osquery on the Ubuntu Server requires the OSQUERY KEY and downloading
    the official Osquery package, explained as follows:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 服务器上安装 Osquery 需要 OSQUERY KEY 和下载官方的 Osquery 安装包，具体步骤如下：
- en: '`OSQUERY_KEY` to store the GPG key used to validate the Osquery package’s authenticity.
    This key is required to confirm that the packages you download are from a reliable
    source:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`OSQUERY_KEY` 用于存储 GPG 密钥，验证 Osquery 包的真实性。此密钥用于确认您下载的包来自可靠来源：'
- en: '[PRE10]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $OSQUERY_KEY
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $OSQUERY_KEY
- en: '[PRE11]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Add the Osquery repository and update** **the package**'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**添加 Osquery 仓库并更新** **安装包**'
- en: 'Next, you must add the Osquery repository to the list of software sources on
    your system. The Osquery package will be installed from this repository:'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，您需要将 Osquery 仓库添加到系统的软件源列表中。Osquery 包将从这个仓库安装：
- en: '[PRE12]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: apt-get install osquery
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: apt-get install osquery
- en: '[PRE13]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Installing Osquery on Windows
  id: totrans-285
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 Osquery
- en: Installing Osquery on Windows desktops is pretty simple. Please visit the official
    website of Osquery and download the packages. The website is [https://www.osquery.io/](https://www.osquery.io/).
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 桌面上安装 Osquery 非常简单。请访问 Osquery 的官方网站并下载相应的安装包。网址是 [https://www.osquery.io/](https://www.osquery.io/)。
- en: Integrating Osquery with Wazuh
  id: totrans-287
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Osquery 与 Wazuh 集成
- en: 'The good news is that Wazuh is already integrated with Osquery. We just need
    to enable it and make some minor changes to the Osquery configuration file. Follow
    these steps to complete the installation:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是 Wazuh 已经与 Osquery 集成。我们只需要启用它，并对 Osquery 配置文件进行一些小的修改。按照以下步骤完成安装：
- en: '`ossec.conf` file in the Wazuh agent and change the `<disabled>` tag value
    to `no` under <`wodle name="osquery"`:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改 Wazuh 代理中的 `ossec.conf` 文件，将 `<disabled>` 标签值改为 `no`，并在 <`wodle name="osquery"`
    下进行配置：
- en: '[PRE14]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In the preceding code, we can see the following:'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们可以看到以下内容：
- en: '`<log_path>` represents the location of the Osquery logs'
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<log_path>` 代表 Osquery 日志的位置'
- en: '`<config_path>` shows the location of the Osquery configuration file'
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<config_path>` 显示了 Osquery 配置文件的位置'
- en: '`/opt/osquery/share/osquery/osquery.example.conf`.'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/opt/osquery/share/osquery/osquery.example.conf`。'
- en: 'Let’s copy the file to `/etc/osquery/osquery.conf` using the `cp` command:'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们使用 `cp` 命令将文件复制到 `/etc/osquery/osquery.conf`：
- en: '[PRE15]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '"packs": {'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"packs": {'
- en: '"osquery-monitoring": "/opt/osquery/share/osquery/packs/osquery-monitoring.conf",'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"osquery-monitoring": "/opt/osquery/share/osquery/packs/osquery-monitoring.conf",'
- en: '"incident-response": "/opt/osquery/share/osquery/packs/incident-response.conf",'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"incident-response": "/opt/osquery/share/osquery/packs/incident-response.conf",'
- en: '"it-compliance": "/opt/osquery/share/osquery/packs/it-compliance.conf",'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"it-compliance": "/opt/osquery/share/osquery/packs/it-compliance.conf",'
- en: '"vuln-management": "/opt/osquery/share/osquery/packs/vuln-management.conf",'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"vuln-management": "/opt/osquery/share/osquery/packs/vuln-management.conf",'
- en: '"hardware-monitoring": "/opt/osquery/share/osquery/packs/hardware-monitoring.conf",'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"hardware-monitoring": "/opt/osquery/share/osquery/packs/hardware-monitoring.conf",'
- en: '"ossec-rootkit": "/opt/osquery/share/osquery/packs/ossec-rootkit.conf"'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '"ossec-rootkit": "/opt/osquery/share/osquery/packs/ossec-rootkit.conf"'
- en: '}'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE16]'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**Restart Osquery**: Now, you need to restart Osquery for your changes to take
    effect:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**重启Osquery**：现在，您需要重启Osquery以使您的更改生效：'
- en: '[PRE17]'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Threat hunting with Osquery
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Osquery进行威胁狩猎
- en: Osquery gives you a SQL-like way to query requests and get real-time information
    about how a system is running. This lets security teams do proactive investigations
    and find threats. Threat hunting with Osquery involves actively searching for
    system information such as suspicious processes, unwanted software or modules,
    abnormal network connections, registry settings, file integrity, and more. For
    testing purposes, we will write some Osquery queries based on popular MITRE ATT&CK
    techniques.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: Osquery为您提供了一种类似SQL的方式来查询请求并实时获取系统运行状态的信息。这让安全团队可以进行主动调查并发现威胁。使用Osquery进行威胁狩猎包括积极搜索系统信息，如可疑进程、不需要的软件或模块、异常网络连接、注册表设置、文件完整性等。为了测试目的，我们将根据流行的MITRE
    ATT&CK技巧编写一些Osquery查询。
- en: It is sufficient to run the queries on a single endpoint for testing purposes
    and to demonstrate the information retrievable by Osquery. However, keep in mind
    that the true power of Osquery presents itself when it is widely deployed and
    administered centrally by the Wazuh manager. Let’s focus on discovering persistence
    tactics in our environment by utilizing a few of its associated techniques.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 对于测试目的，仅在单个端点上运行查询即可展示Osquery可检索的信息。但请记住，Osquery的真正力量在于广泛部署并由Wazuh管理器集中管理时才能体现出来。让我们通过利用一些相关技巧，专注于在环境中发现持久性战术。
- en: Local Job Scheduling (MITRE ATT&CK ID T1168)
  id: totrans-311
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 本地作业调度（MITRE ATT&CK ID T1168）
- en: 'Adversaries utilize local job scheduling to schedule and execute tasks or jobs
    on a hacked system. It is covered by MITRE ATT&CK framework under *technique ID
    1168*. On Linux-based systems, adversaries can schedule their multi-step attack
    jobs by abusing the Cron service. They may set up new Cron jobs to run harmful
    scripts or commands on a regular basis. You can use the following query to retrieve
    information about local Cron jobs:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 对手利用本地作业调度来安排并执行被攻陷系统上的任务或作业。这在MITRE ATT&CK框架中由*技巧 ID 1168*覆盖。在基于Linux的系统上，对手可以通过滥用Cron服务来安排其多步骤攻击作业。他们可能会设置新的Cron作业，以定期运行有害的脚本或命令。您可以使用以下查询来检索本地Cron作业的信息：
- en: '[PRE18]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Once this query is executed, you will see the result in the form of a table
    with the command and corresponding path, as shown in the following screenshot:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此查询后，您将看到以表格形式显示的结果，包含命令和相应路径，如下截图所示：
- en: '![Figure 6.29 – Resulting list of local Cron jobs](img/B19549_6_29.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.29 – 本地Cron作业的结果列表](img/B19549_6_29.jpg)'
- en: Figure 6.29 – Resulting list of local Cron jobs
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.29 – 本地Cron作业的结果列表
- en: Kernel Modules and Extensions (MITRE ATT&CK ID T1215)
  id: totrans-317
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 内核模块和扩展（MITRE ATT&CK ID T1215）
- en: 'Adversaries can ensure that their code runs each time the system reboots by
    installing a malicious kernel module or extension at startup or during system
    initialization. This makes it difficult to identify and uninstall. This is described
    under MITRE ATT&CK technique *ID T1215*. Kernel modules are pieces of code that
    can be dynamically loaded and unloaded from an operating system’s kernel. The
    query to retrieve the kernel modules is as follows:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 对手可以通过在系统启动时或系统初始化过程中安装恶意内核模块或扩展，确保每次系统重启时其代码都会运行。这使得识别和卸载变得困难。这一点在MITRE ATT&CK技巧*ID
    T1215*中有描述。内核模块是可以从操作系统内核动态加载和卸载的代码片段。检索内核模块的查询如下所示：
- en: '[PRE19]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Once this query is executed, you will get a list of all the kernel modules as
    shown in the following screenshot.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此查询后，您将获得如下截图所示的所有内核模块列表。
- en: '![Figure 6.30 – Result of list of kernel modules](img/B19549_6_30.jpg)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.30 – 内核模块列表结果](img/B19549_6_30.jpg)'
- en: Figure 6.30 – Result of list of kernel modules
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.30 – 内核模块列表结果
- en: Redundant Access (MITRE ATT&CK ID T1108)
  id: totrans-323
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 冗余访问（MITRE ATT&CK ID T1108）
- en: '**Redundant access** is a strategy in which adversaries create several paths
    or techniques for accessing and manipulating a victim machine. This works like
    a “plan B” for threat actors. To detect redundant access, we need to retrieve
    information about all the running processes on the endpoint. To get this information,
    we can run the following query:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '**冗余访问**是一种策略，攻击者通过创建多个路径或技术来访问和操控受害者的计算机。这类似于对威胁行为者的“B计划”。为了检测冗余访问，我们需要获取终端上所有运行进程的信息。为了获得这些信息，我们可以运行以下查询：'
- en: '[PRE20]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Once this query is executed, we will get the result in a table containing details
    on the process ID (`pid`), process name (`name`), `username`, `path`, and command
    line (`cmdline`) of the running processes, as shown in the following screenshot.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦执行此查询，我们将获得一个包含进程 ID（`pid`）、进程名称（`name`）、`username`、路径（`path`）和命令行（`cmdline`）的表格，如下图所示。
- en: '![Figure 6.31 – Result of all running processes and their corresponding paths](img/B19549_6_31.jpg)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.31 – 所有运行进程及其相应路径的结果](img/B19549_6_31.jpg)'
- en: Figure 6.31 – Result of all running processes and their corresponding paths
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.31 – 所有运行进程及其相应路径的结果
- en: Writing and organizing queries
  id: totrans-329
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写和组织查询
- en: 'There are two ways you can create queries. You can either write a query directly
    under the `schedule` block of the `/etc/osquery/osquery.conf` file or you can
    organize them in the form of packs. When you have tons of queries to run, it’s
    always better to create a separate Osquery pack. In our scenario, we will add
    the following queries to a pack with the name `custom-pack-1.conf`:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 创建查询有两种方式。你可以直接在`/etc/osquery/osquery.conf`文件的`schedule`块中编写查询，或者将查询组织成包的形式。当你需要运行大量查询时，最好创建一个单独的
    Osquery 包。在我们的场景中，我们将把以下查询添加到名为`custom-pack-1.conf`的包中：
- en: '[PRE21]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: You need to add all the queries under the `queries` field. Each Osquery query
    can have multiple items of metadata including `query`, `interval`, `description`,
    and `snapshot`. The following screenshot shows a query pack containing three queries.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要将所有查询添加到`queries`字段下。每个 Osquery 查询可以包含多个元数据项，包括`query`、`interval`、`description`和`snapshot`。以下截图展示了一个包含三个查询的查询包。
- en: '![Figure 6.32 – Custom Osquery pack](img/B19549_6_32.jpg)'
  id: totrans-333
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.32 – 自定义 Osquery 包](img/B19549_6_32.jpg)'
- en: Figure 6.32 – Custom Osquery pack
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.32 – 自定义 Osquery 包
- en: 'In the preceding screenshot, we can see the following:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到以下内容：
- en: '`SELECT * FROM services WHERE start_type=''DEMAND_START'' OR start_type=''AUTO_START`:
    This query retrieves all rows from the `services` table where `start_type` is
    either `''DEMAND_START''` or `''AUTO_START''`'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT * FROM services WHERE start_type=''DEMAND_START'' OR start_type=''AUTO_START''`：该查询从`services`表中检索`start_type`为`''DEMAND_START''`或`''AUTO_START''`的所有行。'
- en: '`SELECT * FROM services`: This query retrieves all rows from the `services`
    table'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT * FROM services`：该查询从`services`表中检索所有行。'
- en: '`SELECT name, display_name, status, start_type, path, module_path FROM services`:
    This query retrieves specific columns (`name`, `display_name`, `status`, `start_type`,
    `path`, `module_path`) from the `services` table'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SELECT name, display_name, status, start_type, path, module_path FROM services`：该查询从`services`表中检索特定列（`name`、`display_name`、`status`、`start_type`、`path`、`module_path`）。'
- en: You can save the file and call this under the `/etc/osquery/osquery.conf` Osquery
    file.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以保存文件，并将其放在`/etc/osquery/osquery.conf` Osquery 文件中调用。
- en: To visualize Osquery events on the Wazuh dashboard, navigate to **Wazuh Modules**>**Osquery**>
    **Events**. You should see all the query results as shown in the following screenshot.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Wazuh 仪表盘上可视化 Osquery 事件，导航到**Wazuh 模块** > **Osquery** > **事件**。你应该能看到所有查询结果，如下图所示。
- en: '![Figure 6.33 – Visualizing Osquery events](img/B19549_6_33.jpg)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.33 – 可视化 Osquery 事件](img/B19549_6_33.jpg)'
- en: Figure 6.33 – Visualizing Osquery events
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.33 – 可视化 Osquery 事件
- en: We’ve learned to create custom Osquery queries and visualize the events on the
    Wazuh dashboard. In the next section, we will learn about command monitoring on
    Wazuh.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何创建自定义的 Osquery 查询并在 Wazuh 仪表盘上可视化事件。在下一节中，我们将学习如何在 Wazuh 上进行命令监控。
- en: Command monitoring
  id: totrans-344
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命令监控
- en: 'The most effective way to collect information about an endpoint is to run specific
    commands on the given endpoint, such as `netstat` (for network connections on
    Windows), `ps` (to collect process information from Linux machines), and so on.
    This information plays a vital role in collecting IOCs and running a successful
    threat-hunting program. The good news is that Wazuh has a built-in feature to
    monitor the output of specific Windows/Linux commands and show that output as
    log content. In this section, we will learn the following:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 收集端点信息的最有效方法是运行特定的命令，例如 `netstat`（用于 Windows 上的网络连接）、`ps`（用于收集 Linux 机器的进程信息）等。这些信息在收集
    IOCs 和执行成功的威胁狩猎计划中起着至关重要的作用。好消息是，Wazuh 具有内置功能，可以监控特定 Windows/Linux 命令的输出，并将该输出作为日志内容显示。在本节中，我们将学习以下内容：
- en: How does command monitoring work?
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令监控是如何工作的？
- en: Monitoring Linux commands
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控 Linux 命令
- en: List of Linux commands for threat hunting and security Investigations
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于威胁狩猎和安全调查的 Linux 命令列表
- en: How does command monitoring work?
  id: totrans-349
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 命令监控是如何工作的？
- en: Wazuh runs commands on the endpoints using the *Command* and *Logcollector*
    modules, and then sends the results to the Wazuh server for examination. The following
    steps describe the process of command monitoring.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 使用 *Command* 和 *Logcollector* 模块在端点上运行命令，然后将结果发送到 Wazuh 服务器进行检查。以下步骤描述了命令监控的过程。
- en: Step 1 – configuration
  id: totrans-351
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 1 步 – 配置
- en: The process starts when a user chooses to monitor how a particular command is
    being executed on a system. This can be accomplished locally by adding the necessary
    command to the local agent configuration file (`/var/ossec/etc/ossec.conf`) or
    remotely through the `agent.conf` file hosted on the Wazuh server. Wazuh has two
    modules that let you monitor the results of system commands that are running on
    an endpoint. The Command and Logcollector modules run and watch commands or executables
    on Windows, Linux, and macOS targets on a regular basis.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程从用户选择监控特定命令如何在系统上执行开始。可以通过将必要的命令添加到本地代理配置文件（`/var/ossec/etc/ossec.conf`）中，或者通过
    Wazuh 服务器托管的 `agent.conf` 文件进行远程配置来实现。Wazuh 有两个模块，可以让您监控在端点上运行的系统命令的结果。Command
    和 Logcollector 模块定期运行并监视 Windows、Linux 和 macOS 目标上的命令或可执行文件。
- en: Using the Command module
  id: totrans-353
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用 Command 模块
- en: Wazuh recommends using the Command module as it has checksum verification, allows
    encrypted communication, and helps in scheduling execution.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 推荐使用 Command 模块，因为它具有校验和验证功能，支持加密通信，并有助于调度执行。
- en: 'The following is an example of the Command module:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Command 模块的一个示例：
- en: '[PRE22]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Here, the `PowerShell.exe C:\\tasklist.bat` value in the `<command>` tag is
    the command to be executed by the Command module. The PowerShell program executes
    the `C:\activetasks.bat` script.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`PowerShell.exe C:\\tasklist.bat` 在 `<command>` 标签中的值是 Command 模块要执行的命令。PowerShell
    程序执行 `C:\activetasks.bat` 脚本。
- en: Using the Logcollector module
  id: totrans-358
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用 Logcollector 模块
- en: Text files, Windows event logs, and straight syslog messages can all send logs
    to the Logcollector module. It is easy to use and also allows us to format fields
    such as `timestamp`, `hostname`, and `program_name`.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 文本文件、Windows 事件日志和纯粹的 syslog 消息都可以将日志发送到 Logcollector 模块。它易于使用，还允许我们格式化诸如 `timestamp`、`hostname`
    和 `program_name` 等字段。
- en: 'This is what a simple Logcollector module setup block looks like:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是一个简单的 Logcollector 模块设置块的样子：
- en: '[PRE23]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In the preceding code, we can see the following:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们可以看到以下内容：
- en: '`<command>` reads the output of the command executed by the Wazuh agent.'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<command>` 读取 Wazuh 代理执行的命令的输出。'
- en: '`<log_format>` can be set to either `full_command` or `command`. `full_command`
    reads the output as a single-line entry and `command` reads the output as multiple
    entries.'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<log_format>` 可以设置为 `full_command` 或 `command`。`full_command` 将输出作为单行条目读取，`command`
    将输出作为多行条目读取。'
- en: Step 2 – execution by the Wazuh agent
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 2 步 – Wazuh 代理执行
- en: Following the configuration of the required command, the endpoint runs the command
    on a regular basis according to the predetermined frequency or interval.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 配置所需命令后，端点将根据预定的频率或间隔定期执行该命令。
- en: Under the Command module, we define the `<interval>` tag to execute the command
    at a specified interval.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Command 模块下，我们定义 `<interval>` 标签，以在指定的时间间隔执行命令。
- en: Step 3 – monitoring and data forwarding
  id: totrans-368
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第 3 步 – 监控和数据转发
- en: The Wazuh agent monitors how the configured command is being executed. It records
    the result of the command along with any associated data, including the timestamp,
    execution details, and user that started the command. The agent sends this data
    to the Wazuh server for further analysis.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 代理监视配置命令的执行情况。它记录命令的结果以及任何相关数据，包括时间戳、执行详情和启动命令的用户。代理将这些数据发送到 Wazuh 服务器进行进一步分析。
- en: Step 4 – Wazuh server analysis and alert generation
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 4 – Wazuh 服务器分析和警报生成
- en: 'The data is processed by the Wazuh server after it is received from the Wazuh
    agent. A number of crucial tasks are carried out by the server, such as pre-decoding,
    decoding, and matching the received logs against preset rules, explained as follows:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 数据在从 Wazuh 代理接收到后由 Wazuh 服务器处理。服务器执行多个关键任务，例如预解码、解码以及将接收到的日志与预设规则进行匹配，具体说明如下：
- en: '**Pre-decoding and decoding**: The raw data is converted into a readable format
    using a Wazuh decoder. So, yes, we need to write a decoder rule too.'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预解码和解码**：原始数据通过 Wazuh 解码器转换为可读格式。所以，是的，我们也需要编写一个解码器规则。'
- en: '**Matching rules**: The Wazuh server matches the decoded logs to predefined
    Wazuh rules. These rules identify suspicious or malicious command-related activity
    using patterns and criteria. If a match is identified, the server alerts security.'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**匹配规则**：Wazuh 服务器将解码后的日志与预定义的 Wazuh 规则进行匹配。这些规则通过模式和标准识别可疑或恶意的命令相关活动。如果匹配成功，服务器将发出安全警报。'
- en: '`/var/ossec/logs/alerts/alerts.log and /var/ossec/logs/alerts/alerts.json`
    file on the Wazuh server.'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 服务器上的 `/var/ossec/logs/alerts/alerts.log 和 /var/ossec/logs/alerts/alerts.json`
    文件。
- en: Now that we have understood how command monitoring works, let’s take a simple
    use case of monitoring the output of the `netstat` command on a Linux machine.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经理解了命令监控的工作原理，让我们以监控 Linux 机器上 `netstat` 命令输出为例，来演示一个简单的用例。
- en: Monitoring the output of the netstat command on Linux
  id: totrans-376
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控 Linux 上 netstat 命令的输出
- en: '`netstat` is a tool for looking at connection information and can be used to
    find connections that seem suspicious or unusual. As a threat hunter, you may
    need to focus on a certain endpoint in the context of any unusual network connections.
    In order to monitor the output of the `netstat` command, follow these next steps:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '`netstat` 是一个查看连接信息的工具，可以用来查找看起来可疑或不寻常的连接。作为威胁猎手，你可能需要关注某个端点，尤其是在出现不寻常的网络连接时。为了监视
    `netstat` 命令的输出，按照以下步骤进行：'
- en: '`net-tools` package is installed on all the monitored Linux endpoints:'
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`net-tools` 包已安装在所有受监控的 Linux 端点上：'
- en: '[PRE24]'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '`netstat` command in the Wazuh agent’s `ossec.conf` file:'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wazuh 代理的 `ossec.conf` 文件中的 `netstat` 命令：
- en: '[PRE25]'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '`<command>netstat -tulpn</command>`: This indicates the command to be executed.
    In this case, the `netstat -tulpn` command is used to display active network connections,
    listening ports, and other related information.'
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<command>netstat -tulpn</command>`：这表示需要执行的命令。在这种情况下，`netstat -tulpn` 命令用于显示活动的网络连接、监听端口和其他相关信息。'
- en: '`<frequency>360</frequency>`: This represents the frequency at which the preceding
    command will be executed. It is set to execute every 360 seconds (i.e., every
    6 minutes).'
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<frequency>360</frequency>`：这表示前述命令执行的频率。它设置为每 360 秒执行一次（即每 6 分钟）。'
- en: '**Restart and test**: Now, restart the Wazuh agent using the following command
    and check the Wazuh manager for the alert:'
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**重启并测试**：现在，使用以下命令重启 Wazuh 代理，并检查 Wazuh 管理器中的警报：'
- en: '[PRE26]'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '**Visualizing the alert**: To visualize the alerts, navigate to the **Security
    alert** module on the Wazuh manager and find the alert related to **Listened port
    status (netstat)** as shown in the following screenshot:'
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可视化警报**：要查看警报，请导航到 Wazuh 管理器中的 **安全警报** 模块，并查找与 **监听端口状态（netstat）** 相关的警报，如下图所示：'
- en: '![Figure 6.34 – Wazuh alert about netstat listened ports status having changed](img/B19549_6_34.jpg)'
  id: totrans-387
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.34 – Wazuh 警报：netstat 监听端口状态已更改](img/B19549_6_34.jpg)'
- en: Figure 6.34 – Wazuh alert about netstat listened ports status having changed
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.34 – Wazuh 警报：netstat 监听端口状态已更改
- en: 'You will notice that we didn’t even create any Wazuh decoder or rule, but we
    got the alert. It was possible because Wazuh has a built-in ruleset named `0015-ossec_rule.xml`,
    containing a rule for netstat listening, as follows:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到我们甚至没有创建任何 Wazuh 解码器或规则，但我们收到了警报。这是因为 Wazuh 内置了一个名为 `0015-ossec_rule.xml`
    的规则集，其中包含针对 netstat 监听的规则，具体如下：
- en: '[PRE27]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'And if you look at the parent rule, you will find the decoder named `ossec`
    as follows:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 如果查看父规则，你会发现解码器名为 `ossec`，具体如下：
- en: '[PRE28]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: List of Linux commands for threat hunting and security investigations
  id: totrans-393
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux 命令列表，用于威胁狩猎和安全调查
- en: 'As we bring this chapter to a close, let’s quickly review some essential Linux
    commands for threat hunting and security investigations:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们结束本章之前，快速回顾一些用于威胁狩猎和安全调查的关键 Linux 命令：
- en: '`ss`: This is a tool used to dump socket statistics and provide information
    about network connections. The `ss` command is useful to identify open ports,
    check established connections, and gather network information. It is slightly
    more advanced than `netstat`.'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ss`：这是一个用于转储套接字统计信息并提供网络连接信息的工具。`ss` 命令对于识别开放端口、检查已建立的连接和收集网络信息非常有用。它比 `netstat`
    更为高级。'
- en: '`ps`: Using the `ps` command, you can see which processes are active on your
    system. Examining active processes might assist you in locating unauthorized or
    suspicious software.'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ps`：使用 `ps` 命令，您可以查看系统中哪些进程处于活动状态。检查活动进程可能有助于您发现未授权或可疑的软件。'
- en: '`top` and `htop`: These commands provide up-to-date details on programs that
    are currently executing, and the number of system resources being consumed. They
    can also be used to spot any unexpected or resource-intensive activity.'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`top` 和 `htop`：这些命令提供了当前正在执行的程序的最新详情，以及系统资源的消耗情况。它们还可以用于发现任何意外的或资源密集型的活动。'
- en: '`lsof`: You can find open files and network connections with the `lsof` (for
    *list open files*) command, which can help you keep an eye on behavior that might
    be suspicious.'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lsof`：您可以使用 `lsof`（用于 *列出打开的文件*）命令查找打开的文件和网络连接，这有助于您监控可能可疑的行为。'
- en: '`tcpdump`: This is a very powerful packet capture tool that can be used to
    detect network-based threats.'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tcpdump`：这是一个非常强大的数据包捕获工具，可以用于检测基于网络的威胁。'
- en: Summary
  id: totrans-400
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter covered important aspects of modern intelligence and threat-hunting
    tactics. It started with Wazuh’s contribution to proactive threat hunting, then
    moved on to the importance of analyzing log data, and finally looked at how MITRE
    ATT&CK mapping improves our understanding of threats. We learned how to use Osquery
    in Wazuh to effectively perform threat hunting and also learned how to use command
    monitoring in Wazuh to discover suspicious activities.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了现代情报和威胁狩猎策略的关键方面。首先介绍了 Wazuh 在主动威胁狩猎中的贡献，然后讲解了分析日志数据的重要性，最后探讨了 MITRE ATT&CK
    映射如何提高我们对威胁的理解。我们学习了如何在 Wazuh 中使用 Osquery 有效地进行威胁狩猎，并了解了如何使用 Wazuh 的命令监控功能来发现可疑活动。
- en: In the next chapter, we will learn about the Vulnerability detection and SCA
    modules of the Wazuh platform. We will learn how to leverage these modules to
    meet regulatory compliance including PCI DSS, NIST 800-53, and HIPPA.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习 Wazuh 平台的漏洞检测和 SCA 模块。我们将了解如何利用这些模块满足监管合规要求，包括 PCI DSS、NIST 800-53
    和 HIPPA。
- en: 'Part 3: Compliance Management'
  id: totrans-403
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分：合规管理
- en: This part of this book focuses on compliance management using Wazuh and explores
    vulnerability detection and security configuration assessment modules of the Wazuh
    platform. You will learn to fulfill some specific requirements of regulatory compliance
    such as PCI DSS, HIPPA, and NIST 800-53 controls.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的这一部分集中讨论了使用 Wazuh 进行合规管理，并探讨了 Wazuh 平台的漏洞检测和安全配置评估模块。您将学习如何满足一些特定的监管合规要求，例如
    PCI DSS、HIPPA 和 NIST 800-53 控制。
- en: 'This part includes the following chapter:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 7*](B19549_07.xhtml#_idTextAnchor191), Vulnerability and Configuration
    Assessment'
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B19549_07.xhtml#_idTextAnchor191)，漏洞与配置评估'
