- en: Chapter 6. Attacking Access Points and the Infrastructure
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。攻击接入点和基础设施
- en: In [Chapter 5](ch05.html "Chapter 5. WPA/WPA2 Cracking"), *WPA/WPA2 Cracking*,
    we learned how to crack a WPA preshared key in WPA-Personal mode. There is another
    way to recover PSK; attacking AP to exploit a flaw in **Wi-Fi Protected Setup**
    (**WPS**). In this chapter, we are going to cover this attack, the attacks against
    WPA-Enterprise and other attacks targeting the access points and the network infrastructure,
    explaining the techniques and the tools in Kali Linux to conduct such attacks.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第5章](ch05.html "第5章。WPA/WPA2破解")中，*WPA/WPA2破解*，我们学习了如何在WPA-Personal模式下破解WPA预共享密钥。还有另一种恢复PSK的方法；攻击AP以利用**Wi-Fi
    Protected Setup**（**WPS**）中的缺陷。在本章中，我们将介绍这种攻击，针对WPA-Enterprise的攻击以及针对接入点和网络基础设施的其他攻击，解释Kali
    Linux中用于进行此类攻击的技术和工具。
- en: 'The topics that we are going to cover are:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要涵盖的主题是：
- en: Attacks against Wi-Fi Protected Setup
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对Wi-Fi Protected Setup的攻击
- en: Attacking WPA-Enterprise
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击WPA-Enterprise
- en: Denial of Service attacks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拒绝服务攻击
- en: Rogue access points
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rogue接入点
- en: Attacking AP authentication credentials
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击AP认证凭据
- en: Attacks against Wi-Fi Protected Setup
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 针对Wi-Fi Protected Setup的攻击
- en: WPS is a security mechanism for access points introduced by the Wi-Fi Alliance
    in 2006 to allow clients to connect more easily to a wireless network, supplying
    an eight digit PIN instead of the preshared key. If the PIN is correct, the AP
    supplies the client with the WPA PSK to authenticate to the network.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: WPS是由Wi-Fi联盟于2006年引入的用于接入点的安全机制，允许客户端通过提供八位数字PIN而不是预共享密钥更轻松地连接到无线网络。如果PIN正确，AP将向客户端提供WPA
    PSK以进行网络认证。
- en: The WPS specification also supports a **Push-Button-Connect** (**PBC**) method,
    where a button is pushed on both the AP and on the client device to start the
    connection.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: WPS规范还支持**Push-Button-Connect**（**PBC**）方法，其中在AP和客户端设备上都按下按钮以开始连接。
- en: In 2011, two researchers, Stefan Viehböck and Craig Heffner, independently discovered
    a vulnerability in WPS that could allow an attacker to recover the PIN in a few
    hours through a brute-force attack and gain access to the network. Heffner also
    developed and released a tool that implements this attack, **Reaver**.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 2011年，两位研究人员Stefan Viehböck和Craig Heffner分别发现了WPS中的一个漏洞，可以允许攻击者通过暴力攻击在几小时内恢复PIN并访问网络。Heffner还开发并发布了一个实现此攻击的工具**Reaver**。
- en: The flaw resides in the way the PIN is checked by the AP. Indeed, the eight
    digit PIN is not sent in its entirety to the AP, but only the first half is sent
    and checked and after, if it is correct, the second half is sent and verified.
    If the first half is not correct, the AP sends a negative response to the client.
    Thus, the two halves of the PIN are checked independently by the AP.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞存在于AP检查PIN的方式中。事实上，八位数字PIN并没有完整地发送到AP，而是只发送和检查前半部分，然后，如果正确，发送和验证后半部分。如果前半部分不正确，AP会向客户端发送负面响应。因此，AP独立地检查PIN的两个部分。
- en: Moreover, the last digit of the PIN is a checksum of the other seven digits
    and so can be derived from these.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，PIN的最后一位是其他七位数字的校验和，因此可以从中推导出来。
- en: In this way, an attacker could attempt to guess the first four digits of the
    PIN trying at most *10^4 = 10,000* values and then the second half with at most
    *10^3 = 1,000* possibilities, for a total of 11,000 possible values, against the
    *10^7 = 10,000,000* possible combinations with the whole PIN. That makes a big
    difference in a brute-force attack, reducing a lot the time required to perform
    it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式，攻击者可以尝试猜测PIN的前四位数字，最多尝试*10^4 = 10,000*个值，然后再尝试后半部分，最多*10^3 = 1,000*个可能性，总共有11,000个可能值，而整个PIN有*10^7
    = 10,000,000*个可能的组合。这在暴力攻击中产生了很大的差异，大大减少了执行所需的时间。
- en: 'WPS can be disabled in the administration panel of the access point. In this
    case, we enable it, leaving the preconfigured PIN of the AP, to demonstrate how
    the attack works, as shown in the following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: WPS可以在接入点的管理面板中禁用。在这种情况下，我们启用它，保留AP的预配置PIN，以演示攻击的工作原理，如下面的屏幕截图所示：
- en: '![Attacks against Wi-Fi Protected Setup](img/B04527_06_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![针对Wi-Fi Protected Setup的攻击](img/B04527_06_01.jpg)'
- en: Recent AP models implement a lock-down mechanism after a certain number of attempts
    to guess the PIN.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最近的AP型号在尝试猜测PIN的次数达到一定数量后会实施锁定机制。
- en: Another type of attack targeting WPS, the **Pixie Dust** attack, has been introduced
    quite recently (2014) by Dominique Bongard. It is an *offline* brute-force attack
    to recover the PIN, while the one previously seen and implemented by Reaver is
    an online attack that is continuously interacting with the AP.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种针对WPS的攻击，**Pixie Dust**攻击，是由Dominique Bongard在2014年引入的。这是一种*离线*暴力攻击，用于恢复PIN，而之前由Reaver实施的攻击是一种不断与AP交互的在线攻击。
- en: The Pixie Dust attack greatly enhances the speed of the WPS PIN recovery process,
    reducing the time required to a few seconds or minutes in the worst case.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Pixie Dust攻击极大地提高了WPS PIN恢复过程的速度，在最坏的情况下将所需的时间减少到几秒或几分钟。
- en: The technical details of the attack can be found at [http://archive.hack.lu/2014/Hacklu2014_offline_bruteforce_attack_on_wps.pdf](http://archive.hack.lu/2014/Hacklu2014_offline_bruteforce_attack_on_wps.pdf).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击的技术细节可以在[http://archive.hack.lu/2014/Hacklu2014_offline_bruteforce_attack_on_wps.pdf](http://archive.hack.lu/2014/Hacklu2014_offline_bruteforce_attack_on_wps.pdf)找到。
- en: A tool, written in C and called **Pixiewps**, has been developed as a proof-of-concept
    code to demonstrate the Pixie Dust attack. This tool has been integrated with
    a community forked version of Reaver, reaver-wps-fork-t6x, to support this new
    attack.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一种名为**Pixiewps**的用C编写的工具已经开发出来，作为演示Pixie Dust攻击的概念验证代码。这个工具已经集成到Reaver的社区分支版本reaver-wps-fork-t6x中，以支持这种新的攻击。
- en: Not all the APs are vulnerable to the attack; a database of vulnerable AP models
    is available at [https://docs.google.com/spreadsheets/d/1tSlbqVQ59kGn8hgmwcPTHUECQ3o9YhXR91A_p7Nnj5Y/edit#gid=2048815923](https://docs.google.com/spreadsheets/d/1tSlbqVQ59kGn8hgmwcPTHUECQ3o9YhXR91A_p7Nnj5Y/edit#gid=2048815923).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有AP都容易受到攻击；易受攻击的AP型号数据库可在[https://docs.google.com/spreadsheets/d/1tSlbqVQ59kGn8hgmwcPTHUECQ3o9YhXR91A_p7Nnj5Y/edit#gid=2048815923](https://docs.google.com/spreadsheets/d/1tSlbqVQ59kGn8hgmwcPTHUECQ3o9YhXR91A_p7Nnj5Y/edit#gid=2048815923)找到。
- en: In the next subsection, we will see how to use Reaver to recover the WPS PIN
    with both types of brute-force attacks—online and offline.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一小节中，我们将看到如何使用Reaver来恢复WPS PIN，包括在线和离线两种暴力破解攻击。
- en: Reaver
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Reaver
- en: Reaver is a command-line tool that can brute-force a WPS PIN. Before launching
    the program, we must identify our targets, which are the access points that have
    WPS enabled and are not locked against the brute-force attacks. It's here that
    a tool called **Wash** comes to our aid, a WPS scanner which is bundled with Reaver.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Reaver是一个可以暴力破解WPS PIN的命令行工具。在启动程序之前，我们必须确定我们的目标，即启用了WPS并且没有针对暴力破解攻击进行锁定的接入点。这就是一个名为**Wash**的工具派上用场的地方，它是Reaver捆绑的WPS扫描程序。
- en: 'The steps to perform an online brute-force attack are:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 执行在线暴力破解攻击的步骤是：
- en: 'First, we need to put our wireless interface in monitor mode, with the usual
    command:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要将无线接口置于监视模式，使用以下命令：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To scan for WPS enabled APs, we execute the following command:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要扫描启用了WPS的AP，我们执行以下命令：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Reaver](img/B04527_06_02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![Reaver](img/B04527_06_02.jpg)'
- en: Wash displays information about the detected APs, such as the BSSID, the channel,
    the WPS version used, whether WPS is locked or not, and the ESSID.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Wash 显示了有关检测到的AP的信息，如BSSID、信道、使用的WPS版本、WPS是否被锁定以及ESSID。
- en: 'We choose the target AP and run Reaver to recover the WPS PIN:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们选择目标AP并运行Reaver来恢复WPS PIN：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here, the `-b` option specifies the MAC address of the AP.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`-b`选项指定了AP的MAC地址。
- en: '![Reaver](img/B04527_06_03.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Reaver](img/B04527_06_03.jpg)'
- en: Reaver tries every possible combination of the PIN and waits for the response,
    and for this reason it usually takes a few hours to complete the attack, even
    if the possible combinations of the PIN are not so many.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Reaver尝试每个PIN的可能组合并等待响应，因此通常需要几个小时才能完成攻击，即使PIN的可能组合并不多。
- en: To perform the offline Pixie Dust attack, we have to use the reaver-wps-fork-t6x
    version, which corresponds to the 1.5.2 version of Reaver. This version requires
    Pixiewps and it's also recommendable to upgrade to the latest version (at the
    moment of writing) of Aircrack-ng, 1.2 RC2\. The updated Reaver, pixiewps, and
    the updated Aircrack-ng are available on Kali Linux repositories.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行离线Pixie Dust攻击，我们必须使用reaver-wps-fork-t6x版本，对应于Reaver的1.5.2版本。这个版本需要Pixiewps，建议升级到最新版本（写作时）的Aircrack-ng，即1.2
    RC2。更新的Reaver、pixiewps和更新的Aircrack-ng都可以在Kali Linux存储库中找到。
- en: 'We follow the subsequent steps:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们按照以下步骤进行：
- en: 'We upgrade the software with the command:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用以下命令升级软件：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Notice that pixiewps is also installed as a dependency.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，pixiewps也作为一个依赖项安装。
- en: '![Reaver](img/B04527_06_04.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![Reaver](img/B04527_06_04.jpg)'
- en: We then put the wireless interface in monitor mode with `airmon-ng start wlan0`:![Reaver](img/B04527_06_05.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们使用`airmon-ng start wlan0`将无线接口置于监视模式：![Reaver](img/B04527_06_05.jpg)
- en: We can observe that the virtual monitor interfaces are named `wlanXmon` instead
    of `monX` in the new version of Aircrack-ng.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以观察到虚拟监视接口的名称是`wlanXmon`，而不是新版本的Aircrack-ng中的`monX`。
- en: 'To execute the attack, we run the following command:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要执行攻击，我们运行以下命令：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here the `-i` option specifies our monitor interface, `-b` the AP MAC address,
    `-vvv` is the most verbose output mode, and `-K 1` specifies the Pixie Dust attack.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的`-i`选项指定了我们的监视接口，`-b`指定了AP的MAC地址，`-vvv`是最详细的输出模式，`-K 1`指定了Pixie Dust攻击。
- en: '![Reaver](img/B04527_06_06.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![Reaver](img/B04527_06_06.jpg)'
- en: 'In the following screenshot, we notice that pixiewps is invoked and discover
    the PIN instantly:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们注意到 pixiewps 被调用并立即发现 PIN：
- en: '![Reaver](img/B04527_06_07.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![Reaver](img/B04527_06_07.jpg)'
- en: The Pixie Dust attack shows how it could be easy and quick to recover a WPS
    PIN, therefore, it is highly recommended to disable WPS.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Pixie Dust 攻击展示了如何轻松快速地恢复WPS PIN，因此强烈建议禁用WPS。
- en: Attacking WPA-Enterprise
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击WPA-Enterprise
- en: WPA-Enterprise, as the name says, is the authentication mode used in enterprise
    networks.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: WPA-Enterprise，顾名思义，是企业网络中使用的认证模式。
- en: In WPA-Enterprise, the AP does not authenticate the client as in WPA-Personal
    mode, but instead delegates it to an **Authentication Server** (**AS**) that communicates
    with the AP through the RADIUS protocol.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在WPA-Enterprise中，AP不像WPA-Personal模式那样对客户端进行认证，而是委托给一个通过RADIUS协议与AP通信的**认证服务器**（**AS**）。
- en: The authentication packets exchanged between AP and AS are carried using the
    **Extensible Authentication Protocol** (**EAP**) and specifically the **EAP Over
    LAN** (**EAPOL**), a protocol defined in the 802.1x standard for authentication
    on wired LANs. The AP (authenticator) acts as a relay that forwards the authentication
    packets between the two parties, the client (supplicant) and the AS.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: AP和AS之间交换的认证数据包使用**可扩展认证协议**（**EAP**）和特别是**EAP Over LAN**（**EAPOL**）进行传输，EAPOL是802.1x标准中定义的用于有线局域网认证的协议。AP（认证器）充当中继，转发两方之间的认证数据包，即客户端（请求者）和AS。
- en: 'EAP is an authentication framework rather than a single protocol and comes
    in many types, among which the most important are:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: EAP是一个认证框架，而不是单一协议，有许多类型，其中最重要的是：
- en: '**Lightweight EAP** (**LEAP**)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**轻量级EAP**（**LEAP**）'
- en: EAP-MD5
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EAP-MD5
- en: EAP-TLS
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EAP-TLS
- en: EAP-FAST
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EAP-FAST
- en: EAP-TTLS
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EAP-TTLS
- en: PEAP
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PEAP
- en: 'The last three are the most common EAP types in use by enterprise networks.
    The authentication process takes place with an EAP-handshake, as shown in the
    following diagram with EAP-TLS:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最后三个是企业网络中使用的最常见的EAP类型。认证过程通过EAP握手进行，如下图所示的EAP-TLS：
- en: '![Attacking WPA-Enterprise](img/B04527_06_08.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![攻击WPA-Enterprise](img/B04527_06_08.jpg)'
- en: LEAP and EAP-MD5 are deprecated because they are susceptible to the brute-force
    and dictionary attacks and don't validate the certificate of the authentication
    server.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: LEAP和EAP-MD5已经被弃用，因为它们容易受到暴力和字典攻击的影响，并且不验证认证服务器的证书。
- en: LEAP is based on MS-CHAPv2, a challenge-response protocol that transmits the
    authentication data in clear-text, allowing an attacker to retrieve it and launch
    a brute-force attack to obtain the credentials.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: LEAP基于MS-CHAPv2，这是一种挑战-响应协议，以明文形式传输认证数据，允许攻击者检索并发动暴力攻击以获取凭据。
- en: EAP-MD5 is also vulnerable to the offline dictionary and brute-force attacks.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: EAP-MD5也容易受到离线字典和暴力攻击的影响。
- en: EAP-TLS is the original WPA-Enterprise standard authentication protocol and
    is secure because it relies on **Transport Layer Security** (**TLS**). Besides
    the server-side certificate, TLS also requires the client-side certificate validation
    and therefore the deployment of a **Public Key Infrastructure** (**PKI**) by the
    organization to manage the users' certificates.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: EAP-TLS是最初的WPA-Enterprise标准认证协议，因为它依赖于**传输层安全性**（**TLS**），所以它是安全的。除了服务器端证书外，TLS还需要客户端证书验证，因此组织需要部署**公钥基础设施**（**PKI**）来管理用户的证书。
- en: This has prevented EAP-TLS from becoming widespread in WPA-Enterprise implementations,
    leaving space for the adoption of EAP-FAST, EAP-TTLS, and above all, PEAP, that
    do not mandate to verify the client's certificate but are still secure since they
    are based on TLS.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这阻止了EAP-TLS在WPA-Enterprise实现中变得普遍，为EAP-FAST、EAP-TTLS和尤其是PEAP的采用留下了空间，这些协议不需要验证客户端的证书，但仍然安全，因为它们基于TLS。
- en: Indeed, these protocols make use of a TLS tunnel that encapsulates an inner
    authentication protocol. For example, in Microsoft Windows implementation, PEAP
    uses MS-CHAPv2 such as LEAP, but encapsulated in the TLS tunnel.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，这些协议使用TLS隧道封装内部认证协议。例如，在Microsoft Windows实现中，PEAP使用MS-CHAPv2，如LEAP，但封装在TLS隧道中。
- en: 'The following table summarizes the EAP authentication types and their main
    features:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表总结了EAP认证类型及其主要特点：
- en: '![Attacking WPA-Enterprise](img/B04527_06_09.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![攻击WPA-Enterprise](img/B04527_06_09.jpg)'
- en: In the following sections, we will see the practical examples of attacks against
    the WPA-Enterprise.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将看到对WPA-Enterprise的攻击的实际示例。
- en: Setting up a WPA-Enterprise network
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置WPA-Enterprise网络
- en: To see how the attacks work in practice, we will have to configure our access
    point to use WPA-Enterprise and set up a RADIUS server.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 为了看到攻击是如何在实践中工作的，我们将不得不配置我们的接入点使用WPA-Enterprise并设置RADIUS服务器。
- en: Since many consumer APs do not support WPA-Enterprise and setting up a RADIUS
    server is a tedious operation, a practical solution is to install **hostapd-wpe**
    (**hostapd Wireless Pwnage Edition**), a patched version of the **hostapd** tool,
    which allows us to create a virtual AP out of a wireless interface.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 由于许多消费者AP不支持WPA-Enterprise，并且设置RADIUS服务器是一项繁琐的操作，一个实际的解决方案是安装**hostapd-wpe**（**hostapd
    Wireless Pwnage Edition**），这是**hostapd**工具的补丁版本，允许我们在无线接口上创建虚拟AP。
- en: Hostapd-wpe, developed by Joshua Wright (the author of Cowpatty and other wireless
    security tools) and Brad Antoniewicz, comes with a bundled FreeRADIUS-WPE server,
    a patch for the FreeRADIUS server that greatly simplifies its configuration.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Hostapd-wpe由Joshua Wright（Cowpatty的作者和其他无线安全工具）和Brad Antoniewicz开发，配备了捆绑的FreeRADIUS-WPE服务器，这是FreeRADIUS服务器的补丁，大大简化了其配置。
- en: Hostapd-wpe has recently replaced the FreeRADIUS-WPE project itself. It is not
    preinstalled on Kali Linux, so we need to download and install it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Hostapd-wpe最近取代了FreeRADIUS-WPE项目本身。它没有预装在Kali Linux上，所以我们需要下载并安装它。
- en: 'To set up a virtual WPA-Enterprise enabled AP, we will execute the following
    steps:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置一个虚拟的WPA-Enterprise启用的AP，我们将执行以下步骤：
- en: 'We first install the necessary libraries:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先安装必要的库：
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The latest version of hostapd is the 2.4 but we have to download and install
    the 2.2 version as the `hostapd-wpe` patch only supports this version (at the
    time of writing this book). We download hostapd with the following command:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: hostapd的最新版本是2.4，但我们必须下载并安装2.2版本，因为`hostapd-wpe`补丁只支持这个版本（在撰写本书时）。我们使用以下命令下载hostapd：
- en: '[PRE6]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Next, we download the `hostapd-wpe` patch from its Git repository:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们从其Git存储库下载`hostapd-wpe`补丁：
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We extract the hostapd tar archive and move into the extracted directory:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们解压hostapd tar存档并进入提取的目录：
- en: '[PRE8]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, we have to apply the `hostapd-wpe` patch:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们必须应用`hostapd-wpe`补丁：
- en: '[PRE9]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We move into the `hostapd` directory and compile:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们进入`hostapd`目录并编译：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Once compiled, we move into the `certificate` directory and run the bootstrap
    script to generate self-signed certificates:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编译完成后，我们进入`certificate`目录并运行引导脚本以生成自签名证书：
- en: '[PRE11]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Before executing `hostapd-wpe`, we have to edit its configuration file `hostapd-wpe.conf`
    located in the `hostapd-2.2/hostapd` directory. We must set `interface=wlan0`
    in the `# Interface` section, comment out the `driver=wired` line in the `#Driver`
    section and uncomment the `802.11 Options`, specifying the SSID we want the AP
    to use.![Setting up a WPA-Enterprise network](img/B04527_06_10.jpg)
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在执行`hostapd-wpe`之前，我们必须编辑其配置文件`hostapd-wpe.conf`，位于`hostapd-2.2/hostapd`目录中。我们必须在`#
    Interface`部分中设置`interface=wlan0`，在`#Driver`部分中注释掉`driver=wired`行，并取消注释`802.11
    Options`，指定我们想要AP使用的SSID。![设置WPA-企业网络](img/B04527_06_10.jpg)
- en: 'Once we have saved the configuration file, we can run the program by using
    the following command:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们保存了配置文件，我们可以使用以下命令运行程序：
- en: '[PRE12]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Setting up a WPA-Enterprise network](img/B04527_06_11.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![设置WPA-企业网络](img/B04527_06_11.jpg)'
- en: Now that we have set up our WPA-Enterprise network, we are ready to attack EAP.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置好了我们的WPA-企业网络，我们准备攻击EAP。
- en: Attacks targeting EAP
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 针对EAP的攻击
- en: 'To perform an attack against EAP, we execute the subsequent steps:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行对EAP的攻击，我们执行以下步骤：
- en: 'First, we need to capture the EAP handshake and this can be done with `airodump-ng`,
    in the same way as we have seen in the last chapter to capture a WPA four-way
    handshake:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要使用`airodump-ng`来捕获EAP握手，这与我们在上一章中捕获WPA四路握手的方式相同：
- en: '[PRE13]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: To attack a specific EAP implementation, we have to determine the EAP type in
    use. Airodump-ng does not tell us the EAP type, so we must analyze the EAP handshake
    packet capture with a packet analysis tool like Wireshark.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要攻击特定的EAP实现，我们必须确定正在使用的EAP类型。Airodump-ng不会告诉我们EAP类型，因此我们必须使用Wireshark等数据包分析工具分析捕获的EAP握手数据包。
- en: To run it, we navigate to the application menu, **Kali Linux** | **Sniffing/Spoofing**
    | **Network Sniffers** | **Wireshark**.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行它，我们导航到应用程序菜单，**Kali Linux** | **嗅探/欺骗** | **网络嗅探器** | **Wireshark**。
- en: We open our capture file and should see a window like in the following screenshot:![Attacks
    targeting EAP](img/B04527_06_12.jpg)
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们打开我们的捕获文件，应该看到一个如下截图所示的窗口：![针对EAP的攻击](img/B04527_06_12.jpg)
- en: We filter the packets with the expression `eap`, to display only those that
    interest us:![Attacks targeting EAP](img/B04527_06_13.jpg)
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用表达式`eap`过滤数据包，只显示我们感兴趣的数据包：![针对EAP的攻击](img/B04527_06_13.jpg)
- en: Scrolling down the packet listing panel, we will notice the EAP handshake packets
    in the **Info** column, as shown in the following screenshot:![Attacks targeting
    EAP](img/B04527_06_14.jpg)
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在数据包列表面板中向下滚动，我们会注意到**信息**列中的EAP握手数据包，如下截图所示：![针对EAP的攻击](img/B04527_06_14.jpg)
- en: 'Having discovered the EAP type, now we can proceed with the attack. If the
    authentication server uses LEAP or EAP-MD5 then we can use two tools that implement
    these attacks respectively: `asleap` and `eapmd5pass`, both developed by Joshua
    Wright.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经发现了EAP类型，接下来我们可以进行攻击。如果认证服务器使用LEAP或EAP-MD5，那么我们可以使用两个分别实现这些攻击的工具：`asleap`和`eapmd5pass`，这两个工具都是由Joshua
    Wright开发的。
- en: 'To use asleap, we have to generate a hash table from a dictionary file by using
    the `genkeys` tool:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用asleap，我们必须使用`genkeys`工具从字典文件生成哈希表：
- en: '[PRE14]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Then, pass the hash table, along with the capture file, to `asleap`:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将哈希表和捕获文件一起传递给`asleap`：
- en: '[PRE15]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '`Eapmd5pass` works in a similar manner, taking the capture file and a dictionary
    file as the input parameters.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`Eapmd5pass`的工作方式类似，它将捕获文件和字典文件作为输入参数。'
- en: EAP-TLS can be vulnerable only if the attacker owns the client's private key
    and, therefore, impersonates it towards the authentication server.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当攻击者拥有客户端的私钥并且因此冒充客户端向认证服务器时，EAP-TLS才会有漏洞。
- en: PEAP and EAP-TTLS can be attacked if the client does not validate the authentication
    server's certificate. The attacker could set up a fake AP and impersonate the
    legitimate one, breaking the TLS encrypted tunnel and letting him attack the inner
    authentication protocol.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端不验证认证服务器的证书，PEAP和EAP-TTLS可能会受到攻击。攻击者可以建立一个假的AP并冒充合法的AP，从而破坏TLS加密隧道，让他攻击内部认证协议。
- en: In the next subsection, we will cover PEAP as an example, since it is the most
    deployed EAP type.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一小节中，我们将以PEAP为例进行介绍，因为它是部署最广泛的EAP类型。
- en: Attacking PEAP
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 攻击PEAP
- en: For this example, we use a client machine with Windows that supports PEAP with
    MS-CHAPv2, by default.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用一个默认支持PEAP和MS-CHAPv2的Windows客户端机器。
- en: To connect to our previously created virtual AP, we must manually add a wireless
    connection in **Control Panel** | **Network and Internet** | **Network and Sharing
    Center** | **Manage Wireless networks**.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要连接到我们之前创建的虚拟AP，我们必须在**控制面板** | **网络和互联网** | **网络和共享中心** | **管理无线网络**中手动添加一个无线连接。
- en: 'We select **manually create a network profile**, then enter the SSID of our
    AP (`hostapd-wpe`) as the network name and choose **WPA-Enterprise** as the security
    type:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择**手动创建网络配置文件**，然后输入我们AP的SSID（`hostapd-wpe`）作为网络名称，并选择**WPA-Enterprise**作为安全类型：
- en: '![Attacking PEAP](img/B04527_06_15.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![攻击PEAP](img/B04527_06_15.jpg)'
- en: In the subsequent window, we click on the **Change connection** settings, then
    on the **Security** tab and on **Settings…**:![Attacking PEAP](img/B04527_06_16.jpg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在随后的窗口中，我们点击**更改连接**设置，然后点击**安全**选项卡和**设置…**：![攻击PEAP](img/B04527_06_16.jpg)
- en: We uncheck the **Validate server certificate** option to disable the server
    certificate validation by the client:![Attacking PEAP](img/B04527_06_17.jpg)
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们取消选中**验证服务器证书**选项，以禁用客户端对服务器证书的验证：![攻击PEAP](img/B04527_06_17.jpg)
- en: We leave EAP-MSCHAPv2 as the authentication method, click on the **Configure…**
    button and next uncheck the **Windows domain logon authentication** option.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将EAP-MSCHAPv2作为认证方法，点击**配置…**按钮，然后取消选中**Windows域登录认证**选项。
- en: 'Next, we start `hostapd-wpe` on the Kali Linux machine with the following command:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们使用以下命令在Kali Linux机器上启动`hostapd-wpe`：
- en: '[PRE16]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: As we have seen, this command starts an AP with `hostapd-wpe` as the SSID.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，这个命令启动了一个以`hostapd-wpe`作为SSID的AP。
- en: We connect the Windows client to the `hostapd-wpe` network and we are prompted
    to input a username and a password. In this case, we can give any credentials
    we want, just to demonstrate the attack. The password here is `my_eap_password`:![Attacking
    PEAP](img/B04527_06_18.jpg)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将Windows客户端连接到`hostapd-wpe`网络，然后提示我们输入用户名和密码。在这种情况下，我们可以输入任何我们想要的凭据，只是为了演示攻击。这里的密码是`my_eap_password`：![攻击PEAP](img/B04527_06_18.jpg)
- en: In the `hostapd-wpe` terminal window logs, we can observe this authentication
    attempt, with the challenge and the response of the MSCHAPv2 protocol:![Attacking
    PEAP](img/B04527_06_19.jpg)
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`hostapd-wpe`终端窗口日志中，我们可以观察到这个认证尝试，包括MSCHAPv2协议的挑战和响应：![攻击PEAP](img/B04527_06_19.jpg)
- en: 'This is all we need to launch an offline dictionary attack with `asleap`, passing
    the challenge and the response to the program with the `-C` and `-R` options,
    respectively:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这就是我们启动使用`asleap`进行离线字典攻击所需要的一切，通过使用`-C`和`-R`选项将挑战和响应传递给程序：
- en: '[PRE17]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Attacking PEAP](img/B04527_06_20.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![攻击PEAP](img/B04527_06_20.jpg)'
- en: Denial of Service attacks
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拒绝服务攻击
- en: Wireless networks can be subjected to **Denial of Service** (**DoS**) attacks
    that target both the clients and the APs.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 无线网络可能会受到针对客户端和AP的**拒绝服务**（**DoS**）攻击。
- en: This kind of attack can be performed by sending broadcast deauthentication packets
    continuously to force disconnection and to prevent clients from reconnecting.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 通过不断发送广播去认证数据包来强制断开连接并阻止客户端重新连接，从而执行这种攻击。
- en: 'A tool to accomplish this task is `aireplay-ng` and the command is as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`aireplay-ng`工具来完成这个任务，命令如下：
- en: '[PRE18]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![Denial of Service attacks](img/B04527_06_21.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![服务拒绝攻击](img/B04527_06_21.jpg)'
- en: In this command, the `0` option means sending deauthentication packets continuously
    and only the MAC address of the AP is specified, with the `-a` option. We could
    also target single wireless clients, as we will see in [Chapter 7](ch07.html "Chapter 7. Wireless
    Client Attacks"), *Wireless Client Attacks*.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个命令中，`0`选项表示持续发送去认证数据包，只指定了AP的MAC地址，使用了`-a`选项。我们也可以针对单个无线客户端进行攻击，就像我们将在[第7章](ch07.html
    "第7章。无线客户端攻击")中看到的那样，*无线客户端攻击*。
- en: In the next subsection, we will cover another tool to perform DoS against wireless
    networks, MDK3.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一小节中，我们将介绍另一个工具来对无线网络执行DoS攻击，MDK3。
- en: DoS attacks with MDK3
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用MDK3进行DoS攻击
- en: 'MDK3 supports the following modes to perform DoS attacks against the wireless
    network:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: MDK3支持以下模式来执行针对无线网络的DoS攻击：
- en: The beacon (SSID) flooding mode
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信标（SSID）洪泛模式
- en: Authentication DoS
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认证DoS
- en: Deauthentication/disassociation (Amok) mode
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 去认证/去关联（Amok）模式
- en: In the beacon flooding mode, MDK3 sends out a flood of beacon frames, advertising
    fake APs. This method is not mainly designed for the DoS attacks but sometimes
    might cause network scanners and drivers of the wireless adapters to crash, with
    the result of preventing clients to connect to the network. Furthermore, it can
    hide the legitimate APs among the multitude of the fake APs, eventually with very
    similar SSIDs, making it difficult for clients to identify the legitimate networks
    they want to connect to.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`b`选项是信标洪泛模式，`-f`指定一个包含要用于AP的SSID名称列表的文件。如果未指定`-f`选项，则使用随机的SSID。如果我们想使用特定的信道，我们需要使用`-c`选项：
- en: To use MDK3, we first need to put our wireless interface in monitor mode, with
    the `airmon-ng start wlan0` command.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用MDK3，我们首先需要使用`airmon-ng start wlan0`命令将无线接口置于监视模式。
- en: 'To run the beacon flooding attack we execute the following command:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行信标洪泛攻击，我们执行以下命令：
- en: '[PRE19]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here, the `b` option is for beacon flood mode and `-f` specifies a file that
    contains a list of SSID names to use for the APs. If the `-f` option is not specified,
    random SSIDs are used instead. If we want to use a specific channel, we need to
    use the `-c` option:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在信标洪泛模式中，MDK3发送一系列信标帧，广告虚假的AP。这种方法主要不是为了DoS攻击而设计的，但有时可能会导致网络扫描程序和无线适配器的驱动程序崩溃，从而阻止客户端连接到网络。此外，它可以将合法的AP隐藏在众多的虚假AP中，最终具有非常相似的SSID，使客户端难以识别他们想要连接的合法网络。
- en: '![DoS attacks with MDK3](img/B04527_06_22.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![使用MDK3进行DoS攻击](img/B04527_06_22.jpg)'
- en: The authentication flooding mode implies sending many authentication requests
    to the AP, which might not be capable of handling them and consequently freeze
    up. This does not always work and it may require more than one instance of MDK3
    running for this attack to succeed.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 认证洪泛模式意味着向AP发送许多认证请求，这可能会导致AP无法处理这些请求并因此冻结。这并不总是有效，可能需要多个MDK3实例才能成功执行此攻击。
- en: 'In this case, the syntax of the command is simple as:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，命令的语法很简单：
- en: '[PRE20]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here `a` stands for authentication flooding mode and `-a` specifies the MAC
    address of the target AP:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这里`a`代表认证洪泛模式，`-a`指定目标AP的MAC地址：
- en: '![DoS attacks with MDK3](img/B04527_06_23.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![使用MDK3进行DoS攻击](img/B04527_06_23.jpg)'
- en: We notice that the target AP seems not to be vulnerable to this attack method.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到目标AP似乎不容易受到这种攻击方法的影响。
- en: 'The most effective method for DoS attacks is the deauthentication/disassociation
    (Amok) mode, which sends deauthentication frames to disconnect the clients from
    the AP. To perform this attack with `mdk3`, we first save the MAC address(es)
    of our target AP(s) in a blacklist file. Then, we run the following command:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: DoS攻击最有效的方法是去认证/去关联（Amok）模式，它发送去认证帧以断开客户端与AP的连接。要使用`mdk3`执行此攻击，我们首先将我们的目标AP的MAC地址保存在黑名单文件中。然后，我们运行以下命令：
- en: '[PRE21]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Here, `d` is obviously for deauthentication/disassociation mode and the `-b`
    option specifies the blacklist file to be used that here contains only one target
    AP:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`d`显然是去认证/去关联模式，`-b`选项指定要使用的黑名单文件，这里只包含一个目标AP：
- en: '![DoS attacks with MDK3](img/B04527_06_24.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![使用MDK3进行DoS攻击](img/B04527_06_24.jpg)'
- en: Rogue access points
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rogue访问点
- en: Until now, we have covered unauthenticated attacks against the wireless networks,
    to crack WEP or WPA keys, attack WPA-Enterprise, recover the WPS PIN, and to gain
    access to such networks.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经介绍了针对无线网络的未经身份验证的攻击，以破解WEP或WPA密钥，攻击WPA-Enterprise，恢复WPS PIN，并获得对这些网络的访问权限。
- en: 'In this section, we will cover an attack that assumes the attacker (insider
    or outsider) to be controlling a machine already connected to the wired LAN: rogue
    access points.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将介绍一种攻击，假设攻击者（内部人员或外部人员）正在控制已连接到有线LAN的机器：Rogue访问点。
- en: Indeed, a rogue AP is an access point installed on a LAN without authorization
    and can be used by an attacker as a backdoor to the network.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，Rogue AP是未经授权安装在LAN上的接入点，可以被攻击者用作网络的后门。
- en: A rogue AP can be installed either physically or via software (soft AP). The
    installation of a physical AP involves breaking the physical security policies
    of the network and can be identified more easily. We are going to see how to install
    a rogue soft AP and bridge it to the wired LAN.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Rogue AP可以通过物理方式或软件（软AP）安装。物理AP的安装涉及违反网络的物理安全策略，更容易被识别。我们将看到如何安装一个Rogue软AP并将其桥接到有线LAN。
- en: We could accomplish this task with `hostapd-wpe`, but here we use a tool from
    the Aircrack-ng suite, `airbase-ng`.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`hostapd-wpe`来完成这个任务，但是这里我们使用Aircrack-ng套件中的一个工具`airbase-ng`。
- en: 'We put our wireless interface in monitor mode with airmon-ng and run the following
    command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用airmon-ng将无线接口设置为监视模式，并运行以下命令：
- en: '[PRE22]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![Rogue access points](img/B04527_06_25.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![恶意接入点](img/B04527_06_25.jpg)'
- en: We notice that a tap interface `at0` is created. To be able to communicate,
    we must create a bridge between the rogue AP and the wired network, hence between
    the `at0` and the Ethernet (`eth0`) interfaces.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到创建了一个tap接口`at0`。为了能够通信，我们必须在恶意AP和有线网络之间创建一个桥接，因此在`at0`和以太网（`eth0`）接口之间。
- en: 'For this purpose, we install the `bridge-utils` utilities:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们安装`bridge-utils`实用程序：
- en: '[PRE23]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We create the bridge interface with the name `bridge-if`:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用名称`bridge-if`创建桥接接口：
- en: '[PRE24]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then, we connect the `at0` and the `eth0` interfaces to `bridge-if`:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将`at0`和`eth0`接口连接到`bridge-if`：
- en: '[PRE25]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'We bring up the interfaces with the following commands:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用以下命令启动接口：
- en: '[PRE26]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We also need to enable the kernel level IP forwarding, because the rogue AP
    acts as a router between the wireless and the wired networks:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要启用内核级IP转发，因为恶意AP充当无线和有线网络之间的路由器：
- en: '[PRE27]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Otherwise, we execute the following command, which has the same effect:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，我们执行以下命令，具有相同的效果：
- en: '[PRE28]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'When a client connects to the rogue AP, `airbase-ng` shows it in its log:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户端连接到恶意AP时，`airbase-ng`会在其日志中显示。
- en: '![Rogue access points](img/B04527_06_26.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![恶意接入点](img/B04527_06_26.jpg)'
- en: 'Running `airodump-ng`, we can see the details of our rogue AP:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`airodump-ng`，我们可以看到我们的恶意AP的详细信息：
- en: '![Rogue access points](img/B04527_06_27.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![恶意接入点](img/B04527_06_27.jpg)'
- en: The type of authentication is open, thus with no authentication and encryption,
    as a rogue AP is usually set by default. This can make the AP easily detectable,
    as an open wireless network immediately captures the attention of a penetration
    tester or of the network administrator.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 认证类型是开放的，因此没有认证和加密，通常恶意AP默认设置。这可以使AP很容易被检测到，因为开放的无线网络立即引起渗透测试人员或网络管理员的注意。
- en: 'The rogue AP can also be set up to use WEP or WPA/WPA2\. For example, to run
    the AP with WPA2-CCMP, we will execute the following command:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意AP也可以设置为使用WEP或WPA/WPA2。例如，要使用WPA2-CCMP运行AP，我们将执行以下命令：
- en: '[PRE29]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Here, the `-Z` option is for WPA2 (`-z` for WPA) and the value `4` is for CCMP.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`-Z`选项是用于WPA2（`-z`用于WPA），值`4`是用于CCMP。
- en: 'In the following screenshot, we can see the output of `airodump-ng`:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们可以看到`airodump-ng`的输出：
- en: '![Rogue access points](img/B04527_06_28.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![恶意接入点](img/B04527_06_28.jpg)'
- en: 'We can also start a hidden rogue AP by running `airbase-ng` with the `-X` option
    instead of the `–essid` option:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过使用`-X`选项而不是`–essid`选项来启动隐藏的恶意AP，运行`airbase-ng`：
- en: '[PRE30]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Rogue APs pose a serious threat to network security because they allow unauthorized
    access to the network, circumventing security systems such as firewalls and IDS.
    Indeed, the attacker that connects to a rogue AP can launch attacks against the
    local network, the servers and the clients connected. An attacker can also create
    a rogue AP to impersonate a legitimate AP and conduct man-in-the-middle attacks
    against wireless clients, as we will see in the next chapter.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意AP对网络安全构成严重威胁，因为它们允许未经授权访问网络，绕过防火墙和IDS等安全系统。事实上，连接到恶意AP的攻击者可以对本地网络、服务器和连接的客户端发动攻击。攻击者还可以创建一个恶意AP来冒充合法AP，并对无线客户端进行中间人攻击，我们将在下一章中看到。
- en: Attacking AP authentication credentials
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击AP身份验证凭据
- en: Home routers and APs provide a web administration panel to configure the devices
    that are usually not accessible from the Internet but only from the local network.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 家用路由器和AP提供了一个Web管理面板，用于配置通常无法从互联网访问但只能从本地网络访问的设备。
- en: A security aspect that may seem atomic, but that is often not considered important
    enough, is default authentication credentials.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可能看起来是原子的安全方面，但通常不被认为足够重要的是默认的身份验证凭据。
- en: It is a common practice not to change the default usernames and passwords to
    access the AP administration interface and many models come preconfigured with
    the puny credentials such as admin/admin. On the Web, lists of models of APs and
    routers with the relative default credentials are available. Even when default
    credentials are modified, weak passwords are often chosen.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 通常的做法是不更改访问AP管理界面的默认用户名和密码，许多型号预先配置了诸如admin/admin之类的弱凭据。在网络上，可以找到带有相关默认凭据的AP和路由器型号列表。即使默认凭据被修改，通常也会选择弱密码。
- en: This is a severe security issue because if an attacker takes control of the
    AP, he/she can compromise the entire network by performing the man-in-the-middle
    attacks on the network, sniffing the traffic, changing the DNS settings, and launching
    pharming and phishing attacks.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个严重的安全问题，因为如果攻击者控制了AP，他/她可以通过在网络上执行中间人攻击、嗅探流量、更改DNS设置和发动药物和钓鱼攻击来危害整个网络。
- en: A tool that can be used to crack HTTP authentication credentials is **hydra**,
    an online password cracking tool that supports various protocols. There is also
    a GUI for the program, hydra-gtk. Both come installed on Kali Linux.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 可以用于破解HTTP身份验证凭据的工具是**hydra**，这是一个支持各种协议的在线密码破解工具。该程序还有一个GUI版本，名为hydra-gtk。这两者都已安装在Kali
    Linux上。
- en: Hydra takes as inputs a username or a list of usernames and a list of passwords
    and tries all their possible combinations against the specified target.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra接受用户名或用户名列表和密码列表作为输入，并尝试所有可能的组合来攻击指定的目标。
- en: To get more information about Hydra and how to use it to crack passwords refer
    to the manual page and to the project's website [https://www.thc.org/thc-hydra/](https://www.thc.org/thc-hydra/).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关Hydra及其如何使用它来破解密码的更多信息，请参阅手册页面和项目网站[https://www.thc.org/thc-hydra/](https://www.thc.org/thc-hydra/)。
- en: In recent years, attacks have been developed that allow access to the administration
    panel of the router/AP even from the Internet. An example of this is the **DNS
    Rebinding** attack, where an attacker abuses the DNS to serve the victim's browser
    malicious client-side script that targets the internal network. Therefore, the
    browser acts for the attacker as an internal proxy to attack and take control
    of the router/AP. This kind of attack has become widespread in the recent years.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，已经开发出了一些攻击，允许甚至从互联网访问路由器/AP的管理面板。其中一个例子是**DNS重绑定**攻击，攻击者滥用DNS向受害者的浏览器提供恶意的客户端脚本，针对内部网络。因此，浏览器对攻击者来说就像是内部代理，用来攻击和控制路由器/AP。这种类型的攻击在近年来变得广泛。
- en: A tool that implements the DNS rebinding attack is called **rebind**, written
    by Craig Heffner and included in Kali Linux. More information about it can be
    found on the program web page [https://code.google.com/p/rebind/](https://code.google.com/p/rebind/).
    To learn the details of the attack, read Heffner's white paper *Remote Attacks
    Against SOHO Routers* [https://media.blackhat.com/bh-us-10/whitepapers/Heffner/BlackHat-USA-2010-Heffner-How-to-Hack-Millions-of-Routers-wp.pdf](https://media.blackhat.com/bh-us-10/whitepapers/Heffner/BlackHat-USA-2010-Heffner-How-to-Hack-Millions-of-Routers-wp.pdf).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 一个实施DNS重绑定攻击的工具被称为**rebind**，由Craig Heffner编写并包含在Kali Linux中。关于它的更多信息可以在程序网页[https://code.google.com/p/rebind/](https://code.google.com/p/rebind/)上找到。要了解攻击的细节，请阅读Heffner的白皮书*远程攻击SOHO路由器*[https://media.blackhat.com/bh-us-10/whitepapers/Heffner/BlackHat-USA-2010-Heffner-How-to-Hack-Millions-of-Routers-wp.pdf](https://media.blackhat.com/bh-us-10/whitepapers/Heffner/BlackHat-USA-2010-Heffner-How-to-Hack-Millions-of-Routers-wp.pdf)。
- en: Summary
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have covered the attacks against the access points and the
    network, in particular those against WPS and WPA-Enterprise, how to set up a rogue
    AP, DoS attacks, and AP authentication attacks.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经涵盖了针对接入点和网络的攻击，特别是针对WPS和WPA-Enterprise的攻击，以及如何设置一个伪造的AP，DoS攻击和AP认证攻击。
- en: In [Chapter 7](ch07.html "Chapter 7. Wireless Client Attacks"), *Wireless Client
    Attacks*, we will see attacks targeting the wireless clients, such as Honeypot
    and Evil Twin APs, the Caffe Latte and Hirte attacks, the man-in-the-middle attacks,
    and client deauthentication.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](ch07.html "第7章。无线客户端攻击")*无线客户端攻击*中，我们将看到针对无线客户端的攻击，比如蜜罐和恶意双子AP，Caffe
    Latte和Hirte攻击，中间人攻击和客户端去认证。
