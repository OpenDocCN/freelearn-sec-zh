- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: Incident Response with Wazuh
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Wazuh 进行事件响应
- en: It is of utmost importance to have a rapid and efficient response plan in place
    to handle any security events that may arise in the ever-changing world of cybersecurity.
    For example, a sales employee opened up a malicious file with a name attached
    to an email pretending to be from an authorized business partner. This can result
    in a ransomware attack and bring down many mission-critical services. When such
    an incident happens, responding promptly can help to minimize the overall damage
    to the network. An efficient **incident response** (**IR**) can help businesses
    to promptly resume normal operations, thereby reducing the amount of downtime
    that occurs and the expenses connected with it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在不断变化的网络安全世界中，制定一个快速有效的响应计划来处理可能出现的任何安全事件至关重要。例如，一名销售员工打开了一个附有恶意文件的电子邮件，假冒是来自授权业务合作伙伴的邮件。这可能导致勒索病毒攻击，并使许多关键服务瘫痪。当发生此类事件时，迅速响应可以帮助最大程度地减少对网络的总体损害。高效的**事件响应**（**IR**）可以帮助企业迅速恢复正常运营，从而减少停机时间和相关费用。
- en: 'In this chapter, we will learn how to leverage the Wazuh platform and other
    Wazuh-supported third-party tools to build an effective IR system. We will cover
    the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何利用 Wazuh 平台和其他 Wazuh 支持的第三方工具来构建一个有效的 IR 系统。我们将在本章中涵盖以下主题：
- en: Introduction to incident response
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件响应简介
- en: What is Wazuh active response?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Wazuh 主动响应？
- en: Blocking unauthorized SSH access
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻止未经授权的 SSH 访问
- en: Isolating an infected Windows machine
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隔离受感染的 Windows 机器
- en: Blocking RDP brute-force attack attempts
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻止 RDP 暴力破解攻击尝试
- en: Introduction to incident response
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件响应简介
- en: IR is the process by which an organization handles situations such as data breaches,
    **distributed denial of service** (**DDoS**), and ransomware attacks. It is an
    effort to immediately identify an attack, mitigate the impacts of the attack,
    contain any damage caused by the attack, and fix the cause in order to reduce
    the risk of future attacks. In practice, IR refers to a collection of information
    security rules, processes, and tools that can be used to detect, contain, and
    remove intrusions. Let’s discuss the two most popular IR frameworks, the **National
    Institute of Standards and Technology** (**NIST**) and SANS, as shown in the following
    diagram.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 事件响应（IR）是一个组织应对数据泄露、**分布式拒绝服务**（**DDoS**）和勒索病毒攻击等情况的过程。它的目的是立即识别攻击，减轻攻击的影响，控制攻击造成的任何损害，并修复原因，以减少未来攻击的风险。在实践中，IR是指一系列可以用于检测、遏制和清除入侵的信息安全规则、流程和工具。让我们来讨论两个最流行的IR框架：**美国国家标准与技术研究院**（**NIST**）和SANS，如下图所示。
- en: '![Figure 5.1 – NIST and SANS IR](img/B19549_5_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.1 – NIST 和 SANS IR](img/B19549_5_01.jpg)'
- en: Figure 5.1 – NIST and SANS IR
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1 – NIST 和 SANS IR
- en: Different methods of incident response process
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件响应过程的不同方法
- en: 'There are various methods for developing a structured IR process. There are
    two IR frameworks and processes that are most popular: NIST and SANS. Let us see
    each of them in detail.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 开发结构化 IR 过程有多种方法。目前最流行的两个IR框架和流程是：NIST和SANS。让我们详细了解它们。
- en: SANS six-step procedure
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SANS 六步流程
- en: 'The SANS Institute recommends six processes for IR: *preparation*, *identification*,
    *containment*, *eradication*, *recovery*, and *lessons learned*.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: SANS研究所建议IR采用六个过程：*准备*、*识别*、*遏制*、*根除*、*恢复*和*经验教训*。
- en: 'Let’s elaborate on the SANS six-step procedure. SANS defines IR as having six
    stages. When an incident occurs, these six processes are repeated in a cycle.
    The steps are as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细讨论 SANS 的六步流程。SANS 将 IR 定义为六个阶段。当事件发生时，这六个过程会在一个循环中重复进行。步骤如下：
- en: Preparation of systems and procedures
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统和流程的准备
- en: Identification of incidents
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 事件识别
- en: Containment of attack
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 控制攻击
- en: Eradication of intrusion
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根除入侵
- en: Recovery from accidents, including system restoration
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 事故恢复，包括系统恢复
- en: Lessons gained and feedback applied to the next stage of planning
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 吸取经验教训并将反馈应用于下一阶段的规划
- en: 'Let us understand each of the processes step by step:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步一步理解每个过程：
- en: '**Preparation**: During the first step of preparation, you evaluate the efficiency
    of existing security measures and regulations. This entails doing a risk assessment
    to identify current vulnerabilities and the priority of your assets. Some of the
    important action items are listed here:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**准备阶段**：在准备的第一步中，你需要评估现有安全措施和规定的效率。这包括进行风险评估，以识别当前的漏洞以及资产的优先级。以下是一些重要的行动项：'
- en: Create a policy and plan for IR
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制定IR的政策和计划
- en: Create an IR team
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建IR团队
- en: Determine and categorize important assets
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定和分类重要资产
- en: Acquire the tools and technology required for incident detection and response
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取事故检测和响应所需的工具和技术
- en: '**Identification of incidents**: The emphasis is on the constant monitoring
    and identification of potential security issues using techniques such as **intrusion
    detection systems** (**IDSs**), **security incident and event management** (**SIEM**),
    **endpoint detection and response** (**EDR**), and log analysis. Some of the important
    steps are listed here:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**事件识别**：重点是通过技术手段（如**入侵检测系统**（**IDSs**）、**安全事件和事件管理**（**SIEM**）、**终端检测与响应**（**EDR**）和日志分析）持续监控并识别潜在的安全问题。以下是一些重要步骤：'
- en: Continuous surveillance for indications of security incidents
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续监控安全事件的迹象
- en: Use host-based and network-based IDSs
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用基于主机和基于网络的IDS
- en: Gather and examine logs from various sources
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集并分析来自不同来源的日志
- en: Make use of threat intelligence streams
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用威胁情报流
- en: '**Containment of attack**: When an incident occurs, this phase focuses on immediately
    isolating compromised systems, implementing temporary solutions or workarounds,
    and updating access restrictions and firewall rules to avoid additional compromise.
    This is where digital forensics plays a critical role.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**攻击遏制**：当发生事故时，这一阶段着重于立即隔离受损的系统，实施临时解决方案或变通方法，并更新访问限制和防火墙规则，以避免进一步的妥协。在此阶段，数字取证发挥着至关重要的作用。'
- en: '**Eradication of intrusion**: The incident’s root cause is recognized and treated
    here. Vulnerabilities that allowed the incident to occur are remedied, and policies
    and configurations are modified to prevent the same occurrence from occurring
    again.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**入侵消除**：在这一阶段，识别并处理事故的根本原因。解决导致事件发生的漏洞，并修改政策和配置，以防止同样的事件再次发生。'
- en: '**Recovery from accidents, including system restoration**: This phase focuses
    on resuming the normal operation of affected systems, certifying their integrity,
    and ensuring that the incident has been thoroughly resolved. It also entails analyzing
    and upgrading IR processes depending on the incident’s lessons gained.'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**事故恢复，包括系统恢复**：此阶段着重于恢复受影响系统的正常操作，验证其完整性，并确保事件已得到彻底解决。这还包括根据事件的经验教训分析和升级IR流程。'
- en: '**Lessons learned phase**: During this phase, organizations undertake a post-event
    review, documenting the incident, the reaction, and the lessons learned. The purpose
    is to develop IR plans and policies, as well as to offer IR team members additional
    training.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**经验教训阶段**：在这一阶段，组织进行事件后回顾，记录事件、反应和经验教训。目的是制定IR计划和政策，并为IR团队成员提供额外的培训。'
- en: NIST four-step procedure
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NIST四步程序
- en: 'NIST defines IR as having four steps: *preparation*, *detection and analysis*,
    *containment, eradication, and recovery*, and *post-incident activity*. Let us
    understand each of these processes in detail:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: NIST将IR定义为包含四个步骤：*准备*、*检测与分析*、*遏制、消除与恢复*、以及*事后活动*。让我们详细了解每个过程：
- en: '**Preparation**: The NIST framework for IR emphasizes preparation as a critical
    component, much like the SANS framework does. During this phase, systems, procedures,
    and plans must be put in place in order to get ready for incidents. Organizations
    should have the following in place to be ready for incidents:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**准备阶段**：NIST框架强调准备是IR的关键组成部分，这一点与SANS框架类似。在此阶段，必须制定系统、程序和计划，以便为事故做好准备。组织应当具备以下准备措施，以便应对事故：'
- en: A precise IR strategy
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精确的IR策略
- en: Clearly defined roles and duties
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确的角色和职责
- en: A successful communication strategy
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个成功的沟通策略
- en: Reporting plan
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告计划
- en: Determining the vital systems and resources
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定关键系统和资源
- en: Testing and updating the IR plan on a regular basis
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期测试和更新IR计划
- en: '**Detection and analysis**: During this phase, companies identify and examine
    occurrences to comprehend their extent and consequences. Making decisions regarding
    how to respond to an incident at this time is crucial. The following should be
    in place inside businesses in order to recognize and analyze occurrences effectively:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**检测与分析**：在这一阶段，公司识别并分析事件，以了解其范围和后果。在这一时刻，决定如何应对事件至关重要。为了有效地识别和分析事件，企业应具备以下内容：'
- en: Keeping an eye on escalation processes and mechanisms
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关注升级过程和机制
- en: Prompt incident detection and analysis
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 及时检测和分析事件
- en: '**Containment, eradication, and recovery**: The containment, eradication, and
    recovery stages in the NIST framework are similar to those in the SANS framework.
    The following should be in place inside organizations in order to contain, eliminate,
    and recover from incidents:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**遏制、消除和恢复**：NIST 框架中的遏制、消除和恢复阶段与 SANS 框架中的类似。为了遏制、消除并恢复事件，组织应具备以下内容：'
- en: Isolating the impacted systems
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隔离受影响的系统
- en: Eliminating the incident’s cause
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消除事件的根本原因
- en: Returning to regular operations
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复正常运营
- en: '**Post-incident activity**: In the NIST system, post-incident activity is the
    last phase. Organizations evaluate their IR procedure and evaluate the effects
    of incidents at this point. The following should be in place for organizations
    to examine and enhance the IR process:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**事件后活动**：在 NIST 系统中，事件后活动是最后一个阶段。组织在这一阶段评估其 IR 程序，并评估事件的影响。为了使组织能够检查和改进 IR
    过程，以下内容应该到位：'
- en: A procedure to evaluate the IR methodology
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估 IR 方法的程序
- en: A process for recording the lessons discovered
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录所学经验的过程
- en: A plan for bringing enhancements to the IR procedure into practice
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施 IR 程序改进的计划
- en: Objectives of the NIST and SANS procedures
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NIST 和 SANS 程序的目标
- en: 'The objectives of the NIST and SANS IR frameworks are similar and offer an
    organized method for handling incidents. Nonetheless, the two frameworks differ
    in a few significant ways:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: NIST 和 SANS IR 框架的目标相似，都提供了一个有组织的方法来处理事件。然而，这两个框架在一些重要方面存在差异：
- en: Both frameworks emphasize the significance of having a precise IR plan, defined
    roles and duties, and efficient communication when it comes to the preparation
    stage. On the other hand, having a reporting plan in place and identifying key
    systems and assets are given more weight in the NIST framework.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个框架都强调在准备阶段拥有精确的 IR 计划、明确的角色和职责以及有效的沟通的重要性。另一方面，NIST 框架更加重视制定报告计划并识别关键系统和资产。
- en: Both frameworks concentrate on the prompt detection and examination of occurrences
    in terms of detection and analysis. But whereas the NIST framework is more concerned
    with monitoring systems and escalation protocols, the SANS approach prioritizes
    triage and prioritizing.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个框架都侧重于事件的及时检测和分析，但 NIST 框架更多关注系统监控和升级协议，而 SANS 方法则优先考虑事件的分类和优先级排序。
- en: In the next section, we will discuss the importance of automating IR activities.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将讨论自动化 IR 活动的重要性。
- en: Incident response automation
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件响应自动化
- en: 'Effective IR is time-sensitive and requires teams to identify threats and initiate
    an **incident response plan** (**IRP**) as soon as possible. A security team receives
    thousands of security alerts from security tools every day and hence it is difficult
    to manually analyze events or assess every alarm that security tools generate.
    These constraints are addressed via automated IR. In [*Chapter 4*](B19549_04.xhtml#_idTextAnchor116),
    *Security Automation and Orchestration Using Shuffle*, we learned how shuffle
    SOAR makes this possible by creating workflows, helping the security team with
    automated incident enrichment, automated observable analysis with TheHive tool
    integration, automating Wazuh activities, and many more. In this chapter, our
    focus will be on using Wazuh’s in-built capability called active response to perform
    IR. In general, IR automation can help the security team with the following:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的 IR 是时间敏感的，需要团队尽快识别威胁并启动 **事件响应计划** (**IRP**)。安全团队每天会收到来自安全工具的数千条安全警报，因此很难手动分析事件或评估每一个安全工具生成的警报。这些限制通过自动化
    IR 得到了应对。在 [*第4章*](B19549_04.xhtml#_idTextAnchor116)，《使用 Shuffle 的安全自动化与协调》中，我们了解了
    Shuffle SOAR 是如何通过创建工作流来使这一切成为可能，帮助安全团队进行自动化事件丰富、通过 TheHive 工具集成进行自动化可观察性分析、自动化
    Wazuh 活动等。在本章中，我们将重点讨论如何使用 Wazuh 的内置功能 —— 主动响应来执行 IR。一般来说，IR 自动化可以帮助安全团队完成以下任务：
- en: '**Immediate containment**: Once compromised systems are identified, automated
    IR systems should isolate them to stop threats from spreading'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**立即遏制**：一旦发现受损系统，自动化 IR 系统应将其隔离，以防止威胁蔓延。'
- en: '**Dynamic firewall rules**: In response to certain risks, the IR automation
    system can dynamically develop and deploy firewall rules that block malicious
    traffic or isolate vulnerable systems'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态防火墙规则**：针对特定风险，IR 自动化系统可以动态制定并部署防火墙规则，阻止恶意流量或隔离易受攻击的系统。'
- en: '**Automated account disabling**: Automated reaction steps can quickly disable
    compromised user accounts in the case of a security incident, blocking future
    unauthorized access'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化账户禁用**：在发生安全事件时，自动化响应步骤可以快速禁用被攻击的用户账户，从而阻止未来的未经授权访问。'
- en: '**User access restrictions**: To improve the security posture, the IR automation
    system can impose access controls, such as removing users who indicate suspicious
    behavior or restricting access privileges'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户访问限制**：为了提高安全态势，IR 自动化系统可以实施访问控制，例如移除表现出可疑行为的用户或限制访问权限。'
- en: '**GeoIP blocking**: To strengthen defense against targeted attacks, automated
    IR can use GeoIP blocking rules to limit access from particular geographic regions
    known for malicious activity'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GeoIP 阻断**：为了增强防御针对性攻击的能力，自动化 IR 可以使用 GeoIP 阻断规则，限制来自已知恶意活动地理区域的访问。'
- en: We can create tons of different use cases for automating IR. In the next section,
    we will practically deploy and test some of the automated IR using Wazuh’s active
    response capability.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为自动化 IR 创建许多不同的使用场景。在接下来的部分中，我们将实际部署并测试一些使用 Wazuh 主动响应功能的自动化 IR。
- en: Wazuh active response
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wazuh 主动响应
- en: One of the main components of the Wazuh platform that enables automatic responses
    to security events and incidents is called active response. Security analysts
    can respond quickly to specific security threats or triggers identified by the
    Wazuh system by utilizing active response. By utilizing active response features,
    Wazuh enables organizations to respond to security incidents quickly and aggressively.
    With Wazuh active response, you may develop and execute automated responses against
    most security alerts. These responses may include executing custom scripts, banning
    IP addresses, or deactivating user accounts. Automating response actions makes
    sure that incidents with a high significance are dealt with and mitigated in a
    timely and consistent way. This is especially helpful when security teams don’t
    have a lot of resources and have to decide how to respond first.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 平台的主要组件之一是主动响应，它使得能够自动响应安全事件和事故。安全分析师可以利用主动响应快速应对 Wazuh 系统识别的特定安全威胁或触发器。通过利用主动响应功能，Wazuh
    使组织能够快速且积极地应对安全事件。通过 Wazuh 主动响应，您可以开发并执行自动化响应，处理大部分安全警报。这些响应可能包括执行自定义脚本、禁止 IP
    地址或停用用户账户。自动化响应行动确保了高重要性的事件能够及时且一致地得到处理和缓解。当安全团队资源有限且需要决定首先如何响应时，这一点尤为重要。
- en: 'In this section, we will cover the following topics:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将涵盖以下主题：
- en: Active response scripts
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主动响应脚本
- en: Configuring active response
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置活跃响应
- en: The working of Wazuh active response
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wazuh 活跃响应的工作原理
- en: Active response scripts
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活跃响应脚本
- en: 'Wazuh provides pre-built Active response scripts for Linux, Windows, and macOS
    systems. Additionally, it also helps security professionals to write custom active
    response scripts based on specific requirements. The default active response scripts
    are stored in the following folders/directories:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 提供了针对 Linux、Windows 和 macOS 系统的预构建活跃响应脚本。此外，它还帮助安全专业人员根据特定需求编写自定义活跃响应脚本。默认的活跃响应脚本存储在以下文件夹/目录中：
- en: '| **Endpoint** | **Location (Directory/Folder)** |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| **终端节点** | **位置（目录/文件夹）** |'
- en: '| Windows | `C:\Program` `Files (x86)\ossec-agent\active-response\bin` |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| Windows | `C:\Program` `Files (x86)\ossec-agent\active-response\bin` |'
- en: '| Linux | `/``var/ossec/active-response/bin` |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| Linux | `/``var/ossec/active-response/bin` |'
- en: '| macOS | `/``Library/ossec/active-response/bin` |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| macOS | `/``Library/ossec/active-response/bin` |'
- en: Table 5.1 – Location of active response scripts
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5.1 – 活跃响应脚本的位置
- en: 'The Wazuh team and the entire community have done a brilliant job in building
    powerful active response scripts. Some of the popular scripts are mentioned in
    the following table:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 团队和整个社区在构建强大的活跃响应脚本方面做得非常出色。以下表格列出了一些流行的脚本：
- en: '| **Operating System** | **Scripts** |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| **操作系统** | **脚本** |'
- en: '| --- | --- |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Windows |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| Windows |'
- en: '`Netsh.exe`: Blocks an IP address using `netsh`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Netsh.exe`：使用 `netsh` 阻止 IP 地址'
- en: '`Restart-wazuh.exe`: Restarts the Wazuh agent'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Restart-wazuh.exe`：重启 Wazuh 代理'
- en: '`Route-null.exe`: Adds an IP address to the null route'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Route-null.exe`：将 IP 地址添加到空路由中'
- en: '|'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Ubuntu |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| Ubuntu |'
- en: '`firewall-drop`: Adds an IP address to the IP tables deny list'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`firewall-drop`：将 IP 地址添加到 IP 表的拒绝列表'
- en: '`start.sh`: Restarts the Wazuh agent or manager'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`start.sh`：重启 Wazuh 代理或管理器'
- en: '`Route-null`: Adds an IP address to a null route'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Route-null`：将 IP 地址添加到空路由中'
- en: '|'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Table 5.2 – List of default active response scripts
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5.2 – 默认活跃响应脚本列表
- en: Now, let’s learn how to set up active response on the monitored endpoints.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何在受监控的终端节点上设置活跃响应。
- en: Configuring active response
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置活跃响应
- en: 'Active response configuration needs to be done only on the Wazuh server. However,
    both the server and agent must have an active response script. Wazuh requires
    three things to execute an active response, and these are as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 活跃响应配置只需要在 Wazuh 服务器上完成。然而，服务器和代理都必须具备活跃响应脚本。Wazuh 执行活跃响应所需的三项内容如下：
- en: Active response script
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活跃响应脚本
- en: The `<``command>` tag
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<command>` 标签'
- en: The `<``active-response>` tag
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<active-response>` 标签'
- en: Active response script
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活跃响应脚本
- en: The Wazuh manager and agents have out-of-the-box active response scripts, supporting
    Linux, macOS, and Windows endpoints. We can also create custom active response
    scripts that run when an alert of a specific rule ID, rule group, or alert level
    triggers. All the default active response scripts are stored in the /var/ossec/active-response/bin
    directory. If you create a custom script, make sure you save them in the same
    directory.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 管理器和代理已提供现成的活跃响应脚本，支持 Linux、macOS 和 Windows 终端节点。我们还可以创建自定义的活跃响应脚本，在特定规则
    ID、规则组或警报级别触发时运行。所有默认的活跃响应脚本存储在 /var/ossec/active-response/bin 目录中。如果您创建自定义脚本，请确保将其保存在同一目录中。
- en: The <command> tag
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`<command>` 标签'
- en: 'The `<command>` tag specifies which script should be executed when a certain
    rule is triggered. The `<command>` elements for out-of-the-box active response
    scripts are automatically included in the Wazuh server `/var/ossec/etc/ossec.conf`
    instance type; therefore, it is not required to add them. Let me share an example
    of the `<``command>` block:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`<command>` 标签指定在触发某个规则时应执行哪个脚本。现成的活跃响应脚本的 `<command>` 元素会自动包含在 Wazuh 服务器的
    `/var/ossec/etc/ossec.conf` 实例类型中，因此不需要手动添加它们。让我分享一个 `<command>` 块的示例：'
- en: '[PRE0]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here, we have the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<name>`: Name of the command'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<name>`：命令名称'
- en: '`<executable>`: Defines the script or executable that must be executed in response
    to a trigger'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<executable>`：定义必须在触发时执行的脚本或可执行文件'
- en: '`<timeout_allowed>`: Enables a timeout following a specified duration'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<timeout_allowed>`：在指定的持续时间后启用超时'
- en: The <active-response> tag
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`<active-response>` 标签'
- en: 'Insert an `<active-response>` tag within the `<ossec_config>` element in the
    `/var/ossec/etc/ossec.conf` file of the same Wazuh server. The `<active-response>`
    block specifies the location and condition of command execution, as shown:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一 Wazuh 服务器的 `/var/ossec/etc/ossec.conf` 文件中的 `<ossec_config>` 元素内插入 `<active-response>`
    标签。`<active-response>` 块指定命令执行的位置和条件，如下所示：
- en: '[PRE1]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here, we have the following:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<command>`: It provides the configuration command. In our case, we have used
    `firewall-drop`.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<command>`：它提供了配置命令。在我们的例子中，我们使用了 `firewall-drop`。'
- en: '`<location>`: It indicates the location where the command must be executed.
    We have three types of locations: `Local`, `Server`, or `Defined-agent`. The purpose
    of these options is as follows:'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<location>`：表示命令必须执行的位置。我们有三种位置类型：`Local`、`Server` 或 `Defined-agent`。这些选项的目的是：'
- en: '`Server`: It executes the script on the Wazuh server.'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Server`：它在 Wazuh 服务器上执行脚本。'
- en: '`Defined-agent`: It runs the script on a predefined agent. We require the `<agent-id>`
    tag to specify the ID of the Wazuh agent.'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Defined-agent`：它在预定义的代理上执行脚本。我们需要 `<agent-id>` 标签来指定 Wazuh 代理的 ID。'
- en: How Wazuh active response works
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Wazuh 活跃响应的工作原理
- en: These active response scripts (hosted at `/var/ossec/active-response/bin`) are
    run on monitored endpoints by Wazuh in response to alerts triggered by a particular
    rule ID, level, or rule group. You can write a variety of scripts to start in
    response to a trigger, but you need to carefully plan these actions. Inadequate
    execution of rules and replies may make an endpoint more vulnerable.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这些活跃响应脚本（托管在 `/var/ossec/active-response/bin`）在监控端点上由 Wazuh 执行，以响应由特定规则 ID、级别或规则组触发的警报。您可以编写各种脚本来响应触发，但需要谨慎规划这些操作。规则和响应执行不当可能会让端点更容易受到攻击。
- en: 'Let’s talk about how Wazuh active response works:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来讨论一下 Wazuh 活跃响应是如何工作的：
- en: '**Event generated**: The Wazuh agent pushes the events to the manager. The
    Wazuh manager analyzes and triggers alerts based on the matched rule.'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**事件生成**：Wazuh 代理将事件推送到管理器，Wazuh 管理器根据匹配的规则分析并触发警报。'
- en: '![Figure 5.2 – Event generated](img/B19549_5_02.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.2 – 事件生成](img/B19549_5_02.jpg)'
- en: Figure 5.2 – Event generated
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – 事件生成
- en: '`<active-response>` block within the `<ossec_config>` tag in the Wazuh server
    with the `<rule_id>` tag and there is a matching security alert, it will trigger
    our newly created `<active-response>`.'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<active-response>` 块位于 Wazuh 服务器的 `<ossec_config>` 标签中，如果有匹配的安全警报，则会触发我们新创建的
    `<active-response>`。'
- en: '`<command>` block. Wazuh agents will have the default active response scripts;
    however, if you want to implement any custom active response, you need to write
    and save the code in the Wazuh agent.'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<command>` 块。Wazuh 代理将有默认的活跃响应脚本；但是，如果您想实施任何自定义活跃响应，您需要编写并保存代码在 Wazuh 代理中。'
- en: '`/var/ossec/active-response/bin` location. You can troubleshoot or verify the
    Wazuh active response by checking the logs present at `/var/ossec/active-response/active-response.log`.'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/var/ossec/active-response/bin` 位置。您可以通过检查 `/var/ossec/active-response/active-response.log`
    中的日志来排查问题或验证 Wazuh 活跃响应。'
- en: '![Figure 5.3 – Executing active response on Wazuh agent](img/B19549_5_03.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.3 – 在 Wazuh 代理上执行活跃响应](img/B19549_5_03.jpg)'
- en: Figure 5.3 – Executing active response on Wazuh agent
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – 在 Wazuh 代理上执行活跃响应
- en: '**Active response alert**: Once the active response script is executed, our
    Wazuh manager will take that alert from the Wazuh agent and show it to us on the
    security alert dashboard.'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**活跃响应警报**：一旦活跃响应脚本被执行，我们的 Wazuh 管理器将从 Wazuh 代理中获取该警报并在安全警报仪表板上显示给我们。'
- en: '![Figure 5.4 – Active response log](img/B19549_5_04.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.4 – 活跃响应日志](img/B19549_5_04.jpg)'
- en: Figure 5.4 – Active response log
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4 – 活跃响应日志
- en: Now that we understand how Wazuh active response works and how to configure
    it, let’s cover some practical use cases.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了 Wazuh 活跃响应的工作原理以及如何配置它，让我们来看看一些实际应用案例。
- en: Blocking unauthorized SSH access
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阻止未经授权的 SSH 访问
- en: '**SSH attacks** are among the most prevalent types of attacks against servers
    accessible via the internet. Automated bots that regularly monitor the internet
    for SSH servers with inadequate security setups carry out the major share of SSH
    attacks. Because attack sources are frequently scattered globally, with no single
    country dominating, it is a global cybersecurity threat. Organizational losses,
    data breaches, and compromised servers are all possible outcomes of successful
    SSH attacks. In this section, we will learn how to automatically block unauthorized
    SSH access to a victim’s machine.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**SSH 攻击** 是通过互联网访问的服务器上最常见的攻击类型之一。自动化的机器人会定期监视互联网，寻找安全设置不充分的 SSH 服务器，这些机器人进行大部分的
    SSH 攻击。由于攻击源通常分布在全球，没有任何一个国家占主导地位，因此它是一个全球性的网络安全威胁。成功的 SSH 攻击可能导致组织损失、数据泄露和服务器被攻陷。在本节中，我们将学习如何自动阻止未经授权的
    SSH 访问受害者的计算机。'
- en: 'We will learn about the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将了解以下内容：
- en: Lab setup
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验室设置
- en: Setting up active response
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置活跃响应
- en: Testing
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试
- en: Lab setup
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实验设置
- en: 'In this lab setup, we require three things: an Ubuntu Server with a Wazuh agent
    installed, an attacker machine (Kali Linux), and, finally, our Wazuh server (we
    have used a Virtual Machine OVA file for Lab purposes only). The lab is designed
    as follows.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本实验设置中，我们需要三样东西：安装了 Wazuh 代理的 Ubuntu 服务器、一台攻击者机器（Kali Linux），以及我们的 Wazuh 服务器（我们仅为实验目的使用了虚拟机
    OVA 文件）。实验的设计如下。
- en: '![Figure 5.5 – Lab setup: Blocking unauthorized SSH access using Wazuh active
    response](img/B19549_5_05.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.5 – 实验设置：使用 Wazuh 主动响应阻止未经授权的 SSH 访问](img/B19549_5_05.jpg)'
- en: 'Figure 5.5 – Lab setup: Blocking unauthorized SSH access using Wazuh active
    response'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5 – 实验设置：使用 Wazuh 主动响应阻止未经授权的 SSH 访问
- en: In this lab, we are going to use the `firewall-drop` scripts as the default
    active response script for the monitored Ubuntu agent. Next, we need to modify
    the active response script to be triggered when an unauthorized SSH connection
    is detected.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本实验中，我们将使用 `firewall-drop` 脚本作为被监控的 Ubuntu 代理的默认主动响应脚本。接下来，我们需要修改主动响应脚本，以便在检测到未经授权的
    SSH 连接时触发。
- en: Setting up Wazuh active response
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Wazuh 主动响应
- en: In order to set up the Wazuh platform to block unauthorized SSH access attempts,
    we need to execute the firewall-drop active response script once Wazuh rule `5710`
    is triggered. We need to take the steps that follow to accomplish this task.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置 Wazuh 平台以阻止未经授权的 SSH 访问尝试，我们需要在触发 Wazuh 规则 `5710` 后执行 firewall-drop 主动响应脚本。我们需要采取以下步骤来完成此任务。
- en: Modifying the active response on the Wazuh manager
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改 Wazuh 管理器上的主动响应
- en: 'As we have learned, `<active-response>` executes a specific `<command>` block.
    In our case, we are utilizing the firewall-drop active response, which executes
    the `firewall-drop` command. We can find both the `<command>` and `<active-response>`
    blocks in the `ossec.conf` file located at `/var/ossec/etc`. We want to make sure
    the `<active-response>` block for firewall-drop is executed once rule `5710` is
    triggered. Wazuh rule `5710` represents `sshd: Attempt to login using a non-existent
    user`. The final modified `<command>` and `<active-response>` blocks are shown
    here:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '正如我们所了解的，`<active-response>` 会执行特定的 `<command>` 块。在我们的案例中，我们正在使用 firewall-drop
    主动响应，它会执行 `firewall-drop` 命令。我们可以在位于 `/var/ossec/etc` 目录下的 `ossec.conf` 文件中找到
    `<command>` 和 `<active-response>` 块。我们要确保在触发规则 `5710` 时执行 `<active-response>`
    块。Wazuh 规则 `5710` 代表 `sshd: 尝试使用不存在的用户登录`。最终修改后的 `<command>` 和 `<active-response>`
    块如下所示：'
- en: '[PRE2]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here, we have the following:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<executable>`: It is set to `firewall-drop`, which indicates the name of the
    script located at `/var/ossec/active-response/bin` of the Wazuh agent'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<executable>`：设置为 `firewall-drop`，表示该脚本位于 Wazuh 代理的 `/var/ossec/active-response/bin`
    目录中'
- en: '`<location>`: It is set to `local`, which indicates it only runs the script
    on the monitored endpoint that generated the alert'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<location>`：设置为 `local`，表示仅在生成警报的被监控端点上运行脚本'
- en: '`<timeout>`: It is set to 60 seconds and specifies that for 60 seconds the
    active response action will be effective'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<timeout>`：设置为 60 秒，表示主动响应行动将在 60 秒内有效'
- en: Restarting the Wazuh manager
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 重启 Wazuh 管理器
- en: 'In order for the Wazuh manager to implement the configuration change, we need
    to restart the manager, as shown:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Wazuh 管理器实现配置更改，我们需要重新启动管理器，如下所示：
- en: '[PRE3]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Testing
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: 'To test the unauthorized SSH brute-force attack, you can log in to a Kali Linux
    machine and run the following-mentioned `hydra` tool command:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试未经授权的 SSH 暴力破解攻击，你可以登录到 Kali Linux 机器并运行以下提到的 `hydra` 工具命令：
- en: '[PRE4]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here, we have the following:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`hydra`: This is the name of the tool used to perform the SSH brute-force attack.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hydra`：这是执行 SSH 暴力破解攻击时使用的工具名称。'
- en: '`-l voldemort`: The `-l` flag is used to indicate the username for the SSH
    login attempt. In this case, the username is `voldemort`.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-l voldemort`：`-l` 标志用于指示 SSH 登录尝试的用户名。在此案例中，用户名是 `voldemort`。'
- en: '`-P <PASSWORD_TEXT_FILE>`: The `–P` flag is used to specify the path to the
    text file containing the list of passwords.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-P <PASSWORD_TEXT_FILE>`：`-P` 标志用于指定包含密码列表的文本文件的路径。'
- en: '`<WAZUH_AGENT_IP>`: This represents the IP address of the Wazuh agent.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<WAZUH_AGENT_IP>`：表示 Wazuh 代理的 IP 地址。'
- en: '`SSH`: This specifies the service that `hydra` will attempt to attack.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SSH`：这指定了 `hydra` 将尝试攻击的服务。'
- en: 'Once you hit **Enter**, the SSH brute-force attack will be executed as shown
    in the following diagram:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你按下 **Enter**，SSH 暴力破解攻击将如图所示执行：
- en: '![Figure 5.6 –  Launching an SSH brute-force attack](img/B19549_5_06.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.6 – 发起 SSH 暴力破解攻击](img/B19549_5_06.jpg)'
- en: Figure 5.6 – Launching an SSH brute-force attack
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6 – 发起 SSH 暴力破解攻击
- en: Visualizing alerts
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化警报
- en: 'Now, once the SSH brute-force attack is executed, we will see two alerts: first,
    an SSH unauthorized access attempt, and second, an active response blocking user
    access. To visualize the alerts, go to the Wazuh manager and navigate to **Security
    alerts**. You will see the following:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一旦执行了 SSH 暴力破解攻击，我们将看到两个警报：第一个是 SSH 未授权访问尝试，第二个是主动响应阻止用户访问。要可视化警报，请进入 Wazuh
    管理器并导航到 **安全警报**。你将看到以下内容：
- en: '![Figure 5.7 – Wazuh alerts after the SSH brute-force attack](img/B19549_5_07.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.7 – SSH 暴力破解攻击后的 Wazuh 警报](img/B19549_5_07.jpg)'
- en: Figure 5.7 – Wazuh alerts after the SSH brute-force attack
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.7 – SSH 暴力破解攻击后的 Wazuh 警报
- en: 'Let’s look into the first alert, **ssh: Attempt to login using a non-existing
    user**, as shown in the following figure.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '让我们看一下第一个警报，**ssh: 尝试使用不存在的用户登录**，如图所示。'
- en: '![Figure 5.8 – Wazuh alert – ssh: Attempt to login using a non-existing user](img/B19549_5_08.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.8 – Wazuh 警报 – ssh: 尝试使用不存在的用户登录](img/B19549_5_08.jpg)'
- en: 'Figure 5.8 – Wazuh alert – ssh: Attempt to login using a non-existing user'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.8 – Wazuh 警报 – ssh: 尝试使用不存在的用户登录'
- en: 'Here, we have the following:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`5710`: This represents the Wazuh rule ID `5710`, **sshd: Attempt to login
    using a** **non-existing user**.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`5710`：这表示 Wazuh 规则 ID `5710`，**sshd: 尝试使用不存在的用户登录**。'
- en: '`data.srcuser: voldemort`: This represents the username of the unauthorized
    account. In this case, it is `voldemort`.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data.srcuser: voldemort`：这表示未经授权账户的用户名。在此案例中，它是 `voldemort`。'
- en: Next, we will look into an active response alert triggered by Wazuh rule ID
    `5710`, as shown in the following figure.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看由 Wazuh 规则 ID `5710` 触发的主动响应警报，如下图所示。
- en: '![Figure 5.9 – Security alert – Host Blocked by firewall-drop Active Response](img/B19549_5_09.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.9 – 安全警报 – 主机被防火墙丢弃的主动响应阻止](img/B19549_5_09.jpg)'
- en: Figure 5.9 – Security alert – Host Blocked by firewall-drop Active Response
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.9 – 安全警报 – 主机被防火墙丢弃的主动响应阻止
- en: 'Here, we have the following:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`data.parameters.alert.data.srcuser: voldemort`: This represents the username
    blocked by the firewall-drop active response script.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`data.parameters.alert.data.srcuser: voldemort`：这表示被防火墙丢弃的主动响应脚本阻止的用户名。'
- en: In this use case, we have automatically blocked any unauthorized SSH attempt
    to our Ubuntu server running the Wazuh agent. In the next section, we will learn
    how to automatically isolate a Windows machine after getting infected by malware.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个使用案例中，我们已经自动阻止了任何未经授权的 SSH 尝试访问运行 Wazuh 代理的 Ubuntu 服务器。在下一节中，我们将学习如何在 Windows
    机器感染恶意软件后自动进行隔离。
- en: Isolating a Windows machine post-infection
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 感染后隔离 Windows 机器
- en: 'The process of isolating a compromised endpoint is an essential part of IR
    in a SOC. In order to stop the threat from spreading and inflicting further damage,
    you must isolate the infected device or system from the network immediately. Also
    remember that it is important to examine the severity of the compromise, the value
    of the asset, and the potential impact on the business before deciding on an isolation
    strategy; isolation is not a silver bullet. A ransomware attack is an essential
    attack scenario in which isolation is a crucial step. Ransomware is a type of
    malware that encrypts the data of a victim and demands payment for the decryption
    key. It frequently spreads quickly throughout a network, potentially affecting
    many endpoints. In this section, we will isolate a Windows machine post-infection
    by malware. We will utilize the Wazuh active response capability to create an
    automatic outbound rule to block all outgoing traffic. In this section, we will
    cover the following:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 隔离受损端点的过程是 SOC 中 IR 的重要组成部分。为了阻止威胁蔓延并造成进一步损害，必须立即将受感染的设备或系统从网络中隔离。同时，请记住，在决定隔离策略之前，评估妥协的严重性、资产的价值以及对业务的潜在影响是非常重要的；隔离并不是万能的解决方案。勒索病毒攻击是一个关键攻击场景，在其中隔离步骤至关重要。勒索病毒是一种恶意软件，它加密受害者的数据并要求支付解密密钥。它通常会在网络中快速传播，可能影响多个端点。在本节中，我们将隔离一台被恶意软件感染后的
    Windows 机器。我们将利用 Wazuh 的主动响应功能创建一个自动外发规则，阻止所有外向流量。在本节中，我们将涵盖以下内容：
- en: Requirement
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求
- en: Approach
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法
- en: Setting up a Windows machine with a batch and PowerShell file
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置带有批处理文件和 PowerShell 文件的 Windows 机器
- en: Setting up Wazuh manager with VirusTotal and active response
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Wazuh 管理器与 VirusTotal 和主动响应
- en: Testing
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试
- en: Requirement
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 要求
- en: 'In this use case, we are going to write a custom active response script to
    isolate a Windows machine. In order to demonstrate this detection, we need the
    following:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在此用例中，我们将编写一个自定义的主动响应脚本来隔离一台Windows机器。为了演示此检测，我们需要以下内容：
- en: A Windows 10 or 11 machine with the Wazuh agent installed
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台安装了Wazuh代理的Windows 10或11机器
- en: PowerShell version 7
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell版本7
- en: VirusTotal integration
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VirusTotal集成
- en: A PowerShell script to block all outgoing traffic
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个PowerShell脚本来阻止所有外发流量
- en: A Windows batch file (active response script) to trigger a PowerShell script
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Windows批处理文件（主动响应脚本）用于触发PowerShell脚本
- en: VirusTotal integration
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VirusTotal集成
- en: 'In this step, we will integrate the VirusTotal platform with the Wazuh manager.
    VirusTotal is an online platform that aggregates several antivirus software and
    detects malicious content and false positives. We will cover three steps:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，我们将把VirusTotal平台与Wazuh管理器集成。VirusTotal是一个在线平台，聚合了多种杀毒软件，能够检测恶意内容和误报。我们将涵盖以下三步：
- en: Set up a VirusTotal account.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置一个VirusTotal账户。
- en: Integrate VirusTotal with Wazuh.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将VirusTotal与Wazuh集成。
- en: Create a file integrity rule.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个文件完整性规则。
- en: To complete all three steps, you can follow the steps described in the *VirusTotal
    integration* section of [*Chapter 2*](B19549_02.xhtml#_idTextAnchor042), *Malware
    Detection* *Using Wazuh*.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 为完成所有三步，你可以按照[*第二章*](B19549_02.xhtml#_idTextAnchor042)中*VirusTotal集成*部分的描述操作，*恶意软件检测*
    *使用Wazuh*。
- en: Setting up a Windows machine with a batch and PowerShell file
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用批处理文件和PowerShell文件设置Windows机器
- en: In this step, we will set up our Windows machine with an active response script.
    We will use a batch file to create an active response script. Next, to create
    a Windows Firewall rule to block all outgoing traffic, we need a PowerShell script.
    This PowerShell script will only be triggered when the batch file is executed.
    To complete the entire process, follow these steps.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，我们将设置Windows机器并使用主动响应脚本。我们将使用批处理文件创建一个主动响应脚本。接下来，为了创建一个Windows防火墙规则来阻止所有外发流量，我们需要一个PowerShell脚本。这个PowerShell脚本只有在批处理文件执行时才会触发。按照以下步骤完成整个过程。
- en: Installing PowerShell version 7
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装PowerShell版本7
- en: 'Log in to your Windows 10 or 11 machine and install PowerShell version 7 from
    the official website:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到你的Windows 10或11机器，并从官方网站安装PowerShell版本7：
- en: '[https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3](https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3](https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.3)'
- en: Once downloaded and installed, you can find the executable at `C:\\Program Files\\PowerShell\\7\\"pwsh.ex`.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装后，你可以在`C:\\Program Files\\PowerShell\\7\\"pwsh.ex`找到可执行文件。
- en: Writing a batch file as an active response script
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写批处理文件作为主动响应脚本
- en: Next, let’s create our active response script first. This will be done by using
    a Windows batch script, which will then trigger a PowerShell script to block all
    outgoing traffic from a Windows machine.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们先创建主动响应脚本。这个脚本将通过使用Windows批处理脚本来完成，然后触发PowerShell脚本以阻止所有来自Windows机器的外发流量。
- en: 'Write an active response script in Notepad and save it with the name `fw.cmd`
    at the following location:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在记事本中编写一个主动响应脚本，并将其保存在以下位置，文件名为`fw.cmd`：
- en: '[PRE5]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Writing a PowerShell script
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写PowerShell脚本
- en: 'Next, write a PowerShell script in Notepad and save it with name `wfblock.ps1`
    at the same location:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在记事本中编写一个PowerShell脚本，并将其保存在相同位置，文件名为`wfblock.ps1`：
- en: '[PRE6]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here, we have the following:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`$ruleName = "BlockOutgoingTraffic"`: It creates a `$ruleName` variable with
    the value `BlockOutgoingTraffic`. This will create a name for the Windows Firewall
    rule.'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$ruleName = "BlockOutgoingTraffic"`：它创建了一个`$ruleName`变量，值为`BlockOutgoingTraffic`。这将为Windows防火墙规则创建一个名称。'
- en: '`$existingRule`: This will check whether the rule already exists. If it doesn’t
    exist, then create a new rule to block all outgoing traffic.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$existingRule`：这将检查规则是否已经存在。如果不存在，则创建一个新的规则来阻止所有外发流量。'
- en: Once you set up the Windows machine configuration, you need to set up the Wazuh
    manager with an active response block and Wazuh rules.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置了Windows机器配置，你需要设置Wazuh管理器，启用主动响应阻止和Wazuh规则。
- en: Active response block in the Wazuh manager
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Wazuh管理器中的主动响应阻止
- en: 'In order to make sure, we need to modify or add the `<command>` and `<active-response>`
    blocks under the `/``var/ossec/etc/conf` file:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保正确，我们需要在`/``var/ossec/etc/conf`文件下修改或添加`<command>`和`<active-response>`块：
- en: '[PRE7]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here, make sure the `<executable>` tag has `fw.cmd`, which is the same as the
    Windows batch file we created earlier.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，确保 `<executable>` 标签有 `fw.cmd`，这与我们之前创建的 Windows 批处理文件相同。
- en: 'Second, we need to add an `<active-response>` block, as shown:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们需要添加一个 `<active-response>` 块，如下所示：
- en: '[PRE8]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here, we have the following:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<command>` is using the Windows firewall command.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<command>` 使用的是 Windows 防火墙命令。'
- en: '`<rules_id>` is selected as `87105` so that it will trigger when VirusTotal
    detects any malware sample. Wazuh rule `87105` defines the VirusTotal alert related
    to the sample file against the defined number of antivirus engines. To learn more,
    you can check the `0490-virustotal_rules.xml` Wazuh rule file under the **Management**
    tab of the Wazuh manager.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<rules_id>` 被选为 `87105`，以便当 VirusTotal 检测到任何恶意软件样本时触发。Wazuh 规则 `87105` 定义了与样本文件相关的
    VirusTotal 警报，该样本文件已与定义数量的杀毒引擎进行比较。想了解更多信息，你可以查看 Wazuh 管理器 **Management** 标签下的
    `0490-virustotal_rules.xml` 规则文件。'
- en: Testing
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: 'In order to test this use case, we will use a malware sample from [eicar.org](http://eicar.org).
    You can download it using this URL: [https://www.eicar.org/download-anti-malware-testfile/](https://www.eicar.org/download-anti-malware-testfile/).'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试这个用例，我们将使用来自 [eicar.org](http://eicar.org) 的恶意软件样本。你可以通过以下 URL 下载： [https://www.eicar.org/download-anti-malware-testfile/](https://www.eicar.org/download-anti-malware-testfile/)。
- en: To make sure VirusTotal detects our testing malware sample, you need to save
    it in the document folder of a Windows 10/11 machine. Once you save the file,
    a file integrity check will be executed, and it will trigger VirusTotal to scan
    the sample. You can also find the corresponding alerts on the Wazuh dashboard.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保 VirusTotal 检测到我们测试的恶意软件样本，你需要将其保存在 Windows 10/11 机器的文档文件夹中。一旦保存该文件，将执行文件完整性检查，并触发
    VirusTotal 扫描该样本。你也可以在 Wazuh 仪表盘上找到相应的警报。
- en: '![Figure 5.10 – Visualizing VirusTotal alerts on the Wazuh manager](img/B19549_5_10.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.10 – 可视化 Wazuh 管理器上的 VirusTotal 警报](img/B19549_5_10.jpg)'
- en: Figure 5.10 – Visualizing VirusTotal alerts on the Wazuh manager
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.10 – 可视化 Wazuh 管理器上的 VirusTotal 警报
- en: Let’s take a closer look at the `full.log` and rule description as follows.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更仔细地查看一下 `full.log` 和规则描述，如下所示。
- en: '![Figure 5.11 – Visualizing a Wazuh alert about the eicar.com(1) file](img/B19549_5_11.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.11 – 可视化关于 eicar.com(1) 文件的 Wazuh 警报](img/B19549_5_11.jpg)'
- en: Figure 5.11 – Visualizing a Wazuh alert about the eicar.com(1) file
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.11 – 可视化关于 eicar.com(1) 文件的 Wazuh 警报
- en: We can also check the second alert, `data.virustotal.source.file` data field
    and rule ID `87105`.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以检查第二个警报，`data.virustotal.source.file` 数据字段和规则 ID `87105`。
- en: '![Figure 5.12 – Expanding a VirusTotal security alert on the Wazuh manager](img/B19549_5_12.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.12 – 展开 Wazuh 管理器上的 VirusTotal 安全警报](img/B19549_5_12.jpg)'
- en: Figure 5.12 – Expanding a VirusTotal security alert on the Wazuh manager
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.12 – 展开 Wazuh 管理器上的 VirusTotal 安全警报
- en: Now, our `<active-response>` block will be executed as it is tied with rule
    ID `87105`, which belongs to the VirusTotal alert, and our command, `fw.cmd`,
    will be executed on a Windows 10 machine. This `fw.cmd` active response script
    will trigger a PowerShell script and block all the outgoing traffic, as you can
    see in the following figure.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的 `<active-response>` 块将被执行，因为它与规则 ID `87105` 关联，而该规则属于 VirusTotal 警报，我们的命令
    `fw.cmd` 将在 Windows 10 机器上执行。这个 `fw.cmd` 主动响应脚本将触发一个 PowerShell 脚本，并阻止所有外出流量，正如你在下面的图中看到的那样。
- en: '![Figure 5.13 – Status of newly created BlockOutgoingTraffic rule on a Windows
    machine](img/B19549_5_13.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.13 – Windows 机器上新创建的 BlockOutgoingTraffic 规则的状态](img/B19549_5_13.jpg)'
- en: Figure 5.13 – Status of newly created BlockOutgoingTraffic rule on a Windows
    machine
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.13 – Windows 机器上新创建的 BlockOutgoingTraffic 规则的状态
- en: So, we have successfully tested how Wazuh active response automatically blocks
    all outgoing traffic when our Windows machine is compromised by malware. This
    was possible by using our custom PowerShell script to create a security rule in
    the Windows Firewall service. In the next section, we will use active response
    to block RDP brute-force attack attempts.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们已经成功测试了当我们的 Windows 机器被恶意软件攻击时，Wazuh 的主动响应如何自动阻止所有外出流量。这是通过使用我们自定义的 PowerShell
    脚本在 Windows 防火墙服务中创建一个安全规则实现的。在接下来的章节中，我们将使用主动响应来阻止 RDP 暴力破解攻击尝试。
- en: Blocking RDP brute-force attacks
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阻止 RDP 暴力破解攻击
- en: 'According to Sophos, in the first half of 2023, adversaries leveraged **Remote
    Desktop Protocol** (**RDP**) in 95% of attacks, increased by 88% from 2023\. RDP
    is a Microsoft-developed proprietary protocol that allows users to connect to
    and remotely operate another computer or device via a network connection. Attackers
    employ automated software to try many login and password combinations in order
    to obtain unauthorized access to systems via RDP. Mitigating such risks involves
    proactive measures as well as quick action to block malicious IP addresses that
    try these assaults. In this section, we will utilize Wazuh active response to
    block the attacker’s IP address against an RDP brute-force attack. We will cover
    the following points:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 根据Sophos的说法，在2023年上半年，攻击者在95%的攻击中利用了**远程桌面协议**（**RDP**），较2023年增长了88%。RDP是微软开发的专有协议，允许用户通过网络连接远程连接并操作另一台计算机或设备。攻击者使用自动化软件尝试许多登录和密码组合，以便通过RDP获取未授权的访问权限。缓解这些风险需要主动采取措施，以及快速行动阻止试图进行这些攻击的恶意IP地址。在本节中，我们将利用Wazuh的主动响应来阻止针对RDP暴力破解攻击的攻击者IP地址。我们将涵盖以下几点：
- en: Requirement
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求
- en: Setting up a Windows agent with an active response script
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置带有主动响应脚本的Windows代理
- en: Setting up the Wazuh server with a rule and active response script
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置带有规则和主动响应脚本的Wazuh服务器
- en: Testing
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试
- en: Visualization
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化
- en: Requirement
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 要求
- en: 'In this use case, we will use the default Wazuh active response script of a
    Windows machine called `netsh.exe`, located at `C:\Program Files (x86)\ossec-agent\active-response\bin`.
    We don’t need to create any custom script for this. In order to make this entire
    use case work, we will use the following:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个用例中，我们将使用Windows机器上默认的Wazuh主动响应脚本`netsh.exe`，该脚本位于`C:\Program Files (x86)\ossec-agent\active-response\bin`。我们无需为此创建任何自定义脚本。为了使整个用例生效，我们将使用以下内容：
- en: Windows 10 or Windows Server
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10 或 Windows Server
- en: Kali Linux for testing
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux进行测试
- en: Setting up a Windows agent with an active response script
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置带有主动响应脚本的Windows代理
- en: 'In this step, we need to add the `netsh` command and the `netsh` active response
    block to the Wazuh agent’s `C:\\Program Files (``x86)\\ossec-agent\\ossec.conf`
    file:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在此步骤中，我们需要将`netsh`命令和`netsh`主动响应阻止添加到Wazuh代理的`C:\\Program Files (``x86)\\ossec-agent\\ossec.conf`文件中：
- en: '[PRE9]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here, we have the following:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`netsh.exe`: This is the network shell script located at `C:\Program` `Files
    (x86)\ossec-agent\active-response\bin`.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`netsh.exe`：这是位于`C:\Program Files (x86)\ossec-agent\active-response\bin`的网络Shell脚本。'
- en: '`<rules_id>`: This indicates that the active response `netsh` script will be
    executed when rule `100100` is triggered. We will be creating rule `100100` to
    detect RDP brute-force attacks on the Wazuh server in the next step.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<rules_id>`：这表示当规则`100100`被触发时，主动响应`netsh`脚本将被执行。在下一步中，我们将创建规则`100100`，以检测Wazuh服务器上的RDP暴力破解攻击。'
- en: Save the `ossec.conf` file and restart the Wazuh agent.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 保存`ossec.conf`文件并重启Wazuh代理。
- en: '![Figure 5.14 – Restart the Wazuh agent on the Windows Server](img/B19549_5_14.jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.14 – 在Windows Server上重启Wazuh代理](img/B19549_5_14.jpg)'
- en: Figure 5.14 – Restart the Wazuh agent on the Windows Server
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14 – 在Windows Server上重启Wazuh代理
- en: Setting up Wazuh Server with a brute-force attack rule and active response script
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置带有暴力破解攻击规则和主动响应脚本的Wazuh服务器
- en: 'We want our Wazuh to execute the active response `netsh` script against a brute-force
    attack and hence, we will write a Wazuh rule to detect RDP login attempts with
    `level="10"`, `frequency="3"`, and `timeframe="120"`. This rule will be triggered
    when three failed login attempts are detected within 120 seconds of the timeframe.
    The following-mentioned rule block needs to be added to the `local_rules.xml`
    file located in the `/``var/ossec/etc` directory:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望Wazuh在暴力破解攻击时执行主动响应`netsh`脚本，因此，我们将编写一个Wazuh规则来检测RDP登录尝试，设置`level="10"`，`frequency="3"`，和`timeframe="120"`。当在120秒的时间范围内检测到三次失败的登录尝试时，此规则将被触发。以下规则块需要添加到位于`/var/ossec/etc`目录下的`local_rules.xml`文件中：
- en: '[PRE10]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here, we have the following:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<if_matched_sid>`: This option is similar to `<if_sid>` but it will only match
    if the rule ID has been triggered in a certain period of time. As we want Wazuh
    to detect the same alert three times within 120 seconds of the timeframe, this
    is specific to our needs.'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_matched_sid>`：此选项类似于`<if_sid>`，但只有在某一时间段内触发了规则ID时才会匹配。由于我们希望Wazuh在120秒的时间范围内检测到三次相同的警报，这对于我们的需求是特定的。'
- en: 'Rule ID `60122` under `<if_matched_sid>`: This rule is used to track multiple
    Windows event IDs related to login failure. To learn more about this rule and
    its parent ruleset, visit this page: [https://github.com/wazuh/wazuh-ruleset/blob/master/rules/0580-win-security_rules.xml](https://github.com/wazuh/wazuh-ruleset/blob/master/rules/0580-win-security_rules.xml).'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规则 ID `60122` 在 `<if_matched_sid>` 下：此规则用于跟踪与登录失败相关的多个 Windows 事件 ID。要了解更多关于此规则及其父规则集的信息，请访问此页面：[https://github.com/wazuh/wazuh-ruleset/blob/master/rules/0580-win-security_rules.xml](https://github.com/wazuh/wazuh-ruleset/blob/master/rules/0580-win-security_rules.xml)。
- en: 'Next, add the same `netsh` command and active response block to the Wazuh server:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，将相同的 `netsh` 命令和主动响应块添加到 Wazuh 服务器：
- en: '[PRE11]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Save the `ossec.conf` file and restart the Wazuh manager:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 保存 `ossec.conf` 文件并重启 Wazuh 管理器：
- en: '[PRE12]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Testing
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: 'To emulate this attack, we will launch an RDP brute-force attack using the
    hydra tool. The Hydra tool comes pre-built with Kali Linux; however, if you want
    to install it manually on some other platform, you can download it using this
    link: [https://github.com/vanhauser-thc/thc-hydra](https://github.com/vanhauser-thc/thc-hydra).
    You can run the following command to execute an RDP brute-force attack on your
    Windows Server:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 为了模拟此攻击，我们将使用 hydra 工具发起 RDP 暴力破解攻击。Hydra 工具在 Kali Linux 中预装；但是，如果您希望在其他平台上手动安装它，您可以通过以下链接下载：[https://github.com/vanhauser-thc/thc-hydra](https://github.com/vanhauser-thc/thc-hydra)。您可以运行以下命令，在
    Windows 服务器上执行 RDP 暴力破解攻击：
- en: '[PRE13]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here, we have the following:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`-l roger`: This parameter specifies the username `roger` that Hydra will use
    for the brute-force attack. Change `roger` to the username you want to target.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-l roger`：此参数指定 Hydra 在暴力破解攻击中使用的用户名 `roger`。将 `roger` 更改为您想要攻击的用户名。'
- en: '`-P pass.txt`: Indicates the `pass.txt` password file, which contains a list
    of passwords. Hydra will repeatedly try each password for the chosen username
    by looping over this file. Put your password list’s actual filename and directory
    in place of `pass.txt`.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-P pass.txt`：表示 `pass.txt` 密码文件，该文件包含密码列表。Hydra 将通过循环此文件反复尝试每个密码以尝试登录目标用户名。请将您的密码列表实际文件名和目录替换
    `pass.txt`。'
- en: '`192.168.29.77`: Represents the IP address of the target system where the RDP
    service is running. Replace this with the actual IP address you want to target.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`192.168.29.77`：表示目标系统的 IP 地址，RDP 服务正在运行。将其替换为您要攻击的实际 IP 地址。'
- en: '`rdp`: Indicates which service protocol to target, which is RDP in this instance.
    Hydra will make an effort to access the RDP service by logging in using the password
    list and the supplied username.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rdp`：表示要攻击的服务协议，在本例中是 RDP。Hydra 将尝试使用密码列表和提供的用户名登录以访问 RDP 服务。'
- en: Visualizing the alerts
  id: totrans-287
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化警报
- en: You can view the alerts on the Wazuh dashboard. Go to the `100100`. As you can
    see in the following screenshot, rule `100100` has been triggered from our Windows
    Server with IP address `192.168.29.77`.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 Wazuh 仪表板上查看警报。转到 `100100`。如以下截图所示，规则 `100100` 已从我们的 IP 地址为 `192.168.29.77`
    的 Windows 服务器触发。
- en: '![Figure 5.15 – Wazuh alert showing an RDP brute-force attack](img/B19549_5_15.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.15 – Wazuh 警报显示 RDP 暴力破解攻击](img/B19549_5_15.jpg)'
- en: Figure 5.15 – Wazuh alert showing an RDP brute-force attack
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.15 – Wazuh 警报显示 RDP 暴力破解攻击
- en: Immediately, the Wazuh active response `Netsh` script is activated on the Windows
    Server.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 立即，Wazuh 主动响应 `Netsh` 脚本在 Windows 服务器上激活。
- en: '![Figure 5.16 – Wazuh alert showing netsh active response](img/B19549_5_16.jpg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.16 – Wazuh 警报显示 netsh 主动响应](img/B19549_5_16.jpg)'
- en: Figure 5.16 – Wazuh alert showing netsh active response
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.16 – Wazuh 警报显示 netsh 主动响应
- en: To test whether the attacker machine is blocked or not, you can try launching
    an RDP session using a Remote Desktop client; it should not work and should give
    an error, as shown.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试攻击者机器是否被阻止，您可以尝试使用远程桌面客户端发起 RDP 会话；它应该无法连接并显示错误，如图所示。
- en: '![Figure 5.17 – Remote Desktop connection failed](img/B19549_5_17.jpg)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.17 – 远程桌面连接失败](img/B19549_5_17.jpg)'
- en: Figure 5.17 – Remote Desktop connection failed
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.17 – 远程桌面连接失败
- en: With this, we have learned how to block RDP attack attempts using Wazuh’s active
    response feature.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个，我们学习了如何利用 Wazuh 的主动响应功能来阻止 RDP 攻击尝试。
- en: Summary
  id: totrans-298
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about IR phases, Wazuh’s active response capability,
    and some important use cases. We learned how Wazuh’s active response module actively
    blocks unauthorized SSH and RDP access attempts. Additionally, we also learned
    about Wazuh’s capability to isolate infected Windows machines promptly upon detection
    of malware.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了IR阶段、Wazuh的主动响应能力以及一些重要的使用案例。我们学习了 Wazuh 的主动响应模块如何主动阻止未经授权的 SSH 和
    RDP 访问尝试。此外，我们还了解了 Wazuh 在检测到恶意软件后，如何迅速隔离感染的 Windows 计算机。
- en: In the next chapter, we will learn how to conduct threat hunting using Wazuh
    modules. We will learn the importance of log data analysis in Wazuh for better
    threat investigation and hunting. We will also utilize the MITRE ATT&CK framework
    to streamline our threat-hunting process.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将学习如何使用 Wazuh 模块进行威胁狩猎。我们将了解日志数据分析在 Wazuh 中的重要性，以便更好地进行威胁调查和狩猎。我们还将利用
    MITRE ATT&CK 框架来简化我们的威胁狩猎过程。
