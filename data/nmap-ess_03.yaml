- en: Chapter 3. Nmap Basics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。Nmap基础知识
- en: Now that we understand how networks work, it's time to jump into actually using
    Nmap to scan computers and networks. This chapter aims to cover several topics
    that will get you up and running in order to actually scan some of these things.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了网络是如何工作的，是时候真正开始使用Nmap来扫描计算机和网络了。本章旨在涵盖几个主题，让您能够真正开始扫描其中的一些内容。
- en: 'In this chapter, we will cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: How to choose a target
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何选择目标
- en: How to run a default scan
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何运行默认扫描
- en: How to check service versions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何检查服务版本
- en: How to log scans (and what the different log types mean)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何记录扫描（以及不同的日志类型意味着什么）
- en: How to specify special scan ranges
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何指定特殊的扫描范围
- en: How to learn the reasoning for Nmap results
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何了解Nmap结果的推理
- en: How to choose a target
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何选择目标
- en: Although it is generally accepted that scanning computers over the Internet
    is not a crime, it's also not appreciated by system administrators. There are
    thousands of scans every second, across all areas of the Internet—but that doesn't
    mean that you won't get an abuse complaint (or worse) if you scan the wrong machine.
    Make sure that any target you choose is aware of (and consents to) whatever scan
    you may decide to conduct. There are a few ways that you can make your own targets—which
    some readers might find easier than using free ones online.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管普遍认为在互联网上扫描计算机不是犯罪，但系统管理员也不欣赏。每秒都有成千上万次的扫描，涵盖互联网的各个领域，但这并不意味着如果您扫描了错误的机器就不会收到滥用投诉（或更糟）。确保您选择的任何目标都知道（并同意）您可能决定进行的任何扫描。有几种方法可以创建自己的目标，一些读者可能会发现这比在网上使用免费目标更容易。
- en: The most simple target, and easiest to set up, is to just use another computer
    on your local area network. You can use your router (usually located at 192.168.1.1
    for home routers), another machine on your network (which we'll talk about finding),
    or even buy a cheap laptop to use as a test lab.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的目标，也是最容易设置的，就是在本地局域网上使用另一台计算机。您可以使用路由器（家用路由器通常位于192.168.1.1），网络上的另一台机器（我们将讨论如何找到），甚至购买一台便宜的笔记本电脑作为测试实验室。
- en: If you do not have access to another machine to scan or do not feel comfortable
    (or authorized) to scan another machine, you can create your own by virtualizing
    a machine. Although you'll need to be somewhat familiar with installing Linux
    to make this work, there are free software solutions (such as VirtualBox) and
    commercial software solutions (such as VMWare or Parallels) to virtualize machines
    for you. If you decide to take this route to scan targets in this book, I recommend
    you to install Ubuntu or Debian—you can scan from these machines too! In addition
    to creating your own virtual server, it's possible to buy a **Virtual Private
    Server** (**VPS**) from cloud hosting providers without spending a lot of money.
    Common providers include Linode, DigitalOcean (which, at the time of writing,
    has VPSes for only $5 per month), **Amazon Web Services** (**AWS**), Rackspace,
    and so on. The advantage of running one of these cloud-based servers is that you
    can also get experience in running a fully fledged Linux server. If you are so
    inclined, you can even host web, email, FTP, or any other service on this server
    as well!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有其他机器可以进行扫描，或者不愿意（或未经授权）扫描其他机器，您可以通过虚拟化一台机器来创建自己的机器。虽然您需要对安装Linux有一定了解，但有免费软件解决方案（如VirtualBox）和商业软件解决方案（如VMWare或Parallels）可以为您虚拟化机器。如果您决定采用这种方式来扫描本书中的目标，我建议您安装Ubuntu或Debian
    - 您也可以从这些机器上进行扫描！除了创建自己的虚拟服务器，还可以在不花太多钱的情况下从云托管提供商那里购买**虚拟专用服务器**（**VPS**）。常见的提供商包括Linode、DigitalOcean（在撰写本文时，每月只需5美元就可以获得VPS）、**亚马逊网络服务**（**AWS**）、Rackspace等。在这些基于云的服务器上运行的优势是，您还可以获得运行完整的Linux服务器的经验。如果您愿意，甚至可以在该服务器上托管网站、电子邮件、FTP或任何其他服务！
- en: Lastly, if you do not want to host your own virtual machine, don't have any
    other machines on your network, and do not want to pay for a virtual private server;
    you can either scan your own machine (which isn't quite as exciting), or use a
    free service provided by the Nmap team at [http://scanme.nmap.org/](http://scanme.nmap.org/).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果您不想托管自己的虚拟机，家庭网络中没有其他机器，也不想为虚拟专用服务器付费；您可以扫描自己的机器（这并不是很令人兴奋），或者使用Nmap团队在[http://scanme.nmap.org/](http://scanme.nmap.org/)提供的免费服务。
- en: This site gives you full permission to scan, so you do not have to worry about
    being rude or annoying to any network administrators. On the other hand, it's
    impossible to actually change any of the services listening on this host, so you
    can never really change the results you're getting. Using your own computer ("localhost"
    or 127.0.0.1) can sometimes be a better choice, as you'll be able to run services
    and see different ports detected.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 该网站允许您进行全面的扫描，因此您不必担心对任何网络管理员不礼貌或讨厌。另一方面，实际上无法更改此主机上正在侦听的任何服务，因此您实际上永远无法更改您获得的结果。有时使用自己的计算机（“localhost”或127.0.0.1）可能是更好的选择，因为您可以运行服务并查看检测到的不同端口。
- en: 'For the purposes of scanning examples in this book, we will use [http://scanme.nmap.org/](http://scanme.nmap.org/)
    and various additional virtual machines that were set up for the explicit purpose
    of being scanned. Remember: do not scan without permission!'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在本书中的扫描示例中使用，我们将使用[http://scanme.nmap.org/](http://scanme.nmap.org/)和其他为了被扫描而设置的虚拟机。记住：未经允许不要进行扫描！
- en: Running a default scan
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行默认扫描
- en: Once Nmap is installed and you've chosen a target, it's relatively straightforward
    to run a scan with the default settings. The command is as straightforward as
    `nmap scanme.nmap.org` (assuming [http://scanme.nmap.org/](http://scanme.nmap.org/)
    is the target of this particular scan).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了Nmap并选择了目标，使用默认设置运行扫描就相对简单了。命令就像`nmap scanme.nmap.org`一样简单（假设[http://scanme.nmap.org/](http://scanme.nmap.org/)是这次特定扫描的目标）。
- en: '![Running a default scan](img/4065OS_03_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![运行默认扫描](img/4065OS_03_01.jpg)'
- en: As you can see in the preceding screenshot, running a default scan is very easy.
    Normally, Nmap uses a SYN scan as the default scan type; but because we did not
    run the scan with root privileges via `sudo`, Nmap reverts to a "connect" scan
    instead. We'll get into the differences of specific scan types in [Chapter 4](ch04.html
    "Chapter 4. Advanced Nmap Scans"), *Advanced Nmap Scans*.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的屏幕截图中所看到的，运行默认扫描非常容易。通常，Nmap使用SYN扫描作为默认扫描类型；但因为我们没有通过`sudo`以root权限运行扫描，Nmap会转而使用“连接”扫描。我们将在[第4章](ch04.html
    "第4章.高级Nmap扫描")*高级Nmap扫描*中详细讨论特定扫描类型的区别。
- en: 'For now, you can see that we''ve detected three open services. The leftmost
    column shows the port number and protocol (in this case, `22/tcp`, `80/tcp` and
    `9929/tcp`) that the port is open and what the service is. When we run Nmap without
    specifying anything in addition (such as the scan we just ran), the `SERVICE`
    column is filled out based on the port specification in `/etc/services` (on Linux),
    rather than actually analyzing the protocol. If we want to check the actual service
    version (by checking banners), we need to specify a different type of scan: the
    service version scan.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，您可以看到我们已经检测到三个开放的服务。最左边的列显示了端口号和协议（在本例中为`22/tcp`、`80/tcp`和`9929/tcp`），该端口是开放的以及服务是什么。当我们运行Nmap而没有额外指定任何内容（比如刚刚运行的扫描），`SERVICE`列是根据`/etc/services`中的端口规范填写的（在Linux上），而不是实际分析协议。如果我们想要检查实际的服务版本（通过检查横幅），我们需要指定不同类型的扫描：服务版本扫描。
- en: Service version scans
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务版本扫描
- en: Running a service version scan is very simple; all we need to do is add an additional
    flag, `-sV`. This means that we're conducting a service version scan, which can
    demonstrate which version of each software is running. This is particularly useful
    if someone is running a service on a non-default port (that does not match up
    with `/etc/services`)—in such instances, it's even more important to be able to
    figure out exactly what's running.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 运行服务版本扫描非常简单；我们只需要添加一个额外的标志`-sV`。这意味着我们正在进行服务版本扫描，可以展示每个软件的版本。如果有人在非默认端口上运行服务（与`/etc/services`不匹配），这将特别有用——在这种情况下，能够准确地弄清楚正在运行的是什么更加重要。
- en: '![Service version scans](img/4065OS_03_02.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![服务版本扫描](img/4065OS_03_02.jpg)'
- en: 'When we run this follow-up scan, you will see that the results are slightly
    different:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行这个后续扫描时，您会看到结果略有不同：
- en: You can see in the preceding screenshot that significantly more information
    is now being put into the scan results; in this case, we can see the actual patch
    versions of the `OpenSSH`, `HTTP`, and `Nping echo` services.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在前面的屏幕截图中看到，现在扫描结果中放入了更多的信息；在本例中，我们可以看到`OpenSSH`、`HTTP`和`Nping echo`服务的实际补丁版本。
- en: In the context of a security assessment, you can see how useful this would be!
    If you are looking for vulnerabilities in certain versions of software, it's critical
    to be able to tell exactly what version is running. Vulnerabilities are often
    only found in specific versions of software (such as between 1.0.1 and 1.0.4),
    so the granularity of what we see here is very important. It's important to note,
    however, that if the system administrator restricts the service version, then
    it is not possible to tell exactly what's running. From a defensive perspective,
    that is very important!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在安全评估的背景下，您可以看到这是多么有用！如果您正在寻找特定软件版本的漏洞，能够准确地告诉正在运行的版本是至关重要的。漏洞通常只存在于特定版本的软件中（比如1.0.1和1.0.4之间），因此我们在这里看到的细节非常重要。然而，需要注意的是，如果系统管理员限制了服务版本，则无法准确地知道正在运行的是什么。从防御的角度来看，这非常重要！
- en: 'You might also have noticed that at the top of the scan, before the results,
    the text `Not shown: 997 filtered ports` is displayed. Nmap doesn''t show all
    the closed ports in scans, since that would clutter the scan results itself. It''s
    possible to see these (and to see whether they are listed as closed or filtered)
    by increasing the verbosity of the scan—which we''ll get to in [Chapter 4](ch04.html
    "Chapter 4. Advanced Nmap Scans"), *Advanced Nmap Scans*. However, more importantly,
    you should remember that there are 65,535 ports that can be opened or closed on
    every single machine. If we add 997 to the three ports that we already saw were
    open, we only get 1,000—only a tiny fraction of the total number of ports!'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还注意到在扫描结果之前，顶部显示了文本`未显示：997个被过滤的端口`。Nmap不会显示所有扫描中关闭的端口，因为那样会使扫描结果变得混乱。通过增加扫描的详细程度，可以看到这些端口（以及它们是关闭还是被过滤），我们将在[第4章](ch04.html
    "第4章.高级Nmap扫描")*高级Nmap扫描*中讨论。然而，更重要的是，您应该记住每台机器上可以打开或关闭的端口有65,535个。如果我们将997个添加到我们已经看到的三个开放的端口中，我们只得到了1,000个——只是总端口数量的一小部分！
- en: By default, Nmap will only scan the top 1,000 ports that are usually open. This
    doesn't correspond to the first 1,000 ports, but rather the ones that are most
    commonly open. You can get the same result by using the `--top-ports 1000` flag
    or specifying a different number (such as `--top-ports 200`, for example).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Nmap只会扫描通常开放的前1,000个端口。这不对应于前1,000个端口，而是通常开放的端口。您可以通过使用`--top-ports 1000`标志或指定不同的数字（例如`--top-ports
    200`）来获得相同的结果。
- en: Logging scans
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 记录扫描
- en: Although seeing the results of scans on a case by case basis is very helpful
    in the short term; for longer assessment times (or for larger scans that would
    scroll off the screen), it's a good idea to log scans to file.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管逐个案例地查看扫描结果在短期内非常有帮助；对于更长的评估时间（或者对于会滚动屏幕的更大的扫描），将扫描记录到文件中是一个好主意。
- en: Nmap supports three different types of logging. Each type has a different flag
    to log that specific log type, and different purposes. Fortunately for us, the
    Nmap development team was smart enough to think ahead; using the `-oA` (output
    all) flag, it's possible to output all three log files. The second parameter to
    this flag is simply the base name of the logs. They will automatically have their
    own unique file extension.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap支持三种不同类型的日志记录。每种类型都有一个不同的标志来记录特定的日志类型，并且有不同的目的。幸运的是，对于我们来说，Nmap开发团队足够聪明，他们使用“-oA”（输出全部）标志，可以输出所有三个日志文件。这个标志的第二个参数只是日志的基本名称。它们将自动具有自己独特的文件扩展名。
- en: '![Logging scans](img/4065OS_03_03.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![记录扫描](img/4065OS_03_03.jpg)'
- en: As you can see in the preceding screenshot, Nmap automatically saves all three
    log file extensions (`.xml`, `.nmap`, and `.gnmap`) with the base file name specified
    in the `-oA` flag.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在前面的截图中看到的，Nmap自动保存了所有三个日志文件扩展名（`.xml`、`.nmap`和`.gnmap`），并使用了在“-oA”标志中指定的基本文件名。
- en: As you can see, after running a scan with the `-oA logbase` flag, there are
    now three files in the current directory. We now have a `.xml` file, which contains
    the results of the scan (as well as timing details) in XML format, and a `.nmap`
    file, which is a human readable output of the scan. In other words, basically
    the same output that you see on your screen when a scan is run—and also, perhaps
    most interestingly, a `.gnmap` file. The `.gnmap` file stands for **grep-able
    nmap** output, which is designed to easily be used by the Linux command line tool
    `grep`. In other words, it's very easy to search.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，在使用“-oA logbase”标志运行扫描后，当前目录中现在有三个文件。现在我们有一个`.xml`文件，其中以XML格式包含了扫描的结果（以及时间详细信息），还有一个`.nmap`文件，它是扫描的人类可读输出。换句话说，基本上就是在运行扫描时在屏幕上看到的相同输出——也许最有趣的是`.gnmap`文件。`.gnmap`文件代表**可搜索的nmap**输出，它被设计为Linux命令行工具`grep`轻松使用。换句话说，它非常容易搜索。
- en: '![Logging scans](img/4065OS_03_04.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![记录扫描](img/4065OS_03_04.jpg)'
- en: You can easily see in the preceding example that when grepping for "open," we
    were given the line of the `.gnmap` file that had open ports. Since we were only
    scanning one host, the host returned must be the one we scanned—`scanme.nmap.org`
    —but in larger scans, it can be extremely useful to figure out which hosts have
    any open ports (and which we can safely ignore).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以很容易地看到在前面的例子中，当搜索“open”时，我们得到了包含打开端口的`.gnmap`文件的行。由于我们只扫描了一个主机，返回的主机必须是我们扫描的那个——`scanme.nmap.org`——但在更大的扫描中，找出哪些主机有任何打开的端口（以及我们可以安全忽略哪些）是非常有用的。
- en: Secondly, we did a `grep` for `443/open`. This `grep` didn't return anything
    (since port `443` was not open in this scan), but you can see how using a greppable
    output like this can quickly and efficiently determine which hosts had certain
    ports online. When we talk about active exploitation through Nmap, we'll be able
    to better understand just how valuable information like this can be.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们对“443/open”进行了“grep”。这个“grep”没有返回任何结果（因为在这次扫描中端口“443”没有打开），但你可以看到，使用这样的可搜索输出可以快速有效地确定哪些主机有特定端口在线。当我们谈论通过Nmap进行主动利用时，我们将能够更好地理解这样的有价值信息。
- en: Specified scan ranges
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指定的扫描范围
- en: We learned earlier that by default, Nmap only scans the top 1000 ports. However,
    services can be put online on any of the 65,535 ports that exist—not just the
    most common ones. Many system administrators and network engineers run services
    on very high ports such as 65,001, so that they aren't detected by normal scans.
    Security through obscurity, though, never really works!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前了解到，默认情况下，Nmap只扫描前1000个端口。然而，服务可以在线上的65,535个端口中的任何一个，而不仅仅是最常见的端口。许多系统管理员和网络工程师在非常高的端口上运行服务，比如65,001，这样它们就不会被普通扫描检测到。然而，通过模糊性来保护安全从来都不是真正有效的！
- en: It's possible to specify a specific port range by using the `-p` flag. So, if
    you want to only scan port `80` on `scanme.nmap.org`, you can type `nmap -p 80
    scanme.nmap.org`. The port specification flag works for ranges too—so, in another
    example, `nmap -p1-1024 scanme.nmap.org` will scan ports `1` to `1024` (all privileged
    ports) on the target host.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用“-p”标志指定特定的端口范围。因此，如果你只想扫描“scanme.nmap.org”的端口“80”，你可以输入“nmap -p 80 scanme.nmap.org”。端口规范标志也适用于范围——因此，在另一个例子中，“nmap
    -p1-1024 scanme.nmap.org”将扫描目标主机上的端口“1”到“1024”（所有特权端口）。
- en: 'There''s also a useful trick to scan all 65,535 ports on a machine: instead
    of typing `-p1-65535`, you can simply use the shortcut `-p-`. The Nmap developers
    were kind and insightful enough to realize that typing the number "65,535" a lot
    gets quite tiring!'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个有用的技巧可以扫描机器上的所有65,535个端口：不必输入“-p1-65535”，你可以简单地使用快捷方式“-p-”。Nmap的开发人员很友善和有远见，他们意识到频繁输入数字“65,535”会很累人！
- en: Although we're currently only scanning one host, it's worth noting that there
    are several ways to specify multiple IP addresses or hostnames as well. CIDR notation
    (192.168.1.0/24), lists of IP addresses (1.2.3.4,1.2.3.5,1.2.3.6), and targets
    files (`-iL targets.txt`) are all valid ways to specify hosts to scan. They will
    all be scanned with the same scan type, and the timing involved is optimized by
    Nmap itself. We'll talk more about optimizing this process in [Chapter 5](ch05.html
    "Chapter 5. Performance Optimization"), *Performance Optimization*.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们目前只扫描了一个主机，但值得注意的是，还有几种指定多个IP地址或主机名的方法。CIDR表示法（192.168.1.0/24）、IP地址列表（1.2.3.4,1.2.3.5,1.2.3.6）和目标文件（`-iL
    targets.txt`）都是指定要扫描的主机的有效方法。它们将以相同的扫描类型进行扫描，并且Nmap本身会优化所涉及的时间。我们将在[第5章](ch05.html
    "第5章。性能优化")*性能优化*中更多地讨论优化这个过程。
- en: Understanding the reason flag
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解原因标志
- en: Since we've already covered basic networking—including the TCP three-way handshake—in
    [Chapter 2](ch02.html "Chapter 2. Network Fundamentals"), *Network Fundamentals*,
    you already know what it means for a port to be `open`, and how that can usually
    be determined. However, in certain edge cases (and especially for the `filtered`
    ports), understanding Nmap's logic behind open, closed, and filtered ports can
    be extremely useful to understand.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经涵盖了基本的网络知识，包括TCP三次握手，在[第2章](ch02.html "第2章. 网络基础")*网络基础*中，您已经知道端口“打开”的含义，以及通常如何确定。然而，在某些边缘情况下（特别是对于“filtered”端口），了解Nmap在打开、关闭和过滤端口背后的逻辑可以极其有用。
- en: You can determine how Nmap reaches its conclusions by using the `--reason` flag.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用“--reason”标志来确定Nmap是如何得出结论的。
- en: '![Understanding the reason flag](img/4065OS_03_05.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![理解原因标志](img/4065OS_03_05.jpg)'
- en: As demonstrated in the preceding screenshot, a fourth column is now added to
    the scan after the `--reason` flag is invoked. In this case, we can clearly see
    that the three services that were identified as online were done so because of
    syn-ack, indicating a **SYN/ACK** response to a **SYN** request—once we see that
    a service on a given port is attempting to complete the TCP three-way handshake,
    we know that there is something listening.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的屏幕截图所示，在调用“--reason”标志后，扫描后现在添加了第四列。在这种情况下，我们可以清楚地看到，被识别为在线的三个服务是因为syn-ack，表明对syn请求的syn/ack响应——一旦我们看到给定端口上的服务正在尝试完成TCP三次握手，我们就知道有东西在监听。
- en: Summary
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: After reading this chapter, you should be able to conduct many different and
    interesting types of scans. You should also know how to change the ports you're
    scanning and how to scan multiple hosts at once. You've learned that grabbing
    service banners can help you see which versions of software are running, and how
    to output various different types of log files. Lastly, you should now be able
    to understand the network-based reasons for why Nmap is flagging results in certain
    ways. There's a long way to go to become a true Nmap master, but you've conquered
    the basics of getting a scan under way. In the next chapter, we will learn how
    to conduct advanced Nmap scans in order to get results in more complex situations.
    This next chapter will allow you to scan in even strange or hostile environments,
    which security professionals often encounter during the course of an engagement.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完本章后，您应该能够进行许多不同和有趣的扫描类型。您还应该知道如何更改正在扫描的端口，以及如何一次扫描多个主机。您已经了解到获取服务横幅可以帮助您查看正在运行的软件版本，以及如何输出各种不同类型的日志文件。最后，您现在应该能够理解Nmap标记结果的网络原因。要成为真正的Nmap大师还有很长的路要走，但您已经掌握了进行扫描的基础知识。在下一章中，我们将学习如何进行高级Nmap扫描，以便在更复杂的情况下获得结果。这一章将使您能够在甚至奇怪或敌对的环境中进行扫描，这是安全专业人员在参与过程中经常遇到的情况。
