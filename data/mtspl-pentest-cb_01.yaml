- en: Chapter 1. Metasploit Quick Tips for Security Professionals
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。安全专业人员的Metasploit快速提示
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Configuring Metasploit on Windows
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上配置Metasploit
- en: Configuring Metasploit on Ubuntu
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Ubuntu上配置Metasploit
- en: Metasploit with BackTrack 5 - the ultimate combination
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用BackTrack 5的Metasploit-终极组合
- en: Setting up the penetration testing lab on a single machine
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在单台机器上设置渗透测试实验室
- en: Setting up Metasploit on a virtual machine with SSH connectivity
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有SSH连接性的虚拟机上设置Metasploit
- en: Beginning with the interfaces - the "Hello World" of Metasploit
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从接口开始- Metasploit的“Hello World”
- en: Setting up the database in Metasploit
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Metasploit中设置数据库
- en: Using the database to store penetration testing results
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用数据库存储渗透测试结果
- en: Analyzing the stored results of the database
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析数据库中存储的结果
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Metasploit is currently the most buzzing word in the field of information security
    and penetration testing. It has totally revolutionized the way we can perform
    security tests on our systems. The reason which makes Metasploit so popular is
    the wide range of tasks that it can perform to ease the work of penetration testing
    to make systems more secure. Metasploit is available for all popular operating
    systems. The working process of the framework is almost the same for all of them.
    Here in this book, we will primarily work on BackTrack 5 OS as it comes with the
    pre-installed Metasploit framework and other third-party tools which run over
    the framework.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit目前是信息安全和渗透测试领域最热门的词汇。它彻底改变了我们进行系统安全测试的方式。使Metasploit如此受欢迎的原因是它可以执行的任务范围广泛，以便于渗透测试工作，使系统更加安全。Metasploit适用于所有流行的操作系统。框架的工作过程对所有操作系统几乎是相同的。在本书中，我们将主要使用BackTrack
    5操作系统，因为它预装了Metasploit框架和其他在框架上运行的第三方工具。
- en: 'Let us start with a quick introduction to the framework and the various terminologies
    related to it:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速介绍一下框架和与之相关的各种术语：
- en: '**Metasploit framework:** It is a free, open source penetration testing framework
    started by H. D. Moore in 2003 which was later acquired by Rapid7\. The current
    stable versions of the framework are written using the Ruby language. It has the
    world''s largest database of tested exploits and receives more than a million
    downloads every year. It is also one of the most complex projects built in Ruby
    to date.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Metasploit框架：**这是由H.D. Moore于2003年开始的免费、开源的渗透测试框架，后来被Rapid7收购。框架的当前稳定版本是用Ruby语言编写的。它拥有世界上最大的已测试利用数据库，每年下载量超过一百万次。这也是迄今为止用Ruby构建的最复杂的项目之一。'
- en: '**Vulnerability:** It is a weakness which allows an attacker/pen-tester to
    break into/compromise a system''s security. This weakness can either exist in
    the operating system, application software, or even in the network protocols.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漏洞：**这是一种允许攻击者/渗透测试者破坏/危害系统安全的弱点。这种弱点可以存在于操作系统、应用软件，甚至网络协议中。'
- en: '**Exploit:** Exploit is a code which allows an attacker/tester to take advantage
    of the vulnerable system and compromise its security. Every vulnerability has
    its own corresponding exploit. Metasploit v4 has more than 700 exploits.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利用：**利用是一种允许攻击者/测试者利用脆弱系统并危害其安全性的代码。每个漏洞都有其对应的利用。Metasploit v4有超过700个利用。'
- en: '**Payload:** It is the actual code which does the work. It runs on the system
    after exploitation. They are mostly used to set up a connection between the attacking
    and the victim machine. Metasploit v4 has more than 250 payloads.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有效载荷：**这是实际执行工作的代码。在利用后在系统上运行。它们主要用于在攻击者和受害者机器之间建立连接。Metasploit v4有超过250个有效载荷。'
- en: '**Module:** Modules are the small building blocks of a complete system. Every
    module performs a specific task and a complete system is built up by combining
    several modules to function as a single unit. The biggest advantage of such an
    architecture is that it becomes easy for developers to integrate a new exploit
    code and tools into the framework.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模块：**模块是完整系统的小构建块。每个模块执行特定任务，通过组合多个模块来构建一个完整的系统单元。这种架构的最大优势是，开发人员可以轻松地将新的利用代码和工具集成到框架中。'
- en: The Metasploit framework has a modular architecture and the exploits, payload,
    encoders, and so on are considered as separate modules.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架具有模块化架构，利用、有效载荷、编码器等被视为单独的模块。
- en: '![Introduction](img/7423_01_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![介绍](img/7423_01_01.jpg)'
- en: Let us examine the architecture diagram closely.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细研究架构图。
- en: Metasploit uses different libraries which hold the key to the proper functioning
    of the framework. These libraries are a collection of pre-defined tasks, operations,
    and functions that can be utilized by different modules of the framework. The
    most fundamental part of the framework is the **Ruby Extension (Rex)** library.
    Some of the components provided by Rex include a wrapper socket subsystem, implementations
    of protocol clients and servers, a logging subsystem, exploitation utility classes,
    and a number of other useful classes. Rex itself is designed to have no dependencies,
    other than what comes with the default Ruby installation.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit使用不同的库来确保框架的正常运行。这些库是一组预定义的任务、操作和函数，可以被框架的不同模块利用。框架最基本的部分是**Ruby扩展（Rex）**库。Rex提供的一些组件包括包装套接字子系统、协议客户端和服务器的实现、日志子系统、利用实用类以及其他一些有用的类。Rex本身设计为没有依赖性，除了默认的Ruby安装。
- en: Then we have the MSF Core library which extends Rex. Core is responsible for
    implementing all of the required interfaces that allow for interacting with exploit
    modules, sessions, and plugins. This core library is extended by the framework
    base library which is designed to provide simpler wrapper routines for dealing
    with the framework core, as well as providing utility classes for dealing with
    different aspects of the framework, such as serializing a module state to different
    output formats. Finally, the base library is extended by the framework's **User
    Interface (UI)** that implements support for the different types of user interfaces
    to the framework itself, such as the command console and the web interface.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们有MSF Core库，它扩展了Rex。 Core负责实现所有必需的接口，允许与利用模块、会话和插件进行交互。这个核心库由框架基础库扩展，旨在为处理框架核心提供更简单的包装例程，并为处理框架的不同方面提供实用类，例如将模块状态序列化为不同的输出格式。最后，基础库由框架的**用户界面（UI）**扩展，实现对框架本身的不同类型用户界面的支持，例如命令控制台和Web界面。
- en: There are four different user interfaces provided with the framework namely
    `msfconsole, msfcli, msfgui`, and `msfweb`. It is highly encouraged that one should
    check out all these different interfaces, but in this book we will primarily work
    on the `msfconsole` interface. The reason behind it is that `msfconsole` provides
    the best support to the framework, leveraging all the functionalities.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 框架提供了四种不同的用户界面，即`msfconsole、msfcli、msfgui`和`msfweb`。强烈建议您尝试所有这些不同的界面，但在本书中，我们将主要使用`msfconsole`界面。其背后的原因是`msfconsole`为框架提供了最好的支持，利用了所有功能。
- en: Let us now move to the recipes of this chapter and practically analyze the various
    aspects.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们转向本章的实际分析和实际分析各个方面的配方。
- en: Configuring Metasploit on Windows
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上配置Metasploit
- en: Installation of the Metasploit framework on Windows is simple and requires almost
    no effort. The framework installer can be downloaded from the Metasploit official
    website ([http://www.metasploit.com/download](http://www.metasploit.com/download)).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上安装Metasploit框架非常简单，几乎不需要任何努力。框架安装程序可以从Metasploit官方网站（[http://www.metasploit.com/download](http://www.metasploit.com/download)）下载。
- en: Getting ready
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: You will notice that there are two types of installer available for Windows.
    It is recommended to download the complete installer of the Metasploit framework
    which contains the console and all other relevant dependencies, along with the
    database and runtime setup. In case you already have a configured database that
    you want to use for the framework as well, then you can go for the mini installer
    of the framework which only installs the console and dependencies.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到Windows有两种不同类型的安装程序可用。建议下载包含控制台和所有其他相关依赖项以及数据库和运行时设置的Metasploit框架的完整安装程序。如果您已经配置了要用于框架的数据库，那么可以选择仅安装控制台和依赖项的框架的迷你安装程序。
- en: How to do it...
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Once you have completed downloading the installer, simply run it and sit back.
    It will automatically install all the relevant components and set up the database
    for you. Once the installation is complete, you can access the framework through
    various shortcuts created by the installer.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成了安装程序的下载，只需运行它并放松一下。它将自动安装所有相关组件并为您设置数据库。安装完成后，您可以通过安装程序创建的各种快捷方式访问框架。
- en: How it works...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: You will find that the installer has created lots of shortcuts for you. Most
    of the things are click-and-go in a Windows environment. Some of the options that
    you will find are Metasploit web, cmd console, Metasploit update, and so on.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您会发现安装程序已经为您创建了许多快捷方式。在Windows环境中，大多数事情都是点击即可完成的。您会发现一些选项，如Metasploit web、cmd控制台、Metasploit更新等。
- en: Note
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: While installing Metasploit on Windows, you should disable the antivirus protection
    as it may detect some of the installation files as potential viruses or threats
    and can block the installation process. Once the installation is complete, make
    sure that you have white-listed the framework installation directory in your antivirus,
    as it will detect the exploits and payloads as malicious.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上安装Metasploit时，应禁用防病毒保护，因为它可能会检测到某些安装文件为潜在病毒或威胁，并可能阻止安装过程。安装完成后，请确保您已在防病毒软件中将框架安装目录列入白名单，因为它将检测到利用和有效载荷为恶意。
- en: There's more...
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Now let's talk about some other options, or possibly some pieces of general
    information, that are relevant to installing the Metasploit framework on Windows
    explicitly.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们谈谈一些其他选项，或者可能是一些与在Windows上明确安装Metasploit框架相关的一般信息。
- en: Database error during installation
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装过程中的数据库错误
- en: 'There is a common problem with many users while installing the Metasploit framework
    on the Windows machine. While running the setup you may encounter an error message,
    as shown in the screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows机器上安装Metasploit框架时，许多用户都会遇到一个常见问题。在运行设置时，您可能会遇到错误消息，如屏幕截图所示：
- en: '![Database error during installation](img/7423_01_02.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![安装过程中的数据库错误](img/7423_01_02.jpg)'
- en: 'This is the result of an error in configuring the PostgreSQL server. The possible
    causes are:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在配置PostgreSQL服务器时出现错误的结果。可能的原因是：
- en: PostgreSQL not running. Use Netstat to figure out if the port is open and the
    database is running.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PostgreSQL未运行。使用Netstat查找端口是否打开并且数据库是否运行。
- en: Some installers require a default installation path. For example, if the default
    path is `C` drive, changing it to `D` drive will give this error.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有些安装程序需要默认安装路径。例如，如果默认路径是`C`驱动器，将其更改为`D`驱动器将导致此错误。
- en: Language encoding.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语言编码。
- en: If you face this problem then you can overcome it by downloading the simpler
    version of the framework which contains only the console and dependencies. Then,
    configure the database manually and connect it with Metasploit.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您遇到此问题，可以通过下载仅包含控制台和依赖项的框架的简化版本来克服它。然后，手动配置数据库并将其连接到Metasploit。
- en: Configuring Metasploit on Ubuntu
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Ubuntu上配置Metasploit
- en: The Metasploit framework has full support for Ubuntu-based Linux operating systems.
    The installation process is a bit different from that of Windows.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架完全支持基于Ubuntu的Linux操作系统。安装过程与Windows有些不同。
- en: Getting ready
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Download the setup from the official Metasploit website ([http://www.metasploit.com/download](http://www.metasploit.com/download/)).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 从官方Metasploit网站（[http://www.metasploit.com/download](http://www.metasploit.com/download/)）下载设置。
- en: Again, you will have the option to choose either a minimal setup or full setup.
    Choose your download according to your need. The full setup will include all the
    dependencies, database setup, environment etc whereas the minimal setup will only
    contain the dependencies with no database setup.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，您可以选择最小安装或完整安装。根据您的需求选择下载。完整安装将包括所有依赖项、数据库设置、环境等，而最小安装将只包含依赖项，没有数据库设置。
- en: How to do it...
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The process for installing a full setup is a bit different from a minimal setup.
    Let us analyze each of them:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 完整安装的过程与最小安装有些不同。让我们分析一下它们各自：
- en: '**Full installer:** You will need to execute the following commands to install
    the framework on your Ubuntu machine:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整安装程序：** 您需要执行以下命令在您的Ubuntu机器上安装框架：'
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Minimal installer:** You will need to execute the following commands to install
    the framework with minimal options:'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小安装程序：** 您需要执行以下命令以最小选项安装框架：'
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How it works...
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The installation process demonstrated above is a simple Ubuntu-based installation
    procedure for almost all software. Once the installation is complete, you can
    run `hash -r` to reload your path.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 上面演示的安装过程是几乎所有软件的简单基于Ubuntu的安装过程。安装完成后，您可以运行`hash -r`重新加载您的路径。
- en: Note
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This installation process can be followed on almost all flavors and versions
    of Linux.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这个安装过程可以在几乎所有版本和版本的Linux上进行。
- en: There's more...
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Now let's talk about some other options, or possibly some pieces of general
    information that are relevant to this task.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们谈谈其他一些选项，或者可能与此任务相关的一些一般信息。
- en: Error during installation
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装过程中出现错误
- en: 'There can be chances that the installer may not work for you for some reason.
    Some versions of Ubuntu come with broken libraries of the Ruby language, which
    may be one of the reasons for the installation failure. In that case, we can install
    the dependencies separately by executing the following commands:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有可能安装程序由于某种原因对您不起作用。某些版本的Ubuntu带有破损的Ruby语言库，这可能是安装失败的原因之一。在这种情况下，我们可以通过执行以下命令单独安装依赖项：
- en: 'For installing Ruby dependencies run:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Ruby依赖项，请运行：
- en: '[PRE2]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For installing the subversion client run:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装子版本客户端，请运行：
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'For building native extensions run:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建本机扩展，请运行：
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After installing the following dependencies, download the Metasploit Unix tarball
    from the official Metasploit download page and execute the following commands:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 安装以下依赖项后，从官方Metasploit下载页面下载Metasploit Unix tarball并执行以下命令：
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: On successful execution of the preceding commands, the framework will be up
    and running to receive your instructions.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功执行上述命令后，框架将启动并准备接收您的指令。
- en: Metasploit with BackTrack 5 the ultimate combination
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit与BackTrack 5的终极组合
- en: BackTrack is the most popular operating system for security professionals for
    two reasons. Firstly, it has all the popular penetration testing tools pre-installed
    in it so it reduces the cost of a separate installation. Secondly, it is a Linux-based
    operating system which makes it less prone to virus attacks and provides more
    stability during penetration testing. It saves your time from installing relevant
    components and tools and who knows when you may encounter an unknown error during
    the installation process.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: BackTrack是安全专业人员最受欢迎的操作系统，原因有两个。首先，它预先安装了所有流行的渗透测试工具，因此减少了单独安装的成本。其次，它是基于Linux的操作系统，这使得它不太容易受到病毒攻击，并在渗透测试期间提供更稳定性。它可以节省您安装相关组件和工具的时间，谁知道在安装过程中可能会遇到未知错误。
- en: Getting ready
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Either you can have a separate installation of BackTrack on your hard disk or
    you can also use it over a host on a virtual machine. The installation process
    is simple and the same as installing any Linux-based operating system.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在硬盘上单独安装BackTrack，也可以在虚拟机上使用。安装过程简单，与安装任何基于Linux的操作系统相同。
- en: How to do it...
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: On booting the BackTrack OS, you will be asked to enter the username and password.
    The default username for the root user is `root` and the password is `toor`.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在启动BackTrack OS时，您将被要求输入用户名和密码。root用户的默认用户名是`root`，密码是`toor`。
- en: On successful login, you can either work over the command line or enter `startx`
    to enter in the GUI mode.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功登录后，您可以在命令行上工作，也可以输入`startx`进入GUI模式。
- en: You can either start the Metasploit framework from the **Applications** menu
    or from the command line. To launch Metasploit from the **Applications** menu
    go to **Applications | BackTrack | Exploitation Tools | Network Exploitation Tools
    | Metasploit Framework**, as shown in the following screenshot:![How to do it...](img/7423_01_03.jpg)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以从**应用程序**菜单或命令行启动Metasploit框架。要从**应用程序**菜单启动Metasploit，请转到**应用程序 | BackTrack
    | Exploitation Tools | Network Exploitation Tools | Metasploit Framework**，如下面的屏幕截图所示：![如何做...](img/7423_01_03.jpg)
- en: 'Metasploit follows a simple directory structure hierarchy where the root folder
    is `pentest`. The directory further branches to `/exploits/framework3`. To launch
    Metasploit from the command line, launch the terminal and enter the following
    command to move to the Metasploit directory:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Metasploit遵循一个简单的目录结构层次，其中根文件夹是`pentest`。该目录进一步分支到`/exploits/framework3`。要从命令行启动Metasploit，请启动终端并输入以下命令以移动到Metasploit目录：
- en: '[PRE6]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: How it works...
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Launching Metasploit from the command line will follow the complete path to
    `msfconsole`. Launching it from the **Application** menu will provide us a direct
    access to different UIs available to us.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 从命令行启动Metasploit将遵循到`msfconsole`的完整路径。从**应用程序**菜单启动将为我们提供直接访问不同可用的UI。
- en: Setting up the penetration testing lab on a single machine
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在单台机器上设置渗透测试实验室
- en: You can always have a penetration testing lab set up by using multiple machines
    and it is considered the ideal setup as well. But what if you have an emergency
    and you immediately need to set up a testing scenario and you only have a single
    machine? Well using a virtual machine is the obvious answer. You can work simultaneously
    on more than one operating system and perform the task of penetration testing.
    So let us have a quick look at how we can set up a penetration testing lab on
    a single system with the help of a virtual machine.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用多台机器设置渗透测试实验室，这被认为是理想的设置。但是，如果您遇到紧急情况，需要立即设置测试场景，而您只有一台机器怎么办？使用虚拟机是显而易见的答案。您可以同时在多个操作系统上工作，并执行渗透测试任务。因此，让我们快速看一下如何借助虚拟机在单个系统上设置渗透测试实验室。
- en: Getting ready
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will be using a virtual box to set up two virtual machines with BackTrack
    5 and Windows XP SP2 operating systems. Our host system is a Windows 7 machine.
    We will need the virtual box installer and either an image file or an installation
    disk of the two operating systems we want to set up in the virtual machine. So
    our complete setup will consist of a host system running Windows 7 with two virtual
    systems running BackTrack 5 and Windows XP SP2 respectively.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用虚拟机设置两个虚拟机，分别运行BackTrack 5和Windows XP SP2操作系统。我们的主机系统是Windows 7。我们需要虚拟机安装程序，以及两个操作系统的镜像文件或安装光盘。因此，我们的完整设置将包括运行Windows
    7的主机系统，分别运行BackTrack 5和Windows XP SP2的两个虚拟系统。
- en: How to do it...
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The process of installing a virtual machine is simple and self-explanatory.
    Follow these steps:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 安装虚拟机的过程简单明了。按照以下步骤进行：
- en: After installing the virtual box, create a new virtual machine. Select the appropriate
    options and click on **Next**. You will have to provide an installation medium
    to start the setup. The medium can either be an image file or installation disk.
    For a complete manual on a virtual machine and installation procedure, you can
    visit the following link:[http://www.virtualbox.org/manual/UserManual.html](http://www.virtualbox.org/manual/UserManual.html)
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装虚拟机后，创建一个新的虚拟机。选择适当的选项，然后点击**下一步**。您将需要提供一个安装介质来启动设置。介质可以是镜像文件或安装光盘。有关虚拟机和安装程序的完整手册，您可以访问以下链接：[http://www.virtualbox.org/manual/UserManual.html](http://www.virtualbox.org/manual/UserManual.html)
- en: For a better virtual machine performance, it is recommended to have at least
    4 GB of available RAM for a 32-bit operating system and 8 GB RAM for 64-bit. In
    the next recipe, I will show you a cool way to bring down your memory usage while
    running multiple virtual machines.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了获得更好的虚拟机性能，建议32位操作系统至少有4GB可用RAM，64位操作系统至少有8GB RAM。在下一个教程中，我将向您展示一种很酷的方法，可以在运行多个虚拟机时降低内存使用量。
- en: Once the **virtual machine (VM)** is created, you can use the "clone" option.
    This will create an exact copy of your VM so in case some failure occurs in your
    operating VM, then you can switch to the cloned VM without worrying about re-installing
    it. Also you can use the "snapshot" option to save the current state of your VM.
    Snapshot will save the current working settings of your virtual machine and you
    can revert back to your saved snapshot anytime in the future.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦创建了**虚拟机（VM）**，您可以使用“克隆”选项。这将创建您的VM的精确副本，因此如果操作VM中发生故障，您可以切换到克隆的VM，而不必担心重新安装。您还可以使用“快照”选项保存VM的当前状态。快照将保存虚拟机的当前工作设置，您可以在将来的任何时间恢复到保存的快照。
- en: How it works...
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Before you start your virtual machines, there is an important configuration
    that we will have to make in order to make the two virtual machines communicate
    with each other. Select one of the virtual machines and click on **Settings**.
    Then move to **Network settings**. In the Network adapter, there will be a pre-installed
    NAT adapter for internet usage of the host machine. Under **Adapter 2** select
    **Host only Adapter:**
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动虚拟机之前，我们需要进行重要的配置，以使两个虚拟机能够相互通信。选择其中一个虚拟机，点击**设置**。然后转到**网络设置**。在网络适配器中，将有一个预安装的NAT适配器用于主机机器的互联网使用。在**适配器2**下选择**仅主机适配器**。
- en: '![How it works...](img/7423_01_04.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/7423_01_04.jpg)'
- en: Follow this process for both the virtual machines. The reason for setting up
    **Host-only adapter** is to make the two virtual machines communicate with each
    other. Now, in order to test whether everything is fine, check the IP address
    of the windows virtual machine by entering `ipconfig` in the command prompt. Now
    ping the Windows machine (using the local IP address obtained from the `ipconfig`
    command) from the BackTrack machine to see if it is receiving the packets or not.
    Follow the vice versa process to crosscheck both the machines.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对两个虚拟机都执行此过程。设置**仅主机适配器**的原因是使两个虚拟机能够相互通信。现在，为了测试一切是否正常，通过在命令提示符中输入`ipconfig`来检查Windows虚拟机的IP地址。现在从BackTrack机器上ping
    Windows机器（使用从`ipconfig`命令获取的本地IP地址），以查看它是否接收数据包。按照相反的过程来交叉检查两台机器。
- en: There's more...
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Now let's talk about some other options, or possibly some pieces of general
    information, that are relevant to this task.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们谈谈其他选项，或者可能与此任务相关的一些一般信息。
- en: Disabling the firewall and antivirus protection
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 禁用防火墙和防病毒保护
- en: There can be situations when we may find that while pinging the Windows machine
    from the BackTrack machine the packets are not received. That means the Windows
    machine is not alive. This can possibly be due to the default Windows firewall
    setting. So, disable the firewall protection and ping again to see if the packets
    are getting received or not. Also, disable any firewall that may be installed
    in the virtual machine.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们可能会发现，当从BackTrack机器对Windows机器进行ping时，数据包没有收到。这意味着Windows机器已经关闭。这可能是由于默认的Windows防火墙设置。因此，禁用防火墙保护，然后再次ping，看看数据包是否被接收。还要禁用虚拟机中可能安装的任何防火墙。
- en: Installing virtual box guest additions
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装虚拟盒增强功能
- en: 'A Virtual box provides an additional installation of add-ons that can improve
    your virtual usage experience. Some of its key benefits are:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟盒提供了一个额外的插件安装，可以改善您的虚拟使用体验。它的一些关键好处是：
- en: Seamless mouse movement from host OS to virtual OS
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从主机操作系统到虚拟操作系统的无缝鼠标移动
- en: Automatic keyboard integration to virtual OS
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动键盘集成到虚拟操作系统
- en: Better screen size
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的屏幕尺寸
- en: To install the guest additions, power on the virtual machine, go to the **Device**
    tab and click on **Install guest additions**.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装增强功能，启动虚拟机，转到**设备**选项卡，然后点击**安装增强功能**。
- en: Setting up Metasploit on a virtual machine with SSH connectivity
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在具有SSH连接的虚拟机上设置Metasploit
- en: In the previous recipe, we focused on setting up a penetration testing lab on
    a single machine with the help of virtualization. But there can be serious memory
    usage concerns while using multiple virtual machines. So, here we will discuss
    a conservation technique which can be really handy in bad times.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个步骤中，我们专注于使用虚拟化在单台机器上设置渗透测试实验室。但是在使用多个虚拟机时可能会出现严重的内存使用问题。因此，我们将讨论一种在困难时期非常有用的保护技术。
- en: Getting ready
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: All we need is an SSH client. We will use PuTTY as it is the most popular and
    free SSH client available for Windows. We will set up an SSH connectivity with
    the Backtrack machine as it has more memory consumption than the Windows XP machine.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要一个SSH客户端。我们将使用PuTTY，因为它是Windows上最流行和免费的SSH客户端。我们将建立与Backtrack机器的SSH连接，因为它的内存消耗比Windows
    XP机器更大。
- en: How to do it...
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'We will start by booting our BackTrack virtual machine. On reaching the login
    prompt, enter the credentials to start the command line. Now don''t start the
    GUI. Execute any one of the following commands:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将首先启动我们的BackTrack虚拟机。在到达登录提示时，输入凭据启动命令行。现在不要启动GUI。执行以下任一命令：
- en: '[PRE7]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will start the SSH process on the BackTrack machine.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动BackTrack机器上的SSH进程。
- en: 'Now find the IP address of the machine by entering the following command:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在通过输入以下命令找到机器的IP地址：
- en: '[PRE8]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note down this IP address
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 记下这个IP地址
- en: Now start PuTTY on the host operating system. Enter the IP address of the BackTrack
    virtual machine and enter port `22:`![How to do it...](img/7423_01_05.jpg)
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在主机操作系统上启动PuTTY。输入BackTrack虚拟机的IP地址并输入端口`22`：![操作步骤...](img/7423_01_05.jpg)
- en: Now click on **Open** to launch the command line. If the connection is successful,
    you will see the PuTTY command line functioning on behalf of the BackTrack machine.
    It will ask you to log in. Enter the credentials and enter `ifconfig` to check
    if the IP is the same as that of the virtual BackTrack:![How to do it...](img/7423_01_06.jpg)
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击**打开**以启动命令行。如果连接成功，您将看到PuTTY命令行代表BackTrack机器运行。它会要求您登录。输入凭据并输入`ifconfig`来检查IP是否与虚拟BackTrack的IP相同：![操作步骤...](img/7423_01_06.jpg)
- en: How it works...
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In this SSH session we can now interact with the BackTrack virtual machine using
    PuTTY. As the GUI is not loaded, it reduces the memory consumption by almost half.
    Also minimizing the BackTrack virtual machine will further reduce memory consumption
    as the Windows operating system provides less memory share to the processes that
    are minimized and provides faster execution of those tasks that are running in
    maximized mode. This will further reduce the memory consumption to some extent.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个SSH会话中，我们现在可以使用PuTTY与BackTrack虚拟机进行交互。由于GUI没有加载，内存消耗几乎减少了一半。此外，最小化BackTrack虚拟机将进一步减少内存消耗，因为Windows操作系统为最小化的进程提供较少的内存份额，并提供正在最大化模式下运行的任务更快的执行。这将进一步在一定程度上减少内存消耗。
- en: Beginning with the interfaces the "Hello World" of Metasploit
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从接口开始，Metasploit的“Hello World”
- en: Interfaces provide a front end for the user to communicate with the software
    or platform. Metasploit has four interfaces namely `msfgui, msfweb, msfcli`, and
    `msfconsole`. It is highly recommended that you check out all the interfaces,
    but here in this book we will primarily focus on the `msfconsole` interface. It
    is the most powerful and fully integrated interface among them all.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 接口为用户与软件或平台进行通信提供了一个前端。Metasploit有四个接口，即`msfgui, msfweb, msfcli`和`msfconsole`。强烈建议您检查所有接口，但在本书中，我们将主要关注`msfconsole`接口。它是其中最强大和完全集成的接口。
- en: Getting ready
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Boot up your operating system on which you have installed Metasploit. If you
    are using it on a virtual machine then start it.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 启动已安装Metasploit的操作系统。如果您在虚拟机上使用它，请启动它。
- en: How to do it...
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Launching `msfconsole` is an easy task. Follow these steps:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 启动`msfconsole`是一项简单的任务。按照以下步骤进行：
- en: For a Windows operating system, you can launch `msfconsole` by going to **Start
    | metasploit framework | msfconsole**.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于Windows操作系统，可以通过**开始 | metasploit framework | msfconsole**来启动`msfconsole`。
- en: For BackTrack you can browse to **Applications | Exploitation tools | Network
    exploitation tools | Metasploit framework | msfconsole**.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于BackTrack，您可以浏览到**应用程序 | 渗透测试工具 | 网络渗透测试工具 | Metasploit框架 | msfconsole**。
- en: 'To launch it directly from the terminal add the following command:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 直接从终端启动它，添加以下命令：
- en: '[PRE9]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The working directory will change to `framework3`. Entering the following command
    will start our `msfconsole:`
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工作目录将更改为`framework3`。输入以下命令将启动我们的`msfconsole`：
- en: '[PRE10]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now, our `msfconsole` interface is up and running, and ready to receive the
    commands.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的`msfconsole`界面已经启动并运行，准备接收命令。
- en: How it works...
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Metasploit interfaces extend the base library which enables them to evoke initial
    functionalities of the framework. Simple commands, such as setting up exploits
    and payloads, running updates, and configuring the database can be executed. Once
    the process grows deep, the other functional libraries are called accordingly.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit接口扩展了基本库，使它们能够调用框架的初始功能。可以执行简单的命令，例如设置利用和有效载荷、运行更新和配置数据库。一旦过程变得更深入，其他功能库将相应地被调用。
- en: There's more...
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Let us add some additional stuff that you can perform at this stage with the
    `msfconsole` interface.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一些您可以在此阶段使用`msfconsole`界面执行的其他内容。
- en: Some commands to try out and get started
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一些要尝试并开始的命令
- en: 'Here are some commands that you can try out to explore deeper:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些您可以尝试以深入探索的命令：
- en: '`msf > ls:` The `ls` command will list all the directories and files that are
    available. You can further navigate deeper into other directories to explore further.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf > ls：` `ls`命令将列出所有可用的目录和文件。您可以进一步深入其他目录以进行更深入的探索。'
- en: '`msf > help:` This command will list all the available commands for the Metasploit
    framework that we can use. The commands are categorized into core commands and
    database backend commands. The former contains commands which are directly related
    to the framework, while the latter provides commands to interact with the database.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf > help：`此命令将列出我们可以使用的Metasploit框架的所有可用命令。这些命令被分类为核心命令和数据库后端命令。前者包含与框架直接相关的命令，而后者提供与数据库交互的命令。'
- en: '`msf > msfupdate:` This command should be used frequently to update the framework
    with the latest exploits, payloads, libraries, and so on.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf > msfupdate：`应经常使用此命令，以便使用最新的利用、有效载荷、库等更新框架。'
- en: Setting up the database in Metasploit
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Metasploit中设置数据库
- en: An important feature of Metasploit is the presence of databases which you can
    use to store your penetration testing results. Any penetration test consists of
    lots of information and can run for several days so it becomes essential to store
    the intermediate results and findings. So a good penetration testing tool should
    have proper database integration to store the results quickly and efficiently.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit的一个重要特性是存在数据库，您可以使用它来存储渗透测试结果。任何渗透测试都包含大量信息，可能持续几天，因此存储中间结果和发现变得至关重要。因此，一个好的渗透测试工具应该具有适当的数据库集成，以快速有效地存储结果。
- en: Getting ready
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Metasploit comes with PostgreSQL as the default database. For the BackTrack
    machine, we have one more option—MySQL. You can use either of the two databases.
    Let us first check out the default settings of the PostgreSQL database. We will
    have to navigate to `database.yml` located under `opt/framework3/config`. To do
    this, run the following command:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit默认使用PostgreSQL作为数据库。对于BackTrack机器，我们还有另一个选择—MySQL。您可以使用这两个数据库中的任何一个。让我们首先检查PostgreSQL数据库的默认设置。我们将不得不导航到`opt/framework3/config`下的`database.yml`。要做到这一点，请运行以下命令：
- en: '[PRE11]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Notice the default username, password, and default database that has been created.
    Note down these values as they will be required further. You can also change these
    values according to your choice as well.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 注意已创建的默认用户名、密码和默认数据库。记下这些值，因为它们将进一步需要。您也可以根据自己的选择更改这些值。
- en: How to do it...
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Now our job is to connect the database and start using it. Let us launch the
    `msfconsole` and see how we can set up the databases and store our results.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的工作是连接数据库并开始使用它。让我们启动`msfconsole`，看看我们如何设置数据库并存储我们的结果。
- en: Let us first check the available database drivers.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先检查可用的数据库驱动程序。
- en: '[PRE12]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'PostgreSQL is set as the default database. If you want to change the database
    driver then you can execute the following command:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: PostgreSQL被设置为默认数据库。如果要更改数据库驱动程序，则可以执行以下命令：
- en: '[PRE13]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This will change the active driver to MySQL. In this book, we will primarily
    be using PostgreSQL for demonstrations.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把活动驱动程序更改为MySQL。在本书中，我们主要将使用PostgreSQL进行演示。
- en: Note
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Rapid7 has dropped the support for MySQL database in the recent versions of
    Metasploit so the `db_driver` command may not work. The only default driver supported
    with the framework in that case will be PostgreSQL.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: Rapid7在最近的Metasploit版本中放弃了对MySQL数据库的支持，因此`db_driver`命令可能无法工作。在这种情况下，框架支持的唯一默认驱动程序将是PostgreSQL。
- en: How it works...
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'To connect the driver to `msfconsle` we will be using the `db_connect` command.
    This command will be executed using the following syntax:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 要将驱动程序连接到`msfconsle`，我们将使用`db_connect`命令。此命令将使用以下语法执行：
- en: '[PRE14]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here we will use the same default values of username, password, database name,
    and port number which we just noted down from the `database.yml` file:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将使用从`database.yml`文件中刚刚记录下的相同默认值的用户名、密码、数据库名称和端口号：
- en: '[PRE15]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: On successful execution of the command, our database is fully configured.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 成功执行命令后，我们的数据库将被完全配置。
- en: There's more...
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Let us discuss some more important facts related to setting up the database.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们讨论一些与建立数据库相关的更重要的事实。
- en: Getting an error while connecting the database
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在连接数据库时出现错误
- en: 'There are chances of an error while trying to establish the connection. There
    are two things to keep in mind if any error arises:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试建立连接时可能会出现错误。如果出现任何错误，有两件事需要记住：
- en: Check the `db_driver` and `db_connect` commands and make sure that you are using
    the correct combination of the database.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查`db_driver`和`db_connect`命令，并确保您使用正确的数据库组合。
- en: Use `start/etc/init.d` to start the database service and then try connecting
    it.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`start/etc/init.d`启动数据库服务，然后尝试连接它。
- en: 'If the error still prevails then we can re-install the database and associated
    libraries using the following commands:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如果错误仍然存在，我们可以使用以下命令重新安装数据库和相关库：
- en: '[PRE16]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Deleting the database
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除数据库
- en: 'At any time, you can drop the database created and start again to store fresh
    results. The following command can be executed for deleting the database:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 随时可以删除创建的数据库并重新开始存储新的结果。可以执行以下命令来删除数据库：
- en: '[PRE17]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Using the database to store penetration testing results
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用数据库存储渗透测试结果
- en: Let us now learn how we can use our configured database to store our results
    of the penetration tests.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们学习如何使用配置好的数据库来存储我们的渗透测试结果。
- en: Getting ready
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: If you have successfully executed the previous recipe, you are all set to use
    the database for storing the results. Enter the `help` command in `msfconsole`
    to have a quick look at the important database commands available to us.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已成功执行了前面的步骤，那么您已经准备好使用数据库来存储结果了。在`msfconsole`中输入`help`命令，快速查看我们可以使用的重要数据库命令。
- en: How to do it...
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let us start with a quick example. The `db_nmap` command stores the results
    of the port scan directly into the database, along with all relevant information.
    Launch a simple Nmap scan on the target machine to see how it works:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个快速示例开始。`db_nmap`命令将端口扫描的结果直接存储到数据库中，同时包括所有相关信息。在目标机器上启动一个简单的Nmap扫描，看看它是如何工作的：
- en: '[PRE18]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: As we can see, Nmap has produced the scan results and it will automatically
    populate the `msf3` database that we are using.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，Nmap已经生成了扫描结果，并且将自动填充我们正在使用的`msf3`数据库。
- en: We can also use the `-oX` parameter in the Nmap scan to store the result in
    XML format. This will be very beneficial for us to import the scan results in
    other third-party software, such as the Dardis framework which we will be analyzing
    in our next chapter.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在Nmap扫描中使用`-oX`参数将结果存储为XML格式。这对我们来说将非常有益，可以将扫描结果导入其他第三方软件，比如我们将在下一章中分析的Dardis框架。
- en: '[PRE19]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Here `report` is the name of the file where our scanned result will be stored.
    This will be helpful for us in later recipes of the book.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这里`report`是我们扫描结果将被存储的文件名。这将有助于我们在本书的后续步骤中。
- en: How it works...
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `db_nmap` command creates an SQL query with various table columns relevant
    to the scan results. Once the scan is complete, it starts storing the values into
    the database. The flexibility to store results in the form of spreadsheets makes
    it easier to share the results locally or with third-party tools.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`db_nmap`命令创建一个包含与扫描结果相关的各种表列的SQL查询。一旦扫描完成，它就开始将值存储到数据库中。以电子表格形式存储结果的灵活性使得更容易在本地或与第三方工具共享结果。'
- en: Analyzing the stored results of the database
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析数据库中存储的结果
- en: After storing the testing results in the database, the next step is to analyze
    it. Analyzing the data will give us a deeper understanding of our target systems.
    The results of the database can be kept either for a long time or for a short
    time storage depending upon the usage.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库中存储测试结果之后，下一步是对其进行分析。分析数据将使我们更深入地了解我们的目标系统。数据库的结果可以根据使用情况长期或短期存储。
- en: Getting ready
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Launch `msfconsole` and follow the steps mentioned in the previous recipe to
    establish the database connectivity. We can either use it to store fresh results
    or analyze the previously stored results as well. The XML file for the Nmap scan
    created in the previous recipe can be imported to analyze the previous scan results.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 启动`msfconsole`，并按照前面的步骤建立数据库连接。我们既可以用它来存储新的结果，也可以分析之前存储的结果。在前面的步骤中创建的Nmap扫描的XML文件可以导入以分析之前的扫描结果。
- en: How to do it...
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let us analyze some of the important commands to have a clearer understanding
    of the stored results:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '让我们分析一些重要的命令，以更清楚地了解存储的结果:'
- en: '`msf > hosts:` This command will show all the hosts that are available in the
    database. Let us analyze the output of this command:![How to do it...](img/7423_01_07.jpg)'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf > hosts:` 这个命令将显示数据库中所有可用的主机。让我们分析一下这个命令的输出:![如何做...](img/7423_01_07.jpg)'
- en: 'The preceding screenshot snapshot reflects the output of the hosts command.
    As we can observe, the result of this command is not very clean, as there are
    lots of columns in the table. So we can move ahead and add filters and view only
    those columns which we are interested in, as illustrated by the following command
    :'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图反映了主机命令的输出。正如我们所观察到的，这个命令的结果并不是很清晰，因为表中有很多列。因此，我们可以继续添加过滤器，并只查看我们感兴趣的那些列，如下面的命令所示：
- en: '[PRE20]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '`msf > services:` This is another interesting command that can give us useful
    information about the different services running on the target machines:'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf > services:` 这是另一个有趣的命令，可以为我们提供有关目标机器上运行的不同服务的有用信息:'
- en: '[PRE21]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '`msf > vulns:` This command lists all the vulnerabilities that exist in the
    hosts present in the database.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf > vulns:` 这个命令列出了数据库中存在的所有主机的漏洞。'
- en: '`msf > db_autopwn:` This is a powerful command that is used to automate the
    process of exploiting the target machines that are available in the database.
    This command requires more understanding about the exploitation process so we
    will analyze this command later.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf > db_autopwn:` 这是一个强大的命令，用于自动化利用数据库中可用的目标机器的过程。这个命令需要更多关于利用过程的理解，所以我们稍后会分析这个命令。'
- en: How it works...
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The analysis process is simple and can be easily filtered to get the desired
    results. We have seen how to read the database output and how we can manage it
    efficiently. The last two commands, `vulns` and `db_autopwn` are post-exploitation
    commands, which we will deal with in later chapters.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 分析过程简单，可以轻松过滤以获得所需的结果。我们已经看到了如何读取数据库输出以及如何有效地管理它。最后两个命令`vulns`和`db_autopwn`是后期利用命令，我们将在后面的章节中处理。
