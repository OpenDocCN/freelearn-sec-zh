- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Getting the Lab Ready and Attacking Exchange Server
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备实验室并攻击 Exchange 服务器
- en: Windows Active Directory is the de facto standard in most enterprises to run
    and support Windows-based networks. While centralized management brings convenience,
    it also introduces security risks. When carrying out their operations, malicious
    actors plan to achieve certain goals, and compromising Active Directory can help
    them do so. Active Directory’s default configuration is far from being secure.
    The best way to learn about Active Directory security is to execute attacks in
    a safe environment, trying to detect and prevent unwanted malicious activities.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 活动目录是大多数企业中运行和支持基于 Windows 的网络的事实标准。虽然集中管理带来了便利，但也引入了安全风险。在执行操作时，恶意行为者计划实现某些目标，破坏活动目录可以帮助他们达成这一目的。活动目录的默认配置远未达到安全标准。了解活动目录安全的最佳方式是，在安全环境中执行攻击，尝试检测并防止不必要的恶意活动。
- en: Throughout the book, we will focus on the Active Directory kill chain, executing
    attacks and trying to detect as well as prevent them. This chapter will cover
    how to deploy a safe playground for such activities. We will use this lab throughout
    the book, later on adding extra services that will be covered in corresponding
    chapters about **Active Directory Certificate Services** (**ADCS**), SQL Server,
    and **Windows Server Update Services** (**WSUS**) together with **System Center
    Configuration** **Manager** (**SCCM**).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的重点将放在活动目录杀伤链上，执行攻击并尝试检测和防止它们。本章将介绍如何为这些活动部署一个安全的操作环境。我们将在本书中使用这个实验室，之后会添加额外的服务，这些服务将在后续关于
    **活动目录证书服务** (**ADCS**)、SQL 服务器和 **Windows 服务器更新服务** (**WSUS**) 以及 **系统中心配置管理器**
    (**SCCM**) 的章节中讨论。
- en: Our first practical target will be Microsoft Exchange Server. It is a complex
    collaboration product that is far more advanced than just an email server. From
    a security perspective, it is a valuable target because it is a mission-critical
    component of the infrastructure that is reachable from the internet. On-premises
    Exchange is closely tied together with Active Directory, often with high privileges.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个实际目标将是微软 Exchange 服务器。它是一个复杂的协作产品，远不止一个电子邮件服务器。从安全的角度来看，它是一个有价值的目标，因为它是基础设施中一个至关重要的组件，并且可以从互联网访问。内部部署的
    Exchange 与活动目录紧密相连，通常具有较高的权限。
- en: 'In this chapter, we are going to cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将覆盖以下主要主题：
- en: Lab architecture and deployment
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验室架构与部署
- en: Active Directory kill chain
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活动目录杀伤链
- en: Why initial access and host-related topics are not covered
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么初始访问和主机相关的主题不予覆盖
- en: Attacking Exchange Server
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击 Exchange 服务器
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In this chapter, you will need to have access to the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您需要访问以下内容：
- en: VMware Workstation or Oracle VirtualBox with at least 16 GB of RAM, 10 CPU cores,
    and at least 115 GB of total space (more if you take snapshots)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMware Workstation 或 Oracle VirtualBox，至少需要 16GB 的 RAM，10 个 CPU 核心，以及至少 115GB
    的总空间（如果进行快照，则需要更多空间）
- en: A Linux-based host OS is strongly recommended
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强烈建议使用基于 Linux 的主机操作系统
- en: Vagrant installed with the plugin for the corresponding virtualization platform
    and Ansible
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了相应虚拟化平台插件的 Vagrant 和 Ansible
- en: Lab architecture and deployment
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实验室架构与部署
- en: Even if creating and deploying a test lab can be daunting and time consuming,
    it is an important preparation step before jumping into attack emulation. MITRE
    ATT&CK has a dedicated tactic for this activity called **Resource Development**.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 即使创建和部署测试实验室可能令人望而却步且耗时，它仍然是攻击模拟之前的重要准备步骤。MITRE ATT&CK 专门为此活动提供了一种策略，称为 **资源开发**。
- en: There are a few free but formidable projects available for automated lab deployment.
    You can choose any of them depending on your workstation’s resources and replicate
    the vulnerabilities yourself. For example, there is a very good open source project
    maintained by the Splunk Threat Research Team called Splunk Attack Range[1], where
    you can quickly deploy a small lab to perform attack simulations. However, I will
    use two other projects throughout the book.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些免费的但功能强大的自动化实验室部署项目可供选择。您可以根据工作站的资源选择其中任何一个，并自行复制漏洞。例如，有一个非常好的开源项目，由 Splunk
    威胁研究团队维护，叫做 Splunk Attack Range[1]，您可以快速部署一个小型实验室来执行攻击模拟。然而，本书中我将使用另外两个项目。
- en: 'The first project I will use throughout the book is the GOADv2 lab created
    by Orange Cyberdefense[2]. To deploy it, you will need a Linux-based host OS with
    VMware Workstation or Oracle VirtualBox. It is also possible to deploy the lab
    on Proxmox, as shown by *Mayfly* in his blog[3]. Deployment is straightforward
    and well described in the **README.md** file in the repository. The entire process
    consists of two parts and will take around 3-4 hours depending on the speed of
    your internet connection. Vagrant will create virtual machines and Ansible playbooks
    will configure and deploy the necessary services, users, and vulnerabilities.
    To speed up the deployment process in the Vagrant file, we can change the **box_version**
    variable of all SRV server machines to the one that is already in the list, so
    only two images will be downloaded and used for further deployment. I will use
    VMware Workstation 16 installed on the most recent Arch Linux. After following
    the installation guide, the final message you’ll see should look like the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中我将使用的第一个项目是由 Orange Cyberdefense[2] 创建的 GOADv2 实验室。要部署它，你需要一个基于 Linux 的主机操作系统，并安装
    VMware Workstation 或 Oracle VirtualBox。也可以在 Proxmox 上部署该实验室，正如 *Mayfly* 在他的博客中所展示的[3]。部署过程简单，并且在仓库中的
    **README.md** 文件里有详细描述。整个过程分为两部分，依据你的互联网连接速度，整个过程大约需要 3-4 小时。Vagrant 将创建虚拟机，Ansible
    playbook 将配置和部署所需的服务、用户和漏洞。为了加快部署速度，在 Vagrant 文件中，我们可以将所有 SRV 服务器的 **box_version**
    变量更改为已经在列表中的版本，这样就只会下载两个镜像，并用于进一步的部署。我将使用安装在最新 Arch Linux 上的 VMware Workstation
    16。按照安装指南操作后，你最终看到的信息应该如下所示：
- en: '![Figure 1.1 – Successful result of GOAD lab deployment](image/B18964_01_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – GOAD 实验室部署成功的结果](image/B18964_01_01.jpg)'
- en: Figure 1.1 – Successful result of GOAD lab deployment
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – GOAD 实验室部署成功的结果
- en: 'The second repository that I will use in some chapters is the impressive DetectionLab
    project created by *Chris Long*[4]. Unfortunately, it is not maintained anymore,
    but it still perfectly fits our purposes. The advantage of this lab is that it
    provides us with a wide variety of deployment options, including cloud platforms
    and all modern bare-metal hypervisors. Moreover, this lab has detection tools
    installed for us (Sysmon, Velociraptor, Microsoft ATA, etc.). The installation
    is also straightforward. The preparation shell script will help identify missing
    software packages and Vagrant will do the rest. The overall process will take
    1-2 hours depending on your network and computer. The following screenshot shows
    the successful execution of the pre-deployment script, meaning we are good to
    start our DetectionLab:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在某些章节中使用的第二个仓库是由 *Chris Long*[4] 创建的令人印象深刻的 DetectionLab 项目。不幸的是，它已经不再维护，但它仍然非常适合我们的目的。这个实验室的优势在于它提供了多种部署选项，包括云平台和所有现代裸机虚拟化程序。此外，这个实验室已经为我们安装了检测工具（Sysmon、Velociraptor、Microsoft
    ATA 等）。安装过程也很简单。准备脚本会帮助识别缺少的软件包，Vagrant 会完成剩下的工作。整体过程大约需要 1-2 小时，取决于你的网络和计算机性能。以下截图显示了预部署脚本成功执行的结果，这意味着我们可以开始我们的
    DetectionLab 了：
- en: '![Figure 1.2 – The result of successful execution of prepare.sh](image/B18964_01_02.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – 成功执行 prepare.sh 的结果](image/B18964_01_02.jpg)'
- en: Figure 1.2 – The result of successful execution of prepare.sh
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 成功执行 prepare.sh 的结果
- en: 'The following diagram of the GOADv2 project was taken from the lab creator’s
    GitHub repository:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 GOADv2 项目的图表来自实验室创建者的 GitHub 仓库：
- en: '![Figure 1.3 – GOADv2 overview](image/B18964_01_03.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – GOADv2 概览](image/B18964_01_03.jpg)'
- en: Figure 1.3 – GOADv2 overview
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – GOADv2 概览
- en: This lab has two forests (**sevenkingdoms.local** and **essos.local**) with
    established trust and child-parent domains (**sevenkingdoms.local** and **north.sevenkingdoms.local**).
    Active Directory trust effectively allows to securely access a resource from the
    trusted domain by the trusting domain entity. Microsoft SQL Server will be deployed
    in both forests with a trusted link established between instances. We will also
    have **Internet Information Services** (**IIS**) installed on one of the servers.
    ADCS provides the required digital certificate infrastructure for the company
    to employ public key cryptography. These certificates can be used for various
    purposes, such as authentication, encryption, and signing documents and/or messages.
    There is a dedicated server for that role in our lab where we will be able to
    emulate attacks on ADCS. Most of the attack venues have already been introduced
    by the lab creator in the environment, but if we need to add or tweak something,
    it will be specifically mentioned, and step-by-step guidelines will be provided
    – for example, installing WebClient or deploying **Group Managed Service** **Accounts**
    (**gMSAs**).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这个实验室有两个林（**sevenkingdoms.local** 和 **essos.local**），它们之间建立了信任关系，并且有父子域（**sevenkingdoms.local**
    和 **north.sevenkingdoms.local**）。Active Directory 信任可以有效地让信任域中的实体安全地访问受信域的资源。Microsoft
    SQL Server 将在两个林中部署，并在实例之间建立信任连接。我们还将在其中一台服务器上安装 **Internet Information Services**（**IIS**）。ADCS
    提供了所需的数字证书基础设施，供公司使用公钥加密技术。这些证书可以用于多种用途，比如身份验证、加密以及签署文档和/或消息。我们实验室中有一台专门的服务器来承担这个角色，届时我们将能够模拟对
    ADCS 的攻击。大多数攻击场景已经由实验室创建者在环境中引入，但如果我们需要添加或调整某些内容，将会特别提到，并提供逐步指南——例如，安装 WebClient
    或部署 **组管理服务账户**（**gMSAs**）。
- en: The next section will cover common approaches for attacking any target, including
    Active Directory.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将介绍攻击任何目标的常见方法，包括 Active Directory。
- en: Active Directory kill chain
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Active Directory 杀链
- en: 'What is Active Directory? In plain words, it is a hierarchically structured
    storage of object information. One of the main benefits is that Active Directory
    allows centralized management and authentication. Now, let us briefly discuss
    what the Cyber Kill Chain is. This framework was developed by Lockheed Martin
    and has a military background. It is a concept that identifies the structure of
    an attack. We can adapt Cyber Kill Chain concepts for Active Directory as in the
    diagram from *infosecn1nja* on GitHub[5]. It has several steps, but it always
    follows the same cycle – **recon**, **compromise**, **lateral movement** – just
    with more privileged access:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是 Active Directory？用简单的话来说，它是一个层次结构的对象信息存储。其主要优点之一是，Active Directory 允许集中管理和身份验证。接下来，我们简要讨论一下什么是网络攻击杀链。这个框架由洛克希德·马丁公司开发，具有军事背景。它是一个识别攻击结构的概念。我们可以根据
    *infosecn1nja* 在 GitHub 上的图示，将网络攻击杀链的概念应用到 Active Directory。它包含几个步骤，但始终遵循相同的循环——**侦察**，**妥协**，**横向移动**——只是拥有更多的特权访问：
- en: '![Figure 1.4 – Active Directory kill chain](image/B18964_01_04.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – Active Directory 杀链](image/B18964_01_04.jpg)'
- en: Figure 1.4 – Active Directory kill chain
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – Active Directory 杀链
- en: 'The focus of this book is Windows-based infrastructure and its services only,
    so themes such as local privilege escalation on the host, initial access, and
    external recon are out of the scope of this book. I will briefly explain the reasoning
    behind this decision in a dedicated section of this chapter. The following is
    a list of the themes that will be covered in the corresponding chapters:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的重点仅为基于 Windows 的基础设施及其服务，因此诸如主机上的本地权限提升、初始访问和外部侦察等主题超出了本书的范围。我将在本章的专门部分简要解释这一决定背后的原因。以下是将在相应章节中讨论的主题列表：
- en: Exchange Server
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Exchange 服务器
- en: Defense evasion
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防御规避
- en: Internal recon
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部侦察
- en: Credential access
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 凭证访问
- en: Lateral movement
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 横向移动
- en: Privilege escalation
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权限提升
- en: Persistence
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持久性
- en: AD CS
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AD CS
- en: Microsoft SQL Server
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft SQL Server
- en: WSUS
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WSUS
- en: Microsoft SCCM
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft SCCM
- en: In this book, we are focused on compromising the Active Directory environment
    and Windows-based common services, not red team operations. The reasoning is that
    red team operations often have business-related goals rather than finding and
    exploiting all possible vulnerabilities in Active Directory and services. It is
    important to mention that depending on the target environment, scope, and level
    of obtained privileges during initial access, it is not always necessary to compromise
    every target. For example, getting access to the financial data of the company
    does not require domain admin privileges, but in some cases, such privileges can
    be helpful. We will cover attack detection and possible prevention measures, as
    well as offensive **Operational Security** (**OpSec**). In plain words, it refers
    to how much of your activity can be spotted by an adversary. This is a double-edged
    sword, meaning it is applicable for both offensive and defensive actions and ways
    to deceive the adversary.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的重点是妥协 Active Directory 环境和基于 Windows 的常见服务，而非红队操作。原因是红队操作通常具有与业务相关的目标，而不是寻找和利用
    Active Directory 及其服务中的所有可能漏洞。需要提到的是，根据目标环境、范围以及在初始访问中获得的权限级别，并非总是需要妥协每个目标。例如，获取公司的财务数据并不需要域管理员权限，但在某些情况下，这些权限可能会有所帮助。我们将讨论攻击检测和可能的预防措施，以及进攻性**操作安全**（**OpSec**）。简而言之，指的是你在活动中被对手发现的可能性。这是一把双刃剑，意味着它既适用于进攻行动，也适用于防御行动及欺骗对手的方式。
- en: Why we will not cover initial access and host-related topics
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我们不会涵盖初始访问和主机相关的主题
- en: Initial access is a vital, early-stage step to compromise the target environment.
    However, this will not be covered in this book for the following reasons. To be
    honest, this theme is as wide as it is deep. It requires cross-field knowledge
    from different areas of IT as well as psychology, so it would require a separate
    book itself. Also, there is a high chance that at the moment of such a book being
    published, half of the attack vectors will be killed by implementing security
    solutions, such as **Endpoint Detection and Response** (**EDR**), and/or covered
    by a blue team’s comprehensive detection capabilities. The reason is that it is
    rapidly developing, full of private research that isn’t published. In general,
    to obtain stable initial access to the target environment, there are three main
    topics to take care of – a resilient and secure attack infrastructure, covert
    tooling with the required capabilities, and successful defense evasion.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 初始访问是妥协目标环境的一个至关重要的早期步骤。然而，本书不会涵盖这一部分，原因如下。老实说，这个主题既广泛又深入，涉及IT各个领域以及心理学的跨领域知识，因此它需要一本独立的书籍。此外，在此类书籍发布时，很可能一半的攻击向量会被安全解决方案（如**端点检测与响应**（**EDR**））的实施所消除，或者被蓝队的全面检测能力所覆盖。原因在于，这个领域发展迅速，充满了未发布的私人研究。总的来说，要获得稳定的初始访问权限，需关注三个主要主题——一个具有韧性和安全性的攻击基础设施、具备必要功能的隐蔽工具以及成功的防御规避。
- en: To avoid any painful mistakes being made during manual deployment, using automation
    such as Terraform and Ansible can help to build a resilient attacker’s infrastructure.
    But it comes at the price of time investment and requirements for scripting and
    a sysadmin skillset. One of the best resources to start with such a topic is the
    wiki on GitHub[6]. Infrastructure needs to be properly designed with multiple
    redirectors for different protocols, secured and hardened, and categorized correctly
    if phishing and filtering proxies are a part of the game.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免在手动部署过程中出现痛苦的错误，使用自动化工具，如 Terraform 和 Ansible，可以帮助构建一个具有韧性的攻击者基础设施。但这需要投入时间，并且要求具备脚本编写和系统管理员的技能。开始了解这一主题的最佳资源之一是
    GitHub 上的维基[6]。如果钓鱼和过滤代理是攻击的一部分，基础设施需要经过适当设计，配备多种协议的重定向器，确保安全并加固，并且正确分类。
- en: Covert tooling, evasion techniques, and detections are a never-ending battle
    of establishing dominance between skillful blue teams, SOCs, and EDR/security
    vendors on one hand and offensive security researchers together with red teams
    on the other. A great note[7] by *Jordan Potti* about the red team’s efforts and
    ROI regarding the EDR fight is also one of the reasons why I do not cover this
    topic and only focus on Windows-based infrastructure and Active Directory. I do
    not believe it is possible to write an all-in-one comprehensive red team book
    covering every single topic in depth.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 隐蔽工具、规避技术和检测之间是一场永无止境的斗争，在这场斗争中，熟练的蓝队、SOC 和 EDR/安全供应商与进攻性安全研究人员和红队相互竞争。*Jordan
    Potti*在关于红队在EDR对抗中努力和投资回报的精彩笔记[7]，也是我不讨论这一话题并专注于基于Windows的基础设施和Active Directory的原因之一。我认为不可能编写一本涵盖所有话题的全面红队书籍，深入探讨每一个方面。
- en: As our book is focused on Active Directory security concepts, we will follow
    the **assume breach** approach. A great presentation was created by Red Siege
    in 2019 to explain this model[8]. In our case, we assume that we have compromised
    a standard domain user. All further steps will be happening in the context of
    this user. We also assume that our initial foothold is covert and not detected
    by EDR/antivirus or any other security product. However, all further activities,
    including network traffic and generated event logs, are considered to be monitored
    by the blue team. Later in the book, if some activities require certain privileges,
    they will be specifically mentioned.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书聚焦于Active Directory的安全概念，我们将采用**假设已被突破**的方法。2019年，Red Siege创建了一个精彩的演示文稿来解释这一模型[8]。在我们的案例中，我们假设已经突破了一个标准的域用户账户。所有进一步的步骤将在该用户的上下文中进行。我们还假设最初的入侵是隐蔽的，并未被EDR/杀毒软件或任何其他安全产品检测到。然而，所有进一步的活动，包括网络流量和生成的事件日志，都被视为蓝队在监控中。书中的后续部分，如果某些活动需要特定的权限，将会特别提到。
- en: Our next section will finally be practical and more hands-on. We will discuss
    and replicate attacks against Exchange Server using various scenarios.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一部分将最终变得更加实际和动手操作。我们将讨论并复制针对Exchange Server的攻击场景。
- en: Attacking Exchange Server
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击Exchange Server
- en: Exchange Server is a collaboration server developed by Microsoft. Despite the
    fact that more and more companies are moving to the O365 cloud, there is still
    a good possibility that you will encounter on-premises deployment. Exchange has
    multiple useful features for end users, but it is also extremely difficult to
    develop all of them securely. In recent years, a lot of research has been published
    revealing critical vulnerabilities in its different components. Moreover, patches
    from Microsoft did not always completely fix these vulnerabilities, meaning that
    adversaries attempted to develop a one-day exploit by reverse engineering the
    patch and were able to find a suitable bypass. Considering that sometimes it is
    not possible for businesses to react in a timely manner to such rapidly changing
    situations, the chance of being compromised is quite high.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Exchange Server是由微软开发的协作服务器。尽管越来越多的公司正在迁移到O365云，但仍然有很大的可能性会遇到本地部署的Exchange。Exchange为最终用户提供了多个有用的功能，但也非常难以确保它们的安全。近年来，许多研究揭示了其不同组件中的关键漏洞。此外，微软发布的补丁并未总是完全修复这些漏洞，这意味着攻击者通过逆向工程补丁，尝试开发零日漏洞，并能够找到合适的绕过方法。考虑到有时企业无法及时应对这种快速变化的情况，被攻击的可能性非常高。
- en: But what is the benefit for an adversary to compromise Exchange? First of all,
    a successful takeover gives access to the mailboxes of every single user on this
    server. It can then evolve into an internal phishing campaign, sensitive data
    disclosure, and password harvesting in emails. Second, Exchange Service accounts
    may run with high privileges, including domain admin, making full domain takeover
    possible.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 那么攻击者入侵Exchange的好处是什么呢？首先，成功控制后可以访问此服务器上每个用户的邮箱。接下来，它可能演变成一次内部钓鱼活动、敏感数据泄露和邮件中的密码收集。其次，Exchange服务账户可能具有高权限，包括域管理员权限，从而使得完全接管域成为可能。
- en: 'To assess the security of Exchange Server, we can add Exchange Server to DetectionLab;
    however, you would need to deploy these at your end. To spin up Exchange Server,
    you simply run the following commands, assuming you are using Linux:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了评估Exchange Server的安全性，我们可以将Exchange Server添加到DetectionLab中；然而，您需要在自己端进行部署。要启动Exchange
    Server，只需运行以下命令，假设您使用的是Linux：
- en: '[PRE0]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you encounter any problems during the deployment, you can find logs conveniently
    located in the **C:\exchange2016** folder:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在部署过程中遇到任何问题，你可以方便地在**C:\exchange2016**文件夹中找到日志：
- en: '![Figure 1.5 – Logs location for Exchange deployment](image/B18964_01_05.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – Exchange 部署的日志位置](image/B18964_01_05.jpg)'
- en: Figure 1.5 – Logs location for Exchange deployment
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – Exchange 部署的日志位置
- en: Exchange allows remote access via protocols such as **Exchange Web Services**
    (**EWS**), **Exchange ActiveSync** (**EAS**), Outlook Anywhere, and MAPI over
    HTTP. The AutoDiscover service helps to retrieve Exchange configuration, mailbox
    settings, supported protocols, and service URLs. You can find this information
    in the **autodiscover.xml** file in the **autodiscover** virtual directory. **Outlook
    Web Application** (**OWA**) is a minimal web-based email client. This client can
    be accessed with just a browser without Outlook being installed. **Global Address
    List** (**GAL**) is a list of every mail-enabled object in an Active Directory
    forest. Two more concepts we will cover are Outlook rules and forms. Rules are
    an action that is run automatically by Outlook for Windows on incoming/outgoing
    emails. We create the trigger and the action. Server-side rules are executed first,
    then client-side. Outlook forms provide users and/or organizations with email
    customization options, such as the autocompletion of some fields or template text.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Exchange允许通过**Exchange Web Services**（**EWS**）、**Exchange ActiveSync**（**EAS**）、Outlook
    Anywhere和MAPI over HTTP等协议进行远程访问。AutoDiscover服务帮助检索Exchange配置、邮箱设置、支持的协议和服务URL。你可以在**autodiscover.xml**文件中找到这些信息，该文件位于**autodiscover**虚拟目录中。**Outlook
    Web Application**（**OWA**）是一个简化版的基于Web的邮件客户端。用户仅需通过浏览器即可访问此客户端，而不必安装Outlook。**全局地址列表**（**GAL**）是Active
    Directory林中每个启用邮件的对象的列表。我们还将讨论两个概念：Outlook规则和表单。规则是Outlook for Windows在处理收发电子邮件时自动执行的操作。我们设置触发器和动作。服务器端规则首先执行，然后是客户端规则。Outlook表单为用户和/或组织提供电子邮件定制选项，例如自动填写某些字段或模板文本。
- en: In this section, we will discuss tools and techniques for user enumeration and
    password spraying; email address extraction from GAL and **Offline Address Book**
    (**OAB**) or by using **Name Service Provider Interface** (**NSPI**); public point-and-click
    exploits; the exfiltration of sensitive data; and some techniques to get a foothold
    in the target environment through the client software. A great mind map for attacking
    Exchange on the perimeter was created by the same company that created the GOADv2
    lab and is available on GitHub[9].
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论用户枚举和密码喷射的工具与技术；从 GAL 和**离线地址簿**（**OAB**）或使用**名称服务提供接口**（**NSPI**）提取电子邮件地址；公共的点击式漏洞利用；敏感数据的提取；以及通过客户端软件在目标环境中建立立足点的一些技术。由同一家公司创建的攻防大纲（GOADv2实验室）中，提供了一个出色的攻击Exchange边界的思维导图，并且已上传至GitHub[9]。
- en: Our first practical task is to enumerate users and try to obtain a valid set
    of credentials by performing a password spray attack.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个实际任务是枚举用户，并通过执行密码喷射攻击尝试获得一组有效的凭证。
- en: User enumeration and password spraying
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户枚举和密码喷射攻击
- en: 'Password spray attacks require user enumeration. Firstly, we need to create
    a list with possible usernames and enumerate the Active Directory domain name.
    Secondly, we need to enumerate existing users via OWA and then perform a password
    spray attack. To perform these actions, we are going to use the **MailSniper**
    tool[10]. The first step can be done using **Open Source Intelligence** (**OSINT**)
    techniques by doing DNS reconnaissance, utilizing advanced search operators in
    search engines and scraping social media and the company’s external resources.
    There are plenty of open source tools available to perform these activities in
    different stages of their development life cycle. If there are email addresses
    published on external websites, attackers may be lucky to find an email address
    format such as **surname.name@company.com** or **name.surname@company.com**. Also,
    there is a site, [https://hunter.io/](https://hunter.io/), that can help with
    finding out the most common email format used in a company. If there are only
    general addresses such as info, security, GDPR, then we can try to use a script
    such as **namemash**[11] and/or **EmailAddressMangler**[12], which can create
    a list of all possible username permutations. After this step, the attacker will
    have a list of potential users that need to be validated. Now we need to find
    out the domain name with the help of the **DomainHarvestOWA** function from **MailSniper**.
    It has two options on how to obtain the correct domain name. One is to extract
    the name from the **WWW-Authenticate** header returned in the web response by
    the server after a request has been sent to [https://mail.target.com/autodiscover/Autodiscover.xml](https://mail.target.com/autodiscover/Autodiscover.xml)
    and [https://mail.target.com/EWS/Exchange.asmx](https://mail.target.com/EWS/Exchange.asmx).
    The second option is to brute-force the name by using a supplied domain list.
    Requests will be sent to https://mail.target.com/owa/ and the response time will
    be calculated. A request with an invalid domain has a much shorter response time
    than a valid one. Apparently, the username does not influence the delay. Let us
    try this reconnaissance activity:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 密码喷洒攻击需要用户枚举。首先，我们需要创建一个可能的用户名列表并枚举 Active Directory 域名。其次，我们需要通过 OWA 枚举现有用户，然后进行密码喷洒攻击。为了执行这些操作，我们将使用
    **MailSniper** 工具[10]。第一步可以通过使用 **开源情报** (**OSINT**) 技术完成，通过进行 DNS 侦察，利用搜索引擎中的高级搜索运算符并抓取社交媒体和公司的外部资源。有许多开源工具可以在开发生命周期的不同阶段执行这些活动。如果外部网站上发布了电子邮件地址，攻击者可能会幸运地找到像
    **surname.name@company.com** 或 **name.surname@company.com** 这样的电子邮件地址格式。此外，还有一个网站
    [https://hunter.io/](https://hunter.io/)，可以帮助找出公司中最常用的电子邮件格式。如果只有像 info、security、GDPR
    这样的通用地址，那么我们可以尝试使用像 **namemash**[11] 和/或 **EmailAddressMangler**[12] 这样的脚本，这些脚本可以创建所有可能的用户名排列列表。完成此步骤后，攻击者将拥有一个需要验证的潜在用户列表。现在，我们需要借助
    **MailSniper** 中的 **DomainHarvestOWA** 功能来找出域名。它有两种获取正确域名的选项。一种是从服务器在发送请求到 [https://mail.target.com/autodiscover/Autodiscover.xml](https://mail.target.com/autodiscover/Autodiscover.xml)
    和 [https://mail.target.com/EWS/Exchange.asmx](https://mail.target.com/EWS/Exchange.asmx)
    后返回的 **WWW-Authenticate** 头中提取名称。第二种选择是使用提供的域名列表进行暴力破解，通过将请求发送到 https://mail.target.com/owa/
    并计算响应时间。无效域名的请求响应时间比有效域名的请求响应时间要短得多。显然，用户名不会影响延迟。让我们尝试这个侦察活动：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The result of running the preceding command can be found in the following screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述命令的结果可以在以下截图中找到：
- en: '![Figure 1.6 – Discovering the FQDN of the mail server](image/B18964_01_06.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – 发现邮件服务器的 FQDN](image/B18964_01_06.jpg)'
- en: Figure 1.6 – Discovering the FQDN of the mail server
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – 发现邮件服务器的 FQDN
- en: 'After determining the domain name, our next step is user enumeration. This
    is a purely time-based enumeration technique. **MailSniper** calculates the time
    difference between authentication attempt responses. When a valid username is
    found, the response time will be significantly shorter:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 确定域名后，我们的下一步是用户枚举。这是一种纯粹基于时间的枚举技术。**MailSniper** 计算身份验证尝试响应之间的时间差。当找到有效的用户名时，响应时间将显著缩短：
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result of the enumeration can be found in the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举结果可以在以下截图中找到：
- en: '![Figure 1.7 – Successful user enumeration using OWA](image/B18964_01_07.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – 使用 OWA 成功进行用户枚举](image/B18964_01_07.jpg)'
- en: Figure 1.7 – Successful user enumeration using OWA
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – 使用 OWA 成功进行用户枚举
- en: 'We were able to find two users – **Administrator** and **vinegrep**. Now, let
    us perform a password spray attack against OWA. In this scenario, the tool will
    spray a single password against a supplied list of usernames:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功找到两个用户——**Administrator**和**vinegrep**。现在，让我们对OWA执行密码喷射攻击。在这个场景中，工具会针对提供的用户名列表喷射一个密码：
- en: '[PRE3]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We are able to successfully obtain a valid set of credentials for the user
    **vinegrep**:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功获取了用户**vinegrep**的有效凭证集：
- en: '![Figure 1.8 – Valid set of credentials found for user vinegrep](image/B18964_01_08.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图1.8 – 找到有效的凭证集，用户为vinegrep](image/B18964_01_08.jpg)'
- en: Figure 1.8 – Valid set of credentials found for user vinegrep
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.8 – 找到有效的凭证集，用户为vinegrep
- en: A password spray attack can be performed against EWS as well with **MailSniper**’s
    **Invoke-PasswordSprayEWS** function. It is important to note that the obtained
    set of valid credentials will not grant access if **Multi-Factor Authentication**
    (**MFA**) is enforced. MFA will require another factor, which can be anything
    starting from an authentication application on a phone to a USB security token
    or another type of secret. Like any security measure, MFA can be bypassed if it
    is misconfigured or an adversary lures the user to perform the second step of
    authentication instead of them.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以使用**MailSniper**的**Invoke-PasswordSprayEWS**功能对EWS执行密码喷射攻击。需要注意的是，如果**多因素身份验证**（**MFA**）被强制执行，那么获得的有效凭证集将无法授予访问权限。MFA将要求提供额外的身份验证因素，这些因素可以是从手机上的身份验证应用程序到USB安全令牌或其他类型的密钥。像任何安全措施一样，如果MFA配置错误，或者攻击者诱使用户执行身份验证的第二步而不是自己完成，MFA也可以被绕过。
- en: The next step is to get the most out of this valid set of credentials and access
    to a mailbox. In the following section, we will learn how to dump an address book
    and exfiltrate sensitive data.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是充分利用这组有效的凭证和邮箱访问权限。在接下来的章节中，我们将学习如何转储地址簿并外泄敏感数据。
- en: Dumping and exfiltrating
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 转储和外泄
- en: Assuming MFA has been bypassed or not enforced and an adversary has successfully
    logged in to the victim’s mailbox, what are the next steps? There are a few available
    scenarios. Firstly, the attacker can go through emails; maybe some sensitive internal
    information, including passwords, certificates, documents, and endpoint addresses,
    can be found. As a security professional, before doing so, ensure that it is in
    line with the rules of engagement. The last thing you want to do is get unauthorized
    access to the customer’s confidential data.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 假设多因素身份验证（MFA）已经被绕过或未被强制执行，并且攻击者成功登录了受害者的邮箱，接下来的步骤是什么？有几个可能的场景。首先，攻击者可以浏览电子邮件；也许能找到一些敏感的内部信息，包括密码、证书、文档和端点地址。在进行此操作之前，作为安全专家，务必确保符合参与规则。你最不希望做的事情就是未授权访问客户的机密数据。
- en: Secondly, run an internal phishing campaign. Internal email processing rules
    may be more relaxed from a security point of view – for example, attachments being
    allowed. Also, such a campaign has a much higher success rate as users will be
    more likely to open an attachment/click a link from a colleague or manager. But
    it is still not a guarantee as we do not have control over non-email mediums.
    We can send an email to the victim’s colleague while they are discussing something
    in real life. However, there is a moral aspect to consider as well. Depending
    on the targeted company’s culture and rules, the user may lose their job.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，运行内部钓鱼攻击。内部电子邮件处理规则在安全性上可能更宽松——例如，允许附件。此外，这样的攻击活动成功率更高，因为用户更有可能打开附件或点击同事或经理发来的链接。但这仍然不能保证成功，因为我们无法控制非电子邮件媒介。我们可以在受害者的同事正在现实生活中讨论某事时向他们发送电子邮件。然而，也需要考虑道德因素。根据目标公司的文化和规则，用户可能会因此失业。
- en: 'Thirdly, we can extract all the email addresses of the company and some information
    about Active Directory without disclosing any mailbox content. It is possible
    by dumping GAL or OAB or by abusing NSPI. Let us extract GAL via a compromised
    account using **MailSniper**. This module connects to OWA and utilizes the **FindPeople**
    method to collect email addresses. This method is available from Exchange 2013
    and requires the **AddressListId** value from the **GetPeopleFilters** URL:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们可以提取公司的所有电子邮件地址以及一些关于Active Directory的信息，而无需泄露任何邮箱内容。这可以通过转储GAL或OAB，或者通过滥用NSPI来实现。让我们通过一个被攻破的账户使用**MailSniper**提取GAL。该模块连接到OWA，并利用**FindPeople**方法收集电子邮件地址。此方法适用于Exchange
    2013及更高版本，并需要从**GetPeopleFilters** URL获取**AddressListId**值：
- en: '[PRE4]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Successful GAL extraction can be seen in the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 成功提取GAL的截图如下所示：
- en: '![](image/B18964_01_09.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](image/B18964_01_09.jpg)'
- en: Figure 1.9 – GAL extraction
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – GAL 提取
- en: With newly found email addresses, we can relaunch our password spray attack.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 使用新发现的邮件地址，我们可以重新发起密码喷洒攻击。
- en: 'Another way to dump the email addresses of all Exchange users is by downloading
    OAB files. An important caveat is that extracting the primary email address of
    an existing user is required as well as any valid domain account. The steps are
    as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种导出所有 Exchange 用户邮件地址的方法是下载 OAB 文件。一个重要的注意事项是，必须提取现有用户的主邮件地址，并且需要有效的域帐户。步骤如下：
- en: Issue the web request to the **autodiscover** endpoint to retrieve **autodiscover.xml**.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向**autodiscover**端点发出 web 请求以检索**autodiscover.xml**。
- en: Search for the **OABUrl** value in the response, which is a path to the directory
    with OAB files. Do not miss other useful information, such as the domain user’s
    SID and domain controller name.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在响应中搜索**OABUrl**值，它是指向 OAB 文件目录的路径。不要忽视其他有用的信息，如域用户的 SID 和域控制器名称。
- en: Request **oab.xml** by using the **OABUrl** value to list OAB filenames.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**OABUrl**值请求**oab.xml**，以列出 OAB 文件名。
- en: In **oab.xml**, search for a filename that includes **data** and has the **.****lzx**
    extension.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**oab.xml**文件中，搜索包含**data**且具有**.****lzx**扩展名的文件名。
- en: Download this file and parse it.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载此文件并解析它。
- en: 'We will need a Linux machine to run the following commands. To automate OABUrl
    extraction, we will use the script from GitHub[13]. The script helps with steps
    1 and 2\. The result can be found in the following screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将需要一台 Linux 机器来运行以下命令。为了自动化 OABUrl 提取，我们将使用 GitHub 上的脚本[13]。该脚本帮助完成第 1 和第
    2 步。结果可以在以下截图中找到：
- en: '![Figure 1.10 – OABUrl extraction](image/B18964_01_10.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.10 – OABUrl 提取](image/B18964_01_10.jpg)'
- en: Figure 1.10 – OABUrl extraction
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – OABUrl 提取
- en: 'Next, we will copy the **oab.xml** file and parse it to find the URL for the
    **.lzx** file with the word **data** in the filename. This is our GAL OAB file.
    As a last step, we will save the file and parse through it to find email addresses:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将复制**oab.xml**文件并解析它，以找到包含**data**字样的文件名的**.lzx**文件的 URL。这就是我们的 GAL OAB
    文件。最后一步，我们将保存该文件并解析其中的邮件地址：
- en: '[PRE5]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'GAL emails from OAB can be seen in the following screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在以下截图中看到从 OAB 提取的 GAL 邮件：
- en: '![Figure 1.11 – GAL email extraction using OAB](image/B18964_01_11.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.11 – 使用 OAB 提取 GAL 邮件](image/B18964_01_11.jpg)'
- en: Figure 1.11 – GAL email extraction using OAB
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11 – 使用 OAB 提取 GAL 邮件
- en: 'Another way to dump an address book via NSPI was discovered by *Positive Technologies*
    in their research[14]. A tool named **Exchanger** is now a part of Impacket, so
    we can use it without any additional installation. As a first step, we list tables
    to get the GUID and then, using the GUID, dump promising tables:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 NSPI 导出通讯簿的另一种方式是由*Positive Technologies*在他们的研究中发现的[14]。一个名为**Exchanger**的工具现在是
    Impacket 的一部分，因此我们可以直接使用它，无需额外安装。第一步，我们列出表格以获取 GUID，然后使用 GUID 导出有前景的表格：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The result of the dump can be seen in the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 导出结果可以在以下截图中看到：
- en: '![Figure 1.12 – Dumping an address book by its GUID via NSPI](image/B18964_01_12.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.12 – 通过 NSPI 根据 GUID 导出通讯簿](image/B18964_01_12.jpg)'
- en: Figure 1.12 – Dumping an address book by its GUID via NSPI
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12 – 通过 NSPI 根据 GUID 导出通讯簿
- en: 'Now, we can relaunch our password spray attack using extracted emails. We can
    also use this tool to dump Active Directory objects by their GUIDs. Please note
    that first we need to obtain the GUID, for example, with a PowerShell command,
    and only then pass it to Exchanger:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用提取的邮件地址重新发起密码喷洒攻击。我们还可以使用该工具通过 GUID 导出 Active Directory 对象。请注意，首先我们需要获取
    GUID，例如通过 PowerShell 命令，然后将其传递给 Exchanger：
- en: '[PRE7]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The result of the Exchanger command execution can be seen in the following
    screenshot:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 执行 Exchanger 命令后的结果可以在以下截图中看到：
- en: '![Figure 1.13 – Dumping an Active Directory object by its GUID via NSPI](image/B18964_01_13.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.13 – 通过 NSPI 根据 GUID 导出 Active Directory 对象](image/B18964_01_13.jpg)'
- en: Figure 1.13 – Dumping an Active Directory object by its GUID via NSPI
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.13 – 通过 NSPI 根据 GUID 导出 Active Directory 对象
- en: On the topic of data exfiltration, we cannot refrain from mentioning a project
    called **PEAS**[15]. This tool was developed based on MWR research[16] to run
    commands on an ActiveSync server. The idea is that we can enumerate and access
    file shares in the domain through Exchange Server. The main cons of this tool
    are that the ActiveSync protocol must be enabled on the server and for the client’s
    account. Also, ActiveSync should be configured in a way that allows UNC paths
    and doesn’t limit SMB servers.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据外泄的讨论中，我们无法不提到一个名为**PEAS**[15]的项目。该工具基于 MWR 研究[16]开发，用于在 ActiveSync 服务器上运行命令。其思路是通过
    Exchange Server 枚举并访问域中的文件共享。该工具的主要缺点是，必须在服务器和客户端账户上启用 ActiveSync。此外，ActiveSync
    配置应该允许 UNC 路径，并且不限制 SMB 服务器。
- en: Another way to remotely compromise Exchange is through exploitable vulnerabilities.
    In recent years, quite a few critical vulnerabilities have been found and disclosed.
    In the next section, we will cover available public exploits.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 远程危害 Exchange 的另一种方式是通过可利用的漏洞。近年来，发现并公开了不少关键漏洞。在下一部分，我们将介绍已公开的利用方式。
- en: Zero2Hero exploits
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Zero2Hero 利用
- en: In this section, we will discuss the **Proxy*** exploit family, CVE-2020-0688,
    and **PrivExchange** (CVE-2018-8581). All of them have different root causes,
    but they all prove that Exchange is an extremely complex piece of software with
    a wide attack surface.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将讨论**Proxy*** 漏洞家族，CVE-2020-0688 和 **PrivExchange**（CVE-2018-8581）。它们的根本原因各不相同，但都证明了
    Exchange 是一个极其复杂的软件，拥有广泛的攻击面。
- en: We will start with the **Proxy*** exploit family. This class of vulnerabilities
    appeared when adversaries and researchers changed focus to a new attack surface
    – **Client Access Service** (**CAS**). We will start with the most famous vulnerability
    in Exchange history – **ProxyLogon**[17]. *Orange Tsai* from DEVCORE discovered
    two vulnerabilities (CVE-2021-26855 and CVE-2021-27065), which in combination
    allow bypassing authentication and achieving remote code execution.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 **Proxy*** 漏洞家族开始讨论。这类漏洞出现在对手和研究人员将重点转移到新的攻击面——**客户端访问服务**（**CAS**）时。我们将从
    Exchange 历史上最著名的漏洞——**ProxyLogon**[17]开始。*Orange Tsai* 来自 DEVCORE 发现了两个漏洞（CVE-2021-26855
    和 CVE-2021-27065），这两个漏洞结合起来可以绕过身份验证并实现远程代码执行。
- en: CVE-2021-26855 is a **Server-Side Request Forgery** (**SSRF**) that allows bypassing
    authentication and sending requests with the highest privileges. When a user sends
    a request to the Exchange frontend, it will flow through the HTTP proxy module,
    which will then evaluate it and send it to the backend. It is possible to forge
    a server-side request by setting the X-BEResource cookie value to the desired
    backend URL. There are two scenarios to exploit this vulnerability. The first
    scenario is to access emails, but it requires at least two Exchange servers in
    the target environment. Another one is to authenticate to **Exchange Control Panel**
    (**ECP**) and then upload the web shell (CVE-2021-27065 and CVE-2021-26858). An
    excellent manual with step-by-step instructions and detections was published by
    *BI.ZONE*[18].
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: CVE-2021-26855 是一种**服务器端请求伪造**（**SSRF**），允许绕过身份验证并发送具有最高权限的请求。当用户向 Exchange
    前端发送请求时，该请求会通过 HTTP 代理模块流动，然后由该模块评估并将其发送到后端。通过将 X-BEResource cookie 值设置为所需的后端
    URL，可以伪造服务器端请求。利用此漏洞有两种场景。第一种是访问电子邮件，但需要目标环境中至少有两台 Exchange 服务器。另一种是身份验证到 **Exchange
    控制面板**（**ECP**），然后上传 web shell（CVE-2021-27065 和 CVE-2021-26858）。一个包含逐步说明和检测的优秀手册已由*BI.ZONE*[18]发布。
- en: CVE-2021-27065 is a post-authentication arbitrary file write. In a nutshell,
    the attacker logs in to ECP and then, in the OAB virtual directory, edits the
    **External URL** field by inserting web shell code and requests a reset of the
    directory in order to save the web shell.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: CVE-2021-27065 是一种身份验证后任意文件写入漏洞。简而言之，攻击者登录到 ECP，然后在 OAB 虚拟目录中，通过插入 web shell
    代码编辑**外部 URL**字段，并请求重置该目录以保存 web shell。
- en: 'To check whether Exchange is vulnerable, we can utilize a module from Metasploit
    – **auxiliary/scanner/http/exchange_proxylogon**. The result of the scan is as
    follows:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查 Exchange 是否存在漏洞，我们可以利用 Metasploit 的一个模块——**auxiliary/scanner/http/exchange_proxylogon**。扫描结果如下：
- en: '![Figure 1.14 – Exchange is vulnerable to a ProxyLogon vulnerability](image/B18964_01_14.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.14 – Exchange 存在 ProxyLogon 漏洞](image/B18964_01_14.jpg)'
- en: Figure 1.14 – Exchange is vulnerable to a ProxyLogon vulnerability
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.14 – Exchange 存在 ProxyLogon 漏洞
- en: 'For reliable exploitation, we can use a Metasploit exploit – **exploit/windows/http/exchange_proxylogon_rce**.
    All we need is one valid email address and that is it. The result of the exploitation
    can be seen in the following screenshot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 对于可靠的利用，我们可以使用Metasploit中的利用——**exploit/windows/http/exchange_proxylogon_rce**。我们只需要一个有效的邮箱地址，仅此而已。利用结果如下所示：
- en: '![Figure 1.15 – Exploitation of the ProxyLogon vulnerability](image/B18964_01_15.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图1.15 – ProxyLogon漏洞的利用](image/B18964_01_15.jpg)'
- en: Figure 1.15 – Exploitation of the ProxyLogon vulnerability
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.15 – ProxyLogon漏洞的利用
- en: 'Now let us cover **ProxyOracle**[19], which consists of the CVE-2021-31195
    (Reflected Cross-Site Scripting) and CVE-2021-31196 (Padding Oracle Attack on
    Exchange Cookies Parsing) vulnerabilities, which allow recovering the victim’s
    username and password in plaintext from the cookie. To check whether the target
    installation is vulnerable (in our case, Exchange Server in the lab with the IP
    address **192.168.56.106**), try to put this payload in the browser address bar:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来讨论**ProxyOracle**[19]，它由CVE-2021-31195（反射型跨站脚本攻击）和CVE-2021-31196（Exchange
    Cookie解析中的填充Oracle攻击）漏洞组成，这些漏洞允许从cookie中以明文形式恢复受害者的用户名和密码。为了检查目标安装是否存在漏洞（在我们的案例中是IP地址为**192.168.56.106**的实验室中的Exchange
    Server），可以尝试在浏览器地址栏中放入此有效载荷：
- en: '[PRE8]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you see a pop-up alert box, as shown in the following screenshot, you found
    a vulnerable target:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到弹出警告框，如下图所示，那就意味着你找到了一个易受攻击的目标：
- en: '![Figure 1.16 – Reflected XSS in Exchange Server is required for successful
    ProxyOracle exploitation](image/B18964_01_16.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图1.16 – Exchange Server中的反射型XSS是成功利用ProxyOracle所必需的](image/B18964_01_16.jpg)'
- en: Figure 1.16 – Reflected XSS in Exchange Server is required for successful ProxyOracle
    exploitation
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.16 – Exchange Server中的反射型XSS是成功利用ProxyOracle所必需的
- en: 'Next on our list is another pre-authenticated RCE – **ProxyShell**[20]. It
    chains three vulnerabilities: CVE-2021-34473 (pre-authenticated path confusion,
    which leads to **Access Control List** (**ACL**) bypass), CVE-2021-34523 (privilege
    elevation on the Exchange PowerShell backend), and CVE-2021-31207 (post-authentication
    arbitrary file write).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是我们列表中的另一个预认证RCE漏洞——**ProxyShell**[20]。它链式利用了三个漏洞：CVE-2021-34473（预认证路径混淆，导致**访问控制列表**（**ACL**）绕过），CVE-2021-34523（Exchange
    PowerShell后端的特权提升），以及CVE-2021-31207（认证后任意文件写入）。
- en: In brief, the first vulnerability abuses the faulty URL normalization process
    in order to access an arbitrary backend URL as the Exchange machine account. The
    second one is the elevation of privileges by putting the Exchange admin in the
    **X-Rps-CAT** request parameter, which is used to restore the user identity when
    the **X-CommonAccessToken** header is missing. The third one is writing a shell
    via Exchange PowerShell commands.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，第一个漏洞利用了错误的URL标准化过程，以便以Exchange机器账户身份访问任意后端URL。第二个漏洞通过在**X-Rps-CAT**请求参数中放入Exchange管理员信息，实现特权提升，该参数用于在**X-CommonAccessToken**头缺失时恢复用户身份。第三个漏洞则是通过Exchange
    PowerShell命令写入shell。
- en: 'Metasploit has our back here as well with **exploit/windows/http/exchange_proxyshell_rce**.
    The result of the exploitation is as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit同样为我们提供了支持，利用——**exploit/windows/http/exchange_proxyshell_rce**。利用结果如下：
- en: '![Figure 1.17 – ProxyShell successful exploitation](image/B18964_01_17.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图1.17 – ProxyShell成功利用](image/B18964_01_17.jpg)'
- en: Figure 1.17 – ProxyShell successful exploitation
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.17 – ProxyShell成功利用
- en: 'It is time to discuss the **ProxyNotShell**[21] vulnerability. It is similar
    to ProxyShell, as it consists of a pair of vulnerabilities, which are SSRF (CVE-2022–41040)
    and RCE via PowerShell (CVE-2022–41082). The difference this time is that it requires
    the attacker to be authenticated. Again, we have an exploit available in Metasploit–
    **exploit/windows/http/exchange_proxynotshell_rce**. An important note is that
    the exploit in Metasploit is only available for Exchange 2019\. We can see the
    result of running it against our environment as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候讨论**ProxyNotShell**[21]漏洞了。它与ProxyShell相似，由一对漏洞组成，分别是SSRF（CVE-2022–41040）和通过PowerShell的RCE（CVE-2022–41082）。这次的区别在于，攻击者需要经过认证。我们在Metasploit中同样可以找到一个利用——**exploit/windows/http/exchange_proxynotshell_rce**。需要注意的是，Metasploit中的这个利用仅适用于Exchange
    2019。我们可以看到在我们的环境中运行后的结果如下：
- en: '![Figure 1.18 – ProxyNotShell exploitation aborted due to the Exchange version](image/B18964_01_18.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图1.18 – 由于Exchange版本问题，ProxyNotShell利用被中止](image/B18964_01_18.jpg)'
- en: Figure 1.18 – ProxyNotShell exploitation aborted due to the Exchange version
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.18 – 由于Exchange版本问题，ProxyNotShell利用被中止
- en: Lastly, we will briefly talk about **ProxyRelay**[22] and **ProxyNotRelay**[23].
    The first exploit is a relay attack to either another Exchange Server (no CVE),
    backend (CVE-2022-21979), frontend (CVE-2021-33768), or Windows DCOM (CVE-2021-26414).
    The idea is identical to other coerced authentication and relays that we will
    cover later on in this book. ProxyNotRelay is not a separate vulnerability, but
    more a combination of ProxyRelay and ProxyNotShell.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将简要讨论 **ProxyRelay**[22] 和 **ProxyNotRelay**[23]。第一个漏洞是对另一个 Exchange 服务器（没有
    CVE）、后台（CVE-2022-21979）、前端（CVE-2021-33768）或 Windows DCOM（CVE-2021-26414）的中继攻击。其思路与本书后续将讨论的其他强制认证和中继攻击相同。ProxyNotRelay
    不是一个独立的漏洞，而是 ProxyRelay 和 ProxyNotShell 的结合体。
- en: Now we are going to discuss two old vulnerabilities – CVE-2020-0688 and PrivExchange
    (CVE-2018-8581). It is very unlikely that you will encounter them in real life,
    but the idea is to show other attack surfaces.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将讨论两个较老的漏洞——CVE-2020-0688 和 PrivExchange（CVE-2018-8581）。虽然你在实际中遇到它们的可能性很小，但这部分内容的目的是展示其他的攻击面。
- en: CVE-2020-0688[24] allows an authenticated attacker to execute arbitrary code
    due to the fixed cryptographic keys used during Exchange installation. Let us
    dive a bit deeper into the details. The bug was found in the **Exchange Control
    Panel** (**ECP**). The **validationKey** and **decryptionKey** values are supposed
    to be randomly generated per installation. These keys provide security for **ViewState**,
    which is a method to preserve the page and control values in ASP.NET web applications.
    An important caveat is that **ViewState** is serialized and stored on the client
    side. What is serialization? In plain words, it is a process to convert complex
    data into a sequence of bytes with a preserved state in order to be sent or stored.
    If the attacker can manipulate such data by supplying their own malicious values,
    insecure deserialization on the server side in certain circumstances may lead
    to RCE.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: CVE-2020-0688[24] 允许经过身份验证的攻击者由于 Exchange 安装过程中使用的固定加密密钥执行任意代码。让我们深入了解这个漏洞的细节。该漏洞存在于
    **Exchange 控制面板**（**ECP**）中。**validationKey** 和 **decryptionKey** 的值应当在每次安装时随机生成。这些密钥为
    **ViewState** 提供安全保障，**ViewState** 是一种在 ASP.NET Web 应用程序中保存页面和控制值的方法。一个重要的警告是，**ViewState**
    会被序列化并存储在客户端。什么是序列化？简单来说，它是将复杂数据转化为字节序列的过程，以便能够发送或存储，并保留其状态。如果攻击者能够通过提供恶意值来操纵这些数据，在某些情况下，服务器端的不安全反序列化可能导致
    RCE（远程代码执行）。
- en: 'After logging in to ECP, an adversary collects **ViewStateUserKey** from the
    **ASP.NET_SessionID** cookie and the **__VIEWSTATEGENERATOR** value from the login
    page by simply using the browser with Dev Tools. The **validationkey** value is
    known (**CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF**). To generate a malicious
    payload for **ViewState**, we will use a tool called **ysoserial.net**[25]. This
    tool is a collection of known gadget chains discovered in common libraries. Gadgets
    are snippets of code that exist in the library code and may help the attacker
    to execute the payload by being executed one by one. This exploit uses the **TextFormattingRunProperties**
    library. We can run the following command to create a file in **C:\**:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 登录 ECP 后，攻击者通过浏览器和开发者工具收集 **ViewStateUserKey**（来自 **ASP.NET_SessionID** cookie）和登录页面中的
    **__VIEWSTATEGENERATOR** 值。**validationkey** 值是已知的（**CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF**）。为了生成恶意载荷，我们将使用一个叫做
    **ysoserial.net**[25] 的工具。这个工具包含了在常见库中发现的已知小工具链。小工具是库代码中存在的代码片段，可以帮助攻击者通过逐个执行来触发恶意载荷。这个漏洞使用了
    **TextFormattingRunProperties** 库。我们可以运行以下命令在 **C:\** 创建文件：
- en: '[PRE9]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The result of the execution is as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 执行结果如下：
- en: '![Figure 1.19 – CVE-2020-0688 successful exploitation](image/B18964_01_19.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.19 – CVE-2020-0688 成功利用](image/B18964_01_19.jpg)'
- en: Figure 1.19 – CVE-2020-0688 successful exploitation
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.19 – CVE-2020-0688 成功利用
- en: The file was created in **C:\**.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 文件创建在 **C:\**。
- en: '![Figure 1.20 – File was created in C:\ with the output of the whoami command](image/B18964_01_20.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.20 – 文件创建在 C:\，并包含 whoami 命令的输出](image/B18964_01_20.jpg)'
- en: Figure 1.20 – File was created in C:\ with the output of the whoami command
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.20 – 文件创建在 C:\，并包含 whoami 命令的输出
- en: The second vulnerability requires three conditions and is called **PrivExchange**[26].
    The first condition was that Exchange should have way too high privileges in the
    domain. The **Exchange Windows Permissions** group had **WriteDacl** permission
    on the domain object, which allowed the attacker to obtain **DCSync** rights.
    **DCSync** is a privilege that allows you to sync all the hashes in the domain.
    Usually, this privilege is used by domain controllers during replication. The
    attacker just requests a domain controller to send hashes for synchronization.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个漏洞需要三个条件，称为**PrivExchange**[26]。第一个条件是 Exchange 在域中的权限过高。**Exchange Windows
    Permissions**组在域对象上具有**WriteDacl**权限，这使攻击者能够获得**DCSync**权限。**DCSync**是一项允许你同步域中所有哈希值的特权。通常，这一特权由域控制器在复制过程中使用。攻击者只需请求一个域控制器发送哈希值以进行同步。
- en: The second condition was the possibility of NTLM relay for machine accounts
    and the third was that the attacker could force Exchange to authenticate against
    the listener via the **PushSubscription** feature. We will discuss relay in more
    detail in [*Chapter 5*](B18964_05.xhtml#_idTextAnchor093).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个条件是机器账户的 NTLM 中继可能性，第三个条件是攻击者可以强制 Exchange 通过**PushSubscription**功能对监听器进行身份验证。我们将在[*第五章*](B18964_05.xhtml#_idTextAnchor093)中更详细地讨论中继问题。
- en: 'Let us run the attack by using the **ntlmrelayx** tool and the **privexchange**
    exploit[27]:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过使用**ntlmrelayx**工具和**privexchange**漏洞[27]来执行攻击：
- en: '[PRE10]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The result of the command is as follows. It’s important to mention that the
    user should have a mailbox on Exchange Server:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 命令的结果如下。值得一提的是，用户应在 Exchange Server 上有一个邮箱：
- en: '![Figure 1.21 – PushSubscription API call was successful](image/B18964_01_21.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.21 – PushSubscription API 调用成功](image/B18964_01_21.jpg)'
- en: Figure 1.21 – PushSubscription API call was successful
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.21 – PushSubscription API 调用成功
- en: As we deployed Exchange Server 2016 CU12, it is not vulnerable to this attack.
    Microsoft removed the automatic authentication of Exchange when sending out notifications.
    Also, Exchange permissions were reduced.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已部署 Exchange Server 2016 CU12，因此它不易受到此攻击。Microsoft 移除了在发送通知时 Exchange 的自动身份验证功能。此外，Exchange
    权限也被降低了。
- en: The next section will be about getting an initial foothold in the organization
    via Outlook rules, forms, and the home page.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分将讨论通过 Outlook 规则、表单和主页获取初步立足点的方法。
- en: Gaining a foothold
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取立足点
- en: In this section, we will discuss ways to achieve RCE after mailbox compromise
    – via rules, forms, and the folder home page. These methods can still work if
    Outlook is not patched. An important note is that we are talking about client-side
    rules in Outlook.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论在邮箱被攻破后如何通过规则、表单和文件夹主页实现远程代码执行（RCE）的方法。如果 Outlook 没有被修补，这些方法仍然有效。需要注意的是，我们讨论的是
    Outlook 中的客户端规则。
- en: 'Let us start with Outlook rules[28]. Rules are stored in Exchange Server and
    the new Outlook instance receives all existing rules. We are interested in the
    action part of the rule and what triggers it. When we create a rule, two actions
    look promising: start application and run script. To execute the attack, we need
    a valid set of credentials, MAPI over HTTP enabled, and a malicious file dropped
    on disk or accessible via the UNC path (WebDAV can be used as well). This attack
    will not work on patched Outlook 2016 and upward. To perform this attack, we can
    use a tool called Ruler[29]. The following command will create a rule and trigger
    it after 30 seconds:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 Outlook 规则[28]开始。规则存储在 Exchange 服务器中，新的 Outlook 实例会接收所有现有的规则。我们关注的是规则的动作部分及其触发条件。当我们创建规则时，有两个动作看起来很有前景：启动应用程序和运行脚本。要执行攻击，我们需要有效的凭据、启用的
    MAPI over HTTP，并且需要将恶意文件放置在磁盘上或通过 UNC 路径（也可以使用 WebDAV）访问。此攻击在已修补的 Outlook 2016
    及更高版本上无法使用。为了执行此攻击，我们可以使用一个名为 Ruler[29]的工具。以下命令将在 30 秒后创建并触发规则：
- en: '[PRE11]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The rule was successfully created:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 规则已成功创建：
- en: '![Figure 1.22 – Creating a rule](image/B18964_01_22.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.22 – 创建规则](image/B18964_01_22.jpg)'
- en: Figure 1.22 – Creating a rule
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.22 – 创建规则
- en: Two important caveats are that we can’t provide command-line arguments and outgoing
    WebDAV traffic needs to be allowed. Also, after the Microsoft patch (KB3191938)
    in June 2013 for Outlook[30], rules to run both an application and a script were
    disabled by default.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个重要的注意事项：我们不能提供命令行参数，且需要允许外发的 WebDAV 流量。此外，在 2013 年 6 月的 Microsoft 补丁（KB3191938）更新之后，Outlook[30]
    默认禁用了同时运行应用程序和脚本的规则。
- en: 'Next, we will cover Outlook forms[31]. It was introduced after the Rule vector
    was killed by Microsoft. The idea is that we can create our own form with VBScript
    code inside. Luckily, this script engine is separate from the VBA Macro script
    engine, so disabling macros will not help. To trigger the form remotely, we need
    to send an email of the correct message class. We need to create the same form
    in Outlook. This technique is a great way to achieve persistence. Even if the
    victim changes the password, we can just send an email and get our shell. To run
    this attack, we can use Ruler again:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论Outlook表单[31]。它是在微软杀死规则向量后引入的。其思想是我们可以创建一个内部包含VBScript代码的自定义表单。幸运的是，这个脚本引擎与VBA宏脚本引擎是分开的，因此禁用宏并不会起作用。为了远程触发表单，我们需要发送一个正确的邮件消息类型。我们需要在Outlook中创建相同的表单。这项技术是实现持久化的好方法。即使受害者更改了密码，我们也可以只发送一封电子邮件并获得我们的Shell。要运行此攻击，我们可以再次使用标尺：
- en: '[PRE12]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In September 2017, when the KB4011091 update for Outlook[32] was published,
    the custom form script vector was destroyed.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 2017年9月，当Outlook的KB4011091更新[32]发布时，定制表单脚本向量被摧毁。
- en: 'There is a third vector to discuss, called the Outlook home page[33]. The home
    page allows us to customize the default view for any folder by specifying a URL
    to be loaded and displayed when the folder is open. Code execution comes from
    the **OutlookViewCtl** CLSID (**0006F063-0000-0000-C000-000000000046**) embedded
    as an object and available in the **CreateObject** method. All we need is to create
    our custom home page and, with the help of ruler, set it for the user:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个第三个向量需要讨论，称为Outlook主页[33]。主页允许我们通过指定一个URL，当文件夹被打开时加载并显示该URL，来自定义任何文件夹的默认视图。代码执行来自**OutlookViewCtl**
    CLSID（**0006F063-0000-0000-C000-000000000046**），它作为对象嵌入并可以在**CreateObject**方法中使用。我们需要做的就是创建我们自定义的主页，并借助标尺为用户设置它：
- en: '[PRE13]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The result of the command execution can be seen in the following screenshot:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 命令执行的结果可以在以下截图中看到：
- en: '![Figure 1.23 – Setting the Outlook home page](image/B18964_01_23.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图1.23 – 设置Outlook主页](image/B18964_01_23.jpg)'
- en: Figure 1.23 – Setting the Outlook home page
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.23 – 设置Outlook主页
- en: Microsoft killed this vector completely by removing the home page feature in
    the KB4011162 update in October 2017[34]. Reducing the attack surface is the best
    way to fix issues.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 微软在2017年10月通过KB4011162更新[34]完全删除了这个向量的主页功能。减少攻击面是解决问题的最佳方法。
- en: In this section, we discussed different attack vectors against Exchange Server.
    To mitigate password spray attacks, MFA and appropriate login monitoring are required.
    All RCE vulnerabilities sooner or later received patches. It is also necessary
    to patch client software, as it can be abused for lateral movement and persistence.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了针对Exchange Server的不同攻击向量。为了缓解密码喷洒攻击，必须使用多因素认证（MFA）和适当的登录监控。所有RCE漏洞迟早都会收到补丁。还需要修补客户端软件，因为它可以被滥用进行横向移动和持久化。
- en: Summary
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we deployed our lab for future activities. We are lucky to
    have two outstanding free projects available for training and research purposes.
    After that, we discussed the Active Directory kill chain, vital steps to compromise
    the target environment, and what OpSec is. Then, we dived deeper into the assume
    breach model, showing solid hurdles that need to be overcome to achieve stable
    initial access. We covered three main attack vectors for Exchange Server: credential
    access, Zero2Hero exploits, and abuse of client-side software. In the next chapter,
    we will scratch the surface of the defense evasion theme. It is a broad and deep
    topic, which you will see eventually narrows down to the rule *know* *your tooling*.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们为未来的活动部署了我们的实验室。我们很幸运地有两个杰出的免费项目可用于培训和研究。之后，我们讨论了Active Directory的攻击链、攻击目标环境的关键步骤，以及什么是OpSec。然后，我们深入探讨了假设漏洞模型，展示了需要克服的重大障碍，以实现稳定的初步访问。我们讨论了三种针对Exchange
    Server的主要攻击向量：凭证访问、Zero2Hero漏洞利用和客户端软件滥用。在下一章中，我们将探讨防御规避主题的皮毛。这是一个广泛且深入的话题，最终你会发现它归结为规则*了解*
    *你的工具*。
- en: Further reading
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The following resources for further study will help you dive deeper into the
    attacks covered in the chapter:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 以下资源供进一步学习，将帮助你更深入了解本章中涵盖的攻击：
- en: Splunk Attack Range – [https://github.com/splunk/attack_range](https://github.com/splunk/attack_range)
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Splunk攻击范围 – [https://github.com/splunk/attack_range](https://github.com/splunk/attack_range)
- en: Orange Cyberdefense GOADv2 – [https://github.com/Orange-Cyberdefense/GOAD](https://github.com/Orange-Cyberdefense/GOAD)
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Orange Cyberdefense GOADv2 – [https://github.com/Orange-Cyberdefense/GOAD](https://github.com/Orange-Cyberdefense/GOAD)
- en: Deploy GOADv2 on Proxmox – [https://mayfly277.github.io/categories/proxmox/](https://mayfly277.github.io/categories/proxmox/)
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Proxmox 上部署 GOADv2 – [https://mayfly277.github.io/categories/proxmox/](https://mayfly277.github.io/categories/proxmox/)
- en: DetectionLab project – [https://www.detectionlab.network/](https://www.detectionlab.network/)
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DetectionLab 项目 – [https://www.detectionlab.network/](https://www.detectionlab.network/)
- en: Active Directory kill chain diagram – [https://github.com/infosecn1nja/AD-Attack-Defense](https://github.com/infosecn1nja/AD-Attack-Defense)
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Active Directory 杀链图 – [https://github.com/infosecn1nja/AD-Attack-Defense](https://github.com/infosecn1nja/AD-Attack-Defense)
- en: Red team infrastructure wiki – [https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki](https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki)
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 红队基础设施 Wiki – [https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki](https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki)
- en: EDR bypass team – [https://dispatch.redteams.fyi/red-team-edr-bypass-team/](https://dispatch.redteams.fyi/red-team-edr-bypass-team/)
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: EDR 绕过团队 – [https://dispatch.redteams.fyi/red-team-edr-bypass-team/](https://dispatch.redteams.fyi/red-team-edr-bypass-team/)
- en: Assume breach model – [https://www.redsiege.com/wp-content/uploads/2019/09/AssumedBreach-ABM.pdf](https://www.redsiege.com/wp-content/uploads/2019/09/AssumedBreach-ABM.pdf)
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设漏洞模型 – [https://www.redsiege.com/wp-content/uploads/2019/09/AssumedBreach-ABM.pdf](https://www.redsiege.com/wp-content/uploads/2019/09/AssumedBreach-ABM.pdf)
- en: Mind map to assess the security of Exchange Server – [https://github.com/Orange-Cyberdefense/arsenal/blob/master/mindmap/Pentesting_MS_Exchange_Server_on_the_Perimeter.png](https://github.com/Orange-Cyberdefense/arsenal/blob/master/mindmap/Pentesting_MS_Exchange_Server_on_the_Perimeter.png)
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评估 Exchange 服务器安全性的思维导图 – [https://github.com/Orange-Cyberdefense/arsenal/blob/master/mindmap/Pentesting_MS_Exchange_Server_on_the_Perimeter.png](https://github.com/Orange-Cyberdefense/arsenal/blob/master/mindmap/Pentesting_MS_Exchange_Server_on_the_Perimeter.png)
- en: MailSniper – [https://github.com/dafthack/MailSniper](https://github.com/dafthack/MailSniper)
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MailSniper – [https://github.com/dafthack/MailSniper](https://github.com/dafthack/MailSniper)
- en: NameMash – [https://gist.github.com/superkojiman/11076951#file-namemash-py](https://gist.github.com/superkojiman/11076951#file-namemash-py)
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: NameMash – [https://gist.github.com/superkojiman/11076951#file-namemash-py](https://gist.github.com/superkojiman/11076951#file-namemash-py)
- en: EmailAddressMangler – [https://github.com/dafthack/EmailAddressMangler](https://github.com/dafthack/EmailAddressMangler)
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: EmailAddressMangler – [https://github.com/dafthack/EmailAddressMangler](https://github.com/dafthack/EmailAddressMangler)
- en: OABurl extraction script by *snovvcrash* – [https://gist.github.com/snovvcrash/4e76aaf2a8750922f546eed81aa51438#file-oaburl-py](https://gist.github.com/snovvcrash/4e76aaf2a8750922f546eed81aa51438#file-oaburl-py)
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*snovvcrash* 编写的 OABurl 提取脚本 – [https://gist.github.com/snovvcrash/4e76aaf2a8750922f546eed81aa51438#file-oaburl-py](https://gist.github.com/snovvcrash/4e76aaf2a8750922f546eed81aa51438#file-oaburl-py)'
- en: Attacking Exchange web interfaces – [https://swarm.ptsecurity.com/attacking-ms-exchange-web-interfaces/](https://swarm.ptsecurity.com/attacking-ms-exchange-web-interfaces/)
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击 Exchange Web 接口 – [https://swarm.ptsecurity.com/attacking-ms-exchange-web-interfaces/](https://swarm.ptsecurity.com/attacking-ms-exchange-web-interfaces/)
- en: 'PEAS: Python 2 library and application to run commands on Exchange Server –
    [https://github.com/snovvcrash/peas](https://github.com/snovvcrash/peas)'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'PEAS: Python 2 库和应用程序，用于在 Exchange 服务器上运行命令 – [https://github.com/snovvcrash/peas](https://github.com/snovvcrash/peas)'
- en: MWR ActiveSync exfiltration research – [https://labs.withsecure.com/publications/accessing-internal-fileshares-through-exchange-activesync](https://labs.withsecure.com/publications/accessing-internal-fileshares-through-exchange-activesync)
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MWR ActiveSync 外泄研究 – [https://labs.withsecure.com/publications/accessing-internal-fileshares-through-exchange-activesync](https://labs.withsecure.com/publications/accessing-internal-fileshares-through-exchange-activesync)
- en: ProxyLogon vulnerability discovery – [https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-1-ProxyLogon/](https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-1-ProxyLogon/)
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ProxyLogon 漏洞发现 – [https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-1-ProxyLogon/](https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-1-ProxyLogon/)
- en: Hunting ProxyLogon – [https://bi-zone.medium.com/hunting-down-ms-exchange-attacks-part-1-proxylogon-cve-2021-26855-26858-27065-26857-6e885c5f197c](https://bi-zone.medium.com/hunting-down-ms-exchange-attacks-part-1-proxylogon-cve-2021-26855-26858-27065-26857-6e885c5f197c)
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 追踪 ProxyLogon – [https://bi-zone.medium.com/hunting-down-ms-exchange-attacks-part-1-proxylogon-cve-2021-26855-26858-27065-26857-6e885c5f197c](https://bi-zone.medium.com/hunting-down-ms-exchange-attacks-part-1-proxylogon-cve-2021-26855-26858-27065-26857-6e885c5f197c)
- en: Blog post from a vulnerability researcher who discovered ProxyOracle – [https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-2-ProxyOracle/](https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-2-ProxyOracle/)
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发现 ProxyOracle 的漏洞研究人员的博客 – [https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-2-ProxyOracle/](https://devco.re/blog/2021/08/06/a-new-attack-surface-on-MS-exchange-part-2-ProxyOracle/)
- en: A full write-up about ProxyShell is available on the ZDI blog post here – [https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell](https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell)
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关于ProxyShell的完整报告可以在ZDI博客中找到，链接如下 – [https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell](https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell)
- en: Blog post by Palo Alto covering the ProxyNotShell vulnerability – [https://unit42.paloaltonetworks.com/proxynotshell-cve-2022-41040-cve-2022-41082/](https://unit42.paloaltonetworks.com/proxynotshell-cve-2022-41040-cve-2022-41082/)
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Palo Alto的博客文章，涵盖ProxyNotShell漏洞 – [https://unit42.paloaltonetworks.com/proxynotshell-cve-2022-41040-cve-2022-41082/](https://unit42.paloaltonetworks.com/proxynotshell-cve-2022-41040-cve-2022-41082/)
- en: ProxyRelay author covers details of the vulnerability – [https://devco.re/blog/2022/10/19/a-new-attack-surface-on-MS-exchange-part-4-ProxyRelay/](https://devco.re/blog/2022/10/19/a-new-attack-surface-on-MS-exchange-part-4-ProxyRelay/)
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ProxyRelay作者介绍该漏洞的详细信息 – [https://devco.re/blog/2022/10/19/a-new-attack-surface-on-MS-exchange-part-4-ProxyRelay/](https://devco.re/blog/2022/10/19/a-new-attack-surface-on-MS-exchange-part-4-ProxyRelay/)
- en: Write-up about ProxyNotRelay, which is a combination of ProxyRelay and ProxyNotShell
    – [https://rw.md/2022/11/09/ProxyNotRelay.xhtml](https://rw.md/2022/11/09/ProxyNotRelay.xhtml)
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关于ProxyNotRelay的报告，它是ProxyRelay和ProxyNotShell的结合 – [https://rw.md/2022/11/09/ProxyNotRelay.xhtml](https://rw.md/2022/11/09/ProxyNotRelay.xhtml)
- en: Vulnerability CVE-2020-0688 leads to remote code execution on Exchange Server
    – [https://www.zerodayinitiative.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys](https://www.zerodayinitiative.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys)
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 漏洞CVE-2020-0688导致Exchange Server上的远程代码执行 – [https://www.zerodayinitiative.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys](https://www.zerodayinitiative.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys)
- en: Ysoserial.net – [https://github.com/pwntester/ysoserial.net](https://github.com/pwntester/ysoserial.net)
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ysoserial.net – [https://github.com/pwntester/ysoserial.net](https://github.com/pwntester/ysoserial.net)
- en: Original research about the PrivExchange vulnerability – [https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/](https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/)
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关于PrivExchange漏洞的原创研究 – [https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/](https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/)
- en: PrivExchange – [https://github.com/dirkjanm/privexchange/](https://github.com/dirkjanm/privexchange/)
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PrivExchange – [https://github.com/dirkjanm/privexchange/](https://github.com/dirkjanm/privexchange/)
- en: Compromise workstations through Outlook mail rules – [https://sensepost.com/blog/2016/mapi-over-http-and-mailrule-pwnage/](https://sensepost.com/blog/2016/mapi-over-http-and-mailrule-pwnage/)
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过Outlook邮件规则破坏工作站 – [https://sensepost.com/blog/2016/mapi-over-http-and-mailrule-pwnage/](https://sensepost.com/blog/2016/mapi-over-http-and-mailrule-pwnage/)
- en: Ruler tool – [https://github.com/sensepost/ruler](https://github.com/sensepost/ruler)
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ruler工具 – [https://github.com/sensepost/ruler](https://github.com/sensepost/ruler)
- en: Microsoft bulletin KB3191938 – [https://support.microsoft.com/en-us/topic/description-of-the-security-update-for-outlook-2013-june-13-2017-d52f7b9a-488c-dd5a-0d43-da5832eaac5f](https://support.microsoft.com/en-us/topic/description-of-the-security-update-for-outlook-2013-june-13-2017-d52f7b9a-488c-dd5a-0d43-da5832eaac5f)
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 微软公告KB3191938 – [https://support.microsoft.com/en-us/topic/description-of-the-security-update-for-outlook-2013-june-13-2017-d52f7b9a-488c-dd5a-0d43-da5832eaac5f](https://support.microsoft.com/en-us/topic/description-of-the-security-update-for-outlook-2013-june-13-2017-d52f7b9a-488c-dd5a-0d43-da5832eaac5f)
- en: Outlook Forms to achieve persistence – [https://sensepost.com/blog/2017/outlook-forms-and-shells/](https://sensepost.com/blog/2017/outlook-forms-and-shells/)
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Outlook表单实现持久性 – [https://sensepost.com/blog/2017/outlook-forms-and-shells/](https://sensepost.com/blog/2017/outlook-forms-and-shells/)
- en: Microsoft bulletin KB4011091 – [https://support.microsoft.com/en-us/office/custom-form-script-is-now-disabled-by-default-bd8ea308-733f-4728-bfcc-d7cce0120e94](https://support.microsoft.com/en-us/office/custom-form-script-is-now-disabled-by-default-bd8ea308-733f-4728-bfcc-d7cce0120e94)
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 微软公告KB4011091 – [https://support.microsoft.com/en-us/office/custom-form-script-is-now-disabled-by-default-bd8ea308-733f-4728-bfcc-d7cce0120e94](https://support.microsoft.com/en-us/office/custom-form-script-is-now-disabled-by-default-bd8ea308-733f-4728-bfcc-d7cce0120e94)
- en: Outlook home page functionality abuse – [https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/](https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/)
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Outlook主页功能滥用 – [https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/](https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/)
- en: Microsoft bulletin KB15599094 – [https://learn.microsoft.com/en-us/mem/configmgr/hotfix/2207/15599094](https://learn.microsoft.com/en-us/mem/configmgr/hotfix/2207/15599094)
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 微软公告 KB15599094 – [https://learn.microsoft.com/en-us/mem/configmgr/hotfix/2207/15599094](https://learn.microsoft.com/en-us/mem/configmgr/hotfix/2207/15599094)
