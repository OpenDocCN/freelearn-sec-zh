- en: Network Penetration Testing - Post-Connection Attacks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络渗透测试 - 连接后攻击
- en: Gaining access to a system or network is definitely not the end of performing
    scanning and further exploitation. Once you've gained entry to a secure environment,
    such as a target organization, this is where you'll need to divide and conquer
    other internal systems. However, the techniques involved in performing internal
    scanning are similar to those mentioned in earlier chapters ([Chapter 6](a7554e9e-076d-45b8-b0fa-3b02ac270e24.xhtml),
    *Active Information Gathering*). Here, new techniques will be introduced for scanning,
    exploitation, privilege escalation, and performing lateral movements on a network.
    To elaborate further, you will learn how to perform **Man-in-the-Middle** (**MITM**)
    attacks using various techniques and tools and see how to gather sensitive information
    such as users' credentials.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 获得对系统或网络的访问绝对不是执行扫描和进一步利用的结束。一旦你进入了一个安全环境，比如目标组织，这就是你需要分割并征服其他内部系统的地方。然而，执行内部扫描的技术与前几章提到的类似（[第6章](a7554e9e-076d-45b8-b0fa-3b02ac270e24.xhtml)，*主动信息收集*）。在这里，将介绍新的技术，用于扫描、利用、权限提升和在网络上执行横向移动。更进一步地，你将学习如何使用各种技术和工具执行**中间人攻击**（**MITM**）并了解如何收集用户凭据等敏感信息。
- en: 'In this chapter, we will be covering the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Gathering information
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集信息
- en: MITM attacks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MITM攻击
- en: Session hijacking
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 会话劫持
- en: '**Dynamic Host Configuration Protocol** (**DHCP**) attacks'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态主机配置协议**（**DHCP**）攻击'
- en: Exploiting LLMNR and NetBIOS-NS
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用LLMNR和NetBIOS-NS
- en: '**Web Proxy Auto-Discovery** (**WPAD**) protocol attacks'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web代理自动发现**（**WPAD**）协议攻击'
- en: Wireshark
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wireshark
- en: Elevating privileges
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升权限
- en: Lateral movement tactics
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 横向移动策略
- en: PowerShell tradecraft
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell技巧
- en: Launching a VLAN hopping attack
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发动VLAN跳跃攻击
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The following are the technical requirements for this chapter:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本章的技术要求：
- en: 'Kali Linux: [www.kali.org](http://www.kali.org)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Kali Linux: [www.kali.org](http://www.kali.org)'
- en: 'MITMf: [https://github.com/byt3bl33d3r/MITMf](https://github.com/byt3bl33d3r/MITMf)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MITMf: [https://github.com/byt3bl33d3r/MITMf](https://github.com/byt3bl33d3r/MITMf)'
- en: 'Autoscan: [https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/](https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Autoscan: [https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/](https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/)'
- en: 'Wireshark: [www.wireshark.org](http://www.wireshark.org)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Wireshark: [www.wireshark.org](http://www.wireshark.org)'
- en: Windows 7
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 7
- en: Windows 10
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10
- en: Windows Server 2016
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2016
- en: CentOS/Ubuntu
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS/Ubuntu
- en: Gathering information
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集信息
- en: During the early parts of this book, we discussed in depth the importance of
    gathering information about a target using both passive and active techniques
    and tools in Kali Linux. However, when you've compromised a system via exploitation,
    it isn't the end of the penetration test. Rather, it's the point from which you
    will continue onward to exploit different systems on the organization's network,
    create multiple back doors, and gain the highest privileges on various victim
    devices.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的早期部分，我们深入讨论了使用Kali Linux中的被动和主动技术和工具收集有关目标的信息的重要性。然而，当你通过利用攻击入侵系统时，这并不是渗透测试的结束。相反，这是你将继续向前利用组织网络上的不同系统、创建多个后门并获得各种受害设备上最高权限的起点。
- en: 'In this section, we are going to perform network scanning using the following
    tools:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用以下工具进行网络扫描：
- en: Netdiscover
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Netdiscover
- en: AutoScan
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AutoScan
- en: Zenmap
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zenmap
- en: Let's look at each of these in more detail.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看这些。
- en: Scanning using Netdiscover
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Netdiscover进行扫描
- en: '**Netdiscover** is simply a scanner that leverages the **Address Resolution
    Protocol** (**ARP**) to discover connected clients on a network segment. ARP operates
    between the data link layer (layer 2) and the network layer (layer 3) of the OSI
    reference model. Devices use ARP to resolve IP addresses to MAC addresses for
    local communication.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**Netdiscover**只是一个利用**地址解析协议**（**ARP**）发现网络段上连接的客户端的扫描器。ARP在OSI参考模型的数据链路层（第2层）和网络层（第3层）之间运行。设备使用ARP来解析IP地址到MAC地址，以进行本地通信。'
- en: 'To perform an internal network scan with Netdiscover, observe the following
    steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Netdiscover进行内部网络扫描，请遵循以下步骤：
- en: 'Execute the following commands:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Netdiscover will begin to display all active devices, displaying their IP addresses,
    MAC addresses, the vendors of their **network interface cards** (**NICs**), and
    their hostnames, as shown in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Netdiscover将开始显示所有活动设备，显示它们的IP地址、MAC地址、其**网络接口卡**（**NICs**）的供应商和它们的主机名，如下截图所示：
- en: '![](img/cc1d780e-ccd2-4f3f-b054-141c3499e331.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc1d780e-ccd2-4f3f-b054-141c3499e331.png)'
- en: 'To perform a passive scan and use the sniffer mode of Netdiscover, use the
    `-p` parameter. The following is an example of enabling passive mode:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要执行被动扫描并使用Netdiscover的嗅探器模式，请使用`-p`参数。以下是启用被动模式的示例：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Since passive mode means patiently waiting to detect an ARP message on the
    wire, populating the table may be time-consuming as you have to wait for devices
    to communicate. The following is a screenshot indicating that passive mode is
    enabled:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由于被动模式意味着耐心地等待在电线上检测到ARP消息，填充表可能会耗时，因为你必须等待设备进行通信。以下是一张截图，显示被动模式已启用：
- en: '![](img/7cc7af6c-a717-4d04-b6a4-9300c0e0c4f2.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7cc7af6c-a717-4d04-b6a4-9300c0e0c4f2.png)'
- en: During a penetration test, always remember to use simple tools to get the job
    done. Sometimes, using a complex tool may put you in a situation that means you'll
    be stuck for some time. As you will have noticed, the tools that we have been
    using aren't too difficult to use in order to complete a given task.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试中，始终记得使用简单的工具来完成任务。有时，使用复杂的工具可能会让你陷入一段时间的困境。正如你已经注意到的，我们一直在使用的工具并不难使用，以完成给定的任务。
- en: In this section, you have learned how to perform passive scanning using Netdiscover
    on Kali Linux. Next, we will learn how to perform network scanning using the AutoScan
    tool.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，您已经学会了如何在Kali Linux上使用Netdiscover执行被动扫描。接下来，我们将学习如何使用AutoScan工具执行网络扫描。
- en: Scanning using AutoScan-Network
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AutoScan-Network进行扫描
- en: The AutoScan-Network tool is able to scan and profile devices on a local network
    segment.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: AutoScan-Network工具能够扫描和对本地网络段上的设备进行配置文件化。
- en: 'To get started, observe the following steps:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请观察以下步骤：
- en: 'Download AutoScan-Network from the following URL: [https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/](https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/).'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下网址下载AutoScan-Network：[https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/](https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/)。
- en: 'Choose the version as shown in the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 选择如下屏幕截图中显示的版本：
- en: '![](img/876033dc-c556-4e9e-9ba0-7353041478a3.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/876033dc-c556-4e9e-9ba0-7353041478a3.png)'
- en: 'Once the file has been successfully downloaded onto your Kali Linux machine,
    open the Terminal and execute `tar -xzvf autoscan-network-1.42-Linux-x86-Install.tar.gz`
    to extract the content. The following are the descriptions used in the `tar` utility:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦文件成功下载到您的Kali Linux机器上，打开终端并执行`tar -xzvf autoscan-network-1.42-Linux-x86-Install.tar.gz`来提取内容。以下是`tar`实用程序中使用的描述：
- en: '`-x`: Used to extract files'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-x`：用于提取文件'
- en: '`-z`: Filters the compressed file through gzip'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-z`：通过gzip过滤压缩文件'
- en: '`-v`: Provides a verbose output'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-v`：提供详细输出'
- en: '`-f`: Specifies the file or device'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-f`：指定文件或设备'
- en: 'Next, use `./autoscan-network-1.42-Linux-x86-Install` to install the tool,
    as shown in the following screenshot:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用`./autoscan-network-1.42-Linux-x86-Install`安装工具，如下面的屏幕截图所示：
- en: '![](img/12910d23-e509-4579-844d-6cff03b3e1f9.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12910d23-e509-4579-844d-6cff03b3e1f9.png)'
- en: Now that AutoScan-Network has been installed on Kali Linux, it's time to open
    the application. In the Kali Linux desktop environment, click on Applications
    | AutoScan-Network to open the application.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在AutoScan-Network已经安装在Kali Linux上，是时候打开应用程序了。在Kali Linux桌面环境中，单击应用程序|AutoScan-Network打开应用程序。
- en: The Network Wizard will open; click **Forward** to begin the setup of AutoScan-Network.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络向导将打开；单击**前进**开始设置AutoScan-Network。
- en: Next, set the name of your network and click **Forward**.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，设置您的网络名称并单击**前进**。
- en: The wizard will ask for the location of the network; leave it as the default
    setting (localhost) and click **Forward**.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向导将要求输入网络位置；将其保留为默认设置（localhost）并单击**前进**。
- en: Select your network adapter. If you are using a LAN adapter (`eth0`), leave
    it as the default and click **Forward**.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的网络适配器。如果您使用LAN适配器（`eth0`），请将其保留为默认设置并单击**前进**。
- en: Click **Forward** on the Summary window to confirm your configurations.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在摘要窗口上单击**前进**以确认您的配置。
- en: 'AutoScan-Network will begin to automatically scan your local network and attempt
    to perform fingerprinting of any services found on each device, as shown in the
    following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: AutoScan-Network将自动开始扫描您的本地网络，并尝试对每个设备上找到的任何服务进行指纹识别，如下面的屏幕截图所示：
- en: '![](img/a7b2484b-3f08-4036-9d79-1f067b97bddf.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a7b2484b-3f08-4036-9d79-1f067b97bddf.png)'
- en: Once completed, AutoScan-Network will display all the IP addresses, hostnames,
    and services it was able to detect on your local network.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，AutoScan-Network将显示在本地网络上能够检测到的所有IP地址、主机名和服务。
- en: In the next section, we will cover the essential techniques required to perform
    scanning using Zenmap.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将介绍使用Zenmap进行扫描所需的基本技术。
- en: Scanning using Zenmap
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Zenmap进行扫描
- en: 'Zenmap is the GUI version of Nmap. It provides the same capabilities and features
    as its command-line version. To open Zenmap, use the following steps:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Zenmap是Nmap的图形用户界面版本。它提供与其命令行版本相同的功能和特性。要打开Zenmap，请执行以下步骤：
- en: Go to Applications | Information Gathering | Zenmap.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到应用程序|信息收集|Zenmap。
- en: 'Once the application is open, you''ll be presented with the following user
    interface, allowing you to specify a target or range and the type of scan to perform
    (profile), as well as allowing you to create and execute customized scans:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦应用程序打开，您将看到以下用户界面，允许您指定目标或范围以及要执行的扫描类型（配置文件），并允许您创建和执行自定义扫描：
- en: '![](img/82b6b411-f956-4c4a-a9be-b3e5c517e07e.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/82b6b411-f956-4c4a-a9be-b3e5c517e07e.png)'
- en: 'Once a scan is complete, Zenmap will populate the following information within
    the tab: Nmap Output, Ports/Hosts, Topology, and Host Details:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描完成后，Zenmap将在选项卡中填充以下信息：Nmap输出、端口/主机、拓扑和主机详细信息：
- en: '![](img/6e90e1d3-439d-45d2-ab7b-96a63d4b6dd1.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6e90e1d3-439d-45d2-ab7b-96a63d4b6dd1.png)'
- en: In our exercises, we have been performing a Quick scan on the `10.10.10.0/24`
    network and have been able to determine active systems and any open ports.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的练习中，我们一直在`10.10.10.0/24`网络上执行快速扫描，并且已经能够确定活动系统和任何开放的端口。
- en: In this section, you have acquired the skills needed to perform a quick scan
    using Zenmap. In the next section, we will learn more about MITM attacks.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您已经掌握了使用Zenmap进行快速扫描所需的技能。在下一节中，我们将学习更多关于MITM攻击的知识。
- en: MITM attacks
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MITM攻击
- en: 'An **MITM** attack is simply when the attacker sits between the victim and
    the rest of their network, intercepting and capturing network packets. The following
    is an illustration displaying an attacker (`192.168.1.5`) who is connected to
    the same segment as the victim (`192.168.1.10`):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**MITM**攻击就是攻击者坐在受害者和其余网络之间，拦截和捕获网络数据包。以下是一个示例，显示了一个攻击者（`192.168.1.5`）连接到与受害者（`192.168.1.10`）相同的段：'
- en: '![](img/015f7cb4-54a1-4aeb-a9bc-d188d6d9095f.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/015f7cb4-54a1-4aeb-a9bc-d188d6d9095f.png)'
- en: By default, the attacker machine will not be able to intercept and capture any
    traffic between **PC1** and the default gateway (`192.168.1.1`). However, an attacker
    can perform **ARP poisoning** between the victim and the gateway. ARP poisoning
    is when an attacker sends a **gratuitous ARP response** to a device telling it
    to update its IP-to-MAC mapping. The attacker machine will send gratuitous ARP
    messages to the victim, telling the victim's machine that the gateway has changed
    to `192.168.1.1 - CC:CC:CC:CC:CC:CC`, and to the gateway, telling it that **PC1**
    has changed to `192.168.1.10 - CC:CC:CC:CC:CC:CC`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，攻击者机器将无法拦截和捕获**PC1**和默认网关（`192.168.1.1`）之间的任何流量。但是，攻击者可以在受害者和网关之间执行**ARP中毒**。ARP中毒是指攻击者向设备发送**虚假ARP响应**，告诉设备更新其IP到MAC的映射。攻击者机器将向受害者发送虚假ARP消息，告诉受害者的机器网关已更改为`192.168.1.1
    - CC:CC:CC:CC:CC:CC`，并向网关发送消息，告诉它**PC1**已更改为`192.168.1.10 - CC:CC:CC:CC:CC:CC`。
- en: This would have the effect of all packets exchanged between **PC1** and the
    router being passed through the attacker machine, which sniffs those packets for
    sensitive information, such as routing updates, running services, user credentials,
    and browsing history.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致**PC1**和路由器之间交换的所有数据包都通过攻击者机器传递，攻击者机器将对这些数据包进行嗅探，以获取敏感信息，如路由更新、运行服务、用户凭据和浏览历史。
- en: In the following section, we'll take a look at various tools and techniques
    for performing a successful MITM attack on an internal network.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将看一下在内部网络上执行成功的MITM攻击的各种工具和技术。
- en: ARPspoof
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ARPspoof
- en: 'One of the first tools we will look at is ARPspoof. ARPspoof is used to send
    fake ARP messages to a victim''s machine, tricking it into sending its traffic
    to the attacker''s machine or another gateway on the network. Since we have an
    idea of how ARP poisoning and spoofing works, we can jump right into the practice
    of using this tool. We use the following syntax:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先看的工具之一是ARPspoof。ARPspoof用于向受害者的机器发送虚假ARP消息，欺骗其将流量发送到攻击者的机器或网络上的另一个网关。由于我们知道ARP中毒和欺骗的工作原理，我们可以直接跳入使用这个工具的实践。我们使用以下语法：
- en: '[PRE2]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In our lab, I''m performing an MITM attack between a victim machine (`10.10.10.15`)
    and a gateway (`10.10.10.1`), as shown in the following screenshot:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的实验室中，我正在受害者机器（`10.10.10.15`）和网关（`10.10.10.1`）之间执行MITM攻击，如下面的屏幕截图所示：
- en: '![](img/0b8f2560-87b8-4051-b9a0-630e9c35a30a.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b8f2560-87b8-4051-b9a0-630e9c35a30a.png)'
- en: 'ARPspoof will begin sending **gratuitous ARP** messages to both devices continuously.
    Using *Ctrl* + *C* will stop the ARP poisoning attack, and ARPspoof will perform
    a clean-up action to restore a working state between the victim and gateway, as
    shown in the following screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: ARPspoof将开始持续向两台设备发送**虚假ARP**消息。使用*Ctrl* + *C*将停止ARP中毒攻击，ARPspoof将执行清理操作，恢复受害者和网关之间的工作状态，如下面的屏幕截图所示：
- en: '![](img/f2d3675c-f02a-48f4-a950-3465a6a7427b.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f2d3675c-f02a-48f4-a950-3465a6a7427b.png)'
- en: Once the clean-up has ended successfully, both the PC (`10.10.10.15`) and gateway
    (`10.10.10.1`) will communicate on the network as originally intended.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦清理成功结束，PC（`10.10.10.15`）和网关（`10.10.10.1`）将在网络上按原意进行通信。
- en: Having completed this section, you are now able to perform an MITM attack using
    ARPspoof. In the next section, you will learn about MITMf and its features.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本节后，您现在可以使用ARPspoof执行MITM攻击。在下一节中，您将了解MITMf及其功能。
- en: MITMf
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MITMf
- en: 'MITMf is an all-in-one tool for performing various types of MITM attacks and
    techniques on a victim''s internal network. The features of MITMf include the
    following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: MITMf是一个执行各种MITM攻击和技术的多合一工具，用于受害者的内部网络。MITMf的功能包括以下内容：
- en: The capturing of NTLM v1/v2, POP, IMAP, SMTP, Telnet, FTP, Kerberos, and SNMP
    credentials. These credentials will allow you to access users' accounts, systems/devices,
    file shares, and other network resources.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捕获NTLM v1/v2、POP、IMAP、SMTP、Telnet、FTP、Kerberos和SNMP凭据。这些凭据将允许您访问用户的帐户、系统/设备、文件共享和其他网络资源。
- en: The use of Responder to perform LLMNR, NBT-NS, and MDNS poisoning attacks.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Responder执行LLMNR、NBT-NS和MDNS中毒攻击。
- en: 'To get started with MITMf, follow these instructions:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用MITMf，请按照以下说明操作：
- en: 'Install the dependencies packages in Kali Linux using the following command:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Kali Linux中使用以下命令安装依赖包：
- en: '[PRE3]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once completed, install `virtualenvwrapper`:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，安装`virtualenvwrapper`：
- en: '[PRE4]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Next, you''ll need to update the source in the `virtualenvwrapper.sh` script.
    Firstly, execute the `updatedb` command to create an updated database of all the
    file locations in the local filesystem. Once completed, use the `locate virtualenvwrapper.sh`
    command to get the file path. Then, execute the `source` command followed by the
    file path, as shown in the following screenshot:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您需要更新`virtualenvwrapper.sh`脚本中的源。首先，执行`updatedb`命令创建本地文件系统中所有文件位置的更新数据库。完成后，使用`locate
    virtualenvwrapper.sh`命令获取文件路径。然后，执行`source`命令，后跟文件路径，如下面的屏幕截图所示：
- en: '![](img/4def36d9-0436-4cf4-9a9b-1efd78d50d4d.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4def36d9-0436-4cf4-9a9b-1efd78d50d4d.png)'
- en: 'Create a virtual environment using the `mkvirtualenv MITMf -p /usr/bin/python2.7`
    command and download the MITMf repository, as shown in the following screenshot:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`mkvirtualenv MITMf -p /usr/bin/python2.7`命令创建虚拟环境并下载MITMf存储库，如下面的屏幕截图所示：
- en: '![](img/80c17ae0-0b98-497f-9d93-8c180e044b97.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80c17ae0-0b98-497f-9d93-8c180e044b97.png)'
- en: 'Once the repository has been downloaded, change directory and clone the sub-modules:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载存储库后，更改目录并克隆子模块：
- en: '[PRE5]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Install the dependencies using the following command:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装依赖项：
- en: '[PRE6]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To view the help menu, use the following command:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看帮助菜单，请使用以下命令：
- en: '[PRE7]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You have now set up MITMf on your Kali Linux machine. Next, let's take a deep
    dive into learning about the use cases of MITMf.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已在Kali Linux机器上设置了MITMf。接下来，让我们深入了解MITMf的用例。
- en: Use cases of MITMf
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MITMf的用例
- en: 'The following are the various use cases of MITMf:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是MITMf的各种用例：
- en: Keep in mind that all attacks should only be performed in a lab environment
    and only on networks for which you have obtained legal permission.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，所有攻击都应该只在实验环境中进行，并且只能针对你已经获得合法许可的网络进行。
- en: 'You can bypass HTTPS with MITMf:'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用MITMf绕过HTTPS：
- en: '[PRE8]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`-i`: Specifies the interface to execute MITMf against'
  id: totrans-116
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-i`：指定要对MITMf执行的接口'
- en: '`--spoof`: Tells MITMf to fake an identity'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--spoof`：告诉MITMf伪造身份'
- en: '`--arp`: Performs redirection of traffic via ARP'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--arp`：通过ARP执行流量重定向'
- en: '`--hsts`: Loads the sslstrip plugin'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--hsts`：加载sslstrip插件'
- en: '`--dns`: Loads a proxy to modify DNS queries'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--dns`：加载代理以修改DNS查询'
- en: '`--gateway`: Specifies the gateway'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--gateway`：指定网关'
- en: '`--target`: Specifies the target'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--target`：指定目标'
- en: 'You can perform an ARP poisoning attack between the gateway (`10.10.10.1`)
    and the entire subnet:'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在网关（`10.10.10.1`）和整个子网之间执行ARP欺骗攻击：
- en: '[PRE9]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You can perform ARP poisoning between the victim and the gateway (`10.10.10.1`):'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在受害者和网关（`10.10.10.1`）之间执行ARP欺骗：
- en: '[PRE10]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can perform DNS spoofing while performing an ARP poisoning attack on a
    subnet and gateway (`10.10.10.1`):'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在对子网和网关（`10.10.10.1`）执行ARP欺骗攻击时执行DNS欺骗：
- en: '[PRE11]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You can perform LLMNR/NBTNS/MDNS spoofing using MITMf:'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用MITMf执行LLMNR/NBTNS/MDNS欺骗：
- en: '[PRE12]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can perform a DHCP spoofing attack:'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以执行DHCP欺骗攻击：
- en: '[PRE13]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This attack is useful during the post-exploitation phase.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击在后渗透阶段非常有用。
- en: The IP addressing scheme and subnet information is taken from the config file.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: IP寻址方案和子网信息取自配置文件。
- en: 'An HTML iframe can be injected using MITMf:'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用MITMf注入HTML iframe：
- en: '[PRE14]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'A JavaScript script can be injected:'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以注入JavaScript脚本：
- en: '[PRE15]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You can perform ARP poisoning with the WPAD protocol as a rogue proxy server
    using the `responder` module:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`responder`模块将ARP欺骗作为恶意代理服务器执行WPAD协议的ARP欺骗：
- en: '[PRE16]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following is an additional list of parameters that can be incorporated:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可以整合的其他参数列表：
- en: '**Screen Capture**: This allows MITMf to use HTML5 canvas to get an accurate
    image of the client''s web browser using the `--screen` command. Additionally,
    you can capture screenshots using a time interval with the `--interval seconds`
    command.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**屏幕捕获**：这允许MITMf使用HTML5画布准确地获取客户端的Web浏览器图像，使用`--screen`命令。此外，你可以使用`--interval
    seconds`命令以时间间隔捕获屏幕截图。'
- en: '**Keylogger**: The `--jskeylogger` command injects a JavaScript keylogger into
    the victim''s web pages to capture keystrokes.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**键盘记录器**：`--jskeylogger`命令将JavaScript键盘记录器注入受害者的网页，以捕获按键。'
- en: Please keep in mind that to view additional parameters for the MITMf tool, you
    can execute the `python mitmf.py --help` command.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，要查看MITMf工具的其他参数，你可以执行`python mitmf.py --help`命令。
- en: Having completed this section, you now have the skill set required to perform
    various types of attacks using MITMf. In the next section, we will cover session
    hijacking attacks.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了这一部分，你现在已经具备了使用MITMf执行各种类型攻击所需的技能。在下一部分，我们将介绍会话劫持攻击。
- en: Session hijacking
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会话劫持
- en: In this section, we will perform session hijacking on a target machine on our
    network. To perform this attack, we will combine a few other techniques to ensure
    that it's successful. Whenever a user visits a website, the web server sends a
    cookie to the web browser. The cookie is used to monitor the user's activities
    and provide a better user experience by tracking items in a shopping cart, maintaining
    persistent login while browsing other areas of a website, and so on.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将在我们网络上的目标机器上执行会话劫持。为了执行这次攻击，我们将结合一些其他技术来确保它的成功。每当用户访问一个网站时，Web服务器会向Web浏览器发送一个cookie。该cookie用于监视用户的活动，并通过跟踪购物车中的商品、在浏览网站的其他区域时保持持久登录等方式提供更好的用户体验。
- en: Session hijacking allows an attacker or penetration tester to capture and take
    over (hijack) another user's sessions while the victim is logged into a website.
    Session hijacking allows the penetration tester to capture the session token/key,
    which is then used to gain unauthorized access to information and resources on
    a system. For example, capturing the session of a user who is logged into their
    online banking portal can allow the attacker to access the victim's user account
    without having to enter the victim's user credentials, as they can simply provide
    the cookie data to the website/online portal.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 会话劫持允许攻击者或渗透测试人员在受害者登录网站时捕获并接管（劫持）另一个用户的会话。会话劫持允许渗透测试人员捕获会话令牌/密钥，然后使用它来未经授权地访问系统上的信息和资源。例如，捕获已登录其在线银行门户的用户的会话可以允许攻击者访问受害者的用户帐户，而无需输入受害者的用户凭据，因为他们可以简单地向网站/在线门户提供cookie数据。
- en: 'Before we begin, we will be using the following topology in our lab network
    to complete our exercise:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我们将在我们的实验网络中使用以下拓扑来完成我们的练习：
- en: '![](img/1eed32ba-0333-4fc8-8f0e-853a81c5c8bd.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1eed32ba-0333-4fc8-8f0e-853a81c5c8bd.png)'
- en: 'To ensure that you complete this exercise successfully, use the following instructions:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你成功完成这个练习，请使用以下说明：
- en: 'Set up an MITM attack using **Ettercap-Graphical** with Kali Linux. To perform
    this task, navigate to Applications | 09 – Sniffing & Spoofing | ettercap-graphical
    as shown here:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Kali Linux中的**Ettercap-Graphical**建立MITM攻击。要执行此任务，请按照以下步骤导航到应用程序| 09-嗅探和欺骗|
    ettercap-graphical：
- en: '![](img/dd6e6b03-d096-4a37-9189-76536f24a6ec.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd6e6b03-d096-4a37-9189-76536f24a6ec.png)'
- en: 'Once Ettercap has opened, click on Sniff | Unified sniffing:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦Ettercap打开，点击Sniff | Unified sniffing：
- en: '![](img/ac42ad1d-6e95-4cd1-9a15-d6b5ce2191f1.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac42ad1d-6e95-4cd1-9a15-d6b5ce2191f1.png)'
- en: 'A small popup will appear. Select your **Network interface:** **eth0** and
    click **OK**:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会出现一个小弹出窗口。选择你的**网络接口：** **eth0**，然后点击**OK**：
- en: '![](img/ddaa88ff-71af-4eca-a610-00f255571e1e.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ddaa88ff-71af-4eca-a610-00f255571e1e.png)'
- en: 'Scan for all host devices on your network by navigating to Hosts | Scan for
    hosts:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过导航到主机|扫描主机来扫描你网络上的所有主机设备：
- en: '![](img/dbc7923e-36ac-4dbd-865b-9a7f6c03cc08.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dbc7923e-36ac-4dbd-865b-9a7f6c03cc08.png)'
- en: 'Once the scan has been completed, click on Hosts | Hosts list to view a list
    of targets on your network. Select your target and click on **Add to Target 1**:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描完成后，点击主机|主机列表，查看网络上的目标列表。选择您的目标，然后点击**添加到目标1**：
- en: '![](img/99bdad5c-1a3c-4446-9f75-6ca0db075585.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/99bdad5c-1a3c-4446-9f75-6ca0db075585.png)'
- en: 'Once the target has been added successfully, enable ARP poisoning on Ettercap
    by navigating to Mitm | ARP poisoning:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功添加目标后，在Ettercap上启用ARP毒化，导航到Mitm| ARP毒化：
- en: '![](img/232c440a-def6-4d93-b784-4b485b49dfae.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/232c440a-def6-4d93-b784-4b485b49dfae.png)'
- en: 'A pop-up window will appear. Select **Sniff remote connections.** and click
    on **OK**:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将弹出一个窗口。选择**嗅探远程连接**，然后点击**确定**：
- en: '![](img/367bf062-7527-42d3-96d9-3d2f1adde364.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/367bf062-7527-42d3-96d9-3d2f1adde364.png)'
- en: 'Next, click on Start | Start sniffing to enable the MITM attack:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击开始|开始嗅探以启用MITM攻击：
- en: '![](img/2b35fb21-4e12-4997-b43d-53a768911536.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b35fb21-4e12-4997-b43d-53a768911536.png)'
- en: 'Next, we are going to use the **Hamster** tool to help us manipulate the data.
    To open Hamster, navigate to Applications | 09 – Sniffing & Spoofing | hamster:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用**Hamster**工具来帮助我们操纵数据。要打开Hamster，导航到应用程序| 09-嗅探和欺骗|仓鼠：
- en: '![](img/4e987849-1294-4108-b92b-8a89d0a0b32c.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e987849-1294-4108-b92b-8a89d0a0b32c.png)'
- en: '**Hamster** will open a command-line interface on a new Terminal window and
    provide the URL, `http://127.0.0.1:1234`, which is used to view the session information:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**Hamster**将在新的终端窗口上打开一个命令行界面，并提供URL`http://127.0.0.1:1234`，用于查看会话信息：'
- en: '![](img/701f0c22-a9db-429e-9b98-986a5e761c38.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](img/701f0c22-a9db-429e-9b98-986a5e761c38.png)'
- en: 'Next, we will use **Ferret** to capture the session cookies between the victim
    and the data''s destination. By default, Kali Linux does not have Ferret installed;
    also, Ferret is a 32-bit tool. To install Ferret on Kali Linux, use the following
    command:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用**Ferret**来捕获受害者和数据目的地之间的会话cookie。默认情况下，Kali Linux没有安装Ferret；此外，Ferret是一个32位工具。要在Kali
    Linux上安装Ferret，请使用以下命令：
- en: '[PRE17]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once the installation has completed successfully, navigate to Applications
    | 09 – Sniffing & Spoofing | ferret:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 安装成功后，导航到应用程序| 09-嗅探和欺骗|仓鼠：
- en: '![](img/37986d1e-7e74-4044-8f7b-a2485043098b.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/37986d1e-7e74-4044-8f7b-a2485043098b.png)'
- en: 'Use the `ferret -i eth0` command to capture cookies on the Ethernet interface:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`ferret -i eth0`命令捕获以太网接口上的cookie：
- en: '![](img/8d9f2ce6-0cf2-4901-a445-fd2aff2f9c69.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8d9f2ce6-0cf2-4901-a445-fd2aff2f9c69.png)'
- en: 'Open the web browser on Kali Linux and enter `http://127.0.0.1:1234` to access
    the **Hamster** proxy interface. Click on **adapters**:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Kali Linux上打开网络浏览器，输入`http://127.0.0.1:1234`以访问**Hamster**代理界面。点击**适配器**：
- en: '![](img/34ae3843-b9a7-4504-9ae4-412f9edd40fa.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34ae3843-b9a7-4504-9ae4-412f9edd40fa.png)'
- en: 'Select the `eth0` adapter and click **Submit Query**:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`eth0`适配器，然后点击**提交查询**：
- en: '![](img/507c9079-0ff6-457a-af30-45abff613640.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/507c9079-0ff6-457a-af30-45abff613640.png)'
- en: Go to the victim's machine and, using the web browser, enter the IP address
    of **Metasploitable**. Next, click on **Damn Vulnerable Web Application** (**DVWA**).
    Then, log in using the username (`admin`), and the password (`password`), to generate
    some traffic between the victim machine and another system.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往受害者的机器，使用网络浏览器，输入**Metasploitable**的IP地址。接下来，点击**Damn Vulnerable Web Application**（**DVWA**）。然后，使用用户名（`admin`）和密码（`password`）登录，以在受害者机器和另一个系统之间生成一些流量。
- en: 'On your Kali Linux machine, refresh the Hamster web page. You should now see
    the victim''s IP address appear. Click on the victim''s IP address to get more
    information:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Kali Linux机器上，刷新Hamster网页。现在应该看到受害者的IP地址出现。点击受害者的IP地址以获取更多信息：
- en: '![](img/8759207a-45f9-422f-9f63-b535b570afec.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8759207a-45f9-422f-9f63-b535b570afec.png)'
- en: 'Clicking on any of the URLs on the left-hand column will provide an image of
    what the victim might have seen on their web browser:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧列中的任何URL将提供受害者在其网络浏览器上可能看到的图像：
- en: '![](img/e3a8a754-aa8d-49ca-a679-c4c88878cd2d.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e3a8a754-aa8d-49ca-a679-c4c88878cd2d.png)'
- en: 'To view a list of cookie/session details, open a new tab on your web browser
    and enter the URL shown here:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看cookie/session详细信息列表，请在网络浏览器上打开新标签页，并输入此处显示的URL：
- en: '![](img/84ae6cf7-2797-4a93-ac4a-e278d46a2a72.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84ae6cf7-2797-4a93-ac4a-e278d46a2a72.png)'
- en: We were able to capture the session cookies for the transactions between the
    victim's machine and the web server. Having completed this exercise, you are now
    able to perform cookie stealing/session hijacking attacks.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够捕获受害者机器和Web服务器之间的交易的会话cookie。完成此练习后，您现在可以执行cookie窃取/会话劫持攻击。
- en: Now that you have completed this exercise, you have the skills required to perform
    a session hijacking attack on any network. In the next section, we will cover
    **Dynamic Host Configuration Protocol** (**DHCP**) attacks.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经完成了这个练习，您具备了在任何网络上执行会话劫持攻击所需的技能。在下一节中，我们将介绍**动态主机配置协议**（**DHCP**）攻击。
- en: DHCP attacks
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DHCP攻击
- en: In many networks, there are hundreds, and even thousands, of end devices such
    as desktops, laptops, and smart devices that require network connectivity to access
    resources on the corporate network. However, each device requires an address on
    the network for sending and receiving messages (packets), a path to access resources
    outside the local network (default gateway), an identifier to determine the logical
    network segmentation (subnet mask), and someone who can resolve hostnames to IP
    addresses on a network (DNS server).
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多网络中，有数百甚至数千台终端设备，如台式机、笔记本电脑和智能设备，需要网络连接以访问企业网络上的资源。但是，每个设备都需要在网络上发送和接收消息（数据包）的地址，访问本地网络之外的资源的路径（默认网关），用于确定逻辑网络分段的标识符（子网掩码），以及可以解析网络上主机名到IP地址的人（DNS服务器）。
- en: 'Network administrators must ensure that the following four components are configured
    on all end devices:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 网络管理员必须确保所有终端设备上配置了以下四个组件：
- en: IP address
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP地址
- en: Subnet mask
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子网掩码
- en: Default gateway
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认网关
- en: DNS server
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS服务器
- en: The use of a DHCP server allows IT professionals to efficiently distribute IP
    configurations automatically to end devices on their network very quickly. To
    further understand the importance of DHCP on a network, when a client is connected
    to a network (wired or wireless), the client machine broadcasts a **DHCP Discover**
    packet on the network in search of a DHCP server to provide IP configurations.
    When a DHCP server receives the discover packet, it responds with a **DHCP Offer**
    packet. This packet contains available IP settings, which the client can use on
    the network. After the client receives and checks the offer from the server, the
    client responds with **DHCP Request**, which is used to inform the server that
    the IP information will be used. Lastly, the DHCP server provides an acknowledgment
    and confirmation by sending a **DHCP ACK** packet.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 使用DHCP服务器允许IT专业人员快速有效地自动分配IP配置给他们网络上的终端设备。为了进一步理解网络上DHCP的重要性，当客户端连接到网络（有线或无线）时，客户端机器会在网络上广播一个**DHCP
    Discover**数据包，寻找提供IP配置的DHCP服务器。当DHCP服务器收到发现数据包时，它会用**DHCP Offer**数据包做出回应。该数据包包含可用的IP设置，客户端可以在网络上使用。客户端收到并检查来自服务器的提供后，会用**DHCP
    Request**做出回应，用于通知服务器将使用IP信息。最后，DHCP服务器通过发送**DHCP ACK**数据包提供确认和确认。
- en: 'The following diagram outlines the DHCP process:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表概述了DHCP过程：
- en: '![](img/705aa3a4-6d57-426f-8dd7-40e70a641f1c.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/705aa3a4-6d57-426f-8dd7-40e70a641f1c.png)'
- en: Since a DHCP server typically provides the default gateway information to client
    devices, if the DHCP server were to provide another path to the internet, let's
    say through an attacker machine, the client (victim) machine would accept the
    new path and forward their packet accordingly. Additionally, changing the DNS
    server configurations on a client machine to forward all DNS queries to a fake
    DNS server can result in the loading of phishing web pages on a victim's browser.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 由于DHCP服务器通常向客户设备提供默认网关信息，如果DHCP服务器提供另一条通往互联网的路径，比如通过攻击者的机器，客户（受害者）机器将接受新路径并相应地转发其数据包。此外，将客户机上的DNS服务器配置更改为将所有DNS查询转发到虚假DNS服务器可能会导致受害者浏览器加载钓鱼网页。
- en: 'In this section, we will create a rogue DHCP server to redirect victims'' traffic
    on the network. To get started, we will use the Metasploit framework to create
    our rogue DHCP server:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建一个恶意DHCP服务器来重定向网络上受害者的流量。首先，我们将使用Metasploit框架来创建我们的恶意DHCP服务器：
- en: 'Enable the PostgreSQL database and Metasploit by using the following commands:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令启用PostgreSQL数据库和Metasploit：
- en: '[PRE18]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Metasploit contains a module that allows us to enable a DHCP server. Use the
    commands as shown in the following screenshot:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Metasploit包含一个允许我们启用DHCP服务器的模块。使用以下截图中显示的命令：
- en: '![](img/38c6a458-8dac-497c-a88f-286c8fa41b6a.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38c6a458-8dac-497c-a88f-286c8fa41b6a.png)'
- en: The `show options` command will display a description of parameters that are
    both optional and required prior to executing this module in Metasploit.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`show options`命令将显示在Metasploit中执行此模块之前必须的参数的描述，这些参数既是可选的又是必需的。'
- en: 'We will set the start and end IP addresses, the network broadcast address,
    the network mask (subnet mask), the DNS server, the default gateway (default router)
    and the IP address of the rogue DHCP server. The following screenshot demonstrates
    how to set the values for each parameter:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将设置起始和结束IP地址，网络广播地址，网络掩码（子网掩码），DNS服务器，默认网关（默认路由器）和恶意DHCP服务器的IP地址。以下截图演示了如何为每个参数设置值：
- en: '![](img/a5fb3556-b3f3-4a15-9929-bd171e3aac95.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a5fb3556-b3f3-4a15-9929-bd171e3aac95.png)'
- en: 'When you''re finished, use the `show options` command to verify that the values
    are set correctly for each parameter:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，使用`show options`命令验证每个参数的值是否设置正确：
- en: '![](img/afd623b3-af16-477b-a499-5c2e941f2ed5.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![](img/afd623b3-af16-477b-a499-5c2e941f2ed5.png)'
- en: When you're ready to launch/execute the module, type `run` and hit *Enter*.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您准备好启动/执行模块时，请输入`run`并按*Enter*。
- en: 'The following snippet is from a Windows 10 machine in our penetration lab.
    Looking closely, you can see that the IP configurations are within the parameters
    we had previously configured on our rogue DHCP server in Metasploit:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以下片段来自我们渗透实验室中的Windows 10机器。仔细观察，您会发现IP配置在我们之前在Metasploit中配置的参数范围内：
- en: '![](img/4c67743a-3915-476e-88a3-87da4009e2da.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4c67743a-3915-476e-88a3-87da4009e2da.png)'
- en: 'Additionally, the following is the Wireshark capture of the DHCP messages during
    the launch of the rogue DHCP server on the network:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，以下是在网络上启动恶意DHCP服务器期间的Wireshark捕获的DHCP消息：
- en: '![](img/4d082a93-c082-4f0e-9220-9537c47087bc.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d082a93-c082-4f0e-9220-9537c47087bc.png)'
- en: Looking closely at the screenshot, we can see the **DHCP Discover** packet sent
    from the Windows 10 machine looking for a DHCP server on the network. Eventually,
    our rogue DHCP server was able to respond to the client with a **DHCP Offer**
    packet.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细观察截图，我们可以看到从Windows 10机器发送的**DHCP Discover**数据包，寻找网络上的DHCP服务器。最终，我们的恶意DHCP服务器能够用**DHCP
    Offer**数据包回应客户端。
- en: 'The following shows the content of the **DHCP Offer** packet that was sent
    to the victim, the Windows 10 machine:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 以下显示了发送给受害者Windows 10机器的**DHCP Offer**数据包的内容：
- en: '![](img/a61193c8-6baf-4c28-b02b-6404c0aeb02c.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a61193c8-6baf-4c28-b02b-6404c0aeb02c.png)'
- en: We can see the client-assignable IP address (`10.10.10.101`), the default gateway
    (`10.10.10.16`), the client's MAC address, the type of DHCP message (`Offer`),
    the DHCP server's IP address (`10.10.10.16`), the subnet mask, and the DNS server
    configurations.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到可分配给客户端的IP地址（`10.10.10.101`），默认网关（`10.10.10.16`），客户端的MAC地址，DHCP消息的类型（`Offer`），DHCP服务器的IP地址（`10.10.10.16`），子网掩码和DNS服务器配置。
- en: '**DHCP Request** is sent from the client to the DHCP server (rogue) to confirm
    the IP configurations received from the **DHCP Offer** message. Lastly, the DHCP
    server (rogue) sends a **DHCP ACK** packet to acknowledge that the client is going
    to use the information provided.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**DHCP请求**从客户端发送到DHCP服务器（恶意）以确认从**DHCP提供**消息中接收到的IP配置。最后，DHCP服务器（恶意）发送一个**DHCP
    ACK**数据包以确认客户端将使用提供的信息。'
- en: You now have the skills to launch a DHCP attack on a target network using Metasploit.
    In the next section, we will cover **Link-Local Multicast Name Resolution** (**LLMNR**)
    and NetBIOS attacks.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经掌握了使用Metasploit对目标网络发动DHCP攻击的技能。在下一节中，我们将介绍**链路本地多播名称解析**（**LLMNR**）和NetBIOS攻击。
- en: Exploiting LLMNR and NetBIOS-NS
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用LLMNR和NetBIOS-NS
- en: In many organizations, as a penetration tester, you will encounter a lot of
    Windows Server machines that serve the role of **domain controller** (**DC**).
    A DC is simply a Windows server machine running Active Directory Domain Services
    and is used to manage all the devices within the organization. **Active Directory**
    (**AD**) is used by IT professionals to manage components such as computers and
    users on a network. Additionally, IT professionals can use **Group Policy Objects**
    (**GPOs**) in AD to assign privileges to end devices and users, thereby creating
    restrictions to prevent unauthorized activities and actions on the network.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多组织中，作为渗透测试人员，您将遇到许多充当**域控制器**（**DC**）角色的Windows Server机器。DC只是运行Active Directory域服务的Windows服务器机器，用于管理组织内的所有设备。**Active
    Directory**（**AD**）被IT专业人员用来管理网络上的计算机和用户等组件。此外，IT专业人员可以在AD中使用**组策略对象**（**GPOs**）来为最终设备和用户分配权限，从而创建限制以防止网络上的未经授权活动和行为。
- en: Within a Windows environment, both the **NetBIOS-NS** and **LLMNR** protocols
    are present. **NetBIOS-NS** means **Network Basic Input/Output System name service**.
    NetBIOS-NS is commonly used to resolve hostnames on local networks. NetBIOS has
    been around for quite a long time and is outdated. However, it is still being
    used to communicate with older, legacy systems.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows环境中，**NetBIOS-NS**和**LLMNR**协议都存在。**NetBIOS-NS**代表**网络基本输入/输出系统名称服务**。NetBIOS-NS通常用于解析本地网络上的主机名。NetBIOS已经存在了很长时间，已经过时。但是，它仍然被用于与旧的遗留系统进行通信。
- en: Today, the LLMNR protocol is commonly used on networks where a **Domain Name
    Server** (**DNS**) server is not present or available. Similar to NetBIOS-NS,
    LLMNR is also used to resolve hostnames on a network.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，LLMNR协议通常用于没有或不可用**域名服务器**（**DNS**）服务器的网络上。与NetBIOS-NS类似，LLMNR也用于解析网络上的主机名。
- en: 'Using Kali Linux, we can take advantage of the security vulnerabilities in
    these protocols. In this scenario, we will attempt to perform an MITM attack on
    our lab network. This design contains the following:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Kali Linux，我们可以利用这些协议中的安全漏洞。在这种情况下，我们将尝试对我们的实验网络执行MITM攻击。此设计包含以下内容：
- en: Windows Server 2016 with Active Directory Domain Services
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有Active Directory域服务的Windows Server 2016
- en: A new domain named `pentestlab.local`
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名为`pentestlab.local`的新域
- en: Windows 10 machine acting as a client in the domain
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10机器作为域中的客户端
- en: Kali Linux as the attacker machine using Responder to perform LLMNR poisoning
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Responder的Kali Linux作为攻击者机器执行LLMNR毒化
- en: 'In this exercise, we will be using the following topology to perform our attack:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用以下拓扑来执行我们的攻击：
- en: '![](img/89dfe802-ef5b-44d4-a28e-f90baeef1b0e.png)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89dfe802-ef5b-44d4-a28e-f90baeef1b0e.png)'
- en: Ensure that you have installed Windows Server 2016 in your lab. If you haven't
    done so already, please read [Chapter 3](487e7dee-83ee-47a8-955e-04958ea4dae4.xhtml),
    *Setting Up Kali - Part 2,* which contains the guidelines for installing Windows
    as a virtual machine.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您在实验室中安装了Windows Server 2016。如果还没有这样做，请阅读[第3章](487e7dee-83ee-47a8-955e-04958ea4dae4.xhtml)，*设置Kali
    - 第2部分*，其中包含安装Windows作为虚拟机的指南。
- en: 'To set up Active Directory in Windows Server 2016, please use the following
    URL: [https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/](https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/).'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Windows Server 2016中设置Active Directory，请使用以下网址：[https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/](https://blogs.technet.microsoft.com/canitpro/2017/02/22/step-by-step-setting-up-active-directory-in-windows-server-2016/)。
- en: 'To join the `pentestlab.local` domain using a Windows 10 machine, please refer
    to the following URL for instructions: [https://helpdeskgeek.com/how-to/windows-join-domain/](https://helpdeskgeek.com/how-to/windows-join-domain/).
    Additionally, on your Windows 10 machine, you will need to set the DNS Server
    as the IP address of the Windows Server 2016 machine before joining the domain.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Windows 10机器加入`pentestlab.local`域，请参考以下网址获取说明：[https://helpdeskgeek.com/how-to/windows-join-domain/](https://helpdeskgeek.com/how-to/windows-join-domain/)。此外，在您的Windows
    10机器上，您需要将DNS服务器设置为Windows Server 2016机器的IP地址，然后再加入域。
- en: Once the lab is ready, let's head over to our Kali Linux machine. We will use
    Responder to perform our MITM attack to capture various protocol messages.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 实验准备好后，让我们转到我们的Kali Linux机器。我们将使用Responder执行我们的MITM攻击，以捕获各种协议消息。
- en: 'To get started in terms of exploiting LLMNR and NetBIOS, observe the following
    instructions:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始利用LLMNR和NetBIOS，请遵循以下说明：
- en: 'Using the `locate` utility, we will discover the location of `Responder.py`,
    as shown in the following screenshot:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`locate`实用程序，我们将发现`Responder.py`的位置，如下面的屏幕截图所示：
- en: '![](img/18b21eb6-8af4-40df-a889-3df4ad239942.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/18b21eb6-8af4-40df-a889-3df4ad239942.png)'
- en: 'Change your current working directory to `/usr/share/responder`. Next, enable
    Responder to listen in on traffic on the network, as shown in the following screenshot:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将当前工作目录更改为`/usr/share/responder`。接下来，启用Responder以监听网络上的流量，如下面的屏幕截图所示：
- en: '![](img/3fd8e538-a762-4930-a514-ed9102bea5f8.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3fd8e538-a762-4930-a514-ed9102bea5f8.png)'
- en: 'We will use the following parameters in Responder:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在Responder中使用以下参数：
- en: '**`-I`**, to specify the listening interface'
  id: totrans-244
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`-I`**，指定监听接口'
- en: '`-r`, to enable responses for NetBIOS queries on the network'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-r`，以启用网络上NetBIOS查询的响应'
- en: '`-d`, to enable NetBIOS replies for domain suffix queries on the network'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-d`，以启用网络上域后缀查询的NetBIOS回复'
- en: '`-w`, to enable the WPAD rogue proxy server'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-w`，以启用WPAD恶意代理服务器'
- en: 'By default, Responder performs poisoning attacks on victims. Whenever the client
    attempts to access a resource on the network, such as file share, the user''s
    credentials are sent over the wire, as shown in the following screenshot:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，Responder对受害者执行中毒攻击。每当客户端尝试访问网络上的资源，例如文件共享时，用户的凭据就会通过网络发送，如下截图所示：
- en: '![](img/084c7f4f-9e5e-4b9e-a6b0-d1c7e333ca0a.png)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](img/084c7f4f-9e5e-4b9e-a6b0-d1c7e333ca0a.png)'
- en: 'We are able to identify the following:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够确定以下内容：
- en: The client's IP address
  id: totrans-251
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端的IP地址
- en: The domain name
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 域名
- en: The victim's username (bob)
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 受害者的用户名（鲍勃）
- en: The victim's password in the form of an NTLMv2 hash
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 受害者的密码，以NTLMv2哈希的形式
- en: The hashing algorithm
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哈希算法
- en: The fact that the user was attempting to access a **Server Message Block** (**SMB**)
    file share on the network
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户试图访问网络上的**服务器消息块**（**SMB**）文件共享
- en: Copy the hash and save it into a text file on your desktop. I have saved my
    hash on my desktop in a file named `Hash.txt`.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 复制哈希并将其保存到桌面上的文本文件中。我已经将我的哈希保存在名为`Hash.txt`的文件中。
- en: By default, Responder saves hashes in the `/usr/share/responder/logs` directory
    using the victim's IP address as part of the naming convention for the text file.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Responder使用受害者的IP地址作为文本文件命名约定的一部分，将哈希保存在`/usr/share/responder/logs`目录中。
- en: 'Next, we can use **Hashcat** to perform offline password cracking of the NTLMv2
    hash to recover the plaintext password of the user. Use the following syntax to
    perform password cracking with Hashcat:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们可以使用**Hashcat**对NTLMv2哈希进行离线密码破解，以恢复用户的明文密码。使用以下语法使用Hashcat进行密码破解：
- en: '[PRE19]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Remember that performing password cracking can be a time-consuming task. Additionally,
    ensure that the wordlist list/directory file contains a large number of entries
    to increase the possibility of success.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，进行密码破解可能是一项耗时的任务。此外，请确保单词列表/目录文件包含大量条目，以增加成功的可能性。
- en: Use the `-m` parameter to specify a mode in Hashcat. A mode is used to tell
    Hashcat the type of hash. Mode `5600` is used for **Network Protocol – NetNTLMv2**.
    Additionally, to discover other modes, use the `hashcat --help` command.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-m`参数来指定Hashcat中的模式。模式用于告诉Hashcat哈希的类型。模式`5600`用于**网络协议 - NetNTLMv2**。此外，要发现其他模式，请使用`hashcat
    --help`命令。
- en: 'To download the SecLists wordlist, please refer to the following URL: [https://github.com/danielmiessler/SecLists](https://github.com/danielmiessler/SecLists).'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载SecLists单词列表，请参考以下URL：[https://github.com/danielmiessler/SecLists](https://github.com/danielmiessler/SecLists)。
- en: Furthermore, you can use **John the Ripper** to perform password cracking on
    the hashes you have captured using Responder.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以使用**John the Ripper**对使用Responder捕获的哈希进行密码破解。
- en: Now that you have completed this section, you are now able to exploit the weaknesses
    in LLMNR. In the next section, we will demonstrate how to exploit WPAD vulnerabilities.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经完成了本节，您现在可以利用LLMNR中的弱点。在下一节中，我们将演示如何利用WPAD的漏洞。
- en: WPAD protocol attacks
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WPAD协议攻击
- en: Within a corporate network, system administrators usually allow employees to
    access the internet through a proxy server. The proxy server usually improves
    performance and security, and monitors web traffic entering and leaving the corporate
    network. WPAD is a technique that is used on client machines to discover the URL
    of a configuration file via DHCP discovery methods. Once a client machine discovers
    a file, it is downloaded on the client machine and executed. The script will determine
    the proxy for the client.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业网络中，系统管理员通常允许员工通过代理服务器访问互联网。代理服务器通常提高性能和安全性，并监视进出企业网络的网络流量。WPAD是一种在客户端机器上使用的技术，通过DHCP发现方法来发现配置文件的URL。一旦客户端机器发现文件，它就会下载到客户端机器上并执行。脚本将为客户端确定代理。
- en: 'In this exercise, we are going to use Responder on Kali Linux to capture a
    victim''s user credentials. Before we begin, the following topology will be used
    in this exercise:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将在Kali Linux上使用Responder来捕获受害者的用户凭据。在开始之前，本练习将使用以下拓扑结构：
- en: '![](img/a7842e6c-9ab1-4437-bf96-745ea27cd2cd.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a7842e6c-9ab1-4437-bf96-745ea27cd2cd.png)'
- en: 'Using the following steps, we will be able to easily exploit WPAD in a Windows
    environment:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下步骤，我们将能够轻松地在Windows环境中利用WPAD：
- en: The lab configurations are the same as those in the previous section.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 实验室配置与上一节相同。
- en: Ensure that the Windows 10 client machine has joined the domain hosted by Windows
    Server.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保Windows 10客户端机器已加入由Windows Server托管的域。
- en: On your Kali Linux machine, change your working directory to the Responder location
    using the `cd /usr/share/responder` command.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Kali Linux机器上，使用`cd /usr/share/responder`命令将工作目录更改为Responder位置。
- en: 'Execute the `python Responder.py -I eth0 -wFb` command:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`python Responder.py -I eth0 -wFb`命令：
- en: '![](img/b44e207a-13fe-43ed-8d1d-674f21064db2.png)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b44e207a-13fe-43ed-8d1d-674f21064db2.png)'
- en: 'The switches used in the snippet provide the following functions:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 片段中使用的开关提供以下功能：
- en: '`-I`: Specifies the interface to use'
  id: totrans-277
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-I`：指定要使用的接口'
- en: '`-w`: Enables the WPAD rogue proxy server'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-w`：启用WPAD恶意代理服务器'
- en: '`-F`: Forces NTLM authentication on `wpad.dat` file retrieve'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-F`：强制在`wpad.dat`文件检索中使用NTLM身份验证'
- en: '`-b`: Is used to return basic HTTP authentication'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-b`：用于返回基本的HTTP身份验证'
- en: 'When the victim attempts to browse or access any local resources on the network,
    the following login window will appear:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当受害者尝试浏览或访问网络上的任何本地资源时，将出现以下登录窗口：
- en: '![](img/788a6864-c93e-496e-a35b-f05218461830.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/788a6864-c93e-496e-a35b-f05218461830.png)'
- en: Once the victim enters their user credentials, Responder will display them in
    plaintext, as shown in the following screenshot.
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦受害者输入他们的用户凭据，Responder将以明文显示它们，如下截图所示。
- en: Please note that the user account used in this example is one that I have set
    myself in my personal lab domain for educational purposes.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此示例中使用的用户帐户是我在个人实验室域中为教育目的设置的。
- en: 'Just as a reminder, all logs generated and data captured by Responder are stored
    in the `/usr/share/responder/logs` directory. Now, you are able to capture employees''
    user credentials by exploiting WPAD on a corporate network:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 只是作为提醒，Responder生成的所有日志和捕获的数据都存储在`/usr/share/responder/logs`目录中。现在，您可以通过利用企业网络上的WPAD来捕获员工的用户凭据：
- en: '![](img/4e5797d4-710b-409e-a820-d5f78a2af58b.png)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e5797d4-710b-409e-a820-d5f78a2af58b.png)'
- en: In the next section, we will learn about Wireshark.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习关于Wireshark的知识。
- en: Wireshark
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wireshark
- en: Wireshark is one of the best network protocol analyzers and sniffers in the
    industry. Its capabilities are extensive and provide in-depth results and analysis
    on network packets. For every conversation or transaction that happens on a network,
    Wireshark is able to provide a breakdown of the composition of each packet.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark是业内最好的网络协议分析器和嗅探器之一。它的功能非常广泛，并且能够对网络数据包进行深入的结果和分析。对于网络上发生的每一次对话或交易，Wireshark都能够提供每个数据包的构成细节。
- en: We will begin by taking an overview of the functions of Wireshark.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先概述Wireshark的功能。
- en: Basic overview of Wireshark and how to use it in MITM attacks
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wireshark的基本概述以及如何在MITM攻击中使用它
- en: 'Wireshark is already pre-installed on your Kali Linux operating system. To
    get started, perform the following steps:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark已经预先安装在您的Kali Linux操作系统上。要开始，请执行以下步骤：
- en: Navigate to Applications | 09 – Sniffing & Spoofing | wireshark.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到应用程序| 09-嗅探和欺骗| wireshark。
- en: 'Once Wireshark is open, you''ll be presented with the user interface as shown
    in the following screenshot:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦打开Wireshark，您将看到用户界面，如下面的屏幕截图所示：
- en: '![](img/bf37db63-389b-4968-a742-e798e2d554c6.png)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf37db63-389b-4968-a742-e798e2d554c6.png)'
- en: Wireshark will provide a list of all network interfaces and display a live summary
    graph of live network traffic passing through each network adapter. Double-clicking
    an interface will immediately start a live capture on the network interface card.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wireshark将提供所有网络接口的列表，并显示通过每个网络适配器传递的实时网络流量的摘要图。双击接口将立即在网络接口卡上开始实时捕获。
- en: Enabling a capture on your local system will only display traffic flowing between
    your attacker machine and the remainder of the network. This means that Wireshark
    will only be able to intercept/sniff network traffic that is inbound to, and outbound
    from, your computer. That's not so handy, is it?
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地系统上启用捕获将只显示流经攻击者机器和网络其余部分之间的流量。这意味着Wireshark只能拦截/嗅探流入和流出您计算机的网络流量。这并不那么方便，对吧？
- en: Let's take a look at creating a mirror of all network traffic from a network
    switch and sending it to our attacker machine.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何从网络交换机创建所有网络流量的镜像并将其发送到我们的攻击者机器。
- en: Configuring a SPAN port
  id: totrans-299
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置SPAN端口
- en: 'SPAN allows a switch to create a copy of traffic on one or more ports and send
    the same copy out of another port. This configuration is usually done when a network
    security administrator wants to connect a protocol analyzer (sniffer) or an **intrusion
    detection system** (**IDS**) to the network to monitor for any security threats:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: SPAN允许交换机复制一个或多个端口上的流量，并将相同的副本发送到另一个端口。通常在网络安全管理员想要连接协议分析仪（嗅探器）或入侵检测系统（IDS）到网络以监视任何安全威胁时进行此配置：
- en: '![](img/fa41550a-4b36-4874-9498-b9b44f314703.png)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fa41550a-4b36-4874-9498-b9b44f314703.png)'
- en: In the diagram, the attacker machine (running Wireshark) is connected to the
    Fast Ethernet 0/1 interface on a **Cisco IOS 2960** **switch**, while the other
    devices are connected to the same network segment. Let's say we would like to
    get a copy of all traffic flowing between the Fast Ethernet 0/2, Fast Ethernet
    0/3, and Fast Ethernet 0/4 ports.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 在图中，攻击者机器（运行Wireshark）连接到**Cisco IOS 2960** **交换机**上的Fast Ethernet 0/1接口，而其他设备连接到同一网络段。假设我们想要复制流经Fast
    Ethernet 0/2、Fast Ethernet 0/3和Fast Ethernet 0/4端口之间的所有流量。
- en: 'To perform this task of configuring a SPAN port on a Cisco IOS switch, use
    the following guidelines:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行在Cisco IOS交换机上配置SPAN端口的任务，请使用以下准则：
- en: 'We can use the following command to send the output to Fast Ethernet 0/1:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令将输出发送到Fast Ethernet 0/1：
- en: '[PRE20]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To verify the configurations, use the `show monitor` command on the switch:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证配置，请在交换机上使用`show monitor`命令：
- en: '![](img/0e46e174-9a7e-4fa6-a115-bbfa2d2e2bc5.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e46e174-9a7e-4fa6-a115-bbfa2d2e2bc5.png)'
- en: The output shows us that the source ports (used for monitoring network traffic)
    and destination ports are configured properly. Once we have enabled Wireshark
    on our attacker machine to start capturing on our local interface, `eth0`, all
    network packets will be shown live on the Wireshark user interface.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示我们的源端口（用于监视网络流量）和目标端口已正确配置。一旦我们在攻击者机器上启用Wireshark开始在我们的本地接口`eth0`上捕获，所有网络数据包将实时显示在Wireshark用户界面上。
- en: Having completed this section, you are now able to configure a SPAN port on
    a Cisco IOS switch. In the next section, we will dive into configuring Wireshark
    to sniff network traffic.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了这一部分，您现在可以在Cisco IOS交换机上配置SPAN端口。在下一节中，我们将深入了解如何配置Wireshark来嗅探网络流量。
- en: Configuring a monitor (sniffer) interface on Wireshark
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Wireshark上配置监视（嗅探）接口
- en: 'To configure a monitoring (sniffer) interface on Wireshark, observe the following
    instructions:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Wireshark上配置监视（嗅探）接口，请遵循以下说明：
- en: 'Click on Capture | Options to display all network interfaces on the local machine:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“捕获”|“选项”以显示本地机器上的所有网络接口：
- en: '![](img/ae0917ee-9347-47b0-b226-c9e6a4761ed7.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ae0917ee-9347-47b0-b226-c9e6a4761ed7.png)'
- en: 'Select the appropriate network interface, select Enable promiscuous mode on
    all interfaces, and then click Start to begin capturing network packets:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择适当的网络接口，选择在所有接口上启用混杂模式，然后单击“开始”开始捕获网络数据包：
- en: '![](img/c630fee5-a4f6-46f4-bc06-4bf2c8b4be03.png)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c630fee5-a4f6-46f4-bc06-4bf2c8b4be03.png)'
- en: 'The **Packet List** pane will begin to populate network packets as transactions
    take place on the network. Clicking on a packet will display all its details and
    fields within the following **Packet Details** pane:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据包列表**窗格将开始填充网络数据包，因为网络上正在进行交易。单击数据包将在以下**数据包详细信息**窗格中显示其所有详细信息和字段：'
- en: '![](img/af5558ed-bc66-4b5f-8e1c-a5d2c73511f5.png)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![](img/af5558ed-bc66-4b5f-8e1c-a5d2c73511f5.png)'
- en: As packets are being populated on the interface, the experience may be a bit
    overwhelming. In the following sub-sections, we will take a practical approach
    in performing HTTP analysis and other types of analysis to ascertain some important
    information.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 当界面上的数据包被填充时，体验可能有点压倒性。在接下来的子部分中，我们将采取实际方法进行HTTP分析和其他类型的分析，以确定一些重要信息。
- en: Having completed this section, you are now able to use Wireshark as a sniffer
    on a network. In the next section, we will demonstrate how to perform traffic
    analysis in order to gather sensitive information using Wireshark.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了本节，您现在可以将Wireshark用作网络上的嗅探器。在下一节中，我们将演示如何执行流量分析以收集敏感信息。
- en: Parsing Wireshark packet captures to find the goods
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解析Wireshark数据包捕获以找到有用信息
- en: 'In the following exercise, we''ll be using capture from **The Honeynet Project**
    ([www.honeynet.org](http://www.honeynet.org)) to help us understand packet analysis.
    To perform the parsing of Wireshark packets, observe the following steps:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的练习中，我们将使用**The Honeynet Project**（[www.honeynet.org](http://www.honeynet.org)）的捕获来帮助我们理解数据包分析。要执行Wireshark数据包的解析，请遵循以下步骤：
- en: Go to [https://www.honeynet.org/node/1220](https://www.honeynet.org/node/1220)
    and download the `conference.pcapng` file. Additionally, the following URL, [https://honeynet.org/sites/default/files/conference.pcapng.gz](https://honeynet.org/sites/default/files/conference.pcapng.gz),
    is a direct download link to the file.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[https://www.honeynet.org/node/1220](https://www.honeynet.org/node/1220)并下载`conference.pcapng`文件。此外，以下URL，[https://honeynet.org/sites/default/files/conference.pcapng.gz](https://honeynet.org/sites/default/files/conference.pcapng.gz)，是该文件的直接下载链接。
- en: 'Once downloaded, open the `conference.pcapng` file using Wireshark; you should
    have the following view:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载后，使用Wireshark打开`conference.pcapng`文件；您应该看到以下视图：
- en: '![](img/afc0e862-89c0-4de9-859a-0f7a923a6cdf.png)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![](img/afc0e862-89c0-4de9-859a-0f7a923a6cdf.png)'
- en: 'A helpful feature of Wireshark is to auto-resolve IP addresses to hostnames
    via DNS, resolve MAC addresses to vendor names, and resolve port numbers to services
    and protocols. To enable this feature, go to Edit | Preferences | Name Resolution.
    Ensure the following options are checked:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wireshark的一个有用功能是通过DNS自动将IP地址解析为主机名，将MAC地址解析为供应商名称，并将端口号解析为服务和协议。要启用此功能，请转到编辑
    | 首选项 | 名称解析。确保已选中以下选项：
- en: '![](img/4e42f6ef-95f8-4c75-8a10-5788899c8227.png)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4e42f6ef-95f8-4c75-8a10-5788899c8227.png)'
- en: 'Click OK to confirm and save the configuration. Back on the main user interface,
    you''ll notice that all the public IP addresses are now resolved to their public
    hostnames:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”以确认并保存配置。回到主用户界面，您会注意到所有公共IP地址现在都已解析为它们的公共主机名：
- en: '![](img/4ae894dd-0d03-477b-a3ec-e28b7b069912.png)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ae894dd-0d03-477b-a3ec-e28b7b069912.png)'
- en: 'What makes Wireshark such a powerful tool is its display and capture filters.
    To see all traffic originating from a source IP address, use the `ip.src == <ip
    address>` filter:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wireshark之所以成为强大的工具，是因为它的显示和捕获过滤器。要查看所有源自源IP地址的流量，请使用`ip.src == <ip地址>`过滤器：
- en: '![](img/d049a841-2892-4e6d-a706-532e5849ee78.png)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d049a841-2892-4e6d-a706-532e5849ee78.png)'
- en: 'To display all traffic for a specific destination address, we can use the `ip.dst
    == <ip address>` filter. However, we can combine filters to view traffic from
    a specific source to a destination using the `(ip.src == <ip address>) && (ip.dst
    == <ip address>)` filter. In the following screenshot, we are using a filter to
    view all traffic originating from `172.16.254.128` going to Google''s DNS server
    `8.8.8.8`:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示特定目标地址的所有流量，我们可以使用`ip.dst == <ip地址>`过滤器。但是，我们可以结合过滤器使用`(ip.src == <ip地址>)
    && (ip.dst == <ip地址>)`过滤器查看从特定源到目的地的流量。在以下截图中，我们使用过滤器查看所有源自`172.16.254.128`并前往Google的DNS服务器`8.8.8.8`的流量：
- en: '![](img/42722bca-24e6-4c64-b77d-7244da1f3719.png)'
  id: totrans-332
  prefs: []
  type: TYPE_IMG
  zh: '![](img/42722bca-24e6-4c64-b77d-7244da1f3719.png)'
- en: 'When combining filters, you''ll need to use logic operations to get the task
    done. The following is a short list of various operators for combining filters
    in Wireshark:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 在组合过滤器时，您需要使用逻辑操作来完成任务。以下是Wireshark中用于组合过滤器的各种运算符的简短列表：
- en: '![](img/b64167ac-358e-4638-a06e-1b9f6d51add7.png)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b64167ac-358e-4638-a06e-1b9f6d51add7.png)'
- en: The `Ge` operator is used to indicate **greater than or equal to**, while the
    `Le` operator is used to indicate **less than or equal to**.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '`Ge`运算符用于指示**大于或等于**，而`Le`运算符用于指示**小于或等于**。'
- en: To learn more about Wireshark display filters, please visit [https://wiki.wireshark.org/DisplayFilters](https://wiki.wireshark.org/DisplayFilters).
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Wireshark显示过滤器的信息，请访问[https://wiki.wireshark.org/DisplayFilters](https://wiki.wireshark.org/DisplayFilters)。
- en: Memorizing display filters can be very challenging for anyone. However, Wireshark
    has made it simple to create custom filters quite easily using the right-click
    options on the user interface. Let's now try a few exercises to help you become
    more familiar with display filters.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何人来说，记住显示过滤器可能非常具有挑战性。但是，Wireshark已经简化了使用用户界面上的右键单击选项轻松创建自定义过滤器。现在让我们尝试一些练习，以帮助您更熟悉显示过滤器。
- en: 'To get started with creating display filters in Wireshark, perform the following
    steps:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始在Wireshark中创建显示过滤器，请执行以下步骤：
- en: 'First, right-click on the source IP address on packet 1, and then click on
    **Apply as Filter** | **Selected** to immediately create and apply the filter:'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在数据包1上右键单击源IP地址，然后单击**应用为过滤器** | **已选择**，立即创建并应用过滤器：
- en: '![](img/aca92aa8-80a7-44f5-a214-503e926d9a38.png)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aca92aa8-80a7-44f5-a214-503e926d9a38.png)'
- en: Now, we have a filter showing all traffic originating from the `172.16.254.128`
    address.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一个显示所有源自`172.16.254.128`地址的流量的过滤器。
- en: 'Next, in the Destination column, right-click on `8.8.8.8` or `google-public-dns-a.google.com`,
    click on **Apply as Filter**, and then select the option **...and Selected**:'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在目标列中，右键单击`8.8.8.8`或`google-public-dns-a.google.com`，单击**应用为过滤器**，然后选择选项**...和已选择的**：
- en: '![](img/de821ab1-ad5b-48a9-8973-7ad5140adf2c.png)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![](img/de821ab1-ad5b-48a9-8973-7ad5140adf2c.png)'
- en: This will create the effect of displaying only traffic originating from `172.16.254.128`
    going to Google's DNS server.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致仅显示源自`172.16.254.128`并发送到Google的DNS服务器的流量。
- en: The **Apply as Filter** option will immediately apply the display filter on
    Wireshark. However, **Prepare as Filter** provides the same options but does not
    immediately apply the display filter. Rather, it allows you to continue building
    the filter syntax and apply it afterward.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用为过滤器**选项将立即在Wireshark上应用显示过滤器。但是，**准备为过滤器**提供相同的选项，但不会立即应用显示过滤器。相反，它允许您继续构建过滤器语法，并在之后应用它。'
- en: 'To view all conversations between devices on the network, click on **Statistics**
    | **Conversations**:'
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看网络上设备之间的所有对话，请单击**统计** | **对话**：
- en: '![](img/f5f37362-8c54-4227-b8cc-52f135858a86.png)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5f37362-8c54-4227-b8cc-52f135858a86.png)'
- en: 'The Conversations window will open, providing multiple tabs with various details
    such as Ethernet, IPv4, IPv6, TCP, and UDP sessions between devices, as shown
    in the following screenshot:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 对话窗口将打开，提供多个选项卡，其中包含以太网，IPv4，IPv6，TCP和UDP会话的各种详细信息，如下面的屏幕截图所示：
- en: '![](img/f3fa99eb-394f-490f-b7df-601a994c1d5a.png)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3fa99eb-394f-490f-b7df-601a994c1d5a.png)'
- en: You'll be able to determine which devices were communicating and transferring
    packets for a given time.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 您将能够确定在给定时间内进行通信和传输数据包的设备。
- en: 'Wireshark allows us to easily view all the files that are downloaded and uploaded
    over the network. To perform this task, click on **File** | **Export Objects**
    | **HTTP**. The HTTP export window will open, displaying Packet, Hostname (source),
    Content Type, Size, and Filename details. To export a file to your desktop, select
    a packet on the interface and click on **Save**:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wireshark允许我们轻松查看通过网络下载和上传的所有文件。要执行此任务，请单击**文件** | **导出对象** | **HTTP**。 HTTP导出窗口将打开，显示数据包，主机名（源），内容类型，大小和文件名等详细信息。要将文件导出到桌面，请在界面上选择一个数据包，然后单击**保存**：
- en: '![](img/1f9df10d-b5f2-468b-b303-a369581efa68.png)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f9df10d-b5f2-468b-b303-a369581efa68.png)'
- en: To export all the files from a Wireshark capture, use the **Save All** option.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Wireshark捕获中导出所有文件，请使用**保存所有**选项。
- en: 'To reassemble and view all the messages for a single conversation between two
    devices, right-click on a packet and select **Follow** | **TCP Stream**:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要重新组装并查看两个设备之间的单个对话的所有消息，请右键单击数据包，然后选择**跟踪** | **TCP流**：
- en: '![](img/f139b3f2-a670-447d-a029-63b2d1ffc4de.png)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f139b3f2-a670-447d-a029-63b2d1ffc4de.png)'
- en: 'Wireshark will gather all the packets for this stream, reassemble them, and
    present you with the dialog of messages exchanged between the two devices, as
    shown in the following screenshot:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark将收集此流的所有数据包，重新组装它们，并向您呈现两个设备之间交换的消息对话框，如下面的屏幕截图所示：
- en: '![](img/8528ead3-f63d-49c0-a07a-c3dd59a9c2c0.png)'
  id: totrans-357
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8528ead3-f63d-49c0-a07a-c3dd59a9c2c0.png)'
- en: 'The following is a screenshot of a Telnet conversation between a client and
    a Linux server. Telnet is an **unsecure** protocol, and all communication between
    the Telnet client and Telnet server is sent across the network in plaintext. The
    following screenshot shows how Wireshark reassembles all the packets for a single
    conversation:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是客户端和Linux服务器之间Telnet对话的屏幕截图。 Telnet是一种**不安全**协议，Telnet客户端和Telnet服务器之间的所有通信都以明文形式通过网络发送。以下屏幕截图显示了Wireshark如何重新组装单个对话的所有数据包：
- en: '![](img/1ea8187a-0a9f-41ca-9d22-ea443dbc9219.png)'
  id: totrans-359
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1ea8187a-0a9f-41ca-9d22-ea443dbc9219.png)'
- en: We can see the user credentials used to log in to the server, the server **message
    of the day** (**MOTD**) banner, and all other transactions.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到用于登录服务器的用户凭据，服务器的**当天消息**（**MOTD**）横幅以及所有其他交易。
- en: Having completed this section, you now have the skill set required to create
    custom display filters in Wireshark. In the next section, we will learn about
    escalating privileges.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了本节，您现在具备了在Wireshark中创建自定义显示过滤器所需的技能。在下一节中，我们将学习如何升级权限。
- en: Escalating privileges
  id: totrans-362
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级权限
- en: Obtaining a user's credentials to access a system is only part of the gaining-access
    phase in penetration testing. However, remember that not all user accounts have
    **root** or **administrator** privileges. Therefore, remotely accessing a system
    with a non-root or standard user account will prevent you from executing certain
    applications and performing administrative tasks on the victim's system.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 获取用户凭据以访问系统只是渗透测试中获得访问权限阶段的一部分。但是，请记住，并非所有用户帐户都具有**root**或**管理员**权限。因此，远程访问具有非根或标准用户帐户的系统将阻止您执行某些应用程序并在受害者系统上执行管理任务。
- en: 'Escalating privileges can be executed using a variety of techniques, including
    the following:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用各种技术来升级权限，包括以下内容：
- en: Obtaining information from the SAM file on Windows
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Windows的SAM文件中获取信息
- en: Retrieving data from the `passwd` file on Linux
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Linux上的`passwd`文件中检索数据
- en: Exploiting weak permissions on running processes on a system
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用系统上运行进程的弱权限
- en: Obtaining sensitive information found on stored network file shares
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取存储在网络文件共享上的敏感信息
- en: Capturing the hash value of a user's password while they are communicating with
    another device on the network.
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在用户与网络上的另一设备通信时，捕获用户密码的哈希值。
- en: The information found in the SAM and passwd files contains the usernames and
    hash values of the users' passwords. Using password cracking techniques, you'll
    be able to retrieve the plaintext passwords of user accounts, which can then be
    used to gain access to devices. Obtaining an administrator or root account will
    provide unrestricted access to the system.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: SAM和passwd文件中的信息包含用户的用户名和密码的哈希值。使用密码破解技术，您将能够检索用户帐户的明文密码，然后可以使用这些密码访问设备。获取管理员或root帐户将为您提供对系统的无限制访问。
- en: Having access to a system with a standard user account means we can execute
    a local privilege escalation exploit to gain administrator or root-level access.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有标准用户帐户的系统访问权限意味着我们可以执行本地特权升级漏洞利用来获取管理员或根级别的访问权限。
- en: 'Exploit-DB ([https://www.exploit-db.com/](https://www.exploit-db.com/)) provides
    a large repository of exploits for many purposes; use the search feature on the
    Exploit-DB website to discover privilege escalation exploits:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: Exploit-DB ([https://www.exploit-db.com/](https://www.exploit-db.com/))提供了一个用于多种目的的大型漏洞利用库；使用Exploit-DB网站上的搜索功能来发现特权升级漏洞利用：
- en: '![](img/3e89a7d7-35cc-48b9-8cb6-18ab63449897.png)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e89a7d7-35cc-48b9-8cb6-18ab63449897.png)'
- en: 'In the previous chapters, we demonstrated techniques using Metasploit to successfully
    exploit a target and gain access. The **Meterpreter** component provides the `getsystem`
    command, which attempts to escalate privileges on the target system as shown in
    the following screenshot. Look closely: you will see that we are able to acquire
    `nt authority\system` privileges on the victim. This is the highest level of access:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们演示了使用Metasploit成功利用目标并获取访问权限的技术。**Meterpreter**组件提供了`getsystem`命令，它尝试在目标系统上提升权限，如下面的截图所示。仔细看：你会看到我们能够在受害机上获得`nt
    authority\system`权限。这是最高级别的访问权限：
- en: '![](img/4632f435-c683-478d-bf6e-9e5507cc0676.png)'
  id: totrans-375
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4632f435-c683-478d-bf6e-9e5507cc0676.png)'
- en: Within our Meterpreter shell, we can verify our level of access by using the
    `shell` command to get the Windows Command Prompt of our victim's machine. Once
    the Windows shell is obtained, we can now execute Windows-based commands such
    as `whoami` to verify our level of privilege on the victim's machine.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的Meterpreter shell中，我们可以使用`shell`命令来获取受害机器的Windows命令提示符，以验证我们在受害机器上的权限级别。
- en: Always ensure that you perform extensive research about a target's vulnerability
    by checking Exploit-DB ([www.exploit-db.com](http://www.exploit-db.com)) and the
    Common Vulnerabilities and Exposures ([https://cve.mitre.org/](https://cve.mitre.org/))
    database for exploits to assist you in gaining access and escalating user privileges.
    In the next section, we will dive into lateral movement.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 始终确保通过检查Exploit-DB ([www.exploit-db.com](http://www.exploit-db.com))和通用漏洞和暴露
    ([https://cve.mitre.org/](https://cve.mitre.org/)) 数据库来进行关于目标漏洞的广泛研究，以帮助你获取访问权限和提升用户权限的漏洞利用。在下一节中，我们将深入研究横向移动。
- en: Lateral movement tactics
  id: totrans-378
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 横向移动策略
- en: Lateral movement allows an attacker to pivot all attacks through a compromised
    machine to other subnets within an organization. Let's imagine you're conducting
    a penetration test on a client's network. Their organization contains multiple
    subnets but they haven't informed you about the number of networks that actually
    exist. So, you start to scan the network to look for live hosts and vulnerabilities,
    and to discover the topology.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 横向移动允许攻击者将所有攻击通过一个受损的机器转移到组织内的其他子网。让我们想象一下，你正在对客户的网络进行渗透测试。他们的组织包含多个子网，但他们没有告诉你实际存在的网络数量。所以，你开始扫描网络以寻找活动主机和漏洞，并发现拓扑结构。
- en: 'You''ve discovered and mapped the entire `10.10.10.0/24` network and you begin
    to exploit as many machines as possible. However, during your exploitation phase,
    you notice something interesting on a particular victim machine, and, on the Meterpreter
    shell, you execute the `ipconfig` command to view the IP configurations on the
    victim''s machine:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经发现并映射了整个`10.10.10.0/24`网络，并开始尽可能多地利用机器。然而，在你的利用阶段，你注意到了一个特定受害机器上的有趣的东西，并且在Meterpreter
    shell上，你执行`ipconfig`命令来查看受害机器上的IP配置：
- en: '![](img/e442c01d-4d50-4445-b5f5-916ca37ee78e.png)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e442c01d-4d50-4445-b5f5-916ca37ee78e.png)'
- en: In our scenario, `Interface 11` is connected to the same subnet as our attacker
    machine, and `Interface 18` is on another network. In some situations, if you
    attempt to access another subnet, a router or firewall may be configured to restrict
    access between different subnets for security purposes.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情景中，`Interface 11`连接到与攻击者机器相同的子网，而`Interface 18`连接到另一个网络。在某些情况下，如果你尝试访问另一个子网，路由器或防火墙可能会配置为出于安全目的限制不同子网之间的访问。
- en: 'To get past security appliances and network access controls, the technique
    of **lateral movement** (pivoting) should be used. As the attacker, we can attempt
    to compromise a machine that is connected and is trusted on other subnets within
    the organization. Once we''ve set up pivoting or lateral movement, all our attacks
    will be sent through the victim machine and forwarded to the new target network,
    as shown in the following screenshot:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 为了绕过安全设备和网络访问控制，应该使用**横向移动**（枢轴）技术。作为攻击者，我们可以尝试妥协连接并在组织内其他子网上受信任的机器。一旦我们建立了枢轴或横向移动，所有我们的攻击将被发送通过受害机器并转发到新的目标网络，如下面的截图所示：
- en: '![](img/ac8f85bd-b20b-4685-9251-0c8f59b45560.png)'
  id: totrans-384
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac8f85bd-b20b-4685-9251-0c8f59b45560.png)'
- en: 'To perform lateral movement using Metasploit, observe the following instructions:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Metasploit执行横向移动，请遵循以下说明：
- en: 'Using the `arp` command on Meterpreter will display the ARP cache. In the following
    screenshot, there are two different networks connected to our victim:'
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Meterpreter上使用`arp`命令将显示ARP缓存。在下面的截图中，有两个不同的网络连接到我们的受害机：
- en: '![](img/c1785c20-b25d-4969-b5a2-1e98fd89d4a9.png)'
  id: totrans-387
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1785c20-b25d-4969-b5a2-1e98fd89d4a9.png)'
- en: 'To enable lateral movement, execute the `run post/multi/manage/autoroute` command
    within Meterpreter, as shown in the following screenshot:'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启用横向移动，在Meterpreter中执行`run post/multi/manage/autoroute`命令，如下面的截图所示：
- en: '![](img/0098d4f9-d6fb-491d-99f5-c1622d05ffb2.png)'
  id: totrans-389
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0098d4f9-d6fb-491d-99f5-c1622d05ffb2.png)'
- en: This will add a route to the additional networks and allow your attacker machine
    to send all its attacks to the victim machine (`10.10.10.23`) and forward them
    to the `10.10.11.0/24` network.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 这将添加一个路由到附加网络，并允许你的攻击者机器将所有攻击发送到受害机器（`10.10.10.23`）并转发到`10.10.11.0/24`网络。
- en: 'To test lateral movement (pivoting), we can attempt to perform a NetBIOS scan
    on the `10.10.11.0/24` network from our attacker machine:'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了测试横向移动（枢纽），我们可以尝试从攻击者机器上对`10.10.11.0/24`网络执行NetBIOS扫描：
- en: '![](img/cb1ddc8e-9afa-4c48-9bc9-b926fcb80922.png)'
  id: totrans-392
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/cb1ddc8e-9afa-4c48-9bc9-b926fcb80922.png)
- en: 'The following results prove that our attacker machine is able to perform scans
    and attacks on another subnet:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 以下结果证明我们的攻击者机器能够对另一个子网执行扫描和攻击：
- en: '![](img/b6b72db3-be18-457f-b3a5-d656cb91d5c3.png)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/b6b72db3-be18-457f-b3a5-d656cb91d5c3.png)
- en: 'Additionally, performing a TCP port scan on a target has proven fruitful since
    all attacks are sent through the `10.10.10.23` machine:'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，在目标上执行TCP端口扫描已经证明是成功的，因为所有攻击都是通过`10.10.10.23`机器发送的：
- en: '![](img/dfeeee96-449b-4629-941b-6b24def7a7af.png)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/dfeeee96-449b-4629-941b-6b24def7a7af.png)
- en: We can then target the new subnet.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以针对新的子网。
- en: During a penetration test, we may be tasked with discovering hidden or remote
    networks. For each system you have gained access to, be sure to check the ARP
    cache on the victim's machine and attempt to perform lateral movement throughout
    the network.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试期间，我们可能被要求发现隐藏或远程网络。对于您已经访问的每个系统，请务必检查受害者机器上的ARP缓存，并尝试在整个网络中执行横向移动。
- en: In the next section, we will take a look at using PowerShell to disable Windows
    Defender.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将介绍如何使用PowerShell禁用Windows Defender。
- en: PowerShell tradecraft
  id: totrans-400
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PowerShell技巧
- en: PowerShell is a command-line scripting language that is built on .NET. An IT
    professional can use PowerShell to automate many tasks and manage their operating
    systems better. Windows, Linux, and macOS all support PowerShell.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell是建立在.NET上的命令行脚本语言。IT专业人员可以使用PowerShell自动化许多任务并更好地管理他们的操作系统。Windows、Linux和macOS都支持PowerShell。
- en: In the next section, we will dive into learning how to remove Windows Defender
    virus definitions using PowerShell.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将深入学习如何使用PowerShell删除Windows Defender病毒定义。
- en: Removing Windows Defender virus definitions
  id: totrans-403
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除Windows Defender病毒定义
- en: On all modern versions of Microsoft Windows, Microsoft has included **Windows
    Defender** as the native anti-malware protection. There are many home users and
    organizations that utilize Windows Defender as their preferred anti-malware solution
    on end devices. As a penetration tester, being undetected during a penetration
    test is very important as your actions are designed to simulate a real-world attack.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有现代版本的Microsoft Windows中，Microsoft都将**Windows Defender**作为本机防恶意软件保护。有许多家庭用户和组织在终端设备上使用Windows
    Defender作为首选的防恶意软件解决方案。作为渗透测试人员，在渗透测试期间不被检测到非常重要，因为您的行动旨在模拟真实世界的攻击。
- en: 'The following PowerShell script will remove all virus definitions from Windows
    Defender:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 以下PowerShell脚本将从Windows Defender中删除所有病毒定义：
- en: '[PRE21]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The following screenshot shows the output of the preceding script being successfully
    executed on a Windows 10 machine:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了在Windows 10机器上成功执行前述脚本的输出：
- en: '![](img/8780f8af-a73f-474d-a22b-9a1c6201315c.png)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/8780f8af-a73f-474d-a22b-9a1c6201315c.png)
- en: 'Additionally, take a look at the Windows Defender version information; we can
    see that all definitions have been removed:'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，查看Windows Defender版本信息；我们可以看到所有定义都已被删除：
- en: '![](img/4bb8d48c-d2aa-4803-901b-79519a0f6571.png)'
  id: totrans-410
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/4bb8d48c-d2aa-4803-901b-79519a0f6571.png)
- en: 'There may be cases where Windows Defender is re-enabled on a machine. Using
    the following script will add the `C:\` path to the Windows Defender exclusion
    list:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会有Windows Defender重新启用的情况。使用以下脚本将`C:\`路径添加到Windows Defender排除列表中：
- en: '[PRE22]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following screenshot demonstrates how to execute the script successfully:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图演示了如何成功执行脚本：
- en: '![](img/313b6e31-26d8-4c91-9608-7edaa7c392e9.png)'
  id: totrans-414
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/313b6e31-26d8-4c91-9608-7edaa7c392e9.png)
- en: This technique will allow us to execute malicious code on the `C:` drive of
    the victim's Windows machine.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术将允许我们在受害者的Windows机器的`C:`驱动器上执行恶意代码。
- en: Now that you have learned how to remove virus definitions from Windows Defender,
    we will now cover how to disable Windows **Antimalware Scan Interface** (**AMSI**).
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经学会了如何从Windows Defender中删除病毒定义，我们现在将介绍如何禁用Windows **防恶意软件扫描接口**（**AMSI**）。
- en: Disabling Windows Antimalware Scan Interface
  id: totrans-417
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 禁用Windows防恶意软件扫描接口
- en: 'Microsoft has included its AMSI in recent versions of Windows to prevent any
    sort of malicious code from being executed on a local system. If you''re compromising
    a Windows operating system, executing PowerShell scripts can be very helpful,
    but AMSI will prevent any malicious actions. To disable AMSI, execute the following
    PowerShell script:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft在最近的Windows版本中包含了其AMSI，以防止在本地系统上执行任何恶意代码。如果您正在破坏Windows操作系统，执行PowerShell脚本可能非常有帮助，但AMSI将阻止任何恶意行为。要禁用AMSI，请执行以下PowerShell脚本：
- en: '[PRE23]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The following screenshot shows the successful execution of the script on a
    Windows 10 operating system:'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了在Windows 10操作系统上成功执行脚本：
- en: '![](img/8a51a46a-4c8b-4c4b-bf92-9fa263c44631.png)'
  id: totrans-421
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/8a51a46a-4c8b-4c4b-bf92-9fa263c44631.png)
- en: At this point, you can run almost any malicious code on your victim's Windows
    machine.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您可以在受害者的Windows机器上运行几乎任何恶意代码。
- en: 'This section assumed that you have already compromised a Windows operating
    system on a corporate network. In the next section, we will briefly discuss a
    common vulnerability that is overlooked by many network administrators in the
    IT industry: VLAN hopping.'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 本节假定您已经破坏了企业网络上的Windows操作系统。在下一节中，我们将简要讨论IT行业中许多网络管理员忽视的常见漏洞：VLAN跳跃。
- en: Launching a VLAN hopping attack
  id: totrans-424
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动VLAN跳跃攻击
- en: 'Organizations usually implement **virtual local area networks** (**VLANs**)
    to segment and improve the performance of their network infrastructure while improving
    security. When configuring VLANs, there are two main ports that we are concerned
    with: the access port and the trunk port.'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 组织通常实施**虚拟局域网**（**VLANs**）来分割和改善其网络基础设施的性能，同时提高安全性。在配置VLAN时，我们关注的是两个主要端口：访问端口和干线端口。
- en: Access ports are those that are configured to connect the end device to the
    switch. These ports only allow one data VLAN and an additional voice VLAN. When
    configuring an access port, the VLAN ID is usually statically configured as an
    access port on a switch.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 访问端口是配置为将终端设备连接到交换机的端口。这些端口只允许一个数据VLAN和一个额外的语音VLAN。在配置访问端口时，VLAN ID通常被静态配置为交换机上的访问端口。
- en: For multiple VLANs to communicate over a network, trunk ports need to be configured
    between switches. Trunk ports allow multiple VLANs to pass traffic simultaneously.
    Trunk ports are configured between switches and are configured between a switch
    and a router to implement inter-VLAN routing, which allows one VLAN to communicate
    with another VLAN.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 要使多个VLAN在网络上通信，需要在交换机之间配置干线端口。干线端口允许多个VLAN同时传输流量。干线端口在交换机之间配置，并在交换机和路由器之间配置，以实现VLAN间路由，允许一个VLAN与另一个VLAN通信。
- en: 'There are many times when IT professionals do not configure networking devices
    properly. A penetration tester can exploit this vulnerability and attempt to perform
    a VLAN hopping attack. Once successful, the attacker machine will be able to access
    all available VLANs and perform MITM attacks. The following diagram shows an attacker
    who has successfully enabled an unauthorized trunk:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 许多时候，IT专业人员没有正确配置网络设备。渗透测试人员可以利用这个漏洞，并尝试执行VLAN跳跃攻击。一旦成功，攻击者的机器将能够访问所有可用的VLAN，并执行MITM攻击。以下图表显示了一个成功启用未经授权的干线的攻击者：
- en: '![](img/fbe4f6dd-78bb-4cb1-978a-74e14f34abeb.png)'
  id: totrans-429
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fbe4f6dd-78bb-4cb1-978a-74e14f34abeb.png)'
- en: '**Yersinia** on Kali Linux allows an attacker to perform various types of layer
    2 attacks on a network to take advantage of security misconfigurations and weaknesses.
    To open yersinia, execute the following command:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kali Linux上，**Yersinia**允许攻击者对网络执行各种类型的第二层攻击，以利用安全配置错误和弱点。要打开yersinia，请执行以下命令：
- en: '[PRE24]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The graphical user interface will appear on your desktop. To launch a VLAN
    hopping attack, execute the following steps:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 图形用户界面将出现在您的桌面上。要启动VLAN跳跃攻击，请执行以下步骤：
- en: Click the **Launch attack** button.
  id: totrans-433
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**启动攻击**按钮。
- en: 'A new window will appear. Click the **DTP** tab and select the **enabling trunking**
    radio button, as shown in the following screenshot:'
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会出现一个新窗口。点击**DTP**选项卡，并选择**启用干线**单选按钮，如下图所示：
- en: '![](img/28339c2b-c036-43f3-9bae-769d61fad6f8.png)'
  id: totrans-435
  prefs: []
  type: TYPE_IMG
  zh: '![](img/28339c2b-c036-43f3-9bae-769d61fad6f8.png)'
- en: When you're ready, click OK to begin performing a **VLAN hopping** attack on
    the network.
  id: totrans-436
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您准备好时，点击确定开始在网络上执行**VLAN跳跃**攻击。
- en: Having completed this section, you are now able to perform VLAN hopping attacks
    using Kali Linux.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本节后，您现在能够使用Kali Linux执行VLAN跳跃攻击。
- en: Summary
  id: totrans-438
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: During the course of this chapter, you have learned about internal network scanning,
    MITM attacks, packet analysis, privilege escalation, lateral movement using Meterpreter,
    disabling Windows Defender using PowerShell, and VLAN hopping.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的过程中，您已经学习了内部网络扫描、MITM攻击、数据包分析、权限提升、使用Meterpreter进行横向移动、使用PowerShell禁用Windows
    Defender以及VLAN跳跃等技能。
- en: You now have the skills required to perform internal network scanning using
    tools such as AutoScan-Network, Zenmap, and Netdiscover. Additionally, you are
    now able to capture packets and perform packet analysis using Wireshark to view
    victims' traffic as it flows through the target network. Furthermore, you know
    how to successfully execute post-connection attacks such as lateral movement (pivoting),
    as well as how to disable Windows Defender virus protection on a victim's system
    using PowerShell.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经掌握了使用AutoScan-Network、Zenmap和Netdiscover等工具进行内部网络扫描的技能。此外，您现在能够使用Wireshark捕获数据包并进行数据包分析，以查看受害者的流量如何在目标网络中流动。此外，您知道如何成功执行连接后攻击，如横向移动（枢纽），以及如何使用PowerShell禁用受害者系统上的Windows
    Defender病毒防护。
- en: I hope this chapter will prove to be helpful and informative in your studies
    and career. In [Chapter 12](8a08d9ef-f463-4c14-a924-9c7cde69767f.xhtml), *Network
    Penetration Testing - Detection and Security*, you will learn about detecting
    ARP poisoning attacks and suspicious activities and look at some remediation techniques.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望本章对您的学习和职业有所帮助和启发。在[第12章](8a08d9ef-f463-4c14-a924-9c7cde69767f.xhtml)中，*网络渗透测试-检测和安全*，您将学习如何检测ARP欺骗攻击和可疑活动，并了解一些补救技术。
- en: Questions
  id: totrans-442
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'The following are some questions based on the topics we have covered in this
    chapter:'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是基于本章内容的一些问题：
- en: What tool can be used to access multiple VLANs on a misconfigured switch?
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用什么工具访问错误配置的交换机上的多个VLAN？
- en: What command within Meterpreter can be used to escalate privileges?
  id: totrans-445
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Meterpreter中可以使用哪个命令来提升权限？
- en: What is the purpose of ARP?
  id: totrans-446
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ARP的目的是什么？
- en: Since Telnet is an insecure protocol, what other remote access protocol should
    be used to prevent an attacker from seeing data during transmission?
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于Telnet是一种不安全的协议，在传输数据时应使用哪种其他远程访问协议以防止攻击者看到数据？
- en: On a Windows operating system, how can you determine your current user privileges
    and the name of the user account?
  id: totrans-448
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows操作系统中，如何确定当前用户权限和用户帐户的名称？
- en: Further reading
  id: totrans-449
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '**Lateral movement techniques**: [https://attack.mitre.org/tactics/TA0008/](https://attack.mitre.org/tactics/TA0008/)'
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**横向移动技术**：[https://attack.mitre.org/tactics/TA0008/](https://attack.mitre.org/tactics/TA0008/)'
- en: '**Wireshark documents**: [https://www.wireshark.org/docs/](https://www.wireshark.org/docs/)'
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Wireshark文档**：[https://www.wireshark.org/docs/](https://www.wireshark.org/docs/)'
