- en: Revealing Evidence Using DFF
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DFF揭示证据
- en: Welcome to the last chapter; you've made it. The final tool we'll be using is
    the **Digital Forensic Framework** (**DFF**). DFF performs the automated analysis
    of images using a modular model all in one simple and user-friendly graphical
    user interface. DFF supports several image file formats including `.dd`, `.raw`,
    `.img`, `.bin`, E01, EWF, and AFF. Modules can be applied to view various file
    formats using embedded viewers for video, audio, PDFs, documents, images, and
    registry files.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到最后一章；你成功了。我们将使用的最后一个工具是**数字取证框架**（**DFF**）。DFF使用模块化模型在一个简单和用户友好的图形用户界面中执行图像的自动化分析。DFF支持多种图像文件格式，包括`.dd`、`.raw`、`.img`、`.bin`、E01、EWF和AFF。模块可以应用于使用嵌入式查看器查看各种文件格式，包括视频、音频、PDF、文档、图像和注册表文件。
- en: 'The following are also supported by DFF:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: DFF还支持以下内容：
- en: Browser history analysis
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器历史分析
- en: File recovery
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件恢复
- en: Metadata and EXIF data analysis
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元数据和EXIF数据分析
- en: Memory/RAM analysis
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存/RAM分析
- en: Having all these features in one GUI allows for easy investigation and analysis
    of acquired images. For the exercises in this chapter, we'll be using images already
    acquired and available for download. This does not mean that we should use only
    one tool (such as DFF) for analysis. I recommend using at least two tools for
    all investigative tasks so that the results can be compared, adding to the accuracy
    and integrity of the investigation.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有这些功能集成到一个GUI中，可以轻松调查和分析获取的图像。在本章的练习中，我们将使用已经获取并可供下载的图像。这并不意味着我们应该只使用一个工具（如DFF）进行分析。我建议至少使用两种工具进行所有调查任务，以便可以比较结果，增加调查的准确性和完整性。
- en: Remember, when acquiring your own images, always ensure that the integrity of
    the device and evidence is maintained through the use of write-blockers and the
    use of hashing tools. It's also important that we only work with forensic copies
    of the evidence unless circumstances require otherwise to again preserve the evidence.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在获取自己的图像时，始终确保通过使用写入阻断器和哈希工具来维护设备和证据的完整性。同样重要的是，除非情况需要，否则我们只能使用取证副本来保留证据。
- en: 'Let''s take a look at the topics we will be covering in this chapter:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看本章将涵盖的主题：
- en: Installing DFF
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装DFF
- en: Starting the DFF GUI
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动DFF GUI
- en: Recovering deleted files with DFF
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用DFF恢复已删除的文件
- en: File analysis with DFF
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用DFF进行文件分析
- en: Installing DFF
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装DFF
- en: To carry out investigations using DFF, we first require the Kali Linux 2016.1
    ISO image. I've chosen to use the 64-bit version and also have it running as a
    virtual host within VirtualBox.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用DFF进行调查，我们首先需要Kali Linux 2016.1 ISO镜像。我选择使用64位版本，并在VirtualBox中作为虚拟主机运行。
- en: 'The Kali Linux 2016.1 ISO image can be downloaded from the [https://www.kali.org/downloads/](https://www.kali.org/downloads/):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从[https://www.kali.org/downloads/](https://www.kali.org/downloads/)下载Kali
    Linux 2016.1 ISO镜像：
- en: 'Once Kali 2016.1 is installed as a virtual host, we can use the `uname -a`
    command to view the version details:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Kali 2016.1作为虚拟主机后，我们可以使用`uname -a`命令查看版本详细信息：
- en: '![](img/61a6eca2-38f5-45d1-b8b5-765baae25a30.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/61a6eca2-38f5-45d1-b8b5-765baae25a30.png)'
- en: To begin installing DFF, we first need to update the `sources.list` with the
    repository used in Kali Sana. Although we browsed directly to the `sources.list`
    file in the previous chapter, here are two additional ways in which we can also
    perform this task using the Terminal.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始安装DFF，我们首先需要使用Kali Sana中使用的存储库更新`sources.list`。虽然在上一章中我们直接浏览到了`sources.list`文件，但是我们还可以使用终端以两种其他方式执行此任务。
- en: 'In a new Terminal, we can type the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在新的终端中，我们可以输入以下内容：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/f53b6707-3dd3-416b-9f58-c5af515138ca.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f53b6707-3dd3-416b-9f58-c5af515138ca.png)'
- en: 'Alternatively, we can instead use the second method by typing the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以使用第二种方法，输入以下内容：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/5882fb51-c64a-4b53-a1f5-ab3e6e718c47.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5882fb51-c64a-4b53-a1f5-ab3e6e718c47.png)'
- en: 'Followed by the details of the repositories:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是存储库的详细信息：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, press *Ctrl* + *X* to exit, and press *Y* to save the changes to the
    `sources.list` file:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，按*Ctrl* + *X*退出，按*Y*保存更改到`sources.list`文件中：
- en: '![](img/0708ade5-df84-4d15-8476-21b732bcc1af.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0708ade5-df84-4d15-8476-21b732bcc1af.png)'
- en: 'Next, we update Kali by typing `apt-get update`:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们通过输入`apt-get update`来更新Kali：
- en: '![](img/e6987292-6930-41a3-a7f0-cf7ba939151b.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6987292-6930-41a3-a7f0-cf7ba939151b.png)'
- en: 'Now, we install the Advanced Forensics Format Library by typing:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们通过输入以下内容来安装高级取证格式库：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](img/f47ff4ae-abfc-4c3d-b1c5-f41810c9d2a1.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f47ff4ae-abfc-4c3d-b1c5-f41810c9d2a1.png)'
- en: 'As shown in the preceding screenshot, press *Y* to continue. This is a somewhat
    lengthy process as it installs components for several forensic tools including
    Autopsy, Sleuthkit, Bulk_extractor, and DFF, as shown in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的屏幕截图所示，按*Y*继续。这是一个相当冗长的过程，因为它安装了几个取证工具的组件，包括Autopsy、Sleuthkit、Bulk_extractor和DFF，如下一张屏幕截图所示：
- en: '![](img/91e792f0-8e05-42d4-867b-4b3a8725de94.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/91e792f0-8e05-42d4-867b-4b3a8725de94.png)'
- en: 'Once the library has been successfully installed, we can install DFF by typing
    the following:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装库成功后，我们可以通过输入以下内容来安装DFF：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/90cc48fa-8298-4ed2-bd3c-b0d3d3bdfcc7.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90cc48fa-8298-4ed2-bd3c-b0d3d3bdfcc7.png)'
- en: 'Press *Y* to continue when prompted to allow the installation of DFF 1.3.3
    to continue:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Y*继续，以允许安装DFF 1.3.3继续：
- en: '![](img/9f85671d-2935-44f7-b319-155d619aa87a.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f85671d-2935-44f7-b319-155d619aa87a.png)'
- en: 'To ensure that DFF has been successfully installed, we can type `dff` in the
    Terminal, which loads the available modules within DFF:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了确保DFF已成功安装，我们可以在终端中输入`dff`，这将加载DFF中可用的模块：
- en: '![](img/e42cd730-0475-4c05-b6f3-fe3849d4a0ba.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e42cd730-0475-4c05-b6f3-fe3849d4a0ba.png)'
- en: 'Once the `Welcome on Digital Forensics Framework` banner is displayed, this
    means that our DFF installation was successful. We can now begin our investigation
    by running the DFF GUI:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦显示`欢迎使用数字取证框架`横幅，这意味着我们的DFF安装成功。现在我们可以通过运行DFF GUI来开始我们的调查：
- en: '![](img/b2f59e5e-d0e4-4e24-9ad5-83c24585833d.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2f59e5e-d0e4-4e24-9ad5-83c24585833d.png)'
- en: Starting the DFF GUI
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动DFF GUI
- en: 'Now that we have DFF installed, we can first verify the version of DFF and
    also view some of the commands within DFF, using the CLI:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了DFF，我们可以首先验证DFF的版本，还可以使用CLI查看DFF中的一些命令：
- en: 'To view the version of DFF installed, in a new Terminal, type `dff -v`. In
    the following screenshot, we can see that the version is 1.3.0:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看已安装的DFF版本，在新的终端中，输入`dff -v`。在下面的屏幕截图中，我们可以看到版本是1.3.0：
- en: '![](img/8a1ec99e-182f-4279-a542-2629957476fa.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a1ec99e-182f-4279-a542-2629957476fa.png)'
- en: 'To view the available options, we type `dff -h`:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看可用选项，我们输入`dff -h`：
- en: '![](img/769c2d26-175b-44a6-aa29-1889e42d0cb9.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/769c2d26-175b-44a6-aa29-1889e42d0cb9.png)'
- en: 'To launch the graphical interface, we type `dff -g`:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动图形界面，我们输入`dff -g`：
- en: '![](img/8623fdd5-61b0-4eb3-8243-98eaa5d0dfa5.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8623fdd5-61b0-4eb3-8243-98eaa5d0dfa5.png)'
- en: 'The graphical interface can also be started by clicking on Applications | Forensics
    | dff gui:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 也可以通过单击应用程序 | 取证 | dff gui 来启动图形界面：
- en: '![](img/6291339b-ea1a-4cf8-89d5-b11b45a0df3f.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6291339b-ea1a-4cf8-89d5-b11b45a0df3f.png)'
- en: 'Once opened using either method, we are then presented with the DFF GUI:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用任一方法打开后，我们将看到DFF GUI：
- en: '![](img/4214917f-4175-4425-a254-6854c0ccaf3c.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4214917f-4175-4425-a254-6854c0ccaf3c.png)'
- en: Recovering deleted files with DFF
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DFF恢复已删除的文件
- en: 'For this exercise, we''ll be using a very small `.raw` image created using
    DD. This file is approximately 6 MB and is publicly available at [http://dftt.sourceforge.net/test7/index.html](http://dftt.sourceforge.net/test7/index.html):'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，我们将使用使用DD创建的一个非常小的`.raw`图像。这个文件大约6MB，可以在[http://dftt.sourceforge.net/test7/index.html](http://dftt.sourceforge.net/test7/index.html)上公开获取：
- en: 'Click on the ZIP file to download it and extract it to its default location.
    When extracted, the name of the file shows up as `7-ntfs-undel.dd`. Using the
    preceding steps, start DD if you haven''t yet opened the program. Before we import
    the image, take a moment to observe the icons next to the entries in the main
    window area. The icon for the Logical files field is a white folder with a hint
    of blue:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击ZIP文件进行下载并将其提取到默认位置。提取后，文件名显示为`7-ntfs-undel.dd`。在导入图像之前，花点时间观察主窗口区域条目旁的图标。逻辑文件字段的图标是一个带有一丝蓝色的白色文件夹：
- en: '![](img/087fcb19-5eed-430b-a368-ffdb576a7e5b.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/087fcb19-5eed-430b-a368-ffdb576a7e5b.png)'
- en: When we add an image in the following steps, a blue plus sign will appear over
    the folder icon.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，当我们添加图像时，文件夹图标上会出现蓝色加号。
- en: 'To open our downloaded DD image in DFF, either click on File | Open evidence
    or click on the Open evidence button, as shown in the following screenshot:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在DFF中打开我们下载的DD图像，单击文件 | 打开证据或单击打开证据按钮，如下图所示：
- en: '![](img/73ee2610-3cec-4fa3-901f-1897c6dd17f8.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/73ee2610-3cec-4fa3-901f-1897c6dd17f8.png)'
- en: 'In the Select evidence type box, ensure that the RAW format option is checked
    and the File option is selected in the drop-down box. Click on the green plus
    (+) sign to browse to the `7-ntfs-undel.dd` file. Click OK to continue:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择证据类型框中，确保选中了RAW格式选项，并且在下拉框中选择了文件选项。单击绿色加号（+）以浏览`7-ntfs-undel.dd`文件。单击确定以继续：
- en: '![](img/21ea2feb-12d8-4966-933d-efb44a97aaf6.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21ea2feb-12d8-4966-933d-efb44a97aaf6.png)'
- en: 'In both the left pane and the main windows of DFF, observe the plus sign next
    to the Logical files icon. This tells us that although there are no entries for
    size, tags, and path, the image has been successfully added and we can explore
    the Logical files section:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在DFF的左窗格和主窗口中，观察逻辑文件图标旁边的加号。这告诉我们，虽然大小、标签和路径没有条目，但图像已成功添加，我们可以浏览逻辑文件部分：
- en: '![](img/f8439d1a-7532-4952-8b1b-f05b00e00da0.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f8439d1a-7532-4952-8b1b-f05b00e00da0.png)'
- en: 'In the left window pane, click on the Logical files category. In the main window,
    the name of the image is displayed:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左窗格中，单击逻辑文件类别。在主窗口中，显示图像名称：
- en: '![](img/7f6b684c-35d9-4086-bbce-aef08f25422d.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f6b684c-35d9-4086-bbce-aef08f25422d.png)'
- en: 'Double-click on the name of the image in the main window. In the Apply module
    box, click on Yes:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主窗口中双击图像名称。在应用模块框中，单击是：
- en: '![](img/8fdbe6b2-1eec-4755-99f0-c56ce9a47fdc.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8fdbe6b2-1eec-4755-99f0-c56ce9a47fdc.png)'
- en: 'After the module is applied, the image name appears (`7-ntfs-undel.dd`) under 
    Logical files in the left pane:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 应用模块后，在左窗格的逻辑文件下显示图像名称（`7-ntfs-undel.dd`）：
- en: '![](img/65ce173e-dadd-4566-a0de-f0ad80859809.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65ce173e-dadd-4566-a0de-f0ad80859809.png)'
- en: 'Click on the plus sign to the left of the image name in the left pane to expand
    the menu and view the contents image. Once expanded, we can see that there are
    two folders, namely `NTFS` and `NTFS unallocated`:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击左窗格中图像名称左侧的加号，展开菜单并查看图像内容。展开后，我们可以看到有两个文件夹，即`NTFS`和`NTFS未分配`：
- en: '![](img/bb9f6fb5-b2fe-4700-843f-bbc68ef6f77f.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bb9f6fb5-b2fe-4700-843f-bbc68ef6f77f.png)'
- en: Entries marked in red (`dir1` and `$Orphans`) are deleted files.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 红色标记的条目（`dir1`和`$Orphans`）是已删除的文件。
- en: 'To view the contents of the files, double-click on the `NTFS` entry in the
    main window:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看文件内容，双击主窗口中的`NTFS`条目：
- en: '![](img/c480895b-ca22-4c6f-bb5d-45eee6dd5eae.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c480895b-ca22-4c6f-bb5d-45eee6dd5eae.png)'
- en: 'Click on the `frag1.dat` deleted file. The right pane displays information
    about the file including the following:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`frag1.dat`已删除文件。右窗格显示有关文件的信息，包括以下内容：
- en: 'name: `frag1.dat`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：`frag1.dat`
- en: 'node type: file deleted'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点类型：已删除文件
- en: 'generated by: ntfs'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成者：ntfs
- en: 'Creation time: 2004-02-29 20:00:17'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建时间：2004-02-29 20:00:17
- en: 'File accessed time: 2004-02-29 20:00:17'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件访问时间：2004-02-29 20:00:17
- en: 'File altered time: 2004-02-29 20:00:17'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件修改时间：2004-02-29 20:00:17
- en: 'MFT altered time: 2004-02-29 20:00:17'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MFT修改时间：2004-02-29 20:00:17
- en: '![](img/50e58b32-45a4-4f85-a307-ed15b8e4a8d6.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50e58b32-45a4-4f85-a307-ed15b8e4a8d6.png)'
- en: 'Let''s inspect another deleted file. Click on the `mult1.dat:ADS` stream and
    view its details:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们检查另一个已删除的文件。单击`mult1.dat:ADS`流并查看其详细信息：
- en: '![](img/faa253f8-5683-4ea5-8c9f-60505dbe3ae6.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/faa253f8-5683-4ea5-8c9f-60505dbe3ae6.png)'
- en: 'According to the file listing at [http://dftt.sourceforge.net/test7/index.html](http://dftt.sourceforge.net/test7/index.html),
    this image contains 11 deleted files, including `mult1.dat:ADS`, which contains
    hidden content in an NTFS Alternate Data Stream. DFF has found all 11 files. Visit
    the preceding site or view the following screenshot to view the names of the deleted
    files for comparison:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[http://dftt.sourceforge.net/test7/index.html](http://dftt.sourceforge.net/test7/index.html)上的文件列表，该图像包含11个已删除的文件，包括`mult1.dat:ADS`，其中包含NTFS备用数据流中的隐藏内容。DFF已找到所有11个文件。请访问前面的网站或查看下面的截图以查看已删除文件的名称进行比较：
- en: '![](img/994cb6ef-3a48-469e-aea7-14bccb93e23a.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/994cb6ef-3a48-469e-aea7-14bccb93e23a.png)'
- en: File analysis with DFF
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DFF进行文件分析
- en: Now that we've looked at the file recovery process, let's continue our investigation
    with DFF by examining an image file with more content.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经查看了文件恢复过程，让我们继续使用DFF来检查一个内容更多的图像文件。
- en: 'For this exercise, we will be using another publicly available image called
    the *JPEG Search Test #1 (Jun ''04)*. The ZIP file can be downloaded at [http://dftt.sourceforge.net/test8/index.html](http://dftt.sourceforge.net/test8/index.html):'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将使用另一个公开可用的图像，名为*JPEG搜索测试#1（Jun'04）*。可以在[http://dftt.sourceforge.net/test8/index.html](http://dftt.sourceforge.net/test8/index.html)下载ZIP文件：
- en: After downloading the ZIP file, extract it to its default location. The name
    of the decompressed file is `8-jpeg-search.dd`.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载ZIP文件后，将其解压到默认位置。解压后的文件名为`8-jpeg-search.dd`。
- en: 'Open the evidence file in DFF by repeating the steps in the preceding exercise:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过重复上一个练习中的步骤，在DFF中打开证据文件：
- en: Start DFF by clicking on Applications | Forensics | ddf gui.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击“应用程序”|“取证”|“ddf gui”来启动DFF。
- en: Click on the Open evidence button.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“打开证据”按钮。
- en: Browse to the `8-jpeg-search.dd` image file (as seen in the following screenshot).
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到`8-jpeg-search.dd`图像文件（如下截图所示）。
- en: 'Click OK:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”：
- en: '![](img/22d3428b-6bd0-42a1-8f2d-6045b5932389.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/22d3428b-6bd0-42a1-8f2d-6045b5932389.png)'
- en: 'Click on Logical files in the left pane and then double-click on the filename
    (`8-jpeg-search.dd`) in the main window:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左窗格中的逻辑文件，然后在主窗口中双击文件名（`8-jpeg-search.dd`）：
- en: '![](img/a1ccd804-9677-4365-8fc9-6365b8999c05.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a1ccd804-9677-4365-8fc9-6365b8999c05.png)'
- en: 'In the Apply module box, choose Yes when prompted to apply the NTFS module
    on the node:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用模块框中，当提示应用NTFS模块到节点时选择“是”：
- en: '![](img/96bcc88d-8e93-4d17-856b-3f4429898cb3.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/96bcc88d-8e93-4d17-856b-3f4429898cb3.png)'
- en: Click on the plus sign (+) in the left pane, next to Logical files, to expand
    the menu.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左窗格中的加号（+），旁边是逻辑文件，展开菜单。
- en: Click on the plus sign (+) next to the filename, `8-jpeg-search.dd`, to expand
    the menu.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`8-jpeg-search.dd`文件名旁边的加号（+）以展开菜单。
- en: 'In this exercise, we are also presented with two found NTFS folders named `NTFS` and
    `NTFS unallocated`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们还发现了两个名为`NTFS`和`NTFS未分配`的NTFS文件夹：
- en: '![](img/9158e9e5-b50b-437e-8146-342b2bbb8ec6.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9158e9e5-b50b-437e-8146-342b2bbb8ec6.png)'
- en: 'Click on `NTFS` in the left pane to view the subfolders and files (displayed
    in the main window):'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左窗格中的`NTFS`以查看子文件夹和文件（显示在主窗口中）：
- en: '![](img/14aba8ba-038b-4232-9e9e-aa2223c80f34.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/14aba8ba-038b-4232-9e9e-aa2223c80f34.png)'
- en: 'Click on the `alloc` folder to view its contents. Within the `alloc` folder,
    there are two files with colorful icons in the main window:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`alloc`文件夹查看其内容。在`alloc`文件夹中，主窗口中有两个带有彩色图标的文件：
- en: '`file1.jpg`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file1.jpg`'
- en: '`file2.dat`'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file2.dat`'
- en: 'Click on `file1.jpg` if it isn''t already selected:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果尚未选择，请点击`file1.jpg`：
- en: '![](img/d31ef5fe-18bb-45f0-80a1-a6696a3f2e08.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d31ef5fe-18bb-45f0-80a1-a6696a3f2e08.png)'
- en: 'In the Attribute column to the right, scroll down to the type field. Note the
    following attribute values, as seen in the following screenshot:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧的属性列中，向下滚动到类型字段。请注意以下属性值，如下截图所示：
- en: magic: JPEG image data, JFIF standard 1.01
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 魔术：JPEG图像数据，JFIF标准1.01
- en: magic mime: image/jpeg
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 魔术mime：image/jpeg
- en: '![](img/a768b7a0-cf18-4d3b-8f0c-bafedc993ae4.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a768b7a0-cf18-4d3b-8f0c-bafedc993ae4.png)'
- en: 'Double-click on `file1.jpg` and click on Yes when prompted to apply the pictures
    module on the node, which will allow us to view the image:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击`file1.jpg`，在提示应用图片模块到节点时点击“是”，这将允许我们查看图片：
- en: '![](img/f83e4190-a834-4b0f-8555-94de03760c4d.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f83e4190-a834-4b0f-8555-94de03760c4d.png)'
- en: 'The preview window opens, showing the image with the file path under the image
    as `/Logical files/8-jpeg-search.dd/NTFS/alloc/file1.jpg`:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 预览窗口打开，显示图像，并在图像下方显示文件路径为`/逻辑文件/8-jpeg-search.dd/NTFS/alloc/file1.jpg`：
- en: '![](img/3668cfde-b83a-41be-8279-f67c88c34415.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3668cfde-b83a-41be-8279-f67c88c34415.png)'
- en: 'Return to the DFF browser interface by clicking on the Browser button under
    the Open evidence button:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击“打开证据”按钮下的“浏览器”按钮返回到DFF浏览器界面：
- en: '![](img/b43b3c76-2686-4a63-9832-870e07148eb3.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b43b3c76-2686-4a63-9832-870e07148eb3.png)'
- en: 'Click on `file2.dat` and scroll down to the type attribute and note the magic
    and magic mime values:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`file2.dat`并向下滚动到类型属性，并注意魔术和魔术mime值：
- en: 'magic: JPEG image data, JFIF standard 1.01'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 魔术：JPEG图像数据，JFIF标准1.01
- en: 'magic mime: image/jpeg'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 魔术mime：image/jpeg
- en: 'Note that even though the extension of `file2` is `.dat`, DFF has read the
    header and has listed the true type of the file as a JPEG/JFIF file:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，即使`file2`的扩展名是`.dat`，DFF也读取了头文件，并将文件的真实类型列为JPEG/JFIF文件：
- en: '>![](img/6006eba0-094e-47db-bae4-24edc3c1fe57.png)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '>![](img/6006eba0-094e-47db-bae4-24edc3c1fe57.png)'
- en: 'Double-click on `file2.dat` in the `alloc` folder (under the `file1.jpg` file)
    and click on Yes when prompted to apply the pictures module:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击`alloc`文件夹中的`file2.dat`（在`file1.jpg`文件下），在提示应用图片模块时点击“是”：
- en: '![](img/fc468863-39af-4480-9b3a-2a5a36e932ba.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fc468863-39af-4480-9b3a-2a5a36e932ba.png)'
- en: 'Click on the Browse button to return to the DFF interface. Click on the `del1`
    folder in the left-pane to explore its contents. Inside the `del1` folder is a
    single file named `file6.jpg`, listed as deleted in the Attributes column, as
    seen in the following screenshot. Noteworthy values in the Attributes column include:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“浏览”按钮返回DFF界面。在左侧窗格中单击“del1”文件夹以查看其内容。在“del1”文件夹中有一个名为“file6.jpg”的单个文件，在属性列中列为已删除，如下截图所示。属性列中值得注意的值包括：
- en: 'name: `file6.jpg`'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：“file6.jpg”
- en: 'node type: deleted'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点类型：已删除
- en: 'magic: JPEG image data, JFIF standard.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'magic: JPEG图像数据，JFIF标准。'
- en: 'magic mime: image/jpeg;'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'magic mime: image/jpeg;'
- en: 'Double-click on the `file6.jpg` and apply the module to preview the file (be
    sure to click on the Browser button to return to the DFF browser interface):'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击“file6.jpg”并应用模块以预览文件（确保单击“浏览”按钮返回DFF浏览器界面）：
- en: '![](img/7f2b3dd3-d4f9-4910-9584-15bebbe45bb0.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f2b3dd3-d4f9-4910-9584-15bebbe45bb0.png)'
- en: 'Click on the `del2` folder in the left pane. The main window shows a single
    file with a peculiar extension named `file7.hmm`. The Attribute column lists the
    file as deleted; however, the type attribute shows the following:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧窗格中单击“del2”文件夹。主窗口显示一个带有奇怪扩展名“file7.hmm”的单个文件。属性列将文件列为已删除；但是，类型属性显示如下内容：
- en: '![](img/47e35c98-2ead-4d86-8e54-c86b69ce3b1e.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/47e35c98-2ead-4d86-8e54-c86b69ce3b1e.png)'
- en: 'Double-click on the `file7.hmm` file and apply the picture module to preview
    the `.jpg` image:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击“file7.hmm”文件并应用图片模块以预览“.jpg”图像：
- en: '![](img/112ad120-33ca-4bb9-b595-2a74587eab3d.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/112ad120-33ca-4bb9-b595-2a74587eab3d.png)'
- en: Summary
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Congratulations, you made it to the end. In this final chapter, we looked at
    the very versatile DFF. Using DFF, we performed file recovery, folder exploration,
    file analysis, and were also able to preview files using various modules.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，您已经到达了结尾。在这最后一章中，我们看了非常多功能的DFF。使用DFF，我们进行了文件恢复，文件夹探索，文件分析，并且还能够使用各种模块预览文件。
- en: It's important to remember that although DFF can perform several tasks, other
    tools used in previous chapters should be used to verify the accuracy of the findings.
    It's also important to document your steps as you progress through the investigation
    in the event that you must recreate the investigative process or retrace your
    steps.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要记住，尽管DFF可以执行多项任务，但应该使用在前几章中使用的其他工具来验证发现的准确性。在调查过程中，记录您的步骤也很重要，以防必须重新创建调查过程或重迹您的步骤。
- en: On behalf of myself, the reviewers, the editors, and the entire Packt family,
    thank you for purchasing this book. Be sure to have a look at the many other excellent
    titles available at [https://www.packtpub.com/](https://www.packtpub.com/).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我本人，审阅者，编辑以及整个Packt家族代表，感谢您购买本书。请务必查看[https://www.packtpub.com/](https://www.packtpub.com/)上提供的其他优秀书籍。
