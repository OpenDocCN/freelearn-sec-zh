- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Security Incident and Response
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全事件与响应
- en: So far, within the realm of cybersecurity defense, we’ve covered a lot of ground
    surrounding the setup and acquisition of data from various sources and studied
    how to transport it, organize it, store it, and evaluate it through various methods
    of analysis. Have you wondered while covering all of these topics what you might
    do if the data you are analyzing suggests that an actual cyber-attack is occurring
    or has occurred? After all, it doesn’t do much good going through all of this
    work to grab, study, and try to decipher the data if we have no plan of action
    when the data tells us something bad is happening!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在网络安全防御领域，我们已经涵盖了大量关于从不同来源获取数据的设置和获取过程，并研究了如何通过各种分析方法传输、组织、存储和评估数据。在讨论这些内容时，您是否曾想过，如果您分析的数据表明实际的网络攻击正在发生或已经发生，应该怎么办？毕竟，如果我们没有应对计划，那么在数据告诉我们发生了坏事时，通过所有这些工作去获取、研究和尝试解读数据，显然是没有太大意义的！
- en: When our defensive analysis suggests malicious activity is happening, we transform
    into a new realm of cybersecurity. We go from triaging alerts to a formal action
    known as **incident response**. Oftentimes, organizations will have dedicated
    workers who specialize in responding to incidents that are usually a career step
    up from entry-level triage.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们的防御分析表明存在恶意活动时，我们将进入网络安全的新领域。从处理警报到采取正式行动，称为**事件响应**。通常，组织会有专门的工作人员，专注于应对事件，这通常是从入门级的警报处理岗位晋升的一步。
- en: Kali Purple provides several tools that are designed to assist us in responding
    to threats, and even take it a step further by actively searching through data
    for hints of potential future threats or deeply hidden threats. That is known
    as **threat hunting** from a career perspective. Aiding in these activities, we
    will examine a **Security Orchestration and Automation Response** (**SOAR**) product,
    which is a more automated, pseudo-**Artificial Intelligence** (**AI**) style of
    SIEM from a company called StrangeBee – Cortex. StrangeBee also produces an incident
    response platform called **TheHive**, which we will spend a fair amount of time
    setting up.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Purple 提供了几种旨在帮助我们响应威胁的工具，甚至进一步通过积极搜索数据来寻找潜在未来威胁或深藏不露的威胁。这被称为从职业角度进行的**威胁狩猎**。在这些活动中，我们将研究一个**安全编排与自动化响应**（**SOAR**）产品，它是来自
    StrangeBee 公司开发的伪**人工智能**（**AI**）风格的 SIEM。StrangeBee 还生产了一款名为 **TheHive** 的事件响应平台，我们将在此平台上花费一定时间进行设置。
- en: These two products are capable of integrating with a vast array of threat-hunting
    and intelligence feeds. In a departure from what we’ve done so far, there is a
    small challenge section at the end of this chapter so you can go out and find
    the feeds and integrations that best suit your interests. Not all of the tools
    you will find are part of the default Kali Purple ecosystem, but you will be surprised
    at how many of them are compatible and able to be integrated. Some of these tools
    might include the **Malware Information Sharing Platform** (**MISP**), **Structured
    Threat Information eXpression** (**STIX**), and **Trusted Automated Exchange of
    Indicator** **Information** (**TAXII**).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个产品能够与广泛的威胁狩猎和情报源集成。与之前的内容不同，本章的结尾有一个小挑战部分，您可以在其中找到最适合自己兴趣的情报源和集成。并非所有工具都是
    Kali Purple 默认生态系统的一部分，但您会惊讶地发现，许多工具与其兼容，并且能够进行集成。部分工具可能包括 **恶意软件信息共享平台**（**MISP**）、**结构化威胁信息表达**（**STIX**）和
    **受信自动化交换指标信息**（**TAXII**）。
- en: 'By the end of this chapter, you will know how to install a Docker container
    and create a **Docker-compose** YAML file that includes many of the applications
    we’re discussing here. Expect to cover the following sections:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将学习如何安装 Docker 容器，并创建一个包含我们在本章讨论的许多应用程序的 **Docker-compose** YAML 文件。预计您将涵盖以下内容：
- en: Incident response
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件响应
- en: Docker
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker
- en: Cortex
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cortex
- en: TheHive
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TheHive
- en: Challenge!
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 挑战！
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The technical requirements for this chapter are as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节的技术要求如下：
- en: '**Minimum**: A computing device with either *amd64 (x86_64/64-bit)* or *i386
    (x86/32-bit)* architectures. It should contain at least *8 GB* of RAM.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最低要求**：一台计算设备，需具备*amd64 (x86_64/64位)* 或 *i386 (x86/32位)* 架构。设备必须至少配备 *8 GB*
    内存。'
- en: '**Recommended**: Based on feedback from cybersecurity field practitioners,
    aim for *amd64 (x86_64/64-bit)* architecture with *16 GB* of RAM – more is better
    – and up to *64 GB* of additional disk space.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**推荐**：根据网络安全领域从业者的反馈，建议使用 *amd64 (x86_64/64-bit)* 架构，配备 *16 GB* 的内存——更多更好——以及最多
    *64 GB* 的额外磁盘空间。'
- en: Incident response
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**事件响应**'
- en: Sometimes, despite deploying the best technology and exerting our best efforts,
    the bad guys still manage to penetrate our security defenses and cause damage
    in some form or fashion to our information resources. It’s not something any of
    us want to happen on our watch but the fact of the matter is the day will come
    when it will. When it does, those of us who are most passionate about the field
    of cybersecurity tend to take it personally while others might become engaged
    in a finger-pointing contest. The truth is neither of those mindsets is helpful
    and, more likely than not, the actual root cause or success of the breach will
    have nothing to do with any specific analyst. When a security breach, or other
    unauthorized activity, occurs, we refer to it as an incident. To keep our heads
    screwed on straight and operate smoothly with an organized and proper reaction,
    there is a subset of cybersecurity that has evolved, known as **security incident**
    **response** (**SIR**).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，尽管我们部署了最好的技术并付出了最大的努力，坏人仍然能够突破我们的安全防线，并以某种方式对我们的信息资源造成损害。这不是我们任何人希望在职期间发生的事情，但事实上，总有一天它会发生。当这种情况发生时，那些对网络安全最有热情的人往往会感到个人受到了影响，而其他人则可能会陷入指责的竞赛中。事实是，这两种心态都没有帮助，而且很可能，
    breach 的实际根本原因或成功并不与任何特定分析师有关。当发生安全漏洞或其他未经授权的活动时，我们称之为事件。为了保持清醒的头脑并有效地作出有组织的反应，网络安全领域已经发展出了一项名为**安全事件****响应**（**SIR**）的子领域。
- en: SIR is usually handled by a team of professionals sometimes referred to as a
    **cyber security incident response team** (**CSIRT**) or **security incident response
    team** (**SIRT**). You’ll see references to both out in the wild. For simplicity’s
    sake, we will simply use the term **incident response** – or **IR** – in this
    chapter. IR is an organized method of reacting to security incidents. It’s a way
    of putting our personal emotions aside so we can focus on addressing and managing
    the aftermath of a security breach, cyberattack, or other security incident that
    has already occurred. IR involves detecting, analyzing, and responding to security
    threats in the most accurate and efficient manner possible to help limit or otherwise
    mitigate any damage. It’s a pathway to help recover from an attack as well as
    to create educational opportunities to prevent future security incidents of the
    like.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: SIR 通常由一组专业人员处理，有时被称为**网络安全事件响应团队**（**CSIRT**）或**安全事件响应团队**（**SIRT**）。你会在实际中看到这两种术语。为了简便起见，本章我们将仅使用**事件响应**，简称**IR**。IR
    是一种有组织的反应方法，用于应对安全事件。它是一种放下个人情感、集中精力应对和管理已发生的安全漏洞、网络攻击或其他安全事件后果的方式。IR 包括以最准确和高效的方式检测、分析并响应安全威胁，以帮助限制或减轻任何损害。它是帮助从攻击中恢复的路径，并且为防止类似的安全事件发生提供教育机会。
- en: 'A good IR framework might include the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个好的 IR 框架可能包括以下内容：
- en: Preparation
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备
- en: Detection
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测
- en: Containment
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隔离**'
- en: Eradication
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**根除**'
- en: Recovery
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复
- en: Post-incident analysis – aka **After Action Review** (**AAR**) or lessons learned
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件后分析——也称为**事后行动评审**（**AAR**）或经验教训
- en: Of course, stopping security incidents altogether would be the most ideal situation,
    but we all know that’s neither realistic nor likely. Anything that can be made
    can also be unmade. Anything that can be engineered can also be reverse-engineered.
    As long as technology exists, so will the exploits of those with ill intentions.
    Therefore, the ultimate practical goal of IR is to minimize the impact of security
    incidents, along with improving and maintaining the security and integrity of
    the affected systems and data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，彻底防止安全事件的发生是最理想的情况，但我们都知道这既不现实，也不太可能。任何可以制造的东西都可以被拆解，任何可以设计的东西也可以被逆向工程。只要技术存在，就会有那些怀有恶意的人的利用方式。因此，IR（事件响应）的最终实际目标是最小化安全事件的影响，同时改善和维持受影响系统和数据的安全性与完整性。
- en: Now that you’ve gained a general idea of what IR is from a business definition,
    let’s begin to set up our IR environment first, by creating a fresh virtual machine
    so we can avoid software conflicts with previous work we’ve done. If you need
    a refresher on this, go back to [*Chapter 3*](B21223_03.xhtml#_idTextAnchor052).
    You’ll be surprised at how much you remember. In the next section, we are going
    to begin in our new VM by acquiring and installing Docker.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经从商业定义的角度大致了解了什么是IR，让我们首先通过创建一个全新的虚拟机来设置我们的IR环境，以避免与之前工作中使用的任何软件发生冲突。如果你需要复习这部分内容，可以回到[*第3章*](B21223_03.xhtml#_idTextAnchor052)。你会惊讶于自己记得了多少。在接下来的部分，我们将从新虚拟机开始，获取并安装Docker。
- en: Note
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Because our packaged Docker container is going to include **Elasticsearch**,
    which you might already have installed, along with other applications that could
    conflict with what you have – depending on how experimental you have been, we
    highly recommend that you create a new virtual machine for this chapter.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们打包的Docker容器将包括**Elasticsearch**，你可能已经安装了它，以及可能与已有软件冲突的其他应用程序——取决于你实验的程度，我们强烈建议你为本章创建一个新的虚拟机。
- en: The reasons are the suite of software we are bundling in this chapter can function
    as a standalone SOC and an alternative to the ELK Stack setup you’ve already tried,
    and also, if you don’t containerize the content in this chapter, you’re quite
    likely to experience software compatibility and communication conflicts.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的原因是，我们在这一章中打包的软件套件可以作为一个独立的SOC运行，并且是你之前尝试过的ELK Stack配置的替代方案。此外，如果你不将本章内容容器化，你很可能会遇到软件兼容性和通信冲突的问题。
- en: Be prepared to experience bonus challenges if you do not heed this advice! (It’s
    quite okay if you don’t, by the way, since that’s how folks learn.)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不遵循这个建议，准备好迎接额外的挑战吧！(顺便说一句，如果你不遵循也是完全可以的，因为这正是人们学习的方式。)
- en: Docker
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker
- en: '**Docker** can be thought of as a cyber-container. Have you ever gone out on
    a picnic lunch? How did you prepare, store, and distribute/carry your food? You
    packed it inside a container, right? Perhaps you had a peanut butter and jelly
    sandwich or two, fruit such as an apple or banana, maybe some celery or carrot
    sticks, and a juice box or small bottle of water. Then, you placed all of those
    items inside a single unit. Maybe you called it a lunch box, a picnic basket,
    or something else. The point is you placed them all inside a container. Though
    related, they were still each unique with a unique purpose, working together to
    resolve a unified need – your nutritional need; your hunger. However, the container
    didn’t just include those items, did it? It also included things you depended
    on to smoothly enjoy those food items. It included eating utensils, napkins or
    wet wipes, and perhaps a spice packet or two. It included dependencies. It included
    everything you needed to fulfill your mission without having to walk around and
    fetch things from your kitchen or fill your pockets from the open condiments section
    of your favorite fast food restaurant. No, the container had everything you needed
    to keep the hunger monster inside you satisfied.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**Docker**可以被看作是一个网络容器。你有没有去过野餐？你是如何准备、存储和分发/携带食物的？你肯定是把它放进了一个容器里，对吧？也许你带了一个花生酱果冻三明治，或者一些水果，比如苹果或香蕉，也许是一些芹菜或者胡萝卜条，还有一盒果汁或一瓶水。然后，你把这些东西放进了一个单一的容器里。也许你叫它午餐盒，野餐篮，或者别的什么名字。重点是，你把它们都放进了一个容器里。尽管这些物品相关，但它们每个都有独特的目的，彼此协作解决一个统一的需求——你的营养需求；你的饥饿感。然而，容器不只包含这些物品，对吧？它还包含了你依赖的东西，以便顺利享受这些食物。它包括餐具、餐巾纸或湿巾，也许还有一两包调料包。它包含了依赖关系。它包含了你完成任务所需的一切，而不必四处走动去从厨房拿东西或从你最喜欢的快餐店的开放调料区填满口袋。不，容器里有你满足饥饿的所有必需品。'
- en: Docker is exactly that. It is a lunchbox – or picnic basket – full of cyber
    items and their needed dependencies. The suite of software applications we’re
    building in this chapter will be inside a Docker container. When complete, it
    will have yet another base for a mini-SOC independent of the ELK Stack as a standalone
    SOC. However, this suite of tools does have a dependency on Elasticsearch. Furthermore,
    we are going to include **Apache Cassandra** and **Minio** in the package.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Docker正是如此。它是一个午餐盒——或野餐篮——里面装着网络物品和它们所需的依赖关系。我们在本章中构建的软件套件将放在一个Docker容器内。完成后，它将拥有另一个基础平台，用于作为独立的SOC，而不依赖于ELK
    Stack。然而，这个工具套件确实依赖于Elasticsearch。此外，我们还将把**Apache Cassandra**和**Minio**包括在内。
- en: Whenever there’s a large group of software with such interdependencies as you
    will encounter here, you will deal with regular independent software upgrades,
    which means regular issues with compatibility. We are going to help you avoid
    those headaches by deploying the entire suite within the Docker container we just
    learned about.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当你遇到具有相互依赖的大量软件时，就会遇到常规的独立软件升级，这意味着经常会有兼容性问题。我们将通过将整个套件部署在我们刚刚学习的 Docker 容器内来帮助你避免这些麻烦。
- en: 'Before we install Docker, let’s make sure its own core dependencies are in
    place. Within your fresh Kali Purple VM, type the following:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们安装 Docker 之前，先确保它的核心依赖项已经到位。在你全新的 Kali Purple 虚拟机中，输入以下内容：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: These items will now also ensure that you can install Docker using the standard
    package manager instead of some of the archaic ways we’ve taught you to find software
    in this book thus far. One thing is for sure, when you complete this textual journey
    with us, you will be well-rounded and experienced in many future package-mapping
    and installation experiences. You might be annoyed at us making you do some things
    the hard way now, but you’ll thank us for it eventually. In the meantime, imagine
    actor Dwayne Johnson singing the peppy, melodic song called *You’re Welcome!*
    If you haven’t heard it, search for it on YouTube. That’s exactly what your humble
    author is like, except with bigger muscles.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这些项目现在还确保你能够使用标准的软件包管理器安装 Docker，而不是我们在本书中迄今为止教你寻找软件的某些过时方法。可以肯定的是，当你与我们完成这段文字之旅时，你将会在未来的许多包映射和安装经历中变得更加全面和有经验。你现在可能会因为我们让你以一种困难的方式做一些事情而感到烦恼，但最终你会感谢我们。与此同时，想象演员道恩·强森（Dwayne
    Johnson）唱着轻快的旋律歌曲《*You're Welcome!*》。如果你还没听过，去 YouTube 上搜索一下。这正是你谦逊的作者的风格，只不过有更大的肌肉。
- en: According to [kali.org](http://kali.org), there *may* already be a package named
    **docker** in your default installation that is not a containerized version. Since
    we don’t know which version of Kali Purple you’re running by the time you read
    this, we will need to make a subtle adjustment to our installation plans. We will
    first try to install something called docker.io, and if you get an error, then
    you can try the default **docker install**. It’s much simpler than it sounds.
    First, type **sudo apt update && sudo apt install -y docker.io** at the command
    line, and only if you get a warning or error, either now or after the next step,
    you can type **sudo apt install -y docker** (no need to update again since you
    just did that). If you continue to get an error, you should type **sudo systemctl
    daemon-reload** and then reboot before attempting the following command again,
    and if you still receive an error, you can type it a third time but append **–-now**
    to the end of it.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 [kali.org](http://kali.org)，在你默认安装中可能已经有一个名为 **docker** 的软件包，但它不是容器化版本。由于我们不知道你在阅读本书时运行的
    Kali Purple 版本，我们需要对我们的安装计划做出微调。我们将首先尝试安装一个叫做 docker.io 的软件包，如果遇到错误，你可以尝试安装默认的
    **docker install**。这比听起来要简单。首先，在命令行输入 **sudo apt update && sudo apt install -y
    docker.io**，如果你收到警告或错误，或者在下一步之后收到错误，你可以输入 **sudo apt install -y docker**（不需要再次更新，因为你刚刚做过了）。如果你继续收到错误，应该输入
    **sudo systemctl daemon-reload**，然后重启，再次尝试以下命令，如果仍然收到错误，可以第三次输入并在命令末尾加上 **--now**。
- en: When you’ve finished installing Docker, you’ll want to bind it to autostart
    when you launch or reboot your VM. Type **sudo systemctl** **enable docker**.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完 Docker 后，你需要将它绑定为在启动或重启虚拟机时自动启动。输入 **sudo systemctl** **enable docker**。
- en: 'Now, let’s start it up and make sure all is working as intended. By now, you’re
    surely familiar with this process. Type **sudo systemctl start docker** to start
    the service. Now, type **sudo systemctl status docker** and it should show as
    active (running), as seen in *Figure 8**.1*. You can press *Ctrl* + *Z* to break
    out of the status screen:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们启动它并确保一切按预期工作。到现在为止，你一定已经熟悉这个过程了。输入 **sudo systemctl start docker** 来启动服务。接下来，输入
    **sudo systemctl status docker**，它应该显示为活动（运行中），如*图 8.1*所示。你可以按 *Ctrl* + *Z* 来退出状态屏幕：
- en: '![Figure 8.1 – Docker status screen](image/B21223_08_1.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.1 – Docker 状态屏幕](image/B21223_08_1.jpg)'
- en: Figure 8.1 – Docker status screen
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1 – Docker 状态屏幕
- en: Once you’ve confirmed Docker is up and running properly, you’ll want to do yourself
    a favor and set a command that will allow you to use it without typing **sudo**
    before every command by adding yourself to the Docker group. Type **sudo usermod
    -aG** **docker $USER**.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认 Docker 正常运行，你应该为自己设置一个命令，这样你就可以在每个命令前不再输入 **sudo**，方法是将自己添加到 Docker 组中。输入
    **sudo usermod -aG** **docker $USER**。
- en: We’re not done yet but, at this point, we recommend rebooting your system. Give
    it a chance to fully load and then try checking the status again by typing **sudo
    systemctl status docker** to make sure Docker automatically started.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没完成，但此时我们建议重新启动系统。给系统一点时间完全加载，然后通过输入 **sudo systemctl status docker** 再次检查状态，确保
    Docker 已经自动启动。
- en: Now, it’s time to create the YAML file that will pull and configure the resources
    we want to have inside our container. First, let’s make the directory where that
    file will reside. Type **mkdir security-stack** and for the sake of keeping things
    simple, let’s go into that directory by typing **cd security-stack**. Now, we’re
    going to do something rather neat in the world of containers. Think of the lunchbox
    container we described a few moments ago. Now, imagine such a lunchbox that has
    multiple sections inside of it – one for the cold and/or wet items and one for
    the dry items. It’s like having multiple containers inside of a larger container.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，到了创建 YAML 文件的时候，该文件将拉取并配置我们希望在容器中拥有的资源。首先，让我们创建该文件所在的目录。输入 **mkdir security-stack**，为了简化操作，让我们通过输入
    **cd security-stack** 进入该目录。现在，我们将在容器的世界里做一些相当酷的事情。想象一下几分钟前我们提到的午餐盒容器。现在，想象一个这样的午餐盒，里面有多个隔层——一个用于存放冷的和/或湿的物品，另一个用于存放干的物品。这就像在一个大容器内有多个容器一样。
- en: 'Docker has created a tool for us to do the same thing, called **Docker Compose**.
    We can define the items in Docker Compose by creating our own YAML file. Those
    are the files with the **.yml** file extensions that you’ve been editing throughout
    this book to configure the applications that you’ve been using. Let’s create our
    file now by typing **nano docker-compose.yml**. While still in your Kali Purple
    instance (unless you configured it to allow cut and paste to be shared between
    your host and VM), open a web browser and go to the following URL: [https://docs.strangebee.com/thehive/installation/docker/#quick-start](https://docs.strangebee.com/thehive/installation/docker/#quick-start).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 为我们创建了一个工具来执行相同的操作，称为**Docker Compose**。我们可以通过创建自己的 YAML 文件来定义 Docker
    Compose 中的内容。这些文件是带有 **.yml** 文件扩展名的文件，你在本书中一直在编辑这些文件，以配置你所使用的应用程序。现在让我们通过输入 **nano
    docker-compose.yml** 来创建我们的文件。在 Kali Purple 实例中（除非你配置了允许主机与虚拟机之间共享剪切和粘贴），打开一个网页浏览器并访问以下网址：[https://docs.strangebee.com/thehive/installation/docker/#quick-start](https://docs.strangebee.com/thehive/installation/docker/#quick-start)。
- en: 'The only way to ensure we have the most up-to-date compatibility between applications
    is to grab the suggested Docker Compose YAML file directly from **StrangeBee**.
    This way, no matter how long after this is published you read it, you’ll still
    be able to successfully run Docker Compose. On the web page, under **quick start**,
    copy the data from the proposed **docker compose** file and paste it inside the
    open **docker-compose.yml** file you recently created. The data should resemble
    what you see in *Figure 8**.2* but may have subtle differences:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 确保应用程序之间的兼容性是最新的唯一方法，就是直接从 **StrangeBee** 获取建议的 Docker Compose YAML 文件。这样，无论你在发布之后多久阅读这篇文章，你仍然可以成功运行
    Docker Compose。在网页的 **quick start** 部分，复制建议的 **docker compose** 文件数据，并将其粘贴到你最近创建的
    **docker-compose.yml** 文件中。数据应与*图 8.2* 中看到的类似，但可能会有细微的差异：
- en: '![Figure 8.2 – Beginning of StrangeBee’s docker-compose.yml](image/B21223_08_2.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.2 – StrangeBee 的 docker-compose.yml 文件开头](image/B21223_08_2.jpg)'
- en: Figure 8.2 – Beginning of StrangeBee’s docker-compose.yml
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.2 – StrangeBee 的 docker-compose.yml 文件开头
- en: Once you are finished pasting the data into the YAML file, you can press *Ctrl*
    + *X* to exit the file and select *Y* to save when prompted.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据粘贴到 YAML 文件中后，你可以按 *Ctrl* + *X* 退出文件，在提示时选择 *Y* 保存。
- en: After you return to the command prompt, we recommend typing **cat docker-compose.yml**,
    which displays a non-editable – read-only – display of the file’s contents. Double-check
    it against the information on the web page and then we highly recommend rebooting
    your system one more time.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 返回命令提示符后，我们建议输入 **cat docker-compose.yml**，这将显示该文件内容的只读（不可编辑）视图。与网页上的信息进行核对，然后我们强烈建议再重新启动一次系统。
- en: 'Upon returning from the reboot, again confirm that Docker is up and running
    by typing **systemctl status docker** and then move into the directory where your
    **docker-compose.yml** file resides by typing **cd security-stack**. Now, it’s
    time to fire it up! Type **docker-compose up -d** and enjoy watching the various
    containers load in front of your eyes unless you’re prompted to install the **docker-compose**
    command, in which case you should dramatically roll your eyes, grunt in annoyance,
    and then press **y** to install the command before again attempting to type **docker-compose
    up -d**. If you continue to have problems, make absolutely certain that you’re
    in the directory where your **docker-compose.yml** file is, and that you’ve rebooted
    your system. Sometimes, it takes a few minutes for all of these technologies you’re
    working with to start working fully together. We’ve found jumping up and down
    and pumping your fists in anger to be very helpful in scenarios like that. That’s
    primarily because it usually distracts you long enough to allow the technologies
    to start up and begin to communicate as desired:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在重启后，再次确认 Docker 是否正在运行，方法是输入 **systemctl status docker**，然后进入包含 **docker-compose.yml**
    文件的目录，输入 **cd security-stack**。现在，是时候启动了！输入 **docker-compose up -d**，并享受在你眼前加载的各个容器，除非你被提示安装
    **docker-compose** 命令，在这种情况下，你应该大幅度翻白眼，发出烦躁的哼声，然后按 **y** 安装该命令，再次尝试输入 **docker-compose
    up -d**。如果你继续遇到问题，请确保你位于包含 **docker-compose.yml** 文件的目录，并且系统已经重启。有时，这些技术协同工作可能需要几分钟的时间。我们发现，在这种情况下，跳起来摇动拳头发泄怒气非常有帮助。那是因为这样通常能够分散你的注意力，足够长的时间让这些技术启动并开始按预期互相通信：
- en: '![Figure 8.3 – Docker Compose containers loading](image/B21223_08_3.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.3 – Docker Compose 容器加载中](image/B21223_08_3.jpg)'
- en: Figure 8.3 – Docker Compose containers loading
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.3 – Docker Compose 容器加载中
- en: 'After the containers load, there are two more commands you will want to know.
    They are **docker ps** and **docker-compose ps**. Both serve the same function
    of showing you the status of all Docker containers simultaneously. However, they
    each have their own benefit. The **docker ps** command will provide container
    IDs at the beginning of each line so that you can execute container-specific commands.
    Such commands might be to start, stop, pause, unpause, or view logs specific to
    that container. Those commands, however, are executed within Docker Compose. Remember,
    you must be inside the security-stack directory in order to execute Docker Compose
    commands:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 容器加载完毕后，你需要了解另外两个命令。它们是 **docker ps** 和 **docker-compose ps**。这两个命令的作用相同，都是显示所有
    Docker 容器的状态。然而，它们各有其优势。**docker ps** 命令会在每行的开头提供容器 ID，以便你执行特定容器的命令。这些命令可能是启动、停止、暂停、恢复暂停或查看该容器的日志。然而，这些命令是通过
    Docker Compose 执行的。记住，必须进入 security-stack 目录才能执行 Docker Compose 命令：
- en: '![Figure 8.4 – docker ps shows the state of the containers with container IDs](image/B21223_08_4.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.4 – docker ps 显示容器状态及容器 ID](image/B21223_08_4.jpg)'
- en: Figure 8.4 – docker ps shows the state of the containers with container IDs
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.4 – docker ps 显示容器状态及容器 ID
- en: 'And here is the other one:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个是：
- en: '![Figure 8.5 – Docker-compose ps shows the state of the containers in summary](image/B21223_08_5.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.5 – Docker-compose ps 显示容器状态的总结](image/B21223_08_5.jpg)'
- en: Figure 8.5 – Docker-compose ps shows the state of the containers in summary
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.5 – Docker-compose ps 显示容器状态的总结
- en: You likely will need to run the **docker-compose up -d** command after a reboot
    to get all of the containers up and running again. That said, let’s start examining
    this group of applications as they relate to the overall IR environment we are
    creating in this chapter. First up is **Cortex**, which is the centerpiece of
    our IR solution.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在重启后，你可能需要再次运行 **docker-compose up -d** 命令，以便将所有容器重新启动并运行。话虽如此，让我们开始审视这些应用程序，看看它们如何与我们在本章中创建的整体
    IR 环境相关。首先是 **Cortex**，它是我们 IR 解决方案的核心部分。
- en: Cortex
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cortex
- en: Cortex is a security product that helps to facilitate **security orchestration
    automation and response** (**SOAR**) activities. Many consider Cortex the most
    crucial component of incident response because it serves as a sort of IR operating
    system. This is because it integrates with – *marries*, if you will – other IR
    tools with automation to create a streamlined process of working IR. In doing
    so, Cortex is able to more directly address some of the more common challenges
    that are faced by today’s SOCs and CSIRTs, as well as professional security researchers,
    during the threat intelligence and digital forensics portions of the IR process.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Cortex 是一款安全产品，旨在促进 **安全编排自动化和响应**（**SOAR**）活动。许多人认为 Cortex 是事件响应中最重要的组成部分，因为它充当了一种
    IR 操作系统。这是因为它与其他 IR 工具进行集成——如果你愿意，可以说是“结合”——并通过自动化创建了一个简化的 IR 工作流程。因此，Cortex 能够更直接地解决今天
    SOC 和 CSIRT 以及专业安全研究人员在威胁情报和数字取证部分的 IR 过程中面临的一些常见挑战。
- en: 'Before installing it, let’s take a look at a few things that make Cortex special:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装之前，让我们先看看几个让 Cortex 与众不同的特点：
- en: '**Analyzer and responder integration**: Cortex provides a very robust framework
    to be used for integrating and executing analyzers and responders. Analyzers are
    software utilities that are used to perform security analysis tasks, such as enriching
    observable data – we talked about data enrichment in the first four chapters,
    conducting malware analysis, or executing queries/searches from differing sources
    of data. Responders help to enable automated response actions such as isolating
    endpoints, blocking potentially malicious IP addresses, dealing with file hashes
    and artifacts, or sending notifications. Cortex has an architecture that allows
    custom analyzers and responders to be integrated, which enables organizations
    using the product to tailor Cortex to fit their unique business security needs.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析器和响应器集成**：Cortex 提供了一个非常强大的框架，用于集成和执行分析器与响应器。分析器是用于执行安全分析任务的软件工具，例如丰富可观察数据——我们在前四章中谈到了数据丰富，进行恶意软件分析，或执行来自不同数据源的查询/搜索。响应器则帮助启用自动响应操作，如隔离端点、阻止潜在恶意的
    IP 地址、处理文件哈希和伪造物，或发送通知。Cortex 具有一种架构，允许集成自定义分析器和响应器，这使得使用该产品的组织能够根据其独特的业务安全需求量身定制
    Cortex。'
- en: '**Pluggable architecture**: The pluggable architecture is the part of Cortex
    that is designed to accept customized analyzers and responders. It is what makes
    the integrations mechanically possible.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可插拔架构**：可插拔架构是 Cortex 的一部分，设计用于接受自定义的分析器和响应器。这是实现集成的核心。'
- en: '**RESTful API**: Cortex provides a RESTful API that is also often referred
    to as a **REST API** to support seamless integration with external systems, applications,
    and security tools. What does that mean? Those of you who’ve worked, or presently
    work, in software development likely have a thorough understanding of this concept
    already. For everyone else, let’s break it down just a little bit.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RESTful API**：Cortex 提供了一个 RESTful API，也常被称为 **REST API**，以支持与外部系统、应用程序和安全工具的无缝集成。这意味着什么？那些曾经从事或正在从事软件开发的人可能已经对这个概念有了透彻的了解。对于其他人来说，让我们稍微解释一下。'
- en: We’ve talked about what an API is in broad terms but what does it really do?
    The **Application Programming Interface** (**API**) is something that defines
    the rules for how two different software systems will communicate with each other.
    Developers create these sets of rules in the form of an API to explain to any
    external applications how they should interact with their own applications from
    a programming perspective.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们已经大致讨论过什么是 API，但它到底做什么呢？**应用程序接口**（**API**）是定义两个不同软件系统如何相互通信的规则。开发人员创建这些规则集，以
    API 形式向外部应用程序解释它们应该如何从编程角度与自己的应用程序进行交互。
- en: The **REST** acronym stands for **Representational State Transfer**, which is
    a software architecture that provides guidelines on how APIs should work. It’s
    somewhat of a case of who’s watching the watchdog, with the *watchdog* being the
    API setting the rules and the *who* being REST. It was created with the idea that
    it would help manage inter-application communications within the most complex
    internet networks. It’s known for contributing to high performance, which translates
    into faster application loading and data retrieval for us mere mortals. REST provides
    a high level of visibility into cross-platform portability communications, implementations,
    and modifications. It is stateless, which means all necessary data must be contained
    within the communications between the client and server because the server will
    not store or record the client’s connection status. There is an abundance of resources
    if you wish to learn more about the RESTful API. We’ll toss a couple of links
    in the *Further reading* section at the end of this chapter.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**REST**的缩写代表**表现性状态转移**，这是一种提供API工作指南的软件架构。它有点像“谁来监管监管者”的情况，*监管者*是设定规则的API，而*谁*则是REST。它的创建理念是帮助管理最复杂互联网网络中的应用程序间通信。它因其有助于高性能而著称，这意味着我们这些普通人可以享受更快的应用加载和数据检索。REST提供了对跨平台可移植性通信、实现和修改的高可见性。它是无状态的，这意味着所有必要的数据必须包含在客户端和服务器之间的通信中，因为服务器不会存储或记录客户端的连接状态。如果你希望深入了解RESTful
    API，有很多资源可以参考。我们将在本章末尾的*进一步阅读*部分提供几个链接。'
- en: '**Multi-tenancy**: Making Cortex especially useful is the implementation of
    multi-tenancy support. Some of you might hear that term and think that it means
    a single instance of Cortex can handle multiple organizations or customers. Yes,
    that is true, but it’s more than that. Multi-tenancy can also refer to a more
    precise segmentation based on organizational units, teams, or specific use cases.
    This can help larger organizations manage multiple unrelated scenarios while employing
    separation of duties with their personnel. Separation of duties is used to make
    sure no single person has all of the security and access permissions of any environment,
    reducing potential damage from insider threats. Keep in mind that insider threats
    do not always occur with malicious intent. A super awesome and honest high-performing
    employee who makes a simple mistake, maybe even due to no fault of their own,
    is considered an insider threat in terms of cybersecurity. The key takeaway here
    is that Cortex allows segmentation within its deployment.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多租户**：Cortex特别有用的一个原因是它实现了多租户支持。你们中的一些人可能会听到这个术语，并认为它意味着单一实例的Cortex可以处理多个组织或客户。是的，这是对的，但它不仅仅是这个意思。多租户还可以指基于组织单元、团队或特定使用场景的更精确的分割。这可以帮助大规模组织管理多个不相关的场景，同时通过人员分工来实施职能分离。职能分离是为了确保没有单个人拥有任何环境中所有的安全和访问权限，从而减少来自内部威胁的潜在损害。请记住，内部威胁并不总是出于恶意。一个超级优秀、诚实且表现出色的员工，如果因为某种简单的错误（可能根本没有他们的错）而造成问题，在网络安全中也被视为内部威胁。这里的关键点是，Cortex允许在其部署中进行分割。'
- en: '**Scalability and performance**: We’ve already talked about how scalability,
    when applied to technology, means having the ability to increase the size and
    scope of the technology seamlessly, and possibly even suddenly, without adversely
    affecting the availability of organizational resources. This is yet another example
    of a software developer considering the *A* from the **CIA Triad** we talked about
    in [*Chapter 1*](B21223_01.xhtml#_idTextAnchor013). Cortex is built to efficiently
    handle very large volumes of information while maintaining high performance and
    reliability in support of security operations.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性和性能**：我们已经讨论过，当可扩展性应用于技术时，意味着能够在不对组织资源的可用性产生负面影响的情况下，顺畅且可能突然地增加技术的规模和范围。这又是一个软件开发人员考虑**CIA三元组**中*A*的例子，我们在[**第1章**](B21223_01.xhtml#_idTextAnchor013)中提到过。Cortex的设计是为了高效处理大量信息，同时保持高性能和可靠性，以支持安全操作。'
- en: '**Integration with TheHive**: Cortex is very tightly integrated with TheHive,
    which we will discuss in the next section. In fact, it was created by the same
    folks who created TheHive. In a nutshell, TheHive submits observable security
    information to Cortex, where it can be handled through automation and then returned
    to TheHive for a more streamlined and efficient analysis, and, if applicable,
    investigation and response.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与 TheHive 的集成**：Cortex 与 TheHive 紧密集成，我们将在下一节中讨论它。实际上，它是由与 TheHive 相同的团队创建的。简而言之，TheHive
    将可观察的安全信息提交给 Cortex，Cortex 通过自动化处理这些信息，然后再返回 TheHive 进行更简化高效的分析，并在必要时进行调查和响应。'
- en: Now that we’ve covered a basic overview of what Cortex is, what its key features
    are, and what it can do, we should go play in the dirt. It’s much more fun than
    staring at it, wouldn’t you say? Unlike previous chapters, we don’t need to go
    through step-by-step procedures to install any of the packages in this and the
    next chapter because they have all already been installed, along with their dependencies,
    via Docker Compose. So, now, all we do is make sure everything is still up and
    running – in case you took a break since reading that section. Review the end
    of the section with the screenshots showing **docker-compose ps** and **docker
    ps**. Either restart any down processes or just try to restart the entire group
    by typing **docker-compose up -d**. It is mission-critical that you are very patient
    with this process. When you try to load Cortex in your browser in the next step,
    you might get an error if Cortex is still loading in the background. Just wait
    a minute or two and try again.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经概述了 Cortex 是什么，它的主要功能是什么，以及它能做些什么，我们应该去“玩泥巴”了。比起盯着它看，这要有趣得多，不是吗？与之前的章节不同，我们不需要逐步安装本章和下一章中的任何包，因为这些包和它们的依赖项已经通过
    Docker Compose 安装好了。所以，现在我们只需要确保一切仍在正常运行——以防你在阅读这一部分后休息过一段时间。请复习本节末尾的截图，查看 **docker-compose
    ps** 和 **docker ps**。无论是重新启动任何停止的进程，还是通过输入 **docker-compose up -d** 来重启整个组，都可以。非常重要的一点是，您在此过程中需要保持耐心。当你在下一步尝试在浏览器中加载
    Cortex 时，如果 Cortex 背景中仍在加载，你可能会遇到错误。只需等待一两分钟，然后再试一次。
- en: 'You can access Cortex using your web browser. Depending on your individual
    setup, you will want to make sure you have port forwarding enabled within your
    Kali Purple VM instance, assigning port **9001** to your Cortex access. You can
    review [*Chapter 5*](B21223_05.xhtml#_idTextAnchor085) if you want a refresher
    on **port forwarding**. While we’re at it, let’s just get all of the port forwards
    put in place right now. Then, we won’t have to keep going back. Forward ports
    **80**, **443**, **9000**, **9001**, **9042**, **9090**, **9200**, and **9300**
    as you see in *Figure 8**.6*:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过网页浏览器访问 Cortex。根据你的个人设置，你需要确保在 Kali Purple 虚拟机实例中启用了端口转发，将端口 **9001** 分配给
    Cortex 访问。你可以查看 [*第 5 章*](B21223_05.xhtml#_idTextAnchor085)，如果你需要复习 **端口转发**。既然如此，我们现在就把所有的端口转发都设置好。这样我们就不需要再回头了。根据
    *图 8.6*，转发端口 **80**、**443**、**9000**、**9001**、**9042**、**9090**、**9200** 和 **9300**：
- en: '![Figure 8.6 – Port forwards needed for this VM instance](image/B21223_08_6.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.6 – 此虚拟机实例所需的端口转发](image/B21223_08_6.jpg)'
- en: Figure 8.6 – Port forwards needed for this VM instance
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.6 – 此虚拟机实例所需的端口转发
- en: 'When your port forwarding is set up, open up the appropriate browser (host
    or guest OS) based on your preferences and point the URL to [http://127.0.0.1:9001](http://127.0.0.1:9001),
    where you might be prompted to have Cortex update its database, as seen in *Figure
    8**.7*:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当端口转发设置完成后，打开你喜欢的浏览器（主机或客户操作系统），并将 URL 指向 [http://127.0.0.1:9001](http://127.0.0.1:9001)，此时可能会提示你让
    Cortex 更新其数据库，如 *图 8.7* 所示：
- en: '![Figure 8.7 – Cortex initial access requests a database update](image/B21223_08_7.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.7 – Cortex 初始访问请求数据库更新](image/B21223_08_7.jpg)'
- en: Figure 8.7 – Cortex initial access requests a database update
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.7 – Cortex 初始访问请求数据库更新
- en: 'Select the **Update Database** button and you will be prompted to create an
    administrator account as seen in *Figure 8**.8*. To be clear, the value you enter
    in the **Login** field will become the username. The value you enter in the **Name**
    field is simply an identity of the type of account. As you can see, we called
    our super admin **Packt Super Admin**. Fill in your desired values and select
    the **Create** button to continue:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**更新数据库**按钮，你将被提示创建管理员帐户，如*图 8.8*所示。为了明确说明，你在**登录**字段中输入的值将成为用户名。在**名称**字段中输入的值仅仅是帐户类型的标识。如你所见，我们将我们的超级管理员命名为**Packt
    Super Admin**。填写所需的值后，选择**创建**按钮继续：
- en: '![Figure 8.8 – Cortex initial admin account creation](image/B21223_08_8.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.8 – Cortex 初始管理员帐户创建](image/B21223_08_8.jpg)'
- en: Figure 8.8 – Cortex initial admin account creation
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.8 – Cortex 初始管理员帐户创建
- en: 'You’ll be redirected to the regular login page, which is the page you will
    see moving forward whenever you go to access Cortex. You can now log in with the
    credentials that you just created:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你将被重定向到常规登录页面，这是你以后每次访问 Cortex 时看到的页面。现在，你可以使用刚刚创建的凭据进行登录：
- en: '![Figure 8.9 – Default Cortex login screen after initial admin account creation](image/B21223_08_9.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.9 – 初始管理员帐户创建后的默认 Cortex 登录界面](image/B21223_08_9.jpg)'
- en: Figure 8.9 – Default Cortex login screen after initial admin account creation
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.9 – 初始管理员帐户创建后的默认 Cortex 登录界面
- en: 'You may recall that we discussed a little earlier how Cortex supports multi-tenancy.
    That is, it supports a fragmented setup where groups of users can be isolated
    from other groups if their assignments are not related or with the same company
    or team. The page that loads immediately after logging in is where we begin to
    manage this multi-tenancy. Do not be misled by the **Organizations** label. It
    could just as easily have been labeled **Segments**, **Teams**, **Pods**, or pretty
    much anything that describes a deliberate isolation from the other groups. It
    is here you will create your organizations, as shown in *Figure 8**.10*:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能记得我们之前讨论过 Cortex 如何支持多租户功能。也就是说，它支持一种碎片化的设置，在这种设置中，如果用户组之间的任务没有关联，或者不属于同一个公司或团队，那么这些用户组可以彼此隔离。登录后立即加载的页面是我们开始管理这种多租户功能的地方。不要被**Organizations**（组织）标签所误导。它本来也可以被标记为**Segments**（分段）、**Teams**（团队）、**Pods**（小组），或几乎任何描述与其他组隔离的术语。正是在这里，你将创建你的组织，如*图
    8.10*所示：
- en: '![Figure 8.10 – Cortex Organizations and Users tabs for multi-tenancy management](image/B21223_08_10.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.10 – Cortex 组织和用户标签，用于多租户管理](image/B21223_08_10.jpg)'
- en: Figure 8.10 – Cortex Organizations and Users tabs for multi-tenancy management
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.10 – Cortex 组织和用户标签，用于多租户管理
- en: In the preceding screenshot, you can also see a **Users** option if you look
    across the top-right navigation, next to the logged-in username. There, you can
    create and manage additional users, including assigning roles and permissions.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，如果你查看右上方的导航栏，在已登录的用户名旁边，你还可以看到一个**Users**（用户）选项。在这里，你可以创建和管理额外的用户，包括分配角色和权限。
- en: 'Select the **Organizations** tab. There, you can create new organizations and
    manage the ones you already have. Go ahead and select the **+ Add organization**
    button at the top left to create a new organization. It’s pretty self-explanatory
    at this point. Enter a name for your organization in the **Name** field and a
    description of your organization in the **Description** field. *Figure 8**.11*
    shows an example. Select **Save** when you’ve finished:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**Organizations**（组织）标签。在这里，你可以创建新组织并管理现有的组织。继续选择左上角的**+ 添加组织**按钮，创建一个新组织。此时，这一步非常直观。在**名称**字段中输入你的组织名称，在**描述**字段中输入组织的描述。*图
    8.11*展示了一个示例。完成后，选择**保存**：
- en: '![Figure 8.11 – Creating an organization in Cortex](image/B21223_08_11.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.11 – 在 Cortex 中创建一个组织](image/B21223_08_11.jpg)'
- en: Figure 8.11 – Creating an organization in Cortex
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.11 – 在 Cortex 中创建一个组织
- en: Now, let’s create a user to add to that organization. Select the **Users** tab.
    There, you will notice that we also have the option to create API keys for authentication
    or lock the accounts completely. It is through this feature that you will get
    TheHive to integrate with Cortex. First, create the user.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个用户并将其添加到该组织中。选择**Users**（用户）标签。在这里，你会注意到我们还有创建 API 密钥进行身份验证或完全锁定帐户的选项。正是通过此功能，你可以将
    TheHive 与 Cortex 集成。首先，创建用户。
- en: 'Select the **Add user** button at the top left of the page to create a new
    user:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 选择页面左上角的**添加用户**按钮以创建一个新用户：
- en: '![Figure 8.12 – Cortex Add user button](image/B21223_08_12.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.12 – Cortex 添加用户按钮](image/B21223_08_12.jpg)'
- en: Figure 8.12 – Cortex Add user button
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.12 – Cortex 添加用户按钮
- en: 'You will create a user named **TheHive** and it may be a good practice – depending
    on your organization’s setup and **Service-Level Agreements** (**SLAs**) that
    you might have established with these customer organizations – to give that original
    user general administrative roles as well as reading and analyzing since the admin
    of the organization is likely to be the first account you’re creating for it.
    It is certainly possible that you have it arranged for organizations to not have
    dedicated admin – if you’re providing that service yourself or your organization
    is, as opposed to the customer managing their own organization within your environment:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你将创建一个名为**TheHive**的用户，根据你组织的设置以及与你的客户组织可能建立的**服务水平协议**（**SLAs**），将原始用户赋予一般管理角色以及阅读和分析权限，可能是一个不错的做法，因为组织的管理员很可能是你为其创建的第一个账户。当然，也有可能你安排的组织没有专门的管理员——如果你或你的组织提供此类服务，而不是让客户自己在你的环境中管理自己的组织：
- en: '![Figure 8.13 – Cortex Add user window](image/B21223_08_13.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.13 – Cortex 添加用户窗口](image/B21223_08_13.jpg)'
- en: Figure 8.13 – Cortex Add user window
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.13 – Cortex 添加用户窗口
- en: You might have noticed there is no option to set the password. That option is
    provided after you click **Save user** and return to the default **Users** screen,
    which you can see in *Figure 8**.13*. You will notice the first row offers an
    opportunity to edit the password. That’s what will show when a password already
    exists.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到没有设置密码的选项。这个选项会在你点击**保存用户**并返回到默认的**用户**界面后出现，正如你在*图 8.13*中看到的。你会注意到第一行提供了编辑密码的机会。这就是当密码已存在时所显示的内容。
- en: When a password needs to be created from scratch, it will instead provide you
    the option to create a new password, as you see in the second row. To do that,
    go ahead and click **New password** and a field will appear in place of the button.
    Type your password into that field and press the *Enter* key on your keyboard.
    You’ll then need to refresh your page for the button display to switch to **Edit
    password**.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要从头创建密码时，系统会提供创建新密码的选项，正如你在第二行中看到的。为此，请点击**新密码**，此时按钮会被替换为一个输入框。将密码输入该框中并按下键盘上的*Enter*键。之后，你需要刷新页面，按钮显示才会切换为**编辑密码**。
- en: 'You’ll also notice at the very end of the second row that you have an option
    to lock the user. That will be the case for everyone you create except the default
    super user. That should be pretty self-explanatory; it locks the user and prevents
    them from having access to Cortex:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会注意到在第二行的最右端，你有一个锁定用户的选项。这将适用于你创建的每个用户，除了默认的超级用户。这个选项应该很容易理解：它会锁定用户并阻止他们访问
    Cortex：
- en: '![Figure 8.14 – Edit password, New password, Create API Key, and Lock](image/B21223_08_14.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.14 – 编辑密码、新密码、创建 API 密钥和锁定](image/B21223_08_14.jpg)'
- en: Figure 8.14 – Edit password, New password, Create API Key, and Lock
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.14 – 编辑密码、新密码、创建 API 密钥和锁定
- en: 'Lastly, let’s create an API key for our users. For the user you just created,
    select the **Create API Key** button and it will create the API key, transforming
    the display into three button options – **Renew**, **Revoke**, and **Reveal**,
    as you see in the first row of *Figure 8**.14*. To see the API that Cortex created
    for you, select the **Reveal** button and a value box will appear showing the
    key, as you see in the second row of *Figure 8**.15*:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们为用户创建一个 API 密钥。对于你刚刚创建的用户，点击**创建 API 密钥**按钮，它会创建 API 密钥，并将界面变为三个按钮选项——**更新**、**撤销**和**显示**，正如你在*图
    8.14*的第一行中看到的。要查看 Cortex 为你创建的 API 密钥，请点击**显示**按钮，会出现一个显示密钥的框，正如你在*图 8.15*的第二行中看到的：
- en: '![Figure 8.15 – Create, Renew, Revoke, and copy the API key](image/B21223_08_15.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.15 – 创建、更新、撤销并复制 API 密钥](image/B21223_08_15.jpg)'
- en: Figure 8.15 – Create, Renew, Revoke, and copy the API key
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.15 – 创建、更新、撤销并复制 API 密钥
- en: To save space, the API is truncated, and you’ll only see the beginning of it.
    That’s okay, because as those of you who are astute observers will have already
    noticed, the international symbol for copy contents is in a small box to the right
    of the truncated API key field. Select the image with two pieces of paper to automatically
    copy the contents of your API key to your clipboard. Record that value somewhere
    safe and reference it any time you’d like to integrate another tool with Cortex
    using this specific user. Remember to pay attention to this user’s purpose. They
    don’t have to be a unique human; they could be a service account. Some of the
    more complex setups may have multiple service accounts for integrating with other
    tools.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省空间，API 被截断，你只能看到它的开头。没关系，因为像你们这些敏锐的观察者已经注意到，复制内容的国际符号位于截断的 API 密钥字段右侧的小框内。选择这个带有两张纸的图标，将自动复制你的
    API 密钥到剪贴板。将该值记录在安全的位置，并在任何时候需要使用这个特定用户将其他工具与 Cortex 集成时进行参考。记得注意这个用户的用途。它们不必是独立的个人；它们可以是服务账户。某些更复杂的设置可能会有多个服务账户，用于与其他工具进行集成。
- en: This feature is the bread and butter of this entire section. After you finish
    the next section, you should start to be able to visualize how the IR tool known
    as TheHive integrates with a SOAR product, which itself integrates with the Elasticsearch
    database we learned about near the beginning of this book.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能是整个部分的核心内容。在完成下一部分后，你应该开始能够想象 IR 工具 TheHive 如何与 SOAR 产品集成，而 SOAR 产品本身又与我们在本书开始时了解的
    Elasticsearch 数据库进行集成。
- en: In this section, you learned that a SOAR is used to manage and automate security
    tasks as they relate to the total incident response process and that Cortex is
    such a product. You also gained insight into how the various products in *Introduction
    to Kali Purple* are designed to work together as a full unit, giving anyone who
    takes the time to fully implement and integrate them the makings of a home-built
    SOC. You now have Cortex installed and configured, along with some elements of
    TheHive, which we will dive into a little deeper in the next section. That said,
    let’s move on to TheHive, which is the application that will utilize the features
    of Cortex and fill in a few gaps we’ve yet to cover.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，你了解了 SOAR 用于管理和自动化与整体事件响应过程相关的安全任务，而 Cortex 就是这样的一个产品。你还了解了《Kali Purple
    入门》中的各个产品如何设计成协同工作，任何花时间完全实施和集成这些产品的人都能打造一个自建的 SOC。你现在已经安装并配置了 Cortex，以及 TheHive
    的一些元素，我们将在下一部分深入探讨这些内容。话虽如此，让我们继续讨论 TheHive，这是一个利用 Cortex 功能并填补一些尚未覆盖的空白的应用程序。
- en: TheHive
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'TheHive  '
- en: Kali Purple offers TheHive as an open source **Security Incident Response Platform**
    (**SIRP**). TheHive now falls under the umbrella of a company called StrangeBee.
    StrangeBee was co-founded by Jerome Leonard, Nabil Adouani, and Thomas Franco,
    who are also TheHive’s creators. Also falling under StrangeBee is a product called
    Cortex, which should be quite familiar to you since we just discussed it in the
    previous section. TheHive is a SIRP that was built to integrate with Cortex and
    also with the extremely well-known MISP. If you presently work in a cybersecurity
    profession, odds are you’ve already worked with MISP. We will cover that in the
    next section.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Purple 提供 TheHive 作为一个开源 **安全事件响应平台** (**SIRP**)。TheHive 现在归 StrangeBee
    公司的旗下。StrangeBee 由 Jerome Leonard、Nabil Adouani 和 Thomas Franco 共同创办，他们也是 TheHive
    的创造者。StrangeBee 旗下还有一个名为 Cortex 的产品，你应该已经很熟悉，因为我们刚刚在上一部分讨论过它。TheHive 是一个 SIRP，旨在与
    Cortex 和广为人知的 MISP 集成。如果你目前从事网络安全工作，很可能已经使用过 MISP。我们将在下一部分中讨论 MISP。
- en: 'TheHive was built to streamline the process of managing security incidents.
    The creators realized the best way to achieve streamlining was to ensure everybody
    had access to the same threat data, hence the integration with the MISP, which
    was built specifically for that purpose. TheHive is equipped with a comprehensive
    set of IR features and enhancements. Let’s take a bird’s-eye view of these features
    and enhancements:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: TheHive 是为了简化管理安全事件的过程而构建的。创建者意识到，实现简化的最佳方式是确保每个人都能访问相同的威胁数据，因此与 MISP 的集成应运而生，MISP
    是专门为此目的构建的。TheHive 配备了全面的 IR 功能和增强功能。让我们从全局视角来看一下这些功能和增强：
- en: '**Case management**: TheHive provides a centralized location for organizing
    and managing security incident cases. Cybersecurity analysts can create, update,
    and track the progress of individual cases, providing a structured and organized
    approach to incident handling. In fact, you can either enter a case ID for quick
    access or create a brand new case from the top ribbon of TheHive’s GUI, as seen
    in *Figure 8**.16*:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**案例管理**：TheHive提供了一个集中管理安全事件案例的地方。网络安全分析人员可以创建、更新并跟踪各个案例的进展，为事件处理提供一种结构化和有序的方式。事实上，你可以通过输入案例ID快速访问，或者像*图8.16*所示，从TheHive的GUI顶部工具栏创建一个全新的案例：'
- en: '![Figure 8.16 – TheHive case creation](image/B21223_08_16.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图8.16 – TheHive案例创建](image/B21223_08_16.jpg)'
- en: Figure 8.16 – TheHive case creation
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.16 – TheHive案例创建
- en: '**Task management**: The product allows users to manage tasks by giving them
    permission to assign and track the precise tasks that might be associated with
    any specific incident response scenario. Having this feature provides a level
    of accountability among the analysts, not to mention it further facilitates collaboration
    and coordination.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务管理**：该产品允许用户通过赋予他们权限来管理任务，从而精确分配和跟踪与特定事件响应场景相关的任务。这个功能让分析人员之间有了责任感，更进一步促进了协作和协调。'
- en: '**Observables management**: Observables are items that analysts can physically
    see that might be worth categorizing and tracking independently and by themselves.
    This is because they could affect numerous incident response cases in one form
    or another. To further explain: Think of an IP address that turns out to have
    a poor OSINT reputation and is generally considered to be malicious in nature.
    By tracking this IP address by itself, analysts would be able to correlate malicious
    activity across many different incident response scenarios if there was a broad
    malicious campaign coming from the address, such as a phishing campaign. Such
    an event would likely affect many different organizations and involve many different
    incident response scenarios. IP addresses are something analysts can physically
    see. Therefore, they’re observable. Other observables may include domain names,
    URLs, and hashes. In TheHive, analysts can categorize and track any of these observables
    for more effective incident response.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可观察项管理**：可观察项是分析人员可以直接看到的、可能值得单独分类和追踪的项目。这是因为它们可能以某种形式影响多个事件响应案例。进一步解释：想象一下一个IP地址，其OSINT声誉很差，并且通常被认为是恶意的。通过单独追踪这个IP地址，分析人员将能够将恶意活动与多个事件响应场景关联起来，如果该地址发起了一个广泛的恶意攻击活动，如钓鱼攻击，这种事件可能会影响许多不同的组织，并涉及多个事件响应场景。IP地址是分析人员可以直接看到的，因此它们是可观察的。其他可观察项可能包括域名、URL和哈希值。在TheHive中，分析人员可以分类和追踪这些可观察项，以便更有效地进行事件响应。'
- en: '**Reporting and analysis**: Knowing where our own potential weaknesses are
    is critical for a mature SOC. This security solution includes reporting and analysis
    tools that allow users to generate fully comprehensive reports on security incidents.
    They can also use the software to report on security trends and performance metrics.
    This feature empowers organizations to gain insights from within their own security
    posture overall, as well as their individual incident response capabilities.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**报告与分析**：了解我们潜在的弱点对一个成熟的SOC至关重要。这个安全解决方案包含报告和分析工具，允许用户生成全面的安全事件报告。他们还可以利用软件报告安全趋势和性能指标。这个功能使组织能够深入了解自身的安全状况以及各自的事件响应能力。'
- en: '**Collaboration**: We’ve talked about it several times now and it cannot be
    overstated. This security solution offers collaboration as a key feature because
    it’s one of the core values of TheHive’s manner of operations. This collaboration
    is accomplished by providing a shared workspace for incident responders so they
    can work together to resolve the security incidents they are facing. This is set
    up so that the collaboration can occur in real time, providing IR folks with a
    manner of sharing insights, knowledge, and best practices as they are needed.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作**：我们已经讨论过几次了，这一点非常重要，无法过分强调。这个安全解决方案将协作作为一个关键特性，因为它是TheHive操作方式的核心价值之一。通过为事件响应者提供共享工作空间，协作得以实现，这样他们就可以一起解决面临的安全事件。这个设置确保了协作能够实时发生，为IR人员提供了分享见解、知识和最佳实践的方式，随时应需而生。'
- en: '**Playbook automation**: Cybersecurity analysts can create and execute automated
    playbooks in TheHive. **Playbooks** are predefined workflows for common incident
    response scenarios. If you think of a flow chart that you might have studied or
    created when you were in school, a workflow is pretty much the same thing. It’s
    a visual flow of the step-by-step corrective actions needed to respond to a particular
    security event. Playbooks are these same workflows set up in advance for the sake
    of universal response and are often automated for the sake of creating a streamlined
    approach to any repetitive tasks, thereby ensuring a consistent and effective
    response to security incidents. It can also save considerable time on human interaction
    while avoiding human error.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**剧本自动化**：网络安全分析师可以在TheHive中创建和执行自动化的剧本。**剧本**是针对常见事件响应场景的预定义工作流。如果你想象一下你可能在学校时学过或创建过的流程图，工作流大致是同样的东西。它是一步步的纠正行动的可视化流程，用于应对特定的安全事件。剧本就是这些工作流的预先设置，目的是为统一响应服务，通常会自动化，以便为任何重复性的任务创造一种流畅的处理方式，从而确保对安全事件的一致且有效的响应。它还可以节省大量的人力互动时间，并避免人为错误。'
- en: '**Integrations**: TheHive offers integrations with a very wide range of security
    tools and platforms, creating seamless data sharing and orchestration of incident
    response activities. Some of these integrations include Cortex, MISP Active Directory:'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成**：TheHive提供与各种安全工具和平台的集成，实现无缝的数据共享和事件响应活动的编排。这些集成包括Cortex、MISP、Active
    Directory：'
- en: '**Lightweight Directory Access Protocol** (**LDAP**), **Active Directory Federation
    Services** (**ADFS**), email services, other reporting, and metrics platforms,
    SIEM and SOAR platforms, threat intelligence feeds, and other collaboration and
    communication tools. The integrations promote the enhanced interoperability of
    TheHive with other security solutions.'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**轻量级目录访问协议**（**LDAP**）、**Active Directory 联邦服务**（**ADFS**）、电子邮件服务、其他报告和指标平台、SIEM和SOAR平台、威胁情报源，以及其他协作和沟通工具。这些集成促进了TheHive与其他安全解决方案之间的互操作性增强。'
- en: '**Customization**: TheHive users have the ability to customize their experience
    by creating personalized templates, playbooks, and dashboards tailored to their
    organization’s specific IR needs.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义**：TheHive用户可以通过创建个性化的模板、剧本和仪表板，定制符合其组织特定IR需求的体验。'
- en: '**Scalability**: As you likely already know, scalability refers to the capability
    of a system, network, or process to handle a growing amount of work, sometimes
    quickly and unexpectedly, or at least have the potential to be quickly enlarged
    to handle such organizational growth. It is typically only used when talking within
    the context of software and technology. The word scalability itself is often used
    in reference to a rapid need to adapt to increased demands on resources without
    compromising the performance, reliability, or functionality of the product. Scalability
    is considered a capability of TheHive.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性**：正如你可能已经知道的，可扩展性指的是一个系统、网络或流程处理日益增长的工作量的能力，有时这种增长是迅速且出乎意料的，或者至少具有快速扩展以应对组织增长的潜力。它通常只在讨论软件和技术的上下文中使用。可扩展性这个词本身通常用于指快速适应资源需求增加的需要，而不妥协产品的性能、可靠性或功能。可扩展性被认为是TheHive的一个能力。'
- en: '**Historical data retention**: A necessary feature for any security-oriented
    application is to preserve the history of what happened. We could spend all day
    talking about why this is to include lessons learned, trend analysis, clueing
    in future analysts to potential resolutions, forensic investigations, government
    regulations, having proof if needed in a legal court case, or simply having knowledge
    available for continuous process improvement. TheHive preserves historical incident
    data and provides a repository of past security incidents along with their resolutions.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**历史数据保留**：任何安全导向的应用程序都必须具备的一个功能是保存事件发生的历史。我们可以整天讨论为什么这是必要的，包括经验教训、趋势分析、为未来的分析师提供潜在的解决方案线索、法医调查、政府法规、在法律诉讼中作为证明，或者仅仅是为持续的流程改进提供知识。TheHive保存了历史事件数据，并提供了一个包含过去安全事件及其解决方案的存储库。'
- en: 'When you’re ready to access TheHive, open up another browser tab and point
    the URL to [http://127.0.0.1:9000](http://127.0.0.1:9000), where you will be presented
    with the login screen. Luckily for you, a default administrator account is already
    created with TheHive, as seen in *Figure 8**.17*. Your initial login will be to
    that account. Type **admin** for your username and **secret** for the password.
    Then click the **Let me in** button to formally gain access:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当你准备好访问 TheHive 时，打开另一个浏览器标签页，将网址指向 [http://127.0.0.1:9000](http://127.0.0.1:9000)，你将看到登录界面。幸运的是，TheHive
    已经为你创建了一个默认的管理员账户，正如 *图 8.17* 所示。你初次登录时将使用该账户。请输入 **admin** 作为用户名，**secret** 作为密码。然后点击
    **Let me in** 按钮正式登录：
- en: '![Figure 8.17 – TheHive default login screen](image/B21223_08_17.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.17 – TheHive 默认登录界面](image/B21223_08_17.jpg)'
- en: Figure 8.17 – TheHive default login screen
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.17 – TheHive 默认登录界面
- en: After you log in for the first time, you might notice the absence of case management
    and the ability to create cases that we previously mentioned. That’s because admin
    roles are to manage the organizations and users, not the cases themselves. Users
    will manage the cases. So, the first thing you’ll want to do is to create a user
    with the analyst role assigned to them so that you can create and manage cases
    with that user! However, in order to create a user with the analyst role, we first
    need to have an organization that has that role available. The default admin organization
    will not be adequate for creating any users who are not admin.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在你首次登录后，你可能会注意到没有我们之前提到的案例管理和创建案例的功能。这是因为管理员角色用于管理组织和用户，而不是管理案例本身。用户将负责管理案例。因此，你首先需要做的事情是创建一个分配了分析员角色的用户，这样你就可以用这个用户来创建和管理案例了！然而，为了创建一个拥有分析员角色的用户，我们首先需要有一个可以提供该角色的组织。默认的管理员组织不足以创建任何非管理员用户。
- en: 'Since we are setting up TheHive for the very first time, there will not already
    be an organization in place with the correct options. So, let’s create one. In
    fact, let’s create the exact same organization we created in Cortex! Select the
    **Organisations** field from the left column of the default view, as highlighted
    in *Figure 8**.18*, and then select the plus icon on the far left of the top ribbon:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在首次设置 TheHive，系统中不会已经有符合要求的组织选项。所以，我们需要创建一个。事实上，我们将创建一个与在 Cortex 中创建的完全相同的组织！在默认视图的左侧列中，选择
    **Organisations** 字段，如 *图 8.18* 所示，然后选择顶部功能区最左侧的加号图标：
- en: '![Figure 8.18 – TheHive – create an organization](image/B21223_08_18.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.18 – TheHive – 创建组织](image/B21223_08_18.jpg)'
- en: Figure 8.18 – TheHive – create an organization
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.18 – TheHive – 创建组织
- en: 'The main screen will be grayed out and you will get a popup on the right for
    you to fill out the details of the organization you wish to create:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 主界面将变灰，你将看到右侧弹出一个窗口，要求你填写要创建的组织的详细信息：
- en: '![Figure 8.19 – TheHive main screen grays out when we create an organization](image/B21223_08_19.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.19 – 创建组织时，TheHive 主界面变灰](image/B21223_08_19.jpg)'
- en: Figure 8.19 – TheHive main screen grays out when we create an organization
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.19 – 创建组织时，TheHive 主界面变灰
- en: 'Go ahead and fill in all of the same details from the organization we created
    in Cortex for TheHive organization creation. For now, leave **Tasks sharing rule**
    and **Observables sharing rule** set to **manual**. Setting the autoshare for
    tasks is meant for teams who are working together on a project. We’re just going
    to create one user for this organization. However, if we were to assign an entire
    team to this organization, we might consider setting **Tasks sharing rule** to
    **autoshare** so that all members of the team could be equally informed and involved
    in the resolution of the task. **Observables sharing rule** is for sharing observable
    data such as **Indicators of Compromise** (**IoCs**) or information gleaned from
    threat intelligence feeds. Setting this to **autoshare** helps to produce timely
    dissemination of critical information to the appropriate stakeholders. Select
    the **Confirm** button at the bottom right of your screen to finalize the creation
    of the organization:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 继续填写我们在Cortex中为TheHive组织创建时所使用的所有相同详细信息。目前，将**任务共享规则**和**可观察数据共享规则**设置为**手动**。任务的自动共享是为那些在项目中共同合作的团队准备的。我们现在只会为这个组织创建一个用户。然而，如果我们要为整个团队分配该组织，可能会考虑将**任务共享规则**设置为**自动共享**，这样团队成员就可以平等地了解和参与任务的解决。**可观察数据共享规则**用于共享可观察数据，如**妥协指标**（**IoCs**）或从威胁情报源中获取的信息。将其设置为**自动共享**有助于及时将关键信息传播给相关利益方。点击屏幕右下角的**确认**按钮，完成组织创建：
- en: '![Figure 8.20 – TheHive – create an organization screen](image/B21223_08_20.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图8.20 – TheHive – 创建组织页面](image/B21223_08_20.jpg)'
- en: Figure 8.20 – TheHive – create an organization screen
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.20 – TheHive – 创建组织页面
- en: 'The pop-up window will go away. However, since it was a pop-up window instead
    of another page, it’s possible you may need to refresh the page for your new organization
    to show up in the default listing. We recommend waiting 10 to 20 seconds first.
    Give the application time to do its background work:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 弹出窗口将消失。然而，由于它是一个弹出窗口而不是另一个页面，因此您可能需要刷新页面才能让新的组织出现在默认列表中。我们建议您先等待10到20秒。给应用程序一些时间进行后台操作：
- en: '![Figure 8.21 – TheHive default organization screen with our newly added organization](image/B21223_08_21.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图8.21 – TheHive 默认组织页面，显示我们新添加的组织](image/B21223_08_21.jpg)'
- en: Figure 8.21 – TheHive default organization screen with our newly added organization
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.21 – TheHive 默认组织页面，显示我们新添加的组织
- en: 'To create your first user, which will be a non-administrative user, you have
    two options. First, you can select the name of the new organization you just created
    and then select **Add User** from the main windowpane, as you see in *Figure 8**.22*,
    and then proceed to the third step in the instructions ahead:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建您的第一个用户，该用户将是非管理员用户，您有两个选择。首先，您可以选择刚创建的新组织的名称，然后从主窗口选择**添加用户**，如*图8.22*所示，接着继续按照接下来的指示完成第三步：
- en: '![Figure 8.22 – TheHive organization details screen with the option to add
    a new user](image/B21223_08_22.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图8.22 – TheHive 组织详情页面，具有添加新用户的选项](image/B21223_08_22.jpg)'
- en: Figure 8.22 – TheHive organization details screen with the option to add a new
    user
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.22 – TheHive 组织详情页面，具有添加新用户的选项
- en: 'Alternatively, you can proceed with the following steps, which will only be
    effective if the organization has been created first:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以按以下步骤进行操作，这些步骤只有在组织已经创建的情况下有效：
- en: Select and click the icon showing three human silhouettes in the left column
    of the default page after logging in. We will call that the **users** icon. It’s
    highlighted in *Figure 8**.23* if you need help identifying the icon.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在登录后的默认页面左列中选择并点击显示三个小人图标的按钮。我们将其称为**用户**图标。如果您需要帮助识别图标，可以参考*图8.23*中的高亮显示。
- en: '![Figure 8.23 – TheHive selecting the Users icon in the left column](image/B21223_08_23.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图8.23 – TheHive 选择左列中的用户图标](image/B21223_08_23.jpg)'
- en: Figure 8.23 – TheHive selecting the Users icon in the left column
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.23 – TheHive 选择左列中的用户图标
- en: 'Then, after you click the human silhouettes, select, and click the large plus
    symbol near the top left of the **Users** page. This is also reflected in *Figure
    8**.24*. It’s very important that you do this after you first select the **users**
    icon. Otherwise, the plus will not add a new user but instead a new organization!:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在点击人形图标后，选择并点击**用户**页面左上角附近的大加号符号。这一点也在*图8.24*中有所体现。非常重要的一点是，您必须在首次选择**用户**图标后再执行此操作。否则，加号将不会添加新用户，而是添加新组织！
- en: '![Figure 8.24 – TheHive selecting the plus on the Users screen to create a
    new user](image/B21223_08_24.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.24 – TheHive 在用户界面选择加号以创建新用户](image/B21223_08_24.jpg)'
- en: Figure 8.24 – TheHive selecting the plus on the Users screen to create a new
    user
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.24 – TheHive 在用户界面选择加号以创建新用户
- en: 'Once you do this, the page will be grayed out and a pop-up window will appear
    on the right portion of the page asking you to input details for the new user:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成这一步后，页面会变灰，右侧会弹出一个窗口，要求你输入新用户的详细信息：
- en: '![Figure 8.25 – TheHive Adding a User popup with grayed-out main window](image/B21223_08_25.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.25 – TheHive 添加用户的弹出窗口，主窗口变灰](image/B21223_08_25.jpg)'
- en: Figure 8.25 – TheHive Adding a User popup with grayed-out main window
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.25 – TheHive 添加用户的弹出窗口，主窗口变灰
- en: 'Under **Type**, the value should default to **Normal** and you should leave
    it that way. That field is for setting up service accounts, which we discussed
    briefly in [*Chapter 4*](B21223_04.xhtml#_idTextAnchor076). Refer back to that
    chapter if you’d like a refresher on service accounts:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**类型**字段下，值应默认为**普通**，你应该保持默认设置。这个字段用于设置服务账户，我们在[*第4章*](B21223_04.xhtml#_idTextAnchor076)中简要讨论过。若你需要重新回顾服务账户，参考那一章：
- en: '![Figure 8.26 – TheHive setting new user type to Normal](image/B21223_08_26.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.26 – TheHive 设置新用户类型为普通](image/B21223_08_26.jpg)'
- en: Figure 8.26 – TheHive setting new user type to Normal
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.26 – TheHive 设置新用户类型为普通
- en: 'Under **Login**, you will not enter a username but instead a classification
    of login. This allows admin users to create groups of logins where they can pre-assign
    roles. For simplicity’s sake, we recommend typing **thehive@thehive.local**, but
    you can make the first part whatever you want, such as **test@thehive.local**,
    so long as whatever you begin with, you append **@thehive.local** to the end of
    it. During login, you will only type the name you created without the **@thehive.local**.
    Then, under the **Name** field is where you will enter the desired username for
    the value:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**登录名**字段下，你不需要输入用户名，而是输入登录分类。这允许管理员用户创建一组登录名，在其中预先分配角色。为了简便起见，我们建议输入**thehive@thehive.local**，但你也可以将前部分设置为你想要的任何内容，比如**test@thehive.local**，只要你开始时的内容加上**@thehive.local**即可。登录时，你只需要输入你创建的名称，而不需要输入**@thehive.local**。然后，在**姓名**字段中，你将输入所需的用户名：
- en: '![Figure 8.27 – TheHive setting new user Login and Name values](image/B21223_08_27.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.27 – TheHive 设置新用户的登录名和姓名值](image/B21223_08_27.jpg)'
- en: Figure 8.27 – TheHive setting new user Login and Name values
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.27 – TheHive 设置新用户的登录名和姓名值
- en: 'Under the **Organizations** field, you will determine the level of this new
    user you are creating. We already know that we don’t want the user to be an admin.
    So, select the drop-down area under **Organizations** or **Profile** (it will
    be one or the other depending on which of the two ways you accessed this feature)
    and choose **analyst**. If you arrived here by adding the user from the profile
    of the organization you created, then all of the analyst roles will populate on
    the screen for you. If every field has been addressed, then a **Confirm** button
    will appear at the bottom of the page. Select that button and you will have your
    new admin user:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**组织**字段下，你将决定正在创建的新用户的权限级别。我们已经知道，我们不希望用户是管理员。所以，选择**组织**或**个人资料**下的下拉区域（取决于你通过哪种方式进入该功能），然后选择**分析员**。如果你是通过在你创建的组织的个人资料中添加用户来进入此界面的，那么所有分析员角色都会自动显示在屏幕上。如果每个字段都填写完毕，页面底部会出现一个**确认**按钮。点击该按钮，你就可以创建你的新管理员用户：
- en: '![Figure 8.28 – TheHive completed new user form](image/B21223_08_28.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.28 – TheHive 完成的新用户表单](image/B21223_08_28.jpg)'
- en: Figure 8.28 – TheHive completed new user form
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.28 – TheHive 完成的新用户表单
- en: 'The grayed-out area will go away and your new user will appear on the list.
    You still have one more very important step before you log in as this user. Similar
    to setting up Cortex users, you need to edit the user you just created in order
    to establish a password, which was not available at the time you created the user.
    However, the manner of doing so is a little bit different than Cortex. From the
    default user screen, you need to hover your mouse over the name of the user you
    just created. When you do, a **Preview** field will appear near the middle of
    the row, next to the value under the **Organizations** column. Select that **Preview**
    field as highlighted in *Figure 8**.29*:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 被灰色显示的区域将消失，你的新用户将出现在列表中。在以该用户登录之前，你还有一个非常重要的步骤。类似于设置 Cortex 用户，你需要编辑刚刚创建的用户以设置密码，因为在创建用户时并未提供此选项。然而，操作方式与
    Cortex 略有不同。从默认的用户界面中，你需要将鼠标悬停在刚创建的用户的名字上。当你这样做时，**预览**字段会出现在该行中间附近，紧挨着**组织**列下的值。选择该**预览**字段，如*图
    8.29*所示：
- en: '![Figure 8.29 – TheHive new user Preview button used to set a password](image/B21223_08_29.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.29 – TheHive 新用户预览按钮用于设置密码](image/B21223_08_29.jpg)'
- en: Figure 8.29 – TheHive new user Preview button used to set a password
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.29 – TheHive 新用户预览按钮用于设置密码
- en: 'Scroll down until you see the **Password** section. You’ll have **Reset the
    password** and **Edit password** options. You can play with all of this stuff
    later, but for now, select **Reset the password** or **Set a new password** if
    you’re a brand new user, and then type the desired password in for the user you
    are creating. When you’ve finished, click the little blue **Confirm** button that
    appears at the lower right of your screen:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动，直到看到**密码**部分。你将看到**重置密码**和**编辑密码**的选项。你可以稍后再调整这些设置，但现在，选择**重置密码**或如果你是新用户，则选择**设置新密码**，然后为你正在创建的用户输入所需的密码。完成后，点击屏幕右下角出现的小蓝色**确认**按钮：
- en: '![Figure 8.30 – TheHive Set a new password and Reset the password](image/B21223_08_30.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.30 – TheHive 设置新密码并重置密码](image/B21223_08_30.jpg)'
- en: Figure 8.30 – TheHive Set a new password and Reset the password
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.30 – TheHive 设置新密码并重置密码
- en: 'Once you’ve finished, you’ll see the same **Confirm** button appear at the
    bottom as you saw when you first created the user. Click that button and you should
    be set:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，你将在底部看到与第一次创建用户时相同的**确认**按钮。点击该按钮，你就应该设置好了：
- en: '![Figure 8.31 – Confirm button](image/B21223_08_31.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.31 – 确认按钮](image/B21223_08_31.jpg)'
- en: Figure 8.31 – Confirm button
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.31 – 确认按钮
- en: You may have a circle appear in the far-left column, allowing you to quickly
    switch between the admin account and the analyst account you just created. If
    not, select the down arrow at the top right followed by **Logout** from the dropdown,
    and then enter the credentials for the new account you just created.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能会在最左侧的列中看到一个圆圈，允许你在管理员账户和你刚创建的分析员账户之间快速切换。如果没有，请选择右上角的下拉箭头，然后从下拉菜单中选择**注销**，接着输入刚创建的帐户的凭据。
- en: Select **Let me in** to log back in as the mortal user. Now the top ribbon should
    have a field to search by case ID, as well as an option to create a new case.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**让我进入**以重新登录为普通用户。现在顶部的功能区应该会有一个按案件 ID 搜索的字段，以及创建新案件的选项。
- en: Congratulations! Installing and setting up Cortex and TheHive can be a tedious
    and confusing set of tasks. If you made it this far, give yourself a pat on the
    back. We recommend taking as much time as you like to play around with these utilities,
    read the developer documentation if you like, and explore as much as possible.
    If you break something, that’s fantastic! That’s how we learn. That’s how we all
    get better.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！安装和设置 Cortex 与 TheHive 可能是一项繁琐且令人困惑的任务。如果你已经做到这一点，给自己一个掌声。我们建议你花足够的时间玩转这些工具，阅读开发者文档，并尽可能多地探索。如果你弄坏了什么，那太棒了！这就是我们学习的方式。这也是我们不断进步的方式。
- en: With Cortex and TheHive being the core of incident response as far as the Kali
    Purple suite of tools is concerned, you have a very basic framework to build upon.
    Let’s take some real estate to make you aware of some of the threat intelligence
    applications that you can use to support the mini IR SOC you’ve begun to assemble.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Cortex 和 TheHive 是 Kali Purple 工具集中的核心组件，你现在拥有一个非常基础的框架来构建。接下来我们将花一些时间让你了解一些威胁情报应用程序，你可以使用它们来支持你已经开始搭建的小型
    IR SOC。
- en: Challenge!
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战！
- en: There are countless information-sharing platforms out there. You’ve already
    been briefed a few times in this book about the **MISP**, or the **Malware Information
    Sharing Platform**. That one is an open source project that was selflessly created
    for the purpose of helping all of us to work together in stopping the malicious
    activities of bad actors. Something that sets the MISP apart from many other information-sharing
    feeds is **threat information exchange formats**. The MISP platform supports standardized
    threat information exchange formats, including two of the most well known, which
    are **Structured Threat Information eXpression** (**STIX**) and **Trusted Automated
    eXchange of Indicator Information** (**TAXII**). That gives MISP a high level
    of interoperability and compatibility with any other security platform or tool
    that chooses to adopt these well-known standards.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 市面上有无数的信息共享平台。你已经在本书中几次简要了解过**MISP**，即**恶意软件信息共享平台**。这是一个开源项目，旨在无私地帮助我们共同努力，阻止恶意行为者的恶意活动。MISP
    与许多其他信息共享平台的不同之处在于其**威胁信息交换格式**。MISP 平台支持标准化的威胁信息交换格式，包括两个最著名的格式，即**结构化威胁信息表达**（**STIX**）和**受信自动化指标信息交换**（**TAXII**）。这使得
    MISP 在与任何选择采用这些知名标准的安全平台或工具的互操作性和兼容性方面具有很高的水平。
- en: 'Other key features of the MISP include the following:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: MISP 的其他关键特性包括以下内容：
- en: Threat intelligence sharing
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁情报共享
- en: IOC management
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IOC 管理
- en: Threat intelligence feeds
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁情报源
- en: Automated indicator correlation
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化指标关联
- en: Collaborative analysis
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协作分析
- en: Visualization and reporting
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化与报告
- en: Integration framework
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成框架
- en: Your challenge is to go out into the wild and find as many different applicable
    platform feeds as you can, so long as they’re applicable to cybersecurity, study
    them, and select at least one – but feel free to choose as many as you like –
    to integrate with the mini IR SOC that you’ve started in this chapter. Thoroughly
    document your journey with an abundance of words and screenshots, and then find
    an online venue – perhaps social media, perhaps not – and present your work in
    a manner that showcases your skills and will also help others learn and grow.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 你的挑战是进入野外，寻找尽可能多的适用平台源，只要它们与网络安全相关，学习它们，并选择至少一个——但你也可以选择多个——与本章中你已开始构建的迷你 IR
    SOC 集成。详细记录你的整个过程，使用大量的文字和截图，然后找到一个在线平台——可能是社交媒体，也可能不是——以一种展示你技能并帮助他人学习和成长的方式展示你的成果。
- en: Summary
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you have taken the lessons from previous chapters and learned
    how they apply when data you’ve previously learned how to collect, analyze, and
    store reveals there may be a possible true positive incident occurring. That is
    to say, you’ve begun to gain a feel for the part of cybersecurity defense known
    as incident response.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你已经学习了如何将前几章学到的知识应用于当你之前学会收集、分析和存储的数据揭示可能发生的真实正向事件时。这就是说，你已经开始感受到网络安全防御中的事件响应部分。
- en: In the course of responding to incidents, it helps to have tools at your disposal,
    especially when automation is included, and with that, you were introduced to
    a security orchestration automation and response platform known as Cortex. You
    learned about an incident response case management platform known as TheHive,
    which feeds its data into Cortex for processing and gets it returned with many
    potential automation activities performed on the data.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在响应事件的过程中，拥有一些工具帮助你尤为重要，尤其是当这些工具包括自动化时。在此过程中，你了解了一个名为 Cortex 的安全编排自动化响应平台。你还了解了一个名为
    TheHive 的事件响应案例管理平台，它将数据输入到 Cortex 进行处理，并通过自动化对数据进行多项潜在活动。
- en: You also got a glimpse of the MISP. This open source project was selflessly
    created for the purpose of helping all of us to work together to stop the malicious
    activities of bad actors.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 你还看到了 MISP。这一开源项目的初衷是无私地帮助我们所有人共同努力，制止恶意行为者的恶意活动。
- en: In the next chapter, we'll do a little bit of a deeper dig into malware analysis
    than we have thus far, and even learn a little bit about exploit development!
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将对恶意软件分析进行更深入的探讨，比我们目前所做的更进一步，甚至还将了解一些关于漏洞开发的知识！
- en: Questions
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Cortex and TheHive were created by the same company, which is called…
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Cortex 和 TheHive 是由同一家公司创建的，这家公司叫做…
- en: BumbleBee
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: BumbleBee
- en: SweatBee
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SweatBee
- en: StrangeBee
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: StrangeBee
- en: LeaveMeBee
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: LeaveMeBee
- en: A pre-defined series of steps for orchestrated patterns of activity that are
    often repeatable is what?
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一系列预定义步骤，用于编排活动模式，通常是可重复的，这是什么？
- en: IR circuit
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IR 电路
- en: Workflow
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工作流
- en: Container
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 容器
- en: Code library or **.****dll** file
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码库或 **.****dll** 文件
- en: Something that defines the rules for how two different software systems will
    communicate with each other is known as what?
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义两个不同软件系统如何相互通信的规则的东西被称为什么？
- en: '**Application Programming** **Interface** (**API**)'
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应用程序编程** **接口** (**API**)'
- en: '**International Cybersecurity Communication** **Law** (**ICCL**)'
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**国际网络安全通信** **法律** (**ICCL**)'
- en: A constitutional monarchy
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 君主立宪制
- en: '**International Standards of Technological Security** **Controls** (**ISTSC**)'
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**国际技术安全** **控制** (**ISTSC**)'
- en: What is multi-tenancy?
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是多租户？
- en: When two or more people work on the same computer
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当两人或更多人在同一台计算机上工作时
- en: An application that can distinguish between and manage more than one customer
    or organization
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个能够区分并管理多个客户或组织的应用程序
- en: Similar to multi-tasking except performed in secret
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类似于多任务处理，但在秘密中执行
- en: An octopus or other member of the animal kingdom with more than 2 arms or legs
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一只章鱼或其他具有超过 2 条胳膊或腿的动物
- en: The MISP facilitates the sharing of information about what type of technology?
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MISP 促进了关于什么类型技术的信息共享？
- en: All known threats
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有已知威胁
- en: Database
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库
- en: Digital
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数字化
- en: Malware
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 恶意软件
- en: Further reading
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '**Cortex** **Documentation**: [https://docs.strangebee.com/cortex/](https://docs.strangebee.com/cortex/)'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cortex** **文档**: [https://docs.strangebee.com/cortex/](https://docs.strangebee.com/cortex/)'
- en: '**REST API resource number** **1**: [restapitutorial.com](http://restapitutorial.com)'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**REST API 资源编号** **1**: [restapitutorial.com](http://restapitutorial.com)'
- en: '**REST API resource number** **2**: [restcookbook.com](http://restcookbook.com)'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**REST API 资源编号** **2**: [restcookbook.com](http://restcookbook.com)'
- en: '**MISP project** **website**: [https://www.misp-project.org/](https://www.misp-project.org/)'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MISP 项目** **网站**: [https://www.misp-project.org/](https://www.misp-project.org/)'
- en: '**Learning Linux CHMOD** **commands**: [https://linuxhandbook.com/chmod-command/](https://linuxhandbook.com/chmod-command/)'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学习 Linux CHMOD** **命令**: [https://linuxhandbook.com/chmod-command/](https://linuxhandbook.com/chmod-command/)'
- en: '**Free Azure Synapse Analytics video** **course**: [https://www.youtube.com/watch?v=lLrjaVdBuM0](https://www.youtube.com/watch?v=lLrjaVdBuM0)'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**免费 Azure Synapse Analytics 视频** **课程**: [https://www.youtube.com/watch?v=lLrjaVdBuM0](https://www.youtube.com/watch?v=lLrjaVdBuM0)'
- en: '**Synapse Analytics with TheHive GitHub** **page**: [https://github.com/TheHive-Project/Synapse](https://github.com/TheHive-Project/Synapse)'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Synapse Analytics 与 TheHive GitHub** **页面**: [https://github.com/TheHive-Project/Synapse](https://github.com/TheHive-Project/Synapse)'
- en: '**Microsoft Synapse free** **trial**: [https://azure.microsoft.com/en-us/free/synapse-analytics/](https://azure.microsoft.com/en-us/free/synapse-analytics/)'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Microsoft Synapse 免费** **试用**: [https://azure.microsoft.com/en-us/free/synapse-analytics/](https://azure.microsoft.com/en-us/free/synapse-analytics/)'
