- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '14'
- en: Network Discovery Tools
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络发现工具
- en: In this chapter, I’d like to go over some common tools that aid in the network
    discovery and network information gathering and reconnaissance processes and,
    overall, aid in network forensic analysis. Specific network forensic analysis
    tools such as Xplico and NetworkMiner will be covered in [*Chapter 15*](B19441_15.xhtml#_idTextAnchor251),
    *Packet Capture Analysis with Xplico*, and [*Chapter 16*](B19441_16.xhtml#_idTextAnchor262),
    *Network Forensic Analysis* *Tools*, respectively.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将介绍一些常见工具，这些工具有助于网络发现、网络信息收集与侦察过程，并且总体上有助于网络取证分析。特定的网络取证分析工具，如Xplico和NetworkMiner，将分别在[*第15章*](B19441_15.xhtml#_idTextAnchor251)《使用Xplico进行数据包捕获分析》和[*第16章*](B19441_16.xhtml#_idTextAnchor262)《网络取证分析工具》中进行讲解。
- en: In this chapter, we will first perform network host discovery by detailing specifics
    of the hosts themselves, such as **operating systems** (**OSes**) and open ports,
    and then use an online tool to discover external and publicly identifiable hosts.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先进行网络主机发现，详细介绍主机本身的具体信息，如**操作系统**（**OS**）和开放端口，然后使用一个在线工具来发现外部和公开可识别的主机。
- en: 'In this chapter, we will learn about the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下内容：
- en: Using netdiscover in Kali Linux to identify devices on a network
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Kali Linux中使用netdiscover识别网络上的设备
- en: Use **Network Mapper** (**Nmap**) in Kali Linux to identify devices on a network
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Kali Linux中使用**网络映射器**（**Nmap**）识别网络上的设备
- en: Use Nmap to fingerprint host details (ports, OSes, etc.)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nmap对主机详细信息（端口、操作系统等）进行指纹识别
- en: Use Shodan.io to find external IoT devices, including firewalls, CCTV systems,
    and servers
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Shodan.io查找外部物联网设备，包括防火墙、监控摄像头系统和服务器
- en: By the end of this chapter, you will be able to use these tools to assist in
    DFIR investigations that require you to collect information about locally and
    remotely connected devices, such as IP addresses, device types, OS details, open
    ports, and more.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将能够使用这些工具帮助进行DFIR调查，收集有关本地和远程连接设备的信息，如IP地址、设备类型、操作系统详细信息、开放端口等。
- en: Using netdiscover in Kali Linux to identify devices on a network
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Kali Linux中使用netdiscover识别网络上的设备
- en: 'We’ll start off our network host discovery by first using a very simple tool
    known as **netdiscover**. The netdiscover tool comes preinstalled in Kali Linux;
    however, you can install it on almost any version of Linux using the following
    command:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从使用一个非常简单的工具——**netdiscover**开始网络主机发现。netdiscover工具已在Kali Linux中预装；不过，几乎任何版本的Linux都可以通过以下命令安装它：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: netdiscover, as the name suggests, is used to discover online hosts on a wired
    or wireless network by broadcasting **Address Resolution Protocol** (**ARP**)
    requests. What makes netdiscover easy to use is that it allows users to automatically
    scan an entire range or subnet of IP addresses on a network to detect online hosts.
    Another very useful feature of netdiscover is that it displays the **Media Access
    Control** (**MAC**) address along with the vendor of the device or **Network Interface
    Card** (**NIC**), which can make host discovery much simpler when trying to differentiate
    between end user, server, and networking devices.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: netdiscover，顾名思义，用于通过广播**地址解析协议**（**ARP**）请求，在有线或无线网络上发现在线主机。netdiscover易于使用的一大特点是它允许用户自动扫描整个IP地址范围或子网，从而检测在线主机。netdiscover的另一个非常有用的功能是它可以显示**媒体访问控制**（**MAC**）地址以及设备或**网络接口卡**（**NIC**）的厂商信息，这在区分终端用户、服务器和网络设备时，能使主机发现变得更加简单。
- en: Before we start using netdiscover, we should take note of the network interfaces
    on our scanning device. This also tells us what our IP, subnet mask, and network
    range are.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用netdiscover之前，我们应该注意扫描设备上的网络接口信息。这还可以告诉我们IP地址、子网掩码和网络范围。
- en: 'To do so, type the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，输入以下内容：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the following output in *Figure 14**.1*, we can see that there are two interfaces,
    namely the Ethernet (**eth0**) and loopback (**lo**) interfaces:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图14.1*中的以下输出中，我们可以看到有两个接口，分别是以太网（**eth0**）和回环（**lo**）接口：
- en: '![Figure 14.1 – ifconfig command output](image/Figure_14.01_B19441.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图14.1 – ifconfig命令输出](image/Figure_14.01_B19441.jpg)'
- en: Figure 14.1 – ifconfig command output
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.1 – ifconfig命令输出
- en: In the **eth0** interface details, we can see that my IP address is listed as
    **10.10.170.105**, with a subnet mask of **255.255.0.0**. We will use this interface
    with the **netdiscover** command.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在**eth0**接口的详细信息中，我们可以看到我的IP地址是**10.10.170.105**，子网掩码是**255.255.0.0**。我们将使用这个接口与**netdiscover**命令。
- en: 'Now that we know which interface and IP range we will use, we can proceed to
    use netdiscover to identify network hosts:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了将使用的接口和IP范围，我们可以继续使用netdiscover来识别网络主机：
- en: 'We will first start netdiscover and use the help option to view all available
    options and switches in netdiscover. To do so, type the following:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将首先启动netdiscover，并使用帮助选项查看netdiscover中所有可用的选项和开关。为此，请键入以下命令：
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To use netdiscover to automatically scan for devices on our network, we will
    use the **–r** option to specify the subnet or range of IP addresses.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用netdiscover自动扫描网络中的设备，我们将使用**–r**选项来指定子网或IP地址范围。
- en: '![Figure 14.2 – netdiscover options](image/Figure_14.02_B19441.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.2 – netdiscover 选项](image/Figure_14.02_B19441.jpg)'
- en: Figure 14.2 – netdiscover options
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.2 – netdiscover 选项
- en: 'I’ll now scan my entire **10.10.0.0** network range using the following command:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我将使用以下命令扫描我的整个**10.10.0.0**网络范围：
- en: '[PRE3]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Please ensure that you are using your own network range, as yours may be different
    from mine.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保使用的是你自己的网络范围，因为你的范围可能与我的不同。
- en: 'Now, press *Enter*. After pressing *Enter*, netdiscover will run. Allow it
    a minute to complete and compile a list of IPs, MAC addresses, and vendor/hostnames,
    as shown in the following screenshot:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，按*Enter*键。按下*Enter*后，netdiscover将开始运行。请等待片刻，直到它完成并编制出包含IP、MAC地址和厂商/主机名的列表，如下图所示：
- en: Note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For privacy purposes, I have blocked parts of the MAC addresses.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护隐私，我已屏蔽了部分MAC地址。
- en: '![Figure 14.3 – netdiscover output](image/Figure_14.03_B19441.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.3 – netdiscover 输出](image/Figure_14.03_B19441.jpg)'
- en: Figure 14.3 – netdiscover output
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.3 – netdiscover 输出
- en: In the preceding output, we can see that netdiscover has captured **468** ARP
    packets and detected **151** live hosts, listed with their IPs, MAC addresses,
    and vendor/hostnames.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在前述输出中，我们可以看到netdiscover已捕获**468**个ARP数据包并检测到**151**个活动主机，列出了它们的IP、MAC地址以及厂商/主机名。
- en: Let’s now look at using Nmap to also perform host discovery.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一下如何使用Nmap来执行主机发现。
- en: Using Nmap to find additional hosts and devices on a network
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Nmap查找网络中其他主机和设备
- en: Created by Gordon Lyon aka *Fyodor*, **Nmap** is one of the most common tools
    for network scanning and enumeration during vulnerability assessments and penetration
    tests. It is also quite useful for DFIR tasks and investigations when investigating
    network communications that require disclosure of host details on a network.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 由戈登·里昂（Gordon Lyon），也就是*Fyodor*，创建的**Nmap**是进行漏洞评估和渗透测试时最常用的网络扫描和枚举工具之一。它在数字取证和响应（DFIR）任务中也非常有用，特别是在调查需要披露网络上主机详细信息的网络通信时。
- en: Nmap is also a bit of a celebrity and was used in popular movies such as *The
    Matrix Reloaded*, *The Bourne Ultimatum*, *Die Hard 4*, and *The Girl with the
    Dragon Tattoo*, and also the very popular TV series *Mr. Robot*.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap也是一个名声在外的工具，曾出现在诸如*黑客帝国重装上阵*、*谍影重重*、*惊天危机4*、*龙纹身的女孩*等热门电影中，并且还在非常受欢迎的电视剧《*Mr.
    Robot*》中出现。
- en: Nmap is a **Command-Line Interface** (**CLI**) tool and comes pre-installed
    in Kali Linux. There is also a **Graphical User Interface** (**GUI**) for Windows
    and Mac devices, but I personally think you can access more options and features
    using the CLI.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap是一个**命令行界面**（**CLI**）工具，已预装在Kali Linux中。Windows和Mac设备也有**图形用户界面**（**GUI**），但我个人认为，使用CLI可以访问更多选项和功能。
- en: 'Nmap has many switches and requires prior knowledge of ports, **Transmission
    Control Protocol/Internet Protocol** (**TCP/IP**) protocols, and TCP flags, all
    of which you should read more about before proceeding if you are unfamiliar with
    those topics. Please visit this link for more information on TCP: [https://en.wikipedia.org/wiki/Transmission_Control_Protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol).'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap有许多开关，并且需要了解端口、**传输控制协议/互联网协议**（**TCP/IP**）协议和TCP标志。如果你对这些主题不熟悉，请在继续之前阅读相关资料。有关TCP的更多信息，请访问这个链接：[https://en.wikipedia.org/wiki/Transmission_Control_Protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)。
- en: 'Let’s follow these steps to use Nmap to find additional hosts and devices on
    a network:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照以下步骤使用Nmap查找网络中其他主机和设备：
- en: 'To start nmap and view the available switches and options, we can use the following
    command:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动nmap并查看可用的开关和选项，我们可以使用以下命令：
- en: '[PRE4]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As stated in the preceding output, the general format and usage of nmap is **nmap
    [Scan Type(s)] [Options] {****target specification}**.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述输出所示，nmap的一般格式和用法是**nmap [扫描类型] [选项] {****目标规范}**。
- en: '![Figure 14.4 – A snippet of the nmap help option output](image/Figure_14.04_B19441.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.4 – nmap 帮助选项输出的片段](image/Figure_14.04_B19441.jpg)'
- en: Figure 14.4 – A snippet of the nmap help option output
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.4 – nmap 帮助选项输出的一个片段
- en: To start us off, I’ll try a basic ping scan using the **–sn** option to list
    hosts that can be further scanned, in the same way that netdiscover found online
    hosts on my network in the previous section.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我将尝试使用 **–sn** 选项进行基本的 ping 扫描，以列出可以进一步扫描的主机，就像 netdiscover 在前一节中发现我网络中的在线主机一样。
- en: To perform a basic ping scan, we can type **sudo nmap –sn** followed by the
    network range, which in my case is **10.10.0.0/24**. Yours may be different, so
    please make sure you use your own network range.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行基本的 ping 扫描，我们可以输入 **sudo nmap –sn**，后跟网络范围，在我的情况下是 **10.10.0.0/24**。你的网络范围可能不同，所以请确保使用自己的网络范围。
- en: 'We can also use the **–v** option to list output verbatim as it happens in
    nmap:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以使用 **–v** 选项以原样列出 nmap 中的输出：
- en: '[PRE5]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The following screenshot shows the output of the specific preceding Nmap command.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前述 Nmap 命令的输出。
- en: '![Figure 14.5 – nmap ping scan output](image/Figure_14.05_B19441.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.5 – nmap ping 扫描输出](image/Figure_14.05_B19441.jpg)'
- en: Figure 14.5 – nmap ping scan output
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.5 – nmap ping 扫描输出
- en: If we scroll down through the nmap output, we can see listed hosts that were
    discovered online via our ping scan. Though not as well organized as netdiscover,
    nmap still displays the same results, as shown here.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们向下滚动 nmap 输出，可以看到通过 ping 扫描发现的在线主机列表。尽管没有 netdiscover 那么有条理，nmap 仍然显示了相同的结果，如下所示。
- en: '![Figure 14.6 – nmap output showing discovered live hosts](image/Figure_14.06_B19441.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.6 – nmap 输出显示已发现的存活主机](image/Figure_14.06_B19441.jpg)'
- en: Figure 14.6 – nmap output showing discovered live hosts
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.6 – nmap 输出显示已发现的存活主机
- en: In this section, we learned the basics of Nmap, and we are now capable of scanning
    internal networks using this CLI tool.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们学习了 Nmap 的基础知识，现在我们已经能够使用这个命令行工具扫描内部网络。
- en: Let’s go a bit further with our Nmap scanning now and learn how to identify
    ports and services of discovered devices.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们进一步进行 Nmap 扫描，学习如何识别已发现设备的端口和服务。
- en: Using Nmap to fingerprint host details
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Nmap 获取主机详细信息指纹
- en: Now that we’re familiar with how to view nmap switches and run a basic scan,
    let’s perform host enumeration by discovering running services, ports, and even
    the OSes of discovered hosts, which may be useful artifacts within our DFIR investigation.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经熟悉了如何查看 nmap 开关并运行基本扫描，让我们通过发现运行中的服务、端口，甚至被发现主机的操作系统，来进行主机枚举，这可能是我们 DFIR
    调查中的有用线索。
- en: As shown in the previous section, nmap is fairly simple to use once you are
    aware of the various switches that can be used. Feel free to again run the **sudo
    nmap –h** command to view the available switches and options.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节所示，一旦你熟悉了可以使用的各种开关，nmap 的使用相当简单。可以再次运行 **sudo nmap –h** 命令来查看可用的开关和选项。
- en: 'For our purposes, an **–A** option in nmap can perform the following tasks
    when enumerating a host or an entire network:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，nmap 中的 **–A** 选项在枚举主机或整个网络时可以执行以下任务：
- en: OS detection
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统检测
- en: Service version detection
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务版本检测
- en: Script scanning
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本扫描
- en: Traceroute
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由追踪
- en: The **–A** option can take a while to run on an entire network, so I’ll run
    it against a single host, which was shown as alive when I previously ran the ping
    scan on my network.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**–A** 选项在对整个网络运行时可能需要较长时间，因此我将其仅针对一台主机运行，这台主机在我之前对我的网络进行 ping 扫描时被显示为存活。'
- en: 'To run this service scan as it is called, I’ll run the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行此服务扫描，我将执行以下命令：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The following screenshot shows the output of the **-A** option within Nmap.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了 Nmap 中 **-A** 选项的输出。
- en: '![Figure 14.7 – nmap service scan](image/Figure_14.07_B19441.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.7 – nmap 服务扫描](image/Figure_14.07_B19441.jpg)'
- en: Figure 14.7 – nmap service scan
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.7 – nmap 服务扫描
- en: Scrolling through the service scan output, nmap has also displayed a list of
    open ports and has identified the running service and service versions, as shown
    here.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动浏览服务扫描输出，nmap 还显示了开放端口列表，并识别了正在运行的服务及其版本，如下所示。
- en: '![Figure 14.8 – nmap output displaying open ports and running services](image/Figure_14.08_B19441.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.8 – nmap 输出显示开放端口和正在运行的服务](image/Figure_14.08_B19441.jpg)'
- en: Figure 14.8 – nmap output displaying open ports and running services
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.8 – nmap 输出显示开放端口和正在运行的服务
- en: Scrolling a bit further down through the very same output, nmap displays details
    of the host, such as the host (target) name, domain, and computer name, as shown
    here. For privacy purposes, I’ve blurred some of the output.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续浏览同样的输出时，nmap 显示了主机的详细信息，例如主机（目标）名称、域名和计算机名，如图所示。出于隐私原因，我已经模糊了部分输出。
- en: '![Figure 14.9 – nmap output displaying host information](image/Figure_14.09_B19441.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.9 – nmap 输出显示主机信息](image/Figure_14.09_B19441.jpg)'
- en: Figure 14.9 – nmap output displaying host information
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.9 – nmap 输出显示主机信息
- en: 'Scrolling almost to the very bottom of the nmap output, I can also see the
    host OS details, as shown here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动到 nmap 输出的几乎底部，我还可以看到主机操作系统的详细信息，如图所示：
- en: '![Figure 14.10 – nmap output showing the host OS details](image/Figure_14.10_B19441.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.10 – nmap 输出显示主机操作系统详情](image/Figure_14.10_B19441.jpg)'
- en: Figure 14.10 – nmap output showing the host OS details
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.10 – nmap 输出显示主机操作系统详情
- en: In the preceding output, we can see that the host is a Dell device running Windows
    10 (**1507 -** **1607**).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的输出中，我们可以看到主机是运行 Windows 10（**1507 -** **1607**）的戴尔设备。
- en: We now know how to scan internal networks and identify live systems and details
    about those systems, such as their OS, MAC address, uptime, and even open ports,
    all using just Nmap.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经知道如何扫描内部网络，并使用 Nmap 来识别活动系统及其详细信息，如操作系统、MAC 地址、正常运行时间，甚至开放端口。
- en: Let’s now move outside the local network and learn how to locate and identify
    external and IoT devices using Shodan.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们走出本地网络，学习如何使用 Shodan 定位和识别外部及物联网设备。
- en: Using Shodan.io to find IoT devices including firewalls, CCTV, and servers
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Shodan.io 查找包括防火墙、监控摄像头和服务器在内的物联网设备
- en: Quickly think of a website that allows you to search for anything. Without being
    a psychic, I’m guessing you thought of Google. Maybe I’ll stick to my day job.
    In the same way that Google crawls and scours the main parts of the internet and
    indexes websites and resources, Shodan takes a similar approach to scanning the
    internet and IP addresses and indexes useful information about devices that can
    be accessed across the web.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 快速想象一个允许你搜索任何内容的网站。虽然我不是预言家，但我猜你会想到 Google。也许我还是老老实实做我的本职工作吧。就像 Google 扫描和抓取互联网上的主要部分，索引网站和资源一样，Shodan
    采取类似的方法来扫描互联网和 IP 地址，并索引可以通过网络访问的设备的有用信息。
- en: '**IoT** (short for **Internet of Things**) devices are those that can connect
    to the internet but may not be traditional computers, such as laptops and desktops.
    IoT devices include smart devices, such as wearable fitness devices and trackers,
    smart microwaves and ovens, Amazon Echo, doorbell cameras, and even smart cars.
    IoT devices also extend to industrial systems and are referred to as **Industrial
    IoT** (**IioT**) devices. Think of a large soft drink manufacturing company as
    an example. There need to be systems and devices in place to count bottles, caps,
    and labels, check temperatures, and facilitate communications between sensors
    that need to be networked with each other via **Programmable Logic Controllers**
    (**PLCs**), **Supervisory Control and Data Acquisition** (**SCADA**), and **Industrial
    Control Systems** (**ICS**). This applies to every industrial sector, even nuclear
    power plants! It’s also not uncommon to combine this **Operational Technology**
    (**OT**) with IioT, known as **OT-IIoT**, as OT devices can be remotely controlled
    via IIoT systems.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**物联网**（**Internet of Things**）设备是指那些能够连接到互联网，但可能不是传统计算机（如笔记本电脑和台式机）的设备。物联网设备包括智能设备，如可穿戴的健身设备和追踪器、智能微波炉和烤箱、亚马逊
    Echo、门铃摄像头，甚至智能汽车。物联网设备还扩展到工业系统，被称为**工业物联网**（**IioT**）设备。比如，一家大型饮料制造公司就需要有系统和设备来计算瓶子、瓶盖和标签，检查温度，并促进需要通过**可编程逻辑控制器**（**PLCs**）、**监控控制与数据采集**（**SCADA**）和**工业控制系统**（**ICS**）进行网络连接的传感器之间的通信。这适用于每个工业领域，甚至是核电厂！将这种**操作技术**（**OT**）与
    IioT 结合在一起的情况也很常见，这就是**OT-IIoT**，因为 OT 设备可以通过 IIoT 系统进行远程控制。'
- en: The issue here lies in securing IoT and IIoT devices as well as access, particularly
    remote access, to devices. As a penetration tester, I use **Shodan.io** frequently
    to find systems belonging to companies of different types, particularly larger
    organizations. This skill is also useful when conducting DFIR investigations,
    as information about external and IoT devices can easily be found using Shodan.io.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的问题在于确保物联网（IoT）和工业物联网（IIoT）设备的安全性，以及设备访问权限，尤其是远程访问。作为一名渗透测试员，我经常使用**Shodan.io**来查找属于不同类型公司的系统，尤其是大型组织。在进行数字取证和事件响应（DFIR）调查时，这项技能也非常有用，因为关于外部设备和物联网设备的信息可以通过
    Shodan.io 很容易地找到。
- en: The team at Shodan claims that Shodan can find all devices that are connected
    to the internet and reveal important metadata about the devices. This can be beneficial
    because it allows companies to use Shodan to find out whether their devices can
    be publicly accessed, but it also shows attackers the same information. This is
    not to say that Shodan is a bad or malicious tool, as there are hundreds of other
    tools that can be used together to divulge the same information. Shodan just makes
    it much easier.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Shodan 团队声称，Shodan 可以找到所有连接到互联网的设备，并揭示关于设备的重要元数据。这是有益的，因为它允许公司使用 Shodan 查找其设备是否可以被公开访问，但同样也将这些信息展示给攻击者。这并不是说
    Shodan 是一个坏的或恶意的工具，因为还有数百种其他工具可以一起使用，泄露相同的信息。Shodan 只是让这一过程变得更简单。
- en: Shodan is a paid subscription; however, you can use it for free, which gives
    very limited results, or register a free account and gain access to two pages
    of results when performing IoT and IIoT searches. If you don’t want to purchase
    one of their subscription packages, you can wait around for their annual sale
    (usually around Black Friday and Thanksgiving), when a limited lifetime subscription
    for personal use is available for $5\. For this exercise, I’ll be using the paid
    $5 subscription, but I encourage you to register with the site so that you at
    least have access to two pages of results at a time.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Shodan 是一项付费订阅服务；然而，你可以免费使用它，虽然只能获得非常有限的结果，或者注册一个免费账户，在进行物联网和工业物联网搜索时可以访问两页结果。如果你不想购买他们的订阅套餐，可以等他们的年终促销（通常在黑色星期五和感恩节期间），这时可以以
    5 美元的价格购买一个个人使用的限时终身订阅。对于这个练习，我将使用 5 美元的付费订阅，但我鼓励你注册该网站，这样至少可以每次访问两页结果。
- en: Using Shodan filters for IoT searches
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Shodan 过滤器进行物联网搜索
- en: Shodan searches aren’t as clear-cut as a Google search, but it’s not difficult
    to do a search for Shodan filters and try to search for specific devices. You
    can view the Shodan Filter Reference at [https://beta.shodan.io/search/filters](https://beta.shodan.io/search/filters).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Shodan 搜索不像 Google 搜索那样直观，但进行 Shodan 过滤器搜索并查找特定设备并不难。你可以查看 Shodan 过滤器参考文档，地址是
    [https://beta.shodan.io/search/filters](https://beta.shodan.io/search/filters)。
- en: 'Here are some basic search filters you can use:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你可以使用的一些基本搜索过滤器：
- en: '**product**: Search the name of the hardware manufacturer or software developer'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**product**：搜索硬件制造商或软件开发商的名称'
- en: '**hostname**: Find devices based on the searched hostname'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**hostname**：根据搜索的主机名查找设备'
- en: '**os**: Search for devices by OS'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**os**：按操作系统搜索设备'
- en: '**port**: Find open ports on devices'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**port**：查找设备的开放端口'
- en: '**city**: Find devices within a specific city'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**city**：查找特定城市内的设备'
- en: '**country**: Find devices within a specific country'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**country**：查找特定国家内的设备'
- en: '**geo**: Find devices by GPS coordinates'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**geo**：根据 GPS 坐标查找设备'
- en: 'Let’s try a few searches of our own. I live on a small island in the Caribbean
    called Trinidad. If want to view a list of devices within Trinidad, I can use
    the **country** filter followed by the country code in the Shodan search bar:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来试试几个搜索。我住在加勒比海的一个小岛上，叫做特立尼达。如果我想查看特立尼达岛内的设备列表，可以在 Shodan 搜索框中使用**国家**过滤器，后跟国家代码：
- en: '[PRE7]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If unsure of your own country code, a simple web search should help you figure
    it out. A site that I have found to be helpful is [https://www.countrycode.org/](https://www.countrycode.org/).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不确定自己国家的代码，简单的网络搜索应该能帮你找到答案。我发现 [https://www.countrycode.org/](https://www.countrycode.org/)
    这个网站非常有用。
- en: In the following screenshot, we can see the results of the country filter where
    **TT** represents the country code for Trinidad and Tobago. To the left of the
    screen, we can see a total of **124, 921** results for IoT devices found, under
    which there is a list of **TOP CITIES**, with the number of devices listed for
    each city, followed by the top open ports, top organizations, and so on. To the
    middle and right of the screen, we can see actual IPs and information about those
    devices.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在下方的截图中，我们可以看到国家过滤器的结果，其中**TT**代表特立尼达和多巴哥的国家代码。在屏幕左侧，我们可以看到找到的**124, 921**个物联网设备的结果，下面列出了**顶级城市**，每个城市列出了设备的数量，随后是顶级开放端口、顶级组织等信息。在屏幕的中间和右侧，我们可以看到实际的
    IP 地址和这些设备的信息。
- en: '![Figure 14.11 – Shodan country filter results](image/Figure_14.11_B19441.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.11 – Shodan 国家过滤器结果](image/Figure_14.11_B19441.jpg)'
- en: Figure 14.11 – Shodan country filter results
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.11 – Shodan 国家过滤器结果
- en: Due to privacy and legal concerns, I won’t be clicking on the results, as this
    will carry us to another page, showing the company and host details and even disclosing
    open ports and the OSes of the devices. Be sure to do a web search and review
    the laws of your country and state before proceeding any further. If unsure, you
    may wish to first reach out to law enforcement or someone knowledgeable about
    your local laws and legislation.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 由于隐私和法律问题，我不会点击这些结果，因为这会将我们带到另一个页面，显示公司和主机的详细信息，甚至公开设备的开放端口和操作系统。请务必在继续操作之前，进行网络搜索并查看您所在国家和州的法律。如果不确定，您可能希望先联系执法机关或了解当地法律和法规的专家。
- en: 'Let’s try another search for **Fortinet** firewalls within Trinidad, using
    the **country** filter and a **product** filter by typing the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试另一种搜索，使用 **国家** 过滤器和 **产品** 过滤器，搜索特立尼达的 **Fortinet** 防火墙，输入如下内容：
- en: '[PRE8]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In the following search results, we can see that Shodan returned 54 results
    for Fortinet firewalls in Trinidad. Again, for legal and privacy purposes, I won’t
    be clicking on the IP address, as this will show even more details about the devices
    other than what is listed on the main page.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下搜索结果中，我们可以看到 Shodan 返回了特立尼达的 54 个 Fortinet 防火墙结果。再次出于法律和隐私的考虑，我不会点击 IP 地址，因为这将显示比主页列出的更多设备细节。
- en: '![Figure 14.12 – The product filter for Fortinet firewalls in Trinidad](image/Figure_14.12_B19441.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.12 – 特立尼达 Fortinet 防火墙的产品过滤器](image/Figure_14.12_B19441.jpg)'
- en: Figure 14.12 – The product filter for Fortinet firewalls in Trinidad
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.12 – 特立尼达 Fortinet 防火墙的产品过滤器
- en: 'We can also look for specific servers using Shodan. Let’s say that I want to
    search for Apache web servers that use version **2.2.3**. This can be achieved
    using the **server** filter followed by the server version by typing the following:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用 Shodan 查找特定的服务器。假设我想搜索使用 **2.2.3** 版本的 Apache Web 服务器。可以通过使用 **服务器**
    过滤器并输入服务器版本来实现，输入如下内容：
- en: '[PRE9]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Here, we see that Shodan has displayed 11 results, mainly found in Port of Spain
    and Chaguanas in Trinidad.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到 Shodan 显示了 11 个结果，主要位于特立尼达的西班牙港和查瓜纳斯。
- en: '![Figure 14.13 – Finding web servers with Shodan](image/Figure_14.13_B19441.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.13 – 使用 Shodan 查找 Web 服务器](image/Figure_14.13_B19441.jpg)'
- en: Figure 14.13 – Finding web servers with Shodan
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.13 – 使用 Shodan 查找 Web 服务器
- en: 'For our last search, I’d like to search for CCTV IP cameras using Shodan. For
    this, we can again use the **product** filter. I’ll specify the **Hikvision**
    camera system, as this is a very common CCTV system, by typing the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的最后一次搜索中，我想使用 Shodan 搜索 CCTV IP 摄像头。为此，我们可以再次使用 **产品** 过滤器。我将指定 **海康威视**
    摄像头系统，因为这是一个非常常见的 CCTV 系统，输入如下内容：
- en: '[PRE10]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As seen in this final instance, Shodan has returned 7,689 instances of Hikvision
    cameras. This can also be very useful if your DFIR investigation requires CCTV
    camera footage by alerting you to where cameras may be located nearby, and it
    may give a company name that you may be able to contact and ask permission to
    view their footage.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如最终示例所示，Shodan 返回了 7,689 个海康威视摄像头实例。如果你的 DFIR 调查需要监控摄像头录像，这也会非常有用，它能提醒你摄像头可能的位置，甚至可能提供一个公司名称，你可以联系并请求查看他们的录像。
- en: '![Figure 14.14 – CCTV camera discovery using Shodan](image/Figure_14.14_B19441.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.14 – 使用 Shodan 发现 CCTV 摄像头](image/Figure_14.14_B19441.jpg)'
- en: Figure 14.14 – CCTV camera discovery using Shodan
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.14 – 使用 Shodan 发现 CCTV 摄像头
- en: Feel free to try out more Shodan filters, but please check your local legislation
    where applicable to ensure that these searches are legal.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 随时尝试更多 Shodan 过滤器，但请检查适用的当地法规，确保这些搜索是合法的。
- en: Summary
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at the networking and enumeration tools netdiscover
    and nmap and learned how to scan networks for open hosts and view details such
    as IPs, MAC addresses, and hostnames and went a bit further with Nmap to further
    discover more host details, such as open ports, running services and their versions,
    computer names, and domains. We then moved on to finding IoT devices using Shodan.io
    and used various search filters to find firewalls, servers, and CCTV cameras.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了网络发现和枚举工具 netdiscover 和 nmap，并学习了如何扫描网络以寻找开放的主机，并查看 IP 地址、MAC 地址和主机名等详细信息。我们还进一步使用
    Nmap 探索更多主机细节，如开放端口、正在运行的服务及其版本、计算机名称和域名。接着，我们使用 Shodan.io 查找 IoT 设备，并通过各种搜索过滤器查找防火墙、服务器和
    CCTV 摄像头。
- en: These tools can be very useful to anyone gathering information on local and
    remote devices that may be part of a network DFIR investigation.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具对于任何收集本地和远程设备信息的人来说，尤其是在网络 DFIR 调查中，都是非常有用的。
- en: Next up, we’ll look at a **Network Forensics Analysis Tool** (**NFAT**) called
    **Xplico**. See you in the next chapter.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将介绍一款叫做 **Xplico** 的 **网络取证分析工具** (**NFAT**)。下章见。
