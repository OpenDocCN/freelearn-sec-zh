- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Applying Government Security Standards – System Hardening
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用政府安全标准 – 系统加固
- en: Whether your team is trying to give your product a competitive edge over the
    competition via heightened security or your customer base (i.e., government, military,
    or other public sector customer) has compliance mandates for all systems that
    they employ, the application of one or more government standards for security
    is generally no simple task.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你的团队是试图通过增强安全性为你的产品提供竞争优势，还是你的客户群体（即政府、军队或其他公共部门客户）对所有系统有合规性要求，应用一个或多个政府安全标准通常都不是一项简单的任务。
- en: For this level of compliance, you must build a solution based on accepted and
    certified operating systems. This specific compliance action will obviously take
    most community distributions out of selection for you, as we discussed in [*Chapter
    2*](B22104_02.xhtml#_idTextAnchor044). In this space, the list of Linux operating
    systems is brutally short. You can count the players in this space with the fingers
    on one hand (and maybe have a finger or two left over). This is not meant to disparage
    any distribution whether they are community or commercial. The process is lengthy,
    expensive, and, beyond a shadow of a doubt, possibly quite frustrating for most.
    Few distributions have the resources to take this journey with NIST.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这一层次的合规性，你必须基于已接受和认证的操作系统构建解决方案。显然，这一合规性要求将把大多数社区发行版排除在外，正如我们在[*第2章*](B22104_02.xhtml#_idTextAnchor044)中所讨论的那样。在这个领域，符合要求的Linux操作系统列表非常短暂。你可以用一只手指数出这个领域的参与者（或许还能剩下几根手指）。这并不是贬低任何发行版，无论是社区版还是商业版。这个过程冗长、昂贵，并且毫无疑问，对于大多数人来说可能非常令人沮丧。很少有发行版拥有资源与NIST一同完成这一过程。
- en: The good news for you is the list of certified Linux operating systems is expanding,
    but few can compete with the extensive list of government certifications and standards
    that are adhered to like **Red Hat**® **Enterprise Linux**® (**RHEL**) can. It
    is seen as the de facto standard for Linux in the US government space. The few
    other players in this space are often clones or derivatives of RHEL, except Ubuntu®,
    which is the most popular Debian Linux variant.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对你来说，好消息是经过认证的Linux操作系统的列表正在扩大，但很少有操作系统能够与**Red Hat**® **Enterprise Linux**®（**RHEL**）相媲美，它遵循广泛的政府认证和标准，并且被视为美国政府领域Linux的事实标准。这个领域的其他几个参与者通常是RHEL的克隆或衍生版本，唯独Ubuntu®是最受欢迎的Debian
    Linux变种。
- en: Another factor in this effort that we will explore here is additional tooling
    that makes the Herculean effort to comply with these security standards even possible.
    The **Security Content Automation Protocol** (**SCAP**) can easily be seen as
    the most common standard for the automated application sets of security measures
    (AKA SCAP server profiles) to a system or application stack. The actual process
    of implementing these profiles requires tooling. This is where open source comes
    to the rescue (again). The OpenSCAP projects provide extensive tooling. Many Linux
    distributions include these packages within their installers and repositories.
    SCAP definitions provide an industry standard way of applying security standards
    and remediations. They are the highway towards compliance regardless of the security
    standard that you are trying to apply. In this chapter, we’ll show you by example
    how to apply the two most common standards for server security in the US – FIPS
    140-3 and the general **STIG** (short for **Secure Technical** **Implementation
    Guide**).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，我们将探索的另一个因素是额外的工具，这些工具使得遵循这些安全标准的艰巨任务成为可能。**安全内容自动化协议**（**SCAP**）可以说是最常见的自动化应用集安全措施的标准（也就是SCAP服务器配置文件），用于系统或应用堆栈。实施这些配置文件的实际过程需要工具支持。这正是开源工具再次发挥作用的地方。OpenSCAP项目提供了广泛的工具。许多Linux发行版在其安装程序和软件仓库中都包括这些工具包。SCAP定义为应用安全标准和修复提供了一种行业标准的方式。无论你试图应用什么安全标准，它们都是实现合规性的“高速公路”。在本章中，我们将通过实例展示如何应用美国服务器安全的两个最常见标准——FIPS
    140-3和通用的**STIG**（即**安全技术实施指南**）。
- en: 'In this chapter, the main sections are:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要内容包括：
- en: Adherence to key US government standards
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遵守美国政府的关键标准
- en: How do I implement this?
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我该如何实现这一点？
- en: How do I certify my solution?
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我该如何认证我的解决方案？
- en: Let’s move on to our next section, where we will go into some detail as to the
    details of what you may need to complete the exercises in this chapter.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入下一个部分，详细讨论你可能需要完成本章练习的相关细节。
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For the hands-on exercises in this chapter, you will need two RHEL 9.4 (or newer)
    machines (physical or virtual) both will be clean installations. We will do one
    of those installations together as an exercise.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的实践练习中，你将需要两台 RHEL 9.4（或更新版本）机器（可以是物理机或虚拟机），并且它们都应该是干净的安装。我们将在练习中一起完成其中一台机器的安装。
- en: To achieve this, you will need access to a Red Hat® account (developer or production),
    installation media, Fedora® Media Writer, and the ability to install/reinstall
    the operating system on the two machines.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，你需要访问一个 Red Hat® 账户（开发者账户或生产账户）、安装介质、Fedora® 媒体写入工具，以及能够在这两台机器上安装/重新安装操作系统的能力。
- en: 'Additionally, you will need the ability to download and install additional
    packages from third-party or government websites. The STIG Viewer tool can be
    installed on Windows® or Linux systems. You’ll need this as well, but it does
    not have to be installed specifically on your lab machines. Check out the book’s
    GitHub repository for helpful links: [https://github.com/PacktPublishing/The-Embedded-Linux-Security-Handbook/blob/main/Chapter11/Resource_Cheat_Sheet.pdf](https://github.com/PacktPublishing/The-Embedded-Linux-Security-Handbook/blob/main/Chapter11/Resource_Cheat_Sheet.pdf).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你需要能够从第三方或政府网站下载并安装额外的包。STIG Viewer 工具可以安装在 Windows® 或 Linux 系统上。你也需要这个工具，但它不必专门安装在你的实验室机器上。可以查看本书的
    GitHub 仓库以获取有用的链接：[https://github.com/PacktPublishing/The-Embedded-Linux-Security-Handbook/blob/main/Chapter11/Resource_Cheat_Sheet.pdf](https://github.com/PacktPublishing/The-Embedded-Linux-Security-Handbook/blob/main/Chapter11/Resource_Cheat_Sheet.pdf)。
- en: Let’s move on to the reason *why* adherence to security standards might matter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续讨论*为什么*遵守安全标准可能很重要。
- en: Adherence to key US government standards
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 遵守美国政府关键标准
- en: Many seek to maintain their solutions to a higher standard than what may or
    may not be required. Many can agree with me on this; I applaud that level of commitment
    to security and to going above and beyond. In doing so, they can easily set their
    solutions on a higher pedestal against any of their competitors’ solutions. Why?
    It’s because if the solution meets the arduous security standards of the US military
    or certain three-letter agencies, then it’s definitely good enough for them. Well,
    one would assume such.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 很多人寻求将他们的解决方案维持在比要求的标准更高的水平。很多人会同意我的看法；我赞赏这种对安全的承诺以及超越最低要求的精神。通过这样做，他们可以轻松地将自己的解决方案与任何竞争对手的解决方案区分开来。为什么？因为如果解决方案符合美国军方或某些三字母机构的苛刻安全标准，那么它一定足够好。嗯，应该是这样理解的。
- en: Continuing with that thought, I want to highlight by going above and then beyond
    what is minimally required (or seen as the norm) in a specific industry is yet
    another excellent method of driving trust within your targeted community base.
    By raising the bar for yourself and your products, you will ultimately preemptively
    (and informally) set a new standard for others to attempt to live up to. This
    will result in easier audits for your customers, who will definitely appreciate
    a less stressful compliance effort.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 继续这个思路，我想强调的是，通过在特定行业中超越最低要求（或通常认为的标准），你可以有效地在目标社区内建立信任。通过提高自己和产品的标准，你最终会提前（且非正式地）为他人设定一个新的标准，促使他们去努力达到这个标准。这将使你的客户的审计工作变得更加轻松，他们一定会感激这种减少压力的合规工作。
- en: Adherence to government standards, when not required specifically, can also
    give your potential customers more peace of mind in choosing your solution. The
    customers’ auditors may also thank them for executing more due diligence in the
    selection of your product. It’s a win-win for everyone. That extra effort on your
    teams’ parts can go a long way to a wider adoption rate of your products.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 遵守政府标准，即使不是特别要求，也可以让潜在客户在选择你的解决方案时更加安心。客户的审计人员也可能会感谢他们在选择你的产品时进行了更多的尽职调查。这对每个人来说都是双赢的局面。你团队的额外努力将大大促进你产品的广泛采用。
- en: Besides trust and peace of mind, having one less system on their network to
    worry about is also a plus for your customers. I assure you that they will appreciate
    that too.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 除了信任和安心外，减少一个客户网络上的系统也为他们带来了好处。我向你保证，他们也一定会对此表示感激。
- en: Then there’s the flip side of the coin. When compliance is mandated due to your
    customer base’s requirements, your team will have its work cut out for them. Regardless
    of where your product falls in the requirements space, the more secure your product
    is the better the outcomes will be for all involved.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是另一面。当合规性由于客户群体的要求而被强制执行时，你的团队将面临重重任务。无论你的产品在需求空间中处于何种位置，产品越安全，所有相关方的结果就会越好。
- en: 'Let’s review an earlier discussion in [*Chapter 2*](B22104_02.xhtml#_idTextAnchor044),
    when we established the single greatest factor: your target customer base’s compliance
    needs. Perhaps your product targets a wide stretch of industry verticals.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下[*第2章*](B22104_02.xhtml#_idTextAnchor044)中的早期讨论，当时我们确定了最重要的因素：你的目标客户群体的合规性需求。也许你的产品面向多个行业领域。
- en: If your user base is in the government sector, your product had better bring
    its *A* game. Failure to comply with the applicable standards imposed upon any
    system in government infrastructure results in your solution not getting adopted
    there.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的用户群体位于政府部门，那么你的产品最好能展现出*最佳表现*。未能遵守政府基础设施中对任何系统施加的适用标准，将导致你的解决方案无法被采纳。
- en: Government is just one vertical that requires such attention to detail. Healthcare
    and financial services also have their own regulatory security standards (albeit
    not too different from government/military standards).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 政府只是一个需要关注细节的行业领域。医疗保健和金融服务也有自己的监管安全标准（尽管与政府/军事标准差异不大）。
- en: Regardless of what verticals and sectors you sell into, casting a wider net
    compliance-wise is just a smart play. Additionally, I feel remiss if I have failed
    to mention that there is a massive overlap in many security standards across many
    industries.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你销售的行业领域和部门是什么，从合规性角度拉宽网格都是一种聪明的做法。此外，我觉得如果我没有提到这一点就结束，那就是许多安全标准在多个行业之间存在大量重叠。
- en: Let’s get into more importantly how we can start to apply these standards to
    our solutions successfully.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更重要地讨论如何成功地将这些标准应用到我们的解决方案中。
- en: How do I implement this?
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我该如何实施这一点？
- en: The answer to the question *How do I implement this?* does not have a single
    answer. The truthful response is *It’s complicated*. Maintaining compliance has
    many touchpoints. It starts at the design table, where you must identify what
    standards will impact the overall solution. Some can argue that the significant
    amounts of research time are the greatest amount of time spent on this effort.
    I disagree. I believe (and I suspect you will too soon enough) that maintaining
    compliance from release to release long after the measures have been originally
    implemented in your product is the true heavy lift.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 问题*我该如何实施这一点？*并没有单一的答案。真实的回答是*这很复杂*。维持合规性有许多接触点。它从设计桌开始，在那里你必须确定哪些标准会影响整体解决方案。有些人可能会认为，大量的研究时间是花费最多时间的部分。我不同意。我相信（并且我猜你很快也会这么认为）从发布到发布，长时间保持合规性，远远比最初在产品中实施这些措施更加繁重。
- en: There’s also a catch to all of this. Maintaining adherence is not a one-and-done
    process. Brace for the upcoming frustration because here it comes. Setting a server
    profile, whether during installation or later on, is not the end but the beginning.
    Every time you make a change to the configuration, albeit small or large, you
    must re-scan and confirm compliance. This part of maintenance and testing can
    be a rather tedious process, but it IS necessary.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这里面也有一个陷阱。保持合规性并不是一次性完成的过程。做好心理准备，因为接下来会有一些挫折。设置服务器配置文件，无论是在安装期间还是之后，都不是终点，而是起点。每次对配置进行更改时，无论大小，你都必须重新扫描并确认合规性。这一维护和测试过程可能相当繁琐，但它是必要的。
- en: Let’s explore, in the next few sections, how we implement and maintain standards
    compliance throughout the lifecycle of your product.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的几个部分中，我们将探讨如何在产品的生命周期中实施并维持标准合规性。
- en: Implementation of security standards
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全标准的实施
- en: Security begins at the design table, but the implementation and maintenance
    of your security measures is where the proverbial rubber hits the road. Paying
    close attention to the most minute detail could mean the difference that protects
    your product from being compromised. Why do we do this (as if we need a reminder)?
    Perpetual risk mitigation.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性从设计阶段开始，但安全措施的实施和维护才是真正的关键所在。关注最细微的细节，可能会在保护你的产品免遭破坏上产生决定性的作用。我们为什么要这么做（好像我们需要提醒一样）？永恒的风险缓解。
- en: Our first foray into the implementation of security standards begins with the
    Linux installers.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首次涉足实施安全标准的工作从Linux安装程序开始。
- en: The enhancements, to some installers in recent years, do make this process easier
    on their implementers. But as I have previously stated, it is simply the beginning
    of a long-term commitment that you and your team have engaged in.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来对一些安装程序的改进，确实让这一过程对实施者来说变得更容易。但正如我之前所说，这只是你和你的团队所投入的长期承诺的开始。
- en: Leveraging RHEL server profiles at installation time
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在安装时利用RHEL服务器配置文件
- en: The RHEL installer, Anaconda, has the ability for the end-user to select a predefined
    set of SCAP Security Guide server profiles. These server profiles represent several
    governmental agencies and industry standards. Leveraging one of these at installation
    time is a significant jumpstart to ensuring your system will be compliant with
    an applicable standard. This doesn’t guarantee that, after you have finished setting
    up your server, it is 100% compliant. You will still need to confirm compliance
    as part of your QA process later on.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL安装程序Anaconda具有让最终用户选择预定义SCAP安全指南服务器配置文件的能力。这些服务器配置文件代表了多个政府机构和行业标准。在安装时利用其中之一，可以大大加速确保系统符合相关标准的进程。这并不意味着在完成服务器设置后，它就100%符合标准。你仍然需要在后续的质量检查过程中确认合规性。
- en: You can select one of the several SCAP profiles (or other standards) in Anaconda
    during their installation process. Again, this is where I applaud those developers
    who spent the time to make this arduous process easier for us all.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Anaconda安装过程中选择多个SCAP配置文件（或其他标准）中的一个。再次感谢那些开发者，他们花时间使这一繁琐的过程变得更加简单。
- en: 'For those who are curious as to which profiles are included, wait no more.
    Recently, the master list for publicly shared SCAP profiles for virtually all
    major Linux distributions was moved to GitHub; it can be found via this link:
    [https://complianceascode.github.io/content-pages/guides/index.html](https://complianceascode.github.io/content-pages/guides/index.html).
    The list of the SCAP profiles included within the RHEL 9 installer is somewhat
    extensive. Here’s a curtailed list of what profiles are included in the installer:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些好奇有哪些配置文件被包含的朋友，不必再等了。最近，几乎所有主要Linux发行版的公开共享SCAP配置文件的主列表已移至GitHub，可以通过这个链接找到：[https://complianceascode.github.io/content-pages/guides/index.html](https://complianceascode.github.io/content-pages/guides/index.html)。RHEL
    9安装程序中包含的SCAP配置文件列表相当广泛。以下是安装程序中包含的一些配置文件的简短列表：
- en: Various levels of security (low, medium, high, and enhanced) from the French
    National Agency for the Security of Information Systems – ANSSI BP-028
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 法国信息系统安全国家局（ANSSI BP-028）定义的各种安全级别（低、中、高和增强）
- en: Various levels of **Centro Criptológico Nacional** (**National Cryptologic Center
    aka CCN**) of Spain defined server security levels
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 西班牙**国家密码中心**（**Centro Criptológico Nacional aka CCN**）定义的各级服务器安全级别
- en: Various CIS Benchmark levels
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种CIS基准级别
- en: The DRAFT unclassified FIPS standard (NIST 800-171)
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 草案版非机密FIPS标准（NIST 800-171）
- en: The **Australian Cyber Security Centre** (**ACSC**) Essential Eight
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**澳大利亚网络安全中心**（**ACSC**）基本八项'
- en: The ACSC ISM Official
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ACSC ISM官方标准
- en: The **Health Insurance Portability and Accountability** **Act** (**HIPAA**)
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**健康保险可携带性与责任法案**（**HIPAA**）'
- en: The Protection Profile for General Purpose Operating Systems
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用操作系统的保护配置文件
- en: PCI-DSS version 3.2.1 Control Baseline
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PCI-DSS版本3.2.1控制基准
- en: The **Defense Information Systems Agency** (**DISA**) **STIG** for RHEL 9 Server
    and RHEL 9 Server with GUI
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**国防信息系统局**（**DISA**）**STIG**针对RHEL 9 Server和带GUI的RHEL 9 Server'
- en: Here’s a screenshot taken while browsing the extensive list of available SCAP
    profiles during a RHEL 9 installation. It’s impossible to show them all in a single
    screenshot.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是浏览RHEL 9安装过程中可用SCAP配置文件的广泛列表时拍摄的截图。在单个截图中不可能显示所有内容。
- en: '![Figure 13.1 – Selecting a server profile in the RHEL installer](img/B22104_13_01.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图13.1 – 在RHEL安装程序中选择服务器配置文件](img/B22104_13_01.jpg)'
- en: Figure 13.1 – Selecting a server profile in the RHEL installer
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 – 在RHEL安装程序中选择服务器配置文件
- en: Enabling FIPS mode in RHEL
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在RHEL中启用FIPS模式
- en: RHEL 9 has been focused on the FIPS 140-3 standard since its initial development
    began several years ago. Red Hat had determined that attempting to add FIPS 140-3
    to RHEL 8 (which is FIPS 140-2 certified) would require too much refactoring and
    as the operating system was within its final five years of its lifecycle, such
    an effort was untenable. During the final five years of a RHEL release, the operating
    system is considered to be in maintenance mode, where new features generally are
    not introduced but security and bug fixes are still implemented.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 自几年前开始初步开发以来，RHEL 9 一直专注于 FIPS 140-3 标准。Red Hat 已经确定，如果尝试将 FIPS 140-3 添加到已获得
    FIPS 140-2 认证的 RHEL 8 中，所需的重构工作量过大，而且由于该操作系统处于生命周期的最后五年，因此这种努力是不可行的。在 RHEL 发布的最后五年里，操作系统通常处于维护模式，不再引入新功能，但会继续进行安全和错误修复。
- en: Building a FIPS-compliant system starts at installation time by placing the
    installer into FIPS mode. This simple step is achieved by editing one line during
    the system’s boot process. During installation, append `fips=1` to the kernel
    line in the installer boot kernel options.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 构建 FIPS 合规的系统从安装时开始，通过将安装程序置于 FIPS 模式来实现。这一步非常简单，只需在系统启动过程中编辑一行。在安装过程中，在安装程序的启动内核选项中附加
    `fips=1` 到内核行。
- en: 'Here’s a screenshot of me setting the kernel boot options within GRUB to allow
    the installer to boot into FIPS mode:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在 GRUB 中设置内核启动选项的截图，以便让安装程序以 FIPS 模式启动：
- en: '![Figure 13.2 – Configuring the installer to boot in FIPS mode](img/B22104_13_02.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.2 – 配置安装程序以 FIPS 模式启动](img/B22104_13_02.jpg)'
- en: Figure 13.2 – Configuring the installer to boot in FIPS mode
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2 – 配置安装程序以 FIPS 模式启动
- en: The next step in getting your system closer to FIPS compliance is to select
    the FIPS SCAP server profile during the installation process.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让系统更接近 FIPS 合规性的下一个步骤是在安装过程中选择 FIPS SCAP 服务器配置文件。
- en: '![Figure 13.3 – Selecting the FIPS server profile during installation](img/B22104_13_03.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.3 – 安装过程中选择 FIPS 服务器配置文件](img/B22104_13_03.jpg)'
- en: Figure 13.3 – Selecting the FIPS server profile during installation
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.3 – 安装过程中选择 FIPS 服务器配置文件
- en: Optionally, if you are like me (detail-oriented) and desire to double-check
    your work, you could also configure FIPS compliance mode as a post-install process.
    This same process is needed after any changes to the system have occurred.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你像我一样（注重细节）并希望再次检查你的工作，你也可以在安装后配置 FIPS 合规模式。系统发生任何更改后，都需要进行此过程。
- en: 'Let’s see an example of a post-install configuration of enforcing FIPS mode
    via the command line. This, in itself, is a glaring example of where enterprise
    distributions (such as RHEL) make the adherence of complex standards easier. In
    this situation, you would run the following command as root:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个通过命令行在安装后强制启用 FIPS 模式的配置示例。这本身就是企业发行版（如 RHEL）如何简化复杂标准遵循的一个明显例子。在这种情况下，您可以以
    root 用户身份运行以下命令：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The output can be extremely lengthy, obscure, and verbose. Feel free to experiment
    in your lab as you see fit.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 输出可能非常长，晦涩且冗长。你可以根据自己的需求在实验室中进行尝试。
- en: Now, we can look at several of the steps we can take to validate FIPS mode before
    we perform a scan of the system. These are addressed in no particular order, but
    I’d like to think that the order chosen seems somewhat logical.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以查看在执行系统扫描之前验证 FIPS 模式的几个步骤。这些步骤并没有特定的顺序，但我认为所选顺序看起来有一定的逻辑性。
- en: Ensuring the kernel boot option is set for FIPS support by checking the kernel’s
    boot options before actually booting Linux. This does not, however, guarantee
    that all the other configurations required by FIPS 140-3 compliance have been
    completed. This is simply the start of the journey.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在实际启动 Linux 之前检查内核启动选项，确保已设置 FIPS 支持的内核启动选项。然而，这并不保证已完成 FIPS 140-3 合规性所需的所有其他配置。这仅仅是旅程的开始。
- en: 'In this pictorial example, you can see the configuration for booting, and it
    clearly shows kernel options... more specifically, the one we care about, `fips=1`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示意图中，你可以看到启动的配置，并清楚地展示了内核选项……更具体地说，就是我们关注的那个 `fips=1`：
- en: '![Figure 13.4 – Confirming FIPS mode boot options in GRUB](img/B22104_13_04.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.4 – 确认 GRUB 中的 FIPS 模式启动选项](img/B22104_13_04.jpg)'
- en: Figure 13.4 – Confirming FIPS mode boot options in GRUB
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.4 – 确认 GRUB 中的 FIPS 模式启动选项
- en: Here’s another example method of ensuring that FIPS mode is enabled on your
    RHEL server. This will do a ton of heavy lifting in the configuration for you.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是确保在你的 RHEL 服务器上启用 FIPS 模式的另一种方法。它将为你在配置过程中做很多繁重的工作。
- en: 'You should run the following command to forcibly set the system policy:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该运行以下命令以强制设置系统策略：
- en: '[PRE1]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As you might be curious (or gravely concerned) as to where your system stands
    in terms of adherence to the FIPS 140-3 standard, we’ve provided this example
    walkthrough on how to check. We will ensure that the validation of FIPS mode is
    completed (regardless of how it was configured previously):'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会好奇（或非常担心）你的系统在遵循 FIPS 140-3 标准方面的表现如何，因此我们提供了这个示例步骤来教你如何检查。我们将确保 FIPS 模式验证完成（无论它以前是如何配置的）：
- en: 'First, we’ll check to see that FIPS mode is enabled by running the following
    as root:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将通过以 root 身份运行以下命令来检查 FIPS 模式是否已启用：
- en: '[PRE2]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This is where you need to pay close attention to the output as you might just
    get this as your output – and then you still have more work to do. This is normal.
    Perfection is difficult to achieve. Your output will most likely be like the following,
    notifying you that you have more work to accomplish:'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这一点上，你需要密切关注输出结果，因为你可能会看到这样的输出——然后你还需要做更多的工作。这是正常的。完美是难以实现的。你的输出很可能会像下面这样，通知你还需要完成更多的工作：
- en: '[PRE3]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Let’s continue down the path assuming that your system needs more work by the
    fact that you did not get a favorable response to the last command. We can then
    run this next command and (of course) re-verify that FIPS mode is OK on our host.
    This may also take a little more time than most commands. Please be patient.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设你的系统需要更多的工作，因为你没有从上一个命令中得到理想的结果，让我们继续往下走。然后我们可以运行下一个命令，并（当然）重新验证 FIPS 模式是否在我们的主机上正常。这可能比大多数命令需要更多的时间，请耐心等待。
- en: '[PRE4]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This command will take some time – expect the output to resemble this:'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该命令将需要一些时间——预计输出将类似于以下内容：
- en: '[PRE5]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'OK. Things are now better. Because of the results we received from the last
    command, we had to do some remediation. That’s expected. Let’s reboot as recommended
    now:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，现在情况好多了。由于我们从上一个命令中得到了结果，我们需要做一些修复。这是预期的。现在按照建议重启系统：
- en: '[PRE6]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: After the system has rebooted, let’s get back to a root prompt and re-run the
    verification command. Like I continue to say, *trust* *but verify!*
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统重启后，让我们回到 root 提示符下，并重新运行验证命令。正如我一直说的，*信任* *但验证！*
- en: '[PRE7]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We can now breathe a sigh of relief. We have gone through how to implement FIPS
    mode and test the results. Now, let’s move on to another set of security measures
    that comprises DISA’s STIG profiles.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以松一口气了。我们已经完成了如何实现 FIPS 模式并测试结果的过程。接下来，让我们进入另一组安全措施，即 DISA 的 STIG 配置文件。
- en: DISA STIG SCAP profiles
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DISA STIG SCAP 配置文件
- en: Before we dive deep into the setup of STIG compliant systems, let’s first get
    to a point where we can actually make sense of the STIG standard’s documentation.
    This requires you to install a tool from DISA. Yes, you will need another tool
    just to view the details of the STIGs themselves. The DISA STIG Viewer is a free
    software tool that runs on Windows and Linux. Sorry everyone – no Mac® support.
    I’m sure that there’s some interesting backstory explaining *why* there’s no Mac
    support, but I do not know it. This tool is well maintained by the security gurus
    at DISA and is made publicly accessible to all.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入了解 STIG 合规系统的设置之前，让我们首先达到一个可以真正理解 STIG 标准文档的水平。这需要你从 DISA 安装一个工具。是的，你将需要另一个工具来查看
    STIG 本身的详细信息。DISA STIG Viewer 是一款免费的软件工具，支持 Windows 和 Linux 系统。抱歉大家——不支持 Mac®。我相信有一些有趣的背景故事解释了*为什么*不支持
    Mac，但我不知道具体情况。这个工具由 DISA 的安全专家维护，并公开提供给所有人使用。
- en: 'First, let’s open up a browser and go to the DISA site, then download the free
    STIG Viewer tool. The tool can be found at: [https://public.cyber.mil/stigs/srg-stig-tools/](https://public.cyber.mil/stigs/srg-stig-tools/).'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们打开浏览器并访问 DISA 网站，然后下载免费的 STIG Viewer 工具。该工具可以在以下网址找到：[https://public.cyber.mil/stigs/srg-stig-tools/](https://public.cyber.mil/stigs/srg-stig-tools/)。
- en: '![Figure 13.5 – Downloading the STIG Viewer](img/B22104_13_05.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.5 – 下载 STIG Viewer](img/B22104_13_05.jpg)'
- en: Figure 13.5 – Downloading the STIG Viewer
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.5 – 下载 STIG Viewer
- en: Now that we have this excellent free tool, let’s put it to good use and download
    the STIG that applies to our example RHEL 9.x lab server. This too is a relatively
    simple process.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了这个极好的免费工具，让我们充分利用它，下载适用于我们示例 RHEL 9.x 实验服务器的 STIG。这也是一个相对简单的过程。
- en: Go to [https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=operating-systems](https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=operating-systems)
    and select the RHEL 9 STIG. You may have to go through several other operating
    systems’ STIG entries to get there (I believe it’s on the third page).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 [https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=operating-systems](https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=operating-systems)
    并选择 RHEL 9 STIG。您可能需要浏览几个其他操作系统的 STIG 条目才能找到它（我认为它在第三页）。
- en: '![Figure 13.6 – Downloading the RHEL 9 STIG SCAP profile](img/B22104_13_06.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.6 – 下载 RHEL 9 STIG SCAP 配置文件](img/B22104_13_06.jpg)'
- en: Figure 13.6 – Downloading the RHEL 9 STIG SCAP profile
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.6 – 下载 RHEL 9 STIG SCAP 配置文件
- en: In my lab, I have the STIG Viewer on both my Windows laptop and several of my
    Linux servers. Here’s a screenshot of using the STIG Viewer to drill down into
    the RHEL 9 STIG library.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的实验室中，我在我的 Windows 笔记本电脑和几台 Linux 服务器上都安装了 STIG Viewer。这是使用 STIG Viewer 进入
    RHEL 9 STIG 库的屏幕截图。
- en: '![Figure 13.7 – Viewing the RHEL 9 STIG Library](img/B22104_13_07.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.7 – 查看 RHEL 9 STIG 库](img/B22104_13_07.jpg)'
- en: Figure 13.7 – Viewing the RHEL 9 STIG Library
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.7 – 查看 RHEL 9 STIG 库
- en: This is where I recommend that you spend some time not only getting acclimated
    with the STIG viewer tool but also using it to examine not just the RHEL 9.x STIG
    SCAP profile but any others you want to become more intimate with. This tool is
    priceless.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我建议您花一些时间不仅熟悉 STIG 查看工具，而且使用它来检查不仅仅是 RHEL 9.x STIG SCAP 配置文件，还有您想更加熟悉的任何其他配置文件。这个工具是无价的。
- en: Now that we’ve spent time viewing what profiles we could apply to our product,
    let’s move on to the tooling that actually allows us to force our systems’ configuration
    into compliance.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经花时间查看了我们可以应用于产品的配置文件，让我们继续进行实际允许我们将系统配置强制符合规定的工具。
- en: Whichever standards you choose to adhere to during your installation (and configuration
    processes), you will still need to validate the solution in detail as part of
    your release processes. Let’s take a look at what that may look like.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您选择在安装（和配置过程）期间遵循哪些标准，您仍然需要详细验证解决方案作为发布流程的一部分。让我们看看这可能是什么样子。
- en: Validation as part of the QA process
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 作为 QA 过程的一部分进行验证
- en: Have I ever said *trust but verify* previously? I bet I have. Yes. I’m saying
    it again.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前有没有说过*信任但要验证*？我想我有。是的。我再说一遍。
- en: 'Knowing where to get the latest information about how to apply SCAP profiles
    and scanning is important. Since we are focused on these activities and RHEL,
    here’s the link to Red Hat’s documentation on this process: [https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/security_hardening/scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening#configuration-compliance-tools-in-rhel_scanning-the-system-for-configuration-compliance-and-vulnerabilities](https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/security_hardening/scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening#configuration-compliance-tools-in-rhel_scanning-the-system-for-configuratio).'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 知道在哪里获取关于如何应用 SCAP 配置文件和扫描的最新信息是很重要的。由于我们专注于这些活动和 RHEL，这里是 Red Hat 关于这一过程的文档链接：[https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/security_hardening/scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening#configuration-compliance-tools-in-rhel_scanning-the-system-for-configuration-compliance-and-vulnerabilities](https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/security_hardening/scanning-the-system-for-configuration-compliance-and-vulnerabilities_security-hardening#configuration-compliance-tools-in-rhel_scanning-the-system-for-configuratio)。
- en: Tip
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You will need an account to log in to view the information.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个帐户来登录查看信息。
- en: Let’s move on to an exercise where we’ll run our first scan.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续进行一个练习，我们将运行我们的第一个扫描。
- en: 'Exercise: Installing the OpenSCAP tools and running a scan'
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习：安装 OpenSCAP 工具并运行扫描
- en: 'During this exercise, you will install the OpenSCAP tools onto one of your
    lab machines, download a RHEL 9 SCAP profile, and run a security scan. Let’s see
    how to do it:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您将在您的实验室机器上安装 OpenSCAP 工具，下载一个 RHEL 9 SCAP 配置文件，并运行安全扫描。让我们看看如何做：
- en: 'Get the packages installed:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装软件包：
- en: '[PRE8]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output for this one is exceptionally long; however, I’ve truncated it to
    show the important parts of what was installed:'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个输出非常长；但是，我已经截断了它以显示安装的重要部分：
- en: '[PRE9]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Download a general-purpose SCAP profile for RHEL 9 from Red Hat. Just like
    with the STIG SCAP profile we downloaded earlier, this will be an XML file that
    will be used by the scanning tool:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Red Hat 下载一个适用于 RHEL 9 的通用 SCAP 配置文件。就像我们之前下载的 STIG SCAP 配置文件一样，这将是一个 XML
    文件，用于扫描工具：
- en: '[PRE10]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output for this one is rather long too; I have truncated it to save space,
    leaving only some important informational bits here for you:'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个输出也相当长；我已对其进行了截断，以节省空间，只保留了一些重要的信息：
- en: '[PRE11]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Run a test scan:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行一次测试扫描：
- en: '[PRE12]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Important note
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: The oscap tools (i.e., the `openscap-utils` package) will have to be installed
    on the target host as well as the host it is executed from. Substitute your own
    appropriate username hostname and paths to files as specified. Please be aware
    that the output from this command’s execution can be excessively long. If you
    do not have two machines with the tools installed, you can simply run it against
    your own user account on localhost. The point of this exercise is simply to demonstrate
    the process.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: oscap 工具（即 `openscap-utils` 包）必须安装在目标主机和执行命令的主机上。请根据需要替换适当的用户名、主机名和文件路径。请注意，这个命令的输出可能非常长。如果你没有两台安装了工具的机器，可以简单地在本地主机上针对自己的用户帐户运行该命令。这个练习的重点仅仅是展示过程。
- en: 'The interactive output for this command is rather lengthy. Again, I have truncated
    what we are displaying here for you:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令的交互式输出相当长。为了节省空间，我已将显示的内容进行了截断：
- en: '[PRE13]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Next, open a browser and view the report.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，打开浏览器查看报告。
- en: Tip
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You may wish to copy the report HTML file to a different system for viewing
    if the graphical desktop is not installed. Review all items. Your output will
    be different from mine.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有安装图形桌面，你可能希望将报告的 HTML 文件复制到其他系统中查看。查看所有项目。你的输出会与我的不同。
- en: '![Figure 13.8 – Viewing the scan report HTML file](img/B22104_13_08.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.8 – 查看扫描报告 HTML 文件](img/B22104_13_08.jpg)'
- en: Figure 13.8 – Viewing the scan report HTML file
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.8 – 查看扫描报告 HTML 文件
- en: Now that you have your first scan report, please take some time to absorb the
    content and how it is formatted. Make a mental note of any deficiencies it might
    have found as these are the things we are using this tool to search for. The detailed
    reporting provided can easily save hours or days of manual checks.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了第一次扫描报告，请花些时间吸收内容及其格式。注意它可能发现的任何缺陷，因为这些正是我们用这个工具来寻找的。提供的详细报告可以轻松节省数小时或数天的人工检查时间。
- en: Additionally, I highly recommend keeping these reports as artifacts of your
    build and testing operations as they will become evidence of your due diligence
    should you submit your products for government certifications.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我强烈建议将这些报告作为构建和测试操作的文档保存，因为它们将成为你在提交产品进行政府认证时，证明你尽职调查的证据。
- en: In this exercise, we installed our SCAP tools, downloaded a general-purpose
    SCAP profile from Red Hat, and then executed our first scan. This process is easily
    repeated with different SCAP profiles that you either obtain from NIST, other
    third parties, or that you have created yourself. We’ve just seen a great example
    of command-line scanning tooling displayed.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们安装了 SCAP 工具，下载了一个来自 Red Hat 的通用 SCAP 配置文件，然后执行了第一次扫描。这个过程可以轻松地通过不同的
    SCAP 配置文件来重复，这些配置文件可以来自 NIST、其他第三方，或者你自己创建的。我们刚刚看到的是一个很好的命令行扫描工具示例。
- en: Now that you have executed your first scan from the command line, let’s move
    on in our journey by looking at graphical tools to assist with profiles and scanning.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经通过命令行执行了第一次扫描，让我们继续前进，看看图形化工具如何帮助处理配置文件和扫描。
- en: 'Example: Using the OpenSCAP Workbench'
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例：使用 OpenSCAP Workbench
- en: In the previous exercise, we installed several packages. Preemptively, you have
    already installed the `scap-workbench` and `scap-security-guide` packages. When
    your scanning system is in graphical UI mode, you’ll have the ability to view,
    edit, and create your own SCAP profiles, run them against hosts, and even automate
    the remediation of deficiencies found by the scanner.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的练习中，我们安装了多个软件包。提前，你已经安装了 `scap-workbench` 和 `scap-security-guide` 包。当你的扫描系统处于图形用户界面模式时，你将能够查看、编辑和创建自己的
    SCAP 配置文件，针对主机运行这些配置文件，甚至自动修复扫描工具发现的缺陷。
- en: 'Let’s walk through how we can open and engage with the OpenSCAP workbench in
    our UI:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步了解如何在 UI 中打开并使用 OpenSCAP 工作台：
- en: First, let’s open the OpenSCAP Workbench application in the Gnome desktop. Go
    to **Applications** then select **SCAP Workbench**.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们在 Gnome 桌面环境中打开 OpenSCAP Workbench 应用程序。进入 **Applications**，然后选择 **SCAP
    Workbench**。
- en: '![Figure 13.9 – Activating the OpenSCAP Workbench from the Applications Menu
    in Gnome](img/B22104_13_09.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.9 – 在 Gnome 的应用菜单中启动 OpenSCAP Workbench](img/B22104_13_09.jpg)'
- en: Figure 13.9 – Activating the OpenSCAP Workbench from the Applications Menu in
    Gnome
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.9 – 在 Gnome 的应用菜单中启动 OpenSCAP Workbench
- en: Once we have started the workbench application, we will first be prompted on
    which SCAP profile to load. Here, we will select **Other SCAP Content** from the
    pull-down menu.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动工作台应用程序后，系统会首先提示你选择加载哪个 SCAP 配置文件。在这里，我们将从下拉菜单中选择 **Other SCAP Content**。
- en: '![Figure 13.10 – Selecting “Other SCAP content” from the pull-down menu](img/B22104_13_10.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.10 – 从下拉菜单中选择“Other SCAP content”](img/B22104_13_10.jpg)'
- en: Figure 13.10 – Selecting “Other SCAP content” from the pull-down menu
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.10 – 从下拉菜单中选择“Other SCAP content”
- en: Next, we’ll select our previously downloaded RHEL 9 STIG SCAP profile file.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将选择之前下载的 RHEL 9 STIG SCAP 配置文件。
- en: '![Figure 13.11 – Selecting the RHEL 9 STIG SCAP profile (downloaded earlier)](img/B22104_13_11.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.11 – 选择 RHEL 9 STIG SCAP 配置文件（之前已下载）](img/B22104_13_11.jpg)'
- en: Figure 13.11 – Selecting the RHEL 9 STIG SCAP profile (downloaded earlier)
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.11 – 选择 RHEL 9 STIG SCAP 配置文件（之前已下载）
- en: Before you decide on your path of execution, here, you can review settings and
    choose a path forward.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定执行路径之前，你可以在此审查设置并选择前进的方向。
- en: '![Figure 13.12 – Getting ready to execute](img/B22104_13_12.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.12 – 准备执行](img/B22104_13_12.jpg)'
- en: Figure 13.12 – Getting ready to execute
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.12 – 准备执行
- en: From this screen, there are a plethora of actions you can take. You can choose
    to execute a scan remotely. Others may choose to edit this profile to suit their
    company’s needs. The obvious path is to execute this scan on a host locally or
    remotely. Here’s where I shall also point out that this tool can assist you in
    generating remediation automation once a scan has been completed.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在此屏幕上，你可以执行多种操作。你可以选择远程执行扫描。其他人可能会选择编辑此配置文件以满足公司需求。显然的路径是对本地主机或远程主机执行扫描。在此我还要指出，一旦扫描完成，这个工具可以帮助你生成修复自动化。
- en: The OpenSCAP Workbench is a robust and feature-rich tool that I believe deserves
    more detail than this book can allocate due to space constraints. If you liked
    this introduction, do not forget to check out the book’s GitHub repository for
    additional content on how to leverage this awesome tool and many other resources.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSCAP Workbench 是一款功能强大且丰富的工具，我认为它值得比本书由于篇幅限制所能提供的更多的细节。如果你喜欢这个介绍，别忘了查看本书的
    GitHub 仓库，里面有更多关于如何利用这个强大工具以及许多其他资源的内容。
- en: Let’s now move on to our next section, where we will discuss implementing security
    scans into your CI/CD chain.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续进入下一个部分，在这里我们将讨论如何将安全扫描集成到你的 CI/CD 链中。
- en: Implementation as part of your continuous integration/continuous deployment
    (CI/CD) process
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 作为持续集成/持续部署（CI/CD）过程的一部分进行实施
- en: This is not just a repeat of your QA efforts but a review of which standards
    and certifications you currently maintain and what efforts you may choose to add
    to your product or cease to maintain.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅仅是对你的质量保证工作的重复，而是对你当前所维护的标准和认证进行审查，以及你可能选择添加到产品中或停止维护的工作。
- en: Following updates from the agencies that provide the security standards that
    your appliance must comply with is crucial in keeping abreast of changes or new
    regulations.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 紧跟为你的设备提供安全标准的机构的更新非常重要，以便及时了解变化或新的法规。
- en: For agile shops, I highly recommend adding these activities to your backlog
    and ensuring this review takes place at least twice a year. The more often your
    team performs a review, hopefully, the more security remains in their minds.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 对于敏捷团队，我强烈建议将这些活动添加到你的待办事项中，并确保每年至少进行两次此类审查。你们团队审查的频率越高，希望他们心中对安全的重视也能维持得更好。
- en: Additionally, this is where I would also prescriptively recommend having a distinct
    level of automation in place that runs these scans against any release candidate
    host. Which automation tools you select is up to you or whatever your employer
    has already deemed the corporate standard. Perhaps you prefer scripts. Let’s dig
    into this a little deeper.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我还建议在此处实施一种独立的自动化程度，自动对任何发布候选主机进行扫描。你选择的自动化工具由你决定，或者由你的雇主已定为公司标准。也许你更喜欢脚本。让我们深入探讨一下。
- en: In the previous exercises, we downloaded the STIG SCAP profile and a general-purpose
    RHEL SCAP profile, set up a scanning host, and learned how to execute a scan.
    To make this a more normalized process, I have some recommendations for your CI/CD
    chain and your product prototypes.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的练习中，我们下载了STIG SCAP配置文件和通用RHEL SCAP配置文件，设置了扫描主机，并学习了如何执行扫描。为了使这一过程更加标准化，我有一些针对您的CI/CD链和产品原型的建议。
- en: Next, I’d like to share some lists of recommendations I have for your build
    chain, tasks to perform on your prototypes, and more.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我想分享一些我为您的构建链、原型测试以及更多任务提供的建议。
- en: 'These are my recommendations for your CI/CD chain:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我对您CI/CD链的建议：
- en: Build a permanent host for running these OpenSCAP scans
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为运行这些OpenSCAP扫描构建一个永久主机
- en: Maintain a library of appropriate SCAP profiles
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护适当的SCAP配置文件库
- en: Automate the scanning activities and distribution of the results reports
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化扫描活动和结果报告的分发
- en: Save your scan results as artifacts with your builds/releases for future reference
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将您的扫描结果作为工件与构建/发布一起保存，以便将来参考
- en: Throw nothing away – maintain an audit trail (always)
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不丢弃任何东西——保持审计痕迹（始终）
- en: 'These are my recommendations for your prototypes/release candidates:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我对您原型/发布候选版的建议：
- en: Start with the highest level of security possible
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从可能的最高安全级别开始
- en: Enable only what sockets, ports, or services are critical to your appliance’s
    functioning
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅启用对您设备功能至关重要的插座、端口或服务
- en: Have non-root service accounts that can run systemd services and be used for
    support and scanning activities
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有非root的服务帐户，这些帐户可以运行systemd服务，并用于支持和扫描活动
- en: Ensure each host has SSH enabled
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保每个主机都启用了SSH
- en: Ensure that the `openscap-utils` package is installed
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保安装了`openscap-utils`包
- en: Failure to integrate and automate compliance scanning into your process in the
    long term (and maybe the short term too) will negatively impact the quality of
    your product. My final recommendation is not to ignore security concerns during
    any stage of your product’s life cycle. Make it a component of every process and,
    eventually, it will become second nature for you and your product team.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未能将合规扫描集成并自动化到您的长期（也许是短期）流程中，将会对您产品的质量产生负面影响。我的最终建议是在产品生命周期的任何阶段都不要忽视安全问题。将其作为每个过程的组成部分，最终，它将成为您和您的产品团队的第二天性。
- en: 'Let’s move on to the trophy phase of your efforts: actually getting your product
    certified.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入您努力的最终阶段：实际获得产品认证。
- en: How do I certify my solution?
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何认证我的解决方案？
- en: 'The subject of getting your solution certified probably deserves a whole book
    on its own. There are so many different types of certifications for different
    industry and government standards. That said, for our security focus I have chosen
    to distill this into the holy grail of certifications: the coveted FIPS 140-3
    certification with NIST.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何获得您的解决方案认证，可能值得写一本完整的书。不同的行业和政府标准有许多不同类型的认证。也就是说，针对我们的安全重点，我选择将其精炼为认证的圣杯：与NIST共同获得的FIPS
    140-3认证。
- en: Not to discourage or dissuade you, but I must mention that several companies
    have built a business model to *help* other businesses navigate this painstaking
    and lengthy process with the labs and NIST. You can easily find them online with
    a simple Google search when looking for FIPS certification. Their services will
    most likely show at the top of all results.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 并不是要打击或劝阻您，但我必须提到，已经有一些公司构建了商业模式，*帮助*其他企业在实验室和NIST之间通过这项艰苦且漫长的过程。您可以通过简单的Google搜索在寻找FIPS认证时轻松找到它们。它们的服务很可能会出现在所有搜索结果的顶部。
- en: FIPS 140-3 certification is not just a software certification, but a software
    on specified hardware validation. The testing labs that provide these services
    to the process use a specific hardware platform for each testing cycle. Which
    platform that is may vary by the labs themselves.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: FIPS 140-3认证不仅仅是软件认证，它还是针对特定硬件的验证。为该过程提供这些服务的测试实验室每个测试周期使用特定的硬件平台。每个实验室所使用的平台可能有所不同。
- en: The process is complex, and not without costs. Depending on the security level
    of your solution’s certification, you could be paying NIST from $1,000 to well
    over $4,000\. This does not include any fees charged by the lab that does the
    heavy lifting for NIST.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程是复杂的，并且不是没有成本的。根据您解决方案认证的安全级别，您可能需要向NIST支付从$1,000到超过$4,000的费用。这还不包括由为NIST进行繁重工作的实验室收取的任何费用。
- en: 'To find a NIST-accredited lab, you need to search the NIST website. Here’s
    a good place to start: [https://www-s.nist.gov/niws/index.cfm?event=directory.search#no-back](https://www-s.nist.gov/niws/index.cfm?event=directory.search#no-back).'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到一个NIST认证的实验室，你需要在NIST网站上进行搜索。这里是一个很好的起点：[https://www-s.nist.gov/niws/index.cfm?event=directory.search#no-back](https://www-s.nist.gov/niws/index.cfm?event=directory.search#no-back)。
- en: Once the lab has tested your product and submitted its findings to NIST, the
    NIST team then reviews all the documentation and hopefully, eventually, issues
    a certification. The coveted prize can then be searched for as all validated FIPS
    solutions (and their statuses) can be found at the NIST site shown in the following
    screenshot.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦实验室测试了你的产品并将结果提交给NIST，NIST团队将审核所有文档，并希望最终发出认证。此备受追捧的奖项随后可以被搜索，因为所有经过验证的FIPS解决方案（及其状态）都可以在NIST网站上找到，如下图所示。
- en: '![Figure 13.13 – Searching for validated/certified modules](img/B22104_13_13.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![图13.13 – 寻找已验证/认证的模块](img/B22104_13_13.jpg)'
- en: Figure 13.13 – Searching for validated/certified modules
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.13 – 寻找已验证/认证的模块
- en: FIPS certification re-branding by vendors
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 供应商的FIPS认证重新品牌
- en: The submittal, testing, validation, and certification process can take over
    two years. For anyone trying to bring a new competitive product to market, this
    timeframe is unfathomable. Few operating system vendors can lend a hand even if
    they are certified themselves. Red Hat has a program in which their Embedded Systems
    partners can leverage their existing certifications for their products that are
    built upon RHEL. How do I know this? I was one of three founders of the program.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 提交、测试、验证和认证过程可能需要超过两年的时间。对于任何试图将新竞争产品推向市场的人来说，这段时间简直不可思议。即使是已经认证的操作系统供应商，也很少能提供帮助。红帽有一个计划，在这个计划中，嵌入式系统合作伙伴可以利用他们基于RHEL构建的产品的现有认证。我怎么知道这些？因为我曾是该计划的三位创始人之一。
- en: A Red Hat partner choosing to take this path can work with the Red Hat Embedded
    Team, and they will provide appropriate paperwork (i.e., regarding the existing
    software certifications) that the partner can then take to NIST and their chosen
    lab to accelerate the process to get their solution certified. With this certification
    re-branding documentation, the process, which could have taken over two years,
    may be shortened to a few weeks or a few months as testing an existing certified
    module is not necessary. This provides extreme value and a path to revenue for
    that partner.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 选择走这条路径的红帽合作伙伴可以与红帽嵌入式团队合作，他们将提供适当的文件（即关于现有软件认证的文件），合作伙伴可以将这些文件带到NIST及其选择的实验室，加速认证过程。凭借这份认证重新品牌的文档，原本可能需要超过两年的过程，可能会缩短为几周或几个月，因为无需对已认证的模块进行测试。这为合作伙伴提供了巨大的价值，并为其带来了收入的路径。
- en: Summary
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We’ve come a long way together in this chapter. We have reviewed how adherence
    to government standards is important regardless of whether or not your industry
    dictates so. We’ve also taken a glance at some key standards that transcend many
    verticals and how to implement the most important ones. Finally, we wrapped up
    how to certify your appliance with NIST and some of the fun that process will
    bring you. Your experiences with the examples and exercises should give you newly
    found confidence that these efforts are not impossible, but very achievable.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们走了很长一段路。我们回顾了遵守政府标准的重要性，无论你的行业是否要求这样做。我们还简要了解了一些跨越多个领域的关键标准，并学习了如何实施最重要的标准。最后，我们总结了如何通过NIST认证你的设备以及这个过程可能带来的乐趣。你在例子和练习中的经历应该让你获得了新的信心，这些努力并非不可能，而是非常可实现的。
- en: Let’s move on to our final chapter, where we will discuss our most important
    resource, our end-users, and how their feedback can assist your processes. We’ll
    also do a full review of the lessons learned throughout the book.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入最后一章，在这一章中，我们将讨论最重要的资源——最终用户，以及他们的反馈如何帮助你的流程。我们还将对本书中学到的所有内容进行全面回顾。
