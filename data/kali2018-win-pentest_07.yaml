- en: Gaining Access
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取访问权限
- en: This chapter will demonstrate several use cases for Kali Linux tools such as
    Social Engineering Toolkit and Metasploit to exploit Windows vulnerabilities.
    You will also learn to use the exploit databases provided with Kali Linux, and
    others. You will learn to use tools to exploit several common Windows vulnerabilities,
    and guidelines to create and implement new exploits for upcoming Windows vulnerabilities.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将演示使用Kali Linux工具（如社会工程工具包和Metasploit）利用Windows漏洞的几种用例。您还将学习使用Kali Linux提供的利用数据库以及其他工具。您将学习使用工具来利用几种常见的Windows漏洞，并了解创建和实施新的利用以应对即将出现的Windows漏洞的准则。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中涵盖以下主题：
- en: Pwnage
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pwnage
- en: Exploiting Windows systems with Metasploit
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Metasploit利用Windows系统
- en: Using advanced footprinting
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用高级足迹
- en: Pwnage
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pwnage
- en: Here's where the fun stuff begins. **Pwnage**! For those not in the know. **Pwn**
    is hacker speak for **own**. If you have been pwned, your systems have been **owned**.
    In other words, I own your system now I am in full control of it. Exploitation
    is the process of owning or compromising the machine. So far, we have gathered
    information on our target by gathering public information on the target and scanned
    the target network for vulnerabilities. We are now ready for the attack.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是有趣的开始。**Pwnage**！对于不了解的人来说。**Pwn**是黑客用语，意思是**拥有**。如果你被pwned，你的系统已经被**拥有**。换句话说，我现在拥有你的系统，我完全控制它。利用是拥有或妥协机器的过程。到目前为止，我们已经通过收集目标的公共信息和扫描目标网络的漏洞来收集了有关我们目标的信息。我们现在准备进行攻击。
- en: Black Hats will pick the busiest times to hit your network and do it slowly
    and quietly as possible. They will try to stay under the noise of normal operations.
    Yes, there are more eyes on the network at that time, but as a smart cracker knows,
    if you are slow and quiet, a lot of traffic is a good cover.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客会在最繁忙的时候攻击你的网络，并尽可能慢慢地、悄悄地进行。他们会试图保持在正常运营的噪音下。是的，在那个时候网络上有更多的眼睛，但是聪明的黑客知道，如果你慢慢地、安静地行动，大量的流量是一个很好的掩护。
- en: If you're the security operations guy and you're testing your own network, this
    is not a good idea. Test during your network during off-hours is best when the
    CEO is asleep. If any accidents happen during the test, things can be fixed and
    working before the next day, when the CEO is awake. Exploitation doesn't normally
    kill a system beyond repair during testing, but some exploits will sometimes hang
    a service, or completely hang the system to the point where it needs a reboot.
    The entire purpose of some exploits is to perform **Denial of Service** (**DoS**)
    to a service, or a system. Bo doesn't see these as true exploits. Yes, you have
    attacked the system, and taken it offline; but you haven't penetrated the machine.
    You have made a successful attack but you don't pwn it. The real bad guys don't
    use DoS attacks. They want to get in, and steal or copy data from all over your
    network. Services going down draws the attention of IT. Not a good thing, if you
    are trying to break in. DoS attacks are script kiddie stuff; if this is all you
    know, don't call yourself a hacker.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是安全运营人员，正在测试自己的网络，这不是一个好主意。最好在CEO睡觉的时候测试网络。如果在测试期间发生任何意外，可以在CEO醒来之前修复并使其正常工作。利用在测试期间通常不会使系统无法修复，但有些利用有时会挂起服务，或者完全挂起系统，需要重新启动。有些利用的整个目的是对服务或系统执行**拒绝服务**（**DoS**）。Bo认为这些不是真正的利用。是的，你已经攻击了系统，并使其下线；但你没有渗透到机器里。你已经成功攻击了，但你没有控制它。真正的坏人不使用DoS攻击。他们想要进入，并从你的网络中窃取或复制数据。服务下线会引起IT的注意。如果你试图入侵，这不是一个好事。DoS攻击是小白鼠的东西；如果这是你所知道的一切，不要自称为黑客。
- en: DoS tools are considered exploits also because they work on the system in the
    same method. A DoS hangs a system. An exploit to gain access often hangs a system
    long enough for you to inject some type of code to gain access. Basically, you
    make the machine go stupid for long enough to establish a connection. When your
    exploit tool fails, it may just look like a DoS attack. If you have a choice,
    it is better to have the failed exploit look like a temporary denial of service,
    which can be misinterpreted as an innocent NIC failure at an origin host, than
    as a cracker testing exploit code on the target system.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: DoS工具也被认为是利用，因为它们以相同的方法作用于系统。DoS会使系统挂起。用于获取访问权限的利用通常会使系统挂起足够长的时间，以便您注入某种代码来获取访问权限。基本上，你让机器变得愚蠢足够长的时间来建立连接。当你的利用工具失败时，它可能看起来像是一次DoS攻击。如果可以选择，最好让失败的利用看起来像是暂时的拒绝服务，这可能会被误解为源主机上的无辜NIC故障，而不是黑客在目标系统上测试利用代码。
- en: '**Hacker Tip**:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**黑客提示**：'
- en: Whenever you are testing, always have someone or some way to reboot a service
    of a system when you are testing them. Always have contact information for people
    to call *when things go wrong*, before you start testing. Although you may try
    to be quiet, and not knock anything off-line, have your *Plan B* in place. Also,
    always have your *Get out of Jail* card before testing!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 无论何时进行测试，始终要有人或某种方式在测试时重新启动服务或系统。在开始测试之前，始终要有人员的联系信息*当事情出错时*。尽管你可能试图保持安静，不让任何东西离线，但要有你的*计划B*。此外，始终在测试之前准备好你的*脱离监狱*卡！
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Use the Metasploit framework to exploit Windows operating systems
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Metasploit框架来利用Windows操作系统
- en: Advanced footprinting goes beyond mere vulnerability scanning
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级足迹超越了简单的漏洞扫描。
- en: Exploit a segmented network using the pivot
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用枢纽来利用分段网络
- en: Exploiting Windows systems with Metasploit
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Metasploit利用Windows系统
- en: '"Fear not the command line.."'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: “不要害怕命令行..”
- en: '- Bo Weaver'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '- Bo Weaver'
- en: 'The Metasploit framework is the ultimate toolkit. There was a time when building
    a pen-testing machine would take days. Every individual exploit tool would have
    to be the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架是终极工具包。曾经有一段时间，构建一个渗透测试机器需要花费数天的时间。每个单独的利用工具都必须是以下内容：
- en: Tracked down and researched
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 追踪和研究
- en: Downloaded (sometimes over dial-up internet connection)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载（有时通过拨号互联网连接）
- en: Compiled from source
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从源代码编译
- en: Tested on your cracking platform
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的破解平台上测试
- en: Now, from the great people at Rapid7 comes the Metasploit framework. Metasploit
    brings just about every tool you'll ever need as a plugin or function within the
    framework. It doesn't matter what OS or even what kind of device you discover
    on the network you are testing, Metasploit is likely will have a module to exploit
    it. Bo does 90% of his work with Metasploit.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，来自Rapid7的伟大人民带来了Metasploit框架。Metasploit几乎为您提供了您在框架中需要的每个工具作为插件或功能。无论您在测试的网络上发现了什么操作系统甚至什么类型的设备，Metasploit都可能有一个模块来利用它。Bo的90%工作都是用Metasploit完成的。
- en: Metasploit comes in two versions—the Community version and the Professional
    version. At the command line they are both the same. The major thing you get with
    the Professional version is a nice web interface and reporting tools that will
    build reports for you from that interface. You also get some good tools for testing
    large networks that aren't available from the command line. One feature is that
    you can pick a machine or several machines from the imported vulnerability scan
    and the Pro version will automatically pick out modules and run these against
    the target machines. If you working on large networks, or doing a lot of testing,
    get the Professional version. It is well worth the money, and you can easily use
    it on your Kali attack platform.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit有两个版本——社区版本和专业版本。在命令行上，它们都是一样的。专业版的主要功能是一个漂亮的Web界面和报告工具，可以从该界面为您生成报告。您还可以获得一些用于测试大型网络的好工具，这些工具无法从命令行获得。一个功能是您可以从导入的漏洞扫描中选择一个或多个机器，专业版将自动选择模块并针对目标机器运行这些模块。如果您在大型网络上工作，或者进行大量测试，请获取专业版。它绝对物有所值，而且您可以轻松地在Kali攻击平台上使用它。
- en: For this book, we will be using the Community version that comes with Kali Linux.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本书，我们将使用随Kali Linux提供的社区版本。
- en: Warning! If you do decide to buy the Professional version, do not uninstall
    the Community version of Metasploit. This may break Kali updates. When you install
    the Pro version, it will install in its own directory. The Pro version will need
    some of the Community libraries in order to run.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 警告！如果您决定购买专业版，请不要卸载Metasploit的社区版本。这可能会破坏Kali的更新。安装专业版时，它将安装在自己的目录中。专业版将需要一些社区库才能运行。
- en: When using Metasploit at the command line, the *Tab *key will do a lot of auto-complete
    for you. For `show options`, type `sh<tab> o<tab>`. You will see this will auto-complete
    the commands. This works throughout Metsploit.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行使用Metasploit时，*Tab*键会为您自动完成很多操作。对于`show options`，输入`sh<tab> o<tab>`。您会看到这将自动完成命令。这在Metsploit中始终有效。
- en: Also to repeat commands, the arrow up key will take you to previous commands.
    This is really useful. For example, `set RHOST 192.168.202.3` when changing modules
    and attacking the same machine, arrowing up to the previous commands does save
    time.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，要重复命令，向上箭头键将带您到先前的命令。这真的很有用。例如，当更改模块并攻击同一台机器时，`set RHOST 192.168.202.3`，向上箭头键到先前的命令可以节省时间。
- en: OK, let's fire up Metasploit. First, we need to turn on the Metasploit services
    in the Menu bar. The following screenshot shows an LxDE desktop menu. Go to **Exploitation
    Tools** |** metasploit framework****:**
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们启动Metasploit。首先，我们需要在菜单栏中启动Metasploit服务。以下屏幕截图显示了LXDE桌面菜单。转到**Exploitation
    Tools** |** metasploit framework****:**
- en: '![](img/cdc352e4-49b1-4007-b143-aea5c72d8c69.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cdc352e4-49b1-4007-b143-aea5c72d8c69.png)'
- en: 'A Terminal window will open and the services will start up. The next screenshot
    shows what the Terminal will show you as it starts up. Metasploit uses the PostgreSQL
    database server. It can take several minutes for the services to start on the
    first run of the service. In the following screenshot, we see the start up skipping
    initialization. Metasploit is already set up on this machine. You will see this
    after the first time it is set up:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一个终端窗口将打开，服务将启动。下一个屏幕截图显示了启动时终端将向您显示的内容。Metasploit使用PostgreSQL数据库服务器。在第一次运行服务时，可能需要几分钟才能启动。在下一个屏幕截图中，我们看到启动跳过初始化。Metasploit已经在这台机器上设置好了。第一次设置后，您将看到这一点：
- en: '![](img/84deaf5c-a145-498e-8321-de1bdaef7885.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84deaf5c-a145-498e-8321-de1bdaef7885.png)'
- en: '**Yes Hackers Love Shells!**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**是的，黑客喜欢Shell！**'
- en: Once the services have started, type `msfconsole` to start the Metasploit console.
    When we type `workspace,` we can see the workspaces. We will set up a new workspace
    shortly.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦服务启动，输入`msfconsole`启动Metasploit控制台。当我们输入`workspace`时，我们可以看到工作区。我们将很快设置一个新的工作区。
- en: '**Hacker tip**:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**黑客提示**：'
- en: The first time you start the Metasploit console, it will create the database,
    so let it take its time. The next time you use it, it will start faster.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次启动Metasploit控制台时，它将创建数据库，所以让它花点时间。下一次使用它时，它将启动得更快。
- en: 'To get a list of the console commands, type `help` at any time:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取控制台命令列表，请随时输入`help`：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To get an individual command help, type `help <command>`, as seen in the following
    screenshot. We have two examples showing the `use` and `hosts` command help. We
    have a listing showing its usage and explanation of any flags that work with the
    command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取单个命令的帮助，请输入`help <command>`，如下面的屏幕截图所示。我们有两个示例显示`use`和`hosts`命令的帮助。我们有一个列表显示其用法和与命令一起使用的任何标志的解释：
- en: '![](img/b6263e6a-0bb2-42e4-b297-0f11c0467696.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6263e6a-0bb2-42e4-b297-0f11c0467696.png)'
- en: First, we need to set up a workspace. Workspaces are a big help in keeping your
    testing in order. The workspaces hold all your collected data of the test including
    any login credentials that are collected and any system data collected during
    an exploit. It's best to keep your testing data separate so you can compare the
    results of a previous test later. We're going to set up a project called `TestCompany-int-20180830`.
    This is a way to name projects, with `<client-name>-[ int (internal) | ext (external)
    ]-<start-date (unix-style)>`. This helps you, 6 months down the road, to remember
    which test is what.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要设置一个工作区。工作区在保持测试有序方面非常有帮助。工作区包含测试的所有收集数据，包括在利用期间收集的任何登录凭据和任何系统数据。最好将测试数据分开，以便稍后可以比较以前测试的结果。我们将设置一个名为`TestCompany-int-20180830`的项目。这是一种命名项目的方式，格式为`<client-name>-[
    int（内部）| ext（外部）]-<start-date（unix-style）>`。这样可以帮助您在6个月后记住哪个测试是什么。
- en: 'To create a new project, type the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建新项目，请输入以下内容：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: By typing `workspace`, we see the list of the workspaces in the database. When
    you run the command, you will see an asterisk by the `TestCompany-int-20180830`
    workspace. This shows that when you created the workspace, you also entered it.
    The asterisk denotes the active workspace.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过输入`workspace`，我们可以看到数据库中工作区的列表。运行命令时，您将在`TestCompany-int-20180830`工作区旁看到一个星号。这表明当您创建工作区时，您也进入了它。星号表示活动工作区。
- en: 'To enter the workspace, type the following:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要进入工作区，请输入以下内容：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](img/b087d0b8-a037-4b4b-9a21-85eacf724f88.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b087d0b8-a037-4b4b-9a21-85eacf724f88.png)'
- en: 'We can pull data from a scan into the workspace using the `db_import` command
    from an XML file generated by the scanning application. All scanning applications
    will export their data to XML and Metasploit will automatically import the data
    from the major scanning applications:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`db_import`命令从扫描应用程序生成的XML文件中将数据从扫描中提取到工作区。所有扫描应用程序都将其数据导出到XML，Metasploit将自动从主要扫描应用程序导入数据：
- en: '![](img/7395ccbb-6e48-4cf7-ae3f-79b7a5161ac8.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7395ccbb-6e48-4cf7-ae3f-79b7a5161ac8.png)'
- en: 'Here is a list of the supported scan types that will automatically import into
    Metasploit:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将自动导入Metasploit的支持的扫描类型列表：
- en: Acunetix
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Acunetix
- en: Amap Log
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amap日志
- en: Amap Log -m
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amap日志 -m
- en: Appscan
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Appscan
- en: Burp Session XML
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Burp会话XML
- en: Burp Issue XML
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Burp问题XML
- en: CI
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CI
- en: Foundstone
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Foundstone
- en: FusionVM XML
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FusionVM XML
- en: IP Address List
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP地址列表
- en: IP360 ASPL
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP360 ASPL
- en: IP360 XML v3
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP360 XML v3
- en: Libpcap Packet Capture
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Libpcap数据包捕获
- en: Masscan XML
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Masscan XML
- en: Metasploit PWDump Export
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit PWDump导出
- en: Metasploit XML
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit XML
- en: Metasploit Zip Export
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit Zip导出
- en: Microsoft Baseline Security Analyzer
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft基线安全分析器
- en: NeXpose Simple XML
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NeXpose简单XML
- en: NeXpose XML Report
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NeXpose XML报告
- en: Nessus NBE Report
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nessus NBE报告
- en: Nessus XML (v1)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nessus XML（v1）
- en: Nessus XML (v2)
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nessus XML（v2）
- en: NetSparker XML
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NetSparker XML
- en: Nikto XML
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nikto XML
- en: Nmap XML
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nmap XML
- en: OpenVAS Report
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenVAS报告
- en: OpenVAS XML
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenVAS XML
- en: Outpost24 XML
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Outpost24 XML
- en: Qualys Asset XML
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qualys资产XML
- en: Qualys Scan XML
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qualys扫描XML
- en: Retina XML
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Retina XML
- en: Spiceworks CSV Export
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spiceworks CSV导出
- en: Wapiti XML
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wapiti XML
- en: You can also import hosts, services, and network information using Nmap and
    directly import Nmap's ouput into Metasploit using the MSFconsole `db_nmap` command.
    This command works with all the normal `nmap` command line flags. `db_` tells
    Metasploit to import the data. Running just `nmap` will run the scan but no data
    will be directly imported into Metasploit. You will just see the output of the
    command.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用Nmap导入主机、服务和网络信息，并直接将Nmap的输出导入Metasploit，使用MSFconsole的`db_nmap`命令。此命令适用于所有正常的`nmap`命令行标志。`db_`告诉Metasploit导入数据。只运行`nmap`将运行扫描，但不会直接将数据导入Metasploit。您只会看到命令的输出。
- en: 'In order to directly import an Nmap scan, run the following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要直接导入Nmap扫描，请运行以下命令：
- en: '[PRE3]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`-A` tells `nmap` to run all tests. `-sV` tells Nmap to record the versioning
    of any running services. `-O` tells Nmap to record the operating system of any
    running hosts. We will see the output of the running scan but this data is also
    collected to the database. We can then also see the results after importing by
    running the `hosts` and `services` commands.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`-A`告诉`nmap`运行所有测试。`-sV`告诉Nmap记录任何运行服务的版本。`-O`告诉Nmap记录任何运行主机的操作系统。我们将看到运行扫描的输出，但这些数据也被收集到数据库中。然后我们还可以通过运行`hosts`和`services`命令来查看导入后的结果。'
- en: 'The following code shows the results of running these commands:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示了运行这些命令的结果：
- en: '[PRE4]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: With the `hosts` command, we get a list of all active IP addresses, any collected
    machine names, and the operating system of the machine. By running the services
    command, we get a list of all running services on the network and their related
    IP address. You can change the table listings from the command by using the `-c` flag.
    The help for help on this.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`hosts`命令，我们可以获得所有活动IP地址、任何收集的机器名称和机器的操作系统的列表。通过运行服务命令，我们可以获得网络上所有运行的服务及其相关的IP地址列表。您可以使用`-c`标志从命令更改表列表。有关此信息的帮助，请查看帮助。
- en: '![](img/8675d5ad-0041-4adf-a65a-a44b80ec01b3.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8675d5ad-0041-4adf-a65a-a44b80ec01b3.png)'
- en: Using advanced Footprinting
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用高级足迹
- en: Vulnerability scans only provide some information. When actually attacking the
    machine, you want to do some deep level probes to check for helpful information
    leaks. From the scans, we can see a Windows Domain Controller and a Windows File
    Server, both running Windows 2008 Server. Both have SMB/NetBIOS services running.
    This looks like the most likely path of attack. SMB/NetBIOS services have known
    weaknesses. So, let's look closer at these services.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞扫描只提供了一些信息。实际攻击机器时，您需要进行一些深层探测，以检查有用的信息泄漏。从扫描中，我们可以看到一个Windows域控制器和一个运行Windows
    2008服务器的Windows文件服务器。两者都在运行SMB/NetBIOS服务。这看起来是最可能的攻击路径。SMB/NetBIOS服务存在已知的弱点。因此，让我们更仔细地查看这些服务。
- en: Before we get fully into footprinting, a note about notes. Especially when getting
    into manual probes, remember to keep notes on your outputs and your findings.
    Copy/paste is your best friend. Vulnerability scans always produce nice reports,
    with the data all compiled in one place. Manually probing doesn't, so it's up
    to you and you will gather a lot of data you'll want later. Use KeepNote, which
    we visited first in [Chapter 1](b18fe074-058f-410f-86de-77499a727708.xhtml), *Choosing
    Your Distro*.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在完全进行足迹识别之前，关于笔记的一点说明。特别是在进行手动探测时，请记住记录您的输出和发现。复制/粘贴是您最好的朋友。漏洞扫描总是生成漂亮的报告，其中所有数据都编译在一个地方。手动探测不会这样，所以这取决于您，您将收集许多以后会用到的数据。使用
    KeepNote，我们在[第1章](b18fe074-058f-410f-86de-77499a727708.xhtml)中首先访问的内容，*选择您的发行版*。
- en: 'The following is Bo''s normal layout for testing. The best thing about KeepNote
    is that the framework is very open and can be set up and used as you like. This
    setup uses the following:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Bo 进行测试的正常布局。KeepNote 最好的地方在于其框架非常开放，可以根据您的喜好进行设置和使用。此设置使用以下内容：
- en: A folder for the client company in which it is found
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到客户公司的文件夹
- en: A page for general project notes
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般项目笔记页面
- en: A folder for targets
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标文件夹
- en: Individual pages for each system being tested.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个正在测试的系统的单独页面。
- en: KeepNote even comes with a nice **Export to HTML** tool where you can export
    your notes and they can be read by others without them having KeepNote.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: KeepNote 甚至带有一个不错的 **导出为 HTML** 工具，您可以使用该工具导出您的笔记，其他人可以在没有 KeepNote 的情况下阅读它们。
- en: '![](img/7e59aa05-5263-48b7-a2e3-441fb02a59a2.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7e59aa05-5263-48b7-a2e3-441fb02a59a2.png)'
- en: 'First, let''s use `nbtscan` to get a quick look at the domain name or workgroup
    name and other basic NetBIOS data we''ll need. So let''s open a new Terminal window
    and run the following command:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们使用 `nbtscan` 快速查看我们需要的域名或工作组名称以及其他基本的 NetBIOS 数据。因此，让我们打开一个新的终端窗口并运行以下命令：
- en: '[PRE5]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `-v` flag is for verbose mode and will print out all the gathered information.
    The `-s :` flag will separate the data with a colon tabbed format:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`-v` 标志用于详细模式，并将打印出所有收集到的信息。`-s :` 标志将使用冒号制表格式分隔数据：'
- en: '![](img/550eb36b-0503-433e-9602-d681dc49a506.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/550eb36b-0503-433e-9602-d681dc49a506.png)'
- en: We can see that the domain name is `LAB1` and all machines are members of that
    domain. We will need this information later.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到域名是 `LAB1`，所有计算机都是该域的成员。我们以后会需要这些信息。
- en: 'Back in the MSFconsole window, run the following command:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到 MSFconsole 窗口，运行以下命令：
- en: '[PRE6]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We get a listing of all the modules related the SMB service. This is a listing
    of scanning, probes, exploits, and post-exploit modules. First, we are going to
    check for exposed shares and check that the guest account has any rights on the
    machine. We pick `auxiliary/scanner/smb/smb_enumshares`. You can select the text
    and copy it by hitting *Ctrl* + *Shift* + *C* and you can paste using *Ctrl* +
    *Shift* +*V*:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了与 SMB 服务相关的所有模块的列表。这是扫描、探测、利用和后利用模块的列表。首先，我们将检查是否有共享目录，并检查访客帐户是否有任何权限。我们选择
    `auxiliary/scanner/smb/smb_enumshares`。您可以通过按 *Ctrl* + *Shift* + *C* 选择文本并复制它，然后可以使用
    *Ctrl* + *Shift* +*V* 粘贴：
- en: '![](img/cfff891e-5022-47e6-ada3-3ee930c0b7de.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cfff891e-5022-47e6-ada3-3ee930c0b7de.png)'
- en: 'To use the module, run the following command:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用该模块，请运行以下命令：
- en: '[PRE7]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will put you into the module. The way that we use this module is the normal
    way of using all of the modules. The configurations for the different modules
    may change the operation of getting into a module but the configurations are the
    same.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使您进入模块。我们使用此模块的方式是使用所有模块的正常方式。不同模块的配置可能会改变进入模块的操作，但配置是相同的。
- en: 'In the reverse of the way we got into the module with the `use` command, the
    `use` command is used to open any module. To back out of a module, type the following:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与使用 `use` 命令进入模块的方式相反，`use` 命令用于打开任何模块。要退出模块，请输入以下命令：
- en: '[PRE8]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This will take you back to your MSF prompt.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这将带您回到 MSF 提示符。
- en: 'Run the following command:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE9]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: With this command, we can see information and help information about the module
    without actually entering the module.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此命令，我们可以查看有关模块的信息和帮助信息，而无需实际进入模块。
- en: 'After entering the module, type the following command:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入模块后，输入以下命令：
- en: '[PRE10]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This will show you the usable parameters for the module. With this module, we
    will need to set the hosts to probe the domain name and the user account. By running
    this module with the `SMBUser` account as blank, you can check to see if the `Everyone` group
    has any permissions. Setting it to `Guest` will check that the guest account is
    enabled and will also check the `Everyone` group.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示模块的可用参数。使用此模块，我们需要设置要探测的域名和用户帐户的主机。通过使用空的 `SMBUser` 帐户运行此模块，您可以检查 `Everyone`
    组是否具有任何权限。将其设置为 `Guest` 将检查访客帐户是否已启用，并将检查 `Everyone` 组。
- en: Notice we have a parameter called `RHOSTS`. This is the parameter to set the
    host you are going to probe. This is a scanner module so the parameter is plural
    and will accept a network range or a single host.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们有一个名为 `RHOSTS` 的参数。这是设置要探测的主机的参数。这是一个扫描器模块，因此参数是复数形式，可以接受网络范围或单个主机。
- en: 'We set the configuration by typing the following:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入以下命令设置配置：
- en: '[PRE11]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The `show options` will pull up the configuration again, so you can check it
    before running the scan:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`show options` 将再次显示配置，因此您可以在运行扫描之前检查它：'
- en: '![](img/edb766b0-e757-429f-8369-1bb96a0b3148.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/edb766b0-e757-429f-8369-1bb96a0b3148.png)'
- en: Interpreting the scan and building on the result
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解释扫描并根据结果进行构建
- en: 'In the following screenshot, we can see the results of the scanner run by typing
    the following:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下截图中，我们可以通过输入以下命令查看扫描结果：
- en: '[PRE12]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We can see that the scan failed but did give us valuable information. First,
    by the scan failing, we now know that there are no shares open to the Everyone
    group. We can tell by the response that the service is active but refusing to
    allow a connection. Second, we can see that, in fact, the guest account is disabled.
    One could say this has led nowhere but from this we have determined the service
    is active and accepting connections from our IP address. This is important information
    for our next move:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到扫描失败了，但给了我们宝贵的信息。首先，通过扫描失败，我们现在知道没有共享对Everyone组是开放的。通过响应，我们可以看出服务是活跃的，但拒绝连接。其次，我们可以看到，事实上，访客账户被禁用了。有人可能会说这没有任何进展，但从中我们已经确定了服务是活跃的，并接受来自我们IP地址的连接。这对我们下一步行动是重要信息：
- en: '![](img/f0693af2-5e77-42c9-9453-1e8a13155802.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0693af2-5e77-42c9-9453-1e8a13155802.png)'
- en: 'The SMB service uses RPC pipes to transfer information and the RPC service
    is known for leaking system information sometimes, so let''s look at what we got.
    To do this, we will use the DCERPC Pipe Auditor module:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: SMB服务使用RPC管道传输信息，RPC服务有时会泄露系统信息，所以让我们看看我们得到了什么。为了做到这一点，我们将使用DCERPC Pipe Auditor模块：
- en: '[PRE13]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In the following code, we see the module configuration. We can use the arrow
    keys to arrow up to the configurations from the earlier module and set the `SMBDomain`
    and `RHOSTS` settings:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，我们看到了模块配置。我们可以使用箭头键向上箭头到之前模块的配置，并设置`SMBDomain`和`RHOSTS`设置：
- en: '[PRE14]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](img/08b7b5a8-894b-4177-b3f9-00d41785fd22.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08b7b5a8-894b-4177-b3f9-00d41785fd22.png)'
- en: It seems our SMB service is well locked down. We'll see about that in a minute.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我们的SMB服务被很好地锁定了。我们马上就会看到。
- en: Looking over the earlier scans made, we can tell the machine hasn't been patched
    in a while. Also from our network footprinting, we know that this is a Windows
    2008 server so this rules out using exploits earlier than 2008\. We can also tell
    from our probes that there are weak links in the configuration of the server.
    We need an exploit that will work around these roadblocks.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 通过之前的扫描，我们可以看出这台机器已经有一段时间没有打补丁了。另外从我们的网络足迹，我们知道这是一个Windows 2008服务器，所以这排除了使用早于2008年的漏洞利用。我们还可以从我们的探针中得知服务器配置存在弱点。我们需要一个能绕过这些障碍的漏洞利用。
- en: Picking the right exploit is a matter of experience and trial and error. Not
    all work, and some take more than one try to exploit a system. Some work sometimes
    and then fail on the next try. Don't give up if at first you don't succeed.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 选择合适的漏洞利用是经验和反复尝试的问题。并非所有的漏洞利用都有效，有些可能需要多次尝试才能成功攻击系统。有些有时有效，然后在下一次尝试时失败。如果一开始没有成功，不要放弃。
- en: 'In the following code, we have picked `auxiliary/scanner/smb/smb_ms17_010`.
    This will check for systems vulnerable to the leaked exploits from the NSA''s
    Equation Group by the Shadow Brokers. These exploits are EnernalBlue, EternalRomance,
    EternalChampion, and EternalSynergy. These exploits are also the basis of the
    widely known ransomware viruses, Wanacry and Petya, which reeked havoc on many
    a network across the internet. These exploits were the attack vector to gain access,
    upload, and run the payload, which encrypted the drives of the infected machine.
    Later, we will use these exploits to accomplish the same task except, instead
    of damaging the data, we will loot the system of system information and user credentials.
    So, let''s scan and see if we have any vulnerable hosts on our network. To use
    this scanning tool, type the following:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，我们选择了`auxiliary/scanner/smb/smb_ms17_010`。这将检查系统是否容易受到NSA的方程式组织通过Shadow
    Brokers泄露的漏洞利用的攻击。这些漏洞利用包括EnernalBlue、EternalRomance、EternalChampion和EternalSynergy。这些漏洞利用也是广为人知的勒索软件病毒Wanacry和Petya的基础，这些病毒曾在互联网上的许多网络中造成严重破坏。这些漏洞利用是攻击向量，用于获取访问权限、上传和运行有效载荷，加密受感染机器的驱动器。稍后，我们将使用这些漏洞利用来完成相同的任务，但是，我们不会破坏数据，而是窃取系统信息和用户凭据。所以，让我们扫描一下，看看我们的网络上是否有易受攻击的主机。要使用这个扫描工具，输入以下命令：
- en: '[PRE15]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This will put you into the module. To see the options needed, type the following
    command:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这将让你进入模块。要查看所需的选项，输入以下命令：
- en: '[PRE16]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You will then see the options, as listed here:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你会看到以下选项：
- en: '[PRE17]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We will need to set some options to run this:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要设置一些选项来运行这个：
- en: '[PRE18]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then set the following:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 然后设置以下内容：
- en: '[PRE19]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'When we look at the results, it seems we have quite a few vulnerable hosts
    to choose from, as shown in the following screenshot:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们查看结果时，似乎我们有很多易受攻击的主机可供选择，如下截图所示：
- en: '![](img/fee135af-1e7d-4069-bc71-2aeaa6fc2fe9.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fee135af-1e7d-4069-bc71-2aeaa6fc2fe9.png)'
- en: 'Lots of low hanging fruit. Let''s pick some. By running a search for `ms10_010`,
    we will find the exploits related to this vulnerability:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 很多易于攻击的目标。让我们挑一些。通过运行`ms10_010`的搜索，我们将找到与此漏洞相关的漏洞利用：
- en: '[PRE20]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'You''ll see the following exploits:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到以下的漏洞利用：
- en: '![](img/510f8e16-7530-4785-bc90-26b36b9262d7.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/510f8e16-7530-4785-bc90-26b36b9262d7.png)'
- en: We have three exploits from the same framework. The `ms17_010_eternalblue` exploit
    works best on 64-bit systems. Actually, if you type show payloads, you will see
    that only x64 payloads are shown. I have used x32-bit payloads and got this to
    run against 32-bit systems but this can hang a 32-bit system and cause it to either
    Blue Screen or reboot.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有来自同一框架的三个漏洞利用。`ms17_010_eternalblue`漏洞利用在64位系统上效果最好。实际上，如果你输入show payloads，你会发现只有x64
    payloads被显示出来。我曾经使用x32位payloads，并成功在32位系统上运行，但这可能会导致32位系统挂起，导致蓝屏或重启。
- en: The `ms17_010_psexec` exploit works best with the 32-bit systems. The `ms17_010_eternalblue_win8`
    exploit works best on Win8 and Win10 systems. This exploit will also bypass the
    ASLR protection on these systems.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`ms17_010_psexec`漏洞利用在32位系统上效果最好。`ms17_010_eternalblue_win8`漏洞利用在Win8和Win10系统上效果最好。这个漏洞利用还可以绕过这些系统上的ASLR保护。'
- en: I have found that these exploits don't work well on a domain controller. This
    is most likely due to the fact that a domain controller expects Active Directory
    login credentials and fails to allow a connection to the SMB service. It's best
    to go for another server and then move laterally to the domain controller. This
    will be our attack strategy here.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现这些漏洞在域控制器上效果不佳。这很可能是因为域控制器期望Active Directory登录凭据，并且无法允许连接到SMB服务。最好选择另一台服务器，然后横向移动到域控制器。这将是我们的攻击策略。
- en: 'From our scan earlier, we found we have one vulnerable 64-bit system, BO-SRV3\.
    We''ll use the `ms17_010_eternalblue` exploit to compromise this system. Load
    the module with the following code:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的扫描中，我们发现有一个易受攻击的64位系统，BO-SRV3。我们将使用`ms17_010_eternalblue`漏洞利用来妥协这个系统。使用以下代码加载模块：
- en: '[PRE21]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'For the options, you need to load the following:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 对于选项，您需要加载以下内容：
- en: '[PRE22]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To see the available payloads, type the following command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看可用的有效载荷，请输入以下命令：
- en: '[PRE23]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We will use the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下内容：
- en: '[PRE24]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'If everything looks good, we get the following:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切看起来正常，我们会得到以下结果：
- en: '[PRE25]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Bingo! We have a winner! We see that the exploit has successfully ran and we
    have a Meterpreter shell:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 中了！我们赢了！我们看到漏洞利用成功运行，我们有了一个Meterpreter shell：
- en: '![](img/7ec94160-17b4-447a-bf2d-458b076d4a99.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ec94160-17b4-447a-bf2d-458b076d4a99.png)'
- en: 'Running the following commands, we can see we are remotely connected to the
    system with full system level access:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令，我们可以看到我们远程连接到了具有完整系统级访问权限的系统：
- en: '[PRE26]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![](img/69a8ce8a-4f7f-46ea-be85-52e5a68a1fbc.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/69a8ce8a-4f7f-46ea-be85-52e5a68a1fbc.png)'
- en: 'It''s time to pillage and plunder:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候抢劫和掠夺了：
- en: '[PRE27]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In the following screenshot, we see we have dumped the local hashes:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们看到我们已经倒出了本地哈希：
- en: '![](img/64ffa220-da8a-40eb-865a-73d3bee3b9bb.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/64ffa220-da8a-40eb-865a-73d3bee3b9bb.png)'
- en: 'So we have the local administrator''s hash. Most likely this is also the local
    admin on the domain controller and other host, but let''s dump some Active Directory
    information too. To do this, we will need to load the Kiwi toolkit:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们有本地管理员的哈希。很可能这也是域控制器和其他主机上的本地管理员，但让我们也倒一些Active Directory信息。为了做到这一点，我们需要加载Kiwi工具包：
- en: '[PRE28]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To see the commands, type `help` at any time. The following is a list of Kiwi
    commands:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看命令，请随时输入`help`。以下是Kiwi命令列表：
- en: '[PRE29]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Using the `creds_all` command will get the `msv`, `wdigest`, `tspkg`, and `kerberos`
    credentials. It''s basically a dump of all saved or stored credentials on the
    machine. Notice we captured clear text domain credentials from a domain user that
    has recently logged into the system:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`creds_all`命令将获得`msv`、`wdigest`、`tspkg`和`kerberos`凭据。基本上是对机器上所有保存或存储的凭据的转储。请注意，我们从最近登录到系统的域用户那里捕获了明文域凭据：
- en: '![](img/c71f6cf4-9aa4-439a-8640-58270f1fcbbe.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c71f6cf4-9aa4-439a-8640-58270f1fcbbe.png)'
- en: So one down and with the credentials to hit the domain controller.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 所以一个已完成，有了攻击域控制器的凭据。
- en: 'Type the following to back out of the Meterpreter session without closing the
    session:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下内容以退出Meterpreter会话而不关闭会话：
- en: '[PRE30]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![](img/23125dc2-375c-408f-9b62-af31c2645e21.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23125dc2-375c-408f-9b62-af31c2645e21.png)'
- en: Exploiting a 32-bit system
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用32位系统
- en: 'In the previous sections, we attacked a 64-bit machine using the standard EternalBlue
    exploit. Now let''s compromise a 32-bit system using the `psexec` module. We are
    using this module since we gathered credentials from the last exploit. This time
    we are going after a workstation on the network. Workstations are normally used
    by a lot of different people so there should be a lot of stored credentials on
    this machine. The more credentials we have, the more access we have. To use this
    module, type the following:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的部分中，我们使用标准的EternalBlue漏洞攻击了64位机器。现在让我们使用`psexec`模块来妥协32位系统。我们使用这个模块，因为我们从上次的利用中收集了凭据。这次我们要攻击网络上的一个工作站。工作站通常被很多不同的人使用，所以这台机器上应该有很多存储的凭据。我们拥有的凭据越多，我们的访问权限就越大。要使用这个模块，请输入以下内容：
- en: '[PRE31]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We will need to load the same options as before but we will be attacking `172.16.42.173
    \\WIN7-01`:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要加载与之前相同的选项，但我们将攻击`172.16.42.173 \\WIN7-01`：
- en: '[PRE32]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Next, we need to pick a payload, so run the following command to see the available
    payloads:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要选择有效载荷，因此运行以下命令以查看可用的有效载荷：
- en: '[PRE33]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'On the last exploit, when we ran this command, we only saw 64-bit payloads.
    This time, we see both 32- and 64-bit payloads to choose from. WIN7-01 is 32-bit
    so we will need to pick the proper payload:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个利用中，当我们运行此命令时，我们只看到64位有效载荷。这次，我们看到可以选择32位和64位有效载荷。WIN7-01是32位的，所以我们需要选择正确的有效载荷：
- en: '[PRE34]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: You will notice this is the same type of reverse TCP payload but doesn't show
    the x64 in its command line. This is the one for the 32-bit system.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到这是相同类型的反向TCP有效载荷，但在其命令行中不显示x64。这是32位系统的有效载荷。
- en: 'If you didn''t earlier globally set your `LHOST` (your Kali machine), you''ll
    need to set it now:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您之前没有全局设置`LHOST`（您的Kali机器），现在需要设置它：
- en: '[PRE35]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '**Hacker''s tip**:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '**黑客提示**：'
- en: Metasploit will automatically try to set up the `LHOST` interface for exploits.
    This can create a problem if the Kali machine is connected to two or more networks.
    The exploit handler may connect to the wrong network causing the exploit to fail.
    Normally, when running Metasploit, after entering into my workspace, I go ahead
    and globally set the `LHOST` interface using the `setg` global option to the local
    host.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit将自动尝试设置`LHOST`接口以进行利用。如果Kali机器连接到两个或更多网络，这可能会导致问题。利用处理程序可能连接到错误的网络，导致利用失败。通常，在运行Metasploit时，进入我的工作区后，我会全局设置`LHOST`接口，使用`setg`全局选项设置到本地主机。
- en: 'Running the `show options` command again, we can see the proper setup for attacking
    the remote host:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行`show options`命令，我们可以看到攻击远程主机的正确设置：
- en: '![](img/d836e7c0-fc90-4767-ad06-dbfaa908be3f.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d836e7c0-fc90-4767-ad06-dbfaa908be3f.png)'
- en: 'In the following screenshot, we also see that we have the proper setup for
    our handler on our local machine:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们还看到我们在本地机器上的处理程序设置正确：
- en: '![](img/8da4e7bb-4d62-4b63-9dcd-379db2859ae7.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8da4e7bb-4d62-4b63-9dcd-379db2859ae7.png)'
- en: 'Next, run the following:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，运行以下命令：
- en: '[PRE36]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Bingo! We have another host compromised with full system level access.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀！我们又有一个主机被入侵，获得了完整的系统级访问权限。
- en: 'Run the following commands:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE37]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '![](img/4ae60c63-82a8-4e97-9751-a0e91cdae4df.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ae60c63-82a8-4e97-9751-a0e91cdae4df.png)'
- en: Again, after loading Kiwi, we run the `creds_all` command and dump all saved
    or stored credentials, including system and domain credentials, on the system.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 再次加载Kiwi后，我们运行`creds_all`命令并在系统上转储所有保存或存储的凭据，包括系统和域凭据。
- en: Between these two systems, we now have enough credentials that we know we can
    now take over the domain controller with no problem.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两个系统之间，我们现在有足够的凭据，我们知道现在可以毫无问题地接管域控制器。
- en: Accessing Systems With Xfreerdp
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Xfreerdp访问系统
- en: '**Xfreerdp** is an RDP client on Kali used to access Windows systems using
    the RDP protocol. Rdesktop is the normal default RDP client used when running
    Linux. Xfreerdp has some cool features that hackers love. With Rdesktop, you must
    have clear text passwords. With Xfreerdp, you can run a *Pass the Hash* attack
    and gain access to a Window''s remote desktop session without having to crack
    a captured hash. Xfreerdp is run from the command line and does not have a GUI
    interface.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**Xfreerdp**是Kali上用于使用RDP协议访问Windows系统的RDP客户端。当运行Linux时，Rdesktop是默认的普通RDP客户端。
    Xfreerdp具有一些黑客喜欢的很酷的功能。使用Rdesktop，您必须使用明文密码。使用Xfreerdp，您可以运行*传递哈希*攻击，并在不必破解捕获的哈希的情况下访问Windows远程桌面会话。
    Xfreerdp是从命令行运行的，没有GUI界面。'
- en: 'You can get a full list of the supported options by typing the following:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过输入以下内容获取支持的选项的完整列表：
- en: '[PRE38]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The following is a copy of the Help file and the supported options:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是帮助文件和支持的选项的副本：
- en: '[PRE39]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'As we can see, this application has a lot more supported features than Rdesktop
    and is also just a great application for normal access to Window machines. A configuration
    file can be built and complex setups can be started by calling the file when running
    the application. Many of these features are beyond the scope of this book. Let''s
    look at the most useful of the flags, `/pth:<password-hash>`. This flag will pass
    the hash instead of the plain text password and log into the system. The following
    is the string I used to gain access to the system:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，此应用程序具有比Rdesktop更多的支持功能，并且对于正常访问Windows机器来说也是一个很棒的应用程序。可以通过调用文件来构建配置文件，并且可以启动复杂的设置。这些功能中的许多功能超出了本书的范围。让我们看看最有用的标志，`/pth:<password-hash>`。此标志将传递哈希而不是明文密码并登录系统。以下是我用于访问系统的字符串：
- en: '[PRE40]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![](img/45c87fe2-b0c4-455f-aa12-b6995cee5d2e.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45c87fe2-b0c4-455f-aa12-b6995cee5d2e.png)'
- en: 'If we know the password, we can access the system using the following flag:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们知道密码，我们可以使用以下标志访问系统：
- en: '[PRE41]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Wait, there's more!
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 等等，还有更多！
- en: Not only can you access a remote desktop using this application but by going
    into the system using RDP and setting up Remote Assistance, you can log in again
    using this application with the `/assistance:<password>` flag and you can now
    watch a logged in user's desktop. Just be careful with your mouse or the user
    will know you are there.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅可以使用此应用程序访问远程桌面，而且通过使用RDP进入系统并设置远程协助，您可以使用`/assistance:<password>`标志再次使用此应用程序登录，现在您可以观看已登录用户的桌面。只需小心您的鼠标，否则用户会知道您在那里。
- en: By using the audio and multimedia flags, an attacker can turn on the microphone
    and camera on the remote system and pull a *Peeping Tom* on the unsuspecting user.
    Who needs fancy spycraft technology when you have remote access to a laptop? The
    laptop is now the bug. (and people wonder why I keep a band aid over the camera).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用音频和多媒体标志，攻击者可以在远程系统上打开麦克风和摄像头，并对毫无戒心的用户进行*窥探*。当您可以远程访问笔记本电脑时，谁还需要花哨的间谍技术？笔记本电脑现在是窃听器。（人们想知道为什么我在摄像头上贴了创可贴）。
- en: Summary
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you have learned how to gain access to a system using known
    exploits and how to move laterally between machines using stolen credentials.
    You have learned about the leaked exploits from the NSA and how they are used
    and about the havoc some of these have caused on the internet today.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经学会了如何使用已知漏洞访问系统以及如何使用窃取的凭据在机器之间移动。您已经了解了来自NSA的泄露漏洞以及它们的使用方式，以及一些这些漏洞如今在互联网上造成的混乱。
- en: In the next chapter, you will learn how to elevate your privileges from a normal
    user account to SYSTEM level access when you only have normal user rights.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何将您的权限从普通用户帐户提升到SYSTEM级别访问权限，当您只有普通用户权限时。
- en: Further reading
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Eternal Blue:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 永恒之蓝：
- en: '[https://cvedetails.com/cve/CVE-2017-0143/](https://cvedetails.com/cve/CVE-2017-0143/)'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cvedetails.com/cve/CVE-2017-0143/](https://cvedetails.com/cve/CVE-2017-0143/)'
- en: '[https://cvedetails.com/cve/CVE-2017-0144/](https://cvedetails.com/cve/CVE-2017-0144/)'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cvedetails.com/cve/CVE-2017-0144/](https://cvedetails.com/cve/CVE-2017-0144/)'
- en: '[https://cvedetails.com/cve/CVE-2017-0145/](https://cvedetails.com/cve/CVE-2017-0145/)'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cvedetails.com/cve/CVE-2017-0145/](https://cvedetails.com/cve/CVE-2017-0145/)'
- en: '[https://cvedetails.com/cve/CVE-2017-0146/](https://cvedetails.com/cve/CVE-2017-0146/)'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cvedetails.com/cve/CVE-2017-0146/](https://cvedetails.com/cve/CVE-2017-0146/)'
- en: '[https://cvedetails.com/cve/CVE-2017-0147/](https://cvedetails.com/cve/CVE-2017-0147/)'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cvedetails.com/cve/CVE-2017-0147/](https://cvedetails.com/cve/CVE-2017-0147/)'
- en: '[https://cvedetails.com/cve/CVE-2017-0148/](https://cvedetails.com/cve/CVE-2017-0148/)'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://cvedetails.com/cve/CVE-2017-0148/](https://cvedetails.com/cve/CVE-2017-0148/)'
- en: '[https://technet.microsoft.com/en-us/library/security/MS17-010](https://technet.microsoft.com/en-us/library/security/MS17-010)'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://technet.microsoft.com/en-us/library/security/MS17-010](https://technet.microsoft.com/en-us/library/security/MS17-010)'
- en: '[https://zerosum0x0.blogspot.com/2017/04/doublepulsar-initial-smb-backdoor-ring.html](https://zerosum0x0.blogspot.com/2017/04/doublepulsar-initial-smb-backdoor-ring.html)'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://zerosum0x0.blogspot.com/2017/04/doublepulsar-initial-smb-backdoor-ring.html](https://zerosum0x0.blogspot.com/2017/04/doublepulsar-initial-smb-backdoor-ring.html)'
- en: '[https://github.com/countercept/doublepulsar-detection-script](https://github.com/countercept/doublepulsar-detection-script)'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/countercept/doublepulsar-detection-script](https://github.com/countercept/doublepulsar-detection-script)'
- en: '[https://technet.microsoft.com/en-us/library/security/ms17-010.aspx](https://technet.microsoft.com/en-us/library/security/ms17-010.aspx)'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://technet.microsoft.com/en-us/library/security/ms17-010.aspx](https://technet.microsoft.com/en-us/library/security/ms17-010.aspx)'
- en: '[https://github.com/worawit/MS17-010](https://github.com/worawit/MS17-010)'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/worawit/MS17-010](https://github.com/worawit/MS17-010)'
- en: '[https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf](https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf)'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf](https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf)'
- en: '[https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/](https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/)'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/](https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/)'
- en: '[https://github.com/worawit/MS17-010](https://github.com/worawit/MS17-010)'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://github.com/worawit/MS17-010](https://github.com/worawit/MS17-010)'
