- en: Chapter 10\. Dealing with Issues, Obstacles, and Special Cases
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章 处理问题、障碍和特殊案例
- en: Each acquisition case is unlike others. Different manufacturers, hardware, and
    ecosystems; different versions of the mobile OS; different on-device security
    settings; and many other things make every case unique. In this chapter, we'll
    have a look at some common obstacles that may become roadblocks on the way to
    successful acquisition. We'll learn how to deal with some issues and understand
    restrictions and limitations imposed by some things specific to various platforms.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 每个获取案例都不尽相同。不同的制造商、硬件和生态系统；不同版本的移动操作系统；不同的设备安全设置；以及许多其他因素，使得每个案例都具有独特性。在本章中，我们将看看一些可能成为成功获取路上的障碍。我们将学习如何处理一些问题，并了解一些特定平台所施加的限制和局限性。
- en: Cloud acquisition and two-factor authentication
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云获取与双重身份验证
- en: Two-factor authentication is probably the best security feature since passwords
    were invented. Two-factor authentication goes a long way towards protecting one's
    accounts against being hacked. A password alone, no matter how long or secure,
    is no longer enough to provide sufficient protection. Social engineering, linked
    security breaches ([http://blog.elcomsoft.com/2013/02/yahoo-dropbox-and-battle-net-hacked-stopping-the-chain-reaction/](http://blog.elcomsoft.com/2013/02/yahoo-dropbox-and-battle-net-hacked-stopping-the-chain-reaction/)),
    leaked passwords, and hacked mailboxes all contribute to the insecurity of password-based
    protection. Once the intruder gets a hold of someone's password, they can access
    the account without a fuss. Even worse, they can gain access to other accounts
    by, for example, using a hacked e-mail address to request password resets on other
    connected services. Two-factor authentication aims to address this problem.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 双重身份验证可能是自密码发明以来最好的安全功能。双重身份验证在很大程度上保护了账户免受黑客攻击。仅仅一个密码，不管多么长或安全，已经不足以提供足够的保护。社交工程、关联的安全漏洞
    ([http://blog.elcomsoft.com/2013/02/yahoo-dropbox-and-battle-net-hacked-stopping-the-chain-reaction/](http://blog.elcomsoft.com/2013/02/yahoo-dropbox-and-battle-net-hacked-stopping-the-chain-reaction/))、泄露的密码和被黑的邮箱，都加剧了基于密码的保护的不安全性。一旦入侵者掌握了某人的密码，他们就能轻松访问该账户。更糟糕的是，他们还可以通过例如使用被黑的电子邮件地址来请求其他相关服务的密码重置，从而访问其他账户。双重身份验证旨在解决这一问题。
- en: LinkedIn. Yahoo! Mail. Dropbox. Battle.net. IEEE. Adobe Connect. PayPal. eBay.
    Twitter. These are just a few recent examples of big name service providers being
    hacked, with literally millions of passwords leaked.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: LinkedIn。Yahoo! Mail。Dropbox。Battle.net。IEEE。Adobe Connect。PayPal。eBay。Twitter。这些只是最近一些大型服务提供商被黑的例子，数百万的密码被泄露。
- en: The infamous celebrity photo leak ([http://www.mirror.co.uk/3am/celebrity-news/celebrity-4chan-shock-naked-picture-4395155](http://www.mirror.co.uk/3am/celebrity-news/celebrity-4chan-shock-naked-picture-4395155))
    was huge. It demonstrated how susceptible iCloud users are to remote hacks. Thousands
    of explicit images that celebrities captured with their iPhones were stolen straight
    from their iCloud accounts. Apparently, hackers were able to get passwords from
    celebrities' Apple ID, and gained access to the linked iCloud accounts using a
    copy of Elcomsoft Phone Breaker. Should Apple enforce two-factor authentication
    on iCloud account holders, the problem would probably occur on a much lesser scale.
    Even though two-factor authentication is not infallible and is susceptible to
    social engineering, it does require significantly greater effort to obtain a quickly
    expiring security code from the victim, and poses a much higher risk to an attacker.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 那个臭名昭著的名人照片泄露事件 ([http://www.mirror.co.uk/3am/celebrity-news/celebrity-4chan-shock-naked-picture-4395155](http://www.mirror.co.uk/3am/celebrity-news/celebrity-4chan-shock-naked-picture-4395155))
    引起了极大的关注。它展示了 iCloud 用户如何容易受到远程黑客攻击。成千上万的名人通过 iPhone 拍摄的裸照直接从他们的 iCloud 账户中被盗。显然，黑客能够从名人的
    Apple ID 获取密码，并使用 Elcomsoft Phone Breaker 的副本获得访问链接的 iCloud 账户。如果 Apple 强制要求 iCloud
    账户持有者启用双重身份验证，那么这个问题可能会发生得更少。即使双重身份验证并非万无一失，且易受社交工程攻击，它确实需要黑客付出更大的努力才能从受害者那里获取一个快速过期的安全代码，并且对攻击者构成更高的风险。
- en: As an expert in mobile forensics, you may face similar obstacles when attempting
    to acquire information from the suspect's cloud account over the air.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名移动取证专家，你可能会在尝试从嫌疑人的云账户获取信息时遇到类似的障碍。
- en: Two-factor authentication – Apple, Google, and Microsoft
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 双重身份验证——Apple、Google 和 Microsoft
- en: All three major mobile service providers (Apple, Google, and Microsoft) use
    similar approaches to two-factor authentication. The two most common approaches
    are online and offline.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 三大主要移动服务提供商（Apple、Google 和 Microsoft）都采用类似的双因素身份验证方法。最常见的两种方法是在线和离线。
- en: Online authentication works by approving authentication requests on a trusted
    device or entering a code that is pushed to the user or delivered via a text message.
    Offline authentication apps must be initialized with a cryptographic seed once;
    they will generate time-sensitive authentication codes afterwards without the
    need for an Internet connection.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在线身份验证通过在受信任的设备上批准认证请求或输入推送到用户的代码，或通过短信发送的代码来工作。离线身份验证应用程序必须初始化一次加密种子；此后它们会生成时间敏感的身份验证代码，而无需互联网连接。
- en: Google mostly uses offline authentication via its Google Authenticator app (or
    via Microsoft Authenticator on Windows Phone devices). However, push authentication
    was added by Google in June 2016.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Google 主要通过其 Google Authenticator 应用程序（或在 Windows Phone 设备上通过 Microsoft Authenticator）使用离线身份验证。不过，推送认证是
    Google 在 2016 年 6 月新增的功能。
- en: Apple is mostly relying on online authentication, pushing codes to trusted iOS
    devices, or delivering server-generated single-use codes via text messages. The
    ability to use time-dependent offline codes was added in iOS 9 with two-factor
    authentication support.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Apple 主要依赖在线身份验证，将代码推送到受信任的 iOS 设备，或通过短信传送服务器生成的一次性验证码。使用时间依赖的离线代码的功能是在 iOS
    9 中加入的，支持双因素身份验证。
- en: Finally, Microsoft users have access to both authentication methods at the same
    time. Windows users verifying their Microsoft Account can choose online or offline
    authentication at any given time. In addition, users can set up two-step verification
    with an e-mail address or phone number. Microsoft will send a security code to
    enter on the sign-in page when the user attempts to sign in on a new device or
    from a new location.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Microsoft 用户可以同时访问这两种认证方法。Windows 用户在验证其 Microsoft 帐户时，可以随时选择在线或离线认证。此外，用户可以通过电子邮件地址或电话号码设置两步验证。当用户尝试在新设备或新位置登录时，Microsoft
    会发送安全码供用户在登录页面输入。
- en: '|  | **Microsoft** | **Apple** | **Google** |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '|  | **Microsoft** | **Apple** | **Google** |'
- en: '| **Push authentication** | Yes: Windows 10 Mobile and Android apps only |
    Yes: iOS 9 and newer | Yes: unspecified versions of Android running the latest
    Google Play Services |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| **推送认证** | 是：仅适用于 Windows 10 Mobile 和 Android 应用 | 是：适用于 iOS 9 及更高版本 | 是：适用于运行最新
    Google Play 服务的 Android 未指明版本 |'
- en: '| **Offline authentication** | Yes | Yes: iOS 9, via Settings | Yes |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| **离线认证** | 是 | 是：iOS 9，通过设置 | 是 |'
- en: '| **Text/SMS authentication** | Yes, as a backup | Yes, as a backup | Yes,
    as a backup |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| **文本/SMS 认证** | 是，作为备份 | 是，作为备份 | 是，作为备份 |'
- en: Online versus offline authentication
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线与离线身份验证
- en: When using online authentication, users must approve a notification on one of
    their trusted devices. With this type of authentication, users don't have to enter
    security codes. Instead, they will be pushed a verification request to all of
    their trusted devices. By approving the request, they will successfully confirm
    their identity.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用在线身份验证时，用户必须在其受信任的设备上批准通知。使用这种类型的身份验证，用户无需输入安全代码，而是会向所有受信任的设备推送验证请求。通过批准请求，用户可以成功确认其身份。
- en: Offline authentication apps are based on a different principle. They don't require
    an active Internet connection or mobile service. A new time-sensitive single-use
    code is generated every few seconds by the authenticator app. The codes are automatically
    generated even when the trusted device is offline.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 离线认证应用程序基于不同的原理。它们不需要活动的互联网连接或移动服务。每隔几秒钟，认证应用会自动生成一个新的时间敏感的一次性验证码。即使受信任的设备处于离线状态，代码也会自动生成。
- en: While it is generally possible to de-authorize individual trusted devices with
    online authentication apps, de-authorizing offline authentication is only possible
    for all offline authentication apps at the same time. Once a new cryptographic
    seed is generated, codes generated by offline authentication apps using the old
    seed will fail to verify.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然通常可以通过在线身份验证应用取消单个受信任设备的授权，但取消离线身份验证的授权仅能同时对所有离线身份验证应用进行。生成新的加密种子后，使用旧种子生成的离线认证应用程序代码将无法验证。
- en: App passwords and two-factor authentication
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序密码与双因素身份验证
- en: Two-factor authentication is still relatively new. As a result, some devices
    and some third-party applications are unable to properly authenticate accounts
    if two-factor authentication is enabled. If this is the case, the user will see
    an incorrect password error when trying to set up an account. This happens because
    these older apps do not support additional security codes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 双重身份验证仍然相对较新。因此，一些设备和第三方应用在启用双重身份验证时，无法正确验证账户。如果是这种情况，用户在尝试设置账户时会看到密码错误的提示。这是因为这些较老的应用不支持额外的安全代码。
- en: This issue was immediately recognized by developers of two-factor authentication
    schemes. A neat workaround was implemented. If a certain app or device does not
    support two-factor authentication, the user can create a unique app password allowing
    these apps to sign in and effectively bypass the second authentication step. Users
    can generate as many app passwords as needed. Microsoft, Apple, and Google all
    support app-specific passwords. Users are recommended to create new app passwords
    for each app or device not supporting the two-factor authentication scheme.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题立即引起了双重身份验证方案开发者的关注，并实现了一个巧妙的解决方法。如果某个应用或设备不支持双重身份验证，用户可以创建一个独特的应用密码，让这些应用能够登录并有效绕过第二步身份验证。用户可以根据需要生成任意数量的应用密码。微软、苹果和谷歌都支持特定应用的密码。建议用户为每个不支持双重身份验证方案的应用或设备创建新的应用密码。
- en: App passwords can be revoked by the user at any time. Apps using revoked passwords
    will not be able to sign in or authenticate (for example, via a stored token).
    Interestingly, app-specific passwords will not work for web sign-ins or with each
    company's respective apps.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以随时撤销应用密码。使用被撤销密码的应用将无法登录或认证（例如，通过存储的令牌）。有趣的是，特定应用的密码无法用于网页登录或与各公司各自的应用程序配合使用。
- en: 'A typical app password generated by Google 2FA looks like this: `asdg skgf
    dsks ezck` (it should be entered without spaces).'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个由谷歌 2FA 生成的典型应用密码如下所示：`asdg skgf dsks ezck`（输入时不应有空格）。
- en: Forensically, these app passwords, once extracted, can be used for effectively
    bypassing two-factor authentication. However, their forensic use is limited. For
    example, Apple does not allow downloading iCloud backups using an app password,
    but does allow accessing certain types of data (such as notes and messages). Microsoft
    does not allow accessing its backups with app passwords either. Google, on the
    other hand, allows limited access to certain types of data even when using an
    app password. Notably, app passwords can be used as a last resort when the expert
    has no access to the second authentication factor.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 从取证角度看，这些应用密码一旦被提取，可以有效绕过双重身份验证。然而，它们在取证中的使用是有限的。例如，苹果不允许使用应用密码下载 iCloud 备份，但允许访问某些类型的数据（如笔记和消息）。微软也不允许通过应用密码访问其备份。另一方面，谷歌即使在使用应用密码时，也允许有限访问某些类型的数据。值得注意的是，当专家无法访问第二重身份验证因素时，应用密码可以作为最后的手段。
- en: Google's two-factor authentication
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谷歌的双重身份验证
- en: Google implements consistent two-factor authentication, protecting access to
    all interactions with any of its services that involve the use of the user's Google
    Account. If two-factor authentication is enabled, users have to verify their identity
    as they attempt to access any of the services provided under the Google Account
    umbrella if they initiate access from a new device, app, or web browser. Authenticating
    Gmail in Internet Explorer does not automatically grant access to the same Gmail
    account if the user tries to open it in Chrome, and vice versa.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌实现了统一的双重身份验证，保护用户在使用谷歌账户进行的所有互动。如果启用了双重身份验证，用户在尝试访问任何由谷歌账户提供的服务时，若是从新设备、应用或浏览器发起的访问，都必须验证身份。例如，在
    Internet Explorer 中验证 Gmail 并不会自动授予用户在 Chrome 中访问同一 Gmail 账户的权限，反之亦然。
- en: Protected services include (but are not limited to) logging in to the Google
    Account, using Gmail, accessing files or documents in Google Drive, or setting
    up a new device (for example, an Android phone) to access Google Play services.
    All in all, Google's implementation of two-factor authentication is the most consistent
    and straightforward compared to Apple and Microsoft.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 受保护的服务包括（但不限于）登录谷歌账户、使用 Gmail、访问谷歌云端硬盘中的文件或文档，或设置新设备（例如，Android 手机）以访问谷歌 Play
    服务。总的来说，谷歌的双重身份验证实现比苹果和微软更为一致且直接。
- en: Google relies mostly on offline, non-interactive two-factor authentication.
    An authenticator app is readily available on Android and iOS. The app can be initialized
    by scanning a color code displayed while the user sets up two-factor authentication.
    Once initialized, the app will continuously generate and display six-digit codes.
    The codes are valid for a short period of time (30 seconds).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌主要依赖离线的、非交互式的双重认证。认证应用可以在Android和iOS上轻松获取。用户通过扫描在设置双重认证时显示的颜色二维码来初始化该应用。一旦初始化完成，应用会持续生成并显示六位数的验证码，这些验证码有效时间很短（30秒）。
- en: Technically speaking, the app implements TOTP or HOTP security tokens as defined
    in the RFC 6238 standard. As a result, similar two-factor authentication apps
    based on the same standard may be compatible with Google, generating exactly the
    same codes that will be valid for authenticating the account. As an example, Microsoft
    Authenticator, available in Windows Store for the Windows Phone platform, is fully
    compatible with both Microsoft's and Google's two-factor authentication schemes,
    and can be used to authenticate both types of accounts.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，该应用实现了RFC 6238标准中定义的TOTP或HOTP安全令牌。因此，基于相同标准的类似双重认证应用可能与谷歌兼容，生成的验证码将与用于认证账户的验证码完全相同。例如，微软的认证应用（Microsoft
    Authenticator），可以在Windows Phone平台的Windows Store中获取，完全兼容微软和谷歌的双重认证方案，能够用于认证这两种类型的账户。
- en: Offline authentication in general is convenient because it does not require
    an active Internet connection. However, since it serves for authenticating account
    access (which is inherently an online operation), this point is moot. The drawback
    of this type of authentication is that the user cannot de-authorize an individual
    device or app that was previously authorized to generate authentication codes.
    Instead, if the user needs to de-authorize an app on any one of their devices,
    a new initialization image must be generated and used to re-initialize all authenticator
    apps running on all devices.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 离线认证通常很方便，因为它不需要活跃的互联网连接。然而，由于它用于验证账户访问（本质上是在线操作），因此这一点是无关紧要的。这种认证方式的缺点是用户无法撤销已授权的设备或应用。如果用户需要撤销任何设备上的应用授权，他们必须生成一个新的初始化图像，并用来重新初始化所有设备上的认证应用。
- en: Since an initialized authentication app may not always be available, Google
    offers two backup options for receiving authentication codes. The user can authorize
    one or several phone numbers to receive single-time codes as text messages (SMS).
    In addition, the user can print 10 pre-generated eight-digit backup codes. These
    codes do not expire. These codes are disposable; each code can be used only once.
    If all codes are used, or if the user loses them, a different bunch of backup
    codes can be generated (which automatically invalidates all unused codes from
    the previous batch) at [https://www.google.com/landing/2step/](https://www.google.com/landing/2step/)
    .
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 由于初始化的认证应用可能并不总是可用，谷歌提供了两种备用选项来接收认证码。用户可以授权一个或多个电话号码，通过短信（SMS）接收一次性验证码。此外，用户还可以打印10个预生成的八位数备份码。这些备份码不会过期，但它们是一次性的；每个码只能使用一次。如果所有备份码都被使用，或者用户丢失了它们，可以在[https://www.google.com/landing/2step/](https://www.google.com/landing/2step/)生成一批新的备份码（这将自动使上一批未使用的备份码失效）。
- en: '![Google''s two-factor authentication](img/0176.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌的双重认证](img/0176.jpeg)'
- en: Google offers a plethora of authentication options ranging from printable verification
    codes to app-specific passwords, push authentication on trusted devices, and security
    keys (electronic tokens).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌提供了多种认证选项，从可打印的验证码、应用特定的密码、可信设备上的推送认证，到安全密钥（电子令牌）。
- en: '![Google''s two-factor authentication](img/0177.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌的双重认证](img/0177.jpeg)'
- en: 'Elcomsoft Cloud Explorer ([https://www.elcomsoft.com/ecx.html](https://www.elcomsoft.com/ecx.html))
    supports Google''s two-factor authentication. If the Google authentication server
    requests a verification code, the tool automatically requests that code from the
    user:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Elcomsoft Cloud Explorer ([https://www.elcomsoft.com/ecx.html](https://www.elcomsoft.com/ecx.html))
    支持谷歌的双重认证。如果谷歌认证服务器请求验证码，工具会自动请求该验证码：
- en: '![Google''s two-factor authentication](img/0178.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌的双重认证](img/0178.jpeg)'
- en: 'The code will be requested after you click **Sign in**:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**登录**后将会要求输入验证码：
- en: '![Google''s two-factor authentication](img/0179.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌的双重认证](img/0179.jpeg)'
- en: 'You can request the code from a trusted device (a list of trusted devices will
    appear if you choose **Secure Code** as the authentication type) or use a **Recovery
    Key**, if available. Enter the code and click **Verify** to proceed:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从受信任的设备请求代码（如果选择**安全代码**作为身份验证类型，将会出现受信任设备列表），或者使用**恢复密钥**，如果可用。输入代码并点击**验证**以继续：
- en: '![Google''s two-factor authentication](img/0180.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌的双因素认证](img/0180.jpeg)'
- en: Note
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information about Google Authenticator can be found at [https://garbagecollected.org/2014/09/14/how-google-authenticator-works/](https://garbagecollected.org/2014/09/14/how-google-authenticator-works/)
    .
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于Google Authenticator的信息请访问[https://garbagecollected.org/2014/09/14/how-google-authenticator-works/](https://garbagecollected.org/2014/09/14/how-google-authenticator-works/)。
- en: Microsoft's implementation
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 微软的实现
- en: In the world of Microsoft Windows, the company protects Microsoft Account login
    with several security measures. Microsoft uses the same 2FA configuration for
    restoring Windows 8, 8.1, Windows 10, Windows Phone 8.1, and Windows 10 Mobile.
    The number of systems running one of those operating systems is huge, so it's
    important to understand the implications of Microsoft two-factor authentication.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在微软Windows的世界里，微软通过多重安全措施保护Microsoft账户登录。微软在恢复Windows 8、8.1、Windows 10、Windows
    Phone 8.1和Windows 10 Mobile时使用相同的2FA配置。运行这些操作系统的设备数量庞大，因此了解微软双因素认证的含义非常重要。
- en: Why should forensic experts be concerned about two-factor authentication in
    Microsoft systems? At the very least, two-factor authentication protects access
    to online backups made by all compatible systems listed previously. These backups
    contain comprehensive information about the user including bits such as stored
    Internet Explorer and Edge browser passwords, application data, contacts, calls,
    and text messages. While the amount of data available in Microsoft backups is
    somewhat less than that captured by Apple iOS, it is still much more than available
    in Android backups (even in the latest Android 6.0.1).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么法医专家应当关注微软系统中的双因素认证？至少，双因素认证保护了之前所有兼容系统所做的在线备份的访问。这些备份包含了关于用户的全面信息，包括存储的Internet
    Explorer和Edge浏览器密码、应用数据、联系人、通话记录和短信。尽管微软备份中可用的数据量略少于苹果iOS所捕获的数据，但仍远多于Android备份中可获得的数据（即便是最新的Android
    6.0.1）。
- en: When setting up a new Windows 8, 8.1, or Windows 10 PC and attempting to sign
    in with a Microsoft Account (as opposed to using a local login), the system may
    prompt you to complete identity verification. The user's identity can be verified
    by either approving the verification request on a trusted device or by entering
    a code generated by the Authenticator app. The verification request can be pushed
    to an authorized Microsoft Account app running on a trusted PC or mobile device
    (an Android version of the app is available). Once the request is approved with
    an app, the new device is added to the list of trusted devices.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置新的Windows 8、8.1或Windows 10 PC并尝试使用Microsoft账户登录时（而不是使用本地登录），系统可能会提示你完成身份验证。用户的身份可以通过在受信任的设备上批准验证请求或输入由Authenticator应用生成的代码来验证。验证请求可以推送到受信任的PC或移动设备上的授权Microsoft账户应用程序（该应用的Android版本也可用）。一旦通过应用程序批准请求，新设备将被添加到受信任设备列表中。
- en: The Windows Phone 8 and 8.1 platforms use an offline Microsoft Authenticator
    app that works similarly to Google Authenticator (generating time-sensitive single-use
    codes). The difference between the two types of authentication is that the former
    requires an active Internet connection to receive authentication requests, while
    the latter works completely offline. Both authentication methods can be active
    at the same time.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Phone 8和8.1平台使用离线版Microsoft Authenticator应用，其工作方式与Google Authenticator相似（生成时效性单次使用代码）。两者的区别在于前者需要活跃的互联网连接来接收认证请求，而后者完全离线工作。两种认证方法可以同时启用。
- en: The different authentication types may not be available on all platforms. Microsoft
    has compiled a comprehensive FAQ on how to configure authentication apps on the
    different mobile platforms.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的认证类型可能并非在所有平台上都可用。微软已经编制了一份详尽的FAQ，介绍如何在不同的移动平台上配置身份验证应用程序。
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Identity verification apps**: FAQs at [http://windows.microsoft.com/en-US/Windows/identity-verification-apps-faq](http://windows.microsoft.com/en-US/Windows/identity-verification-apps-faq)
    .'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**身份验证应用程序**：常见问题解答请见[http://windows.microsoft.com/en-US/Windows/identity-verification-apps-faq](http://windows.microsoft.com/en-US/Windows/identity-verification-apps-faq)。'
- en: Tip
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Did you know?** Microsoft and Google offline authentication apps are compatible.
    One can use Microsoft Authenticator running on a Windows Phone device to authenticate
    Google accounts, or Google Authenticator running on iOS or Android to authenticate
    Microsoft accounts.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**你知道吗？** 微软和谷歌的离线认证应用是兼容的。用户可以使用运行在 Windows Phone 设备上的 Microsoft Authenticator
    来认证谷歌账户，或者使用运行在 iOS 或 Android 上的 Google Authenticator 来认证微软账户。'
- en: 'The following are types of identity verification apps available on the different
    platforms:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是不同平台上可用的身份验证应用类型：
- en: '**Apple iOS**: It is an offline authenticator. Microsoft recommends using Google
    Authenticator, which is compatible.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apple iOS**：它是一个离线认证器。微软建议使用与之兼容的 Google Authenticator。'
- en: '**Android**: It authenticates apps offline and online. Microsoft Account handles
    online authentication requests, while Google Authenticator can be used to generate
    authentication codes offline.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android**：它既支持离线认证也支持在线认证。微软账户处理在线认证请求，而 Google Authenticator 可用于生成离线认证码。'
- en: '**Windows Phone**: It is an offline authenticator. Microsoft Authenticator
    can be used to verify both Microsoft and Google accounts.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows Phone**：它是一个离线认证器。Microsoft Authenticator 可用于验证微软和谷歌账户。'
- en: Verification methods can be configured at [https://account.live.com/proofs/Manage](https://account.live.com/proofs/Manage)
    .
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在 [https://account.live.com/proofs/Manage](https://account.live.com/proofs/Manage)
    配置验证方法。
- en: '![Microsoft''s implementation](img/0181.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![微软的实现](img/0181.jpeg)'
- en: Note
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**More about Microsoft two-step verification**: [http://windows.microsoft.com/en-us/windows/two-step-verification-faq](http://windows.microsoft.com/en-us/windows/two-step-verification-faq)
    .'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于微软两步验证的更多信息**：[http://windows.microsoft.com/en-us/windows/two-step-verification-faq](http://windows.microsoft.com/en-us/windows/two-step-verification-faq)。'
- en: Microsoft allows using two-factor authentication to protect all interactions
    with Microsoft Account. However, the user can choose to only enable this type
    of authentication for accessing sensitive information such as establishing Microsoft
    Account on a Windows 10 device (which automatically enables full access to all
    files synced via Microsoft OneDrive, access to stored passwords, and the ability
    to restore backups including configuration settings and application data).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 微软允许使用双重身份验证来保护与微软账户的所有交互。然而，用户可以选择仅为访问敏感信息启用此类身份验证，例如在 Windows 10 设备上建立微软账户（这会自动启用对通过
    Microsoft OneDrive 同步的所有文件的完全访问权限，访问存储的密码，以及恢复包括配置设置和应用数据在内的备份的能力）。
- en: Apple's two-step verification
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 苹果的两步验证
- en: 'Up until recently, Apple used its very own approach to multi-factor authentication.
    Dubbed as two-step verification ([https://support.apple.com/en-us/HT204152](https://support.apple.com/en-us/HT204152)),
    the extra security layer was only meant to cover certain activities that could
    be performed with the user''s Apple ID. Namely, two-step verification covered
    (and still covers, if you''re dealing with iOS older than 9.0) all of the following
    activities:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 直到最近，苹果一直使用自己独特的多因素认证方法。这个被称为两步验证的额外安全层（[https://support.apple.com/en-us/HT204152](https://support.apple.com/en-us/HT204152)）仅用于保护使用用户的
    Apple ID 可以执行的某些活动。具体来说，二步验证涵盖（并且如果你使用的是 iOS 版本低于 9.0，仍然覆盖）以下所有活动：
- en: Sign in to Apple ID account page.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Apple ID 账户页面。
- en: Sign in to iCloud on a new device or at [https://www.icloud.com/](https://www.icloud.com/).
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新设备上登录 iCloud 或访问 [https://www.icloud.com/](https://www.icloud.com/)。
- en: Sign in to iMessage, Game Center, or FaceTime.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 iMessage、Game Center 或 FaceTime。
- en: Make an iTunes, iBooks, or App Store purchase from a new device.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新设备上进行 iTunes、iBooks 或 App Store 购买。
- en: Get Apple ID-related support from Apple.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取与 Apple ID 相关的支持，请访问苹果。
- en: 'According to Apple, this is how two-step verification works:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 根据苹果的说明，以下是两步验证的工作原理：
- en: You enter your Apple ID and password as usual.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照平常的方式输入 Apple ID 和密码。
- en: Apple sends a verification code to one of your devices.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 苹果会将验证代码发送到你的某一设备上。
- en: You enter the code to verify your identity and finish signing in.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入验证码以验证身份并完成登录。
- en: Note
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Source**: [https://support.apple.com/kb/PH14668?locale=en_US](https://support.apple.com/kb/PH14668?locale=en_US)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**来源**：[https://support.apple.com/kb/PH14668?locale=en_US](https://support.apple.com/kb/PH14668?locale=en_US)'
- en: 'Two-step verification only supports a single secondary authentication factor:
    a trusted iOS device. A verification code will be pushed by Apple to a trusted
    device, allowing users to validate requests protected with two-step verification.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 两步验证只支持一个次级认证因素：受信任的 iOS 设备。苹果会将验证代码推送到受信任的设备上，用户可以使用该设备验证启用了两步验证的请求。
- en: Backup verification methods include SMS verification and an offline **Recovery
    Key** that can be created, printed out, and stored in a safe place.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 备份验证方法包括短信验证和可以创建、打印并存放在安全地方的离线**恢复密钥**。
- en: 'With iOS 9, Apple moved from this proprietary scheme to a different method:
    the more open two-factor authentication.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 iOS 9 的发布，苹果从这种专有方案转向了另一种方法：更加开放的双因素认证。
- en: Apple's two-factor authentication
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 苹果的双重认证
- en: Since iOS 9, Apple switched from two-step verification to a different, improved
    security mechanism. Apple's two-factor authentication is built directly into iOS
    9, designed to protect access to all the photos, documents, and other important
    data stored with Apple.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 自 iOS 9 起，苹果从双重验证切换到了一个不同的、改进的安全机制。苹果的双因素认证直接集成在 iOS 9 中，旨在保护访问存储在 Apple 上的所有照片、文档及其他重要数据。
- en: Two-factor authentication is being gradually rolled out by Apple to eligible
    users since fall 2015 ([https://support.apple.com/en-us/HT205075](https://support.apple.com/en-us/HT205075)).
    Unlike the older two-step verification, the new two-factor authentication mechanism
    protects iOS devices from the ground up. If two-factor authentication is enabled,
    users will be required to enter a unique, single-use six-digit authentication
    code every time they access their Apple ID from a new device. The code is displayed
    automatically on the user's other devices, or sent to a trusted (and verified)
    phone number ([https://support.apple.com/en-us/HT204915](https://support.apple.com/en-us/HT204915)).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 自2015年秋季以来，苹果已逐步向符合条件的用户推出双重认证（[https://support.apple.com/en-us/HT205075](https://support.apple.com/en-us/HT205075)）。与较早的双重验证不同，新的双重认证机制从根本上保护
    iOS 设备。如果启用了双重认证，用户每次从新设备访问 Apple ID 时，都需要输入一个独特的、一次性六位数的认证代码。该代码会自动显示在用户的其他设备上，或发送到受信任（并已验证）的电话号码（[https://support.apple.com/en-us/HT204915](https://support.apple.com/en-us/HT204915)）。
- en: The code is only requested once per device. It remains valid until the user
    signs out completely, erases the device, or changes the password. Web sign-ins
    can be remembered by offering the user an option to trust the browser.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码每个设备仅请求一次。它在用户完全注销、擦除设备或更改密码之前保持有效。可以通过提供信任浏览器的选项来记住网页登录。
- en: Bypassing Apple's two-factor authentication
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绕过苹果的双因素认证
- en: When it comes to digital forensics, the secondary authentication factor may
    or may not be available. If the secondary authentication factor is a trusted iOS
    device, being able to unlock the device (by entering the correct passcode) is
    required in order to access the pushed authentication code. Such access may or
    may not be available to the investigator.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在数字取证中，次级认证因素可能存在也可能不存在。如果次级认证因素是受信任的 iOS 设备，则需要能够解锁该设备（通过输入正确的密码）才能访问推送的认证代码。此访问权限可能对调查员可用，也可能不可用。
- en: When performing cloud acquisition of Apple accounts protected with either two-step
    verification or two-factor authentication, investigators have the ability to bypass
    authentication requirements by using a cached authentication token. The authentication
    token is a piece of cached data that helps authenticate requests to Apple servers
    without requiring the user to enter their credentials every time.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当执行受双重验证或双因素认证保护的苹果账户的云端数据获取时，调查员可以通过使用缓存的认证令牌绕过认证要求。认证令牌是一段缓存数据，有助于在不需要用户每次输入凭证的情况下对请求进行认证。
- en: At this time, only authentication tokens produced by Apple iTunes can be used
    to bypass authentication.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，仅由 Apple iTunes 生成的认证令牌可以用于绕过认证。
- en: 'Comprehensive information on how to acquire and use binary authentication tokens
    to access the user''s iCloud and iCloud Drive data is available in our blog:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 获取并使用二进制认证令牌访问用户的 iCloud 和 iCloud Drive 数据的详细信息，请参阅我们的博客：
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Breaking Into iCloud**: No Password Required at [http://blog.elcomsoft.com/2014/06/breaking-into-icloud-no-password-required/](http://blog.elcomsoft.com/2014/06/breaking-into-icloud-no-password-required/).'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**突破 iCloud**：无需密码，详见 [http://blog.elcomsoft.com/2014/06/breaking-into-icloud-no-password-required/](http://blog.elcomsoft.com/2014/06/breaking-into-icloud-no-password-required/)。'
- en: 'If no binary authentication token is available, it may still be possible to
    extract the correct Apple ID and password from the computer:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有可用的二进制认证令牌，仍然有可能从计算机中提取正确的 Apple ID 和密码：
- en: Note
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Acquiring and Utilizing Apple ID Passwords, Mitigating the Risks and Protecting
    Personal Information at [http://blog.elcomsoft.com/2015/03/acquiring-and-utilizing-apple-id-passwords-mitigating-the-risks-and-protecting-personal-information/](http://blog.elcomsoft.com/2015/03/acquiring-and-utilizing-apple-id-passwords-mitigating-the-risks-and-protecting-personal-information/).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 获取和使用 Apple ID 密码，降低风险并保护个人信息，详见[http://blog.elcomsoft.com/2015/03/acquiring-and-utilizing-apple-id-passwords-mitigating-the-risks-and-protecting-personal-information/](http://blog.elcomsoft.com/2015/03/acquiring-and-utilizing-apple-id-passwords-mitigating-the-risks-and-protecting-personal-information/)。
- en: '**Further reading**: Apple Two-Factor Authentication and the iCloud at [http://blog.elcomsoft.com/2013/05/apple-two-factor-authentication-and-the-icloud/](http://blog.elcomsoft.com/2013/05/apple-two-factor-authentication-and-the-icloud/)
    (published back in 2013, so some things have changed since then).'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步阅读**：Apple 双重身份验证和 iCloud，详见[http://blog.elcomsoft.com/2013/05/apple-two-factor-authentication-and-the-icloud/](http://blog.elcomsoft.com/2013/05/apple-two-factor-authentication-and-the-icloud/)（该文章发布于2013年，因此自那时以来某些内容已有变化）。'
- en: Two-factor authentication – a real roadblock
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 双重身份验证——一个真正的障碍
- en: Two-factor authentication goes a long way towards securing user accounts. Even
    if a weak password is used, third parties may not be able to access information
    protected with two-factor authentication if they don't have physical access to
    the secondary authentication factor.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 双重身份验证在确保用户账户安全方面起到了重要作用。即使使用了一个弱密码，第三方也可能无法访问被双重身份验证保护的信息，如果他们无法物理接触到第二个身份验证因素的话。
- en: Two-factor authentication is a roadblock to performing over-the-air acquisition.
    Since acquisition is normally performed on what's considered to be a new device,
    the authentication system will require verifying a user's identity with the second
    factor. As such, tools such as Elcomsoft Cloud Explorer will require entering
    the correct authentication code.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 双重身份验证是执行无线获取的障碍。因为获取通常发生在被认为是新设备的设备上，认证系统会要求通过第二个因素验证用户身份。因此，像 Elcomsoft Cloud
    Explorer 这样的工具需要输入正确的身份验证代码。
- en: There are exceptions. For example, Apple's authentication tokens can be extracted
    from a previously authorized computer and used with a tool such as Elcomsoft Phone
    Breaker. This allows accessing information stored in the user's iCloud, including
    iOS backups and uploaded files, even without having a trusted device.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 有例外情况。例如，可以从之前已授权的计算机中提取 Apple 的认证令牌，并与像 Elcomsoft Phone Breaker 这样的工具配合使用。这允许访问存储在用户
    iCloud 中的信息，包括 iOS 备份和上传的文件，即使没有可信设备也能访问。
- en: Unallocated space
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 未分配空间
- en: While we cover the issue of unallocated space separately for each individual
    mobile platform, this chapter gathers all information we have about the issue
    in a single place. In order to allow our readers to use this chapter as a reference,
    we included some information about internal (eMMC) and external (SD card) storage,
    as well as some basic information about encryption and its effect on unallocated
    space. We separately reviewed encryption options available for internal and external
    storage, as their effect on unallocated space can be quite different. If you just
    want an idea on whether or not unallocated space can be recovered from a particular
    device, carry on reading!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们会为每个独立的移动平台分别讲解未分配空间问题，但本章将所有关于该问题的信息集中在一个地方。为了方便读者将本章作为参考，我们包含了一些关于内部存储（eMMC）和外部存储（SD
    卡）以及加密基础知识的信息，并探讨了加密对未分配空间的影响。我们分别审视了内部和外部存储的加密选项，因为它们对未分配空间的影响可能大不相同。如果你只想知道是否能从特定设备中恢复未分配空间，继续往下读吧！
- en: The issue of unallocated space
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未分配空间的问题
- en: What happens to information that was deleted from a smartphone? Is there life
    after a full factory reset? Is there anything left on the device after a remote
    wipe? What is the best method to recover information stored in unallocated space;
    what tools and equipment are required? With six major mobile platforms and countless
    variations, there is no single answer to any of those questions. Let's look at
    the issue from the very beginning.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 从智能手机中删除的信息会发生什么？在进行完全恢复出厂设置后，数据还有生命吗？在远程清除之后，设备上还剩下什么？恢复未分配空间中存储的信息的最佳方法是什么？需要哪些工具和设备？鉴于六大主流移动平台和无数变种，任何这些问题都没有统一的答案。让我们从头开始探讨这个问题。
- en: Accessing destroyed evidence in different mobile platforms
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问不同移动平台上被销毁的证据
- en: 'At this time, we have several distinctly different mobile platforms: Apple
    iOS, Android, Windows Phone 8, Windows RT, Windows 8/8.1/10, and BlackBerry 10\.
    To say that these platforms handle deleted data differently is not saying much
    at all. Android and iOS are poles apart when it comes to handling deleted data
    and recovering information. Windows Phone 8 is somewhere in between, while Windows
    RT and the full versions of Windows 8/8.1/10 have their own share of issues.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们有几个截然不同的移动平台：苹果 iOS、安卓、Windows Phone 8、Windows RT、Windows 8/8.1/10 和黑莓
    10。说这些平台在处理已删除数据时有所不同，并没有说明太多。安卓和 iOS 在处理已删除数据和恢复信息方面截然不同。Windows Phone 8 介于二者之间，而
    Windows RT 以及完整版本的 Windows 8/8.1/10 则各自有其问题。
- en: Apple iOS – impossible
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 苹果 iOS – 不可能
- en: This chapter is easy to write. Recovering data stored in unallocated space in
    iOS 5 and newer is impossible, even on jailbroken devices. Not even if you send
    it to Apple, and not if you give them the passcode. Once the data is gone, it's
    gone. A factory reset erases everything completely and irrecoverably.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 本章写起来很简单。在 iOS 5 及更高版本中，恢复存储在未分配空间中的数据是不可能的，甚至对于越狱设备也是如此。即便你将设备送到苹果公司，也无法恢复，即使你提供密码。一旦数据丢失，就无法找回。恢复出厂设置会彻底且不可恢复地删除所有内容。
- en: A theoretical concept exists allowing you to restore the state of the filesystem
    to a certain moment in the past. A proof-of-concept tool was developed, but it
    never made it to a truly usable state.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一个理论概念，允许你将文件系统的状态恢复到过去的某个时刻。曾经开发过一个概念验证工具，但它从未真正达到可用状态。
- en: The reason for this is how Apple implements encryption. Since iOS 5, Apple used
    full disk encryption in iOS devices. The decryption keys are only maintained for
    the file system (allocated data blocks). iOS immediately discards decryption keys
    for unallocated (released) data blocks. This means that once a file is deleted,
    decryption keys to those encrypted data blocks are destroyed.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这背后的原因是苹果实现加密的方式。从 iOS 5 起，苹果在 iOS 设备中使用了全盘加密。解密密钥仅为文件系统（已分配数据块）保留。iOS 会立即丢弃未分配（已释放）数据块的解密密钥。这意味着一旦文件被删除，针对那些加密数据块的解密密钥就会被销毁。
- en: You may be able to extract the complete disk image. You may be able to extract
    decryption keys. But you still won't be able to decrypt unallocated areas because
    there will be no decryption keys for those data blocks. While the actual (encrypted)
    data may still be there, there is absolutely no possibility to decrypt it.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能能够提取完整的磁盘映像。你可能能够提取解密密钥。但你仍然无法解密未分配区域，因为这些数据块的解密密钥已经不存在。虽然实际的（加密）数据可能仍然存在，但绝对没有办法解密它。
- en: Since no Apple device uses external storage (SD cards), there is no way to recover
    information from SD cards either.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 由于没有苹果设备使用外部存储（SD 卡），因此也无法从 SD 卡中恢复信息。
- en: What about *data recovery* tools from the Cydia repository available to users
    of jailbroken devices? Those are fakes. On recent iOS devices, deleted files cannot
    be recovered, and any tool or service offering such recovery is an imposter.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 那么对于越狱设备用户可用的来自 Cydia 仓库的*数据恢复*工具呢？那些是假的。在近期的 iOS 设备上，已删除的文件是无法恢复的，任何声称能恢复此类数据的工具或服务都是骗子。
- en: Note that you may still be able to access some recently deleted files by retrieving
    the device's iCloud backups. Since iCloud keeps the three most recent backups,
    downloading the earliest backup with Elcomsoft Phone Breaker ([https://www.elcomsoft.com/eppb.html](https://www.elcomsoft.com/eppb.html))
    may result in finding those files before they've been deleted.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你仍然可以通过检索设备的 iCloud 备份来访问一些最近删除的文件。由于 iCloud 保留最近的三个备份，通过 Elcomsoft Phone
    Breaker（[https://www.elcomsoft.com/eppb.html](https://www.elcomsoft.com/eppb.html)）下载最早的备份，可能会发现那些文件在被删除之前还存在。
- en: BlackBerry – Iffy
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 黑莓 – 不确定
- en: Security is the hallmark of BlackBerry smartphones. While previous versions
    of BlackBerry OS used to offer user-selectable security and data encryption levels,
    this is not the case with the newest BlackBerry 10.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性是黑莓智能手机的标志。虽然以前版本的黑莓操作系统允许用户选择安全性和数据加密级别，但最新的黑莓 10 并非如此。
- en: By design, BlackBerry 10 employs optional full-disk encryption activated by
    either the end user or provisioned by the corporate **BES** (**BlackBerry Enterprise
    Server**). There is no jailbreak for BlackBerry 10\. Physical acquisition methods
    for BlackBerry 10 devices are limited (Cellerbrite UFED via a bootloader exploits
    certain devices if no device password is set). There is no way to extract a decrypted
    raw image of an encrypted BlackBerry 10 smartphone. Chip-off acquisition will
    only produce an encrypted disk image; all data will remain securely encrypted.
    The BlackBerry security model is exemplary, and there is no way of accessing (encrypted)
    unallocated space data in BlackBerry 10 smartphones.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 根据设计，BlackBerry 10 采用可选的全盘加密功能，由终端用户或由企业**BES**（**BlackBerry 企业服务器**）进行激活。BlackBerry
    10 没有越狱方法。BlackBerry 10 设备的物理获取方法有限（Cellerbrite UFED 通过引导加载程序利用某些设备漏洞，如果没有设置设备密码）。无法提取已加密
    BlackBerry 10 智能手机的解密原始镜像。芯片取出方法只能生成加密的磁盘镜像；所有数据将继续保持加密状态。BlackBerry 的安全模型非常优秀，并且无法访问
    BlackBerry 10 智能手机中（加密的）未分配空间的数据。
- en: In reality, BlackBerry 10 phones sold to end users don't come with encryption
    activated out-of-the-box. Since many users won't bother activating encryption
    (or are concerned with the slower performance of the storage subsystem after encryption),
    we've encountered quite a few BlackBerry 10 smartphones that were not encrypted.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，销售给终端用户的 BlackBerry 10 手机默认并未启用加密。由于许多用户不会主动启用加密（或者担心加密后存储子系统的性能变慢），我们遇到过不少未加密的
    BlackBerry 10 智能手机。
- en: As there is no physical acquisition and no JTAG extraction available on newer
    BlackBerry devices, chip-off is the only extraction method available for BlackBerry
    10 devices. There is no known way to determine if a particular BlackBerry is encrypted
    or not. As a result, the encryption status of a particular BlackBerry 10 phone
    has to be decided on a case by case basis.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在较新的 BlackBerry 设备上没有物理获取方法，也没有 JTAG 提取方法，芯片取出是唯一可用于 BlackBerry 10 设备的提取方法。没有已知的方法来判断某个特定的
    BlackBerry 是否已加密。因此，特定 BlackBerry 10 手机的加密状态必须逐一确定。
- en: SD cards
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SD 卡
- en: Some BlackBerry 10 devices can use SD cards for additional storage. Those SD
    cards can be encrypted, or they can be left unencrypted. Unencrypted SD cards
    can be acquired in the usual way. There is nothing available to decrypt the content
    of encrypted SD cards though (unless you instruct the original BlackBerry 10 device
    to do so, which will require you to unlock it first with a passcode).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一些 BlackBerry 10 设备可以使用 SD 卡来扩展存储空间。这些 SD 卡可以加密，也可以不加密。未加密的 SD 卡可以通过常规方式获取。然而，针对加密
    SD 卡并没有解密内容的方法（除非你指示原始 BlackBerry 10 设备执行此操作，而这需要先通过密码解锁设备）。
- en: Samsung devices are known to encrypt SD cards with encryption keys stored in
    the device's internal memory. As a result, encrypted SD cards can only be used
    in the same device. Windows 10 Mobile applies similar technique to encrypt SD
    cards.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 三星设备已知会使用存储在设备内存中的加密密钥来加密 SD 卡。因此，加密的 SD 卡只能在同一设备中使用。Windows 10 Mobile 也采用类似的技术来加密
    SD 卡。
- en: Android – possible with limitations
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android – 有可能，但有限制
- en: Android is a highly fragmented platform that implements many things in the opposite
    way to iOS. Let's have a look at what happens in Android devices when a file is
    deleted.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Android 是一个高度碎片化的平台，它实现了许多与 iOS 相反的功能。我们来看看当文件在 Android 设备中被删除时会发生什么。
- en: Android – built-in storage
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android – 内建存储
- en: 'Many Android devices can have two distinctly separate types of memory: built-in
    storage (typically an eMMC chip) and optional external storage (typically a micro
    SD card).'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 Android 设备有两种完全独立的存储类型：内建存储（通常是 eMMC 芯片）和可选的外部存储（通常是 micro SD 卡）。
- en: Before Android 2.3 Gingerbread, Android smartphones commonly used plain flash
    chips as their main storage. A flash-friendly file system called `f2fs` was used
    for wear leveling. Since Android 2.3 and in all later versions, the overwhelming
    majority of Android smartphones use eMMC storage. Typically, the data partition
    is formatted with one of the Linux file systems such as `ext3` or `ext4`, but
    `f2fs` is also frequently encountered. In the past, the YAFFS2 file system was
    also a common choice. Several Samsung models used RFS, a FAT-based file system.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Android 2.3 Gingerbread 之前，Android 智能手机通常使用普通的闪存芯片作为主要存储。为实现磨损均衡，使用了一种称为 `f2fs`
    的闪存友好型文件系统。从 Android 2.3 及以后的版本开始，绝大多数 Android 智能手机使用 eMMC 存储。通常，数据分区会使用 Linux
    文件系统之一进行格式化，如 `ext3` 或 `ext4`，但 `f2fs` 也经常出现。在过去，YAFFS2 文件系统也是一个常见的选择。部分三星型号使用
    RFS，这是一种基于 FAT 的文件系统。
- en: Note that a large number of ultra-budget Chinese smartphones are still manufactured
    equipped with raw NAND chips instead of eMMC flash. While chip-off acquisition
    would allow capturing the complete raw dump of those chips, less advanced acquisition
    such as physical and JTAG is often available on those devices. Such devices are
    relatively rare outside China.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，仍有大量超低价的中国智能手机使用原始 NAND 芯片，而非 eMMC 闪存。虽然芯片摘取采集可以捕获这些芯片的完整原始数据，但较为简单的采集方式，如物理采集和
    JTAG，通常也能在这些设备上使用。这些设备在中国以外的地区相对较为罕见。
- en: Unencrypted storage
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 未加密存储
- en: If the data partition is not encrypted, capturing a full disk image via physical
    acquisition, JTAG, **ISP** (**In-system programming**), or chip-off will enable
    the investigator to perform unallocated space analysis by using a tool supporting
    Linux file systems. Limitations common to all eMMC storage apply (as described
    in the *eMMC and Deleted Data* section). Note that full-disk physical acquisition
    may require rooting the device or using an acquisition tool that can temporarily
    root the device. None of these methods are able to extract overprovisioned areas
    from eMMC chips.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据分区未加密，可以通过物理采集、JTAG、**ISP**（**In-system programming**，系统内编程）或芯片摘取方式捕获完整的磁盘映像，从而使调查人员可以通过支持
    Linux 文件系统的工具进行未分配空间分析。所有 eMMC 存储的限制条件都适用（如 *eMMC 和已删除数据* 部分所述）。需要注意的是，完整磁盘物理采集可能需要获取
    root 权限，或者使用能够临时 root 设备的采集工具。这些方法无法提取 eMMC 芯片的过度分配区域。
- en: Encrypted storage
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加密存储
- en: Android is the exact opposite of iOS in many ways, including its approach to
    encryption. As opposed to Apple iOS, which employs full-disk encryption and destroys
    decryption keys for unused blocks, Android encryption is sector-based. As a result,
    if decrypting the user partition was successful, unallocated areas are automatically
    decrypted as well.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Android 在许多方面与 iOS 完全相反，包括它的加密方式。与采用全盘加密并销毁未使用块解密密钥的苹果 iOS 相对，Android 的加密是基于扇区的。因此，如果成功解密用户分区，未分配区域也会自动解密。
- en: 'Since Android is a highly fragmented platform, OEMs can implement various parts
    of the system in many different ways. Some manufacturers (for example, Samsung)
    are known to vary their implementations widely between devices, even changing
    encryption types on the same device with OTA updates. As a result, it is impossible
    to predict whether or not a particular encrypted partition could be extracted
    via physical acquisition (with or without knowing the right passcode). One thing
    is for certain: encryption can make low-level attacks, such as JTAG and chip-off,
    complicated.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Android 是一个高度碎片化的平台，OEM 厂商可以以多种不同方式实现系统的各个部分。某些厂商（例如三星）以设备间差异化较大而闻名，甚至通过
    OTA 更新改变同一设备上的加密类型。因此，无法预测某个特定的加密分区是否能够通过物理采集方式提取（无论是否知道正确的密码）。有一点是肯定的：加密会使得低级攻击（如
    JTAG 和芯片摘取）变得复杂。
- en: Encryption in different versions of Android
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android 各版本的加密方式
- en: Speaking of stock Android, Google implemented encryption as early as Android
    3.0 Honeycomb. However, most OEMs started implementing encryption with effect
    from Android 4.0\. Based on the Linux `dm-crypt`, first-generation encryption
    was easy to brute force. The second version was much tougher to break, but brute-forcing
    passcodes was still possible (by swapping the function to scrypt). Initial implementations
    of Android encryption were inherently insecure, as encryption metadata was stored
    alongside encrypted data.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 说到原生 Android，谷歌早在 Android 3.0 Honeycomb 就实现了加密。然而，大多数 OEM 从 Android 4.0 开始才实现加密。基于
    Linux 的 `dm-crypt`，第一代加密容易被暴力破解。第二代加密更难破解，但暴力破解密码仍然可能（通过切换函数为 scrypt）。Android
    加密的初期实现本质上是不安全的，因为加密元数据和加密数据存储在一起。
- en: Samsung used to use stock Android encryption in its early devices. However,
    the company was never happy about its security, so Samsung started experimenting
    with its own implementations. Early implementations of Samsung proprietary encryption
    still kept encryption metadata openly accessible. However, with time the company
    learned to encrypt metadata and moved the master key into a protected area (inaccessible
    during chip-off).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 三星早期的设备使用了原生 Android 的加密实现。然而，该公司对其安全性并不满意，因此开始实验自己的加密实现。三星早期的专有加密实现仍然将加密元数据公开访问。然而，随着时间的推移，公司学会了加密元数据，并将主密钥移到了一个受保护的区域（在芯片提取时无法访问）。
- en: Android 5.0 implements encryption in a way that's very similar to what Samsung
    does. Encryption metadata is now protected with a master key which, in turn, is
    now stored in a protected area inaccessible to chip-off. Google had plans to enforce
    encryption on all devices released with Android 5.x; however, this never materialized,
    and device encryption remains optional on most Android 5.x devices except for
    the Nexus line.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: Android 5.0 的加密实现方式与三星的做法非常相似。加密元数据现在由一个主密钥保护，该主密钥被存储在一个受保护的区域，无法通过芯片提取方式访问。谷歌曾计划强制所有搭载
    Android 5.x 系统的设备启用加密；然而，这一计划并未实现，除了 Nexus 系列之外，大多数 Android 5.x 设备的加密仍然是可选的。
- en: If you manage to pull an unprotected image of the encrypted partition (for example,
    via physical acquisition) or succeed in decrypting a protected image, you may
    be able to gain access to unallocated areas. Note that most encryption implementations
    also implement Trim pass-through, allowing the eMMC controller to clear (erase)
    data blocks that are no longer used. Such data blocks will be apparently visible
    as empty (zeroed) areas. However, since the Trim operation is not instant on eMMC
    controllers (as opposed to most SSD drives), you may still have time to analyze
    and recover data from those unallocated areas.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你设法获取到加密分区的未保护镜像（例如，通过物理采集），或者成功解密一个受保护的镜像，你可能能够访问未分配的区域。请注意，大多数加密实现也实现了 Trim
    透传，允许 eMMC 控制器清除（擦除）不再使用的数据块。这些数据块将显得像是空的（零填充）区域。然而，由于 Trim 操作在 eMMC 控制器上并不是即时完成的（与大多数
    SSD 驱动器不同），你可能仍然有时间分析并恢复这些未分配区域中的数据。
- en: Android – SD cards
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android – SD 卡
- en: Since many Android devices have SD card slots, and those SD cards are rarely
    encrypted (see the next chapter for details), retrieving and analyzing the external
    SD card is an easy way of recovering information. Naturally, recovering information
    from an SD card is best done by removing the card and inserting it into a micro
    SD reader, in a write-protected manner, connected directly to the investigator's
    computer.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 由于许多 Android 设备配有 SD 卡插槽，而且这些 SD 卡很少被加密（详见下一章），因此检索和分析外部 SD 卡是一种恢复信息的简单方法。自然，从
    SD 卡恢复信息最好是将卡取出，并以只读方式插入到微型 SD 读卡器中，直接连接到调查员的计算机。
- en: 'Since Android is a highly fragmented platform, the many different versions
    of the system (as well as many vendor customizations) implement varying approaches
    as to what types of data can or cannot be stored on an SD card. Android has the
    following policies, which cannot be changed by the user without rooting the device
    but can be overridden by individual OEMs:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Android 是一个高度碎片化的平台，系统的多个不同版本（以及许多厂商定制化的版本）在 SD 卡上存储哪些数据的策略各不相同。Android 有以下政策，用户在不进行
    root 的情况下无法更改这些政策，但个别 OEM 可以覆盖这些政策：
- en: '**Android 2.3, 4.0-4.2**: Apps are allowed to write to the external SD card.
    Many OEM implementations leave external SD cards unprotected. Applications can
    be moved to an SD card. Applications can be installed onto an SD card. Applications
    moved to or installed on the SD card can keep their data on that SD card.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android 2.3, 4.0-4.2**：应用程序允许写入外部 SD 卡。许多 OEM 实现将外部 SD 卡设置为未保护状态。应用程序可以被移动到
    SD 卡上。应用程序可以安装到 SD 卡上。移动到或安装到 SD 卡上的应用程序可以将数据保存在该 SD 卡上。'
- en: '**Android 4.4**: Due to changes in security policies, only system apps have
    full access to the external SD card. Regular applications cannot keep data on
    an SD card unless they used the new **SAF** (**Storage Access Framework**) API.
    SD cards can still be used for storing multimedia files (music and videos) or
    keeping information such as map data (for example, HERE Maps).'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android 4.4**：由于安全策略的变化，只有系统应用程序可以完全访问外部 SD 卡。普通应用程序不能将数据保存在 SD 卡上，除非它们使用了新的
    **SAF**（**存储访问框架**）API。SD 卡仍然可以用于存储多媒体文件（如音乐和视频）或保存信息，例如地图数据（例如，HERE Maps）。'
- en: '**Android 5.0-5.1**: New APIs (SAF extensions) now allow full access to SD
    card directories and files.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android 5.0-5.1**：新的 API（SAF 扩展）现在允许完全访问 SD 卡目录和文件。'
- en: '**Android 6.0**: Access to external storage (SD cards and OTG sticks) integrated
    with internal storage.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android 6.0**：访问外部存储（SD 卡和 OTG 闪存）与内部存储整合。'
- en: The different APIs were introduced in order to secure information stored on
    SD cards. Unlike internal partitions that are usually formatted with ext3 or ext4
    (a file system with built-in permission management and access control), external
    SD cards are normally formatted with FAT32 (SDHC, up to and including 32 GB) or
    exFAT (SDXC, 64GB, and larger cards). Neither of these implement any type of permissions
    or access control, requiring the operating system to take full control of who
    can access what areas on the SD card.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 引入不同的 API 是为了确保存储在 SD 卡上的信息的安全性。与通常使用 ext3 或 ext4 格式化的内部分区（这种文件系统内建权限管理和访问控制）不同，外部
    SD 卡通常使用 FAT32（SDHC，最多 32 GB）或 exFAT（SDXC，64GB 及更大卡）格式化。这两种格式都没有实现任何类型的权限或访问控制，因此操作系统需要完全控制谁可以访问
    SD 卡上的哪些区域。
- en: Note
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Note**: 64GB (and larger) SDXC cards are formatted with exFAT out of the
    box. You will need an exFAT-compliant tool to recover deleted information and
    analyze unallocated areas on these SD cards. While you can still carve those cards
    with tools not supporting exFAT, such tools will not be able to tell unallocated
    and allocated areas apart, and provide messy results. Do check your tool''s capabilities
    as exFAT support is not a given.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**：64GB（及更大容量）SDXC 卡默认使用 exFAT 格式化。您将需要一个支持 exFAT 的工具来恢复已删除的信息并分析这些 SD
    卡上的未分配区域。虽然您仍然可以使用不支持 exFAT 的工具来刻录这些卡，但这些工具将无法区分已分配和未分配的区域，且结果可能混乱。请检查您的工具功能，因为并非所有工具都支持
    exFAT。'
- en: Android – SD card encryption
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android – SD 卡加密
- en: Encrypted SD cards are relatively uncommon in Android phones. Stock Android
    didn't implement the encryption of external SD cards in any version before Android
    M (although SD card encryption will be part of Android M).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Android 手机上，加密的 SD 卡相对较少见。标准 Android 在 Android M 之前的任何版本中都没有实现外部 SD 卡的加密（尽管
    SD 卡加密将成为 Android M 的一部分）。
- en: Many Samsung phones as well as certain OEM ROMs offer optional SD card encryption.
    The corresponding setting is typically located under **Settings** | **More** |
    **Security** | **Encrypt external SD card** or **Settings** | **Control** | **Security**,
    and can only be activated if the phone is protected with a passcode. Similar to
    internal storage, there is no `full disk` encryption on SD cards. Instead, only
    the file system is encrypted. Unallocated (empty) areas are commonly left unencrypted,
    which, for one, enables investigators to recover deleted information stored on
    SD cards prior to encryption. Samsung devices are known to encrypt SD cards with
    encryption keys stored in the device's internal memory. As a result, encrypted
    SD cards can only be used in the same device that was used to encrypt the card.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 许多三星手机以及某些 OEM ROM 提供可选的 SD 卡加密。相应的设置通常位于 **设置** | **更多** | **安全性** | **加密外部
    SD 卡** 或 **设置** | **控制** | **安全性** 下，并且只能在手机设置了密码保护的情况下启用。与内部存储类似，SD 卡没有 `全盘`
    加密。相反，只有文件系统被加密。未分配（空闲）区域通常不会加密，这使得调查人员能够在加密前恢复存储在 SD 卡上的已删除信息。三星设备已知会使用存储在设备内部存储器中的加密密钥来加密
    SD 卡。因此，加密的 SD 卡只能在加密该卡的同一设备上使用。
- en: Note
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Android M implements the new concept of adoptable storage, allowing us to use
    an external SD card or USB drive in the same manner as internal storage. This,
    in particular, means that the same encryption is applicable to adopted external
    storage as it is used to protect the internal storage. More information can be
    found at [http://nelenkov.blogspot.fi/2015/06/decrypting-android-m-adopted-storage.html](http://nelenkov.blogspot.fi/2015/06/decrypting-android-m-adopted-storage.html)
    .
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Android M 实现了可采纳存储的新概念，允许我们像使用内部存储一样使用外部 SD 卡或 USB 驱动器。这意味着，采用的外部存储与保护内部存储使用的加密方式相同。更多信息可以参考
    [http://nelenkov.blogspot.fi/2015/06/decrypting-android-m-adopted-storage.html](http://nelenkov.blogspot.fi/2015/06/decrypting-android-m-adopted-storage.html)。
- en: A factory reset renders data stored on an encrypted SD card unusable (even if
    the SD card is stored separately from the device) as the encryption master key
    is destroyed during the reset.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复出厂设置会导致存储在加密 SD 卡上的数据无法使用（即使 SD 卡与设备分开存储），因为在重置过程中加密主密钥被销毁。
- en: Windows Phone 8 and 8.1 – possible for end-user devices with limitations
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows Phone 8 和 8.1 — 对终端用户设备有可能，但存在一些限制
- en: Windows Phone is a unique system. All three other systems are Unix-based. Apple
    iOS is based on BSD UNIX, Google Android is based on Linux, and BlackBerry 10
    is based on QNX. Windows Phone 8/8.1, on the other hand, is based on Microsoft
    Windows, and shares its system architecture and the file system (NTFS).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Phone 是一个独特的系统。其他三个系统都是基于 Unix 的。苹果的 iOS 基于 BSD UNIX，谷歌的 Android 基于
    Linux，BlackBerry 10 基于 QNX。而 Windows Phone 8/8.1 则基于微软的 Windows，并共享其系统架构和文件系统（NTFS）。
- en: Windows Phone 8/8.1 is a well-balanced operating system that learned a lot from
    Android and iOS. Somewhat similar to iOS, it offers the ability to create cloud
    backups (although these backups contain less information compared to iOS, with
    almost no application data being restored, save for login data). The OS features
    separate data space (sandbox) for each application and leaves no residual garbage
    after removing an app. However, it allows access to shared files (for example,
    music and videos can be played by any supported application and not just that
    one app the user imported the data to), which is similar to Android. Just like
    iOS, Windows Phone does not normally allow installing applications from sources
    other than Windows Store.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Phone 8/8.1 是一个平衡良好的操作系统，借鉴了 Android 和 iOS 的许多优点。与 iOS 略似，它提供了创建云备份的功能（尽管这些备份包含的信息较少，与
    iOS 相比，几乎没有应用程序数据被恢复，只有登录数据会被恢复）。该操作系统为每个应用提供独立的数据空间（沙盒），并且删除应用后不会留下残余垃圾。然而，它允许访问共享文件（例如，任何支持的应用程序都可以播放音乐和视频，而不仅仅是用户导入数据的那个应用程序），这与
    Android 相似。像 iOS 一样，Windows Phone 通常不允许从 Windows Store 以外的来源安装应用程序。
- en: Windows Phone devices can be officially developer-unlocked to allow installing
    a limited number of unsigned applications from third-party sources. However, unlike
    in Android, there is no way for a user-installable app to obtain administrative
    access. Since Windows Phone devices cannot be rooted or jailbroken, there is no
    way to install an executable file with administrative-level access either.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Phone 设备可以通过官方的开发者解锁来安装来自第三方来源的有限数量的未签名应用程序。然而，与 Android 不同，用户安装的应用无法获得管理员权限。由于
    Windows Phone 设备无法被 root 或越狱，因此也无法安装具有管理员级别访问权限的可执行文件。
- en: As a result, it is impossible to develop a user-level application to launch
    on the phone in order to gain access to unallocated space. The issue is the result
    of both insufficient privileges and missing low-level disk access APIs.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，无法开发用户级应用程序在手机上启动以访问未分配的空间。这个问题是由于权限不足和缺少低级磁盘访问 API 导致的。
- en: Windows Phone 8/8.1 devices sold to end users don't come with pre-activated
    encryption. Unlike in Android, users cannot manually activate encryption on their
    devices, and there is no encryption option available anywhere in the settings.
    This allows using JTAG and chip-off acquisition methods to extract the device's
    full disk image. In addition, acquisition methods exist that allow reading the
    eMMC chip directly without removing it from the circuit board. Limitations common
    to all eMMC storage will apply (as described in the *eMMC and Deleted Data* section).
    Windows 10 Mobile changed this behavior and allows full user control over encryption
    (and decryption) of the device.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 销售给最终用户的 Windows Phone 8/8.1 设备没有预先启用加密。与 Android 不同，用户不能手动在设备上启用加密，且设置中没有任何加密选项。这使得可以使用
    JTAG 和芯片提取方法提取设备的完整磁盘镜像。此外，还存在一些方法可以直接读取 eMMC 芯片，而无需将其从电路板上移除。所有 eMMC 存储的常见限制都适用（如在
    *eMMC 和已删除数据* 部分所述）。Windows 10 Mobile 改变了这种行为，允许用户完全控制设备的加密（和解密）。
- en: Some Windows Phone 8 devices of fairly recent generations (for example, Nokia
    Lumia 520) can be acquired via physical acquisition by exploiting a bootloader
    hack. Cellerbrite offers a tool (**UFED**) that can perform physical acquisitions
    of selected Windows Phones. Images acquired via this method (if the device is
    not encrypted) will contain full, raw dumps of the phone's storage including unallocated
    areas.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 一些较新的 Windows Phone 8 设备（例如，诺基亚 Lumia 520）可以通过利用启动加载器漏洞进行物理获取。Cellebrite 提供了一种工具（**UFED**），可以对选定的
    Windows Phone 进行物理获取。通过这种方法获取的镜像（如果设备没有加密）将包含手机存储的完整原始转储，包括未分配的区域。
- en: Windows Phone BitLocker encryption
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows Phone BitLocker 加密
- en: In general, the Windows Phone OS (versions 8 and 8.1, as well as Windows 10
    Mobile) supports using BitLocker technology to encrypt user data. The technology
    effectively protects information (including unallocated areas) against hardware
    attacks such as JTAG and chip-off extraction.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，Windows Phone 操作系统（版本 8 和 8.1 以及 Windows 10 Mobile）支持使用 BitLocker 技术来加密用户数据。该技术有效地保护信息（包括未分配区域）免受
    JTAG 和芯片提取等硬件攻击。
- en: In Windows Phone 8 and 8.1, end users have no control over device encryption.
    There is no option to activate or deactivate encryption anywhere in the phone
    settings.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows Phone 8 和 8.1 中，最终用户无法控制设备加密。手机设置中没有任何选项可以启用或禁用加密。
- en: In Windows 10 Mobile, Microsoft added a user-accessible Device Encryption setting.
    Interestingly, Microsoft allows both enabling and disabling encryption, allowing
    investigators to actually decrypt encrypted devices with a simple change of a
    setting. Needless to say, any data stored in unallocated space is **permanently
    lost** during the decryption process.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 10 Mobile 中，微软添加了一个用户可访问的设备加密设置。有趣的是，微软允许同时启用和禁用加密，允许调查人员通过简单的设置更改来解密加密的设备。不用说，任何存储在未分配空间中的数据在解密过程中将**永久丢失**。
- en: '![Windows Phone BitLocker encryption](img/0182.jpeg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![Windows Phone BitLocker 加密](img/0182.jpeg)'
- en: Windows 10 Device Encryption
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 10 设备加密
- en: 'Windows Phone devices used in corporate environments will normally have BitLocker
    encryption activated out of the box, according to Microsoft ([https://dev.windowsphone.com/en-US/OEM/docs/Phone_Bring-Up/Secure_boot_and_device_encryption_overview](https://dev.windowsphone.com/en-US/OEM/docs/Phone_Bring-Up/Secure_boot_and_device_encryption_overview)).
    Device encryption is not enabled by default. Device encryption is automatically
    enabled in the following scenarios:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 根据微软的说明（[https://dev.windowsphone.com/en-US/OEM/docs/Phone_Bring-Up/Secure_boot_and_device_encryption_overview](https://dev.windowsphone.com/en-US/OEM/docs/Phone_Bring-Up/Secure_boot_and_device_encryption_overview)），Windows
    Phone 设备在企业环境中通常会预先启用 BitLocker 加密。设备加密并不是默认启用的。以下情况会自动启用设备加密：
- en: The user adds an Outlook account to the phone, and the Microsoft Exchange server
    that it connects to is configured to require device encryption
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户将 Outlook 帐户添加到手机中，并且它连接的 Microsoft Exchange 服务器被配置为要求设备加密。
- en: The user connects the phone to a company apps account, and the enterprise device
    management server for the account pushes down a policy to the phone that requires
    device encryption
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户将手机连接到公司应用帐户，并且该帐户的企业设备管理服务器会将一个要求设备加密的策略推送到手机上。
- en: In either of these scenarios, the phone automatically begins encrypting the
    main OS and internal user data store partitions after the device encryption policy
    change is configured on the phone. The device encryption work is throttled to
    minimize the impact to end users.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，设备加密策略更改配置在手机上后，手机会自动开始加密主操作系统和内部用户数据存储分区。加密工作会被限制，以最小化对终端用户的影响。
- en: This encryption effectively prevents capturing the full disk image via physical
    acquisition, and makes unallocated space analysis impossible. JTAG/chip-off acquisitions
    can still be done, but becomes useless.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这种加密有效地防止了通过物理获取捕获完整磁盘映像，并使得未分配空间分析变得不可能。JTAG/芯片拆卸获取仍然可以进行，但会变得毫无用处。
- en: According to Microsoft, *Unlike BitLocker for desktop Windows, there is no recovery
    key backup and no UI option for end users to enable or disable device encryption
    on Windows Phones. Microsoft Exchange servers and enterprise device management
    servers cannot disable device encryption after it has been enabled*.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 根据微软的说法，*与桌面 Windows 的 BitLocker 不同，Windows Phone 上没有恢复密钥备份，也没有用户界面选项让终端用户启用或禁用设备加密。微软
    Exchange 服务器和企业设备管理服务器无法在启用设备加密后禁用它*。
- en: Tip
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '[https://dev.windowsphone.com/en-US/OEM/docs/Phone_Bring-Up/Secure_boot_and_device_encryption_overview](https://dev.windowsphone.com/en-US/OEM/docs/Phone_Bring-Up/Secure_boot_and_device_encryption_overview)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dev.windowsphone.com/en-US/OEM/docs/Phone_Bring-Up/Secure_boot_and_device_encryption_overview](https://dev.windowsphone.com/en-US/OEM/docs/Phone_Bring-Up/Secure_boot_and_device_encryption_overview)'
- en: Windows Phone SD cards
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows Phone SD 卡
- en: Many Windows Phone smartphones (with a few exceptions) have support for external
    storage via an SD card slot. The Windows Phone OS implements advanced support
    for external storage, allowing users to not only store music and videos on an
    SD card, but use the external storage to install applications. Unlike in Android,
    this functionality is standard on all Windows Phone devices equipped with an SD
    card slot regardless of OEM. In particular, entry-level Windows Phone devices
    with a limited amount of internal storage (for example, 8 GB models) are very
    likely to have an SD card installed, which makes acquisition easier.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 Windows Phone 智能手机（有少数例外）支持通过 SD 卡槽使用外部存储。Windows Phone 操作系统实现了对外部存储的高级支持，允许用户不仅可以在
    SD 卡上存储音乐和视频，还可以使用外部存储安装应用程序。与 Android 不同，这一功能在所有配备 SD 卡槽的 Windows Phone 设备上都是标准配置，无论是哪个
    OEM。特别是那些内部存储空间有限的入门级 Windows Phone 设备（例如 8 GB 型号）很可能会安装 SD 卡，这使得获取更加容易。
- en: Windows Phone offers no separate options to encrypt the content of SD cards.
    Instead, SD card encryption is triggered by the same corporate policy provisioned
    to the phone, meaning that most end user devices will remain completely unencrypted
    while most corporate devices will have encrypted internal partitions and activated
    encryption for SD cards.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Phone 没有单独的选项来加密 SD 卡的内容。相反，SD 卡加密是通过与手机相配套的公司政策触发的，这意味着大多数终端用户设备将保持完全未加密状态，而大多数公司设备将加密内部分区并启用
    SD 卡加密。
- en: Even if the security policy provisioned to the device demands SD card encryption,
    user files such as photos and videos will remain unencrypted as per Microsoft
    policy.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 即便设备的安全策略要求加密 SD 卡，根据微软政策，用户文件（如照片和视频）将保持未加密状态。
- en: More information on SD card encryption in Windows Phone 8.1 is available in
    [Chapter 8](ch08.html "Chapter 8\. Acquisition – Approaching Windows 8, 8.1, 10,
    and RT Tablets"), *Acquisition - Approaching Windows 8, 8.1, 10, and RT Tablets*.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Windows Phone 8.1 中 SD 卡加密的更多信息，请参阅 [第 8 章](ch08.html "第 8 章．获取 —— 接近 Windows
    8、8.1、10 和 RT 平板")，*获取 —— 接近 Windows 8、8.1、10 和 RT 平板*。
- en: Windows RT, Windows 8/8.1, and Windows 10
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows RT、Windows 8/8.1 和 Windows 10
- en: Since Windows RT is a closed platform that does not allow running unsigned desktop
    applications, acquisition options other than sending the device to the manufacturer
    (accompanied with a government request) are limited.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Windows RT 是一个封闭平台，不允许运行未签名的桌面应用程序，除了将设备送回制造商（并附带政府请求）以外，其他获取选项非常有限。
- en: Since most Windows RT devices (as well as many tablets running Windows 8/8.1/10)
    are properly equipped for BitLocker drive encryption, the chance of encountering
    a device with an encrypted system partition is higher. (To recoup, BitLocker full
    disk protection is activated automatically by default, without user intervention,
    if the device is equipped with a TPM module, has non-removable (soldered) RAM,
    and the user logs in with their Microsoft Account as opposed to using a local
    Windows account.) More on BitLocker protection in **BITLOCKER DEVICE ENCRYPTION**.
    Note that BitLocker Recovery Keys can be obtained from Microsoft with a government
    request.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 由于大多数 Windows RT 设备（以及许多运行 Windows 8/8.1/10 的平板电脑）都配备了适当的 BitLocker 磁盘加密功能，因此遇到加密系统分区的设备的可能性较高。（为了恢复，默认情况下，如果设备配备了
    TPM 模块，具有不可拆卸的（焊接）内存，并且用户使用 Microsoft 账户登录而不是本地 Windows 账户，BitLocker 全盘保护会自动启用，而无需用户干预。）有关
    BitLocker 保护的更多内容，请参见 **BITLOCKER DEVICE ENCRYPTION**。请注意，BitLocker 恢复密钥可以通过政府请求从
    Microsoft 获取。
- en: BitLocker encryption is volume-based. On eMMC and SSD drives, BitLocker provides
    trim pass-through, and does not encrypt unallocated space. Released data blocks
    will remain encrypted until they are trimmed by the SSD or eMMC controller.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: BitLocker 加密是基于卷的。在 eMMC 和 SSD 硬盘上，BitLocker 提供了 TRIM 透传功能，并且不会加密未分配的空间。已释放的数据块将保持加密状态，直到被
    SSD 或 eMMC 控制器修剪。
- en: If BitLocker encryption is not activated, the usual acquisition techniques,
    and all considerations applicable to eMMC in general, will apply. However, Windows
    RT acquisition may be tricky, with chip-off extraction possibly being the best
    possible course of action.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 BitLocker 加密没有被启用，通常的获取技术以及适用于 eMMC 的所有考虑事项仍然适用。然而，Windows RT 的获取可能会较为复杂，芯片提取可能是最有效的解决办法。
- en: Most Windows RT devices (and practically all Windows 8/8.1 tablets) support
    SD cards. While Windows RT can access (and decrypt) SD cards with BitLocker To
    Go, the system does not come with tools to encrypt the SD card. (Users can still
    encrypt their SD card with a password on a different PC running the full version
    of Windows 8/8.1/10, and use that card, encrypted, with Windows RT.) As a result,
    you will most likely see an unencrypted SD card. Since many Windows and Windows
    RT devices are equipped with barely enough storage to keep Windows installation
    as well as Metro apps (32 GB is barely enough for that purpose), it is very likely
    that the user will have a micro SD card installed.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Windows RT 设备（几乎所有 Windows 8/8.1 平板电脑）都支持 SD 卡。虽然 Windows RT 可以访问（并解密）通过
    BitLocker To Go 加密的 SD 卡，但该系统没有提供加密 SD 卡的工具。（用户仍然可以在运行完整版 Windows 8/8.1/10 的另一台
    PC 上为 SD 卡设置密码进行加密，然后使用该加密卡在 Windows RT 设备上。）因此，你很可能会看到未加密的 SD 卡。由于许多 Windows
    和 Windows RT 设备的存储空间不足以同时存放 Windows 安装和 Metro 应用程序（32GB 几乎只能满足此需求），因此用户很可能会安装一张
    micro SD 卡。
- en: Note that in *full* (non-RT) versions of Windows, BitLocker To Go is only supported
    in the Pro and Enterprise editions of Windows 8 and 8.1.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在 *完整版*（非 RT）版本的 Windows 中，BitLocker To Go 仅在 Windows 8 和 8.1 的专业版和企业版中支持。
- en: Also note that Windows RT and Windows 8/8.1/10 maintain a OneDrive backup of
    the user's documents (if the user is logged in with their Microsoft Account),
    and a full application backup (with app data) is maintained in the user's Microsoft
    Account. Providing that the user's Microsoft Account login and password are known,
    examiners can extract information from the cloud. Alternatively, a government
    request can be sent to Microsoft to obtain information they have including all
    BitLocker Recovery Keys stored in the cloud.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要注意，Windows RT 和 Windows 8/8.1/10 会在用户的 Microsoft 账户下保持 OneDrive 备份文档（如果用户使用
    Microsoft 账户登录），并且会在用户的 Microsoft 账户中保持完整的应用程序备份（包括应用数据）。只要知道用户的 Microsoft 账户登录信息和密码，检查员就可以从云端提取信息。或者，可以向
    Microsoft 提交政府请求，获取他们所拥有的信息，包括存储在云端的所有 BitLocker 恢复密钥。
- en: eMMC and deleted data
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: eMMC 和已删除的数据
- en: One of the few things that all mobile devices have in common is the choice of
    the type of internal storage. All Apple smartphones and tablets, most Android
    devices since Android 2.3 Gingerbread, all BlackBerry 10 smartphones, Windows
    Phone 8, Windows RT, and a lot of Windows 8/8.1 tablets use eMMC chips as their
    storage.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 所有移动设备的少数共同点之一是内部存储类型的选择。所有苹果智能手机和平板电脑，大多数自 Android 2.3 Gingerbread 以来的安卓设备，所有
    BlackBerry 10 智能手机，Windows Phone 8，Windows RT，以及大量的 Windows 8/8.1 平板电脑都使用 eMMC
    芯片作为存储。
- en: '**eMMC** stands for **embedded MMC**, or **embedded MultiMedia Card**. To put
    it simply, eMMC is a non-removable memory card that is soldered onto a circuit
    board. Unlike *plain* flash memory chips, the eMMC standard uses a combination
    of NAND modules and an integrated storage controller built into a single chip.
    It is the storage controller that makes things so different to traditional storage
    media when it comes to recovering deleted information.'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '**eMMC** 代表 **嵌入式 MMC**，即 **嵌入式多媒体卡**。简单来说，eMMC 是一种不可拆卸的内存卡，焊接在电路板上。与*普通*闪存芯片不同，eMMC
    标准采用了 NAND 模块和集成存储控制器的组合，并将它们集成在一个芯片中。正是这个存储控制器使得恢复已删除信息的方式与传统存储介质有很大不同。'
- en: In broad general terms, the embedded storage controller takes care of all the
    reading and writing operations. In addition (and this is the important part),
    the eMMC specification defines a number of maintenance routines designed to maintain
    performance and keep flash memory in good health in a way that's very similar
    to how SSD drives perform.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 从大致来说，嵌入式存储控制器负责所有的读写操作。此外（这是关键部分），eMMC 规范定义了一些维护程序，旨在通过与 SSD 驱动器相似的方式，保持闪存的性能并维持其健康状态。
- en: eMMC and SSD – similarities
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: eMMC 和 SSD – 相似之处
- en: Technically speaking, eMMC memory is similar to SSD drives in that it relies
    on solid-state NAND flash chips to store data, and uses an integrated controller
    to perform read, writes, and all maintenance operations.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度讲，eMMC 存储与 SSD 驱动器相似，因为它依赖于固态 NAND 闪存芯片来存储数据，并使用集成控制器执行读取、写入以及所有维护操作。
- en: 'NAND flash chips used in both eMMC and SSD drives have two inherent properties:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: eMMC 和 SSD 驱动器中使用的 NAND 闪存芯片具有两个固有特性：
- en: Solid-state storage based on NAND flash chips can only write data to an empty
    block. If the block contains information, it must be erased before it can accept
    new data. Erasing a non-empty block is much slower compared to writing into an
    empty one. These properties are shared between eMMC and SSD drives because they
    use underlying physical media of the same type.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 NAND 闪存芯片的固态存储只能向空白块写入数据。如果块中已经有信息，则必须先擦除该块才能接受新数据。与向空块写入数据相比，擦除非空块的速度要慢得多。这些特性在
    eMMC 和 SSD 驱动器之间是共享的，因为它们使用的是相同类型的底层物理介质。
- en: NAND flash chips have a limited lifespan. Each cell can only sustain a finite
    number of writes. Every time new data is written to a cell, the cell starts leaking
    slightly more current than before. After a certain number of write cycles, the
    leak will become significant enough to severely affect the ability of the cell
    to retain data. Most manufacturers rate their flash cells to a certain number
    of write operations, assuming three-month data retention while powered off.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NAND 闪存芯片具有有限的使用寿命。每个单元只能承受有限次数的写入操作。每次将新数据写入单元时，该单元会开始比之前泄漏更多的电流。在经历一定次数的写入周期后，这种泄漏会变得足够严重，从而严重影响单元保持数据的能力。大多数制造商会将其闪存单元的写入次数设定为一定的标准，并假设在断电情况下数据能保留三个月。
- en: Because of the underlying technology, the eMMC standard defines performance
    optimization and wear leveling measures similar to those used in SSD drives. Overprovisioning,
    instant remapping, wear leveling, trim, and background garbage collection are
    properties of both eMMC and SSD drives. This, in turn, means that we'll observe
    issues with eMMC media self-destructing evidence as a result of those background
    processes.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 由于底层技术的原因，eMMC 标准定义了性能优化和磨损均衡措施，类似于 SSD 驱动器所使用的技术。超额配置、即时重映射、磨损均衡、修整和后台垃圾回收是
    eMMC 和 SSD 驱动器的共同特点。这意味着我们会观察到由于这些后台进程，eMMC 媒体自毁的现象。
- en: However, despite similarities, eMMC and SSD drives implement those technologies
    differently, still retaining remnants of information even after it's been deleted.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管有相似之处，eMMC 和 SSD 驱动器在实现这些技术时有所不同，即使在删除数据之后，它们仍然保留一些信息的残余。
- en: eMMC and SSD – differences
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: eMMC 和 SSD – 区别
- en: The main technical difference between eMMC memory and SSD drive is not the type,
    but the number of NAND flash chips used. SSD drives are so much faster compared
    to eMMC, not because they employ special types of ultra-fast flash memory (yet,
    in general, manufacturers tend to pick higher-quality chips for SSD drives compared
    to eMMC modules). Instead, SSD drives are equipped with multiple flash chips working
    in parallel. As a result, their controllers have the ability to read and write
    data from (or to) several flash cells at the same time. This ability dramatically
    increases SSD performance compared to single-chip solutions.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: eMMC 存储和 SSD 驱动器之间的主要技术区别不在于类型，而在于使用的 NAND 闪存芯片数量。与 eMMC 相比，SSD 驱动器速度要快得多，这并不是因为它们使用了超高速闪存（尽管通常，制造商倾向于为
    SSD 驱动器选择比 eMMC 模块更高质量的芯片）。而是 SSD 驱动器配备了多个并行工作的闪存芯片。因此，它们的控制器能够同时从多个闪存单元读取和写入数据。这种能力使得
    SSD 在与单芯片解决方案相比时，性能大大提高。
- en: 'As we can see, SSD drives are equipped with faster, smarter, and much more
    complex controllers. These controllers are also much larger, taking more space
    and consuming more energy. eMMC chips are built for different requirements. Used
    in portable, battery-powered devices, they must be small and power-efficient.
    As a result, not only are they not equipped with parallel operations, but they
    employ simplified versions of some of the maintenance algorithms used in SSD drives.
    This includes:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，SSD 驱动器配备了更快、更智能且更复杂的控制器。这些控制器也更大，占用更多空间并消耗更多能量。eMMC 芯片则是为了满足不同的需求而设计的。由于用于便携式电池供电的设备，它们必须小巧且节能。因此，eMMC
    芯片不仅不具备并行操作功能，而且采用了简化版的 SSD 驱动器中使用的一些维护算法。包括：
- en: Unlike SSD drives, eMMC controllers may not start erasing trimmed data immediately.
    In many cases, deleted data may remain intact even after the trim command has
    been issued. For example, many Android phones will only trim data upon shutdown.
    For the purpose of forensic extraction, this means that eMMC chips may maintain
    deleted data for longer than SSD drives.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 SSD 驱动器不同，eMMC 控制器可能不会立即开始擦除已修剪的数据。在许多情况下，即使发出了修剪命令，已删除的数据仍可能保持不变。例如，许多 Android
    手机仅在关机时才会进行数据修剪。对于法医提取而言，这意味着 eMMC 芯片可能比 SSD 驱动器更长时间地保存已删除的数据。
- en: Unlike SSD drives, the eMMC standard does not define a deterministic trim. Used
    in SSD drives, **DRAT** (**Deterministic Read After Trim**) defines that the controller
    will return the same data for all trimmed blocks. Its extended version **DZAT**
    (**Deterministic Zero After Trim**) means that the SSD controller will return
    all zeroes on any attempt to read trimmed blocks—even of the physical blocks that
    have not yet been erased. Now, eMMC controllers are NOT equipped with a deterministic
    trim. For that reason, the controller will return the actual content of the cell—even
    if it's marked as trimmed. For the purpose of mobile forensics, this means that
    deleted data can be stored in a recoverable state for a much longer time compared
    to SSD drives.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 SSD 驱动器不同，eMMC 标准没有定义确定性修剪。SSD 驱动器中使用的 **DRAT**（**修剪后确定性读取**）定义了控制器会为所有已修剪的块返回相同的数据。其扩展版本
    **DZAT**（**修剪后确定性零值读取**）意味着 SSD 控制器在任何尝试读取已修剪的块时都会返回所有零值——即使是那些尚未擦除的物理块。现在，eMMC
    控制器不具备确定性修剪。因此，控制器将返回单元的实际内容——即使它已经被标记为已修剪。对于移动法医分析而言，这意味着已删除的数据可以在较长时间内以可恢复的状态保存，相比之下，SSD
    驱动器则不然。
- en: Overprovisioning and remapping
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超额预留和重映射
- en: Of particular interest are overprovisioning (the fact that a memory chip has
    more physical storage than advertised to the outside world) and remapping (the
    ability of the embedded controller to instantly reassign logical addresses to
    different physical blocks).
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 特别需要注意的是超额预留（即内存芯片的物理存储容量超过了向外界宣传的容量）和重映射（嵌入式控制器能够即时重新分配逻辑地址到不同的物理块）。
- en: Overprovisioning is used by manufacturers as a means to increase write performance
    and the effective lifespan of the flash storage. The controller can instantly
    push a logical data block out of service and into the overprovisioned area, where
    that block will be erased and prepared for future service. Importantly, overprovisioned
    data blocks are non-addressable and not accessible by any means except by the
    controller. There is no way to extract data blocks from the overprovisioned area
    by any logical or physical means. JTAG and chip-off acquisition methods will *only*
    return addressable space because they work through the eMMC controller (instead
    of accessing the NAND flash chips directly). The possibility of reading data directly
    off NAND chips is more of a theoretical one. It can be done, but at great expense
    and requiring extremely complex hardware.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 超配是制造商用来提高写入性能和延长闪存存储有效寿命的一种手段。控制器可以立即将一个逻辑数据块从服务中推送到超配区域，在那里该块将被擦除并准备好为将来的使用服务。重要的是，超配数据块是不可寻址的，除了通过控制器，无法通过任何方式访问它们。没有办法通过任何逻辑或物理方式从超配区域提取数据块。JTAG和芯片拆除提取方法*仅*会返回可寻址的空间，因为它们是通过eMMC控制器工作（而不是直接访问NAND闪存芯片）。直接从NAND芯片读取数据的可能性更像是一种理论上的可能性。虽然可以实现，但代价巨大且需要极为复杂的硬件。
- en: Overprovisioned data blocks in eMMC chips are not accessible to any data recovery
    program or app. They will not become part of a raw image or dump. Overprovisioned
    areas remain invisible during JTAG and chip-off acquisition because JTAG and chip-off
    requests are served by the controller integrated into the eMMC chip (as opposed
    to directly accessing NAND flash chips). If the device is equipped with plain
    flash chips, JTAG, using the Boundary Scan technique or chip-off acquisition,
    will return the entire content of those chips complete with overprovisioned areas.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: eMMC芯片中的超配数据块无法被任何数据恢复程序或应用程序访问。它们不会成为原始镜像或转储的一部分。在JTAG和芯片拆除提取过程中，超配区域保持不可见，因为JTAG和芯片拆除请求是由集成在eMMC芯片中的控制器处理的（而不是直接访问NAND闪存芯片）。如果设备使用的是普通闪存芯片，则JTAG、使用边界扫描技术或芯片拆除提取，将返回这些芯片的完整内容，包括超配区域。
- en: Overprovisioned blocks can be pulled to service by the controller integrated
    into the eMMC chip. The controller can instantly assign a logical address to any
    healthy physical block, including overprovisioned blocks. This, in turn, can mean
    that data block(s) belonging to a deleted file can be instantly pushed into the
    overprovisioned area by means of data remapping, while an already erased physical
    block will correspond to the logical address that used to belong to a deleted
    file.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 超配块可以通过集成在eMMC芯片中的控制器被调入服务。控制器可以立即为任何健康的物理块分配一个逻辑地址，包括超配块。这意味着，已删除文件的数据块可以通过数据重映射迅速推送到超配区域，而一个已经擦除的物理块将对应到原本属于已删除文件的逻辑地址。
- en: User data in overprovisioned areas
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超配区域中的用户数据
- en: 'We''ve been asked this question: *Have you determined if any user data is also
    found in this space? Is this like the bad sectors on the older NAND flash that
    may have contained older-dated user data that could only be obtained through chip-off?
    Or does the eMMC Controller allow user data to be stored there and one requires
    a process to gain access to these areas using chip-off, ISP, or JTAG?*'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们收到过这样的问题：*您是否已经确定该空间中是否也包含用户数据？这是否像旧版NAND闪存中的坏块，可能包含旧日期的用户数据，只有通过芯片拆除才能获取？或者eMMC控制器是否允许用户数据存储在此区域，并且需要通过芯片拆除、ISP或JTAG等过程才能访问这些区域？*
- en: It is important to understand what overprovisioned space is, and what it isn't.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 理解什么是超配空间以及它不是什麽非常重要。
- en: In the context of eMMC chips, an overprovisioned area represents a number of
    extra storage blocks that are not advertised as available storage capacity. These
    blocks don't have physical addresses that could be used by the OS to access. There
    is no standard way or process to gain access to them from the outside world. Only
    the eMMC controller embedded into the chip has access to these blocks. However,
    no standard mechanisms, commands, or processes are defined by the eMMC standard
    that could be used to make the controller dump the contents of the overprovisioned
    area.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在eMMC芯片的背景下，超配区域代表了一些额外的存储块，这些块并未作为可用存储容量公开。这些块没有可以被操作系统访问的物理地址。没有标准的方式或过程可以从外部世界访问它们。只有嵌入芯片中的eMMC控制器可以访问这些块。然而，eMMC标准没有定义任何标准机制、命令或过程，可以用来让控制器转储超配区域的内容。
- en: 'Overprovisioned blocks can be one of the following:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 过度配置的块可以是以下之一：
- en: '**Bad blocks**: Each and every eMMC chip, with no exceptions, contains a number
    of bad memory blocks out-of-the-factory. These are permanently mapped out. If
    any particular NAND block expires (reaches the maximum number of allowable write
    cycles) or gets bad, it can be permanently overprovisioned. Its physical address
    will be assigned to one of the healthy blocks from the overprovisioned area.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**坏块**：每一颗eMMC芯片，无一例外，出厂时都包含一定数量的坏内存块。这些块会被永久标记为不可用。如果某个特定的NAND块失效（达到最大允许写入周期）或出现问题，它可以被永久过度配置。其物理地址将被分配到过度配置区域中的一个健康块。'
- en: '**Trimmed (erased) blocks**: These are commonly used by the controller as quick
    substitutes for dirty blocks marked for trimming. If this happens, the controller
    maps the dirty block out of the addressable space, and assigns its address to
    a fresh block from the overprovisioned area.'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**修剪（擦除）块**：这些块通常被控制器用作脏块的快速替代品，脏块被标记为待修剪。如果发生这种情况，控制器会将脏块从可寻址空间中映射出去，并将其地址分配给来自过度配置区域的一个新的块。'
- en: '**Dirty blocks**: These blocks still contain information, waiting for their
    turn to be cleaned (trimmed, erased). Eventually, these blocks will be erased;
    however, there is no defined timeframe, so there is no way to know if a certain
    block will be erased at any particular time. If (or when) these blocks will be
    actually trimmed depends on the make and model of a particular eMMC chip, the
    controller used, and the current I/O load.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**脏块**：这些块仍包含信息，等待清理（修剪、擦除）。最终，这些块将被擦除；然而，没有定义的时间框架，因此无法知道某个特定块是否会在某个特定时刻被擦除。是否（或何时）这些块会被实际修剪，取决于特定eMMC芯片的型号、所使用的控制器以及当前的I/O负载。'
- en: As can be seen, overprovisioned blocks may still contain user data. Due to the
    nature of eMMC chips, accessing the actual NAND flash modules is extremely difficult,
    and not possible without precise equipment.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，过度配置的块仍可能包含用户数据。由于eMMC芯片的特性，访问实际的NAND闪存模块极为困难，且没有精确的设备是无法完成的。
- en: Due to the constraints of eMMC, we've never been able to access a real, raw
    dump of the NAND chip (as opposed to dumps obtained via chip-off). However, our
    experience with SSD drives (which do contain individual NAND chips that can be
    dumped) suggests that there can be remnants of user data scattered around in both
    addressable trimmed blocks as well as in the overprovisioned area.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 由于eMMC的限制，我们从未能够访问到真实的NAND芯片原始转储（与通过芯片拆卸获取的转储相对）。然而，我们在SSD硬盘上的经验表明（SSD硬盘包含可拆卸的独立NAND芯片），即便是在可寻址的修剪块中以及过度配置区域内，也可能会散布着一些用户数据的残留。
- en: In the case of portable electronic devices, this will be actual user data as
    opposed to system files. In smartphones and tablets, system files are predominantly
    read-only and are not normally shuffled around or deleted, unless a recent OTA/firmware
    update was applied.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 对于便携式电子设备，这些将是实际的用户数据，而非系统文件。在智能手机和平板电脑中，系统文件主要是只读的，通常不会被移动或删除，除非最近应用了OTA/固件更新。
- en: To conclude this chapter, it must be said that acquiring the content of overprovisioned
    areas (by capturing raw physical dumps of the NAND chips) is so complicated, yet
    the amount of potential user data is so negligible that the process is hardly
    worth it, except under extreme circumstances.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 总结本章内容，必须提到，通过捕获NAND芯片的原始物理转储来获取过度配置区域的内容是非常复杂的，而且潜在的用户数据量微不足道，因此该过程几乎不值得进行，除非在极端情况下。
- en: Delete operations on non-encrypted eMMC drives
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除操作在非加密的eMMC驱动器上的处理
- en: Once a file is deleted from an unencrypted eMMC volume, the operating system
    will make changes to the file system to indicate that certain sectors (defined
    on a file system level) are no longer in use. The operating system will also send
    the Trim command to the eMMC controller, telling the device that certain physical
    data blocks are no longer used. The eMMC controller then assigns the special *do
    not care* status to those data blocks. So far, it's been pretty straightforward.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦从未加密的eMMC卷中删除了文件，操作系统会对文件系统进行更改，以指示某些扇区（在文件系统层面上定义）不再使用。操作系统还会向eMMC控制器发送修剪命令，告诉设备某些物理数据块不再被使用。然后，eMMC控制器会将这些数据块标记为特殊的*无关*状态。到目前为止，这一过程一直非常简单明了。
- en: 'What happens next depends on the particular eMMC controller and its internal
    programs. As we mentioned earlier, NAND flash cells can be written much faster
    if previously erased (they must be erased before they can be written to). As a
    result, the eMMC controller will do two things:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来发生的事情取决于具体的eMMC控制器及其内部程序。如前所述，NAND闪存单元如果先前被擦除，可以更快速地写入（它们必须在写入前先被擦除）。因此，eMMC控制器将做两件事：
- en: The controller will schedule trimmed blocks to be emptied (erased) to prepare
    them for accepting new data.
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制器将调度已修剪的块进行清空（擦除），以准备它们接收新数据。
- en: 'The controller may remap those data blocks, assigning their logical addresses
    to already-emptied physical blocks. Those already-emptied data blocks can be taken
    from available (addressable) blocks, or pulled from the overprovisioned area.
    Such remapping has two goals: it allows the system to write new data to that logical
    address immediately without waiting for it to be erased (increasing effective
    write speeds), and allows the controller to write data to flash cells with the
    least number of write cycles on them (regardless of those cells'' physical addresses).'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制器可能会重新映射这些数据块，将它们的逻辑地址分配给已经被清空的物理块。这些已清空的数据块可以来自可用（可寻址）块，或者从超配区拉取。这样的重新映射有两个目标：它允许系统立即将新数据写入该逻辑地址，而无需等待其被擦除（提高了有效写入速度），并允许控制器将数据写入那些擦写周期最少的闪存单元（无论这些单元的物理地址如何）。
- en: As a result, the operating system (or any application attempting to read that
    particular sector) may discover that sectors belonging to a recently deleted file
    have become empty in an instant—much faster in fact that it takes for the flash
    chip to actually erase data.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，操作系统（或任何试图读取该特定扇区的应用程序）可能会发现，属于最近删除文件的扇区会在瞬间变为空——实际上，这比闪存芯片实际擦除数据的速度要快得多。
- en: As a forensic expert, you may wonder what happens to those data blocks that
    still contain information from that deleted file. Those data blocks can be remapped
    to another logical address (meaning that you should be able to carve the file
    after taking a full dump of the eMMC chip). Alternatively, those data blocks could
    be pushed out of the addressable space and placed into an overprovisioned area,
    where the integrated controller will erase their content in the background. If
    those data blocks end up in the overprovisioned area, there is no feasible way
    of extracting their content—even if you use JTAG or chip-off extraction.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名取证专家，你可能会想知道那些仍包含已删除文件信息的数据块会发生什么。这些数据块可以被重新映射到另一个逻辑地址（这意味着你应该能够在对eMMC芯片进行完整转储后恢复该文件）。或者，这些数据块可能会被推出寻址空间，进入超配区，集成控制器将在后台擦除它们的内容。如果这些数据块最终进入超配区，那么即使使用JTAG或芯片提取技术，也没有可行的方法提取其内容。
- en: eMMC conclusion
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: eMMC总结
- en: Before we start discussing the particular implementations of the different mobile
    platforms, we can already conclude that recovering unallocated space is going
    to be difficult and not always possible due to the underlying technology. The
    chances to retrieve information from an eMMC chip are substantially higher compared
    to the situation with SSD drives, but significantly lower compared to traditional
    hard drives or flash-based storage media without integrated controllers.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始讨论不同移动平台的具体实现之前，我们已经可以得出结论：由于底层技术的原因，恢复未分配空间将是困难的，且并非总是可行的。从eMMC芯片中恢复信息的机会明显高于SSD驱动器，但显著低于传统硬盘或没有集成控制器的闪存存储介质。
- en: In other words, there still is a chance to recover deleted data from unallocated
    space... if the mobile operating system does not prevent it in one way or another.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，仍然有机会从未分配的空间中恢复已删除的数据……前提是移动操作系统没有以某种方式阻止它。
- en: SD cards
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SD卡
- en: Many Android phones, most Windows Phone 8, Windows RT, Windows 8/8.1 devices,
    and BlackBerry 10 phones are equipped with micro SD card slots to allow users
    to increase available storage capacity. Depending on the platform, certain limitations
    apply as to what types of data the users are allowed to keep on an SD card. For
    example, the Windows Phone 8 platform enables full, unrestricted use of an SD
    card including an option to install applications, while the different versions
    of Android implement strikingly different policies to external storage.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 许多Android手机、大多数Windows Phone 8、Windows RT、Windows 8/8.1设备和BlackBerry 10手机都配备了micro
    SD卡插槽，以允许用户增加可用存储容量。根据平台的不同，用户被允许在SD卡上保存什么类型的数据会有一定的限制。例如，Windows Phone 8平台允许完全无限制地使用SD卡，包括安装应用程序的选项，而不同版本的Android对外部存储实施着截然不同的政策。
- en: SD cards are frequently used to store multimedia files (music and videos), Camera
    Roll, offline maps (for example, HERE Maps or other navigation applications),
    and additional data (for example, extra files belonging to larger games). In Android,
    not all applications are able to use external storage to keep their data.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: SD卡经常用于存储多媒体文件（音乐和视频）、相机胶卷、离线地图（例如HERE Maps或其他导航应用程序）以及其他数据（例如属于较大游戏的额外文件）。在Android中，并非所有应用程序都能使用外部存储来保存它们的数据。
- en: Just like eMMC chips, SD cards are a combination of NAND flash chips and an
    integrated microcontroller. However, the built-in storage controller is much simpler
    than that of an eMMC drive. SD card controllers do have address remapping (as
    per manufacturing limitations, each NAND chip in every SD card contains a large
    number of unusable, faulty blocks that are simply mapped out); however, trimming
    erased data in the background is not part of the Secure Digital standard. As a
    result, data that belongs to files deleted from an unencrypted SD card will normally
    remain accessible until overwritten with new information.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 与eMMC芯片一样，SD卡是NAND闪存芯片和集成微控制器的组合。然而，内置存储控制器比eMMC驱动器的要简单得多。SD卡控制器确实具有地址重映射功能（根据制造限制，每个SD卡中的每个NAND芯片包含大量不可用的故障块，这些块被简单地映射出去）；然而，在Secure
    Digital标准中，后台修剪已擦除数据并不是其中的一部分。因此，从未加密的SD卡中删除的文件数据通常会保持可访问状态，直到被新信息覆盖。
- en: Note
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Note:** SDHC/SDXC specifications include support for **flash erase**, the
    command that permanently erases the content of data blocks. While some standard-sized
    SD cards support **flash erase**, mobile devices use the "micro" variety of SD
    cards. microSD cards are built to different specifications compared to standard-size
    SD cards. In particular, microSD cards do not support **flash erase**, meaning
    that background garbage collection is not possible. microSD cards do not support
    automatic wiping of released data blocks.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** SDHC/SDXC规格包括对**快闪擦除**的支持，这是永久擦除数据块内容的命令。虽然一些标准尺寸的SD卡支持**快闪擦除**，但移动设备使用的是"micro"型号的SD卡。microSD卡按照不同的规格构建，与标准尺寸的SD卡相比有所不同。特别是，microSD卡不支持**快闪擦除**，这意味着无法进行后台垃圾收集。microSD卡不支持释放数据块的自动擦除。'
- en: Another thing to note is the use of the file system. micro SD cards that conform
    to the SDHC standard (up to and including 32 GB cards) come formatted with FAT32,
    while the SDXC standard requires the use of exFAT, a new file system from Microsoft
    that lifts the 4 GB limitation for maximum file size. Microsoft collects licensing
    fees for supporting exFAT. This is the reason for many Android devices only supporting
    SD cards up to 32 GB (more often than not, these same devices will support a 64
    GB memory card if reformatted to FAT32). At the same time, even the cheapest Windows
    Phones support SDXC memory cards with exFAT.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要注意的事项是文件系统的使用。符合SDHC标准（包括32 GB卡）的micro SD卡采用FAT32格式，而SDXC标准则要求使用exFAT，这是微软推出的一种新文件系统，解除了最大文件大小的4
    GB限制。微软收取支持exFAT的许可费用。这就是为什么许多Android设备只支持最多32 GB的SD卡（更多情况下，如果重新格式化为FAT32，这些设备同样支持64
    GB存储卡）。与此同时，即使是最便宜的Windows手机也支持带有exFAT的SDXC存储卡。
- en: SD card encryption
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SD卡加密
- en: 'Many mobile platforms have the ability to encrypt the content of external storage
    including micro-SD cards. While encryption policies and implementations vary widely
    among the different ecosystems, two things are in common between all of them:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 许多移动平台具有加密外部存储内容（包括micro-SD卡）的功能。尽管不同生态系统之间的加密政策和实施方式各不相同，但它们之间有两个共同点：
- en: SD cards are almost never encrypted out of the box. The user (or system administrator,
    if the device is managed by a corporate policy) must explicitly encrypt the content
    of an SD card.
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SD 卡几乎从不是开箱即用的加密。用户（或系统管理员，如果设备受企业政策管理）必须明确加密 SD 卡的内容。
- en: SD card encryption is practically never full-disk encryption. This means that,
    when the user encrypts the SD card, only the file system is encrypted. Any free
    space (which may or may not contain remnants of deleted data) is left over.
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SD 卡加密实际上几乎从不是全盘加密。这意味着，当用户加密 SD 卡时，只有文件系统被加密。任何空闲空间（可能包含已删除数据的残留物）都会留下来。
- en: Other than that, the following policies are observed.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，还遵守以下政策。
- en: Apple iOS
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Apple iOS
- en: SD card support is not available in any Apple iOS device.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 Apple iOS 设备都不支持 SD 卡。
- en: Android
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android
- en: Users can manually encrypt SD cards. Factory reset typically wipes the content
    of internal memory; the content of an external SD card is rarely wiped, although
    data becomes inaccessible after the wipe due to encryption metadata being destroyed.
    This behavior may be different due to platform fragmentation and various OEM implementations.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以手动加密 SD 卡。恢复出厂设置通常会擦除内部存储器的内容；尽管数据在擦除后由于加密元数据被销毁而变得无法访问，但外部 SD 卡的内容很少被擦除。由于平台碎片化和各种
    OEM 实现的不同，此行为可能会有所不同。
- en: Most implementations make encryption of multimedia files (pictures, videos,
    and music) on SD cards optional. This opens the possibility for carving deleted
    pictures and videos from the SD card.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数实现使 SD 卡上多媒体文件（图片、视频和音乐）的加密是可选的。这为从 SD 卡中恢复已删除的图片和视频打开了可能性。
- en: If an Android device has an SD card mounted, the system and some applications
    may automatically use the SD card to store information. For example, Foursquare
    keeps parts of its data on an SD card by default, while WhatsApp uses the SD card
    to create backups. HERE Maps and some other navigation tools can be configured
    to store maps, voices, and parts of their data on an SD card. There are many more
    applications that use SD cards to keep data, which enables experts to carve the
    content of an SD card for evidence.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Android 设备已挂载 SD 卡，系统和一些应用程序可能会自动使用 SD 卡存储信息。例如，Foursquare 默认情况下将部分数据存储在
    SD 卡上，而 WhatsApp 使用 SD 卡创建备份。HERE Maps 和一些其他导航工具可以配置为将地图、语音和部分数据存储在 SD 卡上。有许多应用程序使用
    SD 卡存储数据，这使专家能够从 SD 卡中提取内容作为证据。
- en: Since Android does not come with the ability to format SD cards with a Linux
    file system such as ext3 or ext4, the majority of SD cards used in Android devices
    are formatted with either FAT32 (SDHC, cards up to and including 32 GB) or exFAT
    (SDXC, 64 GB and larger SD cards). Neither file system comes with access control
    or permission management. This, as well as the fact that the SD card can be easily
    removed, made some developers employ proprietary encryption to protect files stored
    on an SD card by their applications. This can become an extra obstacle when analyzing
    unallocated space from an SD card.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Android 不具备使用 Linux 文件系统（如 ext3 或 ext4）格式化 SD 卡的能力，大多数用于 Android 设备的 SD 卡都是使用
    FAT32（SDHC，32 GB 及以下的卡）或 exFAT（SDXC，64 GB 及更大的卡）格式化的。这两种文件系统都不带有访问控制或权限管理。这以及
    SD 卡可以轻松移除的事实，使一些开发人员采用专有加密来保护其应用程序存储在 SD 卡上的文件。这在分析 SD 卡未分配空间时可能会成为额外的障碍。
- en: Windows Phone 8/8.1
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows Phone 8/8.1
- en: Windows Phone 8.1 supports the ability to install apps on an SD card. According
    to Microsoft documentation ([http://download.microsoft.com/download/B/9/A/B9A00269-28D5-4ACA-9E8E-E2E722B35A7D/Windows-Phone-8-1-Security-Overview.pdf](http://download.microsoft.com/download/B/9/A/B9A00269-28D5-4ACA-9E8E-E2E722B35A7D/Windows-Phone-8-1-Security-Overview.pdf)),
    apps and their data are stored on a hidden partition on the SD card. If encryption
    is enabled on the device by the corresponding policy, this partition will be encrypted
    just like the internal storage. Notably, personal content such as photos and videos
    is stored on the SD card in an unencrypted partition so that the user can access
    the SD card on other devices. As a result, unallocated space can be carved at
    least for the unencrypted partition even if encryption is activated.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Phone 8.1 支持将应用程序安装到 SD 卡上。根据微软文档（[http://download.microsoft.com/download/B/9/A/B9A00269-28D5-4ACA-9E8E-E2E722B35A7D/Windows-Phone-8-1-Security-Overview.pdf](http://download.microsoft.com/download/B/9/A/B9A00269-28D5-4ACA-9E8E-E2E722B35A7D/Windows-Phone-8-1-Security-Overview.pdf)），应用程序及其数据存储在
    SD 卡上的一个隐藏分区中。如果设备通过相应的策略启用了加密，这个分区将像内部存储一样被加密。值得注意的是，照片和视频等个人内容存储在 SD 卡上的一个未加密分区中，以便用户可以在其他设备上访问
    SD 卡。因此，即使启用了加密，至少也可以为未加密分区预留出未分配的空间。
- en: In reality, we were unable to prove the existence of a special hidden partition
    on Windows Phone 8.1 devices. Installing applications onto an SD card inserted
    into a Windows phone provisioned to support encryption has always resulted in
    clearly visible files and folders being created on the main partition on that
    card. The entire content of these folders, complete with application binaries,
    their data, and temporary files, was accessible in plain view. After a system
    update pushed by Microsoft in late 2014, the system fixed that behavior by enabling
    per-file encryption. The entire file system can still be browsed through, and
    filenames and sizes are visible, yet the content of those files is now encrypted.
    This behavior is significantly different from the mechanism described in the Microsoft
    whitepaper. Other researchers (for example, [http://www.insinuator.net/2015/01/in-secure-sd-cards-on-wp8-1/](http://www.insinuator.net/2015/01/in-secure-sd-cards-on-wp8-1/))
    received similar results, so it's unlikely that our experience was an isolated
    incident.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我们未能证明在 Windows Phone 8.1 设备上存在一个特殊的隐藏分区。将应用程序安装到插入 Windows 手机的 SD 卡上，并且该设备已配置以支持加密时，始终会在该卡的主分区上创建明显可见的文件和文件夹。这些文件夹的所有内容，包括应用程序二进制文件、数据和临时文件，都可以直接查看。在
    2014 年底微软推送的系统更新后，系统通过启用每个文件的加密来修复了这一行为。虽然整个文件系统仍然可以浏览，且文件名和大小可见，但这些文件的内容现在已经加密。这一行为与微软白皮书中描述的机制有显著差异。其他研究人员（例如，[http://www.insinuator.net/2015/01/in-secure-sd-cards-on-wp8-1/](http://www.insinuator.net/2015/01/in-secure-sd-cards-on-wp8-1/)）也得出了类似的结果，因此我们经历的情况不太可能是孤立事件。
- en: It is essential that Windows Phone 8.x does not allow users to encrypt their
    devices (or SD cards) with a setting within the phone's menu. There is no such
    option available. Encryption can only be activated as provisioned by the corporate
    security policy (if the phone is used in a corporate environment and connected
    to an MDM system).
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Phone 8.x 确实不允许用户通过手机菜单中的设置加密设备（或 SD 卡）。没有提供这样的选项。加密只能通过公司安全策略激活（如果手机用于企业环境并连接到
    MDM 系统）。
- en: A factory reset may not render the SD card inaccessible since encryption escrow
    keys may be available in the MDM system.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复出厂设置可能不会使 SD 卡无法访问，因为加密托管密钥可能在 MDM 系统中可用。
- en: Windows 10 Mobile
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows 10 Mobile
- en: Windows 10 Mobile introduced the ability for end users to control device and
    SD card encryption. Users now have an option to encrypt and decrypt (!) the internal
    memory. A separate encryption option is available for SD cards.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 10 Mobile 引入了终端用户控制设备和 SD 卡加密的功能。用户现在可以选择加密和解密（！）内部存储。SD 卡也有单独的加密选项。
- en: Windows RT
  id: totrans-256
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows RT
- en: Windows RT supports a somewhat restricted version of BitLocker that does not
    allow encrypting the SD card in a Windows RT device, but does allow using an already
    encrypted card (for example, if one was encrypted in a computer running the full
    version of Windows). Considering the number of Windows RT devices sold, the chances
    of encountering an encrypted SD card in one of those are slim to none.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Windows RT 支持某种程度上受限的 BitLocker 版本，不允许加密 Windows RT 设备中的 SD 卡，但允许使用已加密的卡（例如，如果该卡在运行完整版
    Windows 的计算机上加密）。考虑到 Windows RT 设备的销售数量，遇到加密 SD 卡的机会几乎为零。
- en: Notably, a full factory reset of a Windows RT system will neither wipe the content
    of an SD card nor render the data inaccessible since information is encrypted
    with a password and can be accessed again if the correct password has been entered.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，完全重置 Windows RT 系统不会擦除 SD 卡的内容，也不会让数据变得不可访问，因为信息是用密码加密的，如果输入正确的密码，数据可以再次访问。
- en: Windows 8 through 10
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows 8 至 10
- en: While most tablets running Windows 8, 8.1, and Windows 10 support BitLocker
    full disk protection (for encrypting partitions in the main eMMC storage), BitLocker
    To Go (for encrypting external storage such as USB flash drives and SD cards with
    a password) is only available in the Pro and Enterprise editions of Windows 8
    and 8.1 and Windows 10 Pro. Since many budget Windows tablets use the most basic
    edition of Windows with Bing, SD card encryption is not available to their users
    (yet, similar to Windows RT, they can still access BitLocker-protected SD cards
    that were encrypted on a higher Windows edition that supports BitLocker). Even
    if the SD card is encrypted, BitLocker To Go only encrypts the file system, leaving
    unallocated space unencrypted. (This has changed in Windows 10, with the option
    to encrypt the entire content of the SD card now available.)
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然大多数运行 Windows 8、8.1 和 Windows 10 的平板电脑支持 BitLocker 全盘保护（用于加密主 eMMC 存储中的分区），但
    BitLocker To Go（用于加密外部存储，如 USB 闪存驱动器和 SD 卡）仅在 Windows 8 和 8.1 的 Pro 和 Enterprise
    版本以及 Windows 10 Pro 中可用。由于许多低端 Windows 平板使用的是带 Bing 的最基础版 Windows，用户无法使用 SD 卡加密（不过，类似于
    Windows RT，它们仍然可以访问在支持 BitLocker 的更高版本 Windows 上加密的 BitLocker 保护的 SD 卡）。即使 SD
    卡已加密，BitLocker To Go 也只加密文件系统，未分配的空间则不加密。（在 Windows 10 中，这种情况已发生变化，现在提供了加密 SD
    卡全部内容的选项。）
- en: Notably, a full factory reset of a Windows system will neither wipe the content
    of an SD card nor render the data inaccessible since information is encrypted
    with a password and can be accessed again if the correct password has been entered.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，完全重置 Windows 系统不会擦除 SD 卡的内容，也不会让数据变得不可访问，因为信息是用密码加密的，如果输入正确的密码，数据可以再次访问。
- en: BlackBerry OS 1 through 7
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: BlackBerry OS 1 至 7
- en: 'Early versions of BlackBerry OS offered three distinct options to encrypt SD
    cards:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 早期版本的 BlackBerry OS 提供了三种加密 SD 卡的不同选项：
- en: Using the device key
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用设备密钥
- en: Using the password
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用密码
- en: Using the device key and the password
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用设备密钥和密码
- en: With the exception of the first encryption method, passwords can be attacked
    and recovered, and backups can be decrypted.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 除了第一种加密方法外，密码可以被攻击和恢复，备份也可以被解密。
- en: When it comes to SD encryption, the decryption key can be extracted from a physical
    image or chip-off dump of the device. Early versions of BlackBerry OS (prior to
    BlackBerry 10) used to have a security flaw related to encrypted SD cards. Encryption
    metadata could be derived by analyzing the content of the encrypted SD card and
    brute-forcing the security key. This weakness (used, for example, in Elcomsoft
    Phone Breaker) allowed investigators to decrypt encrypted partitions dumped from
    the device itself in addition to the content of the SD card itself. Effectively,
    the option to encrypt the content of an SD card became the system's Achilles heel.
    This, however, is no longer the case in BlackBerry 10.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SD 卡加密方面，解密密钥可以通过设备的物理镜像或芯片提取转储获得。早期版本的 BlackBerry OS（BlackBerry 10 之前）曾存在与加密
    SD 卡相关的安全漏洞。可以通过分析加密的 SD 卡内容并暴力破解安全密钥来推导加密元数据。例如，这种漏洞（如在 Elcomsoft Phone Breaker
    中使用）允许调查人员解密从设备本身转储的加密分区，除了 SD 卡本身的内容外。实际上，加密 SD 卡内容的选项成为了系统的阿基琉斯之踵。然而，这种情况在 BlackBerry
    10 中不再存在。
- en: BlackBerry 10
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: BlackBerry 10
- en: SD card encryption is optional in BlackBerry 10, even if the device is configured
    to encrypt its main memory. A factory reset destroys encryption metadata, rendering
    the content of such an SD card completely inaccessible.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在 BlackBerry 10 中，SD 卡加密是可选的，即使设备已配置加密其主存储器。恢复出厂设置会销毁加密元数据，使得该 SD 卡的内容完全无法访问。
- en: 'Below is a comparison table of SD card encryption in various systems:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是不同系统中 SD 卡加密的对比表：
- en: '|  | **Enabled by default** | **User configurable** | **Algorithm** | **Known
    vulnerabilities** |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '|  | **默认启用** | **用户可配置** | **加密算法** | **已知漏洞** |'
- en: '| **Android** | No | Yes | Version specific, AES | None |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| **Android** | 否 | 是 | 版本特定，AES | 无 |'
- en: '| **BlackBerry OS 1-7** | No | Yes | Depends on user selectable settings |
    In some scenarios, attacking encrypted SD can recover device passcode |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| **BlackBerry OS 1-7** | 否 | 是 | 取决于用户选择的设置 | 在某些场景下，攻击加密的 SD 卡可能会恢复设备密码 |'
- en: '| **BlackBerry 10** | No | Yes | AES | None |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| **BlackBerry 10** | 否 | 是 | AES | 无 |'
- en: '| **Windows Phone 8.x** | No | No | BitLocker | Some versions don''t enable
    encryption, but claim encryption is enabled |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| **Windows Phone 8.x** | 否 | 否 | BitLocker | 某些版本未启用加密，但声称已启用加密 |'
- en: '| **Windows 10 Mobile** | No | Yes | BitLocker | None |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| **Windows 10 Mobile** | 否 | 是 | BitLocker | 无 |'
- en: '| **Windows RT** | No | No; must use different PC to encrypt (depends on Windows
    edition); can use already encrypted SD cards | BitLocker | None |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| **Windows RT** | 否 | 否；必须使用其他 PC 进行加密（取决于 Windows 版本）；可以使用已加密的 SD 卡 | BitLocker
    | 无 |'
- en: '| **Windows 8 through 10** | No | Yes, depends on Windows edition | BitLocker
    | None |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| **Windows 8 至 10** | 否 | 是，取决于 Windows 版本 | BitLocker | 无 |'
- en: SD cards conclusion
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SD 卡结论
- en: While SD cards are equipped with an integrated storage controller, the built-in
    controllers are of a simple variety. While supporting data remapping, SD card
    controllers do not implement trim, which means that deleted data will remain available
    in unallocated areas, just like on most USB drives. The same acquisition methods
    that work for USB flash drives will work for SD cards. SDHC cards (up to and including
    32 GB) are typically formatted with FAT32\. Do note that larger SDXC cards (64
    GB and up) come pre-formatted with exFAT, and will require a carving tool supporting
    that file system.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 SD 卡配备了集成存储控制器，但内置的控制器类型较为简单。虽然支持数据重映射，但 SD 卡控制器不实现修剪（trim），这意味着删除的数据将仍然保留在未分配的区域，就像大多数
    USB 闪存驱动器一样。对于 USB 闪存驱动器有效的相同获取方法也适用于 SD 卡。SDHC 卡（最多 32 GB）通常格式化为 FAT32。请注意，较大的
    SDXC 卡（64 GB 及以上）预先格式化为 exFAT，且需要支持该文件系统的恢复工具。
- en: It is essential to note that mobile devices (smartphones and tablets) accept
    microSD cards as opposed to standard-size SD cards. microSD are built to different
    specifications compared to standard-size SD cards. In particular, microSD cards
    do not support the **flash erase** command, meaning no background collection and
    no automatic wiping of released data blocks.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 需要特别注意的是，移动设备（智能手机和平板电脑）使用的是 microSD 卡，而不是标准尺寸的 SD 卡。microSD 卡的规格与标准尺寸的 SD 卡不同。特别是，microSD
    卡不支持 **闪存擦除** 命令，这意味着没有后台数据收集，也没有自动擦除已释放的数据块。
- en: SQLite databases (access to call logs, browsing history, and many more)
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQLite 数据库（访问通话记录、浏览历史等）
- en: A special case (accessing deleted data on mobile platforms) applies to information
    stored inside SQLite databases. SQLite is a universally accepted database format
    employed by countless system and third-party apps running on all popular mobile
    platforms. Android and iOS keep call logs, message history, Web browsing logs,
    and many system settings in SQLite databases. Applications such as Chrome, Firefox,
    Skype, WhatsApp, and countless others also use SQLite.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 一个特殊情况（访问移动平台上删除的数据）适用于存储在 SQLite 数据库中的信息。SQLite 是一种广泛接受的数据库格式，广泛应用于所有流行的移动平台上的系统和第三方应用。Android
    和 iOS 会将通话记录、消息历史、网页浏览记录以及许多系统设置存储在 SQLite 数据库中。Chrome、Firefox、Skype、WhatsApp
    等应用程序也使用 SQLite。
- en: Unlike files deleted from encrypted partitions, records deleted from SQLite
    databases may not immediately disappear. In a naive attempt to counter forensic
    efforts, users may clear call history, delete message logs, and clear the browsing
    history. These measures may not be as effective as users think.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 与从加密分区删除的文件不同，从 SQLite 数据库删除的记录可能不会立即消失。在一种天真的尝试中，为了应对取证工作，用户可能会清除通话记录、删除消息日志和清除浏览历史。这些措施可能没有用户想象的那么有效。
- en: The reason for these measures being unreliable is the way in which SQLite deletes
    records. Due to performance considerations, SQLite does not wipe deleted records
    (which can be quite big) unless flushed. Instead, the actual data is not moved
    anywhere. SQLite modifies pointers to deleted records to manifest that those records
    are now stored in a so-called **freelist**. By using a forensic SQLite analysis
    tool (for example, Belkasoft Evidence Center or Elcomsoft Phone Viewer), one can
    access and parse the database container, successfully extracting deleted records
    from the freelist and viewing them along with existing data.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 这些措施不可靠的原因在于 SQLite 删除记录的方式。由于性能考虑，SQLite 不会删除已删除的记录（这些记录可能非常大），除非进行了刷新。相反，实际数据并没有被移动。SQLite
    修改指向已删除记录的指针，以表明这些记录现在存储在一个所谓的**自由列表**中。通过使用法医 SQLite 分析工具（例如，Belkasoft Evidence
    Center 或 Elcomsoft Phone Viewer），可以访问并解析数据库容器，从自由列表中成功提取已删除记录，并与现有数据一起查看。
- en: Regularly cleaning call logs and removing text messages helps users maintain
    the illusion of privacy, while in fact deleted records may not immediately disappear.
    Instead, these records might be placed into a freelist. Records can be kept in
    the freelist for a long time—much longer in fact than most users realize because
    new calls and text messages that could potentially trigger a cleanup are relatively
    infrequent.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 定期清理通话记录和删除短信有助于用户保持隐私的假象，实际上已删除的记录可能并不会立即消失。相反，这些记录可能会被放入自由列表中。记录可以在自由列表中保持很长时间——实际上比大多数用户意识到的要长得多，因为可能触发清理的新通话和短信相对较少。
- en: Summary
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we had a look at the obstacles, special cases, and considerations
    when acquiring mobile devices. We reviewed SD card encryption and learned about
    the issues of unallocated space in flash-based storage media. We also reviewed
    the differences between two-factor authentication methods implemented in all major
    mobile ecosystems. The next chapter will present case studies and list forensic
    tools that can be used to acquire and analyze mobile devices.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了获取移动设备时的障碍、特殊情况和考虑事项。我们审视了 SD 卡加密，并了解了基于闪存的存储介质中未分配空间的问题。我们还回顾了主要移动生态系统中实现的双因素身份验证方法的差异。下一章将展示案例研究，并列出可用于获取和分析移动设备的法医工具。
