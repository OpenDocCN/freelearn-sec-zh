- en: Attacking Confidentiality
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击机密性
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Creating an evil twin
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个恶意的双胞胎
- en: Man-in-the-middle with wireless
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无线中间人攻击
- en: Cracking WEP
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 破解WEP
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: As we learned in the previous chapter, the integrity of data is an essential
    component of security, but it is only one piece of the CIA triad. Another leg
    of this triad is the aspect of confidentiality, which addresses the issues relating
    to the protection of information against unauthorized disclosure. This aspect
    alone can be a make or break issue for an organization, as losing control of information
    and having that same information appear on a website, in a newspaper, or another
    outlet can be the source of a lot of negative consequences—including lawsuits.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一章中所学到的，数据的完整性是安全的一个重要组成部分，但它只是CIA三要素中的一部分。这个三要素的另一个方面是保密性，它涉及到保护信息免受未经授权的披露。这一方面单独就可能成为一个组织的成败关键，因为失去信息的控制，并且这些信息出现在网站、报纸或其他媒体上，可能会带来许多负面后果，包括诉讼。
- en: A great example of how a compromised wireless network can lead to serious consequences
    against a company is that of retailer TJ Maxx.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的例子是，一个受损的无线网络如何导致对一家公司的严重后果，就像零售商TJ Maxx一样。
- en: In the early 2000s, TJ Maxx left a wireless network unsecured, and it was this
    access point that was later discovered and used by cybercriminals to gather sensitive
    customer information in the form of credit cards, names, and addresses.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在21世纪初，TJ Maxx留下了一个无线网络没有保护，后来发现并被网络犯罪分子利用，收集了敏感客户信息，包括信用卡、姓名和地址。
- en: While the attack was eventually detected and thwarted and the criminals responsible
    brought to trial and punished, TJ Maxx still had problems to address outside of
    the actual crime in securing their technology. TJ Maxx was the subject of a large
    class action lawsuit filed by the customers who had their information stolen due
    to the retailer's negligence. The eventual payouts resulting from this lawsuit
    ended up costing the retailer millions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管最终发现并阻止了这次攻击，犯罪分子也被绳之以法，TJ Maxx仍然需要解决技术保护方面的问题。TJ Maxx因疏忽导致客户信息被盗而成为一场大规模集体诉讼的对象。最终，由于这起诉讼造成的赔偿金额使得零售商损失了数百万美元。
- en: In today's world, confidentiality of data is hugely important to an organization
    and must therefore not be overlooked. In fact, one of the issues that plagued
    the idea of infamy wireless networks in a business environment is the fact that
    they were perceived as being insecure and having a great potential to expose data
    to unauthorized parties. It is because of this reason that many businesses did
    not look to implement wireless networks for a long time, and in many cases these
    companies banned the use of wireless devices on business premises outright. This
    meant that wireless access points can be set up in the business. The business
    would also refrain from buying any devices that had wireless capability to avoid
    any problems that might be caused by someone attaching to a rogue or insecure
    access point on a device that was owned by the business and contained business-sensitive
    data. This was many years ago, and the world has since changed; many businesses
    have embraced wireless networks as part of their overall business strategy. While
    there is still is a justifiable amount of concern about the confidentiality and
    security of these wireless networks, they have been much more widely adopted and
    can be seen in many businesses where they were not present before.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今世界，数据的保密性对于一个组织来说非常重要，因此不容忽视。事实上，困扰商业环境中无线网络的一个问题是，它们被认为是不安全的，并且很有可能将数据暴露给未经授权的人。正因为这个原因，许多企业很长一段时间内都不考虑实施无线网络，而且在许多情况下，这些公司禁止在企业场所使用无线设备。这意味着无线接入点可以在企业中设置。企业也会避免购买任何具有无线功能的设备，以避免由于有人连接到企业拥有并包含商业敏感数据的设备上的伪造或不安全的接入点而可能引起的任何问题。这是许多年前的事情了，世界已经改变；许多企业已经将无线网络作为其整体业务战略的一部分。尽管对这些无线网络的保密性和安全性仍然存在一定程度的担忧，但它们已经被广泛采用，并且可以在许多以前不存在的企业中看到。
- en: What has led to the concern about confidentiality regarding wireless networks
    is the fact that they beam their signal out in all directions unless specialized
    antennas or equipment is used. With the inclusion of specialized antennas designed
    to focus a signal better, protection technologies and other techniques have been
    developed over the years enabling wireless networks to be much more widely-accepted.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 导致对无线网络保密性的担忧的原因是，除非使用专门的天线或设备，否则它们会向所有方向发射信号。随着设计更好地聚焦信号的专用天线的引入，保护技术和其他技术已经在多年内得到发展，使得无线网络得到了更广泛的接受。
- en: 'Techniques have shown to be effective at protecting the confidentiality of
    wireless networks; let''s take a look at a few that can be used to protect wireless
    networks from unauthorized breaches and disclosure of data:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 技术已经被证明可以有效保护无线网络的保密性；让我们来看看一些可以用来保护无线网络免受未经授权的侵入和数据泄露的技术：
- en: '**Encryption**: Encryption is probably one of the easiest and most widely-used
    technologies that can be used to improve the security of a wireless network, or
    any network for that matter. The type of encryption we are talking about here
    in a wireless network is going to be designed to protect data in transit, or in
    other words data that is moving from point A to point B. This is crucially important
    for a wireless network, as the process of moving data from point A to point B
    involves transmitting the information over the airways; as such, anyone who can
    intercept radio waves can potentially eavesdrop on the transmission and view unsecured
    data.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加密**：加密可能是可以用来提高无线网络或任何网络安全性的最简单和最广泛使用的技术之一。我们在这里讨论的无线网络中的加密类型将被设计用于保护传输中的数据，换句话说，即从A点到B点移动的数据。这对于无线网络来说至关重要，因为将数据从A点传输到B点的过程涉及通过空中传输信息；因此，任何可以拦截无线电波的人都有可能窃听传输并查看未加密的数据。'
- en: '**Cryptography**: Wireless networks come in many forms and use many different
    algorithms such as AES or 3DES to both secure data in terms of confidentiality,
    as well as providing other mechanisms for ensuring that data is not modified during
    transit.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码学**：无线网络有许多形式，并使用许多不同的算法，如AES或3DES，来保护数据的机密性，同时提供其他机制来确保数据在传输过程中不被修改。'
- en: '**Antennas**: This is one of the more interesting areas that can be used to
    protect wireless networks and wireless signals—the use of specialized antennas
    that focus and control a signal and its transmission in such a way that it does
    not indiscriminately beam information. Specialized antennas can be used to focus
    a signal into a specific area or even control the range or distance a signal can
    propagate; therefore, limiting in both cases who is able to listen in on the transmission.
    It is important to note that the antennas that are included with most wireless
    access points are considered to be omnidirectional antennas, which means they
    are antennas that are designed to beam their signal out in all directions equally
    to give maximum coverage to their area. While this is fine for a consumer- or
    home-based environment, where maximum coverage area is needed or desired, you
    may want to control that if you are in a multi-tenant environment or an environment
    where you wish to focus signal into an area where only the people that need it
    are able to access it.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**天线**：这是可以用来保护无线网络和无线信号的更有趣的领域之一——使用专门的天线来聚焦和控制信号及其传输，使其不会不加区别地发送信息。专门的天线可以用来将信号聚焦到特定区域，甚至控制信号的传播范围或距离；因此，在这两种情况下限制谁能监听传输。需要注意的是，大多数无线接入点配备的天线被认为是全向天线，这意味着它们被设计为在所有方向均匀地发送信号，以便最大限度地覆盖其区域。虽然这对于消费者或家庭环境来说是可以接受的，因为需要或希望获得最大的覆盖面积，但如果您处于多租户环境或希望将信号聚焦到只有需要的人才能访问的区域，您可能希望进行控制。'
- en: '**Pre-Shared Key** (**PSK**): This type of mechanism is used to share a key
    and the access point among multiple workstations with the intent that this key
    will be used to encode and protect data, and secure it against modification or
    disclosure by unauthorized parties. These pre-shared key systems are very useful
    for environments that are small, or even home-based environments where a small
    number of systems need to be secured. This is largely due to the fact that the
    key has to be manually input on individual systems, whereas with other systems
    they can be centrally managed. If you have to manually input a key into each client
    system, along with the access point, things can become pretty tedious and cumbersome
    as the size of a network grows.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预共享密钥**（**PSK**）：这种机制用于在多个工作站之间共享一个密钥和访问点，目的是使用该密钥对数据进行编码和保护，并防止未经授权的各方修改或披露数据。这些预共享密钥系统非常适用于规模较小的环境，甚至是家庭环境，其中需要保护少量系统。这主要是因为密钥必须手动输入到各个系统中，而其他系统可以进行集中管理。如果必须在每个客户端系统以及访问点上手动输入密钥，随着网络规模的增长，事情可能会变得相当乏味和繁琐。'
- en: '**Enterprise authentication**: This type of system works in the same way as
    a PSK-based environment, except that the key management is centralized through
    the use of systems such as RADIUS. The benefit of these enterprise systems is
    that they can grow almost exponentially as the size of a business or deployment
    grows, meaning that key management and security can still be centrally managed.
    Enterprise authentication systems do have one downside, and that is they require
    more infrastructure and time to set up and configure properly; however, once this
    has been done, it becomes much more of a maintenance issue.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**企业认证**：这种类型的系统与基于PSK的环境工作方式相同，只是密钥管理是通过诸如RADIUS之类的系统进行集中管理的。这些企业系统的好处是它们几乎可以随着企业或部署规模的增长而成倍增长，这意味着密钥管理和安全性仍然可以进行集中管理。企业认证系统确实有一个缺点，那就是它们需要更多的基础设施和时间来进行正确设置和配置；然而，一旦完成了这一步，它就变得更多是一个维护问题。'
- en: This is just a short list of potential measures that can be deployed to enforce
    confidentiality; however, there are many more that are available outside of the
    wireless environment that can supplement or replace what has been mentioned on
    this list.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是可以部署以强制保密的潜在措施的简短清单；然而，在无线环境之外还有许多其他可供选择的措施，可以补充或替代上述清单中提到的内容。
- en: Once network access is gained and the integrity of data called into question,
    the attacker may choose to alter things for whatever end they so choose.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦获得了网络访问权限，并且数据的完整性受到质疑，攻击者可能选择修改事物以达到他们所选择的任何目的。
- en: Types of attack
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击类型
- en: Confidentiality attacks against a wireless network are incredibly effective
    and powerful in the hands of a skilled and knowledgeable attacker or intruder.
    It's not uncommon for the mechanisms and devices that are used to protect a wireless
    network to be misconfigured, or to have the owners of these networks be unaware
    of the types of attacks available. A system owner that is unaware of misconfiguration
    issues, flaws, or defects in their wireless network or protection mechanisms themselves
    leave them wide open to a myriad of attacks that can be used against them, and
    in some cases to devastating effect. Just remember that wireless networks can
    be secured, but like anything you have to take the time and effort to ensure that
    the security is adequate and in place as intended.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 针对无线网络的保密性攻击在熟练和知识丰富的攻击者或入侵者手中非常有效和强大。保护无线网络的机制和设备通常会被错误配置，或者这些网络的所有者可能不知道可用的攻击类型。对于不知道其无线网络或保护机制中的配置问题、缺陷或缺陷的系统所有者来说，它们会被广泛地暴露于可以用来攻击它们的各种攻击之中，并且在某些情况下可能会产生毁灭性的影响。请记住，无线网络可以得到保护，但就像任何事情一样，您必须花时间和精力来确保安全性足够并且按照预期的方式存在。
- en: 'Before we start exploring each of our attacks, let''s first lay out the attacks
    that will be covered in this chapter:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始探索每种攻击之前，让我们首先列出本章将涵盖的攻击类型：
- en: Sniffing
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嗅探
- en: Data replays
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据重放
- en: WEP packet injections
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WEP数据包注入
- en: Detection of beacon frames
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测信标帧
- en: Spoofing of beacon frames
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 伪造信标帧
- en: Remember, these are just a few of the types of attacks that can be used to subvert
    the confidentiality of a wireless network, they should never be considered the
    only types of attacks.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，这些只是可以用来破坏无线网络保密性的攻击类型中的一部分，它们永远不应被视为唯一的攻击类型。
- en: Creating an evil twin
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建恶意双胞胎
- en: The first type of attack that can be used to attack confidentiality is known
    as the evil twin attack, or evil twin AP. This type of attack is generally not
    an attack that is used as a standalone, but rather used in conjunction with other
    attacks, as we will see.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 用于攻击保密性的第一种攻击类型被称为恶意双胞胎攻击，或者恶意双胞胎AP。这种类型的攻击通常不是作为独立攻击使用的，而是与其他攻击一起使用，正如我们将看到的那样。
- en: The most common name for the type of attack we are mentioning here tends to
    be the evil twin moniker. However, do not be surprised to hear names such as rogue
    access point, shadow access point, wireless honeypot, as well as many other potential
    names. No matter what you call it, if you understand the mechanics of what is
    happening in this attack, you'll be fine no matter what name it goes by.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里提到的攻击类型最常见的名称往往是恶意双胞胎。然而，不要惊讶地听到诸如流氓接入点、影子接入点、无线蜜罐等许多其他潜在名称。无论你如何称呼它，如果你理解这种攻击中发生的机制，无论它被称为什么名字，你都会没事的。
- en: An evil twin attack takes place when a rogue access point is configured in a
    way that is identical to a legitimate access point and placed in close proximity.
    To the outside world and users, an evil twin that is placed closer and/or is generating
    a stronger signal will be the one they will most likely attach to instead of a
    legitimate access point. If the user chooses to connect to the access point manually
    or automatically, the evil twin will become the end user's access point and gateway
    to the internet. Since a malicious party will be in control of the evil twin,
    they will be able to intercept any traffic that transits their AP and even modify
    or redirect it as desired. This means that the attacker has the ability to steal
    information including sensitive data such as passwords, usernames, and other data.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意双胞胎攻击发生在流氓接入点被配置成与合法接入点相同并且放置在附近的情况下。对于外部世界和用户来说，放置更近和/或产生更强信号的恶意双胞胎很可能会成为他们连接的接入点，而不是合法接入点。如果用户选择手动或自动连接到接入点，恶意双胞胎将成为最终用户的接入点和互联网网关。由于恶意方将控制恶意双胞胎，他们将能够拦截通过他们的AP传输的任何流量，甚至根据需要修改或重定向它。这意味着攻击者有能力窃取包括密码、用户名和其他数据在内的敏感信息。
- en: In practice, an evil twin attack can be very effective if a little thought and
    planning is put into effect and you consider the way users will connect to a wireless
    network. Consider the fact that most users of devices such as laptops, cell phones,
    or tablets are used to being able to turn on their wireless device, find a wireless
    network, and connect to it. If they go into a public space such as airport, shopping
    mall, or even a coffee shop, they are used to being able to turn on their wireless
    device and search for a free wireless network. Keeping this in mind, it can be
    easy to construct a wireless access point that offers what appears to be free
    internet access and leave it unsecured so that a victim will connect to the wireless
    network and start browsing the internet or checking emails, thus leaving themselves
    vulnerable to attack. Also consider the fact that if you were to name a wireless
    network to resemble something that is owned by a company or organization, the
    user may very well connect to it thinking it is a completely legitimate and authentic
    access point—when in reality it is anything but. Once the user has connected to
    this access point and starts exchanging data, it may be too late for them to protect
    themselves. It is possible that a user connecting to an unsecured or unknown access
    point such as an evil twin may inadvertently be redirected to a website that others
    control, and in turn contain malware that can be deployed to their client's system.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '实际上，如果稍加思考和计划，并考虑用户连接到无线网络的方式，邪恶的双胞胎攻击可能非常有效。考虑到大多数笔记本电脑、手机或平板电脑等设备的用户通常可以打开无线设备，找到无线网络并连接到它。如果他们进入机场、购物中心，甚至是咖啡店等公共场所，他们通常可以打开无线设备并搜索免费的无线网络。记住这一点，可以很容易地构建一个无线接入点，提供看似免费的互联网访问，并将其保持不安全，以便受害者连接到无线网络并开始浏览互联网或查看电子邮件，从而使自己容易受到攻击。还要考虑这样一个事实，即如果您将无线网络命名为类似于某个公司或组织拥有的东西，用户很可能会连接到它，认为它是一个完全合法和真实的接入点
    - 而实际上并非如此。一旦用户连接到这个接入点并开始交换数据，他们可能为保护自己而为时已晚。用户连接到一个不安全或未知的接入点，比如邪恶的双胞胎，可能会无意中被重定向到其他人控制的网站，并且可能包含可部署到他们客户端系统的恶意软件。 '
- en: Getting ready
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get things, started you will need to have the following items in place:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，您需要准备以下物品：
- en: A wireless card capable of entering monitor mode
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够进入监视模式的无线网卡
- en: Kali Linux
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux
- en: A second wired or wireless adapter to connect to the internet
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个有线或无线适配器连接到互联网
- en: How to do it...
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: To create an evil twin, we will follow several steps, each designed to make
    a portion of the system ready to carry out the attack.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个恶意的双胞胎，我们将按照几个步骤进行，每个步骤都旨在使系统的一部分准备好执行攻击。
- en: Step one – monitor mode airmon-ng
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步 - 使用airmon-ng监视模式
- en: The first step we have to do is put the wireless adapter into promiscuous mode
    or monitor mode. This is no different to what we have been doing in our previous
    chapters. In this case, we will assume that our wireless adapter uses the name
    `wlan0`, but double check it to ensure that the name is the same on your system.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须做的第一步是将无线适配器置于混杂模式或监视模式。这与我们在以前的章节中所做的没有什么不同。在这种情况下，我们将假设我们的无线适配器使用名称`wlan0`，但请仔细检查以确保您系统上的名称相同。
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Much like before, the `airmon-ng` utility has switched our wireless card into
    monitor mode, and in the process renamed it to something like `mon0`. Once this
    is done we will be capable of viewing all the traffic we need. The following image
    shows the result of the `airmon-ng` command:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 就像以前一样，`airmon-ng`实用程序已经将我们的无线网卡切换到监视模式，并在此过程中将其重命名为类似`mon0`的东西。完成后，我们将能够查看所有我们需要的流量。以下图片显示了`airmon-ng`命令的结果：
- en: '![](img/b442be8a-1c2c-4d01-af2b-3bbf78da148a.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b442be8a-1c2c-4d01-af2b-3bbf78da148a.png)'
- en: airmon-ng switching wlan0 into monitor mode.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: airmon-ng将wlan0切换到监视模式。
- en: Keep in mind that we will use this utility multiple times in this book and that
    the steps are almost identical in every case. The only thing that often changes
    when we use this utility is the steps that come after connection, as well as the
    name of the wireless interface that we use with it. Pay special attention to the
    syntax used with this command, so you can make your life easier during future
    attempts or exercises that make use of this command-line application.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，我们将在本书中多次使用此实用程序，并且在每种情况下步骤几乎相同。当我们使用此实用程序时，经常变化的是连接后的步骤，以及我们与其一起使用的无线接口的名称。特别注意使用此命令的语法，这样您在未来尝试或练习中使用此命令行应用程序时可以更轻松地进行操作。
- en: Step two – airdump-ng
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二步 - airdump-ng
- en: 'With monitor mode in place, we will now start to collect traffic with the same
    wireless adapter. To perform this operation using `airodump-ng`, we would type
    the following:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 监视模式已经就位，现在我们将开始使用相同的无线适配器收集流量。要使用`airodump-ng`执行此操作，我们将键入以下内容：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note how we used the new name for the monitoring interface `mon0`; you should
    verify the name with `ifconfig` to ensure your new interface name is the same.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意我们使用了监控接口`mon0`的新名称；您应该使用`ifconfig`验证名称，以确保您的新接口名称相同。
- en: 'Once this step is complete, you should start seeing access points; it is up
    to you to select the one you wish to create an evil twin of:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，您应该开始看到访问点；由您选择要创建恶意双胞胎的访问点：
- en: '![](img/8054f4e4-c4b3-4b81-af59-10c68318ecdd.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8054f4e4-c4b3-4b81-af59-10c68318ecdd.png)'
- en: Much like before, this utility is not one that you have seen the end of - in
    fact, it is used in a few other recipes in this book with almost exactly the same
    syntax that you see here. Pay close attention to the syntax and how you use it,
    as well as what it's doing, because it will save you time later on.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 就像以前一样，这个实用程序并不是你见过的最后一个 - 实际上，在本书中的几个其他配方中都使用了几乎完全相同的语法。密切关注语法以及如何使用它，以及它的作用，因为这将节省您以后的时间。
- en: Step three – create a new AP with the same SSID and MAC address
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三步 - 创建具有相同SSID和MAC地址的新AP
- en: 'To create a new AP using the same SSID and MAC address, effectively cloning
    the good twin with a bad twin, we need to use the `airbase-ng` utility and assume
    we want to clone the network named `Tarlogic` from the preceding screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用相同的SSID和MAC地址创建一个新的AP，有效地克隆了一个好的双胞胎和一个坏的双胞胎，我们需要使用`airbase-ng`实用程序，并假设我们想要克隆前面截图中名为`Tarlogic`的网络：
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If the process works, you should see results like the following screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果该过程有效，您应该会看到如下截图所示的结果：
- en: '![](img/077cdeaa-8504-4dd8-83e2-2db5d5d054fa.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/077cdeaa-8504-4dd8-83e2-2db5d5d054fa.jpg)'
- en: The results of using airbase-ng
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用airbase-ng的结果
- en: Note that in the screenshot, we have created an access point and then shortly
    after a client associated with the access point.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在截图中，我们创建了一个访问点，然后不久后一个客户端与访问点关联。
- en: It is possible that after you set up your access point and start broadcasting
    out a name that you may have clients connect fairly rapidly, but don't be discouraged
    if this does not occur. In some cases, you may have to wait for a period of time
    before a client actually attaches to your access point. How long it takes can
    vary on the situation. If you were to set up an access point that mimics the name
    of a coffee shop access point and where there are a lot of customers, it is likely
    that you will get people attaching to your access point because it looks and behaves
    like the coffee shop's access point. Keep in mind that I am not recommending that
    you create an access point that mimics a coffee shop's access point, or some other
    public access point, unless you have specific permission to do so. Setting one
    up because you want to is often illegal.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 有可能在设置访问点并开始广播名称后，您可能会有客户端相当快速地连接，但如果没有发生这种情况，请不要灰心。在某些情况下，您可能必须等待一段时间，直到客户端实际连接到您的访问点。这需要多长时间可能因情况而异。如果您设置了一个模仿咖啡店访问点名称的访问点，并且有很多顾客，那么很可能会有人连接到您的访问点，因为它看起来和行为都像咖啡店的访问点。请记住，我不建议您创建一个模仿咖啡店访问点或其他公共访问点的访问点，除非您有明确的许可。仅仅因为您想要设置一个通常是非法的。
- en: Step four – forcing a reconnect
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四步- 强制重新连接
- en: If you want to see if you can get clients to connect to the access point quicker
    than they would if you simply waited, you can effectively bump them off their
    current access point, the good twin, and get them to reconnect to your access
    point. To do this, we will fuse a deauthentication frame to boot everyone off
    a targeted access point. Once they are booted off, they will attach to our evil
    twin if we have positioned ourselves properly. Our next step is to bump the neighbor
    off his access point.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要查看是否可以让客户端连接到访问点的速度比如果您只是等待要快，您可以有效地将他们从当前的访问点（好双胞胎）中踢下来，并让他们重新连接到您的访问点。为了做到这一点，我们将向目标访问点发送一个去认证帧，将所有人都踢下来。一旦他们被踢下来，如果我们已经正确地定位了自己，他们将连接到我们的邪恶双胞胎。我们的下一步是将邻居从他的访问点中踢下来。
- en: 'We can do this by using `aireplay-ng` with the `deauth` packet:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`aireplay-ng`和`deauth`数据包来实现这一点：
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'What we have done with `aireplay` is send a `deauth` frame with the address
    of the `Tarlogic` access point. The following image shows the results of running
    the `-deauth` option in `aireplay`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用`aireplay`发送了一个带有`Tarlogic`访问点地址的`deauth`帧。以下图片显示了在`aireplay`中运行`-deauth`选项的结果：
- en: '![](img/a435e89d-eb33-4749-9cd4-7ced265f9e4c.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a435e89d-eb33-4749-9cd4-7ced265f9e4c.jpg)'
- en: Sending of a deauth frame
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 发送去认证帧
- en: Step five – power up
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五步- 增加功率
- en: In order to ensure that we have the best chance of capturing clients, we need
    to ensure that our signal is better than the access point's we are cloning. In
    the event that you cannot position yourself closer, you can always turn up the
    power to ensure you have a stronger signal.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保我们有最好的机会捕获客户端，我们需要确保我们的信号比我们正在克隆的接入点更好。如果您无法让自己更靠近，您可以随时增加功率以确保您有更强的信号。
- en: 'To generate a more powerful signal, we can do the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了产生更强的信号，我们可以这样做：
- en: '[PRE4]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following shows the result of the `iwconfig` command. Note the `Tx-Power`
    setting:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 以下显示了`iwconfig`命令的结果。请注意`Tx-Power`设置：
- en: By sending a deification packet out, we are purposely booting a client that
    has connected to a legitimate access point off the network in an effort to get
    them to reconnect to our network instead. While just sending deification frames
    to a client connected to, a specific access point is not enough to ensure that
    they will reattach to our access point instead, it does give them the opportunity
    to do so. It is possible that you have already captured a client that is connected
    to your access point without having to go further, but we want to have more insurance
    to make this happen. So, let's move on.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通过发送一个去认证数据包，我们故意将连接到合法访问点的客户端从网络中踢出，以便让他们重新连接到我们的网络。尽管仅仅向连接到特定访问点的客户端发送去认证帧并不足以确保他们会重新连接到我们的访问点，但这确实给了他们这样做的机会。有可能您已经捕获到了连接到您的访问点的客户端，而无需进一步操作，但我们希望有更多的保险来实现这一点。所以，让我们继续。
- en: 'The following shows the result of the `iwconfig` command. Note the `Tx-Power`
    setting:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下显示了`iwconfig`命令的结果。请注意`Tx-Power`设置：
- en: '![](img/5b57c251-6c2f-4e6e-b562-975c12214773.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b57c251-6c2f-4e6e-b562-975c12214773.png)'
- en: The results of the iwconfig command
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用iwconfig命令的结果
- en: This command will boost the power of the AP to the maximum allowable in the
    United States, which is 27 dBm or 500 milliwatts. While it is possible to boost
    power beyond this limit on some cards, such as 2000 milliwatts, it is not only
    illegal, but will shorten the life of your card from the extra heat and strain.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将把AP的功率提升到在美国允许的最大值，即27 dBm或500毫瓦。虽然在一些卡上可能会将功率提升到超过这个限制，比如2000毫瓦，但这不仅是非法的，而且会因为额外的热量和压力而缩短您的卡的寿命。
- en: It's worth stressing that increasing the power of your access point unnecessarily
    will lead to a lot of headaches. As we have mentioned, turning up the power of
    an access point over a certain threshold can be illegal in your country. The other
    concern with turning up the power on your access point or wireless device beyond
    capacity is that it does have a side effect of generating more heat, as the transceiver
    that is used to modulate the signal is pushed beyond its design specifications.
    As this heat builds up, it decreases the life span of that device. You could even
    turn your device into a fire risk. Finally, turning up the power unnecessarily
    high defies a legal standard, meaning that you may drown out the signals of other
    wireless devices that are in range of your access point. While this may sound
    like a good idea, it does enhance the possibility that you'll get caught. Make
    sure that you are aware of the issues of turning up the power of your wireless
    device beyond its design specifications or legal limits.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 值得强调的是，无谓地增加接入点的功率会带来很多麻烦。正如我们已经提到的，将接入点的功率调高到一定阈值以上可能在您的国家是非法的。将接入点或无线设备的功率调高到超出容量的另一个问题是，它会产生更多的热量，因为用于调制信号的收发器被推到了设计规格之外。随着热量的积聚，它会减少该设备的使用寿命。您甚至可能会将您的设备变成火灾风险。最后，无谓地提高功率违反了法律标准，这意味着您可能会淹没其他接入点范围内的无线设备的信号。虽然这听起来可能是个好主意，但它确实增加了您被抓到的可能性。确保您了解将无线设备的功率调高到超出设计规格或法律限制的问题。
- en: At this point, we could run `airodump` again to see if clients are attaching
    to our access point or not. We can also use a sniffer to capture traffic or run
    a man-in-the-middle attack, which we will do a little later. Remember what we
    have done so far is capture wireless traffic from clients and redirect them to
    our access point. It is also important to know at this point that all we've done
    in this recipe is set up the evil twin. What we have not done is set ourselves
    up to capture any traffic at all. How we do that is up to us.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们可以再次运行`airodump`来查看客户端是否连接到我们的接入点。我们还可以使用嗅探器来捕获流量或运行中间人攻击，这些我们稍后会做。请记住，到目前为止，我们所做的是从客户端捕获无线流量并将其重定向到我们的接入点。此时还很重要的一点是，我们在本文中所做的一切只是设置了恶意的双胞胎。我们还没有设置自己来捕获任何流量。我们如何做到这一点取决于我们自己。
- en: Man-in-the-middle with wireless
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中间人攻击与无线
- en: A more advanced form of attack that builds on previous actions is known as the
    man-in-the-middle attack. This attack occurs when a third party intercepts the
    communication between two systems and either observes the traffic or alters it
    in some manner. This type of attack definitely goes further than any eavesdropping
    carried out via sniffing, but initially it starts in a very similar way.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 中间人攻击是一种更高级的攻击形式，它建立在先前的行动基础之上。这种攻击发生在第三方拦截两个系统之间的通信并观察流量或以某种方式更改流量时。这种类型的攻击绝对比通过嗅探进行的窃听更进一步，但最初它的开始方式非常相似。
- en: Let's start this attack off by discussing some basic points, starting with the
    topics of switches and spoofing.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从讨论一些基本要点开始这次攻击，首先是关于交换机和欺骗的主题。
- en: Our explanation of switches is meant to act as a primer or refresher on what
    switches do and their placement, as well as the hierarchy of network devices.
    It is not meant to be an exhaustive discussion of the ins and outs of switches
    or the anatomy of what devices do and how they do it. If you are not familiar
    with switches, how they function, why you might place them on a network, and what
    their benefits are over other traditional network devices such as hubs, then you
    may want to go and review that information before you proceed. Doing so will help
    you get the most out of this recipe and to understand specifically what it is
    we are trying to accomplish.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对交换机的解释旨在作为交换机的功能和放置位置以及网络设备的层次结构的入门或复习。它并不意味着对交换机的细节或设备的解剖以及它们的功能方式进行详尽的讨论。如果您对交换机、它们的功能、为什么要在网络上放置它们以及它们相对于其他传统网络设备（如集线器）的优势不熟悉，那么您可能需要在继续之前查看相关信息。这样做将有助于您充分利用本文并具体了解我们试图实现的目标。
- en: As you may already know, switches are a device used to control the flow of traffic
    through the use of MAC addresses. These devices are used a lot in today's environments
    and are something you should be expected to understand and deal with in order
    to properly engage and defeat them when they block your attack attempt. Switches
    are popular as they allow for the reduction of network congestion and the associated
    network traffic, not to mention the fact that they only send traffic to the MAC
    address, that is, the intended destination. It is because of these abilities that
    switches have replaced hubs, devices that cannot control the flow of traffic or
    prevent other clients from eavesdropping on a connection that doesn't involve
    them. To counteract the security of switches, a number of techniques have been
    developed that include actions such as MAC flooding, DHCP starvation, and ARP
    spoofing. Some of these techniques are used to get around the switch, while others
    are intended to target the switch directly and make it operate as a hub, thus
    making our attack easier to carry out.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能已经知道的那样，交换机是一种用于通过MAC地址控制流量的设备。这些设备在当今的环境中被广泛使用，您应该期望了解并处理它们，以便在它们阻止您的攻击尝试时能够正确地参与和击败它们。交换机很受欢迎，因为它们可以减少网络拥塞和相关的网络流量，更不用说它们只向MAC地址发送流量，也就是说，发送到预期目的地。正是因为这些能力，交换机已经取代了集线器，集线器无法控制流量或阻止其他客户端窃听与它们无关的连接。为了对抗交换机的安全性，已经开发了一些技术，包括MAC洪泛、DHCP饥饿和ARP欺骗等行动。其中一些技术用于绕过交换机，而其他技术则旨在直接针对交换机并使其像集线器一样运行，从而使我们的攻击更容易实施。
- en: Typically, flooding does not work on switches that have been deployed in the
    last decade or more. Typically, modern switches no longer work, and even on the
    older ones, a vigilant network admin is going to notice the change in network
    traffic and volume. In order for switches to know where to send traffic, they
    maintain a CAM table that essentially maps IP addresses to MAC addresses. This
    table says that when traffic is intended for an IP address, `192.168.1.101` for
    instance, send that traffic to MAC address `11:22:33:44:EE:FF`, for example.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，洪泛攻击不适用于过去十年或更长时间内部署的交换机。通常，现代交换机不再起作用，即使在旧的交换机上，警惕的网络管理员也会注意到网络流量和数量的变化。为了让交换机知道将流量发送到何处，它们维护一个CAM表，该表基本上将IP地址映射到MAC地址。例如，该表表示当流量发送到IP地址`192.168.1.101`时，将该流量发送到MAC地址`11:22:33:44:EE:FF`。
- en: If we can change the entries in that table, we can successfully get someone
    else's traffic. This is called **ARP spoofing**, because the entries in the CAM
    table come from ARPs that are sent out by the switch to gather this information
    from the NIC.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们可以改变表中的条目，我们就可以成功地获取别人的流量。这就是所谓的ARP欺骗，因为CAM表中的条目来自交换机发送的ARP，以从网卡获取这些信息。
- en: In the recipe, we will be making use of a technique known as ARP spoofing, which
    is designed to allow us to insert ourselves between our targets and make them
    believe that they are still talking directly to one another.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节的示例中，我们将利用一种称为ARP欺骗的技术，这种技术旨在允许我们插入自己在目标之间，并让他们相信他们仍在直接交谈。
- en: ARP spoofing is a form of attack that is typically used as a component of or
    precursor to another attack. In this attack, a malicious part transmits a spoofed
    or falsified series of ARP messages on a local network. The intention of doing
    this is to create or change a connection or linkage of an IP and MAC address on
    a system or computer to be something different than what it should be. Once the
    attacker has completed the spoofing portion, they can effectively change the flow
    of traffic on a network segment. Once the attacker's MAC address is connected
    to an authentic IP address, the attacker will begin receiving any data that is
    intended for that IP address.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: ARP欺骗是一种攻击形式，通常被用作另一种攻击的组成部分或前兆。在这种攻击中，恶意方在本地网络上发送伪造的ARP消息序列。这样做的目的是创建或更改系统或计算机上IP和MAC地址的连接或关联，使其与应该是的不同。一旦攻击者完成了欺骗部分，他们就可以有效地改变网络段上的流量。一旦攻击者的MAC地址连接到一个真实的IP地址，攻击者将开始接收任何发送给该IP地址的数据。
- en: Something to remember with eavesdropping is that it can take place using many
    different protocols, such as FTP, HTTP, and others. Essentially any form of online
    communication can be subject to a man-in-the-middle attack if the right approach
    is utilized. In the recipe in this section we will be demonstrating how to perform
    the attack using only a specific protocol, but the example can be extended out
    to other protocols as appropriate.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 关于窃听的一点要记住的是，可以使用许多不同的协议进行窃听，如FTP、HTTP等。基本上，任何形式的在线通信都可能受到中间人攻击，只要采用正确的方法。在本节的示例中，我们将演示如何仅使用特定协议执行攻击，但这个示例可以扩展到其他适当的协议。
- en: One thing to remember when discussing a tool such as DCF is that it preys upon
    the fact that many protocols such as FTP and HTTP were designed in a day and age
    that did not take security into account. These protocols were designed to perform
    a very specific function, such as the transferring of files or other information,
    and that core function they perform exceptionally well and with very few problems.
    However, as the designers of these protocols never took the security problems
    that we see today into account, they did not take them into account during the
    actual design process. Thus, what has happened is this lack of security is preyed
    upon by tools such as dsniff or Wireshark, as well as plenty of others.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论类似DCF这样的工具时要记住的一件事是，它利用了许多协议（如FTP和HTTP）在设计时没有考虑安全性的事实。这些协议的设计是为了执行非常特定的功能，比如文件或其他信息的传输，它们在核心功能上表现出色，几乎没有问题。然而，由于这些协议的设计者在实际设计过程中没有考虑到今天我们看到的安全问题，因此像dsniff或Wireshark等工具就会利用这种缺乏安全性。
- en: In the case of Wi-Fi networks, a man-in-the middle is a particularly attractive
    attack to carry out due to the design of the environment. In this environment,
    all an attacker has to do is wait for a client to attach and let the fun and games
    begin. Using methods such as a fake access point, as covered in a previous chapter,
    or cracking a WEP or WPA key and attaching to an existing network offer sufficiently
    effective methods for performing a man-in-the-middle attack.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在Wi-Fi网络的情况下，中间人攻击是一种特别吸引人的攻击，因为环境的设计。在这种环境中，攻击者所要做的就是等待客户端连接，然后开始游戏。使用伪造接入点等方法，或者破解WEP或WPA密钥并连接到现有网络，都是执行中间人攻击的有效方法。
- en: Something important to point out with man -in-the-middle attacks is that they
    can be otherwise undetectable to the client that has been victimized by the attack.
    As far as the victim's concerned, when a man-in-the-middle attack is occurring
    they are communicating with whoever they were originally intending to communicate
    with; they don't know that there is a third party intercepting and potentially
    manipulating their traffic in some way. If the attacker doesn't do anything to
    make their presence known, or tip off anyone that they are there, it can be very
    difficult to pick up their presence. However, there are ways to do so. Devices
    such as network intrusion detection systems for one can pick up the changes in
    traffic and notify a system owner or administrator as to the change and allow
    them to take action in response.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 需要指出的一点是，中间人攻击可能对受攻击的客户端是无法检测到的。就受害者而言，当中间人攻击发生时，他们正在与最初打算进行通信的人进行通信；他们不知道有第三方正在拦截并可能以某种方式操纵他们的流量。如果攻击者不采取任何行动来让他们的存在得到确认，或者不向任何人透露他们的存在，那么很难察觉到他们的存在。然而，有办法可以做到。例如，网络入侵检测系统可以检测到流量的变化，并通知系统所有者或管理员进行响应。
- en: Getting ready
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get things started, you will need to have the following items in place:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始操作，您需要准备以下物品：
- en: A wireless card capable of entering monitor mode
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够进入监视器模式的无线网卡
- en: Kali Linux with Wireshark installed
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了Wireshark的Kali Linux
- en: How to do it...
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: In order to perform a man-in-the-middle attack, we need to bring together a
    few tools and techniques both new and old. With that being said, let's get started.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行中间人攻击，我们需要整合一些新的和旧的工具和技术。话虽如此，让我们开始吧。
- en: One thing to focus on in this attack is that we will be using multiple Terminal
    windows in Kali at once. In fact, in this particular recipe, we will be using
    three simultaneous Terminal windows with utilities running, each performing a
    separate part of the process. So, remember to keep your focus and pay attention
    to which window you're supposed to be in during this recipe.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种攻击中需要关注的一点是，我们将同时在Kali中使用多个终端窗口。事实上，在这个特定的步骤中，我们将使用三个同时运行的终端窗口，每个窗口执行过程的不同部分。因此，请记住要集中注意力，并注意在这个步骤中应该在哪个窗口中。
- en: Keep in mind that in this book, as well as in real life, you're going to find
    yourself in numerous situations where you're running more than one Terminal window
    at once. This is generally because you need to run multiple utilities at the command
    line, with each one designed to perform one piece of a process or task. So, when
    performing these attacks, make sure you are really paying attention to which window
    you are in at any one time to ensure that you don't inadvertently cancel or run
    a command or sequence that will yield different results to what you expected.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在本书中以及在现实生活中，您会发现自己处于多种情况下，需要同时运行多个终端窗口。这通常是因为您需要在命令行中运行多个实用程序，每个实用程序都设计用于执行一个过程或任务的一部分。因此，在执行这些攻击时，请确保您真正注意自己在任何时候处于哪个窗口中，以确保您不会无意中取消或运行一个命令或序列，从而产生与您预期不同的结果。
- en: During this recipe, we will be performing some steps designed to capture the
    information we are looking for.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个步骤中，我们将执行一些旨在捕获我们正在寻找的信息的步骤。
- en: The very first step that will take place is to run ARP spoofing, which is designed
    to help us redirect and capture traffic and then be able to capture credentials
    out of it in a later point.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 将发生的第一步是运行ARP欺骗，旨在帮助我们重定向和捕获流量，然后能够在以后捕获凭据。
- en: One key thing to remember when you are trying to attempt this attack is that
    this attack will only work on a local network; it will not work across different
    subnets or even on two different networks. The reason for that is the ARP protocol
    only works on local networks—it's not designed to be. Attempting to perform this
    attack on anything except a local network, therefore, will result in nothing.
    This is a very important detail to remember, as forgetting it can prove very frustrating
    as the attack may fail.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试此攻击时要记住的一点是，此攻击只能在本地网络上进行；它不会跨不同子网或甚至在两个不同的网络上进行。原因是ARP协议只在本地网络上工作——它不是设计用于其他情况。因此，在除本地网络以外的任何地方尝试执行此攻击将导致失败。这是一个非常重要的细节，要记住，忘记它可能会导致攻击失败，这可能会非常令人沮丧。
- en: We will perform our first step on the client by replacing the MAC address of
    the server with the MAC address of our local system. This will redirect traffic
    to our system instead of the actual server.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过用我们本地系统的MAC地址替换服务器的MAC地址来执行客户端的第一步。这将把流量重定向到我们的系统而不是实际的服务器。
- en: 'We perform this action by running `arpspoof` in one of the Terminal windows,
    as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过在一个终端窗口中运行`arpspoof`来执行此操作，如下所示：
- en: '[PRE5]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will tell the client that we are the system they are looking for when they
    are trying to contact the server.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这将告诉客户端我们是他们在尝试联系服务器时正在寻找的系统。
- en: 'The next step is to replace the MAC address of the client with the MAC address
    of our system. This is done simply by reversing the order of the IP address used
    previously:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是用我们系统的MAC地址替换客户端的MAC地址。这只需简单地颠倒之前使用的IP地址的顺序：
- en: '[PRE6]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following screenshot shows the reversing the  order of IP address:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了颠倒IP地址的顺序：
- en: '![](img/e8b6e67b-7f4a-4e7f-b3ed-4e2847a11215.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e8b6e67b-7f4a-4e7f-b3ed-4e2847a11215.jpg)'
- en: Here, we are telling the server that we are the client.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉服务器我们是客户端。
- en: Now execute both of these commands. When we do this, the client will think we
    are the server and the server will think we are the client!
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在执行这两个命令。当我们这样做时，客户端会认为我们是服务器，服务器会认为我们是客户端！
- en: '![](img/ef77bcab-978c-42d3-b57b-02b317947f6a.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ef77bcab-978c-42d3-b57b-02b317947f6a.jpg)'
- en: Once we have spoofed the MAC addresses of the clients to redirect their traffic,
    we need to perform a process known as forwarding, or IP forwarding. In essence,
    what we are doing is forwarding traffic through our system from client to server
    and server to client in order to ensure the request from one gets to the other
    and vice versa. If we don't perform forwarding, the connection will effectively
    be broken because the traffic that is routed from one network interface to another
    will not make it.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们伪造了客户端的MAC地址以重定向其流量，我们需要执行一个称为转发或IP转发的过程。实质上，我们所做的是通过我们的系统从客户端到服务器和从服务器到客户端转发流量，以确保来自一方的请求到达另一方，反之亦然。如果我们不执行转发，连接将会被有效地中断，因为从一个网络接口路由到另一个网络接口的流量将无法到达目的地。
- en: Remember that the success of this attack depends on keeping a reliable and consistent
    connection between the client and its intended destination. You are inserting
    yourself in the middle of this connection attempt and any subsequent exchange
    of information, and you are trying to keep your presence unknown and undetected
    for as long as it's required to collect the information that you are looking for.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，此攻击的成功取决于客户端与其预期目的地之间保持可靠和一致的连接。您正在介入此连接尝试以及任何随后的信息交换，并且您正在尝试在所需的时间内保持您的存在未知和未被检测到，以收集您正在寻找的信息。
- en: To enable forwarding we use the `ip_forward` command, which is part of Linux
    by default and allows for the process we are attempting to configure. Under normal
    conditions this feature is disabled, so we will need to re-enable it. Linux has
    a built-in functionality to forward packets it receives.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用转发，我们使用`ip_forward`命令，默认情况下Linux中包含此功能，允许我们尝试配置的过程。在正常情况下，此功能是禁用的，因此我们需要重新启用它。Linux具有内置功能来转发它接收到的数据包。
- en: 'We do this by using the following command:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过使用以下命令来实现这一点：
- en: '[PRE7]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](img/3a6b227a-55d7-4e73-a686-cc052c85d5e0.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a6b227a-55d7-4e73-a686-cc052c85d5e0.png)'
- en: Now with our system inserted into the middle of these communicating hosts, and
    our client and server called, we can start the next phase, which is to start sniffing
    traffic with the intent of looking for credentials that will be of use.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的系统已插入到这些通信主机之间，并且我们的客户端和服务器已被调用，我们可以开始下一阶段，即开始嗅探流量，以寻找有用的凭据。
- en: Keep in mind that when using a man-in-the-middle attack, or any other attack
    that uses sniffing, that protocols that are unprotected such as HTTP or FTP will
    make your attack substantially easier. Technologies such as SSH, which employ
    encryption designed to protect the confidentiality and integrity of information,
    will make sniffing extremely ineffective at gathering useful information or credentials,
    as they are designed to protect clients' data.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在使用中间人攻击或任何其他使用嗅探的攻击时，未受保护的协议（如HTTP或FTP）会使攻击变得更加容易。而采用旨在保护信息机密性和完整性的加密的技术（如SSH）将使嗅探极其无效，无法收集有用的信息或凭据，因为它们旨在保护客户数据。
- en: In order to perform this step, we will use a suite of tools known as the `dsniff`
    suite, which has been around for several years but is still very useful in performing
    a myriad of different attacks. This suite includes a number of different tools
    designed to capture all types of traffic and extract useful information, such
    as credentials from FTP, telnet, HTTP, SNMP, POP, LDAP, and many others that are
    vulnerable to having their information intercepted and processed.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行这一步，我们将使用一套称为`dsniff`套件的工具，这套工具已经存在了好几年，但在执行各种不同的攻击时仍然非常有用。该套件包括多种不同的工具，旨在捕获各种流量并提取有用信息，例如来自FTP、telnet、HTTP、SNMP、POP、LDAP等容易被拦截和处理其信息的凭据。
- en: 'In order to use dsniff, we issue the following command:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用dsniff，我们发出以下命令：
- en: '[PRE8]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](img/7cc8fb8b-eda5-4bd7-aa0e-761975631428.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7cc8fb8b-eda5-4bd7-aa0e-761975631428.jpg)'
- en: When we execute this command, you will see that `dsniff` will promptly respond
    that it is losing on `eth0`. However, it is possible using the `- I` command to
    tell it to listen on a different interface altogether.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们执行此命令时，您会看到`dsniff`会迅速回应说它正在`eth0`上监听。但是，使用`-I`命令可以告诉它完全在不同的接口上监听。
- en: 'With this command executed, all we have to do now is wait. What we are waiting
    for is for a client to attach to the server. With `dsniff` in our corner, we will
    find that once the client logs in they will become a victim of our sniffing effort
    and their credentials will be displayed directly on our screen, where we can note
    them down and later make use of them as shown in the following screenshot:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此命令后，我们现在所要做的就是等待。我们正在等待的是客户端连接到服务器。有了`dsniff`的帮助，我们会发现一旦客户端登录，他们将成为我们嗅探努力的受害者，他们的凭据将直接显示在我们的屏幕上，我们可以记下它们，稍后可以像以下截图所示那样使用它们：
- en: '![](img/a50da355-3538-44df-b335-6bb413822082.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a50da355-3538-44df-b335-6bb413822082.jpg)'
- en: In this screenshot, you will note that DCF has captured the credentials of a
    client attaching to the server. In fact here, you can see who is attaching to
    whom and are thus able to establish the client/server relationship.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个截图中，您会注意到DCF已经捕获了连接到服务器的客户端的凭据。实际上，在这里，您可以看到谁连接到谁，因此能够建立客户端/服务器关系。
- en: Once you have the credentials displayed on your screen you'll also see the IP
    address that those credentials were sent to, which means that now all you have
    to do is open up your FTP client and point it to that same IP address. After providing
    the username and password you have just captured, you can in turn log in to that
    system and browse whatever information and services are there.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在屏幕上看到凭据，您还将看到这些凭据发送到的IP地址，这意味着现在您所要做的就是打开您的FTP客户端，并将其指向相同的IP地址。在提供用户名和密码后，您可以登录到该系统并浏览其中的任何信息和服务。
- en: Cracking WEP
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 破解WEP
- en: One of the unique characteristics of wireless networks is of course the fact
    that they don't use traditional media and instead use radio waves to carry their
    information from point to point. This is what makes the networks so attractive
    and popular, in that a person can carry their device anywhere within range of
    the wireless network and still maintain that access without having to worry about
    cables and such. However, this strength comes at a price, and that is that radio
    signals are indiscriminate and anyone who is in a position to receive them will
    also be in a position to process the information they carry.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 无线网络的一个独特特点当然是它们不使用传统媒体，而是使用无线电波将信息从一个点传输到另一个点。这就是使得网络如此吸引人和受欢迎的原因，一个人可以在无线网络的范围内的任何地方携带他们的设备，并且仍然可以保持访问而不必担心电缆等。然而，这种优势是有代价的，即无线电信号是不加区分的，任何能够接收它们的人也能够处理它们携带的信息。
- en: Fortunately for us, the designers of wireless networks saw this as an issue
    and decided to add protection to the initial specification of the IEEE 802.11b
    network design in the form of **Wired Equivalent Protocol** (**WEP**). At the
    time of release, WEP was viewed as a good feature, however, it wasn't too long
    before problems emerged and subsequently snowballed.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，无线网络的设计者将这视为一个问题，并决定在IEEE 802.11b网络设计的初始规范中添加保护，即**有线等效协议**（**WEP**）。在发布时，WEP被视为一个很好的功能，然而，不久之后问题出现并随后迅速扩大。
- en: WEP, is the oldest and arguably the weakest of the available encryption protocols.
    The WEP standard was introduced as the initial solution to wireless security but
    was quickly found to be flawed and highly vulnerable. There is a myriad of reasons
    why the protocol was found to be flawed and therefore vulnerable; among them is
    the poor cryptographic implementation in the protocol. Not only was the implementation
    designed and implemented poorly, it was done so without the review of experienced
    cryptographers who may have been able to detect any flaws and vulnerabilities
    and resolve them.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: WEP是可用加密协议中最古老且可以说是最薄弱的。WEP标准被引入作为无线安全的初始解决方案，但很快被发现存在缺陷和极易受攻击。该协议被发现存在缺陷和易受攻击的原因有很多；其中之一是协议中的密码学实现不佳。不仅实现设计和实施不佳，而且没有经验丰富的密码学家审查，他们可能能够发现任何缺陷和漏洞并解决它们。
- en: WPA, or Wi-Fi Protected Access, was the successor to WEP and was intended to
    address many of the problems that plagued WEP. In many areas, it succeeded and
    made for a much tougher security protocol. WPA uses TKIP, MIC, and AES encryption
    as its main mechanisms for securing information.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: WPA，或Wi-Fi保护访问，是WEP的继任者，旨在解决困扰WEP的许多问题。在许多领域，它成功了，并成为了一个更加严格的安全协议。WPA使用TKIP、MIC和AES加密作为其保护信息的主要机制。
- en: WPA2 is the upgrade or successor to WPA and was intended to address and replace
    the problems with WPA. WPA2 is much stronger and uses tougher encryption in the
    form of AES and CCMP. The standard also comes in a version that uses stronger
    systems such as EAP, TKIP, and AES (with longer keys).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: WPA2是WPA的升级或继任者，旨在解决和取代WPA的问题。WPA2更加强大，使用更严格的AES和CCMP加密。该标准还有一个版本，使用更强大的系统，如EAP、TKIP和AES（带有更长的密钥）。
- en: Before we get into the problems, however, let's see how WEP is supposed to work.
    After that, we will move on to how to exploit its problems.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在我们讨论问题之前，让我们看看WEP应该如何工作。之后，我们将继续讨论如何利用它的问题。
- en: WEP is the oldest of the wireless encryption protocols, and when originally
    introduced and integrated into the 802.11b standard it was viewed as a way of
    providing secure data transmissions more or less on a par with that of wired networks.
    As designed, the WEP protocol made use of some existing technologies including
    the RC4 encryption protocol.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: WEP是无线加密协议中最古老的，最初引入并集成到802.11b标准中，它被视为提供安全数据传输的一种方式，或多或少与有线网络相当。按设计，WEP协议利用了一些现有技术，包括RC4加密协议。
- en: 'When it was designed and debuted it was intended to accomplish the following:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当它被设计和推出时，旨在实现以下目标：
- en: Defeat eavesdropping on communications and attempts to reduce the unauthorized
    disclosure of data
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打败窃听通信和试图减少未经授权的数据披露
- en: Check the integrity of data as it flows across the network
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在数据流经网络时检查数据的完整性
- en: Use a shared secret key to encrypt packets prior to transmission
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传输之前使用共享的秘密密钥加密数据包
- en: Provide confidentiality, access control, and integrity in a lightweight, efficient
    system
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在轻量级、高效的系统中提供机密性、访问控制和完整性
- en: 'Its problems arise from the following circumstances:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 它的问题源于以下情况：
- en: The protocol was designed without review from experienced cryptologists, the
    academic community, or even the public.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该协议是在没有经验丰富的密码学家、学术界甚至公众的审查下设计的。
- en: It provides no clearly-defined method for key distribution (such as centralized
    key management) other than pre-shared keys, which must be input manually into
    each station. As a result, the keys are cumbersome to change on a large scale
    and thus rarely changed.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它没有明确定义的密钥分发方法（如集中式密钥管理），除了预共享密钥，必须手动输入到每个站点。因此，密钥在大规模更改时很麻烦，因此很少更改。
- en: Its design makes it possible to passively uncover the key using sniffing tools
    and cracking tools available freely in operating systems, such as the Linux-based
    Kali.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其设计使得可以通过嗅探工具和操作系统中免费提供的破解工具被动地发现密钥，例如基于Linux的Kali。
- en: Key generators used by different vendors are inconsistently and poorly designed,
    leading to vulnerabilities such as issues with the use of 40-bit keys.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同供应商使用的密钥生成器设计不一致且设计不良，导致漏洞，例如使用40位密钥的问题。
- en: The algorithms used to perform key scheduling have been shown to be vulnerable
    to attack.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于执行密钥调度的算法已被证明容易受到攻击。
- en: CRC32 used in the integrity checking is flawed, and with slight modifications
    packets may be modified consistently by an attacker to produce their desired results.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRC32在完整性检查中存在缺陷，并且通过轻微修改，攻击者可以一致地修改数据包以产生他们期望的结果。
- en: '**Initialization Vectors** (**IVs**) are only 24-bits in length, meaning that
    an entire pool of IVs can be exhausted by a mildly active network in five hours
    or less.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**初始化向量**（**IVs**）只有24位长度，这意味着一个轻度活跃的网络可以在五小时或更短的时间内耗尽整个IV池。'
- en: It is susceptible to known plaintext attacks through the analysis of packets.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它容易受到通过分析数据包进行已知明文攻击的影响。
- en: Keys may be uncovered through the analysis of packets, allowing for the creation
    of a decryption table.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密钥可以通过分析数据包来获取，从而创建解密表。
- en: It is susceptible to denial of service attacks through the use of associate
    and disassociate messages, which are not authenticated by WEP.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它容易受到拒绝服务攻击的影响，通过使用WEP未经身份验证的关联和取消关联消息。
- en: Getting ready
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To get things started you will need to have the following items in place:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，您需要准备好以下项目：
- en: A wireless card capable of entering monitor mode
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够进入监视模式的无线网卡
- en: Kali Linux
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux
- en: The items listed here are basic requirements and you could easily use more (or
    different) components if so desired. If you want enhanced range, for example,
    you could use a USB-based wireless card that has connections for an external antenna
    that could get better reception.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这里列出的项目是基本要求，如果需要，您可以轻松使用更多（或不同）组件。例如，如果您想要增强范围，您可以使用一个带有外部天线连接的基于USB的无线网卡，这样可以获得更好的接收效果。
- en: Something important to remember in this exercise is that we will be using a
    series of tools that all come from one suite of tools designed to crack and analyze
    the traffic from wireless networks. We will revisit different tools from the suite
    in subsequent chapters, as well as use them for different purposes along the way.
    This will serve as your first exploration of some of the members of the air-crack
    suite.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中需要记住的一件重要事情是，我们将使用一系列工具，这些工具都来自一个旨在破解和分析无线网络流量的工具套件。在随后的章节中，我们将重新访问套件中的不同工具，并在途中为不同目的使用它们。这将是你对air-crack套件中一些成员的首次探索。
- en: Step one – monitor mode airmon-ng
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步 - 监视模式 airmon-ng
- en: The first step we have to do is put the wireless adapter into promiscuous mode
    or monitor mode. This is no different to what we have been doing in previous chapters.
    In this case, we will assume that our wireless adapter uses the name `wlan0`,
    but double check it to ensure that the name is the same on your system.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须做的第一步是将无线适配器置于混杂模式或监视模式。这与我们在以前的章节中所做的没有什么不同。在这种情况下，我们假设我们的无线适配器使用名称`wlan0`，但请仔细检查以确保您系统上的名称相同。
- en: '[PRE9]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Much like before, the `airmon-ng` utility has switched our wireless card into
    monitor mode and should have renamed it to something along the lines of `mon0`.
    Once this is done, we will now be capable of viewing all the traffic we need.
    The following screenshot shows the result of the `airmon-ng` command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 与以前一样，`airmon-ng`实用程序已将我们的无线网卡切换到监视模式，并且应该已将其重命名为类似`mon0`的名称。完成此操作后，我们现在将能够查看所有我们需要的流量。以下屏幕截图显示了`airmon-ng`命令的结果：
- en: '![](img/72ba8570-043e-4440-ae1f-32f0f6908fc5.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/72ba8570-043e-4440-ae1f-32f0f6908fc5.png)'
- en: airmon-ng switching wlan0 into monitor mode.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: airmon-ng将wlan0切换到监视模式。
- en: Step two – airdump-ng
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二步 - airdump-ng
- en: 'With monitor mode in place, we will now start to collect traffic with this
    same wireless adapter. To perform this operation using `airodump-ng`, we would
    type the following:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 有了监视模式，我们现在将开始使用相同的无线适配器收集流量。要使用`airodump-ng`执行此操作，我们将输入以下内容：
- en: '[PRE10]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note how we used the new name for the monitoring interface, `mon0`. You should
    verify the name with `ifconfig` to ensure that your new interface name is the
    same.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意我们使用了监视接口的新名称`mon0`。您应该使用`ifconfig`验证名称，以确保您的新接口名称与之前相同。
- en: 'Once this step is completed you should start seeing access points, and it is
    up to you to select the one you wish to create an evil twin of:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，您应该开始看到访问点，选择要创建恶意双胞胎的访问点取决于您：
- en: '![](img/65417548-61cb-44d7-8258-6e25ab5962db.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65417548-61cb-44d7-8258-6e25ab5962db.jpg)'
- en: Step three – airdump-ng and traffic capture
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三步 - airdump-ng和流量捕获
- en: From the list of access points in this screenshot, you will note that there
    are two WEP-enabled access points, of which we will choose the one named `7871`.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 从此屏幕截图中的访问点列表中，您将注意到有两个启用WEP的访问点，我们将选择名为`7871`的访问点。
- en: '[PRE11]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will start capturing packets from the SSID `7871` on channel `6` and write
    them to file crack, which will be in the `pcap` format. The problem with this
    method is that we need to capture a lot of packets or traffic to be able to actually
    break or retrieve the key. If you're someone who likes being patient, you can
    wait for 50 or 60,000—or even 100,000—packets to be captured before you proceed
    with the cracking process. However, that's not good enough; we want the key and
    we want to get it in the shortest amount of time possible. Let's do precisely
    that by setting up the circumstances that can make it happen.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这将开始捕获来自SSID`7871`的通道`6`上的数据包，并将它们写入名为crack的文件中，该文件将以`pcap`格式保存。这种方法的问题在于我们需要捕获大量数据包或流量才能真正破解或检索密钥。如果你是一个喜欢耐心等待的人，你可以等待捕获50,000或60,000甚至100,000个数据包后再进行破解过程。然而，这还不够好；我们想要密钥，而且希望在最短的时间内获得它。让我们通过设置可以实现这一目标的情况来做到这一点。
- en: There tends to be a little bit of an argument surrounding the actual number
    of packets that need to be captured to make this cracking process successful,
    so you may have to do a little experimenting to get consistent, reliable results.
    However, just for reference purposes, the amount of traffic that needs to be collected
    tends to be somewhere between 60,000 packets to over 100,000 or more.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 关于需要捕获的数据包数量，实际上存在一些争论，以使破解过程成功，因此您可能需要进行一些实验，以获得一致可靠的结果。然而，仅供参考，需要收集的流量量通常在60,000个数据包到100,000个或更多之间。
- en: Step four – replay that traffic
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四步 - 重放流量
- en: What we need to do to speed up this process is to generate a lot of traffic
    in a very short period of time. To do this, we are going to perform a process
    known as packet injection and we are also going to spoof a MAC address in order
    to induce a wave of traffic that we can in turn capture.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加快这个过程，我们需要在很短的时间内生成大量的流量。为了做到这一点，我们将执行一个称为数据包注入的过程，我们还将伪造一个MAC地址，以诱发一波我们可以捕获的流量。
- en: There are many different ways to perform replays of traffic, and in fact this
    technique is used to replay authentication traffic and other types of traffic
    on a network between host or applications. Keep in mind, however, that some types
    of traffic cannot be replayed easily, or at all. In fact, one of the biggest items
    that will thwart a data replay attack is time stamping, which includes information
    on a packet telling it when it was transmitted and how long it's valid for. Fortunately,
    ARP traffic does not have this protection on it by default, though it can be provided
    via other mechanisms. The techniques we're using here will not run into this limitation
    as we are not capturing or replaying traffic that is subject to this protection
    or limitation.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的方法可以重放流量，实际上，这种技术用于在主机或应用程序之间重放认证流量和其他类型的网络流量。然而，请记住，有些类型的流量不能轻松地或根本无法重放。事实上，阻止数据重放攻击的最大因素之一是时间戳，其中包括告诉数据包何时传输以及有效期多长的信息。幸运的是，ARP流量默认情况下没有这种保护，尽管可以通过其他机制提供。我们在这里使用的技术不会遇到这种限制，因为我们没有捕获或重放受此保护或限制的流量。
- en: 'The components required to perform this step are going to be the SSID of the
    access point, the MAC address of the client that has connected to the access point,
    and a tool known as `aireplay-ng`. We will issue the command using the utility
    in the following format:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此步骤所需的组件将是接入点的SSID，已连接到接入点的客户端的MAC地址，以及一个名为`aireplay-ng`的工具。我们将使用以下格式的实用程序发出命令：
- en: '[PRE12]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If we have done everything correctly up to this point, the `airodump` we have
    run in another window will still be running and will be able to capture all the
    traffic we have generated into the file we named crack, which we will then use
    to run analysis on and retrieve the key.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果到目前为止我们已经做得一切正确，我们在另一个窗口中运行的`airodump`仍将在运行，并且能够将我们生成的所有流量捕获到我们命名为crack的文件中，然后我们将使用它来进行分析并检索密钥。
- en: Step five – crack that traffic
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五步 - 破解流量
- en: Before we proceed with step five, which is where we will actually crack the
    traffic, we need to make sure that we have captured several tens of thousands
    of packets in order to ensure that we have enough traffic to properly analyze.
    If you do not capture enough traffic, the chances are that this process will fail
    and you'll have to re-generate traffic in an effort to capture more. So, remember
    to be patient, and ensure that you capture enough traffic to perform the process
    with a reasonable amount of success.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续进行第五步，也就是我们实际破解流量的地方，我们需要确保我们已经捕获了数万个数据包，以确保我们有足够的流量进行适当的分析。如果您没有捕获足够的流量，那么这个过程很可能会失败，您将不得不重新生成流量，以捕获更多的流量。因此，请记住要耐心，并确保捕获足够的流量以合理成功地执行该过程。
- en: Something to remember when attempting to recover the key from captured traffic
    is that it can take a while depending on the resources available on the system
    that is attempting to recover the key. If you have a slower or older system, expect
    this process to take a little longer than it would on a system that has more processing
    power or memory. If you have collected enough traffic, the process should be successful
    - no matter how long it takes.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试从捕获的流量中恢复密钥时要记住的一件事是，这可能需要一些时间，这取决于试图恢复密钥的系统上可用的资源。如果您有一个速度较慢或较旧的系统，预计这个过程会比在具有更多处理能力或内存的系统上花费更长的时间。如果您已经收集了足够的流量，那么这个过程应该是成功的
    - 无论花费多长时间。
- en: 'In order to crack traffic, we need to be in possession of a capture file, which
    we generated using `airodump` earlier. All the traffic that we have generated
    using `aireplay` should be captured into this file, which we can then perform
    analysis on using the following utility:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 为了破解流量，我们需要拥有一个捕获文件，这是我们之前使用`airodump`生成的。我们使用`aireplay`生成的所有流量都应该被捕获到这个文件中，然后我们可以使用以下实用程序进行分析：
- en: '[PRE13]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: If you are successful, `aircrack` will display the key in hexadecimal on your
    screen, which you can then use to enter into your wireless client when you associate
    with the targeted access point.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果成功了，`aircrack`将在屏幕上以十六进制显示密钥，然后您可以将其用于与目标接入点关联时输入到您的无线客户端中。
- en: If you've performed the steps of this attack with patience and care you will
    find that you have a great chance of success and you should be able to gain access
    to any WEP-enabled network on demand. Also keep in mind that it can take a little
    bit of practice to ensure that you get enough traffic captured into a file using
    `airodump`; learning curves are normal.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您耐心和细心地执行了这次攻击的步骤，您会发现您有很大的成功机会，并且应该能够随需访问任何启用WEP的网络。还要记住，确保使用`airodump`将足够的流量捕获到文件中可能需要一些练习；学习曲线是正常的。
- en: It is largely because of the weakness exploited here in this particular recipe
    that this form of protection on wireless networks is frowned upon or shunned as
    a valid form of protection. When this protective mechanism debuted with early
    wireless networks it was seen as being a decent form of protection. However, as
    technology evolved and attackers sought different ways of capturing information,
    a vulnerability was soon discovered. It is this vulnerability that we are praying
    upon in this particular recipe. Networks nowadays should not be using this protection
    measure as their primary means of protecting the wireless traffic, as it is not
    that hard to break - all it takes is a little finesse and patience before you
    get the information you desire.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这种保护无线网络的方式在很大程度上受到了利用，因此被视为一种不被赞同或避之不及的保护形式。当这种保护机制在早期无线网络中首次亮相时，它被认为是一种体面的保护形式。然而，随着技术的发展和攻击者寻求捕获信息的不同方式，很快就发现了一种漏洞。正是这种漏洞在这个特定的配方中被利用。如今的网络不应该将这种保护措施作为保护无线流量的主要手段，因为它并不难破解
    - 只需要一点技巧和耐心，你就能得到你想要的信息。
