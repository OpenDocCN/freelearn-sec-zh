- en: Reconnaissance
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 侦察
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章内容包括：
- en: Passive reconnaissance
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被动侦察
- en: Using Recon-ng to gather information
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Recon-ng收集信息
- en: Scanning and identifying services with Nmap
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nmap扫描和识别服务
- en: Identifying web application firewalls
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别Web应用防火墙
- en: Identifying HTTPS encryption parameters
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别HTTPS加密参数
- en: Using the browser's developer tools to analyze and alter basic behavior
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用浏览器的开发者工具分析和修改基本行为
- en: Obtaining and modifying cookies
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取和修改Cookies
- en: Taking advantage of robots.txt
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用robots.txt
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Every penetration test, be it for a network or a web application, has a workflow;
    it has a series of stages that should be completed in order to increase our chances
    of finding and exploiting every possible vulnerability affecting our targets,
    such as:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 每一次渗透测试，无论是针对网络还是Web应用，都有一个工作流程；它包含一系列必须完成的阶段，以提高我们发现并利用所有可能漏洞的机会，这些漏洞可能影响到我们的目标，例如：
- en: Reconnaissance
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 侦察
- en: Enumeration
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举
- en: Exploitation
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用
- en: Maintaining access
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持访问
- en: Cleaning tracks
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清理痕迹
- en: In a network penetration testing scenario, reconnaissance is the phase where
    testers must identify all the assets in the network, firewalls, and intrusion
    detection systems. They also gather the maximum information about the company,
    the network, and the employees.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络渗透测试场景中，侦察是测试人员必须识别网络中所有资产、防火墙和入侵检测系统的阶段。测试人员还会收集关于公司、网络和员工的最大信息。
- en: In our case, for a web application penetration test, this stage will be all
    about getting to know the application, the database, the users, the server, and
    the relationship between the application and us.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，对于Web应用渗透测试，这一阶段将专注于了解应用程序、数据库、用户、服务器以及应用程序和我们之间的关系。
- en: Reconnaissance is an essential stage in every penetration test; the more information
    we have about our target, the more options we will have when it comes to finding
    vulnerabilities and exploiting them.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 侦察是每次渗透测试中的一个重要阶段；我们对目标了解得越多，在寻找漏洞和利用漏洞时可选择的方案也就越多。
- en: Passive reconnaissance
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 被动侦察
- en: Passive reconnaissance is something we do without directly interacting with
    our target, that is, we gather information about it from third parties such as
    search engines, cache databases, reputation monitoring sites, and many others.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 被动侦察是我们不直接与目标交互时进行的，即我们通过第三方收集关于目标的信息，例如搜索引擎、缓存数据库、声誉监控网站等。
- en: In this recipe, we will be requesting information from multiple online services,
    also referred to as **open source intelligence** (**OSINT**), in order to build
    a general picture of our target and discover information that is useful from a
    penetration testing perspective, in the scenario that we are testing a publicly
    available site or application.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将请求多个在线服务的信息，这些服务也被称为**开源情报**（**OSINT**），以便构建我们目标的一般图像，并发现从渗透测试的角度有用的信息，假设我们正在测试一个公开可用的网站或应用程序。
- en: Getting ready
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Given that in this recipe, we will request information from multiple public
    sources, we will need for our Kali virtual machine to be able to connect to the
    internet, hence, we will need to configure its network settings to use a NAT adapter.
    To do this, follow the recipe *Configuring virtual machines for correct communication*
    in [Chapter 1](b5aed3bb-313a-47ca-bc62-af4d938f7a3f.xhtml), *Setting Up Kali Linux
    and the Testing Lab*, and select NAT instead of Host-only Adapter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于在本节中，我们将从多个公共来源请求信息，我们需要确保我们的Kali虚拟机能够连接到互联网，因此我们需要配置其网络设置以使用NAT适配器。为此，请参阅[第1章](b5aed3bb-313a-47ca-bc62-af4d938f7a3f.xhtml)中的*配置虚拟机以实现正确通信*，并选择NAT，而非Host-only适配器。
- en: How to do it...
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will be using zonetransfer.me as our target domain name. The domain zonetransfer.me
    has been created by Robin Wood, from DigiNinja ([https://digi.ninja/projects/zonetransferme.php](https://digi.ninja/projects/zonetransferme.php)),
    to illustrate the risks of allowing public DNS zone transfers:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用zonetransfer.me作为目标域名。该域名zonetransfer.me由Robin Wood（来自DigiNinja）创建([https://digi.ninja/projects/zonetransferme.php](https://digi.ninja/projects/zonetransferme.php))，用于展示允许公开DNS区传输的风险：
- en: 'We first use `whois` on the domain name to get the registration information
    about it. Let''s try testing a domain such as zonetransfer.me:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先使用`whois`查询域名，以获取其注册信息。我们来试着测试一个域名，如zonetransfer.me：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](assets/6077d557-7a36-4590-b44b-b95954bea949.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6077d557-7a36-4590-b44b-b95954bea949.png)'
- en: 'Another tool used to get information about the domain name and DNS resolution
    is `dig`. We can, for example, query the nameservers for the target domain:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一个用于获取域名和 DNS 解析信息的工具是`dig`。例如，我们可以查询目标域名的 nameserver：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](assets/09272dc1-7c54-4fa1-a189-f5efbb87395a.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/09272dc1-7c54-4fa1-a189-f5efbb87395a.png)'
- en: 'Once we have the information on the DNS servers, we can attempt a zone transfer
    attack to get all the hostnames the server resolves. For this we use `dig`:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们获得了 DNS 服务器的信息，就可以尝试进行区域传输攻击，以获取服务器解析的所有主机名。为此我们使用 `dig`：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](assets/155a7909-7528-4a72-a625-458f2c9d1db7.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/155a7909-7528-4a72-a625-458f2c9d1db7.png)'
- en: 'Luckily for us, the server is vulnerable and gives us a complete list of subdomains
    and the hosts it resolves to. Sometimes we can find some low-hanging fruits to
    exploit on them:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，服务器存在漏洞，给了我们一个完整的子域名列表及其解析的主机。有时我们可以在其中找到一些容易利用的漏洞：
- en: 'We now use `theharvester` to identify email addresses, hostnames, and IP addresses
    related to the target domain:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们使用 `theharvester` 来识别与目标域名相关的电子邮件地址、主机名和 IP 地址：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](assets/4b075981-c6d6-4b36-9b67-88702444aa88.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4b075981-c6d6-4b36-9b67-88702444aa88.png)'
- en: 'For each web server in scope, we want to know what software and which versions
    it uses; a way of doing this without directly querying the server is through Netcraft.
    Browse to [https://toolbar.netcraft.com/site_report](https://toolbar.netcraft.com/site_report)
    and enter the URL in the search box:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个在范围内的 Web 服务器，我们希望了解它使用的软件及其版本；一种不直接查询服务器的方式是通过 Netcraft。访问 [https://toolbar.netcraft.com/site_report](https://toolbar.netcraft.com/site_report)
    并在搜索框中输入网址：
- en: '![](assets/3433585c-ac8c-46c1-b10e-be71ecd37988.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3433585c-ac8c-46c1-b10e-be71ecd37988.png)'
- en: 'Also, sometimes it may be useful to know what the site looked like before the
    last update; maybe it had some valuable information that was later removed. To
    get a static copy of a previous version of our targets, we can use Wayback Machine
    from [https://archive.org/web/web.php](https://archive.org/web/web.php):'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，有时了解站点在上次更新之前的样子可能会很有用；也许它曾经包含一些后来被删除的有价值的信息。为了获取我们目标的静态副本，可以使用 Wayback Machine，网址是
    [https://archive.org/web/web.php](https://archive.org/web/web.php)：
- en: '![](assets/048d34d4-3590-4ebe-83a8-8a4abb11ab85.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/048d34d4-3590-4ebe-83a8-8a4abb11ab85.png)'
- en: How it works...
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In this recipe, we used multiple tools to gather different pieces of information
    about our target. We started running `whois`, this Linux command queries the domain
    registration details, and with it we can obtain the addresses of nameservers and
    owner details such as company, email address, phone number, and others. `whois`
    can also query information about IP addresses, showing information about the company
    owning the network segment the address belongs to. Next, we used `dig` to get
    information about the domain servers and then to perform a zone transfer and obtain
    the complete list of hosts resolved by the queried server; this works only on
    servers that are not correctly configured.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，我们使用了多个工具来收集关于目标的不同信息。首先，我们运行了 `whois`，这个 Linux 命令查询域名注册详情，通过它我们可以获取
    nameserver 的地址以及所有者的详细信息，如公司、电子邮件地址、电话号码等。`whois` 还可以查询 IP 地址信息，显示有关拥有该网络段地址的公司的信息。接下来，我们使用
    `dig` 获取关于域名服务器的信息，然后执行区域传输，获取查询服务器解析的完整主机列表；这仅适用于未正确配置的服务器。
- en: By using `theharvester`, we obtained email addresses, hostnames, and IP addresses
    related to the target domain. The options used in this recipe were `-b all`, to
    use all the supported search engines, and `-d zonetransfer.me` to specify the
    target domain.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `theharvester`，我们获取了与目标域名相关的电子邮件地址、主机名和 IP 地址。在这个过程中使用的选项是 `-b all`，表示使用所有支持的搜索引擎，以及
    `-d zonetransfer.me`，指定目标域名。
- en: We then used Netcraft to obtain information about the technologies used by the
    site and a brief history of updates and changes; this allowed us to further plan
    the testing process without having to query the actual site.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用 Netcraft 获取了该站点所使用的技术信息以及更新和变更的简要历史；这使我们能够在不直接查询实际站点的情况下，进一步规划测试过程。
- en: Wayback Machine is a service that stores static copies of internet sites and
    keeps a record of their updates and versions; here, we can see the information
    published in older versions of the site and maybe obtain information published
    previously and subsequently removed. Sometimes, an update to a web application
    may leak sensitive data and such an update is rolled back or replaced by a new
    version, hence the usefulness of being able to see previous versions of the applications.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Wayback Machine 是一个存储互联网网站静态副本的服务，记录其更新和版本；在这里，我们可以查看网站旧版本中发布的信息，也许还能获取以前发布但后来被删除的信息。有时，Web
    应用程序的更新可能会泄露敏感数据，而这些更新会被回滚或替换为新版本，因此能够查看先前版本的应用程序非常有用。
- en: See also
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: 'Additionally, we can use Google''s advanced search options ([https://support.google.com/websearch/answer/2466433](https://support.google.com/websearch/answer/2466433))
    to look for information about our target domain without directly accessing it.
    For example, by using a search like `site:site_to_look_into "target_domain"`,
    we can look for the presence of our target domain in pages where recently found
    vulnerabilities, leaked information or successful attacks have been published,
    some good places where we can look at are:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以使用 Google 的高级搜索选项 ([https://support.google.com/websearch/answer/2466433](https://support.google.com/websearch/answer/2466433))
    来查找有关我们目标域名的信息，而无需直接访问它。例如，通过使用像 `site:site_to_look_into "target_domain"` 这样的搜索，我们可以查找我们目标域名在最近发现的漏洞、泄露信息或成功攻击的页面中的存在，以下是一些我们可以查找的好地方：
- en: openbugbounty.org: Open Bug Bounty is a site where independent security researchers
    report and disclose vulnerabilities (only Cross-Site Scripting and Cross-Site
    Request Forgery) on public facing websites. So this search in Google will return
    all mentions to "zonetransfer.me" made in openbugbounty.org.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'openbugbounty.org: Open Bug Bounty 是一个独立安全研究人员报告和披露漏洞（仅限跨站脚本攻击和跨站请求伪造）的网站，针对的是公共网站。所以，在
    Google 中进行这样的搜索将返回所有提到 "zonetransfer.me" 的内容，这些内容来自 openbugbounty.org 网站。'
- en: pastebin.com: Pastebin is, among other uses, a very popular way for hackers
    to anonymously exfiltrate and publish information obtained during an attack.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'pastebin.com: Pastebin 是黑客用来匿名提取和发布在攻击中获取的信息的非常流行的方式之一。'
- en: 'zone-h.org: Zone-H is a site where malicious hackers go and brag about their
    achievements, mostly the defacement of sites.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'zone-h.org: Zone-H 是一个黑客们用来炫耀自己成果的网站，主要是关于网站篡改的内容。'
- en: Using Recon-ng to gather information
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Recon-ng 收集信息
- en: Recon-ng is an information-gathering tool that uses many different sources to
    gather data, for example, on Google, Twitter, and Shodan.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Recon-ng 是一个信息收集工具，它使用许多不同的来源来收集数据，例如 Google、Twitter 和 Shodan。
- en: In this recipe, we will learn the basics of Recon-ng and use it to gather public
    information about our target.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习 Recon-ng 的基础知识，并使用它来收集关于目标的公开信息。
- en: Getting ready
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Although Recon-ng is ready to use as installed in Kali Linux, some of its modules
    require an API key to make queries to the online services. Also, having an API
    key will allow you to perform more advanced searches or avoid query limits in
    some services.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Recon-ng 在 Kali Linux 中已经可以直接使用，但其某些模块需要 API 密钥来向在线服务发起查询。此外，拥有 API 密钥还可以让你执行更高级的搜索或避免某些服务的查询限制。
- en: These keys can be generated by completing the registration on each search engine's
    website.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这些密钥可以通过在每个搜索引擎的网站上完成注册来生成。
- en: How to do it...
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s do a basic query to illustrate how Recon-ng works:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们做一个基本查询，来展示 Recon-ng 是如何工作的：
- en: 'To start Recon-NG from Kali Linux, use the Applications menu (Applications
    | 01 - Information Gathering | recon-ng) or type the `recon-ng` command in a Terminal:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从 Kali Linux 启动 Recon-NG，可以使用应用程序菜单（应用程序 | 01 - 信息收集 | recon-ng），或在终端中输入 `recon-ng`
    命令：
- en: '![](assets/ef4e5429-95a3-4a89-a0d4-03aeb29b8c59.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ef4e5429-95a3-4a89-a0d4-03aeb29b8c59.png)'
- en: We will be presented with a command-line interface. To see the modules we have
    available, we can issue the `show modules` command.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将看到命令行界面。为了查看可用的模块，我们可以执行 `show modules` 命令。
- en: Let's say we want to search all of the subdomains of a domain and the DNS server
    doesn't respond to zone transfer. We can brute force the subdomains; to do that,
    we first load the `brute_hosts` module: `use recon/domains-hosts/brute_hosts`.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们想要搜索某个域名的所有子域名，而 DNS 服务器不响应区域传送。我们可以使用暴力破解的方式获取子域名；为此，我们首先加载 `brute_hosts`
    模块：`use recon/domains-hosts/brute_hosts`。
- en: To learn the options we need to configure when using any module, we use the `show
    options` command.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要了解在使用任何模块时需要配置的选项，我们可以使用 `show options` 命令。
- en: 'To assign a value to an option, we use the command `set`: `set source zonetransfer.me`.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要为某个选项分配值，我们使用命令 `set`：`set source zonetransfer.me`。
- en: 'Once we have set all the options, we issue the `run` command to execute the
    module:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦设置好所有选项，我们就发出 `run` 命令来执行模块：
- en: '![](assets/e3229305-0f2b-48e8-a8b5-31230e8f1596.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e3229305-0f2b-48e8-a8b5-31230e8f1596.png)'
- en: 'It will take some time for the brute force to complete and it will display
    lots of information. Once it finishes, we can query the Recon-ng database to get
    the discovered hosts (`show hosts`):'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这需要一些时间才能完成暴力破解，并且会显示大量信息。一旦完成，我们可以查询 Recon-ng 数据库以获取已发现的主机（`show hosts`）：
- en: '![](assets/85af5fd4-9225-47bc-ab13-69f68014f9c9.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/85af5fd4-9225-47bc-ab13-69f68014f9c9.png)'
- en: How it works...
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Recon-ng is a wrapper for a multitude of tools and APIs that query search engines,
    social media, internet archives, and databases to obtain information about websites,
    web applications, servers, hosts, users, email addresses, and others. It works
    by integrating modules that provide different functionalities, such as searching
    Google, Twitter, LinkedIn, or Shodan, among others, or performing queries to DNS
    servers, like the one we used in this recipe. It also has modules for importing
    files into its database or for generating reports in various formats, such as
    HTML, MS Excel, or CSV.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Recon-ng 是一个工具和 API 的封装器，能够查询搜索引擎、社交媒体、互联网档案和数据库，以获取关于网站、Web 应用程序、服务器、主机、用户、电子邮件地址等的信息。它通过整合提供不同功能的模块来工作，比如搜索
    Google、Twitter、LinkedIn 或 Shodan 等，或者对 DNS 服务器执行查询，就像我们在这个示例中使用的那样。它还具有将文件导入数据库或生成报告（如
    HTML、MS Excel 或 CSV 格式）的模块。
- en: See also
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: Another very useful tool for information gathering and OSINT, included by default
    in Kali Linux, is **Maltego** ([https://www.paterva.com/web7/buy/maltego-clients/maltego-ce.php](https://www.paterva.com/web7/buy/maltego-clients/maltego-ce.php)),
    a favorite of many penetration testers. This tool provides a graphical user interface
    that displays all of the analyzed elements (email addresses, people, domain names,
    companies, and so on) within a graph where the relationships between elements
    are visually shown. For example, the node representing a person will be connected
    by a line to that person's email address and that email address to the domain
    name it belongs to.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个非常有用的信息收集和 OSINT 工具，Kali Linux 默认包含的工具是 **Maltego** ([https://www.paterva.com/web7/buy/maltego-clients/maltego-ce.php](https://www.paterva.com/web7/buy/maltego-clients/maltego-ce.php))，这是许多渗透测试人员的最爱。该工具提供一个图形用户界面，显示所有被分析的元素（如电子邮件地址、人物、域名、公司等）在图形中，元素之间的关系通过图形直观地展示。例如，代表某个人的节点将通过一条线与该人的电子邮件地址连接，而电子邮件地址又与其所属的域名连接。
- en: Scanning and identifying services with Nmap
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Nmap 扫描和识别服务
- en: Nmap is probably the most used port scanner in the world. It can be used to
    identify live hosts, scan TCP and UDP open ports, detect firewalls, get versions
    of services running in remote hosts, and even, with the use of scripts, find and
    exploit vulnerabilities.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap 可能是世界上使用最广泛的端口扫描器。它可以用来识别在线主机、扫描 TCP 和 UDP 开放端口、检测防火墙、获取远程主机上运行的服务版本，甚至通过脚本查找和利用漏洞。
- en: In this recipe, we will use Nmap to identify all the services running on our
    target application's server and their versions. For learning purposes, we will
    do this in several calls to Nmap, but it can be done using a single command.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用 Nmap 来识别目标应用程序服务器上运行的所有服务及其版本。为了学习的目的，我们将通过多次调用 Nmap 来实现这一点，但也可以通过单个命令完成。
- en: Getting ready
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: All we need is to have our vulnerable `vm_1` running.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的就是确保我们的易受攻击的 `vm_1` 正在运行。
- en: How to do it...
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'All of the tasks in this recipe can be done via a single line command; they
    are shown separately here to better illustrate their functionalities and results:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例中的所有任务都可以通过一行命令完成；它们在这里被分别展示，以更好地说明其功能和结果：
- en: 'First, we want to see whether the server is answering to a ping or if the host
    is up:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们想查看服务器是否响应 ping 请求，或者主机是否在线：
- en: '[PRE4]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](assets/f1935f1e-9d7b-47db-8b70-b5e01f8f684f.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f1935f1e-9d7b-47db-8b70-b5e01f8f684f.png)'
- en: 'Now, that we know that it''s up, let''s see which ports are open:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们知道它已启动，让我们看看哪些端口是开放的：
- en: '[PRE5]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](assets/1fa7dcd6-1a4e-4fd2-804d-65658d91eda3.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1fa7dcd6-1a4e-4fd2-804d-65658d91eda3.png)'
- en: 'Now we will tell Nmap to ask the server for the versions of services it is
    running and to guess the operating system based on that:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将告诉 Nmap 向服务器请求它正在运行的服务的版本，并根据这些信息猜测操作系统：
- en: '[PRE6]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](assets/9dafb79c-d2cc-4521-b8f8-09d3e4dc5af5.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9dafb79c-d2cc-4521-b8f8-09d3e4dc5af5.png)'
- en: We can see that our `vm_1` has, most likely, a Linux operating system (Nmap
    wasn't able to determine it exactly). It uses an Apache 2.2.14 web server, PHP
    5.3p1, Jetty 6.1.25, and so on.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们的 `vm_1` 很可能运行的是 Linux 操作系统（Nmap 没能准确确定）。它使用的是 Apache 2.2.14 网络服务器，PHP
    5.3p1，Jetty 6.1.25 等等。
- en: How it works...
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Nmap is a port scanner; this means that it sends packets to a number of TCP
    or UDP ports on the indicated IP address and checks whether there is a response.
    If there is, it means the port is open; hence, a service is running on that port.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap 是一个端口扫描器；这意味着它向指定 IP 地址上的多个 TCP 或 UDP 端口发送数据包，并检查是否有响应。如果有响应，则表示该端口是开放的，因此该端口上正在运行一个服务。
- en: In the first command, with the `-sn` parameter, we instructed Nmap to only check
    whether the server was responding to the ICMP requests (or pings). Our server
    responded, so it is alive.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个命令中，使用 `-sn` 参数，我们指示 Nmap 仅检查服务器是否响应 ICMP 请求（或 ping）。我们的服务器响应了，因此它是活跃的。
- en: The second command is the simplest way to call Nmap; it only specifies the target
    IP address. What this does is ping the server; if it responds, then Nmap sends
    probes to a list of 1,000 TCP ports to see which one responds and how they do
    it, and it then reports the results showing which ports are open.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个命令是调用 Nmap 的最简单方式；它只指定目标 IP 地址。这样做的作用是对服务器进行 ping 测试；如果服务器响应，Nmap 会向 1,000
    个 TCP 端口发送探测，查看哪些端口响应以及如何响应，然后报告结果，显示哪些端口是开放的。
- en: 'The third command adds the following two tasks to the second one:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个命令在第二个命令的基础上增加了以下两个任务：
- en: '`-sV` asks for the banner-header or self identification of each open port found,
    which is what it uses as the version'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-sV` 请求获取每个开放端口的横幅头部或自我识别信息，这些信息被用作版本标识。'
- en: '`-O` tells Nmap to try to guess the operating system running on the target
    using the information collected from open ports and versions'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-O` 告诉 Nmap 尝试通过从开放端口和版本收集的信息来猜测目标所运行的操作系统。'
- en: There's more...
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Other useful parameters when using Nmap are as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Nmap 时的其他有用参数如下：
- en: '`-sT`: By default, when it is run as a root user, Nmap uses a type of scan
    known as the SYN scan. Using this parameter, we force the scanner to perform a
    full connect scan. It is slower, and will leave a record in the server''s logs,
    but it is less likely to be detected by an intrusion detection system or blocked
    by a firewall.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-sT`：默认情况下，当以 root 用户身份运行时，Nmap 使用一种称为 SYN 扫描的扫描方式。使用此参数，我们强制扫描器执行完整连接扫描。它较慢，会在服务器的日志中留下记录，但不太可能被入侵检测系统检测到或被防火墙阻止。'
- en: '`-Pn`: If we already know that the host is alive or is not responding to pings,
    we can use this parameter to tell Nmap to skip the ping test and scan all the
    specified targets, assuming they are up.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Pn`：如果我们已经知道主机是活跃的或没有响应 ping，我们可以使用此参数告诉 Nmap 跳过 ping 测试并扫描所有指定的目标，假设它们是在线的。'
- en: '`-v`: This is the verbose mode. Nmap will show more information about what
    it is doing and the responses it gets. This parameter can be used multiple times
    in the same command: the more it''s used, the more verbose it gets (that is, `-vv`
    or `-v -v -v -v`).'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-v`：这是详细模式。Nmap 会显示更多关于它正在做的事情和它收到的响应的信息。此参数可以在同一命令中多次使用：使用次数越多，显示的信息越详细（即
    `-vv` 或 `-v -v -v -v`）。'
- en: '`-p N1,N2,...,Nn`: We might want to use this parameter if we want to test specific
    ports or some non-standard ports, where `N1` to `Nn` are the port numbers that
    we want Nmap to scan. For example, to scan ports `21`, `80` to `90`, and `137`,
    the parameters will be `-p 21,80-90,137`. Also, using `-p-` Nmap will scan all
    ports from `0` to `65`, and `536`.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p N1,N2,...,Nn`：如果我们想测试特定端口或一些非标准端口时，可能需要使用此参数，其中 `N1` 到 `Nn` 是我们希望 Nmap
    扫描的端口号。例如，要扫描端口 `21`、`80` 到 `90` 和 `137`，参数将是 `-p 21,80-90,137`。此外，使用 `-p-`，Nmap
    会扫描从 `0` 到 `65535` 的所有端口。'
- en: '`--script=script_name`: Nmap includes a lot of useful scripts for vulnerability
    checking, scanning or identification, login tests, command execution, user enumeration,
    and so on. Use this parameter to tell Nmap to run scripts over the target''s open
    ports. You may want to check the use of some Nmap scripts at: [https://nmap.org/nsedoc/scripts/](https://nmap.org/nsedoc/scripts/).'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--script=script_name`：Nmap 包含许多用于漏洞检查、扫描或识别、登录测试、命令执行、用户枚举等的有用脚本。使用此参数告诉 Nmap
    在目标的开放端口上运行脚本。你可能想查看一些 Nmap 脚本的使用，参考：[https://nmap.org/nsedoc/scripts/](https://nmap.org/nsedoc/scripts/)。'
- en: See also
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: 'Although it''s the most popular, Nmap is not the only port scanner available
    and, depending on varying tastes, maybe not the best either. There are some other
    alternatives included in Kali Linux, such as:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Nmap 是最流行的端口扫描器，但它并不是唯一可用的工具，而且根据个人偏好，可能也不是最好的选择。Kali Linux 中还包含了一些其他的替代工具，比如：
- en: '`unicornscan`'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`unicornscan`'
- en: '`hping3`'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hping3`'
- en: '`masscan`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`masscan`'
- en: '`amap`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`amap`'
- en: Metasploit's scanning modules
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit 的扫描模块
- en: Identifying web application firewalls
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别 Web 应用防火墙
- en: A **web application firewall** (**WAF**) is a device or a piece of software
    that checks packages
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**Web 应用防火墙**（**WAF**）是一种设备或软件，负责检查数据包'
- en: sent to a web server in order to identify and block those that might be malicious,
    usually based on signatures or regular expressions.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 发送到 Web 服务器，以识别并阻止那些可能是恶意的请求，通常基于签名或正则表达式进行判断。
- en: We can end up dealing with a lot of problems in our penetration test if an undetected
    WAF blocks our requests or bans our IP address. When performing a penetration
    test, the reconnaissance phase must include the detection and identification of
    a WAF, **intrusion detection system** (**IDS**), or an **intrusion prevention
    system** (**IPS**). This is required in order to take the necessary measures to
    prevent being blocked or banned by these protection devices.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未检测到 WAF 阻止我们的请求或封禁我们的 IP 地址，我们可能会在渗透测试中遇到许多问题。在进行渗透测试时，侦察阶段必须包括 WAF、**入侵检测系统**（**IDS**）或**入侵防御系统**（**IPS**）的检测和识别。这样才能采取必要的措施，避免被这些保护设备封锁或封禁。
- en: In this recipe, we will use different methods, along with the tools included
    in Kali Linux, to detect and identify the presence of a web application firewall
    between our target and us.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用不同的方法以及 Kali Linux 中的工具，来检测和识别目标与我们之间是否存在 Web 应用防火墙。
- en: How to do it...
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'There are different ways of detecting if an application is protected by a WAF
    or IDS; being blocked and/or blacklisted after launching an attack is the worst
    of all, so we will use Nmap and `wafw00f` to identify whether our target is behind
    a WAF before going all in:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 检测应用程序是否受到 WAF 或 IDS 保护的方法有很多种；发起攻击后被阻止和/或列入黑名单是最糟糕的情况，因此我们将使用 Nmap 和 `wafw00f`
    在全力进攻之前，识别我们的目标是否被 WAF 保护：
- en: 'Nmap includes a couple of scripts to test for the presence of a WAF in all
    of the detected HTTP ports. Let''s try some on our vulnerable `vm_1`:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nmap 包含一些脚本，用于测试所有检测到的 HTTP 端口中是否存在 WAF。我们可以在我们易受攻击的 `vm_1` 上尝试一下：
- en: '[PRE7]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](assets/ba154cdd-7ee8-4e60-8abd-9ccda31b2a82.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ba154cdd-7ee8-4e60-8abd-9ccda31b2a82.png)'
- en: It seems like we don't have a WAF protecting this server
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我们没有 WAF 保护这个服务器
- en: 'Now, let''s try the same command on a server that actually has a firewall protecting
    it. Here, we will use `example.com` as a made-up name; however, you may try it
    over any protected server:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们在一个实际受到防火墙保护的服务器上尝试相同的命令。这里，我们将使用 `example.com` 作为虚构名称；不过，您也可以在任何受保护的服务器上尝试：
- en: '[PRE8]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](assets/028f15ce-b1ca-419c-9fe4-685688d3bc0a.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/028f15ce-b1ca-419c-9fe4-685688d3bc0a.png)'
- en: 'There is another script in Nmap that can help us to identify the WAF being
    used more precisely. The script is `http-waf-fingerprint`:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nmap 还有一个脚本，可以帮助我们更精确地识别正在使用的 WAF。这个脚本是 `http-waf-fingerprint`：
- en: '[PRE9]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Another tool that Kali Linux includes to help us in detecting and identifying
    a WAF is `wafw00f`. Suppose `www.example.com` is a WAF-protected site:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kali Linux 中还有一个工具可以帮助我们检测和识别 WAF，那就是 `wafw00f`。假设 `www.example.com` 是一个由 WAF
    保护的网站：
- en: '[PRE10]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](assets/10c26fbe-00cd-4254-a927-05c5f19054e2.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/10c26fbe-00cd-4254-a927-05c5f19054e2.png)'
- en: How it works...
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: WAF detection works by sending specific requests to servers and then analyzing
    the response; for example, in the case of `http-waf-detect`, it sends some basic
    malicious packets and compares the responses while looking for an indicator that
    a packet was blocked, refused, or detected. The same occurs with `http-waf-fingerprint`,
    but this script also tries to interpret that response and classify it according
    to known patterns of various IDSs and WAFs. The same applies to `wafw00f`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: WAF 检测通过向服务器发送特定请求并分析响应来工作；例如，在 `http-waf-detect` 的情况下，它会发送一些基本的恶意数据包，并比较响应，寻找被阻止、拒绝或检测到的迹象。`http-waf-fingerprint`
    也会做同样的事情，但这个脚本还会尝试解析响应，并根据已知的 IDS 和 WAF 模式对其进行分类。`wafw00f` 也是如此。
- en: Identifying HTTPS encryption parameters
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别 HTTPS 加密参数
- en: We are, at a certain level, used to assuming that when a connection uses HTTPS
    with SSL or TLS encryption, it is secured and any attacker that intercepts it
    will only receive a series of meaningless numbers. Well, this may not be absolutely
    true; the HTTPS servers need to be correctly configured to provide a strong layer
    of encryption and to protect users from **man-in-the-middle** (**MITM**) attacks
    or cryptanalysis. A number of vulnerabilities in the implementation and design
    of the SSL protocol have been discovered and its successor, TLS, has also been
    found to be vulnerable under certain configurations, thus making the testing of
    secure connections mandatory in any web application penetration test.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在某种程度上，我们习惯于认为，当一个连接使用HTTPS并且采用SSL或TLS加密时，它是安全的，任何拦截该连接的攻击者也只会得到一系列无意义的数字。嗯，这可能并不完全正确；HTTPS服务器需要正确配置，以提供强大的加密层并保护用户免受**中间人攻击**（**MITM**）或密码分析的威胁。已经发现SSL协议在实现和设计中的一些漏洞，它的继任者TLS在某些配置下也被发现存在漏洞，因此在任何Web应用渗透测试中，测试安全连接是必须的。
- en: In this recipe, we will use tools such as Nmap, SSLScan, and TestSSL to analyze
    the configuration (from the client's perspective) of the server in terms of its
    secure communication.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用Nmap、SSLScan和TestSSL等工具，从客户端的角度分析服务器在安全通信方面的配置。
- en: Getting ready
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'One of the tools we will use in this recipe, TestSSL, is not installed by default
    in Kali Linux but is available in its software repository. We need to configure
    our Kali VM to use a NAT network adapter to allow it internet access, and execute
    the following commands in a terminal:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程中我们将使用的工具之一，TestSSL，Kali Linux默认没有安装，但可以在其软件仓库中找到。我们需要配置我们的Kali虚拟机使用NAT网络适配器，以便它能够访问互联网，并在终端中执行以下命令：
- en: '[PRE11]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: After installing TestSSL, change the network adapter back to host-only so you
    can communicate with the vulnerable virtual machine.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 安装TestSSL后，将网络适配器切换回仅主机模式，以便与易受攻击的虚拟机进行通信。
- en: How to do it...
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'According to the scans we did in previous recipes, `vm_1` has an HTTPS service
    running on port `443`; let''s see how secure it is:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在之前教程中的扫描结果，`vm_1`在端口`443`上运行HTTPS服务；让我们看看它有多安全：
- en: 'To query the protocols and ciphers supported by an HTTPS site with Nmap, we
    need to scan the HTTPS ports and use the script `ssl-enum-ciphers`:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查询一个HTTPS站点支持的协议和密码套件，我们需要扫描HTTPS端口并使用`ssl-enum-ciphers`脚本：
- en: '[PRE12]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](assets/3fc1299a-3ceb-431c-9acd-c5605148c80f.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3fc1299a-3ceb-431c-9acd-c5605148c80f.png)'
- en: 'SSLScan is a command-line tool dedicated to evaluating the SSL/TLS configuration
    of servers. To use it, we only need to add the server''s IP address or hostname
    (`sslscan 192.168.56.11`):'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SSLScan是一个命令行工具，专门用于评估服务器的SSL/TLS配置。使用它时，我们只需要添加服务器的IP地址或主机名（`sslscan 192.168.56.11`）：
- en: '![](assets/a205d5c2-26b8-4b2d-b9c8-aa17cbb7cd6c.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a205d5c2-26b8-4b2d-b9c8-aa17cbb7cd6c.png)'
- en: 'TestSSL shows a more detailed input than Nmap or SSLScan; its basic use only
    requires us to append the target to the command in the command line. It also allows
    for exporting output to multiple formats, such as CSV, JSON, or HTML (`testssl
    192.168.56.11`):'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: TestSSL显示比Nmap或SSLScan更详细的输入；它的基本使用只需要我们在命令行中将目标附加到命令后即可。它还允许将输出导出为多种格式，如CSV、JSON或HTML（`testssl
    192.168.56.11`）：
- en: '![](assets/dc2b26dd-9e2b-437f-ba32-42fc9969dc2a.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dc2b26dd-9e2b-437f-ba32-42fc9969dc2a.png)'
- en: How it works...
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Nmap, SSLScan, and TestSSL work by making multiple connections to the target
    HTTPS server by trying different cipher suites and client configurations to test
    what it accepts.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap、SSLScan和TestSSL通过对目标HTTPS服务器进行多次连接，尝试不同的密码套件和客户端配置来测试它接受哪些内容。
- en: 'In the results shown by all three tools, we can see some issues that can put
    the encrypted communication:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有三种工具显示的结果中，我们可以看到一些可能影响加密通信的问题：
- en: Use of the SSLv3\. SSL protocol has been deprecated since 2015 and it has inherent
    vulnerabilities that make it prone to multiple attacks, such as Sweet32 ([https://sweet32.info/](https://sweet32.info/)),
    and POODLE ([https://www.openssl.org/~bodo/ssl-poodle.pdf](https://www.openssl.org/~bodo/ssl-poodle.pdf)).
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SSLv3。自2015年以来，SSL协议已被弃用，它具有固有的漏洞，使其容易受到多种攻击，例如Sweet32（[https://sweet32.info/](https://sweet32.info/)）和POODLE（[https://www.openssl.org/~bodo/ssl-poodle.pdf](https://www.openssl.org/~bodo/ssl-poodle.pdf)）。
- en: Use of RC4 and DES ciphers and SHA and MD5 hashes. RC4 and DES encryption algorithms
    are now considered cryptographically weak, as are the SHA and MD5 hashing algorithms.
    This is due to the improvement on processing power of modern computers and the
    fact that those algorithms can be broken in a realistic amount of time with such
    processing power.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 RC4 和 DES 密码套件以及 SHA 和 MD5 哈希。RC4 和 DES 加密算法现在被认为是加密学上脆弱的，SHA 和 MD5 哈希算法也是如此。这是由于现代计算机处理能力的提高，以及这些算法可以在合理的时间内被突破的事实。
- en: Use of TLS 1.0\. TLS is the successor to SSL and its current version is 1.2\.
    While TLS 1.1 is still considered acceptable, allowing TLS 1.0 in a server is
    considered bad practice or a security concern.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 TLS 1.0。TLS 是 SSL 的继任者，当前版本是 1.2。虽然 TLS 1.1 仍然被认为是可以接受的，但在服务器中允许 TLS 1.0
    被认为是不好的做法或安全隐患。
- en: The certificate is self-signed, uses a weak signature algorithm (SHA1), and
    the RSA key is not strong enough (1,024 bits).
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书是自签名的，使用了较弱的签名算法（SHA1），并且 RSA 密钥不够强大（1024 位）。
- en: When a browser connects to a server using HTTPS, they exchange information on
    what ciphers the browser can use and which of those the server supports, and then
    they agree on using the higher complexity common to both of them. If an MITM attack
    is performed against a poorly configured HTTPS server, the attacker can trick
    the server by saying that the client only supports the weakest cipher suite, say
    56 bits DES over SSLv2, and then the communication intercepted by the attacker
    will be encrypted with an algorithm that may be broken in a few days or hours
    with a modern computer.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 当浏览器通过HTTPS连接到服务器时，它们会交换有关浏览器可以使用哪些密码套件以及服务器支持哪些密码套件的信息，然后它们会达成协议，使用两者共同支持的复杂性更高的密码套件。如果对一个配置不当的HTTPS服务器进行中间人攻击（MITM），攻击者可以通过声称客户端仅支持最弱的密码套件（比如通过
    SSLv2 使用 56 位的 DES）来欺骗服务器，然后攻击者拦截的通信将使用可能在几天或几小时内就能被现代计算机破解的算法进行加密。
- en: See also
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: 'The tools shown here are not the only ones that can retrieve cipher information
    from SSL/TLS connections. There is another tool included in Kali Linux called
    SSLyze that could be used as an alternative and may sometimes give complimentary
    results to our tests:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示的工具并不是唯一可以从 SSL/TLS 连接中获取密码信息的工具。Kali Linux 中还有一个名为 SSLyze 的工具，作为替代工具，它有时能够提供对我们测试的补充结果：
- en: '[PRE13]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'SSL/TLS information can also be obtained through OpenSSL commands:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: SSL/TLS 信息也可以通过 OpenSSL 命令获取：
- en: '[PRE14]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Using the browser's developer tools to analyze and alter basic behavior
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用浏览器的开发者工具分析和修改基本行为
- en: Firebug is a browser add-on that allows us to analyze the inner components of
    a web page, such as table elements, CSS classes, and frames. It also has the ability
    to show us DOM objects, error codes, and request-response communication between
    the browser and server.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug 是一个浏览器插件，允许我们分析网页的内部组件，如表格元素、CSS 类和框架。它还可以显示 DOM 对象、错误代码以及浏览器与服务器之间的请求-响应通信。
- en: In the previous recipe, we saw how to look into a web page's HTML source code
    and found a hidden input field that established some default values for the maximum
    size of a file. In this recipe, we will see how to use the browser's debugging
    extensions, in this particular case, Firebug for Firefox, or OWASP Mantra.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们看到如何查看网页的HTML源代码，并找到了一个隐藏的输入字段，该字段为文件的最大大小设置了一些默认值。在本示例中，我们将看到如何使用浏览器的调试扩展工具，具体来说是
    Firefox 的 Firebug 或 OWASP Mantra。
- en: How to do it...
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'With `vm_1` running, go to your Kali VM and browse to `http://192.168.56.11/WackoPicko`:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行`vm_1`的情况下，前往你的 Kali 虚拟机，浏览到`http://192.168.56.11/WackoPicko`：
- en: 'Right-click on Check this file option and then select Inspect Element:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击“检查此文件”选项，然后选择“检查元素”：
- en: '![](assets/d8fb1761-bea6-4a32-ab8b-2b5af7411a0a.png)A browsers developer tools
    can also be triggered using *F12*, or *Ctrl* + *Shift* + *C*.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/d8fb1761-bea6-4a32-ab8b-2b5af7411a0a.png)浏览器的开发者工具也可以通过按 *F12*，或
    *Ctrl* + *Shift* + *C* 来启动。'
- en: 'There is a `type="hidden"` parameter on the first input of the form; double-click
    on `hidden` to select it:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表单的第一个输入框中有一个`type="hidden"`参数；双击`hidden`以选择它：
- en: '![](assets/f0092442-a08d-42a9-bb99-296423384988.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f0092442-a08d-42a9-bb99-296423384988.png)'
- en: Replace `hidden` with `text`, or delete the whole property `type="hidden"` and
    hit *Enter*.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`hidden`替换为`text`，或删除整个属性`type="hidden"`，然后按 *Enter*。
- en: Now, double-click on the parameter value of `3000`.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，双击`3000`的参数值。
- en: 'Replace that value with `500000`:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将该值替换为`500000`：
- en: '![](assets/2cb8088d-fbe6-4d47-9bdf-8ef2b7ec3674.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2cb8088d-fbe6-4d47-9bdf-8ef2b7ec3674.png)'
- en: Now we see a new textbox on the page with `500000` as the value. We have just
    changed the file size limit and added a form field to change it.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们在页面上看到一个新的文本框，值为 `500000`。我们刚刚更改了文件大小限制，并添加了一个表单字段来修改它。
- en: How it works...
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Once a web page is received by the browser, all its elements can be modified
    to alter the way the browser interprets it. If the page is reloaded, the version
    generated by the server
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦网页被浏览器接收，所有元素都可以被修改，以改变浏览器对页面的解释。如果页面被重新加载，服务器生成的版本
- en: is shown again.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 再次显示。
- en: Developer Tools allow us to modify almost every aspect of how the page is shown
    in the browser; so, if there is control established client-side, we can manipulate
    it with this tool.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者工具允许我们修改页面在浏览器中显示的几乎每个方面；因此，如果页面上有客户端控制，我们可以通过这个工具进行操作。
- en: There's more...
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'A browser''s developer tools are not only to unhide input or change values;
    it also has some other very useful tools:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器的开发者工具不仅仅是用来隐藏输入或更改值；它还包含其他一些非常有用的工具：
- en: Inspector is the tab we just used. It presents the HTML source in a hierarchical
    way, thus allowing us to modify its contents.
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查器是我们刚刚使用的面板。它以层级方式展示 HTML 源代码，从而使我们可以修改其内容。
- en: The Console tab shows errors, warnings, and some other messages generated
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制台面板显示错误、警告以及其他生成的消息
- en: when loading the page.
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 加载页面时。
- en: Within Debugger, we can see the full HTML source, set breakpoints that will
    interrupt the page load when the process reaches them, and check and modify variable
    values when running scripts.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在调试器中，我们可以看到完整的 HTML 源代码，设置断点，当页面加载到达断点时会暂停，并检查和修改运行脚本时的变量值。
- en: The Style Editor tab is used to view and modify the CSS styles used by the page.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 样式编辑器面板用于查看和修改页面使用的 CSS 样式。
- en: In the Performance tab, we can calculate stats about the time and resources
    used by dynamic and static elements loaded on the page. From a developer's perspective,
    this is useful for detecting bottlenecks and excessive use of computing power
    in client-side code.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在性能面板中，我们可以计算页面上加载的动态和静态元素所使用的时间和资源。从开发者的角度来看，这对于检测瓶颈和客户端代码中过度使用计算资源非常有用。
- en: Memory can be used to take snapshots of the process's memory; this is useful
    if we want to look for sensitive information stored in memory.
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存面板可用于捕捉进程内存的快照；这在我们想要查找存储在内存中的敏感信息时非常有用。
- en: Network displays the requests made to the server and its responses, their types,
    size, response time, and its order in a timeline.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络面板显示了向服务器发出的请求及其响应，包括请求类型、大小、响应时间以及在时间轴中的顺序。
- en: Storage shows the cookies and other client-side storage options and makes it
    possible to delete them or change their values.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储面板显示了浏览器的 cookies 和其他客户端存储选项，并可以删除它们或修改其值。
- en: 'Other tabs that can be enabled in the tools settings are:'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在工具设置中启用的其他选项卡包括：
- en: DOM
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DOM
- en: Shader Editor
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 着色器编辑器
- en: Canvas
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Canvas
- en: Web Audio
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 音频
- en: Scratchpad
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scratchpad
- en: Obtaining and modifying cookies
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取和修改 cookies
- en: Cookies are small pieces of information sent by a web server to the client (browser)
    to store some information locally, related to that specific user. In modern web
    applications, cookies are used to store user-specific data, such as color theme
    configuration, object arrangement preferences, previous activity, and (more importantly
    for us) the session identifiers.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: Cookies 是由网页服务器发送到客户端（浏览器）的小段信息，用于在本地存储与特定用户相关的一些信息。在现代 web 应用中，cookies 用于存储用户特定的数据，如颜色主题配置、对象排列偏好、之前的活动以及（对我们来说更重要的是）会话标识符。
- en: In this recipe, we will use the browser's tools to see the cookies' values,
    how they are stored, and how to modify them.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将使用浏览器的工具查看 cookies 的值、它们是如何存储的，以及如何修改它们。
- en: Getting ready
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Our `vm_1` needs to be running. `192.168.56.11` will be used as the IP address
    for that machine and we will use Firefox as the web browser.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 `vm_1` 需要处于运行状态。`192.168.56.11` 将作为该机器的 IP 地址，我们将使用 Firefox 作为网页浏览器。
- en: The Storage tab in Developer Tools may not be enabled by default in Firefox;
    to enable it, we open developer tools (*F12* in the browser) and go to the Toolbox options
    (the gear icon on the right). Under Default Developer Tools, we tick the Storage
    box.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Firefox 中，开发者工具中的存储面板可能默认没有启用；要启用它，我们打开开发者工具（浏览器中按 *F12*），然后进入工具箱选项（右上角的齿轮图标）。在默认开发者工具下，勾选“存储”选项框。
- en: How to do it...
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To view and edit the value of cookies, we can use the browser''s developer
    tools or the cookies manager and the plugin that we installed in [Chapter 1](b5aed3bb-313a-47ca-bc62-af4d938f7a3f.xhtml),
    *Setting Up Kali Linux and the Testing Lab*. Let''s try both methods:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看和编辑 cookies 的值，我们可以使用浏览器的开发者工具、cookies 管理器以及我们在[第 1 章](b5aed3bb-313a-47ca-bc62-af4d938f7a3f.xhtml)中安装的插件，*设置
    Kali Linux 和测试实验室*。我们来尝试这两种方法：
- en: Browse to `http://192.168.56.11/WackoPicko`.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到 `http://192.168.56.11/WackoPicko`。
- en: 'Open Developer Tools and go to Storage | Cookies:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开开发者工具，进入存储 | Cookies：
- en: '![](assets/62d28d22-5ba5-46c0-9e8a-d733b42e2f71.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/62d28d22-5ba5-46c0-9e8a-d733b42e2f71.png)'
- en: We can change any of the cookie's values by double-clicking on them and entering
    a new one.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过双击任何 cookie 的值并输入一个新值来更改它。
- en: 'Now, we can also use a plugin to check and edit cookies. On Firefox''s top
    bar, click on the Cookies Manager button:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们还可以使用插件来检查和编辑 cookies。在 Firefox 的顶部工具栏，点击 Cookies 管理器按钮：
- en: '![](assets/48853926-df5e-45a9-9e9a-90def33f17fe.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/48853926-df5e-45a9-9e9a-90def33f17fe.png)'
- en: In the preceding image, we can see all the cookies stored at that time, and
    the sites they belong to, with this add-on. We can also modify their values, delete
    them, and add new ones.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图中，我们可以看到当时存储的所有 cookies，以及它们所属的网站，使用这个插件我们还可以修改它们的值、删除它们，或者添加新的 cookies。
- en: Select `PHPSESSID` from `192.168.56.11` and click on Edit.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `192.168.56.11` 选择 `PHPSESSID`，然后点击编辑。
- en: 'Change the Http Only value to Yes:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Http Only 的值更改为是：
- en: '![](assets/9a433548-2350-4413-8c80-5250b5a4b525.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9a433548-2350-4413-8c80-5250b5a4b525.png)'
- en: The parameter we just changed (Http Only) tells the browser that this cookie
    is not allowed to be accessed by a client-side script.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚更改的参数（Http Only）告诉浏览器，这个 cookie 不允许被客户端脚本访问。
- en: How it works...
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Cookies Manager is a browser add-on that allows us to view, modify, or delete
    existing cookies and to add new ones. As some applications rely on values stored
    in these cookies, an attacker can use them to inject malicious patterns that might
    alter the behavior of the page or to provide fake information in order to gain
    a higher level of privilege.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: Cookies 管理器是一个浏览器插件，允许我们查看、修改或删除现有的 cookies，也可以添加新的 cookies。由于某些应用程序依赖于这些 cookies
    中存储的值，攻击者可以利用它们注入恶意模式，可能会改变页面的行为，或者提供虚假的信息以获得更高的权限。
- en: Also, in modern web applications, session cookies are commonly used and often
    are the only source of user identification once the login is done. This leads
    to the possibility of impersonating a valid user by replacing the cookie's value
    for the user of an already active session.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在现代 Web 应用程序中，通常会使用会话 cookie，并且一旦登录完成，它们往往是唯一的用户标识来源。这就导致了通过替换一个已经活跃会话用户的
    cookie 值来冒充有效用户的可能性。
- en: There's more...
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'When implementing penetration testing on web applications, we should pay attention
    to certain characteristics in the cookies to verify that they are secure:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在对 Web 应用程序进行渗透测试时，我们应关注 cookies 中的某些特征，以确保它们是安全的：
- en: 'Http Only: If a cookie has this flag set, then it will not be accessible through
    scripting code; this means that the cookie values can only be altered from the
    server. We can still use the browser tools or a plugin to change them, but not
    a script within the page.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Http Only：如果一个 cookie 设置了此标志，则不能通过脚本代码访问；这意味着 cookie 的值只能从服务器端修改。我们仍然可以使用浏览器工具或插件来更改它们，但不能通过页面中的脚本来修改。
- en: 'Secure: The cookie won''t be transferred through unencrypted channels; if a
    site uses HTTPS and this flag is set in the cookie, the browser won''t take or
    send the cookie when the requests are done through HTTP.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全性：该 cookie 不会通过未加密的通道传输；如果一个站点使用 HTTPS 并且在 cookie 中设置了此标志，则浏览器在通过 HTTP 发起请求时不会获取或发送该
    cookie。
- en: 'Expires: If the expiration date is set to the future, it means that the cookie
    is stored in a local file and will be kept even after the browser closes. An attacker
    could get this cookie directly from the file and perhaps steal a valid user''s
    session.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过期时间：如果过期日期设置为未来，这意味着该 cookie 存储在本地文件中，即使浏览器关闭后仍会保留。攻击者可以直接从文件中获取该 cookie，或许能够窃取有效用户的会话。
- en: Taking advantage of robots.txt
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用 robots.txt
- en: One step further into reconnaissance, we need to figure out if there is any
    page or directory in the site that is not linked to what is shown to the common
    user, for example, a login page to the intranet or to the **Content Management
    Systems** (**CMS**) administration. Finding a site similar to this will expand
    our testing surface considerably and give us some important clues about the application
    and its infrastructure.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 更进一步进行侦察，我们需要找出网站上是否有任何页面或目录并未链接到普通用户所看到的内容，例如，内联网或**内容管理系统**（**CMS**）管理页面的登录页。发现类似这样的网站将大大扩展我们的测试面，并为我们提供关于应用程序及其基础设施的重要线索。
- en: In this recipe, we will use the `robots.txt` file to discover some files and
    directories that may not be linked to anywhere in the main application.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个步骤中，我们将使用`robots.txt`文件来发现一些可能未在主应用程序中链接的文件和目录。
- en: How to do it...
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To illustrate how a penetration tester can take advantage of `robots.txt`,
    we will use `vicnum`, a vulnerable web application in `vm_1`, which contains three
    number and word guessing games. We will use information obtained through `robots.txt`
    to increase our chances of winning those games:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明渗透测试人员如何利用`robots.txt`，我们将使用`vm_1`中的易受攻击的Web应用程序`vicnum`，它包含三个数字和单词猜谜游戏。我们将利用通过`robots.txt`获得的信息，增加我们在这些游戏中获胜的机会：
- en: Browse to `http://192.168.56.11/vicnum/`.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到`http://192.168.56.11/vicnum/`。
- en: 'Now, we add `robots.txt` to the URL and we will see the following:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将`robots.txt`添加到网址中，我们将看到以下内容：
- en: '![](assets/fe6f2c57-161e-4c1f-a4fc-6a29c2affcdb.png)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fe6f2c57-161e-4c1f-a4fc-6a29c2affcdb.png)'
- en: This file tells search engines that the indexing of the directories `jotto`
    and `cgi-bin` is not allowed for every browser (User-agent). However, this doesn't
    mean that we cannot browse them.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件告诉搜索引擎，`jotto`和`cgi-bin`目录的索引对所有浏览器（用户代理）都是不允许的。然而，这并不意味着我们不能浏览它们。
- en: 'Let''s browse to `http://192.168.56.11/vicnum/cgi-bin/`:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们浏览到`http://192.168.56.11/vicnum/cgi-bin/`：
- en: '![](assets/2c4674ad-f39d-4e67-ac35-b0a76457d4d5.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2c4674ad-f39d-4e67-ac35-b0a76457d4d5.png)'
- en: We can click and navigate directly to any of the Perl scripts (.pl files) in
    this directory.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以点击并直接导航到此目录中的任何Perl脚本（.pl文件）。
- en: Let's browse to `http://192.168.56.11/vicnum/jotto/`.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们浏览到`http://192.168.56.11/vicnum/jotto/`。
- en: Click on the file named `jotto`. You will see something similar to the
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击名为`jotto`的文件。你将看到类似于下面的内容：
- en: 'following screenshot:'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下是截图：
- en: '![](assets/32a113c9-4f11-4665-a2bb-b673be5b0001.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/32a113c9-4f11-4665-a2bb-b673be5b0001.png)'
- en: '`jotto` is a game about guessing five-character words; could this be the list
    of possible answers? Play the game using words in that list as answers. We have
    already hacked the game:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '`jotto`是一个猜测五个字母单词的游戏；这可能是一个可能答案的列表吗？使用列表中的单词作为答案玩这个游戏。我们已经破解了这个游戏：'
- en: '![](assets/0fe8ecc5-6fcf-4fdf-9648-96bae2076703.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0fe8ecc5-6fcf-4fdf-9648-96bae2076703.png)'
- en: How it works...
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何工作...
- en: '`robots.txt` is a file used by web servers to tell search engines about the
    directories or files that they should index and what they are not allowed to look
    into. Taking the perspective of an attacker, this tells us whether there is a
    directory in the server that is accessible but hidden to the public using what
    is called **security through obscurity** (that is, assuming that users won''t
    discover the existence of something if they are not told about it).'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`robots.txt`是一个由Web服务器使用的文件，用于告诉搜索引擎哪些目录或文件应该被索引，哪些是不允许被查看的。从攻击者的角度来看，这告诉我们服务器中是否有一个目录是可以访问的，但对公众隐藏的，这种方法被称为**安全通过模糊**（即假设用户如果没有被告知某件事的存在，就不会发现它）。'
