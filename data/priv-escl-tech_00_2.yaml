- en: '*Chapter 1*: Introduction to Privilege Escalation'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第1章*: 权限提升介绍'
- en: Privilege escalation is a vital element of the attack life cycle and is a major
    determinant in the overall success of a penetration test.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 权限提升是攻击生命周期中的关键环节，也是渗透测试成功与否的主要决定因素。
- en: The importance of privilege escalation in the penetration testing process cannot
    be overstated or overlooked. Developing your privilege escalation skills will
    mark you out as a good penetration tester. The ability to enumerate information
    from a target system and utilize this information to identify potential misconfigurations
    and vulnerabilities that can be exploited to elevate privileges is an essential
    skill set for any penetration tester.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试过程中，权限提升的重要性不可过分强调或忽视。提升你的权限提升技能会让你成为一名优秀的渗透测试员。能够枚举目标系统的信息，并利用这些信息识别潜在的配置错误和漏洞，从而提升权限，这是每个渗透测试员的基本技能。
- en: This chapter aims to give you a clearer picture and understanding of the privilege
    escalation process and will act as a formal introduction to the various types
    of privilege escalation techniques, and how the process differs between Windows
    and Linux systems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章旨在让你更清晰地了解权限提升过程，并作为对各种权限提升技术的正式介绍，同时也会介绍Windows和Linux系统之间在权限提升过程中的差异。
- en: To fully understand and leverage the various privilege escalation tools and
    techniques, you first need to understand how permissions and privileges are implemented
    on various operating systems and how these differences in design and implementation
    affect the privilege escalation process as a whole.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 要全面理解并利用各种权限提升工具和技术，首先需要了解在不同操作系统中权限和特权的实现方式，以及这些设计和实现差异如何整体影响权限提升过程。
- en: By the end of this chapter, you will have a clear understanding of what privilege
    escalation is, and you will also understand how permissions are implemented on
    Windows and Linux systems and get a brief introduction to the various privilege
    escalation techniques that we will be exploring in depth in the upcoming chapters.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将清楚地了解什么是权限提升，同时你也会理解Windows和Linux系统中权限的实现方式，并简要介绍我们将在接下来的章节中深入探讨的各种权限提升技术。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主题：
- en: What is privilege escalation?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是权限提升？
- en: How permissions and privileges are assigned
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权限和特权是如何分配的
- en: Understanding the differences between privilege escalation on Windows and Linux
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解Windows与Linux中权限提升的差异
- en: Exploring the types of privilege escalation attack
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索权限提升攻击的类型
- en: What is privilege escalation?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是权限提升？
- en: '**Privilege escalation** is the process of exploiting vulnerabilities or misconfigurations
    in systems to elevate privileges from one user to another, typically to a user
    with administrative or *root* access on a system. Successful privilege escalation
    allows attackers to increase their control over a system or group of systems that
    belong to a domain, giving them the ability to make administrative changes, exfiltrate
    data, modify or damage the operating system, and maintain access through persistence,
    such as registry edits or cron jobs.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**权限提升**是利用系统中的漏洞或配置错误，将用户权限从一个级别提升到另一个级别的过程，通常是提升到具有管理员或*root*访问权限的用户。成功的权限提升使攻击者能够增强对系统或属于某个域的多个系统的控制，从而能够进行管理性更改、窃取数据、修改或破坏操作系统，并通过持久化手段（如注册表编辑或定时任务）保持访问。'
- en: From a penetration tester's perspective, privilege escalation is the next logical
    step after the successful exploitation of a system and is typically performed
    by bypassing or exploiting authentication and authorization systems, whose purpose
    is to segregate user accounts based on their permissions and role.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 从渗透测试员的角度来看，权限提升是在成功利用系统漏洞后，进行下一步操作的逻辑步骤，通常通过绕过或利用认证与授权系统来执行，这些系统的目的是根据用户的权限和角色隔离用户账户。
- en: A typical approach would be to use an initial access or foothold on a system
    to gain access to resources and functionality that is beyond what the current
    user account permissions offer. This process is commonly referred to as getting
    **root** privileges on a system.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一种典型的方法是利用系统的初始访问权限或立足点，获取超出当前用户账户权限范围的资源和功能。这个过程通常被称为获得**root**权限。
- en: Before we can get started with the various privilege escalation techniques,
    we need to understand how user accounts and permissions are implemented in modern
    operating systems.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始各种权限提升技术之前，我们需要了解现代操作系统是如何实现用户帐户和权限的。
- en: How permissions and privileges are assigned
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权限和特权的分配方式
- en: To better understand how to elevate **privileges**, we need to first understand
    how operating systems are designed in relation to user accounts and privilege.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解如何提升**特权**，我们需要首先了解操作系统是如何在用户帐户和特权方面进行设计的。
- en: Operating systems' authorizations are designed to handle multiple users with
    multiple roles and permissions. This segregation of roles is the primary factor
    behind the various user account implementation philosophies that are implemented
    in operating systems today.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统的授权设计旨在处理多个具有不同角色和权限的用户。角色的这种隔离是现代操作系统中实现不同用户帐户哲学的主要因素。
- en: This abstraction of user roles and permissions on a system is set up and facilitated
    by a system called a **protection ring**, as demonstrated in *Figure 1.1*. This
    specifies limits and enforces the functionality of users on a system and their
    corresponding access to resources.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 系统上用户角色和权限的抽象由一个称为**保护环**的系统来设置和促成，如*图 1.1* 所示。它指定了用户在系统上的功能限制并强制执行他们相应的资源访问。
- en: 'As the name suggests, a protection ring is a hierarchical protection and segregation
    mechanism used to provide different levels of access to functionality and resources
    on a system. The various rings in the hierarchy represent layers of privilege
    within the operating system, as illustrated in the following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如名称所示，保护环是一种层级保护和隔离机制，用于提供系统上功能和资源的不同访问级别。等级保护环表示操作系统中的特权层次，如下图所示：
- en: '![Figure 1.1 – Protection ring'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.1 – 保护环'
- en: '](Images/B17389_01_001.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_01_001.jpg)'
- en: Figure 1.1 – Protection ring
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – 保护环
- en: 'The rings in the hierarchy illustrated in *Figure 1.1* are sorted and arranged
    from the most privileged (typically denoted by level 0) to the least privileged,
    where the least privileged is represented by the highest ring number. This segregation
    of privileges on a system leads to the adoption of two main roles, as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1.1* 中的等级保护环从最有特权的（通常表示为 0 级）到最少特权的按顺序排列，最少特权的表示为最高的环编号。系统上权限的这种隔离导致了两种主要角色的采用，如下所示：'
- en: '**Privileged access**: This is typically represented or assigned to the root
    or **administrator** account and provides complete access to all system commands
    and resources. The root or administrator account will typically have access to
    the following functionality:'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特权访问**：通常分配给根用户或**管理员**帐户，并提供对所有系统命令和资源的完全访问。根用户或管理员帐户通常具有以下功能：'
- en: 1\. The ability to install, uninstall, and modify system software or binaries
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1\. 安装、卸载和修改系统软件或二进制文件的能力
- en: 2\. The ability to add, modify, or remove users and user groups
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2\. 添加、修改或删除用户及用户组的能力
- en: 3\. The ability to create, access, modify, and delete any system or user data
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 3\. 创建、访问、修改和删除任何系统或用户数据的能力
- en: 4\. The ability to access and have control over all system hardware
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 4\. 访问和控制所有系统硬件的能力
- en: 5\. The ability to access network functionality and networking utilities
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 5\. 访问网络功能和网络工具的能力
- en: 6\. The ability to create, manage, and kill system and user processes
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 6\. 创建、管理和终止系统和用户进程的能力
- en: '**Unprivileged access**: This is typically represented or assigned to *non-root*
    or standard user accounts and is limited to a specific set of privileges that
    are designed and tailored for standard user access on a system. It limits the
    user functionality to basic tasks and access of user data on the system. Non-root
    accounts will commonly have the following functionality:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非特权访问**：通常赋予*非根用户*或标准用户帐户，权限有限，通常针对系统上标准用户访问的特定权限集进行设计和定制。它将用户的功能限制为基本任务以及对系统上用户数据的访问。非根用户帐户通常具有以下功能：'
- en: 1\. The ability to start and stop user processes and programs
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 1\. 启动和停止用户进程和程序的能力
- en: 2\. The ability to create, modify, and delete user data
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2\. 创建、修改和删除用户数据的能力
- en: 3\. The ability to have access to network functionality
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 3\. 访问网络功能的能力
- en: This segregation of permissions highlights the importance of privilege escalation
    for penetration testers or attackers as it offers total and unparalleled control
    over a system or, potentially, a group of systems if they can get "root" or administrative
    access on a system.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这种权限的隔离突显了权限提升对于渗透测试人员或攻击者的重要性，因为它提供了对系统的完全和无与伦比的控制，或者如果他们能够获得“root”或管理员访问权限，则可能控制一组系统。
- en: 'Given the nature of privilege escalation attacks in relation to user accounts
    and permissions, there are two main methods of performing privilege escalation
    that can be utilized by attackers based on their intentions and objectives, as
    follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 根据权限提升攻击与用户帐户和权限的关系，攻击者可以根据他们的意图和目标采用两种主要的权限提升方法，如下所示：
- en: Horizontal privilege escalation
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 水平权限提升
- en: Vertical privilege escalation
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 垂直权限提升
- en: We will take a closer look at what they are in the next section.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一节中更详细地探讨它们是什么。
- en: Horizontal privilege escalation
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 水平权限提升
- en: '**Horizontal privilege escalation** is the process of accessing the functionality
    or data of other user accounts on a system, as opposed to gaining access to accounts
    with administrative or root privileges. It primarily involves accessing or authorizing
    functionality on a system using accounts that are on the same user level of permissions,
    as opposed to user accounts that are higher up and that have more privileges and
    permissions.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**水平权限提升**是访问系统中其他用户帐户的功能或数据的过程，而不是获得具有管理员或root权限的帐户的访问权限。它主要涉及使用权限水平相同的帐户访问或授权系统中的功能，而不是访问权限更高、权限更多的用户帐户。'
- en: Attackers or penetration testers would typically perform this type of privilege
    escalation attack if they were interested in accessing unprivileged user account
    data or in harvesting user account credentials or password hashes.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者或渗透测试人员通常会执行这种类型的权限提升攻击，目的是访问没有权限的用户帐户数据，或窃取用户帐户凭证或密码哈希值。
- en: Scenario
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 场景
- en: 'The following screenshot illustrates a typical account setup on a computer,
    where we have two unprivileged users and one privileged user. In this case, the
    two unprivileged users are **John** and **Mike**, and the privileged user is **Collin**:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了计算机上典型的帐户设置，其中有两个没有权限的用户和一个有权限的用户。在这种情况下，两个没有权限的用户分别是**John**和**Mike**，有权限的用户是**Collin**：
- en: '![Figure 1.2 – Horizontal privilege escalation scenario'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.2 – 水平权限提升场景'
- en: '](Images/B17389_01_002.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_01_002.jpg)'
- en: Figure 1.2 – Horizontal privilege escalation scenario
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 水平权限提升场景
- en: In this scenario, John is attempting to perform a typical horizontal privilege
    escalation attack by escalating his user account privileges to the account privileges
    of Mike. Note that John and Mike are on the same horizontal privilege level.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个场景中，John 正在尝试执行典型的水平权限提升攻击，将他的用户帐户权限提升到 Mike 的帐户权限。请注意，John 和 Mike 处于相同的水平权限级别。
- en: '*Figure 1.2* clearly outlines the sole objective of horizontal privilege escalation,
    the objective being to elevate privileges to user accounts that are on the same
    horizontal level as the user account performing the attack.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1.2* 清晰地概述了水平权限提升的唯一目标，目标是将权限提升到与执行攻击的用户帐户处于同一水平的用户帐户。'
- en: Vertical privilege escalation
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 垂直权限提升
- en: '**Vertical privilege escalation** is the process of exploiting a vulnerability
    in an operating system to gain root or administrative access on a system. This
    method is usually preferred by attackers and penetration testers as it offers
    the biggest payout given the permissions and functionality, as they now have total
    access and control over the system(s).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**垂直权限提升**是利用操作系统中的漏洞来获取系统的root或管理员访问权限的过程。由于权限和功能的巨大回报，攻击者和渗透测试人员通常更偏向于这种方法，因为它们现在对系统拥有完全的访问和控制权限。'
- en: 'The following screenshot outlines a bottom-up approach to user account permissions
    and privileges, where the topmost account has the highest privileges, is the least
    accessible, and is typically assigned to system administrators. The lowest accounts
    are set up and configured to be used by standard users and services that require
    no administrative privileges as part of their daily tasks:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图概述了用户帐户权限和特权的自下而上的方法，其中最顶部的帐户具有最高的权限，最不容易访问，通常分配给系统管理员。最底层的帐户设置和配置为标准用户和无需管理员权限的服务使用，这些服务在日常任务中不需要管理员权限：
- en: '![Figure 1.3 – Vertical privilege escalation](Images/B17389_01_003.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 垂直特权提升](Images/B17389_01_003.jpg)'
- en: Figure 1.3 – Vertical privilege escalation
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – 垂直特权提升
- en: '*Figure 1.3* also illustrates a vertical approach to elevating privileges based
    on the user account and permissions for both Windows and Linux systems, the objective
    being to laterally move up the pecking order to the account with the highest privileges,
    therefore giving you complete access to the system.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1.3* 同样展示了一个基于用户账户和权限的垂直特权提升方法，适用于 Windows 和 Linux 系统，目标是横向提升到特权最高的账户，从而获得系统的完全访问权限。'
- en: Important note
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Vertical privilege escalation may not solely emanate from the exploitation of
    a vulnerability within an operating system or service. It is common to find misconfigured
    systems and services that may allow non-administrative user accounts to run commands
    or binaries with administrative permissions. We will take a look at the various
    privilege escalation techniques in the upcoming chapters.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 垂直特权提升可能不仅仅来源于操作系统或服务中的漏洞利用。常见的情况是系统和服务配置错误，可能允许非管理员用户账户以管理员权限运行命令或二进制文件。我们将在接下来的章节中探讨各种特权提升技术。
- en: Scenario
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 场景
- en: 'The following screenshot illustrates a typical account setup on a computer,
    where we have two unprivileged users and one privileged user. In this case, the
    two unprivileged users are **John** and **Mike**, and the privileged user is **Collin**:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了计算机上典型的账户设置，其中有两个非特权用户和一个特权用户。在这种情况下，两个非特权用户分别是**约翰**和**迈克**，而特权用户是**科林**：
- en: '![Figure 1.4 – Vertical privilege escalation scenario'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.4 – 垂直特权提升场景'
- en: '](Images/B17389_01_004.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_01_004.jpg)'
- en: Figure 1.4 – Vertical privilege escalation scenario
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – 垂直特权提升场景
- en: For this scenario, *Figure 1.4* illustrates a traditional vertical privilege
    escalation method where the user John is attempting to elevate privileges to the
    administrator account, which is Collin's account. If successful, John will get
    access to administrative privileges and will be able to access all user accounts
    and files, therefore giving him total access and control over the system. This
    scenario demonstrates the importance and potential impact of a successful vertical
    privilege escalation attack.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在此场景中，*图 1.4* 展示了一个传统的垂直特权提升方法，其中用户约翰试图将特权提升到管理员账户，即科林的账户。如果成功，约翰将获得管理员特权，并能够访问所有用户账户和文件，从而完全控制系统。此场景展示了成功的垂直特权提升攻击的重要性和潜在影响。
- en: Now that we have an understanding of the two main privilege escalation methods
    and how they are orchestrated, we can begin taking a look at the various differences
    between privilege escalation on Windows and Linux.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了两种主要的特权提升方法以及它们的运作方式，我们可以开始查看 Windows 和 Linux 上特权提升之间的各种区别。
- en: Understanding the differences between privilege escalation on Windows and Linux
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 Windows 和 Linux 上特权提升的区别
- en: Now that we have a general understanding of how user accounts and permissions
    are implemented and have looked at the two main methods of performing privilege
    escalation, we can begin taking a look at the differences between **Linux** and
    **Windows** in the context of privilege escalation attacks and at how their individual
    design and development philosophies affect the privilege escalation process.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对用户账户和权限的实现有了大致了解，并且查看了两种主要的特权提升方法，我们可以开始了解在特权提升攻击的背景下，**Linux** 和 **Windows**
    之间的差异，以及它们各自的设计和开发理念如何影响特权提升过程。
- en: This nuanced approach will give us clarity on the strengths and weaknesses of
    both operating systems and their corresponding kernels in relation to vulnerabilities
    and potential exploitation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这种细致的方法将帮助我们清晰地了解两个操作系统及其相应内核在漏洞和潜在利用方面的优缺点。
- en: 'The following table outlines common potential **attack vectors** for both operating
    systems and the services that can be exploited to elevate privileges:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格概述了两种操作系统及其服务中可以被利用来提升特权的常见潜在**攻击向量**：
- en: '![Table 1.1 – Common potential attack vectors'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![表 1.1 – 常见潜在攻击向量'
- en: '](Images/B17389_01_Table_1.1.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_01_Table_1.1.jpg)'
- en: Table 1.1 – Common potential attack vectors
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1.1 – 常见潜在攻击向量
- en: To fully understand the differences between the two operating systems in terms
    of potential vulnerabilities and attack vectors, we need to understand how they
    handle authentication and security as this will give us an idea of where the security
    pitfalls exist. It is important to note, however, that the security differences
    between Windows and Linux boil down to their unique design philosophy.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了全面理解这两种操作系统在潜在漏洞和攻击路径方面的差异，我们需要了解它们如何处理身份验证和安全性，因为这将帮助我们发现安全隐患。然而，值得注意的是，Windows
    和 Linux 之间的安全差异归结于它们独特的设计理念。
- en: Windows security
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows 安全
- en: Windows is a proprietary operating system that is owned and developed by the
    Microsoft Corporation and controls a majority of the PC market share at about
    93%, which means that most companies are likely to be running Windows clients
    for their end users and/or Windows Server deployments for their critical infrastructure.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 是一个由微软公司拥有和开发的专有操作系统，占据了大约 93% 的 PC 市场份额，这意味着大多数公司很可能在其最终用户设备上运行 Windows
    客户端，或者在其关键基础设施中部署 Windows Server。
- en: For this reason, Windows is more likely to be running on employee laptops and
    workstations as it has a much more **user-centered design** (**UCD**) and philosophy.
    In order to understand the privilege escalation process on Windows, we need to
    understand how Windows manages and maintains system security. In order to do this,
    we will need to take a closer look at various components that are responsible
    for managing and maintaining authentication and security on Windows.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Windows 更有可能运行在员工的笔记本电脑和工作站上，因为它具有更加**以用户为中心的设计**（**UCD**）和理念。为了理解 Windows
    上的特权提升过程，我们需要了解 Windows 如何管理和维护系统安全。为此，我们需要更详细地查看负责管理和维护 Windows 身份验证和安全性的各种组件。
- en: User authentication
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户身份验证
- en: Authentication is the process of verifying the identity of a user who is trying
    to access a system or system resource.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 身份验证是验证试图访问系统或系统资源的用户身份的过程。
- en: Authentication on most modern operating systems is typically enforced through
    a username and password combination; however, operating systems have begun implementing
    additional layers of authentication, in addition to implementing stronger encryption
    algorithms for user passwords.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现代操作系统中的身份验证通常是通过用户名和密码组合来强制执行的；然而，操作系统已开始实现附加的身份验证层，并且为用户密码实现更强大的加密算法。
- en: Passwords and password hashes are usually a target for penetration testers,
    and we will take a look at how to dump system passwords and hashes later in the
    book.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 密码和密码散列通常是渗透测试人员的目标，我们将在本书后面介绍如何提取系统密码和散列值。
- en: User authentication on Windows is handled by the **Windows Logon** (**Winlogon**)
    process and **Security Account Manager** (**SAM**). SAM is a database that is
    used to manage and store user accounts on Windows systems.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 上的用户身份验证由**Windows 登录**（**Winlogon**）进程和**安全账户管理器**（**SAM**）处理。SAM 是一个用于管理和存储
    Windows 系统上用户账户的数据库。
- en: Modern releases of Windows utilize the **New Technology LAN Manager 2** (**NTLM2**)
    encryption protocol for password hashing and encryption, which is significantly
    stronger than the **LAN Manager** (**LM**) encryption protocol present in older
    versions of Windows.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现代版本的 Windows 使用**新技术局域网管理器 2**（**NTLM2**）加密协议进行密码散列和加密，远远强于旧版本 Windows 中的**局域网管理器**（**LM**）加密协议。
- en: Authentication onto domains on Windows is typically facilitated by authentication
    protocols such as Kerberos.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 上的域身份验证通常通过诸如 Kerberos 等身份验证协议来实现。
- en: User identification
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户识别
- en: User identification is used to uniquely identify users on a system and is also
    used to establish a system of accountability, as actions performed on a system
    can be tracked down to the user who made or performed them. Understanding how
    identification works and is implemented on Windows is extremely useful in the
    privilege escalation process to identify users on a system, along with their roles
    and groups.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 用户识别用于唯一标识系统中的用户，并用于建立一个责任体系，因为在系统上执行的操作可以追溯到执行它们的用户。了解 Windows 上如何实现和运作用户识别，对于特权提升过程中的用户识别非常有用，可以帮助识别系统中的用户、他们的角色和组。
- en: 'The process of user identification on Windows utilizes a **security identifier**
    (**SID**) for identification. Each user and group has a unique SID that consists
    of the components outlined in the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 中，用户身份验证过程使用 **安全标识符**（**SID**）进行识别。每个用户和组都有一个唯一的 SID，该 SID 由以下截图中列出的组件组成：
- en: '![Figure 1.5 – Sample Windows SID'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.5 – 示例 Windows SID'
- en: '](Images/B17389_01_005.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_01_005.jpg)'
- en: Figure 1.5 – Sample Windows SID
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – 示例 Windows SID
- en: 'The different parameters from the preceding SID are discussed as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述 SID 的不同参数说明：
- en: '**SID String**: **S** indicates that it''s an SID string'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SID 字符串**: **S** 表示这是一个 SID 字符串'
- en: '**Revision**: Always set to 1; this refers to the structure revision number'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**修订版**: 始终设置为 1；这是指结构的修订号'
- en: '**Authority ID**: Specifies who created or granted the SID, as follows:'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限 ID**: 指明谁创建或授予了 SID，如下所示：'
- en: '- **Null**: 0'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **空值**: 0'
- en: '- **World authority**: 1'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **全局权限**: 1'
- en: '- **Local authority**: 2'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **本地权限**: 2'
- en: '- **Creator authority**: 3'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **创建者权限**: 3'
- en: '- **Non-unique authority**: 4'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **非唯一权限**: 4'
- en: '- **NT authority**: 5'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **NT 权限**: 5'
- en: '**Subauthority ID**/**actual ID**: Unique ID for the user, or comprises the
    domain identifier'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**子权限 ID**/**实际 ID**: 用户的唯一标识符，或者包含域标识符'
- en: '**RID**: This stands for **relative ID** and is used in reference to other
    accounts to distinguish one user from another. Windows will have the following
    unique RIDs assigned to specific users. It is important to be able to identify
    privileged users based on their SID, as follows:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RID**: 代表 **相对 ID**，用于与其他账户进行区分。Windows 将为特定用户分配以下唯一的 RID。能够根据 SID 识别特权用户非常重要，如下所示：'
- en: '- **Administrator**: 500'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **管理员**: 500'
- en: '- **Guest user**: 501'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **来宾用户**: 501'
- en: '- **Domain administrator**: 512'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **域管理员**: 512'
- en: '- **Domain computer**: 515'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- **域计算机**: 515'
- en: 'You can enumerate the SIDs on a Windows system by running the following command
    in **Command Prompt** (**CMD**):'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在 **命令提示符**（**CMD**）中运行以下命令来枚举 Windows 系统上的 SID：
- en: wmic useraccount get name,sid
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: wmic useraccount get name,sid
- en: 'This command will enumerate all user account SIDs on the system, as illustrated
    in the following screenshot. Pay close attention to the RIDs as they can be used
    to quickly identify administrator and guest accounts:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将枚举系统上所有用户账户的 SID，如下图所示。请特别注意 RID，因为它们可以用来快速识别管理员和来宾账户：
- en: '![Figure 1.6 – Enumerating Windows SIDs'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.6 – 枚举 Windows SIDs'
- en: '](Images/B17389_01_006.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_01_006.jpg)'
- en: Figure 1.6 – Enumerating Windows SIDs
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – 枚举 Windows SIDs
- en: As displayed in *Figure 1.6*, we can identify user roles based on their RID,
    regardless of the account username. In this particular case, we have an administrator
    and guest account set up and they can be identified by their RID.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如 *图 1.6* 所示，我们可以根据 RID 来识别用户角色，而无需关注账户用户名。在这个特定的例子中，我们设置了管理员和来宾账户，它们可以通过 RID
    被识别。
- en: Access tokens
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 访问令牌
- en: An access token is an object that describes and identifies the security context
    of a process or thread on a system. The access token is generated by the Winlogon
    process every time a user authenticates successfully, and includes the identity
    and privileges of the user account associated with the thread or process. This
    token is then attached to the initial process (typically the **userinit.exe**
    process), after which all child processes will inherit a copy of the access token
    from their creator and will run under the same access token.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 访问令牌是描述和标识系统中进程或线程安全上下文的对象。每次用户成功认证时，访问令牌由 Winlogon 进程生成，并包含与线程或进程关联的用户账户的身份和权限。然后，该令牌被附加到初始进程（通常是
    **userinit.exe** 进程），之后所有子进程将继承来自其创建者的访问令牌副本，并在相同的访问令牌下运行。
- en: 'On Windows, an access token will comprise the following elements:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，访问令牌将包含以下元素：
- en: User SID
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户 SID
- en: Group SID
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组 SID
- en: Logon SID
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录 SID
- en: Privileges assigned to the user or the user's group
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配给用户或用户组的权限
- en: '**Discretionary access control list** (**DACL**) being used'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自主访问控制列表**（**DACL**）正在使用'
- en: Source of the access token
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问令牌的来源
- en: 'We can list out the access token of a user by running the following command
    in the CMD:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过在 CMD 中运行以下命令列出用户的访问令牌：
- en: Whoami /priv
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Whoami /priv
- en: 'If the user is unprivileged, the access token will be restricted, as outlined
    in the following screenshot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户没有特权，则访问令牌将被限制，如下图所示：
- en: '![Figure 1.7 – Restricted access token'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.7 – 受限访问令牌'
- en: '](Images/B17389_01_007.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_01_007.jpg)'
- en: Figure 1.7 – Restricted access token
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – 限制访问令牌
- en: 'It is important to note that the user highlighted in *Figure 1.7* has administrative
    privileges; however, the **cmd.exe** process uses an access token that restricts
    privileges. If we run **cmd.exe** as an administrator, the user''s access token
    will be listed with all privileges, as outlined in the following screenshot:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，*图 1.7* 中高亮的用户具有管理权限；然而，**cmd.exe** 进程使用的访问令牌限制了权限。如果我们以管理员身份运行 **cmd.exe**，该用户的访问令牌将列出所有权限，如下截图所示：
- en: '![Figure 1.8 – Privileged access token'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.8 – 特权访问令牌'
- en: '](Images/B17389_01_008.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_01_008.jpg)'
- en: Figure 1.8 – Privileged access token
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8 – 特权访问令牌
- en: Access tokens can be leveraged during the privilege escalation process through
    attacks such as primary access token manipulation attacks, which involve tricking
    a system into believing that a process belongs to a different user from the one
    who started the process. We will learn how to utilize this attack vector to escalate
    our privileges later in the book.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 访问令牌可以在特权升级过程中通过诸如主访问令牌操控攻击等手段加以利用，该攻击通过欺骗系统使其相信一个进程属于不同的用户，而不是启动该进程的用户。我们将在本书后续部分学习如何利用这一攻击途径来提升我们的权限。
- en: Linux security
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux 安全性
- en: Linux is a free and open source operating system that comprises the Linux kernel,
    which was developed by Linus Torvalds, and the **GNU's Not Unix** (**GNU**) toolkit,
    which is a collection of software and utilities that was originally started and
    developed by Richard Stallman. This combination of open source projects is what
    makes up the Linux operating system as a whole, and it is commonly referred to
    as GNU/Linux.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 是一个免费的开源操作系统，包括由 Linus Torvalds 开发的 Linux 内核和**GNU 的非 Unix**（**GNU**）工具包。GNU
    工具包是由 Richard Stallman 最初启动和开发的软件和实用工具的集合。这些开源项目的结合构成了 Linux 操作系统的整体，通常称为 GNU/Linux。
- en: Typically, most individuals and companies are likely to be running Windows clients
    and will be using Linux for their critical infrastructure—for instance, mail servers,
    databases, web servers, and **intrusion detection systems** (**IDSes**). Given
    the nature and deployment of Linux servers in organizations, attacks will be much
    more likely to severely affect a company and cause major disruption.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，大多数个人和公司可能会运行 Windows 客户端，并且会使用 Linux 作为其关键基础设施——例如邮件服务器、数据库、网页服务器和**入侵检测系统**（**IDSes**）。鉴于
    Linux 服务器在组织中的性质和部署方式，攻击更有可能严重影响公司并造成重大干扰。
- en: User authentication
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户身份验证
- en: User account details on Linux are stored in a **/etc/passwd** file. This file
    contains the user account username, the **user ID** (**UID**), an encrypted password,
    a **group ID** (**GID**), and personal user information.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 上的用户账户详细信息存储在 **/etc/passwd** 文件中。此文件包含用户账户用户名、**用户 ID**（**UID**）、加密密码、**组
    ID**（**GID**）以及个人用户信息。
- en: This file can be accessed by all users on the system, which means that any user
    on the system can retrieve the password hashes of other users on the system. This
    makes the hash-dumping process on Linux much more straightforward and opens the
    door to potential password-cracking attacks. Most older Linux distributions utilized
    the **Message Digest Algorithm 5** (**MD5**) hashing algorithm, which is much
    easier to crack, and as a result, most newer distributions have begun utilizing
    and implementing the **Secure Hash Algorithm 256** (**SHA-256**) encryption protocol,
    therefore making it much more difficult to crack the hashes.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件可以被系统中的所有用户访问，这意味着系统中的任何用户都可以检索其他用户的密码哈希值。这使得在 Linux 上的哈希转储过程变得更加直接，也为潜在的密码破解攻击敞开了大门。大多数较老的
    Linux 发行版使用 **消息摘要算法 5**（**MD5**）哈希算法，这种算法更容易破解，因此大多数较新的发行版已经开始使用并实施 **安全哈希算法
    256**（**SHA-256**）加密协议，使得破解哈希变得更加困难。
- en: Identification
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 身份识别
- en: User authentication on Linux is facilitated through the use of a username that
    corresponds to a unique UID, comprising a numeric value that is automatically
    assigned or manually assigned by a system administrator. The root account on Linux
    will always have a UID of 0.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 上的用户身份验证通过使用与唯一 UID 对应的用户名来实现，UID 是一个数值，由系统管理员自动分配或手动分配。Linux 上的 root
    账户的 UID 始终为 0。
- en: This user information, along with the hashed user passwords, is stored in the
    **/etc/passwd** file.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这些用户信息以及加密后的用户密码存储在**/etc/passwd** 文件中。
- en: Access tokens
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 访问令牌
- en: Access tokens on Linux work in a similar way to how they work on Windows but
    are stored in memory (**random-access memory**, or **RAM**) and attached to processes
    when initialized.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 上的访问令牌与 Windows 上的工作方式类似，但它们存储在内存中（**随机访问内存**，或 **RAM**），并在初始化时附加到进程上。
- en: 'The access token on Linux will contain the following information:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 上的访问令牌将包含以下信息：
- en: UID of the user account
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户账户的 UID
- en: GID/GIDs of the groups that the user is a member of
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户所属组的 GID/GIDs
- en: User privileges
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户权限
- en: Primary group UID
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要组 UID
- en: '**Access control list** (**ACL**) entries'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问控制列表**（**ACL**）条目'
- en: Now that we have an understanding of the various authentication and security
    components used on Windows and Linux, we can take a look at the various types
    of privilege escalation attack and how they exploit the aforementioned security
    mechanisms.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对 Windows 和 Linux 上使用的各种身份验证和安全组件有了基本了解，我们可以看看各种类型的权限提升攻击及它们如何利用上述安全机制。
- en: Exploring the types of privilege escalation attack
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索权限提升攻击的类型
- en: We can now explore the most common privilege escalation attacks and how they
    work. The objective is to get a basic picture of the types of privilege escalation
    attack available and to understand how they are exploited.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以探讨最常见的权限提升攻击及其工作原理。目标是对可用的权限提升攻击类型有一个基本的了解，并理解它们是如何被利用的。
- en: We will take a look at how to exploit these vulnerabilities in depth on both
    Windows and Linux systems in the upcoming chapters.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将深入探讨如何在 Windows 和 Linux 系统上利用这些漏洞。
- en: Kernel exploits
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内核漏洞利用
- en: Kernel exploits are programs or binaries that affect both Windows and Linux
    and are designed to exploit vulnerabilities in the underlying kernel, to execute
    arbitrary code with elevated or "root" permissions.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 内核漏洞利用是影响 Windows 和 Linux 系统的程序或二进制文件，旨在利用底层内核中的漏洞，以提高权限或获取“root”权限来执行任意代码。
- en: The exploitation process is multi-faceted and requires a good amount of enumeration
    in order to determine the operating system version and installed patches or hotfixes,
    and consequently whether it is affected by any kernel exploits, after which the
    kernel exploit code can be retrieved through various exploit repositories such
    as **exploit-db**. The exploit code should then be inspected and customized based
    on the required parameters and functionality. After customization, the code can
    be compiled into a binary and transferred over to the target for execution. In
    some cases, the exploit code will need to be downloaded and compiled on the target
    if it relies on certain dependencies.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞利用过程是多方面的，需要进行大量的枚举，以确定操作系统版本和已安装的补丁或热修复程序，从而判断系统是否受到内核漏洞的影响，接着可以通过各种漏洞库（如
    **exploit-db**）获取内核漏洞利用代码。漏洞代码应该被检查并根据所需的参数和功能进行定制。定制完成后，代码可以编译成二进制文件并传输到目标系统上执行。在某些情况下，如果漏洞利用代码依赖于某些依赖项，则需要在目标系统上下载并编译。
- en: After successful compilation and execution of the binary, the kernel exploit
    will grant the attacker "root" access on the target system in the form of a shell
    prompt, where they can run commands on the system with "root" privileges.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 成功编译并执行二进制文件后，内核漏洞利用将通过 shell 提示符授予攻击者在目标系统上“root”访问权限，攻击者可以使用“root”权限在系统上运行命令。
- en: In many cases, precompiled kernel exploits for Windows already exist online
    and can be downloaded and executed directly, therefore avoiding the compilation
    process altogether. However, it is very important to inspect and analyze the exploit
    code before compiling it, as exploits could contain malicious code or payloads.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，Windows 系统的预编译内核漏洞利用代码已经在线存在，并且可以直接下载和执行，从而完全避免了编译过程。然而，在编译之前，检查和分析漏洞利用代码非常重要，因为漏洞代码可能包含恶意代码或有效负载。
- en: Important note
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Kernel exploits are extremely powerful; however, they can cause system crashes
    and kernel panics that can hinder the privilege escalation process and can cause
    damage to the system.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 内核漏洞利用是非常强大的；然而，它们可能导致系统崩溃和内核恐慌，这会阻碍权限提升过程，并可能对系统造成损害。
- en: Exploiting SUID binaries
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用 SUID 二进制文件
- en: '**SUID** is an inbuilt Linux feature that allows users to execute binaries
    and files with the permissions of other users.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**SUID** 是一个内建的 Linux 特性，允许用户以其他用户的权限执行二进制文件和文件。'
- en: This feature is commonly used to allow non-root accounts to run system utilities
    and binaries with root permissions. You can set the program or utility SUID permission
    with the owner as "root." This will allow the program or utility to run with "root"
    privileges whenever a non-root user executes it. Attackers can exploit or take
    advantage of SUID misconfigurations and run arbitrary commands as root.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 该功能通常用于允许非 root 账户以 root 权限运行系统工具和二进制文件。您可以将程序或工具的 SUID 权限设置为“root”所有者。这样，每当非
    root 用户执行该程序或工具时，它将以“root”权限运行。攻击者可以利用或利用 SUID 配置错误，以 root 权限运行任意命令。
- en: For example, programs or binaries that allow the execution of arbitrary commands
    such as **vim** should not have their SUID owner set as "root," as non-root users
    can leverage the command execution functionality within **vim** to run commands
    with "root."
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，允许执行任意命令的程序或二进制文件，如**vim**，不应将其 SUID 所有者设置为“root”，因为非 root 用户可以利用 **vim**
    中的命令执行功能，以“root”权限运行命令。
- en: Exploiting vulnerable services and permissions
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用易受攻击的服务和权限
- en: '**Services** offer the largest threat surface for attackers, given the variability
    and diversity of programs and services that can be found running on Windows and
    Linux systems.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务**提供了攻击者最大的威胁面，因为在 Windows 和 Linux 系统上运行的程序和服务种类繁多且各不相同。'
- en: Attackers will typically aim to identify misconfigured or vulnerable services
    and programs that could facilitate the escalation of privileges. For example,
    on Linux systems, attackers will try to identify and exploit misconfigurations
    with **cron jobs** and leverage the functionality to execute arbitrary code or
    malicious binaries.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者通常会目标是识别错误配置或易受攻击的服务和程序，这些服务和程序可能促成权限提升。例如，在 Linux 系统上，攻击者会尝试识别并利用 **cron
    jobs** 的配置错误，利用其功能执行任意代码或恶意二进制文件。
- en: Exploiting vulnerable or insecure services on Windows typically involves embedding
    a payload in a service with administrative privileges. When the service is executed,
    it executes a payload with the administrative privileges, therefore allowing the
    binary to execute commands with "root" privileges.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 利用 Windows 上的易受攻击或不安全服务通常涉及在具有管理员权限的服务中嵌入有效负载。当服务执行时，它以管理员权限执行有效负载，从而允许二进制文件以“root”权限执行命令。
- en: Insecure credentials
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不安全的凭证
- en: This technique involves searching for **insecure credentials** that have been
    stored on a system by users or by carrying out a process of cracking weak user
    credentials. Many users—and even system administrators—note down passwords in
    cleartext in documents, spreadsheets, and configuration files for various service
    accounts. These files can be located by running specialized search queries with
    various command-line utilities.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这一技术涉及搜索系统上由用户存储的不安全凭证，或通过破解弱用户凭证的过程来进行。许多用户——甚至是系统管理员——会将密码以明文形式记录在文档、电子表格和配置文件中，用于各种服务账户。这些文件可以通过运行专门的搜索查询和各种命令行工具来找到。
- en: An example of this is the use of the **find** command-line utility on Linux
    to locate files with specific extensions and filenames.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个例子是使用 Linux 上的 **find** 命令行工具来定位具有特定扩展名和文件名的文件。
- en: Exploiting SUDO
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用 SUDO
- en: Attackers will usually target users who have **SUDO** privileges. SUDO allows
    users to run commands as another user, typically the root user.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者通常会瞄准具有 **SUDO** 权限的用户。SUDO 允许用户以其他用户身份（通常是 root 用户）运行命令。
- en: SUDO privileges are usually configured manually by administrators, which leaves
    the door open to potential misconfigurations. For example, an administrator can
    assign SUDO permissions to a non-root user for certain command-line utilities
    (such as **find** or **vim**) that can run shell commands or arbitrary code.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: SUDO 权限通常由管理员手动配置，这使得可能存在配置错误的风险。例如，管理员可以为某些命令行工具（如 **find** 或 **vim**）分配 SUDO
    权限，这些工具可以运行 shell 命令或任意代码。
- en: This can be leveraged by attackers to run arbitrary code or execute commands
    with "root" privileges.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以利用这一点运行任意代码或以“root”权限执行命令。
- en: Important note
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: SUDO is a Linux command and permission set that allows users to run commands
    or programs with superuser or "root" privileges.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: SUDO 是一种 Linux 命令和权限设置，允许用户以超级用户或“root”权限运行命令或程序。
- en: These are just some of the privilege escalation attacks and techniques that
    can be used on both Windows and Linux systems. We will be taking a look at how
    to use these techniques in detail in the upcoming chapters.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是一些可以在 Windows 和 Linux 系统上使用的权限提升攻击和技术。我们将在接下来的章节中详细介绍如何使用这些技术。
- en: Summary
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter introduced you to the privilege escalation process, explained how
    privileges and user accounts are implemented in modern operating systems, and
    looked at the differences between privilege escalation on Windows and Linux systems.
    It also highlighted the most common privilege escalation techniques and explained
    how they can be exploited.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 本章向你介绍了权限提升过程，解释了现代操作系统中如何实现特权和用户账户，并探讨了 Windows 和 Linux 系统中权限提升的区别。还重点讲解了最常见的权限提升技术，并解释了如何利用它们。
- en: You should now have a good understanding of the privilege escalation process,
    how permissions and privileges are implemented, and the various penetration testing
    techniques that are used on both Windows and Linux.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该对权限提升过程有了较好的理解，了解了权限和特权是如何实现的，以及在 Windows 和 Linux 上使用的各种渗透测试技术。
- en: In the next chapter, we'll get started with setting up our virtual environment
    and preparing our penetration-testing distribution. We will also look at the various
    tools and frameworks we will be utilizing to enhance and optimize the privilege
    escalation process.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始设置我们的虚拟环境，并准备我们的渗透测试分发版。我们还将了解我们将使用的各种工具和框架，以增强和优化权限提升过程。
