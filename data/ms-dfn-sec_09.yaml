- en: '*Chapter 7*: Hardening a Unix Server'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第七章*：加固 Unix 服务器'
- en: '*"A hardened server drastically reduces the attack surface area, therefore
    minimizing exposure to threats. It helps to get rid of weaker default settings
    and to meet compliance."*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*“加固的服务器极大地减少了攻击面，从而最小化了暴露于威胁的风险。它有助于摆脱较弱的默认设置并符合合规要求。”*'
- en: '*– Faraz Ahmad, IT security consultant*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*– Faraz Ahmad，IT 安全顾问*'
- en: If you are used to managing **Windows** systems and servers, then managing **Unix**-based
    systems and servers may become a very complex task. But don't worry, we have your
    back, and we will start from the basics so that you can easily follow this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你习惯了管理**Windows** 系统和服务器，那么管理基于**Unix** 的系统和服务器可能会变得非常复杂。但别担心，我们会从基础开始，让你可以轻松跟随本章内容。
- en: Here, we will be covering the commands used in most Unix-based systems (including
    **Linux**). Despite the fact that there might be some differences between Unix
    systems, the structures and examples in this chapter should apply to the most
    common Unix systems (including Linux).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将覆盖大多数 Unix 系统（包括**Linux**）中使用的命令。尽管不同的 Unix 系统可能存在一些差异，本章中的结构和示例应该适用于最常见的
    Unix 系统（包括 Linux）。
- en: 'In this chapter, we are going to cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要内容：
- en: A complete guide to Unix services (how they work and how to manage them)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unix 服务的完整指南（它们如何工作以及如何管理它们）
- en: How permissions work on Unix systems
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Unix 系统上权限是如何工作的
- en: A detailed overview of the different types of permissions on Unix systems (file,
    folder, user, and so on)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 详细概述 Unix 系统中不同类型的权限（文件、文件夹、用户等）
- en: Advanced configuration of permissions using `umask`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `umask` 进行高级权限配置
- en: Enhancing your defensive security by using access controls
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用访问控制来增强你的防御性安全
- en: Managing access control lists
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理访问控制列表
- en: Configuring your host-based firewall using **iptables**
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**iptables**配置基于主机的防火墙
- en: Best practices to leverage log files
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用日志文件的最佳实践
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, it is highly recommended that you have a Unix-like system
    (this could be **Kali Linux**, **Debian**, **Ubuntu**, and so on). This chapter
    contains a lot of screenshots so that you can see the output of the commands used.
    However, it will be of great value if you can test those commands yourself while
    enjoying the book.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，强烈建议你使用类 Unix 系统（如**Kali Linux**、**Debian**、**Ubuntu** 等）。本章包含大量截图，以便你能够看到所用命令的输出。然而，如果你能在阅读本书的同时自己测试这些命令，将会非常有价值。
- en: A very good option is to create a **Virtual Machine** (**VM**) so you can run
    it through Kali easily on your computer. In fact, you will find at the end of
    this chapter the link to the Kali Linux download page. There you can download
    a preconfigured VM, ready to open in your favorite hypervisor (**VirtualBox**,
    **VMware**, and so on).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常好的选择是创建一个**虚拟机**（**VM**），这样你就可以通过 Kali 在你的电脑上轻松运行它。实际上，你会在本章末尾找到 Kali Linux
    下载页面的链接。在那里，你可以下载一个预配置的虚拟机，准备在你喜欢的虚拟化软件（**VirtualBox**、**VMware** 等）中打开。
- en: Securing Unix services
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护 Unix 服务
- en: Services are applications that run in the background to perform or support essential
    **Operating System** (**OS**) tasks. There are also services associated with apps
    or services such as **Apache**, **Structured Query Language (SQL)**, **Hypertext
    Preprocessor (PHP)**, **Remote Procedure Call (RPC)**, and so on.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 服务是后台运行的应用程序，执行或支持基本的**操作系统**（**OS**）任务。还有一些与应用程序或服务相关的服务，比如**Apache**、**结构化查询语言（SQL）**、**超文本预处理器（PHP）**、**远程过程调用（RPC）**
    等。
- en: A lot of services are loaded and enabled by default. However, every service
    enabled and running represents a potential vulnerability that needs to be considered
    and managed.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 许多服务默认加载并启用。然而，每个启用并运行的服务都代表一个潜在的漏洞，需要考虑和管理。
- en: Therefore, to reduce those risks, let's review some of the best practices related
    to Unix services (plus some additional server setup considerations).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了减少这些风险，让我们回顾一些与 Unix 服务相关的最佳实践（以及一些额外的服务器设置注意事项）。
- en: Defining the purpose of the server
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义服务器的目的
- en: A Linux server should be dedicated for a single purpose. For example, a print
    server, FTP, web server, and so on. This simple task will make hardening efforts
    easier.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 服务器应该专门用于单一目的。例如，打印服务器、FTP、Web 服务器等。这个简单的任务将使加固工作变得更容易。
- en: In the past, having dedicated servers was costly and difficult to procure. However,
    with cloud technologies, having dedicated servers for each purpose is really easy
    to create and manage and will not represent a significant increase in terms of
    cost.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，拥有专用服务器是昂贵且难以获得的。然而，借助云技术，创建和管理每个目的的专用服务器变得非常容易，且不会在成本上产生显著增加。
- en: Secure startup configuration
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全启动配置
- en: Now that you have defined the purpose of your server, the next step is to securely
    configure the OS by removing all unnecessary applications, features, and protocols
    to avoid unnecessary risks.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经定义了服务器的用途，下一步是通过移除所有不必要的应用程序、功能和协议来安全地配置操作系统，以避免不必要的风险。
- en: This will also reduce the effort in terms of patching because there will be
    fewer apps to patch and harden while reducing the number of attack vectors.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这也将减少补丁工作的难度，因为需要补丁和加固的应用程序会减少，同时减少攻击面。
- en: Managing services
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理服务
- en: The first step is to determine which services are running and the current status.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是确定哪些服务正在运行，以及它们的当前状态。
- en: 'To do this, we can issue the following command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们可以执行以下命令：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This command will run a `init` script that shows the list of services with the
    associated status. The status is represented in brackets in which `[ + ]` means
    that the service is running, `[ - ]` means that the service is stopped, and `[
    ? ]` is returned for services that do not return a status.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将运行 `init` 脚本，显示服务列表及其关联的状态。状态以括号表示，其中 `[ + ]` 表示服务正在运行，`[ - ]` 表示服务已停止，`[
    ? ]` 表示对于没有返回状态的服务，返回 `?`。
- en: 'As seen in the following figure, services such as SQL and **Bluetooth** are
    not essential and therefore they are currently disabled:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，像 SQL 和 **蓝牙** 这样的服务并不是必需的，因此它们目前被禁用：
- en: '![Figure 7.1 – List of installed services'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.1 – 已安装服务列表'
- en: '](img/Figure_7.1_B16290.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.1_B16290.jpg)'
- en: Figure 7.1 – List of installed services
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – 已安装服务列表
- en: To obtain additional information about the services, you can locate each of
    the `init` scripts of the services on `/etc/init.d`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取有关服务的更多信息，可以在 `/etc/init.d` 中找到每个服务的 `init` 脚本。
- en: 'For example, the following figure shows the information about the MySQL `init`
    script. This information can be useful when determining whether a service is required
    or not:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，下面的图展示了 MySQL `init` 脚本的信息。这些信息在确定服务是否必要时非常有用：
- en: '![Figure 7.2 – MySQL init script'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.2 – MySQL init 脚本'
- en: '](img/Figure_7.2_B16290.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.2_B16290.jpg)'
- en: Figure 7.2 – MySQL init script
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – MySQL init 脚本
- en: 'Additionally, the script normally supports the `start` and `stop` commands
    to change the status of the services. For example, we can use the following command
    to start the `ssh` service:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，该脚本通常支持 `start` 和 `stop` 命令来更改服务的状态。例如，我们可以使用以下命令来启动 `ssh` 服务：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following figure shows how the `ssh` service was running, how we can successfully
    stop it, and how we can verify it with the `status` command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图展示了 `ssh` 服务是如何运行的，我们如何成功停止它，并且如何通过 `status` 命令进行验证：
- en: '![Figure 7.3 – Stopping a running process'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.3 – 停止运行的进程'
- en: '](img/Figure_7.3_B16290.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.3_B16290.jpg)'
- en: Figure 7.3 – Stopping a running process
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3 – 停止运行的进程
- en: Notice that the `status` command also gives you additional interesting information
    such as process uptime, port, PID, memory used, and so on.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`status` 命令还会提供一些其他有趣的信息，如进程的运行时间、端口、PID、内存使用情况等。
- en: Managing services in systemd init
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 systemd 初始化中管理服务
- en: 'Another way to manage the services is with `systemd` by using the following
    commands (we will use a `mysql` service as an example):'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种管理服务的方法是使用 `systemd`，通过以下命令（我们将以 `mysql` 服务为例）：
- en: 'Checking the status of a service (`mysql`):'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查服务的状态（`mysql`）：
- en: '[PRE2]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Figure 7.4 – mysql service status'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.4 – mysql 服务状态'
- en: '](img/Figure_7.4_B16290.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.4_B16290.jpg)'
- en: Figure 7.4 – mysql service status
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4 – mysql 服务状态
- en: 'Starting a service (`mysql`):'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动服务（`mysql`）：
- en: '[PRE3]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Figure 7.5 – Running service'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.5 – 正在运行的服务'
- en: '](img/Figure_7.5_B16290.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.5_B16290.jpg)'
- en: Figure 7.5 – Running service
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.5 – 正在运行的服务
- en: 'To restart a service (`mysql`):'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重启服务（`mysql`）：
- en: '[PRE4]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To check whether a service is configured to start on the next boot-up (`mysql`):'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查服务是否配置为在下次启动时自动启动（`mysql`）：
- en: '[PRE5]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To enable the `mysql` service to run on boot-up:'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用 `mysql` 服务在启动时运行：
- en: '[PRE6]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To disable the `mysql` service to run on boot-up:'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用 `mysql` 服务在启动时运行：
- en: '[PRE7]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To check whether the `mysql` service is active:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查 `mysql` 服务是否处于活动状态：
- en: '[PRE8]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Keep in mind that `systemd` is present in most Unix distributions, however,
    if it is not present on the system, you will see the following error:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，`systemd` 在大多数 Unix 发行版中都存在，但如果系统中没有此项，您将看到以下错误：
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, let's see how to remove services using `systemd`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下如何使用 `systemd` 删除服务。
- en: Removing services in systemd init
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 systemd 启动过程中删除服务
- en: 'Now, let''s see some additional commands to remove services:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一些额外的命令来删除服务：
- en: 'Stop the service (`mysql`):'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停止服务（`mysql`）：
- en: '[PRE10]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Disable the service (`mysql`):'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用服务（`mysql`）：
- en: '[PRE11]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Remove the service (`mysql`):'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除服务（`mysql`）：
- en: '[PRE12]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Reload `systemd`:'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新加载 `systemd`：
- en: '[PRE13]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Run `systemd`:'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行 `systemd`：
- en: '[PRE14]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following figure shows how you can enable and disable services from startup
    and also how to check the current status:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了如何启用和禁用开机启动服务，以及如何检查当前状态：
- en: '![Figure 7.6 – Enabling/disabling services'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.6 – 启用/禁用服务'
- en: '](img/Figure_7.6_B16290.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.6_B16290.jpg)'
- en: Figure 7.6 – Enabling/disabling services
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6 – 启用/禁用服务
- en: Now that you know how to manage services, it's time to move on to a very interesting
    topic about *how permissions work on Unix and how to manage them in a secure way*.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道如何管理服务，接下来我们将讨论一个非常有趣的话题：*Unix 上权限如何工作以及如何以安全的方式管理它们*。
- en: Applying secure file permissions
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用安全的文件权限
- en: Unix systems have a unique way to manage permissions, which is quite different
    from Windows systems, so let's start with the basics about how permissions work
    in Unix systems.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Unix 系统有一种独特的权限管理方式，这与 Windows 系统非常不同，因此让我们从 Unix 系统中权限的基本工作原理开始。
- en: Understanding ownership and permissions
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解所有权和权限
- en: Unix systems have three levels of file/folder ownership and this can be checked
    with the `ls –l` command.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Unix 系统有三种文件/文件夹所有权级别，可以通过 `ls -l` 命令查看。
- en: 'As seen in the following figure, the command shows us a lot of information
    such as hard links, who created the file, the file size, the last modification,
    and the name of the file or folder, and the most important part of `ls` is the
    **permissions**:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，命令显示了大量信息，例如硬链接、谁创建了文件、文件大小、最后修改时间、文件或文件夹的名称，最重要的部分是`ls`的**权限**：
- en: '![Figure 7.7 – Results of the long listing of files (ls -l)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.7 – 文件长格式列出结果（ls -l）'
- en: '](img/Figure_7.7_B16290.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.7_B16290.jpg)'
- en: Figure 7.7 – Results of the long listing of files (ls -l)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.7 – 文件长格式列出结果（ls -l）
- en: Now, let's take a look at the permissions section, as seen in the following
    figure. The first section is the type of the file (in this example we have `d`
    for directory or folder).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看一下权限部分，如下图所示。第一部分是文件类型（在此示例中，我们使用 `d` 表示目录或文件夹）。
- en: 'The other types are as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 其他类型如下：
- en: '`-`: Regular file with different extensions such as `.txt`, `.php`, `.sh`,
    `.py`, and so on'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-`: 普通文件，具有不同的扩展名，如 `.txt`、`.php`、`.sh`、`.py` 等'
- en: '`l`: Symbolic link (or symlink or soft link)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`l`: 符号链接（或软链接或软连接）'
- en: '`c`: `char` file type'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`c`: `char` 文件类型'
- en: '`b`: Block device file'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`b`: 块设备文件'
- en: '![Figure 7.8 – Permissions on Unix'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.8 – Unix 上的权限'
- en: '](img/Figure_7.8_B16290.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.8_B16290.jpg)'
- en: Figure 7.8 – Permissions on Unix
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.8 – Unix 上的权限
- en: 'Then we have the permissions. Here, we have three letters (plus a special char)
    to represent the permissions (**read**, **write**, **execute**, or **disable**)
    for the three different types of user (**User**, **Group**, or **Other**):'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们有权限。这里有三个字母（加一个特殊字符）来表示三种不同用户类型（**用户**、**组**、**其他**）的权限（**读取**、**写入**、**执行**或**禁用**）：
- en: '**User**: Is the owner or creator of the file or folder. By default, this indicates
    who created the file, however, this can be modified.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户**: 是文件或文件夹的所有者或创建者。默认情况下，这表示谁创建了文件，但可以进行修改。'
- en: '**Group**: This shows the permissions of the users on the specified group (as
    seen in *Figure 7.7*).'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组**: 显示指定组中用户的权限（如 *图 7.7* 所示）。'
- en: '**Other**: Specifies the permissions of the other users who are not the owner
    (user) and are not part of the specified group.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他**: 指定不属于文件所有者（用户）和指定组的其他用户的权限。'
- en: Examples of permissions
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 权限示例
- en: 'As seen in the preceding section, Unix-like systems have four types of permissions:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如前节所示，类 Unix 系统有四种权限类型：
- en: '**Read**: User can open the file.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**读取**: 用户可以打开文件。'
- en: '**Write**: User can modify the content of the file.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**写入**: 用户可以修改文件内容。'
- en: '**Execute**: User can execute or run the file from the shell.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行**: 用户可以从 shell 执行或运行文件。'
- en: '**Disable**: No permissions.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁用**: 没有权限。'
- en: 'To better understand this, let''s see how the permissions are applied:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解这一点，看看权限是如何应用的：
- en: '`---`: No permissions'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`---`：无权限'
- en: '`--x`: Execute-only permissions'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--x`：仅执行权限'
- en: '`-w-`: Write-only permissions'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-w-`：仅写入权限'
- en: '`-wx`: Write and execute permissions'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-wx`：写入和执行权限'
- en: '`r--`: Read permissions'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`r--`：读取权限'
- en: '`r-x`: Read and execute permissions'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`r-x`：读取和执行权限'
- en: '`rw-`: Read and write permissions'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rw-`：读取和写入权限'
- en: '`rwx`: Read, write, and execute permissions'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rwx`：读取、写入和执行权限'
- en: 'Now, let''s see how this will look for the different users:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看不同用户的权限是什么样的：
- en: '`rwxr-xr-x`: User can read, write, and execute, the group and others can only
    read and execute.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rwxr-xr-x`：用户可以读取、写入和执行，组和其他用户只能读取和执行。'
- en: '`rwxr-xr—`: User can read, write and execute, the group can read and execute,
    and others can only read.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rwxr-xr—`：用户可以读取、写入和执行，组可以读取和执行，其他用户只能读取。'
- en: Remember that when assigning permissions, you must do it based on the **Principle
    of Least Privilege (PoLP)**.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在分配权限时，你必须遵循**最小权限原则（PoLP）**。
- en: Permissions in numeric mode (octal representation)
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数字模式下的权限（八进制表示）
- en: 'Unix systems have a very interesting feature in which permissions can also
    be represented using numbers, which enables the systems to use math to calculate
    the permissions. To do that, the system has a value for each permission:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Unix 系统有一个非常有趣的特点，就是权限也可以用数字表示，这使得系统可以使用数学来计算权限。为此，系统为每个权限分配了一个值：
- en: '`4`'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`4`'
- en: '`2`'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2`'
- en: '`1`'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1`'
- en: 'The following figure represents how values are added to calculate permissions
    in numeric mode:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 下图表示如何在数字模式下计算权限时将值相加：
- en: '![Figure 7.9 – Permissions in numeric mode'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.9 – 数字模式下的权限](img/Figure_7.9_B16290.jpg)'
- en: '](img/Figure_7.9_B16290.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.9_B16290.jpg)'
- en: Figure 7.9 – Permissions in numeric mode
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.9 – 数字模式下的权限
- en: 'Based on the preceding table, the permissions will now look like this:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的表格，权限现在看起来是这样的：
- en: '0 (`---`): No permissions'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0 (`---`)：无权限
- en: '1 (`--x`): Execute-only permissions'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 (`--x`)：仅执行权限
- en: '2 (`-w-`): Write-only permissions'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2 (`-w-`)：仅写入权限
- en: '3 (`-wx`): Write and execute permissions'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3 (`-wx`)：写入和执行权限
- en: '4 (`r--`): Read permissions'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4 (`r--`)：读取权限
- en: '5 (`r-x`): Read and execute permissions'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5 (`r-x`)：读取和执行权限
- en: '6 (`rw-`): Read and write permissions'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 6 (`rw-`)：读取和写入权限
- en: '7 (`rwx`): Read, write, and execute permissions'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7 (`rwx`)：读取、写入和执行权限
- en: Over time, using numbers may be easier. However, you must be familiar with both
    representations of permissions, as some commands may input one or the other.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，使用数字可能会更方便。然而，你必须熟悉这两种权限表示方式，因为一些命令可能会输入其中之一。
- en: Default permissions
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 默认权限
- en: When creating files, Unix systems will assign the current default permissions
    to the newly created file and, as a data security professional, you must understand
    how those permissions are assigned. However, you also must understand how you
    can customize those settings in case you need to apply more restricted permissions
    for the newly created files.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建文件时，Unix 系统会将当前的默认权限分配给新创建的文件，作为数据安全专家，你必须理解这些权限是如何分配的。然而，你还必须了解如何定制这些设置，以防你需要对新创建的文件应用更严格的权限。
- en: We can see the *permissions* of a file using the `ls -l {file_name}` command,
    but to see the *default permissions* let's create a new file using the `touch
    {file_name}` command, and then use the previous (`ls -l`) command to see the permissions
    that the system assigned by default.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`ls -l {file_name}`命令查看文件的*权限*，但是为了查看*默认权限*，让我们使用`touch {file_name}`命令创建一个新文件，然后使用之前的`ls
    -l`命令查看系统默认分配的权限。
- en: 'We created an example in the following figure that shows the *default permissions*
    of a file in our system. In this case, the default permissions are as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在下图中创建了一个示例，展示了我们系统中一个文件的*默认权限*。在这个例子中，默认权限如下：
- en: '**User (kali)**: Read and write'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户（kali）**：读取和写入'
- en: '**Group (kali)**: Read'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组（kali）**：读取'
- en: '**Others**: Read'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他用户**：读取'
- en: '![Figure 7.10 – File with no execute permissions'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.10 – 无执行权限的文件](img/Figure_7.10_B16290.jpg)'
- en: '](img/Figure_7.10_B16290.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.10_B16290.jpg)'
- en: Figure 7.10 – File with no execute permissions
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.10 – 无执行权限的文件
- en: You can play with the commands to get up to speed with Unix systems (create
    files, delete the files that you just created, list permissions, and so on), but
    you can also play with conversions to get more familiar with the numeric mode.
    For example, you can use the permissions shown in *Figure 7.10* and convert them
    to numeric mode by using the table in *Figure 7.9*. This should give you the numeric
    representation of those permissions, which is `644`.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过命令来熟悉 Unix 系统（创建文件、删除刚创建的文件、列出权限等），你也可以通过转换来更熟悉数字模式。例如，你可以使用*图 7.10*中显示的权限，并通过*图
    7.9*中的表格将其转换为数字模式。这将给你这些权限的数字表示，`644`。
- en: Tip
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: Have you noticed a case in which not even `root` has execute `(x)` permissions?
    If yes, don't panic, as that is normal and it may just indicate that the file
    is not an executable file.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否注意到有一种情况，即`root`甚至没有执行（`x`）权限？如果有，不要惊慌，这很正常，可能只是表示该文件不是可执行文件。
- en: 'The following figure shows an example of a file owned by `root` with no execute
    permissions. This, as explained, is expected because a log file is not an executable
    file:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示例所示，这是一个由`root`拥有且没有执行权限的文件。正如所解释的那样，这是预期中的情况，因为日志文件不是可执行文件：
- en: '![Figure 7.11 – File with no execute permissions'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.11 – 没有执行权限的文件](img/Figure_7.11_B16290.jpg)'
- en: '](img/Figure_7.11_B16290.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.11_B16290.jpg)'
- en: Figure 7.11 – File with no execute permissions
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.11 – 没有执行权限的文件
- en: So far, we have seen how permissions are applied to files. Now, it's time to
    see how permissions work for directories (folders).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到了如何应用权限到文件上。现在，是时候了解权限在目录（文件夹）中的作用了。
- en: Permissions in directories (folders)
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录（文件夹）中的权限
- en: Files and directories are managed differently/separately in Unix systems, which
    means also that the *default permissions are configured separately*. So, keep
    this in mind, as this could represent a security vulnerability if both are not
    configured properly.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Unix 系统中，文件和目录是分别管理的，这意味着*默认权限是分别配置的*。因此，请记住这一点，因为如果两者没有正确配置，这可能会构成安全漏洞。
- en: 'As shown in the following figure, we created a `mkdir {directory_name}` directory
    and then we use the `ls -ld` command to see the default permissions assigned by
    the system to the directory:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，我们创建了一个`mkdir {directory_name}`目录，然后使用`ls -ld`命令查看系统为该目录分配的默认权限：
- en: '![Figure 7.12 – Unix permissions in directories (folders)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.12 – Unix 系统中文件夹的权限](img/Figure_7.12_B16290.jpg)'
- en: '](img/Figure_7.12_B16290.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.12_B16290.jpg)'
- en: Figure 7.12 – Unix permissions in directories (folders)
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.12 – Unix 系统中文件夹的权限
- en: As you can see, the permissions are very different from the default permissions
    applied to the files. Let's make a comparison.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，文件夹的权限与应用于文件的默认权限非常不同。让我们来做个对比。
- en: 'My current default permissions on files (`rw-r--r--`) are as follows:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我当前在文件上的默认权限（`rw-r--r--`）如下：
- en: '**User (kali)**: Read and write'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户（kali）**：读取和写入'
- en: '**Group (kali)**: Read'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组（kali）**：读取'
- en: '**Others**: Read'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他**：读取'
- en: 'My current default permissions on directories (`rwxr-xr-x`) are as follows:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我当前在目录上的默认权限（`rwxr-xr-x`）如下：
- en: '**User (kali)**: Read, write, and execute'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户（kali）**：读取、写入和执行'
- en: '**Group (kali)**: Read and execute'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组（kali）**：读取和执行'
- en: '**Others**: Read and execute'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他**：读取和执行'
- en: 'Another important item to clarify is that *permissions are a bit different
    on directories*:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要澄清的重要事项是，*目录的权限与文件略有不同*：
- en: '**Read**: User can list the content of the directory.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**读取**：用户可以列出目录内容。'
- en: '**Write**: User can delete or create files in the directory.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**写入**：用户可以在目录中删除或创建文件。'
- en: '**Execute**: User can access the directory.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行**：用户可以访问目录。'
- en: What would happen if a user has no access to a folder but full access to a file
    inside the folder?
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果一个用户没有访问文件夹的权限，但对文件夹内的文件有完全访问权限，会发生什么情况？
- en: Just securing the folder and not the files inside is *not* a best practice,
    as the user may still access the file by using a hard link. So, as a best practice,
    always apply the proper permissions to the folder and the files contained within
    it.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅仅保护文件夹而不保护其中的文件*不是*最佳做法，因为用户仍然可以通过硬链接访问文件。因此，作为最佳做法，始终对文件夹及其内部的文件应用适当的权限。
- en: Changing default permissions with umask
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 umask 更改默认权限
- en: We can change the default permissions over files and directories by using the
    `umask` command.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`umask`命令来改变文件和文件夹的默认权限。
- en: 'As seen in the following figure, you can type the `umask` command and it will
    tell you the `umask` value for your session:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，你可以输入`umask`命令，它会告诉你当前会话的`umask`值：
- en: '![Figure 7.13 – Checking default permissions with umask'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.13 – 检查默认权限和umask](img/Figure_7.13_B16290.jpg)'
- en: '](img/Figure_7.13_B16290.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.13_B16290.jpg)'
- en: Figure 7.13 – Checking default permissions with umask
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.13 – 检查默认权限和umask
- en: But what does `022` mean?
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，`022`意味着什么呢？
- en: 'To answer that question, let''s first do a refresh of some basics. Unix systems
    have two default permissions: `666` for files (meaning everyone can read and write)
    and `777` for directories (meaning everyone has read, write, and execute permissions).
    However, to apply that `umask`, we just need to subtract `022` from the default
    value, which will be something like this:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这个问题，让我们先回顾一下基础知识。Unix 系统有两个默认权限：文件的`666`（意味着每个人都可以读取和写入），以及目录的`777`（意味着每个人都有读取、写入和执行权限）。但是，为了应用这个`umask`，我们只需要从默认值中减去`022`，结果大致如下：
- en: '**File permissions**:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件权限**：'
- en: '*666 - 022 = 644*'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '*666 - 022 = 644*'
- en: Based on *Figure 7.9*, `644` equals `rw-r--r--`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 基于*图7.9*，`644`等于`rw-r--r--`。
- en: 'And as you can see in the following figure, the default permissions for files
    is exactly that:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，文件的默认权限正是这样：
- en: '![Figure 7.14 – Default permissions on files'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.14 – 文件的默认权限](img/Figure_7.14_B16290.jpg)'
- en: '](img/Figure_7.14_B16290.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.14_B16290.jpg)'
- en: Figure 7.14 – Default permissions on files
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.14 – 文件的默认权限
- en: '**Directory permissions**:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录权限**：'
- en: '*777 - 022 = 755*'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '*777 - 022 = 755*'
- en: Based on *Figure 7.9*, `755` equals `rwxr-xr-x`
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 基于*图7.9*，`755`等于`rwxr-xr-x`
- en: 'The following figure confirms that the default permissions for directories
    that are `755` equal `rwxr-xr-x`:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 下图确认了目录的默认权限`755`等于`rwxr-xr-x`：
- en: '![Figure 7.15 – Default permissions on directories'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.15 – 目录的默认权限](img/Figure_7.15_B16290.jpg)'
- en: '](img/Figure_7.15_B16290.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.15_B16290.jpg)'
- en: Figure 7.15 – Default permissions on directories
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.15 – 目录的默认权限
- en: Now, to change the `umask` value is very simple. Just type the `umask` command
    and the new value.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，改变`umask`值非常简单。只需输入`umask`命令和新的值。
- en: 'For example, if you want to add a more restrictive value, you can use `umask
    0027`, which will provide the following results:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想添加一个更严格的值，可以使用`umask 0027`，这将提供以下结果：
- en: '**File permissions**:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件权限**：'
- en: '*666 - 027 = 640*'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '*666 - 027 = 640*'
- en: Based on *Figure 7.9*, `640` equals `rw-r--r--`.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 基于*图7.9*，`640`等于`rw-r--r--`。
- en: The result of that is that by default, *others* won't be able to access those
    files.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，默认情况下，*其他人*将无法访问这些文件。
- en: '**Directory permissions**:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '**目录权限**：'
- en: '*777 - 027 = 750*'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '*777 - 027 = 750*'
- en: Based on *Figure 7.9*, `750` equals `rwxr-x---`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 基于*图7.9*，`750` 等于 `rwxr-x---`。
- en: 'The result of that is that by default, *others* won''t be able to access or
    even list the content of directories, as shown in the following figure:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，默认情况下，*其他人*将无法访问或列出目录的内容，如下图所示：
- en: '![Figure 7.16 – Permission denied error'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.16 – 权限拒绝错误](img/Figure_7.16_B16290.jpg)'
- en: '](img/Figure_7.16_B16290.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.16_B16290.jpg)'
- en: Figure 7.16 – Permission denied error
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.16 – 权限拒绝错误
- en: Note that, for the previous example of *Figure 7.16*, the `kali` user was not
    the creator of the file and is not part of the group, and therefore is considered
    as *others*.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，对于前面提到的*图7.16*，`kali`用户不是文件的创建者，并且不属于该组，因此被视为*其他人*。
- en: Tip
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: You need to be very careful when using this command as it could leave your system
    very exposed. For example, you should never use `umask 000`, as it will grant
    full permissions (`rwx`) to everyone for all newly created files and folders.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此命令时需要非常小心，因为它可能会使系统暴露。例如，你绝不应使用`umask 000`，因为它会为所有新创建的文件和文件夹授予完全权限（`rwx`）给每个人。
- en: Permissions hierarchy
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 权限层级
- en: In Unix, the more specific permission takes precedence over the less specific
    permission.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Unix 中，权限更具体的优先级高于权限较少的。
- en: This means that *user* permissions take priority over *group* permissions, and
    both *user* and *group* permissions take priority over *other* permissions.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着*用户*的权限优先于*组*的权限，而*用户*和*组*的权限又优先于*其他人*的权限。
- en: 'This could be a bit confusing, so to make this easier, let''s see an example
    in the following figure. There, you can see that we created a directory (`akira`)
    with the default `rwxr-xr-x` permissions, and then we used `chmod 077` to remove
    the permissions of the *user* from `rwx` (full access) to `---` (no access):'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能有点混淆，所以为了简化这一点，让我们看一下下面的示例。在那里，您可以看到我们创建了一个目录（`akira`），并使用默认的`rwxr-xr-x`权限，然后我们使用`chmod
    077`将*用户*的权限从`rwx`（完全访问）更改为`---`（无访问）：
- en: '![Figure 7.17 – Precedence of permissions on Unix'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.17 – Unix 权限的优先级](img/Figure_7.17_B16290.jpg)'
- en: '](img/Figure_7.17_B16290.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.17_B16290.jpg)'
- en: Figure 7.17 – Precedence of permissions on Unix
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.17 – Unix 权限的优先级
- en: Now, the directory permissions are `---rwxrwx`. This is very interesting because
    the *group* and *other* have full access, but the *user* (who created the directory)
    does not have the permissions to list or access the file.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，目录权限是`---rwxrwx`。这非常有趣，因为*组*和*其他*用户具有完全访问权限，但*用户*（创建目录的用户）没有列出或访问文件的权限。
- en: Therefore, this means that due to the permissions hierarchy (precedence), everyone
    can access this directory except the owner.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这意味着由于权限层级（优先级），除了拥有者外，所有人都可以访问这个目录。
- en: Comparing directory permissions
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比较目录权限
- en: 'There may be cases in which you need to compare the permissions of two directories
    to find inconsistencies that may lead to a security vulnerability:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有某些情况，您需要比较两个目录的权限，以查找可能导致安全漏洞的不一致之处：
- en: '![Figure 7.18 – Comparing folder permissions'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.18 – 比较文件夹权限](img/Figure_7.18_B16290.jpg)'
- en: '](img/Figure_7.18_B16290.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.18_B16290.jpg)'
- en: Figure 7.18 – Comparing folder permissions
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.18 – 比较文件夹权限
- en: As seen in the preceding figure, you can use the `ls -ld {directory1 directory2}`
    command to see the comparison. In this case, we can see that permissions are not
    the same and this may require adjustments to prevent unauthorized access.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，您可以使用`ls -ld {directory1 directory2}`命令查看比较结果。在这种情况下，我们可以看到权限不相同，这可能需要进行调整，以防止未经授权的访问。
- en: Changing permissions and ownership of a single file
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改单个文件的权限和所有权
- en: Changing permissions on Unix is very simple. Here, you can use the `chmod` command,
    plus the new permissions in numbers as shown in *Figure 7.17*, where we changed
    the permissions to the `akira` directory to `700` equals to `rwx----.`
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Unix 上更改权限非常简单。这里，您可以使用`chmod`命令，后跟新的数字权限，如*图 7.17*所示，在那里我们将`akira`目录的权限更改为`700`，等同于`rwx----`。
- en: 'The command syntax is as follows:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 命令语法如下：
- en: '[PRE15]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You can also use the `chown` command to change the ownership of a file.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`chown`命令来更改文件的所有权。
- en: 'The command syntax is as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 命令语法如下：
- en: '[PRE16]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: And lastly, we can also change the group owning the file by using the `chgrp`
    command.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们还可以通过使用`chgrp`命令来更改文件的所属组。
- en: 'The command syntax is as follows:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 命令语法如下：
- en: '[PRE17]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Another interesting command is `chattr`, which enables the user to change a
    set of attributes on a file. To see more information about all the attributes
    that can be changed with this command, visit [http://manpages.org/chattr](http://manpages.org/chattr).
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的命令是`chattr`，它使用户能够更改文件的一组属性。要查看更多关于此命令可以更改的所有属性的信息，请访问 [http://manpages.org/chattr](http://manpages.org/chattr)。
- en: Useful commands to search for unwanted permissions
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找不需要的权限的有用命令
- en: There may be cases in which you need to check the permissions to determine whether
    they were applied as expected or whether something needs to be corrected (restricted)
    to maintain the security of the files.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有某些情况，您需要检查权限以确定它们是否按预期应用，或者是否需要纠正（限制）某些权限，以维护文件的安全性。
- en: 'The following is a list of useful commands that you can leverage to perform
    this important task:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有用的命令列表，您可以利用它们来执行这项重要任务：
- en: '**Find all files readable by other**: Display all files within the current
    directory that are readable by *other*. Many of these files are located in hidden
    directories and are generally harmless. However, if any confidential or sensitive
    files appear on this list (such as SSH keys), then the permissions must be modified
    to ensure the confidentiality of the data:'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查找其他用户可读的所有文件**：显示当前目录中所有*其他*用户可读的文件。许多文件位于隐藏目录中，通常无害。然而，如果此列表中出现任何机密或敏感文件（如
    SSH 密钥），则必须修改权限以确保数据的机密性：'
- en: '[PRE18]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**Find all files accessible by other in any way**: This will display all files
    within your home directory that have read, write, or execute permissions for *other*.
    This is useful for getting a general idea of what other users can access in your
    home directory and applying any restrictive actions if needed:'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查找所有以任何方式对其他用户可访问的文件**：这将显示您主目录中所有对*其他*用户具有读取、写入或执行权限的文件。这对于大致了解其他用户可以访问您主目录中的哪些文件以及在必要时采取限制措施非常有用：'
- en: '[PRE19]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**Find all files writable by other**: Display all files in the specified directory
    that are writable by *other*.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查找所有可由其他用户写入的文件**：显示指定目录中所有可由*其他*用户写入的文件。'
- en: 'All the files on this list must be carefully analyzed to determine whether
    they need to be writable by *other*. Otherwise, the permissions must be adjusted
    to prevent any impact on the integrity of the data:'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此列表中的所有文件必须仔细分析，以确定是否需要允许*其他*用户写入。如果不需要，则必须调整权限，以防止影响数据的完整性：
- en: '[PRE20]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**Find all files executable by user or group, and writable by other**: Display
    all files in the home directory that are both writable by *other* and executable
    by either the user or the group that owns the file.'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查找所有用户或组可执行，且其他用户可写的文件**：显示主目录中所有既可由*其他*用户写入，又可由文件所有者的用户或组执行的文件。'
- en: 'If you found a file that can be executed by *other*, then you must analyze
    whether there is a valid exception for that behavior. Otherwise, the file permissions
    need to be changed immediately to prevent any impact on the integrity and availability
    of the files:'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您发现一个文件可以被*其他*用户执行，那么您必须分析是否有对此行为的有效例外。如果没有，则需要立即更改文件权限，以防止影响文件的完整性和可用性：
- en: '[PRE21]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**Find all files not owned by a specific group**: Display all files in the
    current working directory that *are not* owned by the specified group:'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查找所有不属于特定组的文件**：显示当前工作目录中所有*不属于*指定组的文件：'
- en: '[PRE22]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**Find all files owned by a specific group**: Display all files in your home
    directory that *are* owned by the specified group:'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查找所有由特定组拥有的文件**：显示在您的主目录中由指定组拥有的所有文件：'
- en: '[PRE23]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now that you are a master with permissions on Unix systems, let's see how we
    expand all that knowledge by leveraging **Access Control Lists** (**ACLs**) to
    enhance the security of your Unix server.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经成为 Unix 系统权限管理的高手，让我们看看如何通过利用**访问控制列表**（**ACL**）来扩展所有这些知识，从而增强 Unix 服务器的安全性。
- en: Enhancing the protection of the server by improving your access controls
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过改善访问控制来增强服务器的保护
- en: '**ACLs** enable Unix administrators to apply detailed fine-tuning of permissions
    that may not be possible to achieve with the commands specified in the previous
    section. Therefore, let''s explore how to work with ACLs so that you can take
    advantage of them to enhance the application and management of permissions.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '**ACL**使 Unix 管理员能够对权限进行详细的微调，这些微调可能是之前部分命令无法实现的。因此，让我们探索如何使用 ACL，这样您就可以利用它们来增强权限的应用和管理。'
- en: Viewing ACLs
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看 ACL
- en: First, you can use the `getfacl {file_name}` command to see the ACL of the specified
    file.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您可以使用`getfacl {file_name}`命令查看指定文件的 ACL。
- en: 'The following figure shows an example of a file with and without an ACL. Notice
    that, when the file has an ACL, it adds a new line with the permissions of the
    specified user on the ACL, in this case, the `cesar` user and their associated
    permissions (`rwx`):'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示例显示了一个具有和不具有 ACL 的文件。请注意，当文件具有 ACL 时，它会增加一行，显示指定用户在 ACL 上的权限，在本例中为`cesar`用户及其相关权限（`rwx`）：
- en: '![Figure 7.19 – View of the getfacl command'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.19 – `getfacl`命令的视图'
- en: '](img/Figure_7.19_B16290.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.19_B16290.jpg)'
- en: Figure 7.19 – View of the getfacl command
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.19 – `getfacl`命令的视图
- en: 'You can also identify whether a file has an ACL by doing a long listing (`ls
    –l`):'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以通过执行长列表命令（`ls –l`）来识别文件是否具有 ACL：
- en: '![Figure 7.20 – Listing of a file with an ACL'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.20 – 带有 ACL 的文件列表'
- en: '](img/Figure_7.20_B16290.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.20_B16290.jpg)'
- en: Figure 7.20 – Listing of a file with an ACL
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.20 – 带有 ACL 的文件列表
- en: The preceding figure shows that the `bravo` file has a `+` sign at the end of
    the permissions, which indicates that the file has an ACL.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 上图显示了`bravo`文件的权限末尾有一个`+`符号，这表示该文件具有 ACL。
- en: Managing ACLs
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理 ACL
- en: To set an ACL on a file, you can use the `setfacl` command.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 要为文件设置 ACL，您可以使用`setfacl`命令。
- en: 'In the following example, we show the syntax of the command in which we want
    to create an ACL for the `bravo` file to provide `rwx` permissions to the `cesar`
    user:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们展示了一个命令的语法，其中我们希望为`bravo`文件创建一个ACL，为`cesar`用户提供`rwx`权限：
- en: '[PRE24]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'You can also create ACLs for groups by using `g` (groups) instead of `u` (user).
    In the following example, you can see how we are creating an ACL for the `bravo`
    file to *add read and write permissions* to the `managers` group:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过使用`g`（组）而不是`u`（用户）来为组创建ACL。在以下示例中，你可以看到我们是如何为`bravo`文件创建ACL以*添加读取和写入权限*给`managers`组的：
- en: '[PRE25]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Now, let's explore more uses of the `setfacl` command.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们进一步探索`setfacl`命令的更多用途。
- en: Default ACL on directories
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录上的默认ACL
- en: When creating default ACLs on directories, any files created within that directory
    will also have that default ACL inherit automatically.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在为目录创建默认ACL时，目录中创建的任何文件也会自动继承该默认ACL。
- en: 'To achieve this, we are going to use the same `setfacl` command but with some
    different parameters. In this example, we are creating a default ACL for the `bravito`
    folder to provide read access to `cesar`:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将使用相同的`setfacl`命令，但会使用一些不同的参数。在此示例中，我们为`bravito`文件夹创建一个默认ACL，以便为`cesar`提供读取权限：
- en: '[PRE26]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The following figure shows how the `bravisimo` file inherits the permissions
    of `cesar` from the default ACL that we just created for the `bravito` directory:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了如何让`bravisimo`文件从我们刚为`bravito`目录创建的默认ACL中继承`cesar`的权限：
- en: '![Figure 7.21 – Default ACL on a directory'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.21 – 目录上的默认ACL'
- en: '](img/Figure_7.21_B16290.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.21_B16290.jpg)'
- en: Figure 7.21 – Default ACL on a directory
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.21 – 目录上的默认ACL
- en: Now, let's see how you can also use this command to remove an ACL.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看你如何使用这个命令来移除一个ACL。
- en: Removing ACLs
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移除ACL
- en: 'To remove a specific ACL, use the same `setfacl` command, but replace the `-m`
    parameter with `–x`:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 要移除特定的ACL，使用相同的`setfacl`命令，但将`-m`参数替换为`–x`：
- en: '[PRE27]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The following figure shows how the ACL for the `cesar` user was successfully
    removed:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了如何成功地移除`cesar`用户的ACL：
- en: '![Figure 7.22 – Removing the ACL of a user'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.22 – 移除用户的ACL'
- en: '](img/Figure_7.22_B16290.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.22_B16290.jpg)'
- en: Figure 7.22 – Removing the ACL of a user
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.22 – 移除用户的ACL
- en: However, you may notice that the mask is still there, so the ACL was not completely
    removed.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你可能会注意到`mask`仍然存在，因此ACL并没有完全移除。
- en: 'As seen in *Figure 7.23*, to completely remove the ACL from the `bravo` file,
    you need to use the following command:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图7.23*所示，要完全移除`bravo`文件的ACL，你需要使用以下命令：
- en: '[PRE28]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Also, in the following figure, notice that after issuing this command, the
    `+` sign was also removed at the end of the permissions (see the result of `ls
    -l`):'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在下图中，注意到在执行此命令后，权限末尾的`+`符号也被移除了（参见`ls -l`命令的结果）：
- en: '![Figure 7.23 – Complete removal of the ACL from a file'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.23 – 完全移除文件的ACL'
- en: '](img/Figure_7.23_B16290.jpg)'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.23_B16290.jpg)'
- en: Figure 7.23 – Complete removal of the ACL from a file
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.23 – 完全移除文件的ACL
- en: Additionally, you can also see that `mask` is no longer present when checking
    the ACL with the `getfacl` command.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以看到，在使用`getfacl`命令检查ACL时，`mask`已经不再显示。
- en: Enhanced access controls
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 增强的访问控制
- en: There are additional systems designed to enhance the access controls by implementing
    security policies. One of those systems is the well-known **SELinux**.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他一些系统通过实施安全策略来增强访问控制。其中之一就是著名的**SELinux**。
- en: SELinux access controls are determined by a set of policies loaded on the system
    kernel that enable an improved security mechanism that prevents the change of
    permissions by careless users or misbehaving applications.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux的访问控制由加载到系统内核中的一组策略决定，这些策略启用了改进的安全机制，防止粗心的用户或行为不当的应用程序更改权限。
- en: The installation, configuration, and settings of *SELinux* may vary between
    the different versions of Unix, so in this case, it is better to check the specific
    settings for your Unix system by visiting their official site at [http://selinuxproject.org/page/Main_Page](http://selinuxproject.org/page/Main_Page).
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '*SELinux*的安装、配置和设置可能会因Unix的不同版本而有所不同，因此，在这种情况下，最好通过访问其官方网站[http://selinuxproject.org/page/Main_Page](http://selinuxproject.org/page/Main_Page)来查看你所使用的Unix系统的具体设置。'
- en: OK, now that you are an expert in managing Unix permissions, it's time to see
    how you can enhance the security of your Unix machine by leveraging **host-based
    firewalls**.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在你已经是管理Unix权限的专家了，接下来是时候看看如何利用**主机防火墙**来增强Unix机器的安全性。
- en: Configuring host-based firewalls
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置基于主机的防火墙
- en: We are all familiar with firewalls as devices to regulate incoming and outgoing
    network traffic to prevent the entry of malicious code or attacks and to prevent
    the exfiltration of data.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都熟悉防火墙作为设备，用来调节进出网络的流量，防止恶意代码或攻击的进入，同时防止数据泄露。
- en: Host-based firewalls are firewall rules that can be activated at the OS level
    so that you can apply incoming and outgoing network traffic protection for your
    system.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 基于主机的防火墙是可以在操作系统级别激活的防火墙规则，从而为系统应用进出网络流量的保护。
- en: One feature of host-based firewalls is that they are configured per system,
    offering a higher level of flexibility when needed.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 主机防火墙的一个特点是它们是针对每个系统配置的，在需要时提供更高的灵活性。
- en: There are several host-based firewalls for Unix systems, such as **iptables**,
    **firewalld**, **netfilter**, **ipfw**, and more.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个用于 Unix 系统的基于主机的防火墙，如 **iptables**，**firewalld**，**netfilter**，**ipfw** 等。
- en: Understanding iptables
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 iptables
- en: iptables is used to set up, maintain, and review the tables of the IPv4 and
    IPv6 packet filter rules in the Linux kernel.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: iptables 用于在 Linux 内核中设置、维护和查看 IPv4 和 IPv6 包过滤规则表。
- en: To understand iptables, we need to first understand its components.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解 iptables，首先需要理解它的组成部分。
- en: Chains
  id: totrans-327
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 链
- en: Chains are the set of rules defined for a particular task.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 链是为特定任务定义的一组规则。
- en: 'iptables uses three sets of rules (chains) to manage traffic: **input chains**,
    **output chains**, and **forward chains**:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: iptables 使用三组规则（链）来管理流量：**输入链**，**输出链** 和 **转发链**：
- en: '**Input chains**: These are the rules applied to incoming traffic from the
    network to the local machine.'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输入链**：这些是应用于从网络到本地主机的传入流量的规则。'
- en: '**Output chains**: These are the rules applied to outgoing traffic from the
    network to the local machine.'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输出链**：这些是应用于从本地主机到网络的出站流量的规则。'
- en: '**Forward chains**: These are the rules applied to packets that are neither
    emitted by the host nor directed to the host. They are the packets that the host
    is merely routing.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转发链**：这些是应用于既不由主机发出也不指向主机的数据包的规则。它们是主机仅仅进行路由的数据包。'
- en: Policies
  id: totrans-333
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 策略
- en: 'iptables uses three policies or actions: **Accept**, **Drop**, and **Reject**:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: iptables 使用三种策略或操作：**接受**，**丢弃** 和 **拒绝**：
- en: '**Accept**: Traffic is accepted and transferred to the application or systems
    for processing.'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**接受**：接受流量并将其传递给应用程序或系统进行处理。'
- en: '**Drop**: Traffic is blocked and not processed.'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**丢弃**：阻止流量，不进行处理。'
- en: '**Reject**: Similar to Drop, but it sends a return error to the host that the
    package was blocked.'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拒绝**：类似于丢弃，但会向主机发送一个错误返回，说明该数据包被阻止。'
- en: Tip
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提示
- en: Rules in iptables are checked from top to bottom. So, be careful when creating
    and inserting rules to avoid any accidental bypass.
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: iptables 中的规则是从上到下检查的。所以，在创建和插入规则时要小心，避免意外绕过。
- en: OK, enough theory, let's see how you can configure them.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，够多的理论了，接下来看看如何配置它们。
- en: Configuring iptables
  id: totrans-341
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 iptables
- en: 'We need to start by checking the current iptables with the following command:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要通过以下命令来检查当前的 iptables 配置：
- en: '[PRE29]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'When running this command, we can see the three chains (`INPUT`, `FORWARD`,
    and `OUTPUT`), but as seen in the following figure, by default there are no predefined
    rules:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行此命令时，我们可以看到三条链（`INPUT`，`FORWARD`，和`OUTPUT`），但如以下图所示，默认情况下没有预定义规则：
- en: '![Figure 7.24 – Default iptables'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.24 – 默认 iptables 配置'
- en: '](img/Figure_7.24_B16290.jpg)'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.24_B16290.jpg)'
- en: Figure 7.24 – Default iptables
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.24 – 默认 iptables 配置
- en: 'Now, let''s explore the meaning of each of the columns shown in the preceding
    figure:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探讨一下前述图形中显示的每一列的含义：
- en: '`target`: Defines the actions (or policies) to be performed (`ACCEPT`, `DROP`,
    `REJECT`).'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target`：定义要执行的操作（或策略）（`ACCEPT`，`DROP`，`REJECT`）。'
- en: '`prot`: Determines which protocol this will be applied to.'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prot`：决定该规则应用于哪个协议。'
- en: '`source`: Address of the source of the packet.'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`source`：数据包的源地址。'
- en: '`destination`: Address of the destination of the packet.'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`destination`：数据包的目的地址。'
- en: As you saw in *Figure 7.24*, the default policy for all chains (`INPUT`, `FORWARD`,
    and `OUTPUT`) is `ACCEPT`. So, let's explore how you can change this.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 如你在*图 7.24*中看到的，所有链（`INPUT`，`FORWARD`，和`OUTPUT`）的默认策略是`ACCEPT`。所以，让我们来探讨如何更改它。
- en: Changing the default policy
  id: totrans-354
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改默认策略
- en: 'You can easily change the default policy for all chains (`INPUT`, `FORWARD`,
    and `OUTPUT`) to apply more restrictive permissions to a specific chain by using
    the following command:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下命令轻松更改所有链（`INPUT`、`FORWARD` 和 `OUTPUT`）的默认策略，将更严格的权限应用于特定链：
- en: '[PRE30]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The following figure shows the result of the command, and now you can see how
    the default permissions for the `FORWARD` chain is `DROP`:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了命令的结果，现在你可以看到`FORWARD`链的默认权限是`DROP`：
- en: '![Figure 7.25 – Default iptables'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.25 – 默认的iptables'
- en: '](img/Figure_7.25_B16290.jpg)'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.25_B16290.jpg)'
- en: Figure 7.25 – Default iptables
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.25 – 默认的iptables
- en: Now it's time to see how to block incoming traffic with iptables.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候查看如何使用iptables阻止传入流量了。
- en: Blocking incoming traffic with iptables
  id: totrans-362
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用iptables阻止传入流量
- en: Imagine that you identify an IP address that is known for sending DDOS attacks
    (`14.14.14.14`).
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你识别出了一个已知进行DDOS攻击的IP地址（`14.14.14.14`）。
- en: 'We can easily block all incoming traffic from that IP address with the following
    command:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下命令轻松地阻止来自该IP地址的所有传入流量：
- en: '[PRE31]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now, let''s explore the parameters of the command:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看这个命令的参数：
- en: '`-A`: This is used to append the rule at the end of the chain (you can use
    `-I` to append the rule to the top of the chain).'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-A`：用于将规则附加到链的末尾（你可以使用`-I`将规则附加到链的顶部）。'
- en: '`-s`: Specifies the source of the packet (in this case, the IP address of the
    attacker).'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-s`：指定数据包的源（在本例中是攻击者的IP地址）。'
- en: '`-j`: Specifies the action or policy to be applied to the packet.'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-j`：指定要应用于数据包的操作或策略。'
- en: '![Figure 7.26 – Blocking incoming traffic with iptables'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.26 – 使用iptables阻止传入流量'
- en: '](img/Figure_7.26_B16290.jpg)'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.26_B16290.jpg)'
- en: Figure 7.26 – Blocking incoming traffic with iptables
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.26 – 使用iptables阻止传入流量
- en: The preceding figure shows the newly created rule on iptables.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 上图显示了在iptables上创建的新规则。
- en: Whitelisting an IP with iptables
  id: totrans-374
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用iptables将IP地址列入白名单
- en: 'We can also use iptables to whitelist or accept traffic from a given source
    by using the following command:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用iptables通过以下命令列出白名单或接受来自指定来源的流量：
- en: '[PRE32]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following figure shows the results of the preceding command and how the
    `-I` parameter placed the rule on top of the chain:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了前述命令的结果，以及`-I`参数如何将规则放在链的顶部：
- en: '![Figure 7.27 – Whitelisting an address with iptables'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.27 – 使用iptables列出白名单地址'
- en: '](img/Figure_7.27_B16290.jpg)'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.27_B16290.jpg)'
- en: Figure 7.27 – Whitelisting an address with iptables
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.27 – 使用iptables列出白名单地址
- en: Now, let's see how to remove policies from iptables.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何从iptables中删除策略。
- en: Removing all policies from iptables
  id: totrans-382
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从iptables中删除所有策略
- en: 'There are many situations in which you may need to remove all policies from
    iptables, for example, if you inherited a new server and the current rules are
    confusing and you want to use your own super-secure rules. Or, maybe you just
    want to clear all the mess you made to write a book. The good news is that achieving
    that is very easy with the following command:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多情况，你可能需要从iptables中删除所有策略，例如，如果你继承了一台新服务器，当前的规则很混乱，你希望使用自己的超级安全规则。或者，也许你只是想清除你写书时造成的所有混乱。好消息是，使用以下命令，完成这项操作非常简单：
- en: '[PRE33]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now, as seen in the following figure, the iptables were flushed and look like
    new:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，正如下图所示，iptables已被刷新，看起来像新的一样：
- en: '![Figure 7.28 – Flushing the iptable rules'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.28 – 刷新iptables规则'
- en: '](img/Figure_7.28_B16290.jpg)'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.28_B16290.jpg)'
- en: Figure 7.28 – Flushing the iptable rules
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.28 – 刷新iptables规则
- en: Flushing iptables is also a common troubleshooting step when facing network
    issues. However, you must set the required controls to avoid this being performed
    indiscriminately. Additionally, *any change to iptables should be logged and approved
    by a security analyst to ensure that another security mechanism is set in its
    place*.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 刷新iptables也是在遇到网络问题时常见的故障排除步骤。然而，你必须设置所需的控制措施，以避免不加选择地执行此操作。此外，*对iptables的任何更改都应记录并获得安全分析师的批准，以确保其他安全机制已被替代*。
- en: Did you notice something in Figure 7.28?
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 你在图 7.28中注意到什么了吗？
- en: I am sure you did – this command just removed the policies that you created,
    but it did not change the default chain for `FORWARD` that we established earlier
    (we changed it from `ACCEPT` to `DROP`). So, make sure you pay attention to this
    when flushing the iptables.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 我敢肯定你注意到了——这条命令只是移除了你创建的策略，但没有改变我们之前建立的`FORWARD`链的默认值（我们将其从`ACCEPT`改为`DROP`）。所以，刷新iptables时，确保你关注这一点。
- en: Now, let's see how you can also use iptables to protect against some threats.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何使用iptables来防范一些威胁。
- en: SSH brute-force protection with iptables
  id: totrans-393
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用iptables进行SSH暴力破解保护
- en: 'You can use the following iptables rules to block IP addresses that attempt
    more than a given number of SSH connections in `X` seconds. Here is an example
    to block an IP address if there are more than eight SSH connections in 45 seconds:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下iptables规则来阻止那些在`X`秒内尝试超过给定数量SSH连接的IP地址。以下是一个示例，若在45秒内有超过八次SSH连接，则阻止该IP地址：
- en: '[PRE34]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Notice that the first command is used to track new connections coming in on
    port `22` (SSH), while the second command tells iptables to drop packets from
    a given IP address that has sent eight or more requests in 45 seconds.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，第一个命令用于跟踪在端口`22`（SSH）上进入的新连接，而第二个命令则告诉iptables丢弃来自特定IP地址的包，该地址在45秒内发送了八个或更多请求。
- en: Note
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to insert these two rules at the top of your `INPUT` chain (to trigger
    them before the rest of your rules), use `-I` instead of `-A` as the first parameter.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想将这两条规则插入到`INPUT`链的顶部（以便在其他规则之前触发它们），请使用`-I`代替`-A`作为第一个参数。
- en: Another good option is to use *whitelisting* as this enables you to allow one
    or more IPs to access your server while dropping everything else.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个好的选择是使用*白名单*，因为它允许你允许一个或多个IP访问你的服务器，同时丢弃其他所有访问。
- en: 'Here is the command to use this technique:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用此技术的命令：
- en: '[PRE35]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The preceding example will allow SSH connections ONLY from those two IP addresses
    while blocking any access from any other IP address.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的例子将仅允许来自这两个IP地址的SSH连接，同时阻止来自其他任何IP地址的访问。
- en: Protecting from port scanning with iptables
  id: totrans-403
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用iptables防范端口扫描
- en: 'There are several ways to protect from port scanning with iptables, however,
    this is my favorite:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以用iptables防范端口扫描，然而，这是我最喜欢的一种：
- en: '[PRE36]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: In this example, we are assuming that there is not a valid reason for a host
    to send me `200 SYN` requests in 1 hour, so we can use this as the security trigger
    parameter. However, you can adjust that number based on your own judgment.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们假设没有合理的理由让一个主机在1小时内发送`200 SYN`请求，因此我们可以将此作为安全触发参数。然而，你可以根据自己的判断调整这个数字。
- en: There are many more things you can do with iptables, such as implementing rules
    for a specific port to delete a given rule. You can explore these and configure
    your iptables as needed.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用iptables做很多其他事情，比如为特定端口实施规则以删除给定规则。你可以探索这些选项并根据需要配置iptables。
- en: A best practice is to perform a regular check of iptables to confirm that the
    settings were not changed. A common mistake is that system owners or administrators
    may remove some rules during network troubleshooting. In those cases, the root
    cause must be investigated to fix the issue, and if an iptable rule must be removed
    or disabled, then you need to make sure that another control, policy, or system
    is set in place to cover that potential security gap originated by the removal
    of the iptable rule.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践是定期检查iptables，以确认设置未被更改。一个常见的错误是系统所有者或管理员可能在网络故障排除过程中删除了一些规则。在这种情况下，必须调查根本原因以修复问题。如果必须删除或禁用iptables规则，那么你需要确保另一个控制、政策或系统已经设置好，以弥补由于删除iptables规则所带来的潜在安全漏洞。
- en: Advanced management of logs
  id: totrans-409
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志的高级管理
- en: As you may know, logs are records of the activities or actions on a given system,
    OS, or application. They are really important as a source of truth during investigations
    to determine what can be the cause of downtime, or any other incident.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所知道的，日志是对给定系统、操作系统或应用程序上活动或操作的记录。它们在调查过程中非常重要，帮助确定停机时间或其他事件的可能原因。
- en: Best practices state that all logs must be enabled to ensure that you keep track
    of everything that is happening in your system. Remember, logs are the main source
    of information during audits or forensic analysis, therefore, you need to make
    sure they are available for them.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践指出，所有日志必须启用，以确保你能追踪系统中发生的所有事情。记住，日志是审计或取证分析中的主要信息来源，因此，你需要确保它们可以随时供查阅。
- en: Additionally, nowadays, the cost of storage is really low, so it would be hard
    for you to justify that a log was disabled to *save space*.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，现如今存储成本非常低，所以你很难为禁用日志以*节省空间*提供合理的理由。
- en: Another good practice is to keep all logs centralized on an external device,
    so in case of a full system failure or hard drive crash, you will still be able
    to retrieve the logs. Furthermore, attackers normally cover their tracks by deleting
    the logs, but having an external copy of the logs will make it harder for the
    attacker to delete their tracks from them (because the attacker will have to also
    compromise the other system where the logs are backed up or centralized).
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个好习惯是将所有日志集中存储在外部设备上，这样在系统完全故障或硬盘崩溃的情况下，你仍然能够恢复日志。此外，攻击者通常会通过删除日志来掩盖自己的痕迹，但拥有日志的外部副本将使攻击者更难删除其痕迹（因为攻击者还需要侵入备份或集中存储日志的其他系统）。
- en: Leveraging the logs
  id: totrans-414
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用日志
- en: A **Security Information and Event Management (SIEM) system** can collect and
    leverage all those logs (data) and, after some training, configuration, and correlation,
    transform that data into useful security insights (information and knowledge).
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全信息与事件管理（SIEM）系统**可以收集并利用所有这些日志（数据），并经过一定的训练、配置和关联后，将这些数据转化为有用的安全洞察（信息和知识）。'
- en: The value of those systems is that they can analyze huge amounts of data from
    logs (which is normally wasted) to detect patterns and uncover vulnerabilities.
    They even have the power to detect ongoing attacks (including **advanced persistent
    threats**).
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 这些系统的价值在于它们可以分析来自日志的大量数据（通常是被浪费的），以发现模式并揭示漏洞。它们甚至有能力检测正在进行的攻击（包括**高级持续威胁**）。
- en: 'Another good feature of SIEM systems is that they allow you to easily find
    known signs of attacks, for example, the following signs:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: SIEM 系统的另一个好功能是，它们可以帮助你轻松找到已知的攻击迹象，例如以下迹象：
- en: Repeated failed login attempts at the same hour, every `X` number of days
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在同一小时内重复失败的登录尝试，每隔`X`天发生一次
- en: An abnormal number of login attempts
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常数量的登录尝试
- en: Logins at unusual hours from unknown addresses
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从未知地址在异常时间进行的登录
- en: Unknown addresses trying to log in on several systems
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不明地址尝试在多个系统上登录
- en: Login attempts with default credentials (`admin`/`admin`)
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认凭证进行的登录尝试（`admin`/`admin`）
- en: Also, remember that you can also collect logs from other devices such as routers,
    proxies, and firewalls. These are extremely important because some of them can
    alert you about some hard-to-detect attacks, such as a zombie machine infected
    to carry out crypto mining, DDOS attacks, and more.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，记住你还可以收集来自其他设备的日志，例如路由器、代理服务器和防火墙。这些日志非常重要，因为其中一些可以帮助你检测一些难以发现的攻击，比如被感染的僵尸机器进行加密货币挖矿、DDOS攻击等。
- en: You can also collect valuable information from some **IoT** devices and **SCADA**
    systems. These can provide early warnings, as less-protected systems are normally
    the doors that criminals use to get into your infrastructure. Detecting this on
    time may help you to prevent them from gaining access to more valuable assets
    and data in your infrastructure.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以从一些**物联网（IoT）**设备和**SCADA**系统中收集有价值的信息。这些可以提供早期警报，因为防护较差的系统通常是犯罪分子进入你基础设施的入口。及时发现这一点，可能帮助你防止他们访问你基础设施中的更有价值的资产和数据。
- en: Summary
  id: totrans-425
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Congratulations! You are now a master in securing Unix servers, and let me tell
    you why.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你！你现在已经是 Unix 服务器安全的高手了，让我告诉你为什么。
- en: First, you learned all about *Unix services*, including how they work and how
    they can be managed.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你学习了所有关于*Unix 服务*的内容，包括它们如何工作以及如何管理它们。
- en: We also covered a very complex topic, *Unix permissions*, in a very smooth and
    easy way, including how to handle them using octal representation.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还以非常顺畅且简单的方式介绍了一个复杂的主题，*Unix 权限*，包括如何使用八进制表示法来处理这些权限。
- en: Then, we also learned about the different *types of permissions* on Unix systems,
    and how to properly manage them.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们还了解了 Unix 系统中不同的*权限类型*，以及如何正确管理它们。
- en: Additionally, we reviewed how we can leverage `umask` for advanced configuration
    of default permissions.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们回顾了如何利用`umask`进行默认权限的高级配置。
- en: You also learned how to enhance the security of your systems by *leveraging
    access controls*, and how to configure them.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 你还学习了如何通过*利用访问控制*来增强系统的安全性，并且学会了如何配置它们。
- en: Finally, you also learned what a *host-based firewall* is, and how to configure
    one using *iptables*.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你还学习了什么是*基于主机的防火墙*，以及如何使用*iptables*来配置它。
- en: Now, grab a cup of coffee and get prepared, because in the next chapter, you
    will acquire all the skills that you need to protect your network.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，拿一杯咖啡，做好准备，因为在下一章节中，你将掌握保护网络所需的所有技能。
- en: Further reading
  id: totrans-434
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'If you want to learn more about SELinux, you can visit its official repository:
    [https://github.com/SELinuxProject/selinux](https://github.com/SELinuxProject/selinux).'
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于 SELinux 的内容，可以访问其官方代码库：[https://github.com/SELinuxProject/selinux](https://github.com/SELinuxProject/selinux)。
- en: 'To learn more about iptable configuration, you can check out the following
    book: [https://help.ubuntu.com/community/IptablesHowTo](https://help.ubuntu.com/community/IptablesHowTo).'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想要了解更多关于 iptable 配置的信息，你可以查看以下书籍：[https://help.ubuntu.com/community/IptablesHowTo](https://help.ubuntu.com/community/IptablesHowTo)。
- en: 'Here, you can download the latest version of Kali Linux for free: [https://www.kali.org/downloads/](https://www.kali.org/downloads/).'
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这里，你可以免费下载 Kali Linux 的最新版本：[https://www.kali.org/downloads/](https://www.kali.org/downloads/)。
