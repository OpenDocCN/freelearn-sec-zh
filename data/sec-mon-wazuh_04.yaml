- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Security Automation Using Shuffle
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Shuffle 进行安全自动化
- en: Every day, the average security operations team receives over 11,000 security
    alerts ([https://start.paloaltonetworks.com/forrester-2020-state-of-secops.html](https://start.paloaltonetworks.com/forrester-2020-state-of-secops.html)),
    including suspicious activity, intrusion attempts, privileged user and account
    monitoring, abnormal external communication, and unauthorized access attempts.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每天，平均每个安全运营团队会收到超过 11,000 个安全警报（[https://start.paloaltonetworks.com/forrester-2020-state-of-secops.html](https://start.paloaltonetworks.com/forrester-2020-state-of-secops.html)），包括可疑活动、入侵尝试、特权用户和账户监控、异常的外部通信以及未授权访问尝试。
- en: 'The majority of an analyst’s time (almost 70%) is spent investigating, triaging,
    or responding to alerts, and the majority of these alerts must be processed manually,
    greatly slowing down a company’s alert triage process. According to the same report,
    about 33% of these alerts turn out to be false positives. An SOC analyst can get
    frustrated with this overwhelming number of security alerts and repetitive false
    positives. This leads to the need for security automation, and this is where **SOAR**
    (**Security Orchestration and Automation Response**) plays a critical role. SOAR
    is a set of security features that enables businesses to collaborate on incident
    investigation and automate security operations tasks. The ultimate goal of this
    SOAR is to reduce the **MTTR** (**Mean Time to Respond)**. This is achieved by
    automating every action or response taken by the SOC analyst. As a result, organizations
    stop alert fatigue for the SOC analyst and save them time. There are six core
    elements of SOAR: investigation, incident management, automation, reporting, vulnerability
    management, and threat intelligence. All of these elements are crucial for building
    powerful security automation in a network. Although Wazuh has some of these capabilities
    to build a strong security automation system, we need a third-party tool. In this
    chapter, we will use the Shuffle platform. Shuffle is an open-source security
    automation tool.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 分析师的大部分时间（几乎 70%）都花在调查、分类或响应警报上，而这些警报中的大多数必须手动处理，极大地减慢了公司警报分类的进程。根据同一报告，大约 33%
    的警报结果是误报。SOC 分析师可能会因应对如此大量的安全警报和重复的误报而感到沮丧。这就引出了对安全自动化的需求，而这正是 **SOAR**（**安全编排和自动化响应**）发挥关键作用的地方。SOAR
    是一套安全功能，帮助企业在事件调查中进行协作，并自动化安全操作任务。SOAR 的最终目标是减少 **MTTR**（**平均响应时间**）。这一目标通过自动化
    SOC 分析师采取的每一个行动或响应来实现。因此，组织可以避免 SOC 分析师的警报疲劳，并为他们节省时间。SOAR 有六个核心元素：调查、事件管理、自动化、报告、漏洞管理和威胁情报。这些元素对于构建强大的安全自动化网络至关重要。尽管
    Wazuh 拥有一些构建强大安全自动化系统的能力，但我们仍然需要第三方工具。本章将使用 Shuffle 平台。Shuffle 是一个开源的安全自动化工具。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: What is SOAR?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 SOAR？
- en: How a SOC analyst uses SOAR
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SOC 分析师如何使用 SOAR
- en: Setting up Shuffle SOAR
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Shuffle SOAR
- en: Retrieving Wazuh Alerts
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检索 Wazuh 警报
- en: Remotely managing Wazuh
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程管理 Wazuh
- en: Important Shuffle apps
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重要的 Shuffle 应用
- en: What is SOAR?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 SOAR？
- en: 'According to Gartner, “*Security orchestration, automation and response (SOAR)
    solutions combine incident response, orchestration and automation, and threat
    intelligence (TI) management capabilities in a single platform*.” SOAR tools are
    used to implement processes such as security playbooks, workflows, or processes
    to support a security operation analyst or incident analyst. The functionalities
    of SOAR are as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 Gartner 的说法，“*安全编排、自动化和响应（SOAR）解决方案将事件响应、编排与自动化以及威胁情报（TI）管理功能集成在一个平台中*。”
    SOAR 工具用于实现安全剧本、工作流或过程等，支持安全运营分析师或事件分析师的工作。SOAR 的功能如下：
- en: '**Security orchestration**: Security orchestration involves the coordination
    of security tasks and workflows across several security tools and teams. It aims
    to streamline and optimize a response to security incidents and threats. We can
    create workflows that automate a sequence of security tasks, such as alert triage,
    investigation, containment, and remediation. This also involves the integration
    of a wide range of security tools, such as SIEM, firewalls, endpoint protection,
    and threat intelligence feeds. An example could be orchestrating the isolation
    of a compromised device from a network when a malware alert is detected.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全编排**：安全编排涉及跨多个安全工具和团队协调安全任务和工作流。其目的是简化并优化对安全事件和威胁的响应。我们可以创建自动化的安全任务序列工作流，例如警报分级、调查、遏制和修复。这还包括广泛的安全工具集成，例如SIEM、防火墙、端点保护和威胁情报源。一个示例是，当检测到恶意软件警报时，编排将受感染设备与网络隔离。'
- en: '**Security automation**: Security automation focuses on the execution of predefined
    actions in response to security events or incidents. With event-driven workflows
    and the integration of various security tools, security automation enhances operation
    efficiency, reduces manual errors, and ensures that security responses align with
    organizational policies. An example of security automation in SOAR is automatically
    updating and patching software vulnerabilities as soon as they are discovered.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全自动化**：安全自动化专注于响应安全事件或事故时执行预定义的动作。通过事件驱动的工作流和各种安全工具的集成，安全自动化提高了操作效率，减少了人工错误，并确保安全响应符合组织政策。SOAR中的安全自动化示例是：在发现软件漏洞时，自动更新和修补漏洞。'
- en: '**Incident response**: Incident response involves the processes and actions
    taken when a security incident or data breach occurs. In a SOAR system, incident
    response is made more efficient by orchestrating and automating security tools,
    tasks, executions, and so on. For example, when a data breach is detected, the
    SOAR platform can automatically generate an incident report, notify the relevant
    stakeholders, and initiate a predefined incident response plan.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件响应**：事件响应涉及在发生安全事件或数据泄露时所采取的过程和行动。在SOAR系统中，通过协调和自动化安全工具、任务、执行等，事件响应变得更加高效。例如，当检测到数据泄露时，SOAR平台可以自动生成事件报告、通知相关利益相关者，并启动预定义的事件响应计划。'
- en: SOAR integrates the concepts of security orchestration and security automation
    to provide an all-encompassing incident response strategy.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: SOAR整合了安全编排和安全自动化的概念，以提供全面的事件响应策略。
- en: Next, let’s discuss how an SOC analyst uses a SOAR platform throughout the alert
    and incident life cycle.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们讨论SOC分析师如何在警报和事件生命周期中使用SOAR平台。
- en: How a SOC analyst uses SOAR
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SOC分析师如何使用SOAR
- en: A **Security Operation Center** (**SOC**) analyst is a cybersecurity professional
    responsible for monitoring, detecting, analyzing and mitigating security incidents
    in an organization. The SOC analyst leverages a SOAR platform to enhance the efficiency
    and effectiveness of security operations. By utilizing SOAR, SOC analysts can
    make jobs easier, cut down on reaction times, and make sure that security incidents
    are handled in a more coordinated and consistent way. There are several stages
    within the incident response process where the SOAR platform can be utilized,
    as shown in the following diagram.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全运营中心**（**SOC**）分析师是负责监控、检测、分析和缓解组织中的安全事件的网络安全专业人员。SOC分析师利用SOAR平台提高安全操作的效率和效果。通过使用SOAR，SOC分析师可以简化工作、缩短反应时间，并确保以更协调和一致的方式处理安全事件。事件响应过程中的多个阶段可以利用SOAR平台，如下图所示。'
- en: '![Figure 4.1 – The flow of the incident response and SOAR](img/B19549_4_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图4.1 – 事件响应和SOAR的流程](img/B19549_4_01.jpg)'
- en: Figure 4.1 – The flow of the incident response and SOAR
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 – 事件响应和SOAR的流程
- en: 'Based on the diagram, each stage can be explained as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 基于该图，每个阶段的解释如下：
- en: '**Alert generation**: **SIEM** (**Security Information and Event Management**)
    systems, an **IDS/IPS** (**Intrusion Detection System/Intrusion Prevention System**),
    and endpoint security solutions monitor network and system activity continuously
    for potential threats. Wazuh triggers an alert when there is an event matching
    Wazuh rules, and these alerts can be as follows:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**警报生成**：**SIEM**（**安全信息与事件管理**）系统、**IDS/IPS**（**入侵检测系统/入侵防御系统**）和端点安全解决方案持续监控网络和系统活动，以发现潜在的威胁。Wazuh
    在发生与 Wazuh 规则匹配的事件时触发警报，这些警报可能包括以下内容：'
- en: '**Log analysis alerts**: The Wazuh platform monitors endpoints, network, and
    application logs for any suspicious activities, and if there is a match based
    on the rule, it will trigger an alert – for example, detecting multiple failed
    login attempts within a short period'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志分析警报**：Wazuh 平台监控端点、网络和应用程序日志中的任何可疑活动，如果基于规则存在匹配，将触发警报——例如，检测到短时间内多次登录失败尝试。'
- en: '**Intrusion detection system (IDS) alerts**: When integrated with Suricata
    Network-based IDS, Wazuh can analyze network traffic for signs of malicious activities
    – for example, an alert gets triggered when there is a known vulnerability, network
    scanning, or known exploits'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**入侵检测系统（IDS）警报**：当与基于网络的 Suricata IDS 集成时，Wazuh 可以分析网络流量中的恶意活动迹象——例如，当出现已知漏洞、网络扫描或已知攻击时，警报会被触发。'
- en: '**File Integrity Monitoring (FIM) alerts**: Wazuh has an in-build FIM module
    to detect any unauthorized file changes – for example, unauthorized file modification
    alerts in the root directory of the Ubuntu server'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件完整性监控（FIM）警报**：Wazuh 内置了 FIM 模块，用于检测任何未经授权的文件更改——例如，Ubuntu 服务器根目录中的未经授权的文件修改警报。'
- en: '**Alert triage and prioritization**: The SOAR platform uses predefined security
    rules and logic to prioritize incoming alerts according to their severity, origin,
    and potential impact, such as a brute-force attempt or potential ransomware attack.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**警报分类与优先级排序**：SOAR 平台使用预定义的安全规则和逻辑，根据警报的严重性、来源和潜在影响（如暴力破解尝试或潜在的勒索病毒攻击）对警报进行优先级排序。'
- en: '**Investigation and context gathering**: This step involves three sub-steps
    – playbook execution, automated enrichment, and manual analysis:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**调查与上下文收集**：此步骤包括三个子步骤——操作手册执行、自动化丰富和手动分析：'
- en: '**Playbook execution**: For each alert, SOAR can use an incident response playbook.
    Playbooks are sets of automated and manual actions that guide an analyst through
    the investigation process.'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**操作手册执行**：对于每个警报，SOAR 可以使用事件响应操作手册。操作手册是一组自动化和手动的行动，指导分析员完成调查过程。'
- en: '**Automated enrichment**: The SOAR platform can automatically add context to
    notifications, such as threat intelligence data, historical logs, and asset information.
    This contextual information assists the analyst in determining the alert’s veracity
    and severity.'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**自动化丰富**：SOAR 平台可以自动为通知添加上下文信息，如威胁情报数据、历史日志和资产信息。这些上下文信息帮助分析员判断警报的真实性和严重性。'
- en: '**Manual analysis**: The analyst evaluates the enriched alert and may perform
    additional manual investigation. They may query systems, examine records, and
    utilize their knowledge to determine the nature and scope of the incident.'
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**手动分析**：分析员评估丰富的警报，并可能进行额外的手动调查。他们可能查询系统、检查记录，并利用其知识来确定事件的性质和范围。'
- en: Once the investigation and content gathering are completed, the SOAR playbook
    can be triggered for different actions, as mentioned in the next step.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦调查和内容收集完成，SOAR 操作手册可以触发不同的操作，如下一步所述。
- en: '**Containment, eradication and recovery**: During the containment phase of
    incident response, immediate actions are taken to limit the intensity of an incident,
    involving the isolation of affected endpoints to prevent further damage. This
    is followed by the eradication phase, where organizations focus on removing threats
    from the network. It also involves identifying and eliminating the root cause
    of the incident. Finally, the recovery phase takes care of restoring systems and
    services to their normal operational state.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**遏制、清除与恢复**：在事件响应的遏制阶段，采取立即行动以限制事件的严重性，包括隔离受影响的端点以防止进一步损害。接下来是清除阶段，组织专注于从网络中去除威胁。这还涉及识别并消除事件的根本原因。最后，恢复阶段负责将系统和服务恢复到正常运行状态。'
- en: We’ve learned about how an SOC analyst uses a SOAR platform, using an incident
    response example. In the next section, we will learn about the Shuffle platform.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了 SOC 分析师如何使用 SOAR 平台，通过一个事件响应示例。在下一节中，我们将了解 Shuffle 平台。
- en: Introduction to Shuffle
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shuffle 简介
- en: '**Shuffle** is an open-source interpretation of SOAR. It was built by Fredrik
    Oedegaardstuen. It brings automation with Plug and Play enterprise apps. Shuffle
    relies heavily on Docker and microservices, making its design modular and powerful.
    Let’s discuss some important components and features of Shuffle:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**Shuffle** 是 SOAR 的一个开源实现。它由 Fredrik Oedegaardstuen 构建。它通过即插即用的企业应用带来自动化。Shuffle
    依赖于 Docker 和微服务，使其设计具有模块化和强大的功能。接下来，我们将讨论 Shuffle 的一些重要组件和功能：'
- en: '**Apps and workflows**: Apps are building blocks in workflows. Workflows are
    the part of Shuffle where everything comes together. When you first configure
    Shuffle, it should provide you with more than 100 existing apps. Shuffle covers
    many of the popular apps, as shown in the following screenshot.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用和工作流**：应用是工作流中的构建模块。工作流是 Shuffle 中将所有内容整合在一起的部分。当你第一次配置 Shuffle 时，它应该会提供超过
    100 个现有应用。Shuffle 涵盖了许多流行的应用，如下图所示。'
- en: '![Figure 4.2 – App and workflows in Shuffle](img/B19549_4_02.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.2 – Shuffle 中的应用和工作流](img/B19549_4_02.jpg)'
- en: Figure 4.2 – App and workflows in Shuffle
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2 – Shuffle 中的应用和工作流
- en: '**File analysis**: Shuffle can help you upload and analyze an email attachment
    file with Yara. You can also manually upload a file by going to **Admin** | **Files**.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件分析**：Shuffle 可以帮助你上传并通过 Yara 分析电子邮件附件文件。你也可以通过进入 **管理** | **文件** 手动上传文件。'
- en: '![Figure 4.3 – Files for workflows in Shuffle](img/B19549_4_03.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.3 – Shuffle 中的工作流文件](img/B19549_4_03.jpg)'
- en: Figure 4.3 – Files for workflows in Shuffle
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3 – Shuffle 中的工作流文件
- en: '**Shuffle cache**: Shuffle can help you store any information in the key-value
    pair format. The value will be sticky in nature, and hence, it can be used in
    a timestamp for security reports, maintaining **IOC** (**Indicators of Compromise**)
    lists, and so on. This is available in the form of Shuffle Tools. Whenever we
    use the Shuffle Tools app, we need to set the action type to **Set cache value**
    for caching to work.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Shuffle 缓存**：Shuffle 可以帮助你以键值对格式存储任何信息。值会保持粘性，因此可以用于安全报告中的时间戳、维护 **IOC**（**妥协指标**）列表等。这些功能通过
    Shuffle 工具提供。每当我们使用 Shuffle 工具应用时，需要将操作类型设置为 **设置缓存值**，以便缓存能够工作。'
- en: '![Figure 4.4 – The Shuffle cache](img/B19549_4_04.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4 – Shuffle 缓存](img/B19549_4_04.jpg)'
- en: Figure 4.4 – The Shuffle cache
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4 – Shuffle 缓存
- en: '**Trigger**: To achieve better security automation, Shuffle provides six types
    of Triggers:'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**触发器**：为了实现更好的安全自动化，Shuffle 提供了六种类型的触发器：'
- en: '**Webhooks**: These allow any outside source to send data in real time to Shuffle.'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Webhooks**：这些允许任何外部源实时向 Shuffle 发送数据。'
- en: '**Schedules**: These make it possible to start a workflow on a schedule'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计划任务**：这些功能使得能够按照计划启动工作流。'
- en: '**Subflows**: Want to run another workflow from within your current one? This
    does that exactly.'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**子工作流**：想要在当前工作流中运行另一个工作流吗？这个功能正好能实现。'
- en: '**User input**: Starting or continuing an action based on what an analyst decides.'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户输入**：根据分析师的决定开始或继续执行某个操作。'
- en: '**Office365 Email Trigger**: This gets triggered when an email is received.
    It is useful for phishing analysis.'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Office365 邮件触发器**：当收到电子邮件时触发。它对钓鱼分析非常有用。'
- en: '**Gmail email trigger**: Similar to Office365, Gmail gets a trigger when a
    Google user gets an email.'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Gmail 邮件触发器**：与 Office365 类似，当 Google 用户收到邮件时，Gmail 会触发此操作。'
- en: '**Use cases**: Users can create custom workflows to set up security use cases.
    The use cases in Shuffle are divided into five types – *Collect*, *Enrich*, *Detect*,
    *Respond*, and *Verify*. Each category can have multiple use cases. You can find
    the list all use cases here: [https://shuffler.io/usecases](https://shuffler.io/usecases).'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用例**：用户可以创建自定义工作流来设置安全用例。Shuffle 中的用例分为五种类型——*收集*、*增强*、*检测*、*响应* 和 *验证*。每个类别下可以有多个用例。你可以在这里找到所有用例的列表：[https://shuffler.io/usecases](https://shuffler.io/usecases)。'
- en: Shuffle is a powerful security automation platform, offering full user management,
    multi-factor authentication, single sign-on, multi-tenancy, and a lot more. Now,
    let’s learn to set up Shuffle using a Docker container.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Shuffle 是一个强大的安全自动化平台，提供完整的用户管理、多因素身份验证、单点登录、多租户等功能。现在，让我们学习如何使用 Docker 容器设置
    Shuffle。
- en: Setting up Shuffle SOAR
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Shuffle SOAR
- en: '**Shuffle SOAR** can be deployed in self-hosted or in the cloud. For cloud-based
    deployment, you simply have to visit their official website ([https://shuffler.io/register](https://shuffler.io/register))
    and create an account. In this section, we will learn how to deploy Shuffle SOAR
    using a self-host deployment method. We need to complete the following steps:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**Shuffle SOAR** 可以在自托管或云端部署。对于基于云的部署，您只需访问他们的官方网站（[https://shuffler.io/register](https://shuffler.io/register)）并创建一个账户。在本节中，我们将学习如何使用自托管部署方法来部署
    Shuffle SOAR。我们需要完成以下步骤：'
- en: Requirements
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统要求
- en: Install Shuffle.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Shuffle。
- en: Fix the prerequisites for the Shuffle database.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修复 Shuffle 数据库的前置条件。
- en: Launch Shuffle.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Shuffle。
- en: Requirements
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 系统要求
- en: 'Shuffle can be installed using `docker-compose.yml` script. As pre-requisites,
    we need to have the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Shuffle 可以通过 `docker-compose.yml` 脚本安装。作为前提条件，我们需要以下内容：
- en: Ubuntu Server 22.0 ([https://ubuntu.com/download/server](https://ubuntu.com/download/server))
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu Server 22.0（[https://ubuntu.com/download/server](https://ubuntu.com/download/server)）
- en: Docker and Docker Compose installed
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Docker 和 Docker Compose
- en: Install Shuffle
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 Shuffle
- en: 'When it comes to a Shuffle SOAR self-hosted deployment, currently it is only
    supported by Docker and Kubernetes. Here, we will utilize the Docker deployment
    method, and the package can be downloaded from Docker’s official GitHub repository
    by following these steps:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Shuffle SOAR 的自托管部署，目前只支持 Docker 和 Kubernetes。在这里，我们将使用 Docker 部署方法，您可以通过以下步骤从
    Docker 官方 GitHub 仓库下载该软件包：
- en: '`git clone` command to download the Shuffle codebase from its GitHub repository:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `git clone` 命令从 GitHub 仓库下载 Shuffle 代码库：
- en: '[PRE0]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Change the directory to Shuffle**: Move into the directory where the Shuffle
    code has been cloned:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**切换到 Shuffle 目录**：进入 Shuffle 代码已被克隆的目录：'
- en: '[PRE1]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once you have downloaded the packages, you need to fix some dependency issues
    with the database, as detailed in the next step.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您下载了软件包，您需要修复一些与数据库相关的依赖问题，具体请参见下一步。
- en: Fixing the prerequisites for the Shuffle database
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修复 Shuffle 数据库的前置条件。
- en: 'To avoid issues with the backend database, you are required to set the permissions
    and change the ownership, as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为避免与后台数据库出现问题，您需要设置权限并更改所有权，如下所示：
- en: '`shuffle-database`:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`shuffle-database`：'
- en: '[PRE2]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'chown. You can also use it to assign the directory to a particular user or
    group (1000:1000 in this example):'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: chown。您还可以使用它将目录分配给特定用户或组（在此示例中为 1000:1000）：
- en: '[PRE3]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Launch Shuffle
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动 Shuffle
- en: 'To start Docker Compose, set up and execute Shuffle SOAR in detached mode (`-d
    flag`), which means it will run in the background, and you can continue to use
    your Terminal for other tasks. Use the following command to run Docker compose
    in detached mode:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动 Docker Compose，设置并以分离模式（`-d flag`）执行 Shuffle SOAR，这意味着它将在后台运行，您可以继续使用终端进行其他任务。使用以下命令在分离模式下运行
    Docker Compose：
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: These instructions essentially walk you through the installation and configuration
    of Shuffle, ensuring that all necessary components (the OpenSearch database directory,
    Docker, and Compose) are installed, and then we use Docker Compose to launch the
    Shuffle SOAR platform.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这些说明将引导您完成 Shuffle 的安装和配置，确保所有必要的组件（如 OpenSearch 数据库目录、Docker 和 Compose）已安装，然后我们使用
    Docker Compose 启动 Shuffle SOAR 平台。
- en: In the next section, we will learn to integrate Wazuh with Shuffle SOAR and
    start receiving alerts from the Wazuh platform.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习如何将 Wazuh 与 Shuffle SOAR 集成，并开始接收来自 Wazuh 平台的警报。
- en: Retrieving Wazuh alerts
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取 Wazuh 警报
- en: Wazuh and Shuffle SOAR’s combination offers an excellent synergy for automating
    a variety of security activities. Renowned for its strong threat detection and
    response capabilities, Wazuh gathers data from multiple sources throughout the
    infrastructure to produce alerts and insights. When combined with Shuffle, a SOAR
    platform created to make incident response and automation easier, it makes it
    possible for these alerts to be coordinated easily. By using Shuffle’s automation
    features, the integration lets security teams set up predefined responses to Wazuh
    alerts that are immediately carried out. Shuffle SOAR automates the initial analysis
    of alerts generated by Wazuh, filtering out false positives and prioritizing alerts
    based on severity. This helps security analysts focus on relevant security incidents.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 和 Shuffle SOAR 的结合为自动化多种安全活动提供了极好的协同效应。Wazuh 因其强大的威胁检测和响应能力而闻名，它从整个基础设施的多个来源收集数据，以生成警报和洞察。当与
    Shuffle 结合时，Shuffle 是一个旨在简化事件响应和自动化的 SOAR 平台，使得这些警报能够轻松协调。通过使用 Shuffle 的自动化功能，该集成使安全团队能够设置预定义的响应，这些响应会立即执行。Shuffle
    SOAR 自动化了由 Wazuh 生成的警报的初步分析，过滤掉误报并根据严重性对警报进行优先级排序。这有助于安全分析师将精力集中在相关的安全事件上。
- en: 'This integration makes it possible to automate security tasks that used to
    be done manually, such as sorting alerts, investigating, and taking corrective
    actions. This frees up security teams to work on more important tasks while still
    protecting the network. To integrate Wazuh with Shuffle, we need to follow some
    steps:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 该集成使得自动化处理以前需要手动完成的安全任务成为可能，如排序警报、调查和采取纠正措施。这使得安全团队能够集中精力处理更重要的任务，同时仍然能保护网络安全。要将
    Wazuh 与 Shuffle 集成，我们需要遵循一些步骤：
- en: Integrate Wazuh with Shuffle.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Wazuh 与 Shuffle 集成。
- en: Retrieve Wazuh alerts for abnormal user login analysis.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取 Wazuh 警报以分析异常用户登录。
- en: Retrieve Wazuh alerts for successful login analysis.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取 Wazuh 警报以分析成功的登录。
- en: Integrating Wazuh with Shuffle
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Wazuh 与 Shuffle 集成
- en: 'The best part about Wazuh and Shuffle integration is that Shuffle integration
    scripts are already present in the current version of Wazuh, and hence, we don’t
    have to manually create a new one. We only need to do the following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 与 Shuffle 集成的最佳部分是，Shuffle 集成脚本已包含在当前版本的 Wazuh 中，因此我们不需要手动创建新的脚本。我们只需要执行以下步骤：
- en: '**Create a new Shuffle workflow**: Go to the Shuffle self-hosted or cloud platform,
    and then create a new workflow. Next, from the **Trigger** section, add a Webhook
    node and copy the Webhook URI. Also, start the Webhook.'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建新的 Shuffle 工作流**：前往 Shuffle 的自托管或云平台，然后创建一个新的工作流。接下来，在**触发器**部分，添加一个 Webhook
    节点并复制 Webhook URI。同时，启动 Webhook。'
- en: '![Figure 4.5 – Create a new Workflow in Shuffle](img/B19549_4_05.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5 – 在 Shuffle 中创建新的工作流](img/B19549_4_05.jpg)'
- en: Figure 4.5 – Create a new Workflow in Shuffle
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 在 Shuffle 中创建新的工作流
- en: '`ossec.conf` file located at the following path:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ossec.conf` 文件位于以下路径：'
- en: '[PRE6]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Next, add the following script:'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，添加以下脚本：
- en: '[PRE7]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here, we request Wazuh to push all the level 3 alerts to Shuffle at the Hook
    URL: https://<Shuffle_Server_IP>/api/v1/hooks/webhook_b68508da-0727-436c-8f33-412419222441.'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们请求 Wazuh 将所有级别为 3 的警报推送到 Shuffle 的 Hook URL：https://<Shuffle_Server_IP>/api/v1/hooks/webhook_b68508da-0727-436c-8f33-412419222441。
- en: 'In order for Wazuh to take effect, we need to restart the Wazuh dashboard:'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了使 Wazuh 生效，我们需要重新启动 Wazuh 仪表板：
- en: '[PRE8]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Testing**: Once the integration is complete, we can come back to Shuffle.
    You need to save the workflow and run the test execution.'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试**：一旦集成完成，我们可以返回 Shuffle。你需要保存工作流并运行测试执行。'
- en: '![Figure 4.6 – Test execution](img/B19549_4_06.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6 – 测试执行](img/B19549_4_06.jpg)'
- en: Figure 4.6 – Test execution
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 测试执行
- en: Retrieve Wazuh alerts for abnormal user login analysis
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取 Wazuh 警报以分析异常用户登录
- en: '`sshd: Attempt to login using a non-existent user`, and the alert is shown
    in the following screenshot.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`sshd: 尝试使用不存在的用户登录`，该警报如下图所示。'
- en: '![Figure 4.7 – A Wazuh alert – sshd: Attempt to login using a non-existent
    user](img/B19549_4_07.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7 – 一个 Wazuh 警报 – sshd: 尝试使用不存在的用户登录](img/B19549_4_07.jpg)'
- en: 'Figure 4.7 – A Wazuh alert – sshd: Attempt to login using a non-existent user'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '图 4.7 – 一个 Wazuh 警报 – sshd: 尝试使用不存在的用户登录'
- en: 'Let’s break down the preceding screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来解析前面的截图：
- en: '**Oct 3, 2023 @ 05:59:23.443 sshd: Attempt to login using a non-existent user**:
    This represents the name of the alert.'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**2023年10月3日 @ 05:59:23.443 sshd: 尝试使用不存在的用户登录**：这表示警报的名称。'
- en: '**GeoLocation.city_name**: This represents the city name.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**GeoLocation.city_name**：这表示城市名称。'
- en: '**Oct 3 00:29:22 Wazuh-Agent sshd[3608]: Failed password for invalid user kat
    from 185.255.91.147 port 33872 ssh2**: This represent the full log.'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Oct 3 00:29:22 Wazuh-Agent sshd[3608]: Failed password for invalid user kat
    from 185.255.91.147 port 33872 ssh2**：这代表完整的日志。'
- en: '**decoder.name: sshd**: This represents the extracted Wazuh’s decoder. In this
    case, it is **sshd**.'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**decoder.name: sshd**：这表示提取的 Wazuh 解码器。在此情况下，它是 **sshd**。'
- en: Retrieving alerts on Shuffle
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Shuffle 上检索警报
- en: 'In order to retrieve these alerts on Shuffle, we need to follow a three-step
    process:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 Shuffle 上检索这些警报，我们需要遵循一个三步过程：
- en: '**Create a** **Shuffle workflow**:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建一个** **Shuffle 工作流**：'
- en: Go to the Shuffle platform and click on **New workflows**. Then, select **Webhook**
    from the left-side **Workflow starters** menu under **Triggers**, and drag and
    drop it to the workflow editor.
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 Shuffle 平台，点击 **新建工作流**。然后，从左侧的 **工作流启动器** 菜单下的 **触发器** 中选择 **Webhook**，并将其拖放到工作流编辑器中。
- en: '![Figure 4.8 – A Shuffle workflow with a Webhook](img/B19549_4_08.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.8 – 一个带有 Webhook 的 Shuffle 工作流](img/B19549_4_08.jpg)'
- en: Figure 4.8 – A Shuffle workflow with a Webhook
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8 – 一个带有 Webhook 的 Shuffle 工作流
- en: Next, click on the Webhook node and copy the Webhook URI. This URI will be used
    as the hook URL in the Wazuh manager. If you chose a self-hosted version of Shuffle,
    you would see the IP address instead of shuffler.io ([http://shuffler.io](http://shuffler.io))
    in the URI.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击 Webhook 节点并复制 Webhook URI。这个 URI 将作为 Wazuh 管理器中的挂钩 URL。如果您选择了 Shuffle
    的自托管版本，您将在 URI 中看到 IP 地址，而不是 shuffler.io（[http://shuffler.io](http://shuffler.io)）。
- en: '![Figure 4.9 – Retrieving the Shuffle Webhook URI](img/B19549_4_09.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9 – 检索 Shuffle Webhook URI](img/B19549_4_09.jpg)'
- en: Figure 4.9 – Retrieving the Shuffle Webhook URI
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – 检索 Shuffle Webhook URI
- en: '`ossec.conf` file, located in the following path:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ossec.conf` 文件，位于以下路径：'
- en: '[PRE9]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, add the following script:'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，添加以下脚本：
- en: '[PRE10]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Let’s break down the preceding code:'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 让我们分析一下上面的代码：
- en: '`Rule_id 5710` is the Wazuh in-built rule used to detect the `Attempt to login`
    using a non-existent user alert'
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Rule_id 5710` 是 Wazuh 内建规则，用于检测 `尝试登录` 使用不存在的用户警报'
- en: '`Rule_id 5503` and `5760` are related to SSH login failure'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Rule_id 5503` 和 `5760` 与 SSH 登录失败相关'
- en: '`Get_User_Logins` node and save the workflow. Next, start the node.'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Get_User_Logins` 节点并保存工作流。接下来，启动该节点。'
- en: '![Figure 4.10 – Start the Webhook URI](img/B19549_4_10.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10 – 启动 Webhook URI](img/B19549_4_10.jpg)'
- en: Figure 4.10 – Start the Webhook URI
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10 – 启动 Webhook URI
- en: 'Next, add Shuffle Tools from the `Get_User_Logins` node. Make sure you set
    the following:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从 `Get_User_Logins` 节点添加 Shuffle 工具。确保设置以下内容：
- en: '[PRE11]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, let’s run the test execution and then click on the show execution button.
    If everything is good, you should see all the alerts, as shown in the following
    screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们运行测试执行，然后点击显示执行按钮。如果一切正常，您应该能看到所有警报，如下图所示：
- en: '![Figure 4.11 – Wazuh alerts received on Shuffle](img/B19549_4_11.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.11 – Wazuh 警报接收到 Shuffle](img/B19549_4_11.jpg)'
- en: Figure 4.11 – Wazuh alerts received on Shuffle
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11 – Wazuh 警报接收到 Shuffle
- en: Once you expand any part of the alert, you will see the entire alert in JSON
    format.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您展开警报的任何部分，您将看到整个警报以 JSON 格式显示。
- en: '![Figure 4.12 – A Wazuh alert in the JSON format](img/B19549_4_12.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.12 – Wazuh 警报的 JSON 格式](img/B19549_4_12.jpg)'
- en: Figure 4.12 – A Wazuh alert in the JSON format
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12 – Wazuh 警报的 JSON 格式
- en: Retrieving Wazuh alerts for successful login analysis
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检索 Wazuh 警报以分析成功登录
- en: 'Analyzing successful logins is just as important as analyzing failed or abnormal
    login attempts, as it helps to detect unauthorized access, monitor privileged
    access, monitor for anomalies, and much more. To retrieve Wazuh alerts for successful
    logins, we only need to make the following changes to the previous steps:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 分析成功的登录和分析失败或异常的登录尝试同样重要，因为它有助于检测未经授权的访问，监控特权访问，监控异常情况等。为了检索 Wazuh 警报以分析成功的登录，我们只需要对先前的步骤做出以下更改：
- en: Create a new workflow,
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的工作流，
- en: 'Add new integration tags, as follows:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加新的集成标签，如下所示：
- en: '[PRE12]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Here, `rule_id 5715` indicates a successful login to the device. Additionally,
    you need to replace `hook_url` with a newly generated URI.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里，`rule_id 5715` 表示成功登录到设备。此外，您需要将 `hook_url` 替换为新生成的 URI。
- en: Now that we understand how to retrieve Wazuh alerts, we should be made aware
    of some advanced nodes to conduct enrichment, security investigation, incident
    responses, and so on.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何检索 Wazuh 警报，我们应该了解一些高级节点，以便进行丰富、安保调查、事件响应等。
- en: Remotely managing Wazuh
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 远程管理 Wazuh
- en: 'Shuffle SOAR is capable of automating multiple security operation activities.
    When it comes to managing the Wazuh manager and its agent, there is a manual element
    where a security analyst has to manually add/remove/modify different attributes.
    The good news is that Wazuh provides a Wazuh API to allow a trusted party to communicate
    and send required data. In this section, we will remotely manage multiple Wazuh-related
    tasks, such as managing agents, rules, CDB lists, agent groups, and decoders.
    We will cover the following topics in this section:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Shuffle SOAR 能够自动化多个安全操作活动。当涉及到管理 Wazuh 管理器及其代理时，仍然有一个手动环节，安全分析员需要手动添加/移除/修改不同的属性。好消息是，Wazuh
    提供了一个 Wazuh API，允许可信方进行通信并发送所需数据。在本节中，我们将远程管理多个与 Wazuh 相关的任务，如管理代理、规则、CDB 列表、代理组和解码器。本节将涵盖以下内容：
- en: Requirements
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求
- en: Managing Wazuh agents
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理 Wazuh 代理
- en: Requirement
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 要求
- en: To remotely manage Wazuh using Shuffle SOAR, we need to set up three things
    – authentication, JWT token generation, and subsequent API requests.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Shuffle SOAR 远程管理 Wazuh，我们需要设置三件事——认证、JWT 令牌生成和随后的 API 请求。
- en: Authentication
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 认证
- en: In order to allow Shuffle to talk to the Wazuh manager, Shuffle initiates the
    authentication process by providing valid authentication. The default credential
    of the Wazuh API is the username `wazuh-wui` and the password `wazuh-wui`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Shuffle 能够与 Wazuh 管理器进行通信，Shuffle 通过提供有效的认证信息来启动认证过程。Wazuh API 的默认凭证是用户名
    `wazuh-wui` 和密码 `wazuh-wui`。
- en: 'Go to Shuffle and create a new workflow, and then follow these steps:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 进入 Shuffle，创建一个新的工作流，然后按照以下步骤操作：
- en: From the **Search Active Apps** section, find the **Http** app and drag and
    drop it into the workflow editor.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **搜索活动应用** 部分，找到 **Http** 应用并将其拖放到工作流编辑器中。
- en: '![Figure 4.13 – Creating an Http app in a workflow](img/B19549_4_13.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.13 – 在工作流中创建 Http 应用](img/B19549_4_13.jpg)'
- en: Figure 4.13 – Creating an Http app in a workflow
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13 – 在工作流中创建 Http 应用
- en: 'Next, we will create a `curl` query for authentication, as shown in the following
    diagram:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个用于认证的 `curl` 查询，如下图所示：
- en: '![Figure 4.14 – Authentication using the curl command](img/B19549_4_14.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.14 – 使用 curl 命令进行认证](img/B19549_4_14.jpg)'
- en: Figure 4.14 – Authentication using the curl command
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14 – 使用 curl 命令进行认证
- en: Set a relevant name for the node.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为节点设置一个相关名称。
- en: Set **Action** to **Curl**.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **操作** 设置为 **Curl**。
- en: 'Write a `curl` statement:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个 `curl` 语句：
- en: '[PRE13]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Finally, save and click the **Test** **Execute** button.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，保存并点击 **测试** **执行** 按钮。
- en: '![Figure 4.15 – Save and execute the curl Command on Shuffle](img/B19549_4_15.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.15 – 在 Shuffle 中保存并执行 curl 命令](img/B19549_4_15.jpg)'
- en: Figure 4.15 – Save and execute the curl Command on Shuffle
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15 – 在 Shuffle 中保存并执行 curl 命令
- en: JWT token generation
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JWT 令牌生成
- en: Upon successful authentication, Wazuh generates a **JSON Web Token** (**JWT**).
    JWTs are often used for authentication and authorization in web applications and
    APIs.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在认证成功后，Wazuh 会生成一个 **JSON Web 令牌** (**JWT**)。JWT 通常用于 Web 应用和 API 中的认证与授权。
- en: '![Figure 4.16 – JWT Token generation](img/B19549_4_16.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.16 – JWT 令牌生成](img/B19549_4_16.jpg)'
- en: Figure 4.16 – JWT Token generation
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.16 – JWT 令牌生成
- en: The subsequent API request
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 后续的 API 请求
- en: 'Shuffle can now access all of Wazuh’s protected resources by inserting a JWT
    token into the HTTP request:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: Shuffle 现在可以通过在 HTTP 请求中插入 JWT 令牌来访问 Wazuh 所有的受保护资源：
- en: '[PRE14]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Let’s break down the preceding code:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来解析一下前面的代码：
- en: '`-k`: This states that `curl` will allow connections to SSL/TLS-protected (HTTPS)
    sites without verifying the server’s SSL certificate.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-k`：这表示 `curl` 将允许连接到 SSL/TLS 保护（HTTPS）站点，而无需验证服务器的 SSL 证书。'
- en: '`-X <Method>`: This `curl` option talks about HTTP request methods such as
    `GET`, `POST`, `PUT,` and `DELETE`.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-X <方法>`：这是 `curl` 选项，指定 HTTP 请求方法，如 `GET`、`POST`、`PUT` 和 `DELETE`。'
- en: '`<ENDPOINT>`: This represents the specific endpoint or resource on the Wazuh
    manager, such as agents, groups, lists, rules, and decoders.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ENDPOINT>`：这表示 Wazuh 管理器上特定的端点或资源，如代理、组、列表、规则和解码器。'
- en: '`-H`: This is another `curl` option that adds an HTTP header to the request.
    In the preceding example, we added an `Authorization` header with a `Bearer` value
    to the JWT token.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-H`：这是另一个 `curl` 选项，用于向请求添加 HTTP 头。在上面的示例中，我们为 JWT 令牌添加了一个 `Authorization`
    头，并赋予其 `Bearer` 值。'
- en: Managing Wazuh agents
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理 Wazuh 代理
- en: We can use the Shuffle tool to manage Wazuh agents for information gathering
    and incident response. Wazuh API allows you to add a new agent, remove agents,
    restart agents, upgrade agents, and retrieve outdated agents using the Shuffle
    tool.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Shuffle 工具来管理 Wazuh 代理，以便进行信息收集和事件响应。Wazuh API 允许你使用 Shuffle 工具添加新代理、移除代理、重启代理、升级代理以及检索过时的代理。
- en: 'If you follow the previous steps, you must have retrieved the JWT token. Let’s
    create a new Shuffle workflow with HTTP nodes, as shown in the following screenshot:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你按照前面的步骤操作，应该已经检索到了 JWT token。让我们创建一个新的 Shuffle 工作流，并添加 HTTP 节点，如下图所示：
- en: '![Figure 4.17 – Retrieving Wazuh agent information](img/B19549_4_17.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.17 – 检索 Wazuh 代理信息](img/B19549_4_17.jpg)'
- en: Figure 4.17 – Retrieving Wazuh agent information
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17 – 检索 Wazuh 代理信息
- en: 'To configure the new workflow, you need to follow the following steps:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置新的工作流，请按照以下步骤操作：
- en: Add a new **Http** node.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个新的 **Http** 节点。
- en: Enter a name – `Agent_info`.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入名称 – `Agent_info`。
- en: Set **Find Actions** to **Curl**.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **查找操作** 设置为 **Curl**。
- en: 'Write a `curl` command:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写 `curl` 命令：
- en: '[PRE15]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Next, save and test execute the workflow. You will get an output with all the
    agent information.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，保存并测试执行该工作流。你将获得包含所有代理信息的输出。
- en: '![Figure 4.18 – Receiving the Wazuh agent information](img/B19549_4_18.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.18 – 接收 Wazuh 代理信息](img/B19549_4_18.jpg)'
- en: Figure 4.18 – Receiving the Wazuh agent information
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.18 – 接收 Wazuh 代理信息
- en: 'Let’s break down the preceding screenshot:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析一下前面的截图：
- en: '**Status SUCCESS**: This shows that the API request was successful.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**状态 SUCCESS**：这表示 API 请求成功。'
- en: '**“affected items”**: This shows the content of the response message. In this
    case, we have four items about the agent information.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**“受影响的项目”**：这显示了响应消息的内容。在这种情况下，我们有四个关于代理信息的项目。'
- en: To learn more about managing Wazuh agents, refer to Wazuh’s official documentation
    at https://documentation.wazuh.com/current/user-manual/api/reference.html#tag/Agents.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于管理 Wazuh 代理的信息，请参考 Wazuh 官方文档：https://documentation.wazuh.com/current/user-manual/api/reference.html#tag/Agents。
- en: We have learned to manage Wazuh remotely using its API. In the following section,
    we will learn about some important apps and the integration of Shuffle.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学会了使用 Wazuh 的 API 远程管理 Wazuh。接下来，我们将了解一些重要的应用程序以及 Shuffle 的集成。
- en: Important Shuffle apps
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重要的 Shuffle 应用
- en: The integration of Wazuh and Shuffle SOAR helps a security team to automate
    multiple recurring activities. It introduces a paradigm shift in approaching incidents,
    faster response time, phishing analysis, managing Wazuh, and much more. Shuffle
    SOAR support integration with hundreds of security tools. In this section, we
    will discuss some important apps and their integration with Wazuh.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 和 Shuffle SOAR 的集成帮助安全团队自动化多个重复的活动。它在处理事件、加速响应时间、钓鱼分析、管理 Wazuh 等方面引入了一个范式转变。Shuffle
    SOAR 支持与数百种安全工具的集成。在本节中，我们将讨论一些重要的应用程序及其与 Wazuh 的集成。
- en: Incident enrichment using TheHive
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 TheHive 进行事件补充
- en: TheHive is a powerful and a scalable security incident response tool designed
    for SOCs , **CSIRTs** (**Computer Security Incident Response Teams**), and **CERTs**
    (**Computer Emergency Response Teams**). We can use TheHive app in a Shuffle workflow
    to add enrichment to every alert before conducting a manual security investigation.
    Once you integrate TheHive with a Shuffle workflow, you can execute multiple tasks
    on TheHive by using API endpoints, as shown here.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: TheHive 是一个强大且可扩展的安全事件响应工具，专为 SOC（安全运营中心）、**CSIRT**（**计算机安全事件响应团队**）和 **CERT**（**计算机应急响应团队**）设计。我们可以在
    Shuffle 工作流中使用 TheHive 应用程序，在进行手动安全调查之前为每个警报添加补充信息。一旦将 TheHive 与 Shuffle 工作流集成，就可以通过
    API 端点执行 TheHive 上的多个任务，如此处所示。
- en: '![Figure 4.19 – TheHive API endpoints](img/B19549_4_19.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.19 – TheHive API 端点](img/B19549_4_19.jpg)'
- en: Figure 4.19 – TheHive API endpoints
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.19 – TheHive API 端点
- en: 'An **API endpoint** is essentially a unique **Uniform Resource Identifier**
    (**URL**) or URI that provides access to an API. It facilitates communication
    between various software applications by serving as a point of interaction. In
    our case, TheHive allows Shuffle to access its capabilities using different API
    endpoints. For example, if you want to create a case in TheHive tool, you can
    use the **Create case** endpoint using the **POST** method, as shown here:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 端点** 本质上是一个唯一的 **统一资源标识符**（**URL**）或 URI，它提供访问 API 的途径。它通过作为互动的接口，促进了不同软件应用程序之间的通信。在我们的案例中，TheHive
    允许 Shuffle 使用不同的 API 端点访问其功能。例如，如果你想在 TheHive 工具中创建一个案例，可以使用 **创建案例** 端点，使用 **POST**
    方法，如下所示：'
- en: '![Figure 4.20 – The Create case endpoint on TheHive platform](img/B19549_4_20.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.20 – TheHive 平台上的创建案件端点](img/B19549_4_20.jpg)'
- en: Figure 4.20 – The Create case endpoint on TheHive platform
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.20 – TheHive 平台上的创建案件端点
- en: 'Let’s break down the preceding screenshot:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来分析一下前面的截图：
- en: '**Apikey**: This is the API key for the TheHive platform'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apikey**：这是 TheHive 平台的 API 密钥'
- en: '**Url**: This is the complete URL for TheHive platform'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Url**：这是 TheHive 平台的完整 URL'
- en: Let’s look at sample workflow published by the Shuffle community. The following
    workflow starts by receiving a Wazuh alert and then creating a case in TheHive,
    adding an observable to TheHive case, retrieving artifacts, and finally, running
    TheHive/Cortex analyzer against MISP and VirusTotal.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看 Shuffle 社区发布的示例工作流。以下工作流首先接收一个 Wazuh 警报，然后在 TheHive 中创建一个案件，向该案件添加一个可观察项，提取工件，最后在
    MISP 和 VirusTotal 上运行 TheHive/Cortex 分析器。
- en: '![Figure 4.21 – Automating TheHive case enrichment using Shuffle](img/B19549_4_21.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.21 – 使用 Shuffle 自动化 TheHive 案件丰富](img/B19549_4_21.jpg)'
- en: Figure 4.21 – Automating TheHive case enrichment using Shuffle
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.21 – 使用 Shuffle 自动化 TheHive 案件丰富
- en: 'The link to access this sample workflow is available here: [https://shuffler.io/workflows/4e9f5826-a7fc-4cc1-b21d-0c7d231bcfa7?queryID=17e8f00cbed5d69823b1a0ad665d4b48](https://shuffler.io/workflows/4e9f5826-a7fc-4cc1-b21d-0c7d231bcfa7?queryID=17e8f00cbed5d69823b1a0ad665d4b48).'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 访问此示例工作流的链接如下：[https://shuffler.io/workflows/4e9f5826-a7fc-4cc1-b21d-0c7d231bcfa7?queryID=17e8f00cbed5d69823b1a0ad665d4b48](https://shuffler.io/workflows/4e9f5826-a7fc-4cc1-b21d-0c7d231bcfa7?queryID=17e8f00cbed5d69823b1a0ad665d4b48)。
- en: Note
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The preceding sample workflow can be used once you submit all the required information,
    such as the Wazuh Webhook URI, TheHive API key and URL, and other essential information.
    Also, ensure that MISP and VirusTotal are already integrated with TheHive/Cortex
    to execute the analyzer, as mentioned in the preceding workflow.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦提交所有必需的信息，如 Wazuh Webhook URI、TheHive API 密钥和 URL 以及其他必要信息，您就可以使用上述示例工作流。此外，确保
    MISP 和 VirusTotal 已与 TheHive/Cortex 集成，以便执行分析器，如前述工作流所示。
- en: Malware analysis using YARA
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 YARA 进行恶意软件分析
- en: '**YARA** is a tool that empowers malware researchers in identifying and categorizing
    malware samples. It’s a free and open source program that works on Linux, Windows,
    and macOS. We can use the YARA tool in a Shuffle workflow to analyze an email
    attachment file or any other file, based on the custom rules defined by malware
    researchers. Let’s take a look at the sample workflow here.'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '**YARA** 是一款帮助恶意软件研究人员识别和分类恶意软件样本的工具。它是一个免费的开源程序，支持 Linux、Windows 和 macOS。我们可以在
    Shuffle 工作流中使用 YARA 工具来分析电子邮件附件文件或其他任何文件，依据恶意软件研究人员定义的自定义规则。让我们来看一下这里的示例工作流。'
- en: '![Figure 4.22 – Automated file analysis using YARA](img/B19549_4_22.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.22 – 使用 YARA 自动化文件分析](img/B19549_4_22.jpg)'
- en: Figure 4.22 – Automated file analysis using YARA
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.22 – 使用 YARA 自动化文件分析
- en: The preceding workflow was created by Taylor Walton. This workflow starts by
    adding an email attachment to TheHive, then creating an alert on TheHive, and
    finally, running a YARA scan. To run the YARA scan against each email attachment,
    we can prepend this workflow as follows.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 上述工作流是由 Taylor Walton 创建的。该工作流首先将电子邮件附件添加到 TheHive，然后在 TheHive 上创建一个警报，最后运行
    YARA 扫描。要对每个电子邮件附件运行 YARA 扫描，我们可以将此工作流按如下方式进行预处理。
- en: '![Figure 4.23 – An email collection workflow](img/B19549_4_23.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.23 – 电子邮件收集工作流](img/B19549_4_23.jpg)'
- en: Figure 4.23 – An email collection workflow
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.23 – 电子邮件收集工作流
- en: Messaging and collaboration tools
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 消息和协作工具
- en: 'Shuffle has a range of workplace collaboration application integration tools,
    such as Microsoft Teams, Slack, Discord, Outlook, and Gmail. Each application
    provides tons of API endpoints such as the following:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Shuffle 提供了一系列的工作场所协作应用程序集成工具，如 Microsoft Teams、Slack、Discord、Outlook 和 Gmail。每个应用程序提供大量的
    API 端点，例如以下内容：
- en: Retrieving emails and creating a message on Outlook
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检索电子邮件并在 Outlook 上创建消息
- en: Creating a new chat on Slack
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Slack 上创建一个新聊天
- en: Writing a message to a group on Microsoft Teams and so on
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Microsoft Teams 中向一个小组发送消息，等等
- en: Threat intelligence platforms
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 威胁情报平台
- en: 'Shuffle SOAR can be integrated with threat intelligence platforms such as MISP,
    AbuseIPDB, and AlienVault OTX, expanding its ability to collect and correlate
    different threat data:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: Shuffle SOAR 可以与威胁情报平台集成，如 MISP、AbuseIPDB 和 AlienVault OTX，扩展其收集和关联不同威胁数据的能力：
- en: '**MISP**: Shuffle SOAR connects to MISP to gain access to a collaborative threat
    intelligence-sharing platform, facilitating the exchange of structured threat
    information.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MISP**：Shuffle SOAR 连接到 MISP，以访问一个协作的威胁情报共享平台，促进结构化威胁信息的交换。'
- en: '**AbuseIPDB**: Integration with AbuseIPDB provides quick access to crowdsourced
    threat data relating to malicious IP addresses, improving the platform’s ability
    to detect and block possible threats.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AbuseIPDB**：与 AbuseIPDB 的集成提供了对恶意 IP 地址相关的众包威胁数据的快速访问，增强了平台检测和阻止潜在威胁的能力。'
- en: '**AlienVault OTX**: Integrating with AlienVault OTX improves threat visibility
    by leveraging its vast store of threat indicators and worldwide data. This thorough
    connection enables Shuffle SOAR users to investigate and respond to security issues
    in depth by accessing richer, real-time threat intelligence from a variety of
    trusted sources.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AlienVault OTX**：与 AlienVault OTX 集成，通过利用其庞大的威胁指标库和全球数据，提高了威胁可视化。这一全面的连接使
    Shuffle SOAR 用户能够深入调查和响应安全问题，访问来自多个可信源的更丰富、实时的威胁情报。'
- en: Endpoint protection/antivirus software
  id: totrans-236
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 终端保护/杀毒软件
- en: Shuffle provides a seamless integration with top-tier endpoint protection and
    antivirus solutions such as CrowdStrike Falcon, Windows Defender, Sophos, and
    BlackBerry Cylance, improving its efficacy in incident response and threat prevention.
    This integration enables direct communication and orchestration between the centralized
    platform of Shuffle SOAR and these security technologies, enabling automated response
    actions based on identified threats or incidents. Once integrated, we can create
    a Shuffle workflow to retrieve alerts from endpoint protection and send them to
    TheHive for further analysis, get detection rules from CrowdStrike, and so on.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: Shuffle 提供与顶级终端保护和杀毒解决方案的无缝集成，如 CrowdStrike Falcon、Windows Defender、Sophos 和
    BlackBerry Cylance，提高其在事件响应和威胁防护方面的效果。此集成使 Shuffle SOAR 的集中平台与这些安全技术之间能够进行直接通信和协调，从而基于识别的威胁或事件启用自动响应操作。一旦集成完成，我们可以创建
    Shuffle 工作流，从终端保护中提取警报并将其发送到 TheHive 进行进一步分析，获取 CrowdStrike 的检测规则等等。
- en: Summary
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the purpose of SOAR and how an SOC analyst
    uses SOAR in a real-world environment. We also learned how to set up a Shuffle
    SOAR platform using a Docker Compose environment and fixed some backend related
    issues. This chapter continued with the integration of Wazuh with Shuffle to receive
    alerts from Wazuh in real time. Finally, we learned how to remotely manage Wazuh
    using API integration and also covered some popular third-party integrations with
    Shuffle.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章，我们学习了 SOAR 的目的以及 SOC 分析师如何在实际环境中使用 SOAR。我们还学习了如何使用 Docker Compose 环境设置
    Shuffle SOAR 平台，并修复了一些与后台相关的问题。本章继续介绍了 Wazuh 与 Shuffle 的集成，以便实时接收来自 Wazuh 的警报。最后，我们学习了如何通过
    API 集成远程管理 Wazuh，并涵盖了一些与 Shuffle 的流行第三方集成。
- en: In the next chapter, we will learn about Wazuh’s active response module to build
    a proactive incident response system. We will also cover some practical incident
    response use cases.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将学习 Wazuh 的主动响应模块，以构建一个主动的事件响应系统。我们还将介绍一些实际的事件响应使用案例。
