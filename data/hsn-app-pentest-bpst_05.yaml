- en: Preparing for an Application Penetration Test
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备应用程序渗透测试
- en: In this chapter, we are going to pentest various vulnerable applications via
    Burp to better understand how we can pentest efficiently with Burp Suite.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过Burp对各种易受攻击的应用程序进行渗透测试，以更好地了解如何可以有效地使用Burp Suite进行渗透测试。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Setup of vulnerable web applications
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易受攻击的Web应用程序的设置
- en: Reconnaissance and file discovery
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 侦察和文件发现
- en: Testing authentication schema with Burp
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Burp测试身份验证模式
- en: Setup of vulnerable web applications
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 易受攻击的Web应用程序的设置
- en: 'In order for us to commence with this chapter, the reader will have to download
    the following vulnerable apps:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让我们开始本章，读者将不得不下载以下易受攻击的应用程序：
- en: Xtreme Vulnerable Web Application
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 极端易受攻击的Web应用程序
- en: OWASP Broken Web Applications
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP Broken Web Applications
- en: Setting up Xtreme Vulnerable Web Application
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置极端易受攻击的Web应用程序
- en: 'In order to set up the Xtreme Vulnerable Web Application, follow these steps:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置极端易受攻击的Web应用程序，请按照以下步骤操作：
- en: Download the Xtreme Vulnerable Web Application; visit [https://download.vulnhub.com/xvwa/](https://download.vulnhub.com/xvwa/)
    and click on `xvwa.iso`
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载极端易受攻击的Web应用程序；访问[https://download.vulnhub.com/xvwa/](https://download.vulnhub.com/xvwa/)，然后点击“xvwa.iso”。
- en: 'Once downloaded, open VirtualBox and click on New:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载后，打开VirtualBox，然后点击“新建”。
- en: '![](img/a86747de-adb5-4943-9075-10961de7fba1.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a86747de-adb5-4943-9075-10961de7fba1.png)'
- en: 'Set the name of the new virtual machine. We have given it the following name:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置新虚拟机的名称。我们已经给它以下名称：
- en: '![](img/80d4adf4-e585-4d98-8014-2f5463b15c48.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80d4adf4-e585-4d98-8014-2f5463b15c48.png)'
- en: 'Provide around 1024 MB of RAM, as shown in the following screenshot:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供大约1024 MB的RAM，如下面的屏幕截图所示：
- en: '![](img/cb8b621f-fb84-4a08-8b58-2f476f3b2ee8.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cb8b621f-fb84-4a08-8b58-2f476f3b2ee8.png)'
- en: Next, ...
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，...
- en: Setting up OWASP Broken Web Application
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置OWASP Broken Web Application
- en: 'In order to set up the OWASP Broken Web Application, follow these steps:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置OWASP Broken Web Application，请按照以下步骤操作：
- en: Download the OWASP BWA from: [https://download.vulnhub.com/owaspbwa/](https://download.vulnhub.com/owaspbwa/);
    go to website and click on `OWASP_Broken_Web_Apps_VM_1.2.7z`.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下网址下载OWASP BWA：[https://download.vulnhub.com/owaspbwa/](https://download.vulnhub.com/owaspbwa/)；转到网站，然后点击“OWASP_Broken_Web_Apps_VM_1.2.7z”。
- en: Once downloaded, open VirtualBox and, as shown in the following screenshot,
    click on New.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载后，打开VirtualBox，并如下图所示，点击“新建”。
- en: 'Set the name of the new virtual machine. We have given it the following name:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置新虚拟机的名称。我们已经给它以下名称：
- en: '![](img/5893c761-1f94-4240-a41c-5c9158398ea6.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5893c761-1f94-4240-a41c-5c9158398ea6.png)'
- en: 'Provide around 1024 MB of RAM and then, select the option Use an existing virtual
    hard disk file, as shown in the following screenshot:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供大约1024 MB的RAM，然后选择使用现有的虚拟硬盘文件选项，如下面的屏幕截图所示：
- en: '![](img/9c04b8ce-c9ab-4672-b432-581f8c4bd3e4.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9c04b8ce-c9ab-4672-b432-581f8c4bd3e4.png)'
- en: Select the extracted OWASP Web Apps `.vmdk` file and click on Create. This will
    create a virtual machine. To start this virtual machine, select the machine from
    the list of machines and click on the Start button.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择提取的OWASP Web Apps `.vmdk`文件，然后点击创建。这将创建一个虚拟机。要启动此虚拟机，请从虚拟机列表中选择该虚拟机，然后单击“启动”按钮。
- en: Testing for authentication via Burp
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Burp进行身份验证测试
- en: This topic primarily talks about trying to brute force authentication pages
    in case rate limiting is not put into place. We will be learning how we can use
    Burp on various login pages to try and brute force the authentication with a set
    of username and password dictionaries. Lastly, we will also check if the authentication
    page is vulnerable to SQL injection.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本主题主要讨论在没有设置速率限制的情况下尝试暴力破解认证页面。我们将学习如何在各种登录页面上使用Burp尝试暴力破解具有一组用户名和密码字典的认证。最后，我们还将检查认证页面是否容易受到SQL注入的攻击。
- en: Brute forcing login pages using Burp Intruder
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Burp Intruder暴力破解登录页面
- en: Let us not waste time and quickly head on to a few of the applications to see
    how we can use Burp to brute force credentials on authentication pages. The first
    application we will brute force is OrangeHRM in the OWASP BWA list.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们不浪费时间，快速前往一些应用程序，看看我们如何使用Burp在认证页面上暴力破解凭据。我们将首先暴力破解OWASP BWA列表中的OrangeHRM应用程序。
- en: '![](img/b68a9314-73a9-448e-8841-5bff0669f1c4.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b68a9314-73a9-448e-8841-5bff0669f1c4.png)'
- en: 'Once you open the app, you will be shown a login page; there is no option to
    register this application. So we have two options, either test for SQL injection
    or brute-force dictionary-based passwords with the hope that one of the username
    and password combinations hit valid. The following screenshot shows the homepage:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您打开应用程序，将显示登录页面；没有注册此应用程序的选项。因此，我们有两个选择，要么测试SQL注入，要么暴力破解基于字典的密码，希望其中一个用户名和密码组合有效。以下屏幕截图显示了主页：
- en: '![](img/c69978bb-809f-4c5a-ba2c-ddf25fd741f8.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c69978bb-809f-4c5a-ba2c-ddf25fd741f8.png)'
- en: 'The default credentials of this application is `admin`:`admin`, however, for
    the purpose of showing how we can brute force the login page, the password has
    been changed to another dictionary word. Let us go ahead and type any random username
    and password, `test` and `test`, and click on Login. Ensure that while you do,
    your proxy is on and you receive the intercept to send this request to the intruder,
    as shown in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 该应用程序的默认凭据是`admin`:`admin`，但是，为了展示我们如何可以暴力破解登录页面，密码已更改为另一个字典词。让我们继续输入任意随机用户名和密码，`test`和`test`，然后点击登录。确保在这样做时，您的代理已打开，并且您收到拦截以将此请求发送到入侵者，如下面的屏幕截图所示：
- en: '![](img/3ce96fac-ce63-4b5c-b79b-8c9671988a5b.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ce96fac-ce63-4b5c-b79b-8c9671988a5b.png)'
- en: 'Go to the Intruder tab and click on the Clear § button to remove all the predefined
    attack points. Our core concern is to attack the username and password values,
    so we select the username and password fields and add them to our attack points,
    and change the Attack type to Cluster bomb, as shown in the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 转到入侵者选项卡，单击“清除”按钮以删除所有预定义的攻击点。我们的核心关注点是攻击用户名和密码值，因此我们选择用户名和密码字段，并将它们添加到我们的攻击点，并将攻击类型更改为集束炸弹，如下面的屏幕截图所示：
- en: '![](img/657a6572-c8a7-40cd-a3a4-91c41e77f54d.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/657a6572-c8a7-40cd-a3a4-91c41e77f54d.png)'
- en: 'Now, before we proceed ahead, let us understand why we selected cluster bomb
    as the attack type. There are four different types of attack types in the intruder
    capability of Burp. The four attack types are:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们继续之前，让我们了解为什么选择集束炸弹作为攻击类型。Burp的入侵者功能中有四种不同类型的攻击类型。这四种攻击类型是：
- en: Sniper
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 狙击手
- en: Battering ram
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻城槌
- en: Pitchfork
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pitchfork
- en: Cluster bomb
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集束炸弹
- en: 'We have already looked into these attack types in the previous chapter. Now
    that we have understood the different attack types, let us go ahead with our cluster
    bomb and feed in values for the username and password payloads. Go to the Payloads
    section and select Payload set 1 and in the payload options select Add from list..
    and select Usernames. If you are using Burp Basic, you can download wordlist from [https://github.com/danielmiessler/SecLists](https://github.com/danielmiessler/SecLists),
    select the Add option, and give the path of the username. For professional users,
    have a look at the following screenshot:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在上一章中了解了这些攻击类型。现在我们已经了解了不同的攻击类型，让我们继续使用我们的集束炸弹，并为用户名和密码有效载荷输入值。转到有效载荷部分，选择有效载荷集1，并在有效载荷选项中选择“从列表添加”，然后选择用户名。如果您使用Burp
    Basic，您可以从[https://github.com/danielmiessler/SecLists](https://github.com/danielmiessler/SecLists)下载单词列表，选择“添加”选项，并提供用户名的路径。对于专业用户，请查看以下屏幕截图：
- en: '![](img/283f0b74-34f0-492f-a573-e00a88716800.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/283f0b74-34f0-492f-a573-e00a88716800.png)'
- en: 'For basic users, once you download the list, just click on Load... and provide
    the path to the top usernames shortlist file, as shown in the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基本用户，一旦下载列表，只需单击“加载...”并提供顶部用户名简表文件的路径，如下面的屏幕截图所示：
- en: '![](img/76fd4f0c-6776-4ac0-9957-536f95fb10a3.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/76fd4f0c-6776-4ac0-9957-536f95fb10a3.png)'
- en: 'Similarly, select Payload set 2 and select password for professional users
    via the add from the list, and for basic users, via load option. Professional
    users can also use a custom list if they don''t want to use the default list in
    Burp. So Payload set for password is set, as shown in the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，选择有效载荷集2，并通过从列表中添加选项为专业用户选择密码，对于基本用户，通过加载选项选择。专业用户还可以使用自定义列表，如果不想使用Burp中的默认列表。因此，密码的有效载荷集已设置，如下面的屏幕截图所示：
- en: '![](img/e8099b04-f4e3-49e8-b4df-28ab20d2afbe.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e8099b04-f4e3-49e8-b4df-28ab20d2afbe.png)'
- en: 'Once the configuration is done, we can click on Start attack and it will brute
    force the set of usernames and passwords, giving us a valid credential if any
    of the combination hits are correct, for example:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成后，我们可以单击“开始攻击”，它将暴力破解一组用户名和密码，如果任何组合命中正确，例如：
- en: '![](img/95c9ac8c-9548-4974-8901-d592c8acb198.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95c9ac8c-9548-4974-8901-d592c8acb198.png)'
- en: 'As you can see, one of the combinations hit success and it gives status 302,
    meaning there is a chance this was the right password. Let''s go ahead and request
    this in the browser. Right-click on the request and select request in browser
    and then in current session you will be presented with a Burp URL. Copy and paste
    that in the URL space and, as you see from the following screenshot, you are successfully
    logged in:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，其中一个组合成功了，并且给出了状态302，这意味着这可能是正确的密码。让我们继续在浏览器中请求。右键单击请求，选择在浏览器中请求，然后在当前会话中，您将看到一个Burp
    URL。将其复制并粘贴到URL空间中，如下面的屏幕截图所示，您已成功登录：
- en: '![](img/d49069ea-b3b3-4c81-8065-7c195a7c97dd.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d49069ea-b3b3-4c81-8065-7c195a7c97dd.png)'
- en: Testing for authentication page for SQL injection
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试SQL注入的身份验证页面
- en: In this module, we will see how to perform tests to verify if the application's
    authentication page is vulnerable to SQL injeciton. We will first understand how
    SQL injection affects the login page, what is the background logic to it, and
    how it executes and allows us to log in. Then we will test a few applications
    and see if the application is vulnerable to SQL injection or not.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在本模块中，我们将看到如何执行测试，以验证应用程序的身份验证页面是否容易受到SQL注入的攻击。我们将首先了解SQL注入如何影响登录页面，它的背景逻辑是什么，以及它如何执行并允许我们登录。然后我们将测试一些应用程序，看看应用程序是否容易受到SQL注入的攻击。
- en: The magic strings to test for SQL injection on the login page have the same
    logic but are represented differently due to validations. The whole aim is to
    try to come out of the input field of the SQL syntax and try to execute the payload
    as a part of the SQL query, which will result to true. For example, a few samples
    ...
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 测试登录页面的SQL注入的魔术字符串具有相同的逻辑，但由于验证的原因表示不同。整个目的是尝试从SQL语法的输入字段中出来，并尝试执行有效载荷作为SQL查询的一部分，这将导致结果为true。例如，一些样本...
- en: Summary
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we setup the vulnerable web applications. Furthermore, we did
    reconnaissance to detect files and folders in the application via Burp. Finally,
    we learned how we can use Burp on various login pages to try and brute force the
    authentication with a set of username and password dictionaries.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们设置了易受攻击的Web应用程序。此外，我们通过Burp进行了侦察，以检测应用程序中的文件和文件夹。最后，我们学习了如何在各种登录页面上使用Burp尝试使用一组用户名和密码字典进行暴力破解身份验证。
- en: In the next chapter, we will identify the vulnerabilities using Burp Suite
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用Burp Suite识别漏洞
