- en: Exploitation on the Cloud using Kali Linux
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云上使用Kali Linux进行利用
- en: In the [Chapter 2](b4cd4086-a900-4c8a-b406-a55ee26745fb.xhtml), *Setting Up
    a Kali PentestBox on the Cloud*, we set up a penetration testing lab as well as
    the Kali Linux PentestBox configured with remote access. It is time to start performing
    some scanning and exploitation using the PentestBox on the vulnerable hosts in
    the lab.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](b4cd4086-a900-4c8a-b406-a55ee26745fb.xhtml)中，*在云上设置Kali PentestBox*，我们设置了一个渗透测试实验室，以及配置了远程访问的Kali
    Linux PentestBox。现在是时候开始在实验室中的易受攻击主机上执行一些扫描和利用了。
- en: This chapter will focus on the process of automated vulnerability scans using
    the free version of a commercial tool and then exploiting the found vulnerabilities
    using **Metasploit**. These vulnerabilities were baked into the lab environment earlier,
    on the vulnerable hosts that were configured in [Chapter 1](9c51c4e0-951d-4b49-95ed-c9220a9d3210.xhtml),
    *Setting up a Pentesting Lab on AWS*, and [Chapter 2](b4cd4086-a900-4c8a-b406-a55ee26745fb.xhtml),
    *Setting up a Kali PentestBox on the Cloud*.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将重点介绍使用商业工具的免费版本进行自动化漏洞扫描的过程，然后利用**Metasploit**来利用发现的漏洞。这些漏洞早已内置在实验室环境中，在之前配置的易受攻击主机上，分别在[第1章](9c51c4e0-951d-4b49-95ed-c9220a9d3210.xhtml)和[第2章](b4cd4086-a900-4c8a-b406-a55ee26745fb.xhtml)中。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Running automated scans with Nessus and verifying the vulnerabilities that are
    found
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nessus运行自动化扫描并验证发现的漏洞
- en: Exploitation using Metasploit and Meterpreter
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Metasploit和Meterpreter进行利用
- en: Exploiting vulnerable Linux and Windows **virtual** **machines** (**VMs**)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用易受攻击的Linux和Windows虚拟机（VMs）
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The following tools will be used in this chapter:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将使用以下工具：
- en: Nessus (needs manual installation)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nessus（需要手动安装）
- en: Metasploit
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit
- en: Configuring and running Nessus
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置和运行Nessus
- en: Nessus is a popular tool for automating vulnerability scans within a network,
    with some added functionality of scanning web applications as well. In the first
    section, we shall set up Nessus on our PentestBox on EC2\. Then we shall use it
    to run basic and advanced scans on the lab that we set up earlier.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Nessus是一个流行的工具，用于自动化网络内的漏洞扫描，还具有扫描Web应用程序的附加功能。在第一部分中，我们将在EC2上的PentestBox上设置Nessus。然后我们将使用它在之前设置的实验室上运行基本和高级扫描。
- en: Installing Nessus on Kali
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Kali上安装Nessus
- en: The first step to performing automated pentesting and vulnerability assessment
    using Nessus, is obviously to install it on Kali. To make things easy, Nessus
    comes in a `.deb` package that can be directly installed using `dpkg`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Nessus进行自动化渗透测试和漏洞评估的第一步，显然是在Kali上安装它。为了简化操作，Nessus以`.deb`软件包的形式直接安装，可以使用`dpkg`进行安装。
- en: 'To install Nessus, the first step is to download the `.deb` package from the
    tenable website, on [https://www.tenable.com/downloads/nessus](https://www.tenable.com/downloads/nessus):'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装Nessus，第一步是从tenable网站下载`.deb`软件包，网址为[https://www.tenable.com/downloads/nessus](https://www.tenable.com/downloads/nessus)：
- en: '![](img/f5a8e164-a97f-409d-8d89-7bc89a5b5624.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5a8e164-a97f-409d-8d89-7bc89a5b5624.png)'
- en: Once downloaded, we need to transfer this to our Kali PentestBox on AWS. We
    can do this file transfer using **WinSCP** on Windows. On Linux/macOS, the native
    SCP utility can be used. The setup is available at [https://winscp.net/eng/download.php](https://winscp.net/eng/download.php)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载后，我们需要将其传输到我们在AWS上的Kali PentestBox。在Windows上，可以使用**WinSCP**进行文件传输。在Linux/macOS上，可以使用本机SCP实用程序。设置在[https://winscp.net/eng/download.php](https://winscp.net/eng/download.php)上可用
- en: 'Once WinSCP is installed, we need to set up a connection to our Kali PentestBox.
    First, we need to add a new site:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装了WinSCP后，我们需要建立到Kali PentestBox的连接。首先，我们需要添加一个新站点：
- en: '![](img/4060d84f-4f58-468f-8b6a-ffd1a6d4cb8e.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4060d84f-4f58-468f-8b6a-ffd1a6d4cb8e.png)'
- en: 'Next, we need to add the public key, downloaded from AWS, for authentication.
    To do this, we need to click on Advanced and set the path to the key on SSH | Authentication:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要添加从AWS下载的公钥进行身份验证。为此，需要点击高级并在SSH | 身份验证中设置密钥的路径：
- en: '![](img/922ed0c0-3710-410a-b026-04f9b3313fa0.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/922ed0c0-3710-410a-b026-04f9b3313fa0.png)'
- en: 'Once done, it''s a simple matter of saving the site and then connecting to
    it to see a folder listing on the remote host:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，只需保存站点，然后连接到它，以在远程主机上查看文件夹列表：
- en: '![](img/d57e4499-a3e6-4cb6-88bf-d81022775642.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d57e4499-a3e6-4cb6-88bf-d81022775642.png)'
- en: 'From here, it''s a simple matter of dragging the `.deb` package into the `root`
    folder that we just accessed in the previous step. Once done, we can get started
    with installing the package. This can be achieved using `dpkg` through an SSH
    shell to the AWS EC2 instance:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这里开始，只需将`.deb`软件包拖放到我们在上一步中访问的`root`文件夹中。完成后，我们可以开始安装软件包。可以通过SSH shell到AWS
    EC2实例使用`dpkg`来实现：
- en: '![](img/c66eef64-0a8b-4451-a9d3-f3e4abad9e27.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c66eef64-0a8b-4451-a9d3-f3e4abad9e27.png)'
- en: 'Once done, we start the Nessus service and confirm that it is running:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，启动Nessus服务并确认其正在运行：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If the `status` command returns a status of running, we have successfully started
    the service. Next, we need to set up SSH tunneling to forward port `8834` from
    the Kali PentestBox to our localhost over the SSH connection. On a Linux Terminal,
    the following syntax needs to be used:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果`status`命令返回运行状态，则我们已成功启动服务。接下来，我们需要设置SSH隧道，将端口`8834`从Kali PentestBox转发到我们的本地主机上的SSH连接。在Linux终端上，需要使用以下语法：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'On Windows, if you''re using PuTTY, the SSH Tunnels can be configured here,
    by clicking on the Tunnels option after launching PuTTY:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows上，如果使用PuTTY，可以在此处配置SSH隧道，点击PuTTY启动后选择Tunnels选项：
- en: '![](img/449c39b4-00f8-4821-a466-7009213a9553.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/449c39b4-00f8-4821-a466-7009213a9553.png)'
- en: Once done, reconnect to the instance and you can now access Nessus on your local
    machine on `https://127.0.0.1:8834`.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，重新连接到实例，现在可以在本地机器上访问Nessus，网址为`https://127.0.0.1:8834`。
- en: Configuring Nessus
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Nessus
- en: Once Nessus has been installed and the SSH tunnel configured, we can access
    Nessus on the browser by pointing at `https://127.0.0.1:8834`. We will need to
    go through a set of first steps to set up Nessus now.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Nessus被安装并且SSH隧道被配置，我们可以通过指向`https://127.0.0.1:8834`在浏览器上访问Nessus。我们现在需要经历一系列的第一步来设置Nessus。
- en: 'The very first screen prompts the user to Create an account:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个屏幕提示用户创建一个帐户：
- en: '![](img/684b5a17-b727-43f6-9e8c-1b8fe9c9ef7d.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/684b5a17-b727-43f6-9e8c-1b8fe9c9ef7d.png)'
- en: 'Enter suitable credentials and proceed to the next step. Now we need to activate
    a home license. We can grab one at [https://www.tenable.com/products/nessus-home](https://www.tenable.com/products/nessus-home)
    by filling in the following form:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入合适的凭据并继续下一步。现在我们需要激活家庭许可证。我们可以在[https://www.tenable.com/products/nessus-home](https://www.tenable.com/products/nessus-home)填写以下表格来获取一个：
- en: '![](img/333e486c-8566-40e3-95d1-b4c648e40640.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/333e486c-8566-40e3-95d1-b4c648e40640.png)'
- en: 'Once you''ve received the activation code by email, enter it into the web interface
    and trigger the initialization process. Now Nessus goes through the process of
    downloading data that is needed for the scanning of network assets:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您通过电子邮件收到激活码，请在Web界面中输入它并触发初始化过程。现在Nessus正在下载扫描网络资产所需的数据：
- en: '![](img/59b08e73-99da-49a3-8b55-a3872e24798e.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/59b08e73-99da-49a3-8b55-a3872e24798e.png)'
- en: This process usually takes a few minutes, so there's enough time to go grab
    a cup of coffee while this is happening.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程通常需要几分钟，所以在这个过程中有足够的时间去拿一杯咖啡。
- en: Performing the first Nessus scan
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行第一次Nessus扫描
- en: Once the initialization is complete, we're welcomed by the Nessus home screen.
    Here, we need to click on New Scan to start a new scan on the pentesting lab that
    we set up earlier.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化完成后，我们将被Nessus主页欢迎。在这里，我们需要点击“新扫描”来开始对我们之前设置的渗透测试实验室进行新的扫描。
- en: 'Once on the new scan tab, we need to start a Basic Network Scan:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦进入新的扫描选项卡，我们需要开始一个基本的网络扫描：
- en: '![](img/d2d914a2-f776-492b-9b29-deb05169fd2c.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d2d914a2-f776-492b-9b29-deb05169fd2c.png)'
- en: 'After clicking on Basic Network Scan, we need to give a scan name and enter
    the IPs of the two other hosts that we set up in the lab:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击基本网络扫描后，我们需要给出一个扫描名称，并输入实验室中设置的另外两个主机的IP：
- en: '![](img/302633ca-2b37-4469-8fef-301503eb1bfd.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/302633ca-2b37-4469-8fef-301503eb1bfd.png)'
- en: 'Next up, we configure the DISCOVERY and ASSESSMENT options. For discovery,
    let''s request a scan of all services:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们配置DISCOVERY和ASSESSMENT选项。对于发现，让我们请求扫描所有服务：
- en: '![](img/52ebfaef-707e-4c14-b49e-9a28a95ffe93.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/52ebfaef-707e-4c14-b49e-9a28a95ffe93.png)'
- en: This has the advantage of enumerating all services running on a host and discovers
    hosts if no traditional services are running on them.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的好处是枚举主机上运行的所有服务，并在它们上没有传统服务运行时发现主机。
- en: 'Let''s configure Nessus to scan web applications as well:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们配置Nessus来扫描Web应用程序：
- en: '![](img/42cfc52f-3427-4682-be08-920b213d987c.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/42cfc52f-3427-4682-be08-920b213d987c.png)'
- en: 'Finally, we Launch the scan:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们启动扫描：
- en: '![](img/ec3245c9-d518-4e2d-8985-2cb0f8d8c019.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ec3245c9-d518-4e2d-8985-2cb0f8d8c019.png)'
- en: Once again, scanning is a time-consuming process, so this would take around
    15 to 20 minutes to complete on average, if not more.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一次又一次，扫描是一个耗时的过程，所以平均需要大约15到20分钟才能完成，如果不是更多的话。
- en: Exploiting a vulnerable Linux VM
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用一个有漏洞的Linux虚拟机
- en: Now that we have finished scanning both the hosts in the vulnerable lab, it
    is time to start exploitation of these hosts. Our first target is the Ubuntu instance
    that we set up in our lab. Here, we shall go through the scan results for this
    host and try to gain unauthorized access to the host.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了对易受攻击实验室中两个主机的扫描，是时候开始对这些主机进行利用了。我们的第一个目标是我们实验室中设置的Ubuntu实例。在这里，我们将查看这个主机的扫描结果，并尝试未经授权地访问这个主机。
- en: Understanding the Nessus scan for Linux
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解Linux的Nessus扫描
- en: 'We first start with the Nessus scan results for our Ubuntu server host:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先从我们的Ubuntu服务器主机的Nessus扫描结果开始：
- en: '![](img/26a5f1a9-ebcb-483a-88d0-77dfccf230de.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/26a5f1a9-ebcb-483a-88d0-77dfccf230de.png)'
- en: Unsurprisingly, we just find a bunch of information vulnerabilities, since there
    are just two services installed—**FTP** and **SSH**. The FTP server has a backdoor
    baked into it; however, it has not come out as a critical vulnerability. If you
    look at the last result in the Linux scan, it does detect that vsftpd 2.3.4 is
    installed, which comes with a backdoor.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 毫不奇怪，我们只发现了一堆信息漏洞，因为只安装了两个服务——**FTP**和**SSH**。FTP服务器内置了一个后门；然而，它并没有成为一个关键的漏洞。如果你看一下Linux扫描中的最后一个结果，它确实检测到安装了带有后门的vsftpd
    2.3.4。
- en: 'To summarize the other results on this page, the Nessus SYN scanner simply
    lists a number of services enabled on the host:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下这个页面上的其他结果，Nessus SYN扫描器只是列出了主机上启用的一些服务：
- en: '![](img/a0193409-10bc-4dff-8042-bdec6bde3b09.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a0193409-10bc-4dff-8042-bdec6bde3b09.png)'
- en: There is a bunch of more useful information on this page that can be manually
    inspected. As of now, we shall focus on exploitation of the `vsftpd` service that
    we installed on the Ubuntu server.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这个页面上还有一堆更有用的信息可以手动检查。目前，我们将专注于我们在Ubuntu服务器上安装的`vsftpd`服务的利用。
- en: Exploitation on Linux
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上的利用
- en: 'For the purpose of exploiting the `vsftpd` service, we shall use `Metasploit`,
    which comes with Kali Linux built in. This can be loaded up by simply entering `msfconsole` into
    the Terminal:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了利用`vsftpd`服务，我们将使用Kali Linux内置的`Metasploit`。只需在终端中输入`msfconsole`即可加载：
- en: '![](img/64f6cca1-ea4d-492c-963e-5e4f73787e54.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/64f6cca1-ea4d-492c-963e-5e4f73787e54.png)'
- en: 'Here, we can simply search for the name of the service to see if there are
    any associated exploits. To do this, simply run the following:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以简单地搜索服务的名称，看看是否有任何相关的利用。要做到这一点，只需运行以下命令：
- en: '[PRE2]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will turn up a list of the exploits with that specific keyword. In this
    case, it is just one exploit:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这将列出具有特定关键字的利用列表。在这种情况下，只有一个利用：
- en: '![](img/e44c426b-3109-4681-bfd7-815f81bdd7a8.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e44c426b-3109-4681-bfd7-815f81bdd7a8.png)'
- en: 'We can use this exploit by running the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过运行以下命令来使用这个利用：
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This changes the prompt to that of the exploit. Now all that needs to be done
    is to run the following:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这将更改提示符为利用的提示符。现在需要做的就是运行以下命令：
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And the confirmation is shown as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是确认的显示：
- en: '![](img/bec749ad-29cb-4123-a329-3c6508c93b5d.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bec749ad-29cb-4123-a329-3c6508c93b5d.png)'
- en: 'Finally, just run `exploit`, and `vsftpd exploit` would be executed to provide
    an interactive reverse shell with `root` privileges:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，只需运行`exploit`，`vsftpd exploit`将被执行，以提供具有`root`权限的交互式反向shell：
- en: '![](img/a98aa71a-2885-43d3-b8a2-cb73442b6e4c.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a98aa71a-2885-43d3-b8a2-cb73442b6e4c.png)'
- en: Using this reverse shell, you have full freedom to run whatever commands are
    supported on the OS. This is a good place to play around with auxiliary and post-exploitation
    modules on `Metasploit`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个反向shell，您可以自由运行操作系统支持的任何命令。这是一个很好的地方，可以在`Metasploit`上玩弄辅助和后期利用模块。
- en: Exploiting a vulnerable Windows VM
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用易受攻击的Windows虚拟机
- en: Finally, let's go through the results of the Windows Nessus scan. This has more
    interesting scan results, since we used an EOL OS that receives no updates, as
    well as an older version of the web application server.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们来看一下Windows Nessus扫描的结果。这有更有趣的扫描结果，因为我们使用了一个不再接收更新的EOL操作系统，以及一个较旧版本的Web应用程序服务器。
- en: Understanding the Nessus scan for Windows
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解Windows Nessus扫描
- en: 'The Nessus scan for Windows throws up a massive number of issues thanks to
    the end-of-life OS being used, as well as the outdated server. Let''s focus on
    the most critical findings first:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 由于使用了终止生命周期的操作系统以及过时的服务器，Windows的Nessus扫描产生了大量问题。让我们首先专注于最关键的发现：
- en: '![](img/87078513-0a66-4add-a541-13a2b4ce937a.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/87078513-0a66-4add-a541-13a2b4ce937a.png)'
- en: 'There are a number of issues dealing with outdated OpenSSL and PHP installations,
    as well as a couple of findings pointing out that Windows Server 2003 is an unsupported
    OS. However, the most important issue here is the detection of multiple vulnerabilities
    in SMBv1\. The details of this vulnerability point out the **Common Vulnerabilities
    and Exposures** (**CVEs**) for the associated SMB vulnerabilities and the patches
    for these:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多与过时的OpenSSL和PHP安装有关的问题，以及一些发现指出Windows Server 2003是不受支持的操作系统。然而，这里最重要的问题是检测到SMBv1中的多个漏洞。此漏洞的详细信息指出了相关SMB漏洞的**通用漏洞和暴露**（**CVEs**）以及这些漏洞的补丁：
- en: '![](img/06befeba-c9da-4ca4-97d2-4828a8a4766b.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/06befeba-c9da-4ca4-97d2-4828a8a4766b.png)'
- en: 'In addition to vulnerable and outdated services, the scan did pick up a number
    of web application issues as well:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 除了易受攻击和过时的服务外，扫描还发现了一些Web应用程序问题：
- en: '![](img/a33ec4b0-86b5-4cdc-8cf8-bafd35258a63.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a33ec4b0-86b5-4cdc-8cf8-bafd35258a63.png)'
- en: Since we exploited a network service on the Linux host, we shall focus on exploiting
    one of the vulnerabilities on the web application to gain access to a shell.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在Linux主机上利用了一个网络服务，我们将专注于利用Web应用程序的一个漏洞来获得对shell的访问。
- en: Exploitation on Windows
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上的利用
- en: 'The vulnerable web application has an **SQL injection** vulnerability. SQL
    injection allows an attacker to inject arbitrary SQL queries and execute them
    on the backend DBMS. This vulnerability is present on the following URL:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 易受攻击的Web应用程序存在**SQL注入**漏洞。SQL注入允许攻击者注入任意的SQL查询并在后端DBMS上执行它们。此漏洞存在于以下URL上：
- en: '[PRE5]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'An SQL injection on a web application that is potentially running with admin
    privileges means that there is a possibility of a complete takeover of the web
    application. For this purpose, we shall use `sqlmap`. To attack the URL with `sqlmap`,
    the syntax is as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能以管理员权限运行的Web应用程序上发生的SQL注入意味着可能完全接管Web应用程序。为此，我们将使用`sqlmap`。要使用`sqlmap`攻击URL，语法如下：
- en: '[PRE6]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'A `sqlmap` confirms that the injection vulnerability is present, as seen here:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`sqlmap`确认存在注入漏洞，如下所示：'
- en: '![](img/4218cacc-b63b-432e-8e6b-f5dc63e5339d.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4218cacc-b63b-432e-8e6b-f5dc63e5339d.png)'
- en: 'The next step is to use `sqlmap` to gain shell access on the remote server.
    `sqlmap` comes with a very handy feature, that uploads a stager for uploading
    further files into the webroot. Then it follows it up by uploading a web shell
    that executes commands and returns the output of the command, all with a single
    command. In order to trigger this, execute the following:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是使用`sqlmap`在远程服务器上获得shell访问权限。`sqlmap`带有一个非常方便的功能，可以上传一个分段器，用于将进一步的文件上传到webroot。然后它通过上传一个执行命令并返回命令输出的Web
    shell来跟进，所有这些都可以通过一个命令完成。为了触发这个，执行以下命令：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `--os-shell` asks `sqlmap` to spawn a shell using the method described
    previously and the `--tmp-path` value specifies where to upload the PHP files
    for the purpose of spawning a shell. Once the command is executed, user input
    would be prompted twice. The first instance is to select the technology, which
    is PHP in this case. The second instance is to trigger full path disclosures,
    which can be enabled. If everything goes well, we should be presented with an
    interactive shell:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`--os-shell`要求`sqlmap`使用先前描述的方法生成一个shell，`--tmp-path`值指定上传PHP文件的位置，以生成shell。一旦执行命令，用户输入将被提示两次。第一次是选择技术，这种情况下是PHP。第二次是触发完整路径泄露，可以启用。如果一切顺利，我们应该会看到一个交互式shell：'
- en: '![](img/f0282943-7701-4a14-9fc8-11ea03180fef.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0282943-7701-4a14-9fc8-11ea03180fef.png)'
- en: As with the Linux exploitation, any commands can be executed through this interactive
    shell.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 与Linux利用一样，通过这个交互式shell可以执行任何命令。
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter walked through the process of setting up Nessus on the Kali PentestBox on
    EC2\. Following this, SSH tunneling was explained, within the context of accessing
    the Nessus service securely without exposing it to the internet. Once the Nessus
    instance was accessible, we were able to activate it and perform automated scans
    on the two hosts that were set up in the pentest lab. These automated scans came
    up with a number of results, which further helps us exploit both of them. Finally,
    the chapter covered exploiting and taking over the Linux box by exploiting a vulnerable
    network service, and the Windows box by exploiting a web application vulnerability.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了在Kali PentestBox上在EC2上设置Nessus的过程。在此之后，解释了SSH隧道，以访问Nessus服务而不将其暴露在互联网上。一旦可以访问Nessus实例，我们就能激活它并对pentest实验室中设置的两台主机执行自动扫描。这些自动扫描产生了许多结果，进一步帮助我们利用它们。最后，本章涵盖了通过利用易受攻击的网络服务来利用和接管Linux主机，以及通过利用Web应用程序漏洞来利用和接管Windows主机。
- en: This brings an end to this chapter, which is focused toward first-time pentesters
    who are looking to get into AWS pentesting but do not have a lab environment at
    hand. In the next chapter, we will take a deeper dive into setting up EC2 instances
    and performing automated and manual exploitation.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这结束了本章，重点是面向首次进行渗透测试的人员，他们希望进行AWS渗透测试，但手头没有实验环境。在下一章中，我们将深入探讨设置EC2实例并执行自动和手动利用的内容。
- en: Questions
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What advantage would the advanced scan provide in Nessus versus the basic scan?
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Nessus中，高级扫描相对于基本扫描有什么优势？
- en: What are the Metasploit `aux` and `post` modules?
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Metasploit的`aux`和`post`模块是什么？
- en: Is there any way to get a Bash shell by exploiting `vsftpd`?
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有没有办法通过利用`vsftpd`获得Bash shell？
- en: Is there any way to get VNC access on the Linux box by exploiting `vsftpd`?
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有没有办法通过利用`vsftpd`在Linux主机上获得VNC访问？
- en: Why does the Windows box automatically give administrator privileges?
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么Windows主机会自动给予管理员权限？
- en: Further reading
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Mastering Metasploit: [https://www.packtpub.com/networking-and-servers/mastering-metasploit](https://www.packtpub.com/networking-and-servers/mastering-metasploit)'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '精通Metasploit: [https://www.packtpub.com/networking-and-servers/mastering-metasploit](https://www.packtpub.com/networking-and-servers/mastering-metasploit)'
- en: 'Nessus 8.2.x: [https://docs.tenable.com/nessus/](https://docs.tenable.com/nessus/)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Nessus 8.2.x: [https://docs.tenable.com/nessus/](https://docs.tenable.com/nessus/)'
- en: 'Metasploit Unleashed—Free Ethical Hacking Course: [https://www.offensive-security.com/metasploit-unleashed/](https://www.offensive-security.com/metasploit-unleashed/)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Metasploit Unleashed—免费的道德黑客课程: [https://www.offensive-security.com/metasploit-unleashed/](https://www.offensive-security.com/metasploit-unleashed/)'
