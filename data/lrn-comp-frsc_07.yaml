- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: RAM Memory Forensic Analysis
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RAM 内存取证分析
- en: RAM is a vital source of digital evidence that has been neglected and ignored
    historically. As our knowledge of digital evidence grew, examiners realized the
    source of potential digital evidence that existed in RAM. Ultimately, you have
    an additional multi-gigabyte source of information that needs to be examined and
    may contain digital artifacts that do not exist in the traditional locations of
    the system.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: RAM 是一个重要的数字证据来源，但在历史上常常被忽视。随着我们对数字证据的了解不断深入，检查员意识到 RAM 中存在潜在的数字证据来源。最终，你将有一个额外的多吉字节信息来源需要检查，可能包含传统位置中不存在的数字痕迹。
- en: In this chapter, we will cover the fundamentals of memory. We will then look
    at the different sources of memory and learn to capture RAM using RAM capture
    tools. By the end of this chapter, you will understand the various methods and
    tools that can process volatile memory.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍内存的基础知识。然后，我们将了解不同的内存来源，并学习如何使用 RAM 捕获工具来捕获 RAM。在本章结束时，你将理解处理易失性内存的各种方法和工具。
- en: 'We’ll be covering the following topics in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Fundamentals of memory
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存基础
- en: Random access memory
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机存取内存
- en: Identifying sources of memory
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别内存来源
- en: Capturing RAM
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捕获 RAM
- en: Exploring RAM analyzing tools
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 RAM 分析工具
- en: Fundamentals of memory
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内存基础
- en: What information does **random access memory** (**RAM**) contain? It will give
    you information about the current running state of the system before you shut
    it down. It will contain information about any running programs; these could be
    legitimate processes, and it could contain running malware processes as well.
    If attackers have compromised the host, the malware may be a resident in the RAM.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**随机存取内存** (**RAM**) 包含什么信息？它将提供系统在关闭之前的当前运行状态信息。它将包含任何正在运行的程序信息；这些可能是合法的进程，也可能包含正在运行的恶意程序进程。如果攻击者已侵入主机，恶意程序可能驻留在
    RAM 中。'
- en: You will also find information related to the host’s network connections with
    other peers. This could be a legitimate use of peer-to-peer file sharing, or it
    could show a link to the attacker’s host. These connections are breadcrumbs for
    you to follow. The user could also be sharing illicit images. Again, the connection
    to other computers will allow you to follow and investigate additional users for
    the same crime.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会发现与主机与其他节点之间网络连接相关的信息。这可能是合法的点对点文件共享，也可能显示与攻击者主机的连接。这些连接是你可以追踪的线索。用户也可能正在共享非法图片。同样，连接到其他计算机将允许你跟踪并调查更多的用户，查明同样的犯罪。
- en: If the user is using cloud services, we may never find the data they are creating
    on the physical disk in the system. Instead, we may only see the evidence of the
    data being hosted in the cloud in the form of RAM.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户使用云服务，我们可能永远无法在系统的物理磁盘中找到他们创建的数据。相反，我们可能只能看到以 RAM 形式托管在云中的数据证据。
- en: RAM is the kitchen table of the computer system. Any action the user/system
    takes will access the RAM. For example, every mouse click and every keyboard button
    that’s pushed will be processed through the RAM, and you can recover entire files,
    passwords, and the text that was placed into the clipboard. All of these are potential
    sources of digital evidence. Sometimes, you can recover the encryption keys for
    closed encrypted containers that the user has created.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: RAM 是计算机系统中的“厨房桌”。用户/系统的任何操作都会访问 RAM。例如，每次鼠标点击和每次按下的键盘按钮都会通过 RAM 进行处理，并且你可以恢复整个文件、密码以及放入剪贴板的文本。所有这些都是潜在的数字证据来源。有时，你还能恢复用户创建的加密容器中的加密密钥。
- en: In 2004, Rajib K. Mitra was convicted of jamming police radios. The investigation
    resulted in the seizure of multiple pieces of digital evidence. The lead detective,
    Cindy Murphy, learned in 2009 that it was possible to recover encryption keys
    that may have existed only in RAM. Detective Murphy was able to go back and reexamine
    the evidence and was able to identify the encryption keys Mitra had used to secure
    his encrypted container. When Detective Murphy opened the encrypted container,
    she found many illicit images, which led to Mitra being convicted of possessing
    the images.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 2004 年，Rajib K. Mitra 因干扰警察无线电通讯而被定罪。调查结果没收了多件数字证据。主侦探 Cindy Murphy 在 2009 年得知，恢复仅存在于
    RAM 中的加密密钥是可能的。Murphy 侦探回过头重新检查了证据，成功找到了 Mitra 用来保护加密容器的加密密钥。当 Murphy 侦探打开加密容器时，发现了许多非法图片，最终导致
    Mitra 因持有这些图片而被定罪。
- en: How is analyzing RAM different from analyzing a hard drive? RAM is a snapshot
    of a live running system, whereas a hard drive examination is static. When examining
    a hard drive, we have shut the system down and we are examining data on the physical
    device. RAM is much more transient, and if you were to take a forensic image of
    RAM at two different points of time, you would get different results. Capturing
    the data in RAM will lead to the loss of potential evidence. You are changing
    evidence when you collect RAM.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 分析 RAM 与分析硬盘有何不同？RAM 是一个活跃运行系统的快照，而硬盘检查则是静态的。在检查硬盘时，我们已经关闭了系统，并正在检查物理设备上的数据。RAM
    更加短暂，如果你在两个不同的时间点获取 RAM 的法医影像，你将得到不同的结果。捕获 RAM 中的数据会导致潜在证据的丢失。你在收集 RAM 时实际上是在改变证据。
- en: So, let’s talk about what RAM is.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们来讨论一下什么是 RAM。
- en: Random access memory?
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 随机存取内存？
- en: RAM temporarily stores working data/code on an active computer system. Unlike
    on traditional storage devices such as hard drives, data can be read/written on
    RAM at extremely fast speeds. Current technology allows the RAM chips to be created
    around an integrated circuit chip with metal oxide semiconductor cells. The data
    stored within the RAM chips is volatile.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: RAM 暂时存储在活动计算机系统上的工作数据/代码。与传统的存储设备（如硬盘）不同，数据可以以极快的速度在 RAM 上读取/写入。当前技术允许在一个集成电路芯片上制造
    RAM 芯片，并使用金属氧化物半导体单元。存储在 RAM 芯片中的数据是易失性的。
- en: We lose volatile data when the computer system is no longer powered on. This
    is a significant reason the *pull the plug* tactic is no longer recommended when
    responding to a scene involving activated computer systems.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当计算机系统断电时，我们会丢失易失性数据。这是“*拔掉插头*”战术不再推荐用于应对激活计算机系统的现场的一个重要原因。
- en: 'You may run into two different types of RAM: **static RAM** (**SRAM**) and
    **dynamic RAM** (**DRAM**). SRAM is considered faster and more efficient in terms
    of energy use, whereas DRAM is cheaper to produce than SRAM. Therefore, you will
    typically find SRAM used as cache memory for the CPU and DRAM chips used as memory
    chips for the computer system.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会遇到两种不同类型的 RAM：**静态 RAM**（**SRAM**）和**动态 RAM**（**DRAM**）。SRAM 被认为在速度和能效方面更优，而
    DRAM 比 SRAM 更便宜。因此，SRAM 通常用于作为 CPU 的缓存内存，而 DRAM 则作为计算机系统的内存芯片。
- en: 'The following is a representation of a DRAM chip you may come across in your
    investigations:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是你在调查中可能遇到的 DRAM 芯片的表示：
- en: '![A picture containing text, electronics, circuit  Description automatically
    generated](img/B18329_07_01.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![一张包含文本、电子元件、线路的图片 说明自动生成](img/B18329_07_01.png)'
- en: 'Figure 7.1: DRAM image'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1：DRAM 图像
- en: Do not confuse RAM with **read-only memory** (**ROM**). ROM permanently stores
    data within the memory chips and is not volatile.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 不要将 RAM 与 **只读内存**（**ROM**）混淆。ROM 永久存储数据在内存芯片中，并且是非易失性的。
- en: 'Consider the following: a 32-bit Microsoft Windows-based computer system has
    a limitation of 4 GB of RAM, while a 64-bit Microsoft Windows-based computer system
    has a limit of 128 GB of RAM. That is a considerable amount of potential evidence
    that, historically, has not been analyzed.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，32 位的微软 Windows 系统计算机内存限制为 4 GB，而 64 位的微软 Windows 系统计算机内存限制为 128 GB。这是一个相当显著的潜在证据，历史上尚未进行过分析。
- en: For the CPU to access the data/execute code being stored in the memory chips,
    there must be a unique identifier for the location of that data. When we start
    examining raw memory dumps, we will be dealing with the physical address, which
    is an offset of the memory dump.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 CPU 访问存储在内存芯片中的数据/执行代码，必须为该数据的位置提供一个唯一的标识符。当我们开始检查原始内存转储时，我们将处理物理地址，这是内存转储的偏移量。
- en: Data stored in RAM is stored in pages that are 4 kilobytes in size (but can
    vary in size), and as the system processes add/read data to the pages in RAM,
    they are utilizing virtual addressing.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 存储在 RAM 中的数据以 4 KB 大小的页面存储（但大小可以变化），当系统处理并添加/读取数据到 RAM 中的页面时，它们正在使用虚拟地址。
- en: 'All the operating systems access RAM in the same general manner. So let’s talk
    about some concepts that are common to an operating system:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 所有操作系统以相同的方式访问 RAM。因此，让我们讨论一些操作系统中常见的概念：
- en: '**Privilege separation**: Privilege determines what a user, user account, and
    the process are allowed to access. It is a form of access control, and when used
    by the operating system, it helps provide system stability by isolating users
    and the CPU kernel’s actions. The operating system operates in trusted mode, that
    is, kernel mode, while the user applications operate in untrusted mode, that is,
    user mode, when executing commands in the system.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限分离**：权限决定了用户、用户帐户和进程可以访问的内容。它是一种访问控制形式，当操作系统使用时，它通过将用户和 CPU 内核的操作隔离来帮助提供系统的稳定性。操作系统在受信模式下运行，即内核模式，而用户应用程序则在不受信模式下运行，即用户模式，在系统中执行命令时。'
- en: '**System calls**: To access resources controlled by the operating system’s
    kernel, the user application must request access. This is done through a system
    call to the kernel. It is a bridge between the application and the operating system
    to allow the untrusted mode to become trusted for a specific instance.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统调用**：为了访问由操作系统内核控制的资源，用户应用程序必须请求访问。这是通过对内核进行系统调用来实现的。它是应用程序与操作系统之间的桥梁，使得不受信任模式在特定实例中变得可信。'
- en: '**Process management**: Program code is executed in memory. The operating system
    is responsible for managing the processes. Current operating systems operate as
    multi-programming systems, allowing multiple processes to be executed simultaneously.
    As we analyze the memory dumps, we are looking at which processes were being executed
    at the time of capture and analyzing the data stored within RAM.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**进程管理**：程序代码在内存中执行。操作系统负责管理进程。当前的操作系统作为多程序系统运行，允许多个进程同时执行。在分析内存转储时，我们正在查看在捕获时执行了哪些进程，并分析存储在
    RAM 中的数据。'
- en: '**Threads**: A process can have multiple threads. It is the basic unit of using
    the system’s resources, such as the CPU. When we analyze the memory dumps, we
    are looking for the processes timestamps and starting addresses, which will help
    identify the code in the process.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**线程**：一个进程可以有多个线程。线程是使用系统资源（如 CPU）的基本单位。当我们分析内存转储时，我们正在寻找进程的时间戳和起始地址，这有助于识别进程中的代码。'
- en: 'The contents of RAM may include artifacts of what is or has occurred on the
    system. This can include the following:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: RAM 的内容可能包括系统中发生的或曾经发生过的事件的痕迹。它可以包括以下内容：
- en: Configuration information
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置信息
- en: Typed commands
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入的命令
- en: Passwords
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码
- en: Encryption keys
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密密钥
- en: Unencrypted data
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未加密的数据
- en: IP addresses
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP 地址
- en: Internet history
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上网历史
- en: Chat conversations
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聊天记录
- en: Emails
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件
- en: Malware
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意软件
- en: As you can tell, with the collection of RAM, there is great potential to acquire
    significant evidence. Where do we find data that is stored in RAM? There are several
    different sources, all of which we will discuss next.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，通过收集 RAM，可以获得大量有价值的证据。那么，在哪里可以找到存储在 RAM 中的数据呢？有几个不同的来源，接下来我们将讨论这些来源。
- en: Identifying sources of memory
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别内存来源
- en: What happens if you are not the investigator on the scene when the digital evidence
    is collected in the RAM, and they do not collect volatile data? Is it possible
    to still access the RAM, despite having the system shut down? While you cannot
    analyze the RAM, it is possible to examine other sources containing the same data
    stored in the RAM. This option may not always be viable, depending on the specific
    set of circumstances surrounding the seizure of the digital evidence.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不是现场的调查员，且在收集 RAM 中的数字证据时，他们没有收集易失性数据，会发生什么？即便系统已经关闭，是否仍然可以访问 RAM？虽然你无法分析
    RAM，但仍然可以检查其他包含存储在 RAM 中相同数据的来源。这个选项可能并不总是可行，具体取决于数字证据扣押时的具体情况。
- en: 'You need to know that there are potential additional sources containing the
    same or similar data in RAM. They are as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要知道，在 RAM 中可能还包含有相同或相似数据的潜在额外来源。它们如下所示：
- en: '**Hibernation file (hiberfill.sys)**: Hibernation is the process of powering
    down the computer while still maintaining the current state of the system. In
    Windows, the RAM is compressed and stored in a `hiberfill.sys` file. This will
    allow the system to power down completely, but when the system is reactivated,
    the contents of the `hiberfill.sys` file will be placed back into RAM.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**休眠文件（hiberfill.sys）**：休眠是指在关闭计算机电源的同时，仍然保持系统的当前状态。在 Windows 中，RAM 被压缩并存储在
    `hiberfill.sys` 文件中。这样，系统可以完全关机，但当系统重新启动时，`hiberfill.sys` 文件的内容将重新加载到 RAM 中。'
- en: '**Note**'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**注意**'
- en: If you are examining a laptop, hibernation is usually initiated by closing the
    laptop. In a desktop, this will be user-initiated. The file header for the `hiberfill.sys`
    file can be `hibr`, `HIBR`, `wake`, or `WAKE`. When the system is repowered, the
    header of the file is zeroed out. The `hiberfill.sys` file is a compressed file
    and will have to be decompressed before you can analyze it.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你正在检查一台笔记本电脑，休眠通常是通过关闭笔记本电脑来启动的。在台式机中，这将由用户手动启动。`hiberfill.sys` 文件的文件头可能是
    `hibr`、`HIBR`、`wake` 或 `WAKE`。当系统重新启动时，文件头会被清零。`hiberfill.sys` 文件是一个压缩文件，必须在分析之前进行解压。
- en: When analyzing the `hiberfill.sys` file, the last modification date/timestamp
    will show when the contents of RAM was added to the file.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在分析 `hiberfill.sys` 文件时，最后修改日期/时间戳将显示 RAM 内容被添加到该文件的时间。
- en: '**Note**'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**注意**'
- en: Another option if you are on scene and cannot do a live capture of the RAM is
    to place the system into hibernation, which will then create the `hiberfill.sys`
    file where the current state of the system is saved.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你处于现场且无法进行实时内存捕获，另一种选择是将系统置于休眠状态，这样会创建 `hiberfill.sys` 文件，并保存系统当前的状态。
- en: '**Pagefile (pagefile.sys)**: Paging is a method of storing/retrieving data
    used in the RAM chips with a virtual memory file stored on a traditional storage
    device. While not as fast as using RAM alone, it allows programs to exceed the
    physical memory capacity. When using paging, the system will transfer data in
    pages. The data stored in the page file is typically the least requested data
    used in memory. When the requests for that data are processed, it places the data
    back into the physical memory.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分页文件（pagefile.sys）**：分页是一种存储/检索数据的方法，使用虚拟内存文件在传统存储设备上存储与 RAM 芯片中使用的数据。虽然它的速度不如单独使用
    RAM，但它允许程序超出物理内存的容量。当使用分页时，系统会以页面为单位传输数据。分页文件中存储的数据通常是内存中请求最少的数据。当对这些数据的请求被处理时，它会将数据重新放回物理内存。'
- en: '**Note**'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**注意**'
- en: In the Windows operating system, the paging file, `pagefile.sys`, is stored
    at the root of the operating system volume. Be aware that the user can change
    this location. Typically, the page file can be one to three times larger than
    the amount of physical memory on the system.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Windows 操作系统中，分页文件 `pagefile.sys` 存储在操作系统卷的根目录下。请注意，用户可以更改此位置。通常，分页文件的大小可以是系统物理内存的
    1 到 3 倍。
- en: '**Swapfile (Swapfile.sys)**: With Microsoft Windows 8, Microsoft introduced
    the `Swapfile.sys` file. It is similar to the page file we just discussed but
    with some differences. The Swapfile was created so that the operating system can
    use it for paging operations with suspended modern Windows applications. When
    the application is suspended, the system will write the application data in its
    entirety into the swapfile. This frees up space in the physical memory, and when
    the application is resumed, it moves the data back into physical memory.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交换文件（Swapfile.sys）**：在 Microsoft Windows 8 中，Microsoft 引入了 `Swapfile.sys`
    文件。它与我们刚才讨论的分页文件类似，但有所不同。交换文件的创建是为了让操作系统可以用于处理挂起的现代 Windows 应用程序的分页操作。当应用程序挂起时，系统会将应用程序的所有数据写入交换文件中。这释放了物理内存中的空间，当应用程序恢复时，数据会被移回物理内存。'
- en: '**Crash dump (memory.dmp)**: If you have used any version of Microsoft Windows,
    you might have experienced a system crash or a **blue screen of death** (**BSoD**).
    When that occurs, it may create a dump of memory to store information about the
    system’s state at the time of the crash.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**崩溃转储（memory.dmp）**：如果你使用过任何版本的 Microsoft Windows，你可能会遇到系统崩溃或 **蓝屏死机**（**BSoD**）。发生这种情况时，系统可能会创建内存转储，存储崩溃时系统状态的信息。'
- en: 'Depending on the settings, you may get one of the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 根据设置，你可能会得到以下几种类型之一：
- en: '**Complete memory dump**: The data contained within the physical memory. (Not
    very common because of issues with the capacity of the physical memory chips.)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整内存转储**：包含物理内存中的数据。（由于物理内存芯片的容量问题，这种方式并不常见。）'
- en: '**Kernel memory dump**: Will only contain pages of data that were in kernel
    mode.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内核内存转储**：只会包含处于内核模式下的数据页面。'
- en: '**Small dump files**: Contains information about running processes/loaded drivers
    at the time of the crash.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小型转储文件**：包含崩溃时运行的进程/加载的驱动程序信息。'
- en: 'The `SYSTEM` hive will contain the key to determine which memory dumps exist
    on the system you are examining. The key you’ll want to explore is as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`SYSTEM` hive 中将包含一个键，用于确定在你正在检查的系统上存在的内存转储。你需要查看的键如下：'
- en: '[PRE0]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The dump files will be in a proprietary format and will need a third-party tool
    to convert them (available at [https://www.comae.com](https://www.comae.com)).
    So far, we have discussed the locations that will provide sources of RAM. Ultimately,
    you will want to capture the data within the RAM chips, which is our next topic.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 转储文件将采用专有格式，并需要使用第三方工具进行转换（可在[https://www.comae.com](https://www.comae.com)下载）。到目前为止，我们已经讨论了提供内存来源的位置。最终，你需要捕获内存芯片中的数据，这是我们接下来的话题。
- en: Capturing RAM
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 捕获RAM
- en: When the decision is made to capture the RAM from the system, several factors
    need to be considered before moving forward. The most significant issue is that
    you will be changing the system’s state when you collect the volatile data.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当决定从系统中捕获RAM时，必须考虑多个因素。最重要的问题是，在收集易失性数据时，你将改变系统的状态。
- en: 'The **Scientific Workgroup on Digital Evidence** (**SWGDE**) has explored the
    collection of volatile data and offers the following considerations:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**数字证据科学工作组**（**SWGDE**）已探讨了易失性数据的收集，并提出了以下考虑事项：'
- en: The application used to collect the data in memory will overwrite some memory
    contents.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于收集内存数据的应用程序将覆盖一些内存内容。
- en: The larger the tool and associated files are, the more data it overwrites.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具及其相关文件越大，它覆盖的数据就越多。
- en: The system may load the USB device driver into memory.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统可能会将USB设备驱动程序加载到内存中。
- en: The system may load the USB device driver into the registry.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统可能会将USB设备驱动程序加载到注册表中。
- en: The application used to collect the data in memory will show up in some **Most
    Recently Used** (**MRUs**).
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于收集内存数据的应用程序将出现在一些**最近使用的文件**（**MRUs**）中。
- en: There is the potential that the collection of RAM may cause a system lockup
    or instability in the system. Therefore, the digital forensic investigator must
    know how the tool may affect different operating systems.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 收集RAM可能会导致系统死机或不稳定。因此，数字取证调查员必须了解该工具如何影响不同的操作系统。
- en: After calculating the risk versus the reward, you have decided to go forward
    and collect the contents of the RAM. What do you need to accomplish this task?
    It would be best to decide which tool works best in the environment in which you
    will create the memory dump. One consideration regarding your tool selection is
    how big a footprint the tool will leave on the system.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算了风险与回报后，你决定继续并收集RAM内容。那么，你需要做些什么才能完成这项任务呢？最好决定选择哪种工具，它在你创建内存转储的环境中最适用。关于工具选择的一个考虑因素是该工具在系统上留下的痕迹有多大。
- en: Preparing the capturing device
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备捕获设备
- en: 'To successfully image the RAM, you will need three things:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要成功地获取RAM镜像，你需要三样东西：
- en: A capturing device (such as a USB device)
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捕获设备（如USB设备）
- en: Access to the system
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问系统
- en: Administrator privileges
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理员权限
- en: '**Note**'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: Remember that the amount of RAM installed on the system will dictate the size
    of your external storage device. If the system has 16 GB of RAM, your external
    storage device will need to be greater than 16 GB. The memory dump will be the
    same size as the amount of installed RAM.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，系统中安装的RAM数量将决定外部存储设备的大小。如果系统有16GB的RAM，那么你的外部存储设备需要大于16GB。内存转储的大小将与已安装的RAM容量相同。
- en: You will want to prepare your external storage device before responding to the
    scene. Your device should be formatted as an NTFS partition. This will alleviate
    any file size issues you might encounter if you formatted the device in FAT 32.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在响应现场之前，你需要准备好外部存储设备。你的设备应该格式化为NTFS分区。这样可以避免如果你使用FAT32格式化设备时可能遇到的文件大小问题。
- en: We will now discuss some tools to create a raw forensic image of the RAM.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将讨论一些用于创建RAM原始取证镜像的工具。
- en: Exploring RAM capture tools
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 探索RAM捕获工具
- en: I will briefly discuss some tools that you can use to capture RAM. There are
    additional commercial and open-source tools available. We could write an entire
    book (and there are some) about some tools used for memory forensics. The goal
    here is to give you an overview and the skills necessary to accomplish a successful
    memory dump, but be aware that you can go into much greater detail than I will
    go into in this chapter.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我将简要介绍一些用于捕获RAM的工具。还有其他商业和开源工具可供选择。我们可以写一本完整的书（实际上已经有这样的书）来介绍一些内存取证工具。本节的目标是为你提供概览和完成成功内存转储所需的技能，但请注意，你可以比我在本章中所讲的更深入地了解这些工具。
- en: The following tools are all open source and freely available.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工具都是开源的，并且可以自由使用。
- en: Using DumpIt
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用DumpIt
- en: DumpIt (available at [https://github.com/thimbleweed/All-In-USB/tree/master/utilities/DumpIt](https://github.com/thimbleweed/All-In-USB/tree/master/utilities/DumpIt))
    was originally developed by MoonSols. Then Comae was maintaining the project.
    As of 2021, DumpIt appears to have been rolled into the Comae Platform V2.0 Closed
    Beta. It is a combination of `Win32dd` and `Win64dd` in one executable. The end
    user isn’t given any options to configure. This tool is fast, small, and portable.
    It leaves the least significant form of footprint on the RAM.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: DumpIt（可在 [https://github.com/thimbleweed/All-In-USB/tree/master/utilities/DumpIt](https://github.com/thimbleweed/All-In-USB/tree/master/utilities/DumpIt)
    上找到）最初由 MoonSols 开发。随后，Comae 维护了该项目。截至 2021 年，DumpIt 似乎已被整合到 Comae Platform V2.0
    的闭门测试版中。它是 `Win32dd` 和 `Win64dd` 的结合体，打包成一个可执行文件。最终用户无法进行任何配置。这款工具快速、小巧、便携，并且对
    RAM 的占用极少。
- en: 'DumpIt is the simplest of all the tools to use. Once you have created your
    external device and have responded to the scene, you need to follow these steps:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: DumpIt 是所有工具中最简单的一个。创建外部设备并回应场景后，你需要按照以下步骤操作：
- en: Insert your thumb drive into the target host.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的 U 盘插入目标主机。
- en: 'Type `cmd` (as shown in the following screenshot):'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `cmd`（如下面的截图所示）：
- en: '![Figure 7.2 – Search bar](img/B18329_07_02.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.2 – 搜索栏](img/B18329_07_02.png)'
- en: 'Figure 7.2: Search bar'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2：搜索栏
- en: 'Right-click on **Command Prompt** so that you can run it as an administrator
    (as shown in the following screenshot):'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击 **命令提示符**，以管理员身份运行（如下图所示）：
- en: '![Image administrator](img/B18329_07_03.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![管理员图像](img/B18329_07_03.png)'
- en: 'Figure 7.3: Run as administrator'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3：以管理员身份运行
- en: Once Command Prompt comes up, navigate to the folder on your USB device that
    contains the executable. You will then type in the `cmd` command and execute it.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦命令提示符出现，导航到 U 盘上的文件夹，找到包含可执行文件的文件夹。然后你需要输入 `cmd` 命令并执行它。
- en: 'The system will then present you with a screen showing the amount of physical
    memory and the amount of space on the device. It will then ask you if you want
    to continue. Select `y`, as shown in the following screenshot:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统将显示一个屏幕，展示物理内存的大小和设备上的空间。然后它会询问你是否继续。选择 `y`，如下面的截图所示：
- en: '![](img/B18329_07_04.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18329_07_04.png)'
- en: 'Figure 7.4: DumpIt screen'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4：DumpIt 屏幕
- en: 'The amount of RAM installed will dictate the amount of time it will take to
    create the dump of the RAM. Once the process has been completed, the program will
    notify you that it was successful:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装的 RAM 大小将决定创建内存转储所需的时间。一旦该过程完成，程序会通知你成功：
- en: '![](img/B18329_07_05.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18329_07_05.png)'
- en: 'Figure 7.5: DumpIt successful'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.5：DumpIt 成功
- en: DumpIt is not the only tool available. There are additional open-source alternatives,
    such as FTK Imager, which we will discuss next.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: DumpIt 并不是唯一可用的工具。还有其他开源替代工具，如 FTK Imager，接下来我们将讨论它。
- en: Using FTK Imager
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 FTK Imager
- en: FTK Imager Lite (available at [http://accessdata.com](http://accessdata.com))
    is a GUI-based utility that allows a user to dump the memory of a computer system
    running either a Windows 32-bit or 64-bit operating system. This tool is easy
    to use and deployable on a thumb drive. This tool also allows us to mount binary
    dump files for viewing. Since it is GUI-based, it leaves a significant footprint
    on the RAM.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: FTK Imager Lite（可在 [http://accessdata.com](http://accessdata.com) 获取）是一个基于图形界面的工具，允许用户转储运行
    Windows 32 位或 64 位操作系统的计算机系统的内存。这个工具易于使用，并且可以部署在 U 盘上。它还允许我们挂载二进制转储文件进行查看。由于是图形界面的，它对
    RAM 留下了较大的足迹。
- en: FTK Imager is also relatively easy to use. Remember that it is GUI-based, so
    as you launch the executable from your external storage device, it will overwrite
    more data in memory than a CLI-based tool.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: FTK Imager 也相对易于使用。记住，它是基于图形界面的，因此在从外部存储设备启动可执行文件时，它会在内存中覆盖比基于命令行的工具更多的数据。
- en: 'Once you have responded to the scene, you will need to do the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你回应了该场景，你需要执行以下操作：
- en: Insert your thumb drive into the target host.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的 U 盘插入目标主机。
- en: If **File Explorer** does not automatically launch, use the *Windows* + *E*
    keyboard shortcut to open it.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 **文件资源管理器** 没有自动启动，请使用 *Windows* + *E* 快捷键打开它。
- en: 'Launch FTK Imager, left-click on **File**, and select **Capture Memory...**,
    as shown in the following screenshot:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 FTK Imager，左键点击 **文件**，然后选择 **捕获内存...**，如下面的截图所示：
- en: '![](img/B18329_07_06.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18329_07_06.png)'
- en: 'Figure 7.6: FTK Imager menu'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6：FTK Imager 菜单
- en: The **Memory Capture** window will appear as shown in the following screenshot.
    Here, you can fill in the destination path:![FTK Imager memory capture ](img/B18329_07_07.png)
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Memory Capture**窗口将会如以下截图所示出现。在这里，您可以填写目标路径：![FTK Imager内存捕获](img/B18329_07_07.png)'
- en: 'Figure 7.7: FTK Imager memory capture'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图7.7：FTK Imager内存捕获
- en: However, ensure that you select your external storage device.
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，请确保选择您的外部存储设备。
- en: You also have the option to choose the `pagefile`. There is no reason not to.
    Check that box and then left-click on **Capture Memory**.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以选择`pagefile`。没有理由不选择它。勾选该框，然后左键点击**Capture Memory**。
- en: 'Once the tool has finished, you will receive a success notification, as shown
    in the following screenshot. This will store the memory file on your external
    storage device:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦工具完成操作，您将收到成功通知，如下图所示。此操作将把内存文件存储到您的外部存储设备上：
- en: '![FTK Image successful ](img/B18329_07_08.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![FTK Imager成功](img/B18329_07_08.png)'
- en: 'Figure 7.8: FTK Image successful'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.8：FTK Imager成功
- en: No matter which tool you used to collect the memory, once you have collected
    it, you need to get a hash value of the file you just created. You do not want
    to use the suspect’s system because any commands you issue will change the state
    of the evidence. You will want to use your forensic laptop or your forensic workstation
    at your laboratory to generate the hash value.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您使用哪种工具来收集内存，一旦收集完成，您需要获取刚刚创建的文件的哈希值。您不想使用嫌疑人的系统，因为任何发出的命令都会改变证据的状态。您将需要使用您的取证笔记本电脑或实验室的取证工作站来生成哈希值。
- en: Now that you have created a memory dump of the RAM, what tools will you use
    to analyze it? Let’s talk about some tools that can be used to analyze RAM.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经创建了RAM的内存转储，接下来用什么工具来分析它呢？让我们来讨论一些可以用来分析RAM的工具。
- en: Exploring RAM analyzing tools
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索RAM分析工具
- en: 'Just like when we analyze forensic images created from traditional storage
    devices, you have the choice of open source or commercial software. It comes down
    to the examiner’s preferences (and sometimes budget) on what tool they wish to
    use to analyze the dataset. We will go over some available tools, but this is
    not an all-inclusive list. Most commercial tools will analyze a memory file; we
    will discuss some open-source options that are available here:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们分析来自传统存储设备的取证镜像一样，您有选择开源或商业软件的权利。选择哪个工具取决于检查员的个人偏好（有时还涉及预算），用以分析数据集。我们将介绍一些可用的工具，但这不是一个全面的列表。大多数商业工具都能分析内存文件；在这里，我们将讨论一些可用的开源选项：
- en: 'Bulk Extractor: Bulk Extractor (available at [http://digitalcorpora.org/downloads/bulk_extractor](http://digitalcorpora.org/downloads/bulk_extractor))
    scans the target media (disk image, file, directory) and extracts what it believes
    to be useful information. It ignores the filesystem structure, which allows it
    to process different parts of the source dataset in parallel. This makes it very
    fast compared to traditional forensic tools. As Bulk Extractor finds data it believes
    to be relevant, it creates a histogram of the artifacts.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bulk Extractor：Bulk Extractor（可从[http://digitalcorpora.org/downloads/bulk_extractor](http://digitalcorpora.org/downloads/bulk_extractor)下载）扫描目标介质（磁盘镜像、文件、目录）并提取它认为有用的信息。它忽略文件系统结构，这使得它能够并行处理源数据集的不同部分。与传统的取证工具相比，这使得它非常快速。随着Bulk
    Extractor找到它认为相关的数据，它会生成一个艺术品的直方图。
- en: 'Volatility: Volatility (available at [https://www.volatilityfoundation.org](https://www.volatilityfoundation.org))
    is an open-source framework for incident response and malware analysis. Volatility
    supports a wide variety of memory dumps from multiple operating systems. Volatility
    is very powerful and has numerous plugins.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Volatility：Volatility（可从[https://www.volatilityfoundation.org](https://www.volatilityfoundation.org)下载）是一个开源框架，用于事件响应和恶意软件分析。Volatility支持多种操作系统的内存转储。Volatility非常强大，并且有许多插件可用。
- en: 'VOLIX II v2: VOLIX II (available at [https://www.fh-aachen.de/en/people/schuba/forschung/it-forensik/projekte/volix-en](https://www.fh-aachen.de/en/people/schuba/forschung/it-forensik/projekte/volix-en))
    is a GUI frontend for Volatility. It allows you to combine commands to enhance
    usability and speed. It saves you the effort of working with a CLI and enables
    you to point and click to achieve the same result.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VOLIX II v2：VOLIX II（可从[https://www.fh-aachen.de/en/people/schuba/forschung/it-forensik/projekte/volix-en](https://www.fh-aachen.de/en/people/schuba/forschung/it-forensik/projekte/volix-en)下载）是Volatility的图形用户界面前端。它允许您结合命令以增强可用性和速度。它省去了使用命令行界面的麻烦，并且使您可以通过点击和选择来实现相同的结果。
- en: We will discuss the use of some of these open-source options.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论一些开源选项的使用。
- en: Using Bulk Extractor
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Bulk Extractor
- en: 'Let’s look at how Bulk Extractor works:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看 Bulk Extractor 是如何工作的：
- en: 'Bulk Extractor’s documentation lists the following information about its output:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bulk Extractor 的文档列出了其输出的以下信息：
- en: '![Table  Description automatically generated](img/B18329_07_09.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![表格描述自动生成](img/B18329_07_09.png)'
- en: 'Figure 7.9: Bulk Extractor output options'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.9：Bulk Extractor 输出选项
- en: You will need to left-click on **Tools** and select **Run bulk_extractor…**
    to start analyzing your memory dump, as shown in the following screenshot. When
    you run Bulk Extractor, the viewer will present itself:![](img/B18329_07_10.png)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要左键单击 **工具** 并选择 **运行 bulk_extractor…** 来开始分析您的内存转储，如下图所示。当您运行 Bulk Extractor
    时，查看器将显示出来：![](img/B18329_07_10.png)
- en: 'Figure 7.10: Bulk Extractor menu – the run bulk extractor option'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.10：Bulk Extractor 菜单 – 运行 bulk extractor 选项
- en: It will then present you with the **Run bulk_extractor** menu.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，它将呈现 **运行 bulk_extractor** 菜单。
- en: Direct the tool to the location of your image file and the output directory
    you wish to use. As shown in the following screenshot, you can see the numerous
    scanners that the Bulk Extractor tool uses to look for artifacts within the memory
    file:![A picture containing graphical user interface  Description automatically
    generated](img/B18329_07_11.png)
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将工具指向您的图像文件位置和您希望使用的输出目录。如下面的截图所示，您可以看到 Bulk Extractor 工具使用的多个扫描器，它们用于在内存文件中查找证据：![一个图形用户界面截图  描述自动生成](img/B18329_07_11.png)
- en: 'Figure 7.11: Bulk Extractor menu options to run'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 7.11：Bulk Extractor 菜单选项以运行
- en: You can check or uncheck a given specific artifact search as your needs dictate.
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以根据需要选中或取消选中特定的证据搜索项。
- en: 'Once you are satisfied with the setup, left-click on the **Submit Run** button
    to start the extraction process. Once the extraction has started, it will present
    you with the extraction window, as shown in the following screenshot:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您对设置感到满意，左键单击 **提交运行** 按钮以开始提取过程。一旦提取开始，它将呈现提取窗口，如下面的截图所示：
- en: '![Bulk Extraction successful extraction window ](img/B18329_07_12.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![Bulk Extraction 成功提取窗口](img/B18329_07_12.png)'
- en: 'Figure 7.12: Bulk Extraction window'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.12：Bulk Extraction 窗口
- en: 'Left-click on the **Close** button to go back to the viewer. The following
    screenshot shows the **Bulk Extractor Viewer**:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 左键单击 **关闭** 按钮以返回查看器。以下截图显示了 **Bulk Extractor 查看器**：
- en: '![](img/B18329_07_13.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18329_07_13.png)'
- en: 'Figure 7.13: Bulk Extractor Viewer – extracted content'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.13：Bulk Extractor 查看器 – 提取的内容
- en: On the left-hand side, we can see the specific artifacts recovered by the tool.
    In the preceding screenshot, I selected the `email_histogram.txt` file, which
    gives us a list of times it found a particular email address. By looking at the
    histogram window, I can see that it found the `jcloudy1` email address over 8,000
    times. As you go through the email list, you may find emails of evidentiary interest
    to follow up while using traditional media.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧，我们可以看到该工具恢复的具体证据。在前面的截图中，我选择了 `email_histogram.txt` 文件，它提供了该工具找到某个特定电子邮件地址的时间列表。通过查看直方图窗口，我可以看到它找到了
    `jcloudy1` 电子邮件地址超过 8,000 次。当您浏览电子邮件列表时，可能会找到具有证据价值的邮件，以便在使用传统媒体时跟进。
- en: Bulk Extractor is a quick and efficient tool used to extract data strings that
    you can follow up in your investigation. The following tool we will discuss is
    Volix II.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Bulk Extractor 是一个快速高效的工具，用于提取您可以在调查中跟进的数据字符串。接下来我们将讨论的工具是 Volix II。
- en: Using VOLIX II
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 VOLIX II
- en: 'Volix is a GUI frontend for the Volatility framework. It makes it a bit easier
    for those who are not comfortable using a **command-line interface** (**CLI**).
    Once the program has been downloaded and you start it for the first time, it will
    present you with the following screen:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Volix 是 Volatility 框架的 GUI 前端。它使得不习惯使用 **命令行界面**（**CLI**）的用户操作起来更加简便。下载程序并首次启动后，它将呈现以下界面：
- en: '![Volix settings ](img/B18329_07_14.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![Volix 设置](img/B18329_07_14.png)'
- en: 'Figure 7.14: Volix settings'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.14：Volix 设置
- en: Then, you will be pointed to the location of the Volatility framework. You can
    use either the standalone executable or the binary files to run the Python scripts.
    Here, I have already downloaded the standalone executable and have pointed Volix
    to it.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您将被指引到 Volatility 框架的位置。您可以使用独立的可执行文件或二进制文件来运行 Python 脚本。在这里，我已经下载了独立的可执行文件并将
    Volix 指向它。
- en: The other options you can select include the language you wish to use Volix
    in. If you have a VirusTotal API key, you can insert it on that page. This will
    compare the data captured from RAM and see if it matches any malware being tracked
    by VirusTotal.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择的其他选项包括你希望使用的 Volix 语言。如果你有 VirusTotal API 密钥，你可以在该页面插入它。这将比较从 RAM 捕获的数据，并查看是否与
    VirusTotal 跟踪的任何恶意软件匹配。
- en: 'You also have the option of pointing Volix to the John the Ripper executable.
    If you want to decode/decrypt potential passwords that may be stored in the RAM,
    follow these steps:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以选择将 Volix 指向 John the Ripper 可执行文件。如果你想解码/解密可能存储在 RAM 中的潜在密码，请按照以下步骤操作：
- en: 'Once you’ve selected **Case**, choose **New**. It will ask you the location
    of the memory file you wish to analyze, as shown in the following screenshot:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你选择了**案例**，选择**新建**。它会询问你要分析的内存文件的位置，如下图所示：
- en: '![Volix RAM location ](img/B18329_07_15.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![Volix RAM 位置](img/B18329_07_15.png)'
- en: 'Figure 7.15: Volix RAM location'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.15：Volix RAM 位置
- en: If you click on **Reporting**, you can specify the path for the report file
    that Volix will generate.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你点击**报告**，你可以指定 Volix 生成的报告文件路径。
- en: 'Once you select **OK**, the Volix wizard screen will appear. You now have the
    option of going through a questionnaire to determine what options you wish to
    run on the memory file. You can also select one of the pre-created scripts to
    search for that specific artifact, such as **Virus detection** or **Decrypt SAM
    Hashes**, as shown in the following screenshot:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你选择**确定**，Volix 向导屏幕将出现。你现在可以选择通过问卷来确定你希望在内存文件上运行的选项。你还可以选择一个预创建的脚本来搜索特定的工件，如**病毒检测**或**解密
    SAM 哈希值**，如下图所示：
- en: '![](img/B18329_07_16.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18329_07_16.png)'
- en: 'Figure 7.16: VOLIX wizard'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.16：VOLIX 向导
- en: 'I selected **Complete Scan**. You can see the results in the following screenshot:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我选择了**完整扫描**。你可以在以下截图中看到结果：
- en: '![](img/B18329_07_17.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18329_07_17.png)'
- en: 'Figure 7.17: Volix scan results'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.17：Volix 扫描结果
- en: From the preceding screenshot, you can see I have selected `getsids`. Below
    this on the screen, it has pulled out the SIDs that were in memory at the time
    of collection.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图中，你可以看到我选择了`getsids`。在屏幕下方，它列出了在收集时内存中的 SIDs。
- en: How many artifacts you ask it to search for at once will dictate the length
    of time for the application to complete. Overall, it is a relatively quick search
    compared to other tools.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 你要求它一次搜索多少个工件，会决定应用程序完成所需的时间。总体而言，与其他工具相比，这是一个相对快速的搜索。
- en: Summary
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned about the cornucopia of artifacts you can recover
    from RAM. You learned about the different tools you can use for the collection
    process and the tools you can use for analysis. Remember that the tools are constantly
    changing with the technology, and as new operating systems are released, your
    primary tool may not be able to collect RAM data. Always have a backup plan in
    case something like that occurs.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了从 RAM 中可以恢复的各种工件。你了解了可以用于收集过程的不同工具，以及可以用于分析的工具。记住，工具会随着技术不断变化，随着新操作系统的发布，你的主要工具可能无法收集到
    RAM 数据。遇到这种情况时，一定要有备份计划。
- en: You now have the skills to identify and capture RAM in a manner that conforms
    to best practices. As you analyze the RAM you have captured, you may find artifacts
    showing the user’s activity on the system, such as social media artifacts and
    passwords or encryption keys that can be recovered.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经具备了识别和捕获符合最佳实践的 RAM 的技能。当你分析捕获到的 RAM 时，你可能会发现一些工件，显示出用户在系统上的活动，例如社交媒体工件、密码或加密密钥，这些都可以恢复。
- en: You may even find information relating to the user’s use of email, which will
    lead us to our next chapter, which is all about email forensics.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可能会发现与用户使用电子邮件相关的信息，这将引导我们进入下一章，专门讲解电子邮件取证。
- en: Questions
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which of the following are sources of RAM data?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪些是 RAM 数据的来源？
- en: Physical memory
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 物理内存
- en: '`Pagefile.mem`'
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Pagefile.mem`'
- en: '`Swapfile.page`'
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Swapfile.page`'
- en: ROM
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: ROM
- en: Which file is created when the computer goes to sleep?
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当计算机进入睡眠状态时，哪个文件会被创建？
- en: '`Pagefile.sys`'
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Pagefile.sys`'
- en: '`Swapfile.sys`'
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Swapfile.sys`'
- en: '`Hiberfill.sys`'
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Hiberfill.sys`'
- en: '`Hibernation.sys`'
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Hibernation.sys`'
- en: When should you capture RAM?
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该什么时候捕获 RAM？
- en: Every hour
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每小时
- en: Every week
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每周
- en: In every digital forensic investigation
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每次数字取证调查中
- en: When you deem it important
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你认为它很重要时
- en: In general, how many items do you need in order to collect RAM?
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常来说，你需要多少项才能收集 RAM？
- en: '1'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1'
- en: '2'
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2'
- en: '3'
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3'
- en: '4'
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4'
- en: DumpIt is a GUI tool.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DumpIt 是一个图形界面工具。
- en: 'True'
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: 'False'
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误
- en: It is acceptable to install DumpIt on the suspect’s computer.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在嫌疑人的计算机上安装DumpIt是可以接受的。
- en: 'True'
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: 'False'
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误
- en: Which of the following are analysis tools?
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪些是分析工具？
- en: DumpIt
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: DumpIt
- en: FTK Imager
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: FTK Imager
- en: Volatility
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Volatility
- en: MD5 hash
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: MD5哈希
- en: Further reading
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Ligh, M. H., Case, A., Levy, J., & Walters, A. (2014). *The Art of Memory Forensics:
    Detecting Malware and Threats in Windows*, Linu. John Wiley & Sons. (Available
    at [https://www.amazon.com/Art-Memory-Forensics-Detecting-Malware/dp/1118825098](https://www.amazon.com/Art-Memory-Forensics-Detecting-Malware/dp/1118825098).)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Ligh, M. H., Case, A., Levy, J., & Walters, A. (2014). *记忆取证的艺术：检测Windows中的恶意软件和威胁*，Linu。约翰·威利父子公司。（可在[https://www.amazon.com/Art-Memory-Forensics-Detecting-Malware/dp/1118825098](https://www.amazon.com/Art-Memory-Forensics-Detecting-Malware/dp/1118825098)获取。）
- en: Join our community on Discord
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们在Discord上的社区
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 加入我们社区的Discord空间，与作者和其他读者进行讨论：
- en: '[https://packt.link/CyberSec](https://packt.link/CyberSec)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/CyberSec](https://packt.link/CyberSec)'
- en: '![](img/QR_Code3852467292877112093.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code3852467292877112093.png)'
