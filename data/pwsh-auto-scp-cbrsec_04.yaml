- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Detection – Auditing and Monitoring
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测——审计与监控
- en: Although organizations already try to harden their environments, only a few
    take into account that auditing and monitoring are two of the most important things
    when it comes to securing your environment.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管组织已经在努力加强其环境的安全性，但只有少数组织意识到，审计和监控是确保环境安全时最重要的两项工作。
- en: For many years while working at Microsoft, I have preached the *protect*, *detect*,
    and *respond* approach. Most companies try to just *protect* their devices, but
    that’s where they stop. To *detect* and *respond*, there needs to be not only
    a working **Security Operations Center** (**SOC**) in place but also infrastructure
    and resources.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，在微软工作时，我一直倡导*保护*、*检测*和*响应*的策略。大多数公司只试图*保护*他们的设备，但他们仅停留在这一层面。要做到*检测*和*响应*，不仅需要一个有效的**安全运营中心**（**SOC**），还需要基础设施和资源。
- en: Those people and resources require money – a budget that many companies don’t
    want to spend in the first place, unless they have been breached.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这些人力和资源需要资金——这也是许多公司一开始不愿意投入的预算，除非他们已经遭遇了攻击。
- en: When working with customers, I saw only a few environments with a working SOC
    in place, as well as the infrastructure to host a **Security Information and Event
    Management** (**SIEM**) system. I was really happy that when I left those customers,
    most of them started rethinking their approach and improved their security practices,
    as well as their monitoring and detection.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在与客户合作时，我只见过少数环境中拥有有效的SOC，并且具备部署**安全信息与事件管理系统**（**SIEM**）的基础设施。当我离开这些客户时，我很高兴地看到大多数客户开始重新审视他们的安全策略，并改进了安全性、监控和检测。
- en: However, I also had customers that were already breached when I was introduced
    to them for the first time. Customers that never had the budget nor employees
    for detections suddenly had the budget to improve immediately, as soon as they
    were breached.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我也遇到过一些客户，在我第一次接触他们时，他们已经遭到攻击。这些客户曾经没有预算，也没有员工来进行检测，但一旦被攻击，他们就立刻有了改善的预算。
- en: And over the years, I learned that it’s not a question of *whether* an organization
    will be hacked – it is rather *when* they will be hacked, and *how long* the attacker
    stays in the environment unnoticed. That’s if they are detected at all.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我了解到，问题不在于组织是否会被黑客攻击，而是**何时**会被攻击，以及**攻击者在环境中逗留多长时间**而不被察觉。如果他们最终被发现的话。
- en: Therefore, I recommend to every IT decision-maker that I meet to *assume a breach*
    and protect what is important.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我建议我遇到的每一位IT决策者都要*假设已经遭到入侵*，并保护好重要的资产。
- en: Over the years, I saw more and more organizations that actually had operating
    SOCs in place, which made me really happy. But unfortunately – especially when
    looking at small and medium-sized enterprises – most organizations have either
    no monitoring in place or are just starting their journey.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我看到越来越多的组织实际上已经建立了运营中的安全运营中心（SOC），这让我感到非常高兴。但不幸的是——尤其是在中小型企业中——大多数组织要么没有监控机制，要么刚刚开始这方面的工作。
- en: PowerShell has been covered in the media several times when it comes to attacks.
    Ransomware malware was distributed, sending malicious emails that launched PowerShell
    in the background to execute a payload, a fileless attack in which the malware
    does not need to be downloaded on the client but runs in the memory instead, and
    even legitimate system tools that have been abused by adversaries to execute their
    attacks (also known as **Living Off the Land** or **LOLbins**).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 在攻击中的使用多次被媒体报道。勒索病毒通过发送恶意邮件来分发，邮件在后台启动 PowerShell 执行载荷，这是一种无文件攻击，恶意软件无需在客户端下载，而是直接在内存中运行，甚至合法的系统工具也被对手滥用来执行攻击（也被称为**依赖本地资源攻击**或**LOLbins**）。
- en: And yes, attackers like to leverage what they already find on a system. However,
    if organizations had not only the appropriate mitigations in place but also the
    right detection, it would make it way harder for adversaries to launch a successful
    attack and stay unnoticed.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，攻击者喜欢利用他们在系统中找到的东西。然而，如果组织不仅采取了适当的缓解措施，还实施了正确的检测方式，那么这将使对手更难发起成功的攻击并保持隐匿。
- en: Many tools that adversaries use in their attacks provide little to no transparency,
    so it can be really hard for defenders (a.k.a. the **blue team**) to detect and
    analyze such an attack.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 许多对手在攻击中使用的工具几乎没有任何透明度，因此防御者（也就是**蓝队**）很难检测和分析这样的攻击。
- en: PowerShell, in contrast, provides such amazing logging opportunities that it
    is quite easy to analyze and detect an attack that was launched using it. Therefore,
    if you are a blue teamer and you notice that you were targeted with a PowerShell-based
    attack, you are in luck (as much as you can be in luck if your infrastructure
    was attacked)! This makes it much easier for you to find out what happened.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 与此相反，PowerShell 提供了如此强大的日志记录功能，使得分析和检测通过它发起的攻击变得非常容易。因此，如果你是蓝队成员，并且注意到自己遭遇了基于
    PowerShell 的攻击，那么你算是走运了（就算你的基础设施遭到攻击，也算是走运吧）！这使得你更容易弄清楚发生了什么。
- en: Having an extensive (not exclusively restricted to) PowerShell logging infrastructure
    in place helps your SOC team to identify attackers and get insights into what
    commands and code adversaries executed. It also helps to improve your detection
    and security controls.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有一个广泛的（不仅限于）PowerShell 日志记录基础设施，可以帮助你的 SOC 团队识别攻击者并了解对手执行了哪些命令和代码。这也有助于提高你的检测能力和安全控制。
- en: 'In this chapter, you will learn the basics of security monitoring with PowerShell,
    which will help you to get started with your detections or improve them. In this
    chapter, you will get a deeper understanding of the following topics:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习使用 PowerShell 进行安全监控的基础知识，这将帮助你开始进行检测或改进检测。在本章中，你将对以下主题有更深入的了解：
- en: Configuring PowerShell Event Logging
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 PowerShell 事件日志
- en: PowerShell Module Logging
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 模块日志记录
- en: PowerShell Script Block Logging
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 脚本块日志记录
- en: Protected Event Logging
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护的事件日志记录
- en: PowerShell transcripts
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 转录
- en: Analyzing event logs
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析事件日志
- en: Getting started with logging
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用日志记录
- en: The most important PowerShell related event logs and IDs
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最重要的与 PowerShell 相关的事件日志和事件 ID
- en: Technical requirements
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To get the most out of this chapter, ensure that you have the following:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最大限度地发挥本章的作用，请确保你具备以下内容：
- en: PowerShell 7.3 and above.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 7.3 及以上版本
- en: 'Access to the GitHub repository for **Chapter04**:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第四章**的 GitHub 仓库访问链接：'
- en: '[https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/tree/master/Chapter04](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/tree/master/Chapter04)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/tree/master/Chapter04](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/tree/master/Chapter04)'
- en: Configuring PowerShell Event Logging
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 PowerShell 事件日志
- en: Implementing robust auditing mechanisms for PowerShell to help you monitor,
    detect and prevent potential threats is an essential step to ensure effective
    security practices for PowerShell. By leveraging PowerShell logging, you can capture
    detailed information about PowerShell activities on your systems, which is essential
    for detecting and investigating security incidents. PowerShell logging can help
    you identify suspicious activities, such as the execution of malicious commands
    or the modification of critical system settings.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 实施强大的 PowerShell 审计机制，帮助你监控、检测和防范潜在威胁，是确保 PowerShell 安全实践有效性的关键步骤。通过利用 PowerShell
    日志记录，你可以捕捉到系统上 PowerShell 活动的详细信息，这对于检测和调查安全事件至关重要。PowerShell 日志记录可以帮助你识别可疑活动，例如恶意命令的执行或关键系统设置的修改。
- en: In this section, we will discuss the different types of PowerShell logging that
    you can enable, including PowerShell Module Logging, PowerShell Script Block Logging,
    Protected Event Logging, and PowerShell transcripts. We will also look into how
    to configure these logging features to meet your organization’s specific security
    requirements.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论你可以启用的不同类型的 PowerShell 日志记录，包括 PowerShell 模块日志记录、PowerShell 脚本块日志记录、保护的事件日志记录和
    PowerShell 转录。我们还将探讨如何配置这些日志记录功能，以满足你所在组织的具体安全需求。
- en: PowerShell Module Logging
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PowerShell 模块日志记录
- en: PowerShell Module Logging was added with **PowerShell 3.0**. This feature provides
    extensive logging of all PowerShell commands that are executed on the system.
    If Module Logging is enabled, pipeline execution events are generated and written
    to the **Microsoft-Windows-Powershell/Operational** event log in the context of
    event ID **4103**.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 模块日志记录在 **PowerShell 3.0** 中新增。此功能提供对系统上执行的所有 PowerShell 命令的广泛日志记录。如果启用了模块日志记录，管道执行事件将生成并写入
    **Microsoft-Windows-Powershell/Operational** 事件日志，事件 ID 为 **4103**。
- en: How to configure Module Logging
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何配置模块日志记录
- en: You can either enable Module Logging for the execution of a module in the current
    session, or you can configure it to be turned on permanently.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择仅在当前会话中为某个模块启用模块日志记录，或者将其配置为永久开启。
- en: Enabling it only within a single session only makes sense if you want to troubleshoot
    the behavior of a certain module. If you want to detect the commands that adversaries
    run in your infrastructure, it makes sense to turn on Module Logging permanently.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在单个会话中启用它只有在您想要排查某个特定模块的行为时才有意义。如果您想要检测对手在您的基础设施中运行的命令，那么开启模块日志记录并使其保持常开是有意义的。
- en: 'To enable Module Logging within the current session, only for a certain module,
    you need to import the module first. In this example, we will use the **EventList**
    module:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅在当前会话中为某个特定模块启用模块日志记录，您需要先导入该模块。在此示例中，我们将使用**EventList**模块：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Of course, you can replace the module name, **EventList**, with any other module
    name that you want to log pipeline execution details for:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您可以将模块名称**EventList**替换为任何您希望记录管道执行详细信息的模块名称：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you want to monitor a managed environment, you don’t want to enable PowerShell
    Module Logging manually on every host. In this case, you can use Group Policy
    to enable Module Logging.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要监控一个受管理的环境，您不希望在每台主机上手动启用 PowerShell 模块日志记录。在这种情况下，您可以使用组策略来启用模块日志记录。
- en: 'Create a new **Group Policy Object** (**GPO**). As Windows PowerShell and PowerShell
    Core were designed to co-exist and can be configured individually, it depends
    on what PowerShell version you want to configure:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的**组策略对象**（**GPO**）。由于 Windows PowerShell 和 PowerShell Core 被设计为共存并可以单独配置，因此取决于您想要配置哪个
    PowerShell 版本：
- en: To configure Windows PowerShell, navigate to **Computer Configuration** | **Policies**
    | **Administrative Templates** | **Windows Components** | **Windows PowerShell**
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要配置 Windows PowerShell，请导航至**计算机配置** | **策略** | **管理模板** | **Windows 组件** |
    **Windows PowerShell**
- en: To configure PowerShell Core, navigate to **Computer Configuration** | **Administrative
    Templates** | **PowerShell Core**
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要配置 PowerShell Core，请导航至**计算机配置** | **管理模板** | **PowerShell Core**
- en: Where are my PowerShell Core .admx templates?
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我的 PowerShell Core .admx 模板在哪里？
- en: If you haven’t imported the **.admx** templates into your Group Policies yet
    to configure PowerShell Core, please refer to [*Chapter 1*](B16679_01_Final_PD.xhtml#_idTextAnchor016),
    *Getting Started* *with PowerShell*.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未将**.admx**模板导入到您的组策略中来配置 PowerShell Core，请参见[*第 1 章*](B16679_01_Final_PD.xhtml#_idTextAnchor016)，*开始使用
    PowerShell*。
- en: 'Select and edit the **Turn on Module Logging** policy. A window opens to configure
    Module Logging:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 选择并编辑**启用模块日志记录**策略。此时将打开一个窗口以配置模块日志记录：
- en: "![Figure 4.1 – Configur\uFEFFing Module Logging for Windows PowerShell via\
    \ Group Policy](image/B16679_04_001.jpg)"
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.1 – 通过组策略配置 Windows PowerShell 的模块日志记录](image/B16679_04_001.jpg)'
- en: Figure 4.1 – Configuring Module Logging for Windows PowerShell via Group Policy
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1 – 通过组策略配置 Windows PowerShell 的模块日志记录
- en: For PowerShell Core, the configuration Window looks almost the same, except
    for the **Use Windows PowerShell Policy setting.** option. If this option is selected,
    PowerShell Core relies on the existing Windows PowerShell configuration.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 PowerShell Core，配置窗口几乎是一样的，唯一的不同是**使用 Windows PowerShell 策略设置**选项。如果选中此选项，PowerShell
    Core 将依赖现有的 Windows PowerShell 配置。
- en: '![Figure 4.2 – Configure Module Logging for PowerShell Core via Group Policy](image/B16679_04_002.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.2 – 通过组策略配置 PowerShell Core 的模块日志记录](image/B16679_04_002.jpg)'
- en: Figure 4.2 – Configure Module Logging for PowerShell Core via Group Policy
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2 – 通过组策略配置 PowerShell Core 的模块日志记录
- en: Enable **Use Windows PowerShell Policy setting** if you want to only use one
    GPO for your Module Logging configuration. Next, depending on your configuration,
    either in the Windows PowerShell or PowerShell Core Module Logging GPO, go to
    **Module Names**, and click on the **Show…** button to configure the modules for
    which Module Logging should be turned on. A new window opens.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只想使用一个 GPO 来配置模块日志记录，请启用**使用 Windows PowerShell 策略设置**。接下来，根据您的配置，在 Windows
    PowerShell 或 PowerShell Core 模块日志记录 GPO 中，进入**模块名称**，然后点击**显示…**按钮来配置需要开启模块日志记录的模块。此时将打开一个新窗口。
- en: '![Figure 4.3 – Configuring a wildcard (*) to log all modules](image/B16679_04_003.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.3 – 配置通配符 (*) 来记录所有模块](image/B16679_04_003.jpg)'
- en: Figure 4.3 – Configuring a wildcard (*) to log all modules
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3 – 配置通配符 (*) 来记录所有模块
- en: Now, you can configure single modules for which Module Logging should be turned
    on, but for security monitoring, it makes sense to monitor all Module Logging
    events – no matter which module was executed.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以为单个模块配置启用模块日志记录，但对于安全监控来说，监控所有模块日志记录事件更有意义——无论执行的是哪个模块。
- en: You can achieve this by configuring a wildcard (*****) as a module name. Confirm
    twice with **OK** and exit the GPO editor to make your changes active.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过配置通配符（*****）作为模块名称来实现此操作。确认两次点击**确定**并退出 GPO 编辑器，使更改生效。
- en: Of course, you can also add Module Logging for a single instance instead of
    monitoring all of them by specifying the module name as a value. However, I recommend
    logging all PowerShell activity (*****), which is especially useful if adversaries
    import custom PowerShell modules.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你也可以通过指定模块名称作为值，单独为某个实例添加模块日志记录，而不是监控所有实例。不过，我建议记录所有 PowerShell 活动（*****），这对于防止攻击者导入自定义
    PowerShell 模块特别有用。
- en: All events generated by this configuration can be found in the Microsoft Windows
    PowerShell Operational event log (**Microsoft-Windows-Powershell/Operational**).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由此配置生成的所有事件可以在 Microsoft Windows PowerShell 操作事件日志中找到（**Microsoft-Windows-Powershell/Operational**）。
- en: PowerShell Script Block Logging
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PowerShell 脚本块日志记录
- en: A **script block** is a collection of expressions and commands that is grouped
    together and executed as one unit. Of course, a single command can be also executed
    as a script block.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**脚本块**是由表达式和命令组成的集合，这些表达式和命令被组合在一起并作为一个单位执行。当然，单个命令也可以作为脚本块执行。'
- en: 'Many commands support the **-ScriptBlock** parameter, such as the **Invoke-Command**
    command. which you can use to run entire script blocks, locally or remotely:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 许多命令支持 **-ScriptBlock** 参数，例如 **Invoke-Command** 命令，你可以使用它来运行整个脚本块，本地或远程执行：
- en: '[PRE2]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: It is important to note that all actions performed in PowerShell are considered
    script blocks and will be logged if *Script Block Logging* is enabled – regardless
    of whether or not they use the **-****ScriptBlock** parameter.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，所有在 PowerShell 中执行的操作都被视为脚本块，如果启用了*脚本块日志记录*，它们将被记录——无论是否使用 **-****ScriptBlock**
    参数。
- en: Most of the time, companies and organizations do not care about logging and
    event log analysis unless a security incident occurs. However, by that point,
    it is already too late to enable logging retroactively. Therefore, the PowerShell
    team made the decision that security-relevant script blocks should be logged by
    default.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，企业和组织并不关心日志记录和事件日志分析，除非发生安全事件。然而，到了那时，已经为时过晚，无法事后启用日志记录。因此，PowerShell
    团队决定默认记录所有安全相关的脚本块。
- en: Starting with PowerShell 5, a *basic version of Script Block Logging* is enabled
    by default – only scripting techniques that are commonly used in malicious attacks
    are written to the **Microsoft-Windows-Powershell/Operational** event log.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 从 PowerShell 5 开始，默认启用*脚本块日志记录的基础版本*——只有常用于恶意攻击的脚本技术会被写入 **Microsoft-Windows-Powershell/Operational**
    事件日志。
- en: This basic version of Script Block Logging does not replace full Script Block
    Logging; it should only be considered as a last resort, if logging was not in
    place when an attack happened.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这种基础版本的脚本块日志记录并不能替代完整的脚本块日志记录；它应该仅仅作为最后的手段，如果在攻击发生时未启用日志记录时使用。
- en: If you want to protect your environment and detect malicious activities, you
    still should consider turning on *full Script* *Block Logging*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想保护环境并检测恶意活动，仍然应该考虑开启*完整的脚本* *块日志记录*。
- en: Additionally, there’s an even more verbose option when configuring Script Block
    Logging – *Script Block* *Invocation Logging*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在配置脚本块日志记录时，还有一个更详细的选项——*脚本块* *调用日志记录*。
- en: By default, only script blocks are logged the first time they are used. Configuring
    Script Block Invocation Logging also generates events every time script blocks
    are invoked and when scripts start or stop.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，只有在首次使用时，脚本块才会被记录。配置脚本块调用日志记录后，每次调用脚本块以及脚本启动或停止时，都会生成事件。
- en: Enabling Script Block Invocation Logging can generate a high volume of events,
    which may flood the log and roll out useful security data from other events. Be
    careful with enabling Script Block Invocation Logging, as a high volume of events
    will be generated – usually, you don’t need it for incident analysis.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 启用脚本块调用日志记录可能会生成大量事件，这可能会淹没日志，并将其他事件中的有用安全数据滚出。启用脚本块调用日志记录时要小心，因为会生成大量事件——通常情况下，你在事件分析时不需要它。
- en: How to configure Script Block Logging
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何配置脚本块日志记录
- en: There are several ways to configure Script Block Logging – manually as well
    as centrally managed. Let’s have a look at what needs to be configured to log
    all the code executed in your environment.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 配置脚本块日志记录有多种方法——手动配置以及集中管理的方式。让我们看看需要配置什么才能记录您环境中执行的所有代码。
- en: 'To manually enable Script Block Logging, you can edit the registry. The settings
    that you want to change are within the following registry path:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要手动启用脚本块日志记录，您可以编辑注册表。要更改的设置位于以下注册表路径中：
- en: '[PRE3]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Using the **EnableScriptBlockLogging** (**REG_DWORD**) registry key, you can
    configure to enable Script Block Logging:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**EnableScriptBlockLogging**（**REG_DWORD**）注册表项，可以配置启用脚本块日志记录：
- en: '**Enabled**: Set the value to **1** to enable it'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用**：将值设置为**1**以启用它'
- en: '**Disabled**: Set the value to **0** to disable it'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁用**：将值设置为**0**以禁用它'
- en: If Script Block Logging is enabled, you will find all the executed code under
    event ID **4104**.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了脚本块日志记录，您将在事件 ID **4104** 下找到所有执行的代码。
- en: 'Using the **EnableScriptBlockInvocationLogging** (**REG_DWORD**) registry key,
    you can configure it to enable Script Block Invocation Logging (event IDs **4105**
    and **4106**):'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**EnableScriptBlockInvocationLogging**（**REG_DWORD**）注册表项，可以配置启用脚本块调用日志记录（事件
    ID **4105** 和 **4106**）：
- en: '**Enabled**: Set the value to **1** to enable it'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用**：将值设置为**1**以启用它'
- en: '**Disabled**: Set the value to **0** to disable it'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁用**：将值设置为**0**以禁用它'
- en: If Script Block Logging, as well as Script Block Invocation Logging, is enabled,
    event IDs **4105** and **4106** will be generated.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了脚本块日志记录以及脚本块调用日志记录，将会生成事件 ID **4105** 和 **4106**。
- en: If Script Block Invocation Logging is enabled, a lot of noise is generated and
    the log file size increases. Therefore, the maximum size should be reconfigured
    (see the *Increasing log size* section). For general security monitoring, you
    won’t need to configure verbose Script Block Logging.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了脚本块调用日志记录，则会生成大量噪音，日志文件的大小会增加。因此，应该重新配置最大日志大小（请参见*增加日志大小*部分）。对于一般的安全监控，您不需要配置详细的脚本块日志记录。
- en: 'You can configure Script Block Logging manually by running the following commands
    in an elevated PowerShell console:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在提升的 PowerShell 控制台中运行以下命令手动配置脚本块日志记录：
- en: '[PRE4]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The first command creates all the registry keys if they don’t exist yet, and
    the second one enables Script Block Logging.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令会在注册表项不存在时创建所有注册表键，第二个命令启用脚本块日志记录。
- en: 'When enabling **ScriptBlockLogging** using the described commands, **ScriptBlockLogging**
    will be enabled for both 32-bit and 64-bit applications. You can verify that both
    settings were configured under the following:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 启用**ScriptBlockLogging**时，使用上述命令，**ScriptBlockLogging**将同时为 32 位和 64 位应用程序启用。您可以通过以下方式验证两个设置是否已配置：
- en: '**HKLM:\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging**'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HKLM:\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging**'
- en: '**HKLM:\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging**'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HKLM:\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging**'
- en: In managed environments, it makes sense to manage your machines centrally. Of
    course, this can be done via PowerShell and/or **Desired State Configuration**
    (**DSC**), but it can be also done using Group Policy.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在受管环境中，将机器集中管理是有意义的。当然，这可以通过 PowerShell 和/或**Desired State Configuration**（**DSC**）来完成，但也可以通过组策略来完成。
- en: 'Create a new GPO. Depending on which PowerShell version you want to configure,
    navigate to either of the following:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的 GPO。根据您要配置的 PowerShell 版本，导航到以下任一项：
- en: '**Computer Configuration** | **Policies** | **Administrative Templates** |
    **Windows Components** | **Windows PowerShell** for Windows PowerShell'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算机配置** | **策略** | **管理模板** | **Windows 组件** | **Windows PowerShell** 用于
    Windows PowerShell'
- en: '**Computer Configuration** | **Administrative Templates** | **PowerShell Core**
    for PowerShell Core'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算机配置** | **管理模板** | **PowerShell Core** 用于 PowerShell Core'
- en: Select and edit the **Turn on PowerShell Script Block Logging** policy. A window
    will open to configure Module Logging.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 选择并编辑**启用 PowerShell 脚本块日志记录**策略。会打开一个窗口来配置模块日志记录。
- en: If you decide to configure the **Log script block invocation start / stop events**
    option, a lot more events will be generated, and a lot of noise will be generated.
    Depending on your use case, this option might be interesting nevertheless, but
    if you have just started doing security monitoring, I advise to not turn on this
    option.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您决定配置**日志记录脚本块调用开始/停止事件**选项，将会生成更多的事件，并且会产生大量噪音。根据您的使用案例，这个选项可能仍然是有意义的，但如果您刚开始进行安全监控，建议不要启用此选项。
- en: Increasing the log size for Script Block Invocation Logging
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 增加脚本块调用日志记录的日志文件大小
- en: If Script Block Invocation Logging is enabled, using the **Log script block
    invocation start / stop events** option, the log file size increases, and the
    maximum size should be reconfigured.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了脚本块调用日志记录，并且使用**日志记录脚本块调用开始/停止事件**选项，日志文件的大小会增加，最大大小应重新配置。
- en: Event ID **4105** and **4106** will only be generated if the **Log script block
    invocation start / stop events** option is enabled.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在启用**日志记录脚本块调用开始/停止事件**选项时，才会生成事件 ID **4105** 和 **4106**。
- en: 'In our example, we will *not* configure **Log script block invocation start
    / stop events** to avoid noise; therefore, we’ll leave the checkbox unchecked:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们将*不*配置**日志记录脚本块调用开始/停止事件**以避免噪音；因此，我们将保持该复选框未选中：
- en: '![Figure 4.4 – Turning on PowerShell Script Block Logging for Windows PowerShell](image/B16679_04_004.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4 – 为 Windows PowerShell 启用 PowerShell 脚本块日志记录](image/B16679_04_004.jpg)'
- en: Figure 4.4 – Turning on PowerShell Script Block Logging for Windows PowerShell
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4 – 为 Windows PowerShell 启用 PowerShell 脚本块日志记录
- en: In the PowerShell Core policy, you will – as with the PowerShell Module Logging
    policy and some other policies – find the option to use the current Windows PowerShell
    Policy setting as well for PowerShell Core.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PowerShell Core 策略中，您将会——与 PowerShell 模块日志记录策略及其他一些策略一样——找到将当前 Windows PowerShell
    策略设置同时用于 PowerShell Core 的选项。
- en: '![Figure 4.5 – Turning on PowerShell Script Block Logging for PowerShell Core](image/B16679_04_005.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5 – 为 PowerShell Core 启用 PowerShell 脚本块日志记录](image/B16679_04_005.jpg)'
- en: Figure 4.5 – Turning on PowerShell Script Block Logging for PowerShell Core
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 为 PowerShell Core 启用 PowerShell 脚本块日志记录
- en: All events generated by this configuration can be found in the Microsoft Windows
    PowerShell Operational event log (**Microsoft-Windows-Powershell/Operational**),
    or for PowerShell Core, in the PowerShell Core event log (**PowerShellCore/Operational**).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 由此配置生成的所有事件可以在 Microsoft Windows PowerShell 操作事件日志中找到 (**Microsoft-Windows-Powershell/Operational**)，或者在
    PowerShell Core 中，可以在 PowerShell Core 事件日志中找到 (**PowerShellCore/Operational**)。
- en: Protected Event Logging
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保护事件日志记录
- en: Event logging is a sensitive topic. Often, sensitive information such as passwords
    is exposed and written to the event log.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 事件日志记录是一个敏感话题。通常，像密码这样的敏感信息会被暴露并写入事件日志。
- en: Sensitive information is pure gold in the hand of an adversary who has access
    to such a system, so to counter this, beginning with Windows 10 and PowerShell
    version 5, Microsoft introduced Protected Event Logging.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 敏感信息在对手手中如同黄金一样珍贵，尤其是当对方可以访问此类系统时，因此，为了应对这一问题，从 Windows 10 和 PowerShell 版本 5
    开始，微软引入了保护事件日志记录。
- en: '**Protected Event Logging** encrypts data using the **Internet Engineering
    Task Force (IETF)** **Cryptographic Message Syntax** (**CMS**) standard, which
    relies on public key cryptography. This means that a public key is deployed on
    all systems that should support Protected Event Logging. Then, the public key
    is used to encrypt event log data before it is forwarded to a central log collection
    server.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**保护事件日志记录**使用**互联网工程任务组（IETF）**的**密码消息语法**（**CMS**）标准加密数据，该标准依赖于公钥密码学。这意味着公钥会部署在所有需要支持保护事件日志记录的系统上。然后，使用公钥对事件日志数据进行加密，在转发到中央日志收集服务器之前。'
- en: On this machine, the highly sensitive private key is used to decrypt the data,
    before the data is inserted into the SIEM. This machine is sensitive and, therefore,
    needs special protection.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这台机器上，使用高度敏感的私钥解密数据，然后将数据插入 SIEM。这台机器是敏感的，因此需要特别保护。
- en: Protected Event Logging is not enabled by default and can currently only be
    used with PowerShell event logs.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 保护事件日志记录默认是禁用的，目前仅能与 PowerShell 事件日志一起使用。
- en: Enabling Protected Event Logging
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启用保护事件日志记录
- en: To enable Protected Event Logging, you can deploy a *base64-encoded X.509* certificate
    or another option (for example, deploying a certificate through **Public Key Infrastructure
    (PKI)** and providing a thumbprint, or providing a path to a local or file share-hosted
    certificate). In our example, we’ll use a *base64-encoded* *X.509* certificate.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用受保护的事件日志记录，可以部署一个*base64编码的X.509*证书或其他选项（例如，通过**公共密钥基础设施（PKI）**部署证书并提供指纹，或提供指向本地或文件共享托管证书的路径）。在我们的示例中，我们将使用*base64编码的*
    *X.509*证书。
- en: 'Here are the certificate requirements:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是证书要求：
- en: The certificate must also have the *“Document Encryption”* **Enhanced Key Usage**
    (**EKU**) with the OID number (**1.3.6.1.4.1.311.80.1**) included
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书还必须包含*“文档加密”* **增强密钥使用**（**EKU**），其OID号为（**1.3.6.1.4.1.311.80.1**）。
- en: The certificate properties must include either the “*Data Encipherment*” or
    “*Key Encipherment*” key usage
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证书属性必须包括“*数据加密*”或“*密钥加密*”密钥使用。
- en: 'There’s a great SANS blog post where you can see how to check your certificate’s
    properties: [https://www.sans.org/blog/powershell-protect-cmsmessage-example-code/](https://www.sans.org/blog/powershell-protect-cmsmessage-example-code/).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一篇很棒的SANS博客文章，您可以查看如何检查证书的属性：[https://www.sans.org/blog/powershell-protect-cmsmessage-example-code/](https://www.sans.org/blog/powershell-protect-cmsmessage-example-code/)。
- en: 'Protected Event Logging leverages **IETF CMS** to secure the event log content.
    Therefore, you can also refer to the documentation pages for the **Protect-CMSMessage**
    and **Unprotect-CMSMessage** cmdlets for more information on encrypting and decrypting
    using CMS:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 受保护的事件日志记录利用**IETF CMS**来保护事件日志内容。因此，您还可以参考**Protect-CMSMessage**和**Unprotect-CMSMessage**
    cmdlet的文档页面，了解有关使用CMS加密和解密的更多信息：
- en: '**Protect-CMSMessage**: [https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/protect-cmsmessage](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/protect-cmsmessage)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Protect-CMSMessage**：[https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/protect-cmsmessage](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/protect-cmsmessage)'
- en: '**Unprotect-CMSMessage**: [https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/unprotect-cmsmessage](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/unprotect-cmsmessage)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unprotect-CMSMessage**：[https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/unprotect-cmsmessage](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/unprotect-cmsmessage)'
- en: Be careful that the certificate file that you plan to deploy **does not** contain
    the private key. Once you have obtained the certificate, you can either enable
    it manually or by using Group Policy.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您计划部署的证书文件**不能**包含私钥。获得证书后，您可以手动启用它，或使用组策略启用它。
- en: 'In the blog post *PowerShell* *♥* *the blue team*, the PowerShell team provides
    you with the **Enable-ProtectedEventLogging** function, which you can use to enable
    Protected Event Logging using PowerShell: [https://devblogs.microsoft.com/powershell/powershell-the-blue-team/#protected-event-logging](https://devblogs.microsoft.com/powershell/powershell-the-blue-team/#protected-event-logging).'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在博客文章*PowerShell* *♥* *the blue team*中，PowerShell团队为您提供了**Enable-ProtectedEventLogging**函数，您可以使用该函数通过PowerShell启用受保护的事件日志记录：[https://devblogs.microsoft.com/powershell/powershell-the-blue-team/#protected-event-logging](https://devblogs.microsoft.com/powershell/powershell-the-blue-team/#protected-event-logging)。
- en: 'To leverage this script, save your certificate in the **$cert** variable, which
    you will use in the second command to pass the public key certificate to the **Enable-ProtectedEventLogging**
    function, enabling Protected Event Logging on the local system:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此脚本，请将证书保存在**$cert**变量中，您将在第二个命令中使用该变量将公钥证书传递给**Enable-ProtectedEventLogging**函数，从而在本地系统上启用受保护的事件日志记录：
- en: '[PRE5]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can also enable Protected Event Logging using Group Policy. Create a new
    GPO or reuse an existing GPO, and then navigate to **Computer Configuration**
    | **Policies** | **Administrative Templates** | **Windows Components** | **Event
    Logging**.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过组策略启用受保护的事件日志记录。创建一个新的GPO或重复使用现有的GPO，然后导航到**计算机配置** | **策略** | **管理模板**
    | **Windows组件** | **事件日志记录**。
- en: Open the **Enable Protected Event** **Logging** policy.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**启用受保护事件** **日志记录**策略。
- en: '![Figure 4.6 – Enabling Protected Event Logging](image/B16679_04_006.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6 – 启用受保护的事件日志记录](image/B16679_04_006.jpg)'
- en: Figure 4.6 – Enabling Protected Event Logging
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 启用受保护的事件日志记录
- en: Set **Enable Protected Event Logging** to **Enabled**, provide your certificate,
    and confirm with **OK**.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 将**启用受保护的事件日志记录**设置为**启用**，提供您的证书，并点击**确定**确认。
- en: Use the **Unprotect-CmsMessage** cmdlet on a secure and protected system to
    decrypt the data before storing it in your SIEM, provided that an appropriate
    decryption certificate (that is, the one that has the private key) is installed
    on the machine.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在安全且受保护的系统上使用**Unprotect-CmsMessage** cmdlet 解密数据，然后将其存储到你的 SIEM 中，前提是机器上已安装了适当的解密证书（即包含私钥的证书）。
- en: 'To decrypt the data before storing it in your SIEM, make use of the **Unprotect-CmsMessage**
    cmdlet on a secure and protected system, where an appropriate decryption certificate
    containing the private key is installed:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要在将数据存储到 SIEM 中之前解密数据，请在安全且受保护的系统上使用**Unprotect-CmsMessage** cmdlet，前提是该系统上已安装包含私钥的适当解密证书：
- en: '[PRE6]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In this example, all events from the Operational PowerShell log with the event
    ID **4104** will be decrypted, assuming the private key is present.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，所有来自操作 PowerShell 日志的事件 ID **4104**的事件将被解密，前提是私钥存在。
- en: There is also an option to document what exactly was run in a session and what
    output was shown. This option is called a transcript – let’s have a closer look
    in our next section.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以记录会话中执行了哪些命令以及显示了哪些输出。这个选项叫做记录，我们将在下一节中详细讨论。
- en: PowerShell transcripts
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PowerShell 记录
- en: PowerShell transcripts have been available in PowerShell since PowerShell version
    1.0 as part of the **Microsoft.PowerShell.Host** module. Transcripts are a great
    way to monitor what happens in a PowerShell session.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 自 PowerShell 版本 1.0 以来，PowerShell 记录就作为**Microsoft.PowerShell.Host**模块的一部分提供。记录是监控
    PowerShell 会话中发生事件的好方法。
- en: If a PowerShell transcript is started, all executed PowerShell commands and
    their output are recorded and saved into the folder that was specified. If not
    specified otherwise, the default output folder is the **My Documents** folder
    (**%userprofile%\Documents**) of the current user.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启动了 PowerShell 记录，则所有执行的 PowerShell 命令及其输出都会被记录并保存到指定的文件夹中。如果没有另行指定，默认输出文件夹是当前用户的**我的文档**文件夹（**%userprofile%\Documents**）。
- en: The following screenshot is an example of how such a transcript could look.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了此类记录的一个示例。
- en: '![Figure 4.7 – A screenshot of a PowerShell transcript](image/B16679_04_007.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7 – PowerShell 记录的截图](image/B16679_04_007.jpg)'
- en: Figure 4.7 – A screenshot of a PowerShell transcript
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – PowerShell 记录的截图
- en: The name of the **.txt** file starts with **PowerShell_transcript**, followed
    by **computername**, a random string, and a time stamp.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**.txt**文件的名称以**PowerShell_transcript**开头，后跟**computername**、一个随机字符串和时间戳。'
- en: This is a typical example of a PowerShell transcript filename that was started
    on *PSSec-PC01* – **PowerShell_transcript.PSSEC-PC01.MUxdLMnA.20210320152800.txt**.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个典型的 PowerShell 记录文件名示例，该记录是在*PSSec-PC01*上启动的 – **PowerShell_transcript.PSSEC-PC01.MUxdLMnA.20210320152800.txt**。
- en: How to start transcripts
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何启动记录
- en: There are several options for enabling transcripts. However, the simplest method
    to record PowerShell transcripts is by simply typing the **Start-Transcript**
    command in the current session and hitting *Enter*. In this case, only commands
    that are run in this local session will be captured.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 启用记录的方式有几种。然而，记录 PowerShell 记录的最简单方法是直接在当前会话中输入**Start-Transcript**命令并按*Enter*。在这种情况下，只有在此本地会话中执行的命令才会被捕获。
- en: 'When running the **Start-Transcript** cmdlet directly, the most interesting
    parameters are **-OutputDirectory**, **-Append**, **-NoClobber**, and **-IncludeInvocationHeader**:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 直接运行**Start-Transcript** cmdlet 时，最常用的参数是**-OutputDirectory**、**-Append**、**-NoClobber**和**-IncludeInvocationHeader**：
- en: '**-Append**: The new transcript will be added to an existing file.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-Append**: 新的记录将被添加到现有文件中。'
- en: '**-IncludeInvocationHeader**: Time stamps when commands are run are added to
    the transcript, along with a delimiter between commands to make the transcripts
    easier to parse through automation.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-IncludeInvocationHeader**: 记录命令执行的时间戳，并在命令之间添加分隔符，以便通过自动化工具更容易解析记录。'
- en: '**-NoClobber**: This transcript will not overwrite an existing file. Normally,
    if a transcript already exists in the defined location (for example, if the defined
    file has the same name as an already existing file, or the filename was configured
    using the **-Path** or **-LiteralPath** parameter), **Start-Transcript** overwrites
    this file without warning.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-NoClobber**: 该记录不会覆盖现有文件。通常，如果定义位置中已存在记录文件（例如，定义的文件与现有文件同名，或者文件名是通过**-Path**或**-LiteralPath**参数配置的），**Start-Transcript**会覆盖该文件且不会发出警告。'
- en: '**-OutputDirectory**: Using this parameter, you can configure the path where
    your transcripts can be stored.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-OutputDirectory**：使用此参数，你可以配置存储转录文件的路径。'
- en: '**-UseMinimalHeader**: This parameter was added in **PowerShell version 6.2**
    and ensures that only a short header is prepended instead of the detailed header.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-UseMinimalHeader**：此参数在**PowerShell 版本 6.2**中添加，确保仅添加简短的头部，而不是详细的头部。'
- en: 'Read more about the full list of parameters in the **Start-Transcript** help
    files or in the official PowerShell documentation: [https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-7#parameters](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-7#parameters).'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 了解**Start-Transcript**帮助文件中所有参数的完整列表，或者在官方PowerShell文档中查看：[https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-7#parameters](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-7#parameters)。
- en: Securing your transcripts
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的转录安全
- en: As with any security logging you collect, it’s important to ensure that your
    transcripts are securely stored to prevent attackers from tampering with them.
    Make sure to configure a secure path that is difficult for attackers to access,
    taking into consideration the possibility of stolen corporate identities. Once
    an attacker gains access to transcripts, they can modify them and render your
    detection efforts useless.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 和你收集的任何安全日志一样，确保将转录文件安全存储，以防止攻击者篡改它们非常重要。确保配置一个安全路径，令攻击者难以访问，并考虑到企业身份被盗的可能性。一旦攻击者获得转录的访问权限，他们可以修改它们，从而使你的检测工作失效。
- en: Transcripts that were initialized with **Start-Transcript** are only recorded
    as long as the session is active or until **Stop-Transcript** is executed, which
    stops the recording of executed PowerShell commands.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**Start-Transcript**初始化的转录只会在会话处于活动状态或执行**Stop-Transcript**命令时停止，后者会停止记录执行的PowerShell命令。
- en: Enabling transcripts by default
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 默认启用转录
- en: To enable transcripts *by default* on a system, you can either configure transcripts
    via a **registry** or by using **Group Policy** to configure transcripts for multiple
    systems.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要在系统上*默认*启用转录，你可以通过**注册表**或使用**组策略**来为多个系统配置转录。
- en: Enabling transcripts by registry or script
  id: totrans-158
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 通过注册表或脚本启用转录
- en: 'When PowerShell transcripts are configured, the following registry hive is
    used:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 配置PowerShell转录时，使用以下注册表项：
- en: '[PRE7]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'For example, to enable transcription, using invocation headers and the **C:\tmp**
    output folder, you need to configure the following values to the registry keys:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要启用转录，使用调用头并设置**C:\tmp**输出文件夹，你需要将以下值配置到注册表键中：
- en: '**[REG_DWORD]EnableTranscripting = 1**'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[REG_DWORD]EnableTranscripting = 1**'
- en: '**[REG_DWORD]EnableInvocationHeader = 1**'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[REG_DWORD]EnableInvocationHeader = 1**'
- en: '**[REG_SZ]OutputDirectory =** **C:\tmp**'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[REG_SZ]OutputDirectory =** **C:\tmp**'
- en: 'To manage multiple machines, it’s more comfortable to use GPO, but in some
    cases, some machines are not part of the Active Directory domain; hence, they
    cannot be managed. For this example, I have added the **Enable-PSTranscription**
    function to the GitHub repository for this book: [https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Enable-PSTranscription.ps1](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Enable-PSTranscription.ps1).'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要管理多个机器，使用GPO更为方便，但在某些情况下，有些机器不属于Active Directory域，因此无法管理。对于本示例，我将**Enable-PSTranscription**函数添加到本书的GitHub存储库中：[https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Enable-PSTranscription.ps1](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Enable-PSTranscription.ps1)。
- en: 'Load the **Enable-PSTranscription** function into the current session and specify
    the folder where your transcripts should be saved, such as the following:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 将**Enable-PSTranscription**函数加载到当前会话中，并指定转录文件应保存的文件夹，例如以下示例：
- en: '[PRE8]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If no **-OutputDirectory** is specified, the script will write transcripts into
    **C:\ProgramData\WindowsPowerShell\Transcripts** as the default option.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定**-OutputDirectory**，脚本将默认将转录写入**C:\ProgramData\WindowsPowerShell\Transcripts**。
- en: This function just configures all defined values and overwrites your existing
    registry keys. Feel free to adjust the function to your needs and to reuse it.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数仅配置所有已定义的值，并覆盖现有的注册表键。你可以根据需要调整此函数并重新使用它。
- en: As soon as a new session is started, transcripts will be written to the configured
    folder.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦新的会话启动，转录内容将被写入到配置的文件夹中。
- en: Enabling transcripts using Group Policy
  id: totrans-171
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用组策略启用转录
- en: In Active Directory-managed environments, the easiest way to configure transcripts
    is by using Group Policy.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Active Directory 管理的环境中，配置转录的最简单方法是使用组策略。
- en: Create a new GPO or reuse an existing one. Then, navigate to **Computer Configuration**
    | **Policies** | **Administrative Templates** | **Windows Components** | **Windows
    PowerShell**.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的 GPO 或重用现有的 GPO。然后，导航至**计算机配置** | **策略** | **管理模板** | **Windows 组件** |
    **Windows PowerShell**。
- en: 'Double-click and open the **Turn on PowerShell Transcription** policy to configure
    PowerShell transcription:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 双击并打开**启用 PowerShell 转录**策略来配置 PowerShell 转录：
- en: '![Figure 4.8 – Turning on PowerShell transcription](image/B16679_04_008.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.8 – 启用 PowerShell 转录](image/B16679_04_008.jpg)'
- en: Figure 4.8 – Turning on PowerShell transcription
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8 – 启用 PowerShell 转录
- en: Set the policy to **Enabled**, and select whether a transcript output directory
    and invocation headers should be included. If the output directory is not specified,
    transcriptions are saved to the **My Documents** folder of the current user (**%userprofile%\Documents**).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 将策略设置为**启用**，并选择是否包含转录输出目录和调用头。如果未指定输出目录，转录内容将保存在当前用户的**我的文档**文件夹中（**%userprofile%\Documents**）。
- en: Enabling transcripts for PowerShell Remoting sessions
  id: totrans-178
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 为 PowerShell 远程会话启用转录
- en: '**Custom endpoints** are an excellent way to apply default settings to PowerShell
    Remoting sessions. If transcriptions were configured, they will be enabled by
    default for local sessions, but configuring them additionally in **Just Enough
    Administration** allows you to group and collect logs specific to that endpoint
    when used for remote sessions. By configuring transcription and other settings
    on a custom endpoint, you can enforce these settings for all remote sessions connected
    to that endpoint, making it easier to ensure consistency and compliance across
    your environment.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '**自定义端点**是为 PowerShell 远程会话应用默认设置的绝佳方式。如果已经配置了转录，它将默认启用本地会话，但在**足够的管理权限**中额外配置它，可以在用于远程会话时按端点分组并收集日志。通过在自定义端点上配置转录和其他设置，您可以强制执行这些设置，以确保所有连接到该端点的远程会话都符合一致性和合规性要求。'
- en: 'To get started, create a session configuration file, using the **New-PSSessionConfigurationFile**
    cmdlet with the **-TranscriptDirectory** parameter to specify where transcripts
    should be written to:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用，请创建一个会话配置文件，使用**New-PSSessionConfigurationFile** cmdlet，并通过**-TranscriptDirectory**参数指定转录内容应该写入的目录：
- en: '[PRE9]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This command creates a new session configuration file, enforcing transcription,
    and stores it in **%userprofile%\Documents\PSSession.pssc**, the path that was
    defined within the **-****Path** parameter.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令创建一个新的会话配置文件，强制启用转录，并将其存储在**%userprofile%\Documents\PSSession.pssc**路径下，该路径是通过**-Path**参数定义的。
- en: '![Figure 4.9 – The newly created session configuration](image/B16679_04_009.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9 – 新创建的会话配置](image/B16679_04_009.jpg)'
- en: Figure 4.9 – The newly created session configuration
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – 新创建的会话配置
- en: We introduced custom endpoints in [*Chapter 3*](B16679_03_Final_PD.xhtml#_idTextAnchor064),
    *Exploring PowerShell Remote Management Technologies and PowerShell Remoting,*
    and we will dive deeper into Just Enough Administration in [*Chapter 10*](B16679_10_Final_PD.xhtml#_idTextAnchor278),
    *Language Modes and Just Enough Administration (JEA)*. To learn more about the
    concept of custom endpoints and Just Enough Administration, please make sure to
    review both chapters.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第 3 章*](B16679_03_Final_PD.xhtml#_idTextAnchor064)《探索 PowerShell 远程管理技术和
    PowerShell 远程控制》中介绍了自定义端点，接下来我们将在[*第 10 章*](B16679_10_Final_PD.xhtml#_idTextAnchor278)《语言模式和适当的管理权限（JEA）》中深入探讨足够管理。要了解有关自定义端点和适当的管理权限的更多信息，请确保查看这两章内容。
- en: Best practices for PowerShell transcripts
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PowerShell 转录的最佳实践
- en: As a security best practice, *use session transcripts for every user*. This
    does not mean that your administrators are doing nasty stuff on your machines
    and they need to be monitored. In no way do I encourage mistrust in your own staff.
    However, credential theft is a real threat, and if your administrator’s identity
    is stolen and misused, you will be happy to understand what was done by the adversary.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 作为安全最佳实践，*对每个用户使用会话转录本*。这并不意味着你的管理员在你的机器上做坏事，需要进行监控。我并不鼓励对自己员工的信任产生怀疑。然而，凭证窃取是一个真实的威胁，如果管理员的身份被盗用并加以滥用，你会很高兴能了解对方做了什么。
- en: If you use transcripts, make sure that they cannot be modified. If they can
    be altered by an attacker, they are of almost no use at all.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用转录本，请确保它们无法被修改。如果它们可以被攻击者篡改，那么它们几乎没有任何作用。
- en: So, make sure to provide a path to a preconfigured folder, and specify it either
    via a GPO, manual configuration, or in the session configuration file. Prevent
    all users from modifying or deleting any data in this folder. The local system
    account requires read and write access, so make sure to configure the access permissions
    accordingly.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，确保提供一个指向预配置文件夹的路径，并通过 GPO、手动配置或会话配置文件来指定它。禁止所有用户修改或删除该文件夹中的任何数据。本地系统账户需要读取和写入权限，因此确保根据需要配置访问权限。
- en: And last but not least, it makes sense to forward all the transcript files to
    a central logging server or your SIEM to analyze them regularly.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，最重要的是，将所有的转录文件转发到一个中央日志服务器或你的 SIEM，以便定期分析它们。
- en: 'One effective approach to centralizing the transcript files is to configure
    their destination as a **Uniform Naming Convention (UNC)** path with a dynamic
    filename. For example, you can set the transcript directory to a network share
    with write-only permission, using the PowerShell profile to log all activity to
    a file with a unique name, such as the following:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 将转录文件集中存储的一个有效方法是将其目标配置为**统一命名规范（UNC）**路径，并使用动态文件名。例如，你可以将转录目录设置为一个具有只写权限的网络共享，使用
    PowerShell 配置文件将所有活动记录到一个具有唯一名称的文件中，如下所示：
- en: '[PRE10]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Also, ensure that this share is not readable by normal users. By using this
    approach, you can easily collect and analyze the logs from all machines in a centralized
    location, allowing you to better detect and respond to security incidents without
    the need to set up an entire logging infrastructure.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，确保这个共享对普通用户不可读。通过使用这种方法，你可以轻松地从所有机器中收集并分析日志，集中存储，使你能够更好地检测和响应安全事件，而不需要建立整个日志基础设施。
- en: In addition to collecting logs, analyzing them is equally important. In the
    next section, we will explore the techniques and tools used for log analysis.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 除了收集日志之外，分析它们同样重要。在接下来的部分，我们将探讨用于日志分析的技术和工具。
- en: Analyzing event logs
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析事件日志
- en: There are several ways to work with Windows event logs using PowerShell. Of
    course, you can always forward your event logs to the SIEM of your choice, but
    sometimes, it happens that you want to directly analyze the event logs on a certain
    machine. For this use case, it makes sense to look at the available options that
    come with PowerShell.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以使用 PowerShell 操作 Windows 事件日志。当然，你可以将事件日志转发到你选择的 SIEM，但有时你可能需要直接分析某台机器上的事件日志。在这种用例下，查看
    PowerShell 提供的选项是有意义的。
- en: 'The easiest option if you just want to analyze events or create new events
    is the ***-WinEvent** cmdlets, which are still available in PowerShell Core 7\.
    You can use **Get-Command** to find all available cmdlets:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只是想分析事件或创建新事件，最简单的选择是使用***-WinEvent** cmdlets，它们在 PowerShell Core 7 中仍然可用。你可以使用**Get-Command**查找所有可用的
    cmdlet：
- en: '![Figure 4.10 – The available *-WinEvent cmdlets](image/B16679_04_010.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10 – 可用的 *-WinEvent cmdlets](image/B16679_04_010.jpg)'
- en: Figure 4.10 – The available *-WinEvent cmdlets
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10 – 可用的 *-WinEvent cmdlets
- en: 'In PowerShell 5.1, there was also the possibility of using the ***-EventLog**
    cmdlets, but they were removed in PowerShell Core 6 and above. Since PowerShell
    5.1 is installed by default on all Windows 10 operating systems, I refer to ***-EventLog**
    here. Again, use **Get-Command** to find all available cmdlets:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PowerShell 5.1 中，也可以使用 ***-EventLog** cmdlets，但它们在 PowerShell Core 6 及以上版本中被移除。由于
    PowerShell 5.1 默认安装在所有 Windows 10 操作系统上，因此这里提到 ***-EventLog**。同样，使用**Get-Command**查找所有可用的
    cmdlet：
- en: '![Figure 4.11 – The available *-EventLog cmdlets](image/B16679_04_011.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.11 – 可用的 *-EventLog cmdlets](image/B16679_04_011.jpg)'
- en: Figure 4.11 – The available *-EventLog cmdlets
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11 – 可用的 *-EventLog cmdlets
- en: The third option is to use **wevtutil**. This command-line executable is not
    very intuitive to understand, but it can be used to operate and analyze event
    logs. Using the **/?** parameter, you can get more details on the usage.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个选项是使用 **wevtutil**。这个命令行可执行文件并不容易理解，但可以用来操作和分析事件日志。使用 **/?** 参数，你可以获取更多关于用法的详细信息。
- en: '![Figure 4.12 – wevtutil.exe usage](image/B16679_04_012.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.12 – wevtutil.exe 使用方法](image/B16679_04_012.jpg)'
- en: Figure 4.12 – wevtutil.exe usage
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12 – wevtutil.exe 使用方法
- en: 'For example, clearing the **Security** event log can be achieved with the following
    command:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，清除 **Security** 事件日志可以通过以下命令实现：
- en: '[PRE11]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Refer to the official documentation to get more details on **wevtutil**: [https://docs.microsoft.com/de-de/windows-server/administration/windows-commands/wevtutil](https://docs.microsoft.com/de-de/windows-server/administration/windows-commands/wevtutil).'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考官方文档以获取有关 **wevtutil** 的更多详细信息：[https://docs.microsoft.com/de-de/windows-server/administration/windows-commands/wevtutil](https://docs.microsoft.com/de-de/windows-server/administration/windows-commands/wevtutil)。
- en: Finding out which logs exist on a system
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找系统中存在的日志
- en: 'If you want to find out which event logs exist on a system, you can leverage
    the **-ListLog** parameter followed by a wildcard (*****) – **Get-WinEvent -****ListLog
    ***:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查找系统中存在的哪些事件日志，可以使用 **-ListLog** 参数，后面跟一个通配符（*****）– **Get-WinEvent -ListLog
    ***：
- en: '![Figure 4.13 – Listing all event logs](image/B16679_04_013.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.13 – 列出所有事件日志](image/B16679_04_013.jpg)'
- en: Figure 4.13 – Listing all event logs
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13 – 列出所有事件日志
- en: You might want to pipe the output to **Sort-Object** to sort by record count,
    maximum log size, log mode, or log name.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能希望将输出传递给 **Sort-Object** 以按记录数、最大日志大小、日志模式或日志名称进行排序。
- en: Querying events in general
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一般查询事件
- en: To get started, let’s have a look how we can analyze some of the most common
    scenarios for PowerShell auditing.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，先看看我们如何分析 PowerShell 审计的最常见场景。
- en: 'Using the **Get-WinEvent** command, you can get all the event IDs from the
    event log that you specified – **Get-WinEvent Microsoft-Windows-PowerShell/Operational**:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **Get-WinEvent** 命令，你可以从指定的事件日志中获取所有事件 ID – **Get-WinEvent Microsoft-Windows-PowerShell/Operational**：
- en: '![Figure 4.14 – Querying the Microsoft Windows PowerShell Operational log](image/B16679_04_014.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.14 – 查询 Microsoft Windows PowerShell 操作日志](image/B16679_04_014.jpg)'
- en: Figure 4.14 – Querying the Microsoft Windows PowerShell Operational log
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14 – 查询 Microsoft Windows PowerShell 操作日志
- en: In this example, you would see all event IDs that were generated in the PowerShell
    Operational log.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，你会看到 PowerShell 操作日志中生成的所有事件 ID。
- en: 'If you only want to query the last *x* events, the **-MaxEvents** parameter
    will help you to achieve this task. For example to query the last 15 events of
    the *security* event log use **Get-WinEvent Security -****MaxEvents 15**:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只想查询最近的 *x* 个事件，**-MaxEvents** 参数将帮助你完成此任务。例如，要查询 *Security* 事件日志中的最后 15
    个事件，请使用 **Get-WinEvent Security -MaxEvents 15**：
- en: '![Figure 4.15 – Querying the last 15 events from the Security event log](image/B16679_04_015.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.15 – 查询安全事件日志中的最后 15 个事件](image/B16679_04_015.jpg)'
- en: Figure 4.15 – Querying the last 15 events from the Security event log
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15 – 查询安全事件日志中的最后 15 个事件
- en: This is especially helpful if you want to analyze recent events without querying
    the entire event log.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于你想要分析最近的事件而不查询整个事件日志时特别有帮助。
- en: 'Using the **-Oldest** parameter reverts the order so that you see the oldest
    events in this log – **Get-WinEvent Security -MaxEvents** **15 -Oldest**:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **-Oldest** 参数可以反转顺序，以便你查看日志中的最旧事件 – **Get-WinEvent Security -MaxEvents 15
    -Oldest**：
- en: '![Figure 4.16 – The 15 oldest events from the Security event log](image/B16679_04_016.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.16 – 安全事件日志中的 15 条最旧事件](image/B16679_04_016.jpg)'
- en: Figure 4.16 – The 15 oldest events from the Security event log
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.16 – 安全事件日志中的 15 条最旧事件
- en: 'To find all events in the Microsoft Windows PowerShell Operational log that
    contain code that was executed and logged by **ScriptBlockLogging**, filter for
    event id **4104**: **Get-WinEvent Microsoft-Windows-PowerShell/Operational | Where-Object
    { $_.Id -eq 4104 } |** **fl**:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找所有在 Microsoft Windows PowerShell 操作日志中执行并被 **ScriptBlockLogging** 记录的代码，可以筛选事件
    ID **4104**：**Get-WinEvent Microsoft-Windows-PowerShell/Operational | Where-Object
    { $_.Id -eq 4104 } | fl**：
- en: '![Figure 4.17 – Finding all executed and logged code](image/B16679_04_017.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.17 – 查找所有执行并记录的代码](image/B16679_04_017.jpg)'
- en: Figure 4.17 – Finding all executed and logged code
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17 – 查找所有执行并记录的代码
- en: 'You can also filter for certain keywords in the message part. For example,
    to find all events that contain the **"logon"** string in the message, use the
    **-match** comparison operator – **Get-WinEvent Security | Where-Object { $_.Message
    -match "****logon" }**:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以根据消息部分中的特定关键字进行过滤。例如，要查找所有消息中包含 **"logon"** 字符串的事件，可以使用 **-match** 比较运算符
    – **Get-WinEvent Security | Where-Object { $_.Message -match "****logon" }**：
- en: '![Figure 4.18 – Finding all events that contain “logon” in their message](image/B16679_04_018.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.18 – 查找所有消息中包含“logon”的事件](image/B16679_04_018.jpg)'
- en: Figure 4.18 – Finding all events that contain “logon” in their message
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.18 – 查找所有消息中包含“logon”的事件
- en: 'You can also filter using XPath-based queries, using the **-****FilterXPath**
    parameter:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用基于 XPath 的查询进行过滤，使用 **-****FilterXPath** 参数：
- en: '[PRE12]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output is shown in the following screenshot:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果如下所示：
- en: '![Figure 4.19 – Filtering using an XPath query](image/B16679_04_019.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.19 – 使用 XPath 查询进行过滤](image/B16679_04_019.jpg)'
- en: Figure 4.19 – Filtering using an XPath query
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.19 – 使用 XPath 查询进行过滤
- en: 'It is also possible to filter by a specified **hash table**, using the **-****FilterHashtable**
    parameter:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以通过指定的 **哈希表** 进行过滤，使用 **-****FilterHashtable** 参数：
- en: '[PRE13]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Using hash tables can reduce your usage of **Where-Object** filter clauses significantly.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 使用哈希表可以显著减少对**Where-Object**过滤子句的使用。
- en: 'If you want to query complex event structures, you can use the **-FilterXml**
    parameter and provide an **XML** string. I have prepared such an example and uploaded
    it to this book’s GitHub repository: [https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Get-AllPowerShellEvents.ps1](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Get-AllPowerShellEvents.ps1):'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查询复杂的事件结构，可以使用 **-FilterXml** 参数并提供 **XML** 字符串。我已经准备了这样的示例，并将其上传到本书的 GitHub
    仓库：[https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Get-AllPowerShellEvents.ps1](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Get-AllPowerShellEvents.ps1)：
- en: '![Figure 4.20 – Using the Get-AllPowerShellEvents.ps1 script](image/B16679_04_020.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.20 – 使用 Get-AllPowerShellEvents.ps1 脚本](image/B16679_04_020.jpg)'
- en: Figure 4.20 – Using the Get-AllPowerShellEvents.ps1 script
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.20 – 使用 Get-AllPowerShellEvents.ps1 脚本
- en: This example queries the **Microsoft-Windows-PowerShell/Operational**, **PowerShellCore/Operational**,
    and **Windows PowerShell** event logs and retrieves all the events that I will
    describe in the *Basic PowerShell event logs* section in this chapter.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例查询了 **Microsoft-Windows-PowerShell/Operational**、**PowerShellCore/Operational**
    和 **Windows PowerShell** 事件日志，并检索了我将在本章的 *基本 PowerShell 事件日志* 部分中描述的所有事件。
- en: Now that you know how to work with event logs and query events, let’s look at
    how to detect and analyze which code was run on a system.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何处理事件日志并查询事件，接下来让我们看看如何检测和分析系统上运行了哪个代码。
- en: Which code was run on a system?
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 系统上运行了哪个代码？
- en: Filtering and scrolling through all events that contain executed code can be
    a tedious task, if you decide to perform this task manually. But, thankfully,
    PowerShell allows you to automate this task and quickly find what you are searching
    for.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定手动执行此任务，过滤并滚动浏览所有包含已执行代码的事件可能是一项繁琐的工作。但是，幸运的是，PowerShell 允许你自动化此任务并快速找到你需要的内容。
- en: 'In general, all events that contain logged code can be found either in the
    Microsoft Windows PowerShell or the PowerShell Core Operational log, indicated
    by event ID **4104**:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，所有包含已记录代码的事件可以在 Microsoft Windows PowerShell 或 PowerShell Core 操作日志中找到，事件
    ID 为 **4104**：
- en: '[PRE14]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To better find and filter what code was executed, I have written the **Get-ExecutedCode**
    function, which you can find in the GitHub repository for this book: [https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Get-ExecutedCode.ps1](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Get-ExecutedCode.ps1).'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地查找和过滤执行的代码，我编写了 **Get-ExecutedCode** 函数，你可以在本书的 GitHub 仓库中找到它：[https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Get-ExecutedCode.ps1](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Get-ExecutedCode.ps1)。
- en: Downgrade attack
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 降级攻击
- en: As newer versions such as 5.1 and upward introduced a lot of new security features,
    older PowerShell versions such as version 2.0 became more attractive to attackers.
    Therefore, a common way to leverage older versions is a so-called **downgrade
    attack**.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 5.1 及以上版本引入了许多新的安全功能，较旧的 PowerShell 版本，如 2.0，变得对攻击者更具吸引力。因此，攻击者常用的一种手段就是所谓的**降级攻击**。
- en: 'A downgrade attack can be executed by specifying the version number when running
    **powershell.exe**:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在运行 **powershell.exe** 时指定版本号来执行降级攻击：
- en: '[PRE15]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If the specified version is installed, the command runs, using the deprecated
    binary, which implies that only security features that existed when that version
    was written are applied.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定的版本已安装，命令将运行，使用的是已弃用的二进制文件，这意味着只有该版本编写时存在的安全功能才会生效。
- en: All machines that run Windows 7 and above have at least PowerShell version 2.0
    installed. Although Windows 7 is not supported and does not receive any security
    updates anymore, it is still widespread.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 所有运行 Windows 7 及以上版本的机器至少安装了 PowerShell 2.0 版本。虽然 Windows 7 已不再获得支持，也不再接收安全更新，但它仍然广泛使用。
- en: Additionally, PowerShell version 2.0 still relies on **.NET Framework 2.0**,
    which does not include advanced security features and provides no advanced logging.
    Therefore, that’s perfect for attackers that do not want anybody to know what
    they did on your system.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，PowerShell 2.0 仍然依赖于**.NET Framework 2.0**，该版本不包含先进的安全功能，也没有高级日志记录功能。因此，这对那些不希望任何人知道他们在系统上做了什么的攻击者来说非常适用。
- en: .NET Framework 2.0 is not included by default on Windows 10, but it can be installed
    manually – for example, by an attacker or an administrator. On operating systems
    prior to Windows 10, .NET Framework 2.0 is installed by default.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: .NET Framework 2.0 默认不包括在 Windows 10 中，但可以手动安装——例如，由攻击者或管理员安装。在 Windows 10 之前的操作系统中，.NET
    Framework 2.0 是默认安装的。
- en: 'On Windows 8, PowerShell version 2.0 can be disabled by running the following
    command in an elevated console:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 8 上，可以通过在提升权限的控制台中运行以下命令来禁用 PowerShell 2.0：
- en: '[PRE16]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: .NET Framework 2.0, which is required to run PowerShell version 2.0, is by default
    not installed on newer systems such as Windows 10.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 PowerShell 2.0 所需的 .NET Framework 2.0 默认不会安装在如 Windows 10 这样的较新系统上。
- en: 'So, if you try to run **powershell.exe -version 2**, you get an error message,
    stating that version 2 of .NET Framework is missing:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你尝试运行**powershell.exe -version 2**，你会收到一个错误信息，提示缺少 .NET Framework 2.0 版本：
- en: '[PRE17]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As .NET Framework 2.0 can be installed manually – either by system administrators
    or attackers – make sure to check for PowerShell version 2.0 and disable it.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 .NET Framework 2.0 可以手动安装——无论是系统管理员还是攻击者——请确保检查 PowerShell 2.0 版本并将其禁用。
- en: 'Run the following command to check whether PowerShell version 2.0 is enabled
    or disabled:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令检查 PowerShell 2.0 是否已启用或禁用：
- en: '[PRE18]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: So, it seems like PowerShell version 2.0 is still enabled on this machine. Therefore,
    if the missing .NET Framework 2.0 is installed, this system will be vulnerable
    to a downgrade attack.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，看起来 PowerShell 2.0 仍然在这台机器上启用。因此，如果缺少的 .NET Framework 2.0 被安装，那么该系统将容易受到降级攻击。
- en: 'Therefore, let’s disable PowerShell version 2.0 to harden your system by running
    the following command:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们通过运行以下命令来禁用 PowerShell 2.0，从而加强系统安全：
- en: '[PRE19]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You will see in the output that a restart is needed, so after you restart your
    PC, the changes are applied and PowerShell version 2.0 is disabled:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 你会在输出中看到需要重启，所以在你重启电脑后，修改会生效，PowerShell 2.0 将被禁用：
- en: '[PRE20]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'So, if you verify once again, you will see that the state is set to **Disabled**:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你再验证一次，你会看到状态被设置为**禁用**：
- en: '[PRE21]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: However, on Windows 7, PowerShell version 2.0 cannot be disabled. The only way
    to disallow PowerShell version 2.0 usage is to leverage **Application Control**
    or **AppLocker**, which we will discuss in [*Chapter 11*](B16679_11_Final_PD.xhtml#_idTextAnchor306),
    *AppLocker, Application Control, and* *Code Signing*.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在 Windows 7 上，无法禁用 PowerShell 2.0。唯一不允许使用 PowerShell 2.0 的方式是利用**应用程序控制**或**AppLocker**，我们将在[*第
    11 章*](B16679_11_Final_PD.xhtml#_idTextAnchor306)中讨论，*AppLocker、应用程序控制和* *代码签名*。
- en: For adversaries, there is also another way to run a downgrade attack – if, for
    example, a compiled application leverages an older PowerShell version, and links
    against the compiled PowerShell v2 binaries, a downgrade attack can be launched
    by exploiting the application. So, whenever this application runs, PowerShell
    v2 is also active, and it can be used by the attacker if they manage to exploit
    the application.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 对于对手而言，还有另一种运行降级攻击的方法 - 例如，如果编译的应用程序利用旧版本的 PowerShell，并链接到编译的 PowerShell v2
    二进制文件，攻击者可以通过利用该应用程序发起降级攻击。因此，每当此应用程序运行时，PowerShell v2 也处于活动状态，如果攻击者设法利用该应用程序，则可以使用它。
- en: In this case, disabling PowerShell version 2.0 can help to protect against this
    type of attack by blocking the deprecated binaries in the **Global Assembly Cache**
    (**GAC**) or removing the PowerShell component altogether. Nevertheless, it’s
    important to note that other applications that rely on these binaries will be
    blocked as well, as they usually don’t ship with all of the PowerShell binaries.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，禁用 PowerShell 2.0 可以帮助防止此类攻击，方法是阻止全局程序集缓存（**GAC**）中的不推荐的二进制文件，或者完全移除
    PowerShell 组件。然而，重要的是要注意，依赖这些二进制文件的其他应用程序也将被阻止，因为它们通常不会随所有 PowerShell 二进制文件一起发布。
- en: In general, a downgrade attack is a highly critical issue, and therefore, you
    should monitor for it. You can do so by monitoring the event with the event id
    **400** in the Windows PowerShell event log – if the specified version is lower
    than **[Version] "5"**, you should definitely investigate further.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，降级攻击是一个非常关键的问题，因此，您应该对其进行监控。您可以通过监控 Windows PowerShell 事件日志中的事件 ID **400**
    来执行此操作 - 如果指定版本低于 **[Version] "5"**，则应进一步进行调查。
- en: 'Lee Holmes, who was part of the Windows PowerShell team at Microsoft, provides
    a great example of how to monitor for potential downgrade attacks by looking for
    event ID **400** in the PowerShell event log in his blog article *Detecting and
    Preventing PowerShell Downgrade* *Attacks*: [https://www.leeholmes.com/detecting-and-preventing-powershell-downgrade-attacks/](https://www.leeholmes.com/detecting-and-preventing-powershell-downgrade-attacks/).'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 李·霍姆斯（Lee Holmes）曾是微软Windows PowerShell团队的一员，他在他的博客文章*检测和防止PowerShell降级攻击*中提供了一个很好的例子，通过查找PowerShell事件日志中的事件ID
    **400** 来监控潜在的降级攻击：[https://www.leeholmes.com/detecting-and-preventing-powershell-downgrade-attacks/](https://www.leeholmes.com/detecting-and-preventing-powershell-downgrade-attacks/)。
- en: 'Use this example to find lower versions of the PowerShell engine being loaded:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此示例查找加载较低版本的PowerShell引擎的情况：
- en: '[PRE22]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: EventList
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EventList
- en: During my time as a Premier Field Engineer at Microsoft, I worked with a lot
    of customers that were just building their SOCs from scratch. Most of those customers
    not only wanted to set up log event forwarding but also asked me for best practices
    to harden their Windows environment.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在我在微软担任高级现场工程师期间，我与许多刚刚从零开始建立SOC的客户合作过。这些客户不仅希望设置日志事件转发，还向我询问加固其Windows环境的最佳实践。
- en: 'When talking about hardening Windows environments, you can’t ignore the Microsoft
    **Security and Compliance Toolkit** (**SCT**): [https://www.microsoft.com/en-us/download/details.aspx?id=55319](https://www.microsoft.com/en-us/download/details.aspx?id=55319).'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 谈到加固Windows环境时，您不能忽视微软**安全与合规工具包**（**SCT**）：[https://www.microsoft.com/en-us/download/details.aspx?id=55319](https://www.microsoft.com/en-us/download/details.aspx?id=55319)。
- en: I will talk more about some parts of this toolkit later in [*Chapter 6*](B16679_06_Final_PD.xhtml#_idTextAnchor150),
    *Active Directory – Attacks and Mitigation* as well as in [*Chapter 13*](B16679_13_Final_PD.xhtml#_idTextAnchor341),
    *What Else? – Further Mitigations and Resources*. In general, this toolkit contains
    several tools for comparing and verifying your configuration, as well as the so-called
    **baselines**.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在稍后的[*第6章*](B16679_06_Final_PD.xhtml#_idTextAnchor150)，*Active Directory –
    Attacks and Mitigation*以及[*第13章*](B16679_13_Final_PD.xhtml#_idTextAnchor341)，*What
    Else? – Further Mitigations and Resources*中更详细地讨论工具包的某些部分。总的来说，此工具包包含几个工具，用于比较和验证您的配置，以及所谓的**基线**。
- en: These baselines are meant to provide hardening guidance – a lot of settings
    that are important for your security posture, as well as *monitoring configuration*.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 这些基线旨在提供加固指导 - 这些设置对您的安全姿态非常重要，以及*监控配置*。
- en: Needless to say, you should not just enforce those baselines without having
    a structured plan and knowing the impact of the settings that you are configuring.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，您不应仅仅强制执行这些基线而没有一个结构化的计划，并了解您正在配置的设置的影响。
- en: If a baseline is configured for a certain computer, thanks to the monitoring
    configuration piece, new events are generated in the **Security** event log.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为某台计算机配置了基线，由于监控配置的帮助，新的事件将会生成在**安全**事件日志中。
- en: When I worked with customers, I always recommended applying the Microsoft Security
    baselines after a well-structured plan.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 当我与客户合作时，我总是建议在一个结构良好的计划之后应用 Microsoft 安全基线。
- en: On one occasion, I was at a customer’s site and just recommended that they should
    apply Microsoft Security baselines to see more event IDs. After recommending applying
    those baselines, my customer asked me whether there was an overview to see what
    additional event IDs were being generated if they enabled a particular baseline,
    like the *Windows 2016 Domain* *Controller baseline*.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 有一次，我在客户现场，刚刚建议他们应该应用 Microsoft 安全基线，以便查看更多事件 ID。在推荐应用这些基线后，客户问我是否有概览来查看启用特定基线后会生成哪些额外的事件
    ID，比如*Windows 2016 域控制器基线*。
- en: 'I only knew of a documentation document that they could use to find it out
    themselves, the *Windows 10 and Windows Server 2016 security auditing and monitoring*
    *reference*: [https://www.microsoft.com/en-us/download/details.aspx?id=52630](https://www.microsoft.com/en-us/download/details.aspx?id=52630).'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 我只知道一个文档，他们可以利用它自行查找相关信息，那就是*Windows 10 和 Windows Server 2016 安全审计与监控* *参考资料*：[https://www.microsoft.com/en-us/download/details.aspx?id=52630](https://www.microsoft.com/en-us/download/details.aspx?id=52630)。
- en: Although this document provided amazingly detailed information on all **Advanced
    Audit Policy Configuration** items, with its 754 pages, it was quite extensive.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本文档提供了关于所有**高级审计策略配置**项的惊人详细信息，涵盖了 754 页，但内容相当广泛。
- en: So, the customer was not happy studying this big document and asked me to write
    down what events would be generated if they applied this baseline. I was not happy
    about such stupefying work, but I started to write down all events for this one
    baseline.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，客户并不乐意研究这个庞大的文档，并要求我写下如果他们应用该基线会生成哪些事件。我并不喜欢这样的令人头昏的工作，但我开始为这个基线写下所有的事件。
- en: While I was doing this, the customer approached me and realized that they had
    not one but multiple kinds of baselines that they wanted to apply in their environment.
    Also, these were not only Domain Controller baselines but also baselines for member
    servers and client computers of all kinds of operating systems. So, they asked
    me to write down the event IDs for *ALL* existing baselines.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 正在进行时，客户走近我，意识到他们不仅有一种，而是多种基线需要在他们的环境中应用。而且，这些不仅是域控制器基线，还有适用于成员服务器和各种操作系统客户端计算机的基线。所以，他们让我列出*所有*现有基线的事件
    ID。
- en: As you can imagine, I was not super-excited about this new task. This seemed
    like a very dull and exhausting task that would take years to complete.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你能想象的那样，我并不特别兴奋于这个新任务。这看起来像是一个非常枯燥且令人疲惫的工作，可能需要多年才能完成。
- en: Therefore, I considered the need to automate matching baselines to event IDs,
    and that’s how my open source tool **EventList** was born.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我考虑到需要自动化基线与事件 ID 的匹配，这也就是我的开源工具**EventList**诞生的背景。
- en: Although it all started as an Excel document with Visual Basic macros, it became
    a huge project in the meantime, with a huge database behind the code.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管最初它只是一个包含 Visual Basic 宏的 Excel 文档，但它在这期间变成了一个庞大的项目，背后有着庞大的数据库支持。
- en: '![Figure 4.21 – The EventList logo](image/B16679_04_021.jpg)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.21 – EventList 标志](image/B16679_04_021.jpg)'
- en: Figure 4.21 – The EventList logo
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.21 – EventList 标志
- en: And whenever I need to work with event IDs, my EventList database became my
    source of truth, and it is still growing constantly.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我需要处理事件 ID 时，我的 EventList 数据库就成了我唯一的可靠数据源，而且它还在不断增长。
- en: Working with EventList
  id: totrans-300
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 EventList 进行工作
- en: 'To get started, EventList can be easily installed from the PowerShell Gallery:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用，EventList 可以轻松地从 PowerShell Gallery 安装：
- en: '[PRE23]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'EventList is built in PowerShell; therefore, even if you want to work solely
    with the user interface, you need to run at least one PowerShell command. Open
    the PowerShell console as an administrator and type in the following:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: EventList 是用 PowerShell 构建的；因此，即使你只想使用用户界面，也需要运行至少一个 PowerShell 命令。以管理员身份打开
    PowerShell 控制台，并输入以下内容：
- en: '[PRE24]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Confirm by hitting *Enter*. After a few seconds, the EventList UI appears.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*Enter*键进行确认。几秒钟后，EventList UI 出现。
- en: '![Figure 4.22 – The EventList UI](image/B16679_04_022.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.22 – EventList 用户界面](image/B16679_04_022.jpg)'
- en: Figure 4.22 – The EventList UI
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.22 – EventList 用户界面
- en: At the top left, you can select an existing baseline and see the **MITRE ATT&CK**
    techniques and areas that are being populated in the UI. So, you can see directly
    what MITRE ATT&CK techniques are covered if a certain baseline is applied.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在左上角，您可以选择现有基线并查看在UI中填充的**MITRE ATT&CK**技术和领域。因此，您可以直接查看应用某个基线时涵盖的MITRE ATT&CK技术。
- en: You have also the possibility to import your own baselines or exported GPOs
    and delete existing ones.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 您还有可能性导入您自己的基线或导出的GPO并删除现有的基线。
- en: Once you have selected a baseline and the MITRE ATT&CK checkboxes are filled,
    choose **Generate** **Event List**.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了一个基线并填写了MITRE ATT&CK复选框，请选择**生成** **事件列表**。
- en: '![Figure 4.23 – EventList – showing the baseline events](image/B16679_04_023.jpg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![图4.23 - EventList - 显示基线事件](image/B16679_04_023.jpg)'
- en: Figure 4.23 – EventList – showing the baseline events
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.23 - EventList - 显示基线事件
- en: A pop-up window opens, and you can choose whether you want to generate an EventList
    for baseline events only or all MITRE ATT&CK events.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 弹出窗口将打开，您可以选择是否仅为基线事件生成EventList或所有MITRE ATT&CK事件。
- en: To see which event IDs would be generated if you applied a certain baseline,
    select **Baseline Events only**. Confirm with **OK** to see the EventList for
    the baseline/GPO that you selected.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看应用某个基线时会生成哪些事件ID，请选择**仅基线事件**。确认选择**确定**以查看您选择的基线/GPO的EventList。
- en: '![Figure 4.24 – A generated EventList](image/B16679_04_024.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![图4.24 - 生成的EventList](image/B16679_04_024.jpg)'
- en: Figure 4.24 – A generated EventList
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.24 - 生成的EventList
- en: An EventList is generated, in which you see each event ID that will be generated
    if this baseline is applied, as well as (if available) a link to the documentation
    and a recommendation on whether this event should be monitored or not.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 生成了一个EventList，在其中您可以看到应用此基线时将生成的每个事件ID，以及（如果有的话）指向文档的链接以及关于是否应监视此事件的建议。
- en: If **Export as CSV** is checked, you can select where the output should be saved,
    and a **.csv** file is generated.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选中**导出为CSV**，则可以选择输出保存的位置，并生成一个**.csv**文件。
- en: As Microsoft Security baselines mostly rely on the **Advanced Audit Logs**,
    by using the **Baseline only** function, EventList helps a lot to understand and
    demystify the Advanced Audit Logs.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 由于**高级审计日志**，微软安全基线主要依赖于**基线**功能，EventList 在理解和揭示高级审计日志方面提供了很大帮助。
- en: 'You can achieve the same thing by using the following commands on the CLI:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在CLI上使用以下命令来实现相同的效果：
- en: '[PRE25]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The baseline needs to be imported into the EventList database, so make sure
    that the baseline name is shown when verifying with the **Get-BaselineNameFromDB**
    function.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 需要将基线导入EventList数据库，因此在使用**Get-BaselineNameFromDB**功能验证基线名称时，请确保显示基线名称。
- en: Of course, you can also select different MITRE ATT&CK techniques and areas and
    generate an EventList to see which event IDs cover a certain MITRE ATT&CK area.
    Generate an EventList, select **All MITRE ATT&CK Events**, and confirm with **OK**.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您还可以选择不同的MITRE ATT&CK技术和领域，并生成一个EventList，查看哪些事件ID涵盖特定的MITRE ATT&CK领域。生成一个EventList，选择**所有MITRE
    ATT&CK事件**，然后确认选择**确定**。
- en: A popup will open, and you can see all event IDs that were correlated to the
    selected MITRE ATT&CK techniques.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 弹出窗口将打开，您可以看到与所选MITRE ATT&CK技术相关联的所有事件ID。
- en: '![Figure 4.25 – A MITRE ATT&CK EventList](image/B16679_04_025.jpg)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![图4.25 - MITRE ATT&CK EventList](image/B16679_04_025.jpg)'
- en: Figure 4.25 – A MITRE ATT&CK EventList
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.25 - MITRE ATT&CK EventList
- en: 'Again, this can be achieved by passing either a baseline or MITRE ATT&CK technique
    numbers to the **Get-MitreEventList** function, using the **-****Identity** parameter:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这可以通过将基线或MITRE ATT&CK技术编号传递给**Get-MitreEventList**功能，使用**-Identity**参数来实现：
- en: '[PRE26]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The following screenshot shows the output of the command.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了命令的输出。
- en: '![Figure 4.26 – The Get-MitreEventList function can also be run via the command
    line](image/B16679_04_026.jpg)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![图4.26 - Get-MitreEventList功能也可以通过命令行运行](image/B16679_04_026.jpg)'
- en: Figure 4.26 – The Get-MitreEventList function can also be run via the command
    line
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.26 - Get-MitreEventList功能也可以通过命令行运行
- en: Of course, EventList provides many more functions. It also provides possibilities
    to generate forwarder agent snippets of all event IDs that should be forwarded
    for your use case. You can also generate your own GPOs and hunting queries that
    support your very own use case.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，EventList提供了更多的功能。它还提供了生成适用于您自己用例的所有事件ID的转发代理片段的可能性。您还可以生成支持您自己用例的自己的GPO和查询。
- en: However, there are too many functions to describe everything in detail in this
    book. If you are interested in learning more about EventList, make sure to read
    the EventList documentation in its GitHub repository, that is mentioned at the
    end of this section. Some experts also find it useful to query the database behind
    EventList manually.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，功能太多，无法在本书中详细描述。如果你有兴趣深入了解 EventList，请务必阅读该项目在 GitHub 上的文档，文档地址会在本节结尾提到。一些专家还发现手动查询
    EventList 背后的数据库非常有用。
- en: I wrote EventList to help SOCs worldwide understand what to monitor and simplify
    their event ID forwarding.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 我编写了 EventList，以帮助全球的 SOC 理解需要监控的内容，并简化他们的事件 ID 转发。
- en: 'I am constantly improving EventList, so if you want to learn more, you are
    more than welcome to download and test it. It can be either downloaded and installed
    from my GitHub repository ([https://github.com/miriamxyra/EventList](https://github.com/miriamxyra/EventList))
    or installed from the PowerShell Gallery:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 我在不断改进 EventList，所以如果你想了解更多，欢迎下载并测试它。你可以从我的 GitHub 仓库 ([https://github.com/miriamxyra/EventList](https://github.com/miriamxyra/EventList))
    下载并安装，或者从 PowerShell Gallery 安装：
- en: '[PRE27]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To understand the functionalities of EventList more comprehensively, I recommend
    reading the documentation and help files and watching some of the recordings of
    the talks that I have given on it:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更全面地了解 EventList 的功能，我建议阅读文档和帮助文件，并观看我关于它的一些讲座录音：
- en: '**Hack.lu 2019: (version** **1.1.0)**: [https://www.youtube.com/watch?v=nkMDsw4MA48](https://www.youtube.com/watch?v=nkMDsw4MA48)'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Hack.lu 2019: (版本** **1.1.0)**: [https://www.youtube.com/watch?v=nkMDsw4MA48](https://www.youtube.com/watch?v=nkMDsw4MA48)'
- en: '**Black Hat 2020 (version** **2.0.0)**: [https://www.youtube.com/watch?v=3x5-nZ2bfbo](https://www.youtube.com/watch?v=3x5-nZ2bfbo)'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Black Hat 2020 (版本** **2.0.0)**: [https://www.youtube.com/watch?v=3x5-nZ2bfbo](https://www.youtube.com/watch?v=3x5-nZ2bfbo)'
- en: If you have any ideas on what is missing in EventList, I would love to hear
    more, and I’m looking forward to your pull request on GitHub or your message on
    Twitter or via email.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有任何关于 EventList 的改进建议，我很乐意听到更多，并期待你在 GitHub 上的 Pull Request 或通过 Twitter 或电子邮件与我联系。
- en: Getting started with logging
  id: totrans-341
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始日志记录
- en: To improve your detection, it makes sense to set up a SIEM system for event
    collection so that you have all event logs in one place, allowing you to hunt
    and even build automated alerting.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高你的检测能力，建议设置一个 SIEM 系统来收集事件，这样你就能将所有事件日志集中在一个地方，方便你进行追踪并构建自动化告警。
- en: There are many options if you want to choose a SIEM system – for every budget
    and scenario. Over the years, I have seen many different SIEM systems – and each
    one just fitted perfectly for each organization.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想选择一个 SIEM 系统，选择非常多——适应各种预算和场景。多年来，我见过许多不同的 SIEM 系统，每一个都非常适合各自的组织。
- en: The most popular SIEM systems that I have seen out in the wild were **Splunk**,
    **Azure Sentinel**, **ArcSight**, **qRadar**, and the **“ELK stack” (Elastic,
    LogStash, and Kibana)**, just to mention a few. I also saw and used **Windows
    Event Forwarding** (**WEF**) to realize event log monitoring.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 我见过的最流行的 SIEM 系统包括**Splunk**、**Azure Sentinel**、**ArcSight**、**qRadar**和**“ELK
    堆栈” (Elastic, LogStash, 和 Kibana)**，仅举几例。我还使用过**Windows 事件转发** (**WEF**) 来实现事件日志监控。
- en: Of course, it is also possible to analyze events on a local machine, but it
    is not practical – depending on the configuration, if the maximum log size is
    reached, old events are deleted, and you cannot easily correlate them with logs
    from another system.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，也可以分析本地机器上的事件，但这并不实际——根据配置，如果达到最大日志大小，旧事件会被删除，且很难将其与其他系统的日志相关联。
- en: In this chapter, we will also analyze events directly on the machine (or remotely
    if you like), but for an actual production environment, I recommend having an
    SIEM system in place – just make sure that it fits your use case before you start.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们还将直接在机器上（或如果你愿意也可以远程）分析事件，但对于实际的生产环境，我建议使用 SIEM 系统——只是确保它适合你的用例再开始使用。
- en: An overview of important PowerShell-related log files
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重要的 PowerShell 相关日志文件概述
- en: Before we get started, you might want to configure all the logs that you want
    to forward to your SIEM or a central log server.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，你可能希望配置所有你想要转发到 SIEM 或中央日志服务器的日志。
- en: In this section, you will find an overview of all the logs that I consider important
    when it comes to PowerShell logging.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将概述我认为在 PowerShell 日志记录方面重要的所有日志。
- en: Basic PowerShell event logs
  id: totrans-350
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本 PowerShell 事件日志
- en: When working with PowerShell, there are three event logs that are of interest
    – the **Windows PowerShell log**, the **Microsoft Windows PowerShell Operational
    log**, and the **PowerShellCore Operational log**. Let’s discuss each of them
    in the following subsections.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 PowerShell 时，有三个事件日志是我们关注的重点——**Windows PowerShell 日志**、**Microsoft Windows
    PowerShell 操作日志**和**PowerShellCore 操作日志**。我们将在以下小节中讨论每个日志。
- en: The Windows PowerShell Log
  id: totrans-352
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Windows PowerShell 日志
- en: Windows PowerShell has always had a strong focus on security and logging, even
    in its earliest versions. In fact, compared to other shell or scripting languages,
    PowerShell’s early versions already had significantly better security logging
    capabilities. However, over the years, the language evolved, and its logging capabilities
    expanded enormously, providing us with even better logging nowadays.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: Windows PowerShell 一直以来都非常注重安全性和日志记录，甚至在最早的版本中也是如此。实际上，与其他 shell 或脚本语言相比，PowerShell
    的早期版本在安全日志记录方面已经具有显著更好的功能。然而，随着时间的推移，PowerShell 语言不断发展，其日志记录功能也得到了极大的扩展，如今提供了更为强大的日志记录能力。
- en: 'Although early versions did not provide us with the security logging that you
    know from today’s PowerShell versions, Windows PowerShell has written events to
    the **Windows PowerShell event log** since version 1 when important engine events
    occurred. Back then, PowerShell provided only basic logging functionalities, which
    are still available in current operating systems, as shown here:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管早期版本没有提供您今天在 PowerShell 版本中所知道的安全日志记录功能，但自从版本 1 起，当发生重要引擎事件时，Windows PowerShell
    就会将事件写入**Windows PowerShell 事件日志**。当时，PowerShell 仅提供基本的日志记录功能，这些功能在当前的操作系统中仍然可用，如下所示：
- en: '**Full name**: Windows PowerShell'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：Windows PowerShell'
- en: '**Log path**: **%****SystemRoot%\System32\Winevt\Logs\Windows PowerShell.evtx**'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Windows PowerShell.evtx**'
- en: '**Path in the UI**: **Applications and Services** | **Windows PowerShell**'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI 中的路径**：**应用程序和服务** | **Windows PowerShell**'
- en: 'The *most interesting event IDs* in these event logs are the following:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些事件日志中，*最有趣的事件 ID* 包括以下几种：
- en: '**Event ID 200** (a warning): **Command health.**'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 200**（警告）：**命令健康。**'
- en: Look for **Host Application** to get more details on the executed command.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 查找**主机应用程序**以获取有关执行命令的更多详细信息。
- en: '**Event ID 400**: **The engine state is changed from none** **to available.**'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 400**：**引擎状态从无** **变为可用。**'
- en: This event might be *the most interesting event* in this event log, as it indicates
    when the engine was started and which version was used. This event is optimal
    for identifying and terminating outdated PowerShell versions (monitoring for **HostVersion**
    less than 5.0) – and is used for downgrade attacks (see the *Detecting a downgrade
    attack* section for more information).
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 这个事件可能是*最有趣的事件*，因为它表明引擎何时启动，以及使用的是哪个版本。此事件对于识别和终止过时的 PowerShell 版本（监控**HostVersion**
    小于 5.0）非常理想——并且通常用于降级攻击（有关更多信息，请参见*检测降级攻击*部分）。
- en: '**Event ID 800**: **The pipeline execution details for the command line –**
    *<**command-line command>***.**'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 800**：**命令行的管道执行详情 –** *<**命令行命令>***。**'
- en: Although event ID **800** provides details on the execution of command lines
    that contain cmdlets, it doesn’t include information about other executables such
    as **wmic**. It may be more useful to monitor the event IDs **4103** and **4104**
    from the *Microsoft Windows PowerShell Operational log* for additional details.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管事件 ID **800** 提供了包含 cmdlet 的命令行执行的详细信息，但它不包括其他可执行文件的信息，如**wmic**。为了获得更多详细信息，监视来自*Microsoft
    Windows PowerShell 操作日志*的事件 ID **4103** 和 **4104** 可能更有用。
- en: The Microsoft Windows PowerShell Operational log contains all relevant information
    when it comes to the usage of PowerShell – for example, **Module Logging** and
    also **Script Block Logging** events are written to this log.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Windows PowerShell 操作日志包含有关 PowerShell 使用的所有相关信息——例如，**模块日志记录**和**脚本块日志记录**事件都会写入此日志。
- en: The Microsoft Windows PowerShell Operational log
  id: totrans-366
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Microsoft Windows PowerShell 操作日志
- en: Starting with Windows Vista, Microsoft introduced a new type of logging system
    called **ETW**. As part of this change, the *Microsoft Windows PowerShell Operational
    log* was introduced, which included a range of event IDs such as **4100**, **4103**
    (although configuring them could be challenging), as well as **40961**, **40862**,
    and others related to PowerShell Remoting logs.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Windows Vista 开始，微软引入了一种新的日志记录系统，称为 **ETW**。作为这一变化的一部分，*Microsoft Windows
    PowerShell 操作日志* 被引入，包含了一系列事件 ID，如 **4100**、**4103**（尽管配置它们可能很具挑战性），以及 **40961**、**40862**
    等与 PowerShell 远程日志相关的事件 ID。
- en: With *KB3000850*, Advanced Audit capabilities such as **Module Logging**, **Script
    Block Logging**, and **transcription** could be ported into PowerShell version
    4 (Windows Server 2012 R2 and Windows 8.1). Later on, with PowerShell version
    5 (Windows Server 2016 and Windows 10), these features were included by default.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 *KB3000850* 的发布，像 **模块日志记录**、**脚本块日志记录** 和 **转录** 等高级审计功能可以移植到 PowerShell
    版本 4（Windows Server 2012 R2 和 Windows 8.1）。随后，在 PowerShell 版本 5（Windows Server
    2016 和 Windows 10）中，这些功能默认启用。
- en: 'With these new auditing capabilities, there were also new event types introduced,
    such as the event IDs **4104**, **4105**, and **4106**, which provide you with
    advanced logging capabilities:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 随着这些新的审计功能的引入，也有新的事件类型被加入，比如事件 ID **4104**、**4105** 和 **4106**，它们为你提供了更高级的日志记录功能：
- en: '**Full** **name:**  **Microsoft-Windows-Powershell/Operational**'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整** **名称**： **Microsoft-Windows-Powershell/Operational**'
- en: '**Log** **path**: **%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-PowerShell%4Operational.evtx**'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志** **路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-PowerShell%4Operational.evtx**'
- en: '**Path in the UI**: **Applications and Services** | **Microsoft** | **Windows**
    | **PowerShell** | **Operational**'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI 中的路径**：**应用程序和服务** | **Microsoft** | **Windows** | **PowerShell** | **Operational**'
- en: 'The *most interesting event IDs* in this event logs are the following:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 此事件日志中*最有趣的事件 ID*如下：
- en: '**Event ID 4103**: **Executing pipeline/command invocation. An event is generated
    if PowerShell Module Logging** **is enabled.**'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 4103**：**执行管道/命令调用。如果启用了 PowerShell 模块日志记录，则会生成此事件**。'
- en: '**Event ID 4104**: **Creating** **Scriptblock text.**'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 4104**：**创建** **脚本块文本**。'
- en: An event is generated if **ScriptBlockLogging** is enabled. Common malicious
    activities such as loading a malicious module or executing a suspicious command
    are logged, regardless of whether **ScriptBlockLogging** is enabled or not.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了 **ScriptBlockLogging**，则会生成此事件。常见的恶意活动，如加载恶意模块或执行可疑命令，都会被记录，无论是否启用 **ScriptBlockLogging**。
- en: '**Event ID 4105**: **ScriptBlock_Invoke_Start_Detail (message: started/completed
    an invocation** **of ScriptBlock).**'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 4105**：**ScriptBlock_Invoke_Start_Detail（消息：已启动/完成一个脚本块的调用）**。'
- en: An event is generated if **ScriptBlockLogging** is enabled. This records start/stop
    events. It is very noisy and not necessarily needed for security monitoring.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了 **ScriptBlockLogging**，则会生成此事件。这记录了开始/停止事件。它非常嘈杂，未必适用于安全监控。
- en: '**Event ID 4106**: **ScriptBlock_Invoke_Complete_Detail (message: started/completed
    an invocation** **of ScriptBlock).**'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 4106**：**ScriptBlock_Invoke_Complete_Detail（消息：已启动/完成一个脚本块的调用）**。'
- en: An event is generated if **ScriptBlockLogging** is enabled. This records start/stop
    events. It is very noisy and not necessarily needed for security monitoring.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启用了 **ScriptBlockLogging**，则会生成此事件。这记录了开始/停止事件。它非常嘈杂，未必适用于安全监控。
- en: '**Event ID 40961**: **The PowerShell console is** **starting up.**'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 40961**：**PowerShell 控制台正在** **启动**。'
- en: This event indicates that the PowerShell console was opened. Especially monitor
    for unusual user behavior using this event (for example, if the PowerShell console
    was executed by a user that should not log on to this system, or if it’s a system
    account).
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 该事件表示 PowerShell 控制台已打开。特别是通过此事件监控用户的异常行为（例如，如果 PowerShell 控制台是由不应登录此系统的用户执行，或者是由系统账户执行的）。
- en: '**Event ID 40962**: **The PowerShell console is ready for** **user input.**'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 40962**：**PowerShell 控制台已准备好接收** **用户输入**。'
- en: This event indicates that the PowerShell console was started and is now ready
    for user input. Especially monitor for unusual user behavior using this event
    (for example, if the PowerShell console was executed by a user that should not
    log on to this system or if it’s a system account).
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 该事件表示 PowerShell 控制台已启动，并且现在已准备好接收用户输入。特别是通过此事件监控用户的异常行为（例如，如果 PowerShell 控制台是由不应登录此系统的用户执行，或者是由系统账户执行的）。
- en: 'To filter for certain event IDs, you can pipe the output of **Get-WinEvent**
    to **Where-Object**:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 要筛选特定的事件 ID，可以将**Get-WinEvent**的输出通过管道传递给**Where-Object**：
- en: '[PRE28]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: In this example, you will get all events with the event ID **4104**, which indicates
    that a script block was created.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，您将获取所有事件 ID 为**4104**的事件，这表示已创建脚本块。
- en: The PowerShellCore Operational log
  id: totrans-388
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: PowerShellCore 操作日志
- en: 'When PowerShell Core was introduced, so was the PowerShellCore Operational
    log. It provides Advanced Audit capabilities for PowerShell Core Event Logging:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 当 PowerShell Core 被引入时，PowerShellCore 操作日志也随之推出。它提供了 PowerShell Core 事件日志的高级审计功能：
- en: '**Full** **name:**  **PowerShellCore/Operational**'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**PowerShellCore/Operational**'
- en: '**Log** **path**: **%SystemRoot%\System32\Winevt\Logs\PowerShellCore%4Operational.evtx**'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\PowerShellCore%4Operational.evtx**'
- en: '**Path in the UI**: **Applications and Services** | **PowerShellCore** | **Operational**'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI 路径**：**应用程序和服务** | **PowerShellCore** | **操作日志**'
- en: The event IDs that are logged within this log file are the same as the ones
    that are logged in the Microsoft Windows PowerShell Operational log. Please refer
    to the event IDs in the previous section.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 记录在此日志文件中的事件 ID 与记录在 Microsoft Windows PowerShell 操作日志中的事件 ID 相同。请参考前面部分的事件
    ID。
- en: The Windows Remote Management (WinRM) log
  id: totrans-394
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows 远程管理 (WinRM) 日志
- en: The **Microsoft Windows WinRM Operational log** records both inbound and outbound
    WinRM connections. Since PowerShell relies on WinRM for PowerShell remoting, you
    can also find PowerShell remote connections in this event log. Therefore, it is
    essential to also monitor and analyze event IDs from this log.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft Windows WinRM 操作日志**记录了进出 WinRM 的连接。由于 PowerShell 依赖 WinRM 进行远程管理，因此你也可以在此事件日志中找到
    PowerShell 远程连接。因此，监控和分析该日志中的事件 ID 是非常重要的。'
- en: '**Full** **name**: **Microsoft-Windows-WinRM/Operational**'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**Microsoft-Windows-WinRM/Operational**'
- en: '**Log** **path**: **%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-WinRM%4Operational.evtx**'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-WinRM%4Operational.evtx**'
- en: '**Path in the UI**: **Applications and Services** | **Microsoft** | **Windows**
    | **Windows Remote Management** | **Operational**'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI 路径**：**应用程序和服务** | **Microsoft** | **Windows** | **Windows 远程管理** | **操作日志**'
- en: When working with PowerShell and WinRM, the following are *the most interesting
    events* to look for in the WinRM event log.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 PowerShell 和 WinRM 时，以下是*最值得关注的事件*，它们通常会出现在 WinRM 事件日志中。
- en: '**Event ID 6**: **Creating a** **WSMan session.**'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 6**：**创建一个** **WSMan 会话。**'
- en: This is recorded whenever a remote connection is established. It also contains
    the username, the destination address, and the PowerShell version that was used.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 每当建立远程连接时，都会记录此事件。它还包含用户名、目标地址和使用的 PowerShell 版本。
- en: '**Event ID 81**: **Processing a client request for a CreateShell operation
    or processing a client request for a** **DeleteShell operation.**'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 81**：**处理来自客户端的 CreateShell 操作请求或处理来自客户端的 DeleteShell 操作请求。**'
- en: '**Event ID 82**: **Entering the plugin for a CreateShell operation with a ResourceUri**
    **of** **<http://schemas.microsoft.com/powershell/Microsoft.PowerShell>**'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 82**：**为 CreateShell 操作进入插件，资源 URI 为** **<http://schemas.microsoft.com/powershell/Microsoft.PowerShell>**'
- en: '**Event ID 134**: **Sending a response for a** **CreateShell operation.**'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 134**：**为** **CreateShell 操作发送响应。**'
- en: '**Event ID 169**: **The** *<domain>\<user>* **user has authenticated successfully
    using** **NTLM authentication.**'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 169**：**用户** *<domain>\<user>* **使用 NTLM 身份验证成功登录。**'
- en: You can query all events within the WinRM log using **Get-WinEvent Microsoft-Windows-WinRM/Operational**.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用**Get-WinEvent Microsoft-Windows-WinRM/Operational**查询 WinRM 日志中的所有事件。
- en: Security
  id: totrans-407
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安全性
- en: The Security event log is not only PowerShell related but also helps to correlate
    events such as logon/logoff and authentication.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性事件日志不仅与 PowerShell 相关，还帮助关联事件，如登录/注销和身份验证。
- en: '**Full** **name**: **Security**'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**安全性**'
- en: '**Log** **path**: **%SystemRoot%\System32\Winevt\Logs\Security.evtx**'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Security.evtx**'
- en: '**Path in the UI**: **Windows Logs** | **Security**'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI 路径**：**Windows 日志** | **安全性**'
- en: While not all event IDs in the Security log are generated by default, the most
    important ones are there to help identify security issues. If you want to implement
    extensive security logging, I recommend applying the Microsoft Security baselines
    from the Microsoft Security toolkit to your systems. However, it is important
    to note that the settings in the Security baseline should be commensurate with
    your organization’s resources and capabilities. Therefore, it’s advisable to evaluate
    which logging settings are appropriate for your organization’s needs and capabilities
    before applying a baseline.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然并非所有的安全日志中的事件 ID 都是默认生成的，但最重要的事件 ID 旨在帮助识别安全问题。如果您想实现全面的安全日志记录，我建议将 Microsoft
    安全工具包中的 Microsoft 安全基准应用到您的系统中。然而，重要的是要注意，安全基准中的设置应与您组织的资源和能力相匹配。因此，在应用基准之前，建议评估哪些日志设置适合您组织的需求和能力。
- en: 'You can download the **Microsoft Security toolkit** here: [https://www.microsoft.com/en-us/download/details.aspx?id=55319](https://www.microsoft.com/en-us/download/details.aspx?id=55319).'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此下载**Microsoft 安全工具包**：[https://www.microsoft.com/en-us/download/details.aspx?id=55319](https://www.microsoft.com/en-us/download/details.aspx?id=55319)。
- en: 'The event IDs in this event log are some of the most important to monitor for
    security purposes. While not all of them are specific to PowerShell, they are
    still critical to maintaining a secure environment. The following are the *most
    interesting event IDs* in this event log:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 此事件日志中的事件 ID 是一些最重要的安全监控事件。虽然并非所有事件 ID 都特定于 PowerShell，但它们仍然对维护安全环境至关重要。以下是此事件日志中*最有趣的事件
    ID*：
- en: '**Event ID 4657**: **A registry value** **was modified**'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 4657**：**注册表值** **已修改**'
- en: '**Event ID 4688**: **A new process has been created. Look for processes with
    powershell.exe as the “New Process Name”. You can use the Creator Process ID to
    link what process launched which** **other processes.**'
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 4688**：**新进程已创建。请查找“新进程名称”中包含 powershell.exe 的进程。您可以使用创建者进程 ID 来链接哪个进程启动了哪些**
    **其他进程。**'
- en: '**Event ID 1100**: **The Event Logging service has** **shut down.**'
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 1100**：**事件日志服务已** **关闭。**'
- en: '**Event ID 1102**: **The audit log** **was cleared.**'
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 1102**：**审核日志** **已清除。**'
- en: '**Event ID 1104**: **The security log is** **now full.**'
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 1104**：**安全日志** **已满。**'
- en: '**Event ID 4624**: **An account was successfully** **logged on.**'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 4624**：**账户已成功** **登录。**'
- en: '**Event ID 4625**: **An account failed to** **log on.**'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 4625**：**账户登录失败。**'
- en: The Security log is quite extensive and contains a lot of important event IDs.
    Covering just the Security log could fill an entire book; therefore, this list
    is not complete, and I only listed some of the most important ones when it comes
    to PowerShell.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 安全日志内容丰富，包含大量重要的事件 ID。仅仅覆盖安全日志就可以写成一本完整的书；因此，这个列表并不完整，我这里只列出了与 PowerShell 相关的一些最重要的事件
    ID。
- en: Nevertheless, the question of *which security event IDs matter* has kept me
    awake many nights, and so I came up with an open source tool called **EventList**.
    If you want to find out which event IDs matter, have a look at the *Forwarding
    and analyzing event logs – EventList* section in this chapter.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，*哪些安全事件 ID 重要*的问题让我失眠了很多个夜晚，因此我开发了一个名为**EventList**的开源工具。如果你想了解哪些事件 ID 重要，可以查看本章中的*转发和分析事件日志
    – EventList*部分。
- en: System
  id: totrans-424
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 系统
- en: 'In the system log, many system-relevant log IDs are generated:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统日志中，会生成许多与系统相关的日志 ID：
- en: '**Full** **name**: **System**'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全名**：**系统**'
- en: '**Log** **path**: **%SystemRoot%\System32\Winevt\Logs\System.evtx**'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志** **路径**：**%SystemRoot%\System32\Winevt\Logs\System.evtx**'
- en: '**Path in the UI**: **Windows Logs** | **System**'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI 中的路径**：**Windows 日志** | **系统**'
- en: 'The *most interesting event ID* in this event log for PowerShell security logging
    is as follows:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 在此事件日志中，*最有趣的事件 ID* 如下：
- en: '**Event ID 104** – **the** *<name>* **log was cleared.** This event indicates
    that the event log with the name *<name>* was cleared, which could indicate an
    adversary trying to hide traces. Especially use this event ID to monitor for the
    log names *“Windows PowerShell,"* *“PowerShell Operational,"* or *“PowerShellCore”*
    to detect PowerShell-related event log clearing.'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 104** – **日志** *<name>* **已清除。** 此事件表明名为 *<name>* 的事件日志已被清除，可能表示攻击者试图隐藏痕迹。特别使用此事件
    ID 监控日志名为 *“Windows PowerShell,"* *“PowerShell Operational,"* 或 *“PowerShellCore”*
    的日志，以检测与 PowerShell 相关的事件日志清除。'
- en: Depending on what you are monitoring for, there are many interesting events
    in this log – for example, details on every installation.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你监控的内容，在此日志中有许多有趣的事件——例如，每次安装的详细信息。
- en: Windows Defender
  id: totrans-432
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows Defender
- en: 'The Windows Defender log has been enabled by default since Windows 10 and Windows
    Server 2016, and it provides a lot of helpful events. For example, it also contains
    events related to the **Antimalware Scan Interface** (**AMSI**), which is a part
    of Windows Defender:'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 从Windows 10和Windows Server 2016起，默认启用了Windows Defender日志，并提供了许多有用的事件。例如，它还包含与**恶意软件扫描接口**（**AMSI**）相关的事件，AMSI是Windows
    Defender的一部分：
- en: '**Full name**: **Microsoft-Windows-Windows Defender/Operational**'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**Microsoft-Windows-Windows Defender/Operational**'
- en: '**Log path**: **%****SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-Windows
    Defender%4Operational.evtx**'
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-Windows Defender%4Operational.evtx**'
- en: '**Path in the UI**: **Applications and Services** | **Microsoft** | **Windows**
    | **Windows Defender** | **Operational**'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI中的路径**：**应用程序和服务** | **Microsoft** | **Windows** | **Windows Defender**
    | **操作日志**'
- en: 'The *most interesting event IDs* in this event log for PowerShell security
    logging are the following:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 此事件日志中关于PowerShell安全日志记录的*最有趣的事件ID*如下：
- en: '**Event ID 1116**: **Microsoft Defender Antivirus has detected malware or other
    potentially** **unwanted software.**'
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件ID 1116**：**Microsoft Defender Antivirus已检测到恶意软件或其他潜在的** **不需要的软件。**'
- en: '**Event ID 1117**: **Microsoft Defender Antivirus has taken action to protect
    this machine from malware or other potentially** **unwanted software.**'
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件ID 1117**：**Microsoft Defender Antivirus已采取措施保护此计算机免受恶意软件或其他潜在的** **不需要的软件的影响。**'
- en: 'If Microsoft Defender is used on your machine, you will find many more interesting
    Defender-related log events in this event log. Use this reference to learn more
    about each Microsoft Defender-related event ID: [https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/troubleshoot-microsoft-defender-antivirus](https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/troubleshoot-microsoft-defender-antivirus).'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在你的机器上使用了Microsoft Defender，你会在此事件日志中找到更多与Defender相关的有趣事件。你可以使用以下参考资料了解更多关于每个Microsoft
    Defender相关事件ID的信息：[https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/troubleshoot-microsoft-defender-antivirus](https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/troubleshoot-microsoft-defender-antivirus)。
- en: We will take a closer look at AMSI in [*Chapter 12*](B16679_12_Final_PD.xhtml#_idTextAnchor324),
    *Exploring the Antimalware Scan* *Interface (AMSI)*.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第12章*](B16679_12_Final_PD.xhtml#_idTextAnchor324)中更详细地了解AMSI，*探索恶意软件扫描接口*（*AMSI*）。
- en: Windows Defender Application Control and AppLocker
  id: totrans-442
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows Defender 应用控制与 AppLocker
- en: '**Windows Defender Application Control** (**WDAC**) and **AppLocker** can be
    used to allowlist applications to restrict which software is allowed to be used
    within an organization. Both solutions help you to protect against the unauthorized
    use of software.'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '**Windows Defender应用控制**（**WDAC**）和**AppLocker**可用于允许列应用程序，以限制组织内允许使用的软件。两种解决方案都有助于防止未经授权的软件使用。'
- en: We will take a closer look at WDAC and AppLocker in [*Chapter 11*](B16679_11_Final_PD.xhtml#_idTextAnchor306),
    *AppLocker, Application Control, and* *Code Signing*.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第11章*](B16679_11_Final_PD.xhtml#_idTextAnchor306)中更详细地了解WDAC和AppLocker，*AppLocker、应用控制和*
    *代码签名*。
- en: When enabling allowlist solutions, auditing is the first major step; hence,
    analyzing WDAC and AppLocker-related event IDs is necessary for this process.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 启用允许列表解决方案时，审计是第一步，因此，分析与WDAC和AppLocker相关的事件ID对于此过程至关重要。
- en: Windows Defender Application Control (WDAC)
  id: totrans-446
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Windows Defender应用控制（WDAC）
- en: WDAC is Microsoft’s latest allowlisting solution, which was introduced with
    Windows 10 and was earlier known as *Device Guard*. In addition to allowlisting
    applications, WDAC can also be used to enforce code integrity policies on Windows
    machines.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: WDAC是微软最新的允许列表解决方案，随着Windows 10推出，并且之前被称为*设备保护（Device Guard）*。除了允许列应用程序外，WDAC还可用于在Windows机器上强制实施代码完整性策略。
- en: WDAC has two main event logs – one event log named **MSI and Scripts** is shared
    with AppLocker, and another event log is used to log **Code** **Integrity**-related
    events.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: WDAC有两个主要的事件日志——一个名为**MSI和脚本**的事件日志与AppLocker共享，另一个事件日志用于记录**代码完整性**相关的事件。
- en: '**Code Integrity**'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码完整性**'
- en: '**Full** **name**: **Microsoft-Windows-CodeIntegrity/Operational**'
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**Microsoft-Windows-CodeIntegrity/Operational**'
- en: '**Log** **path**: **%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-CodeIntegrity%4Operational.evtx**'
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-CodeIntegrity%4Operational.evtx**'
- en: '**Path in the UI**: **Applications and Services Logs** | **Microsoft** | **Windows**
    | **CodeIntegrity** | **Operational**'
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**界面路径**：**应用程序和服务日志** | **Microsoft** | **Windows** | **CodeIntegrity** |
    **Operational**'
- en: 'The *most interesting event IDs* in this event logs for PowerShell security
    logging are the following:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 安全日志中这个事件日志最*有趣的事件 ID*如下：
- en: '**Event ID 3001**: **An unsigned driver attempted to load on** **the system.**'
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3001**：**未签名的驱动程序尝试在系统上加载。**'
- en: '**Event ID 3023**: **The driver file under validation didn’t meet the requirements
    to pass the Application** **Control policy.**'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3023**：**验证中的驱动程序文件未满足通过应用程序** **控制策略的要求。**'
- en: '**Event ID 3033**: **The file under validation didn’t meet the requirements
    to pass the Application** **Control policy.**'
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3033**：**验证中的文件未满足通过应用程序** **控制策略的要求。**'
- en: '**Event ID 3034**: **The file under validation didn’t meet the requirements
    to pass the Application Control policy if it was enforced. The file was allowed,
    since the policy is in** **audit mode.**'
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3034**：**如果执行了应用程序控制策略，验证中的文件未满足通过该策略的要求。由于该策略处于审核模式，文件被允许。**'
- en: '**Event ID 3064**: **If the Application Control policy was enforced, a user
    mode DLL under validation didn’t meet the requirements to pass the Application
    Control policy. The DLL was allowed, since the policy is in** **audit mode.**'
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3064**：**如果应用程序控制策略已执行，验证中的用户模式 DLL 未满足通过应用程序控制策略的要求。由于该策略处于审核模式，DLL
    被允许运行。**'
- en: '**Event ID 3065**: **If the Application Control policy was enforced, a user
    mode DLL under validation didn’t meet the requirements to pass the Application**
    **Control policy.**'
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3065**：**如果应用程序控制策略已执行，验证中的用户模式 DLL 未满足通过应用程序** **控制策略的要求。**'
- en: '**Event ID 3076**: **This event is the main Application Control block event
    for audit mode policies. It indicates that the file would have been blocked if
    the policy** **was enforced.**'
  id: totrans-460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3076**：**此事件是审核模式策略的主要应用程序控制阻止事件。它表明，如果执行策略，该文件将被阻止。**'
- en: '**Event ID 3077**: **This event is the main Application Control block event
    for enforced policies. It indicates that the file didn’t pass your policy and**
    **was blocked.**'
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 3077**：**此事件是执行策略的主要应用程序控制阻止事件。它表示该文件未通过你的策略并被** **阻止。**'
- en: You can query all events within the WDAC log using **Get-WinEvent Microsoft-Windows-CodeIntegrity/Operational**.
    Monitoring and analyzing these events can help identify potential security breaches
    and improve the overall security posture of a system.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 **Get-WinEvent Microsoft-Windows-CodeIntegrity/Operational** 查询 WDAC 日志中的所有事件。监视和分析这些事件可以帮助识别潜在的安全漏洞，并改善系统的整体安全态势。
- en: '**MSI** **and Script**'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '**MSI** **和脚本**'
- en: 'All Microsoft Installer and script-related event IDs can be found in this event
    log:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 所有与 Microsoft 安装程序和脚本相关的事件 ID 都可以在此事件日志中找到：
- en: '**Full name**: **Microsoft-Windows-AppLocker/MSI** **and Script**'
  id: totrans-465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**Microsoft-Windows-AppLocker/MSI** **和脚本**'
- en: '**Log path**: **%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4MSI**
    **and Script.evtx**'
  id: totrans-466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4MSI**
    **和脚本.evtx**'
- en: '**Path in the UI**: **Applications and Services Logs** | **Microsoft** | **Windows**
    | **Applocker** | **MSI** **and Script**'
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**界面路径**：**应用程序和服务日志** | **Microsoft** | **Windows** | **Applocker** | **MSI**
    **和脚本**'
- en: 'The *most interesting event IDs* in the event logs for PowerShell security
    logging are the following:'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 安全日志中最*有趣的事件 ID*如下：
- en: '**Event ID 8028**: *** **was allowed to run but would have been prevented if
    the Config CI policy** **was enforced.**'
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8028**：*** **被允许运行，但如果执行了配置 CI 策略，则将被阻止。**'
- en: '**Event ID 8029**: *** **was prevented from running due to the Config** **CI
    policy.**'
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8029**：*** **由于配置 CI 策略，未能运行。**'
- en: '**Event ID 8036**: *** **was prevented from running due to the Config** **CI
    policy.**'
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8036**：*** **由于配置 CI 策略，未能运行。**'
- en: '**Event ID 8037**: *** **passed the Config CI policy and was allowed** **to
    run.**'
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8037**：*** **通过了配置 CI 策略并被允许** **运行。**'
- en: 'If you want to learn about more Application Control event IDs, have a look
    at the *AppLocker* section and the following documentation: [https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations](https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations).'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于应用控制的事件 ID，可以查看 *AppLocker* 部分以及以下文档：[https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations](https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations)。
- en: AppLocker
  id: totrans-474
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: AppLocker
- en: When it comes to AppLocker, there are four event log files that you might want
    to examine, depending on your use case – *EXE and DLL*, *MSI and Script*, *Packaged
    app-Deployment*, and *Packaged app-Execution*.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 说到 AppLocker，根据使用场景的不同，你可能需要查看四个事件日志文件——*EXE 和 DLL*，*MSI 和脚本*，*打包应用-部署*，和 *打包应用-执行*。
- en: 'In the UI, you can find all four logs under the same path – simply replace
    **<Name of the log>** with the name of each event log, as shown here:'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 在 UI 中，你可以在相同的路径下找到所有四个日志——只需将 **<日志名称>** 替换为每个事件日志的名称，如下所示：
- en: '**Path in the UI**: **Applications and Services** | **Microsoft** | **Windows**
    | **AppLocker** | **<Name of** **the log>**'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: '**UI 中的路径**：**应用程序和服务** | **Microsoft** | **Windows** | **AppLocker** | **<日志名称>**'
- en: 'The following is the full name and the path of each AppLocker-related event
    log (please note that auditing must be enabled in order for any of these event
    logs to appear):'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是每个与 AppLocker 相关的事件日志的完整名称和路径（请注意，必须启用审计才能显示这些事件日志）：
- en: '**EXE** **and DLL**'
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EXE** **和 DLL**'
- en: 'All event IDs that are related to executing binaries (EXE) and DLLs can be
    found in this event log:'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 所有与执行二进制文件（EXE）和 DLL 相关的事件 ID 都可以在此事件日志中找到：
- en: '**Full name**: **Microsoft-Windows-AppLocker/EXE** **and DLL**'
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**Microsoft-Windows-AppLocker/EXE** **和 DLL**'
- en: '**Log path**: **%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4EXE**
    **and DLL.evtx**'
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4EXE**
    **和 DLL.evtx**'
- en: '**MSI** **and Script**'
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MSI** **和脚本**'
- en: 'All Microsoft Installer and script-related event IDs can be found in this event
    log:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 所有与 Microsoft Installer 和脚本相关的事件 ID 都可以在此事件日志中找到：
- en: '**Full name**: **Microsoft-Windows-AppLocker/MSI** **and Script**'
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**Microsoft-Windows-AppLocker/MSI** **和脚本**'
- en: '**Log path**: **%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4MSI**
    **and Script.evtx**'
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4MSI**
    **和脚本.evtx**'
- en: '**Packaged app-Deployment**'
  id: totrans-487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**打包应用-部署**'
- en: 'If a packaged app is deployed, you can find all related event IDs in this event
    log:'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 如果部署了打包应用，你可以在此事件日志中找到所有相关的事件 ID：
- en: '**Full name**: **Microsoft-Windows-AppLocker/Packaged app-Deployment**'
  id: totrans-489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**Microsoft-Windows-AppLocker/Packaged app-Deployment**'
- en: '**Log path**: **%****SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4Packaged
    app-Deployment.evtx**'
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4Packaged
    app-Deployment.evtx**'
- en: '**Packaged app-Execution**'
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**打包应用-执行**'
- en: All packaged app execution-related event IDs can be found in this event log.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 所有与打包应用执行相关的事件 ID 可以在此事件日志中找到。
- en: '**Full name**: **Microsoft-Windows-AppLocker/Packaged app-Execution**'
  id: totrans-493
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整名称**：**Microsoft-Windows-AppLocker/Packaged app-Execution**'
- en: '**Log path**: **%****SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4Packaged
    app-Execution.evtx**'
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志路径**：**%SystemRoot%\System32\Winevt\Logs\Microsoft-Windows-AppLocker%4Packaged
    app-Execution.evtx**'
- en: 'The *most interesting event IDs* in these event logs for PowerShell security
    logging are the following:'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 PowerShell 安全日志记录而言，这些事件日志中最有趣的事件 ID 如下：
- en: '**Event ID 8000 (error)**: **The Application Identity Policy conversion failed.
    Status *<%1> This indicates that the policy was not applied correctly to the computer.
    The status message is provided for** **troubleshooting purposes.**'
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8000（错误）**：**应用身份策略转换失败。状态 *<%1> 这表示策略未正确应用于计算机。状态消息用于** **故障排除目的。**'
- en: '**Event ID 8001 (information)**: **The AppLocker policy was applied successfully
    to this computer. This indicates that the AppLocker policy was successfully applied
    to** **the computer.**'
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8001（信息）**：**AppLocker 策略已成功应用于此计算机。这表示 AppLocker 策略已成功应用于** **该计算机。**'
- en: '**Event ID 8002 (information)**: *<Filename>* **was allowed to run. This specifies
    that the .exe or .dll file is allowed by an** **AppLocker rule.**'
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8002（信息）**：*<文件名>* **被允许运行。这表示该 .exe 或 .dll 文件被 AppLocker 规则允许。**'
- en: '**Event ID 8003 (warning)**: *<Filename>* **was allowed to run but would have
    been prevented from running if the AppLocker policy were enforced. This is applied
    only when the Audit only enforcement mode is enabled. It specifies that the .exe
    or .dll file would be blocked if the Enforce rules enforcement mode** **were enabled.**'
  id: totrans-499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8003 (警告)**：*<文件名>* **被允许运行，但如果启用了 AppLocker 策略，则会被阻止运行。仅在启用了“仅审核”执行模式时应用。它指定，如果启用了强制规则执行模式，则该
    .exe 或 .dll 文件将被阻止运行。**'
- en: '**Event ID 8004 (error)**: *<Filename>* **was not allowed to run. Access to
    <filename> is restricted by the administrator. This is applied only when the Enforce
    rules enforcement mode is set either directly or indirectly through Group Policy
    inheritance. The .exe or .dll file** **cannot run.**'
  id: totrans-500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8004 (错误)**：*<文件名>* **未被允许运行。访问 <文件名> 被管理员限制。这仅在强制规则执行模式直接或通过组策略继承间接设置时应用。该
    .exe 或 .dll 文件** **无法运行。**'
- en: '**Event ID 8005 (information)**: *<Filename>* **was allowed to run. This specifies
    that the script or .msi file is allowed by an** **AppLocker rule.**'
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8005 (信息)**：*<文件名>* **被允许运行。这表示该脚本或 .msi 文件被** **AppLocker 规则允许运行。**'
- en: '**Event ID 8006 (warning)**: *<Filename>* **was allowed to run but would have
    been prevented from running if the AppLocker policy were enforced. This is applied
    only when the Audit only enforcement mode is enabled. It specifies that the script
    or .msi file would be blocked if the Enforce rules enforcement mode** **were enabled.**'
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8006 (警告)**：*<文件名>* **被允许运行，但如果启用了 AppLocker 策略，则会被阻止运行。仅在启用了“仅审核”执行模式时应用。它指定，如果启用了强制规则执行模式，则该脚本或
    .msi 文件将被阻止运行。**'
- en: '**Event ID 8007 (error)**: *<Filename>* **was not allowed to run. Access to
    <Filename> is restricted by the administrator. This is applied only when the Enforce
    rules enforcement mode is set either directly or indirectly through Group Policy
    inheritance. The script or .msi file** **cannot run.**'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8007 (错误)**：*<文件名>* **未被允许运行。访问 <文件名> 被管理员限制。这仅在强制规则执行模式直接或通过组策略继承间接设置时应用。该脚本或
    .msi 文件** **无法运行。**'
- en: '**Event ID 8008 (error)**: **AppLocker is disabled on the SKU. This was added
    in Windows Server 2012 and** **Windows 8.**'
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件 ID 8008 (错误)**：**AppLocker 在此 SKU 中被禁用。此功能在 Windows Server 2012 和** **Windows
    8 中添加。**'
- en: 'If you are interested in learning about more AppLocker event IDs, please refer
    to the following link: [https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/using-event-viewer-with-applocker](https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/using-event-viewer-with-applocker).'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解更多关于 AppLocker 事件 ID 的信息，请参考以下链接：[https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/using-event-viewer-with-applocker](https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/applocker/using-event-viewer-with-applocker)。
- en: There are, of course, many other interesting log files, such as **Firewall**
    and **DSC**. Mentioning and describing all of them would exceed the content of
    this book; therefore, I have only mentioned some of the most interesting log files
    when it comes to PowerShell Security.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，还有许多其他有趣的日志文件，例如 **防火墙** 和 **DSC**。提到并描述所有这些文件会超出本书的内容，因此我只在涉及 PowerShell
    安全时提到了其中一些最有趣的日志文件。
- en: Increasing log size
  id: totrans-507
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 增加日志文件大小
- en: Every event that is generated lets a log file grow. As thousands of events can
    be written in a very short time, it is useful to increase the maximum log file
    size – especially if you also want to analyze events locally.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 每生成一个事件，日志文件就会增长。由于数千个事件可以在非常短的时间内写入，因此增加日志文件的最大大小非常有用——尤其是当你也希望在本地分析事件时。
- en: Of course, it is always recommended to forward your logs to a central log repository
    to make sure the logs will not be lost. However, if you want to analyze events
    locally, it is also helpful to increase the log file size.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，始终建议将日志转发到中央日志库，以确保日志不会丢失。但是，如果你希望在本地分析事件，增加日志文件大小也很有帮助。
- en: 'The **Limit-EventLog** cmdlet can help you with this task in Windows PowerShell:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '**Limit-EventLog** cmdlet 可以帮助你在 Windows PowerShell 中完成此任务：'
- en: '[PRE29]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This command sets the maximum size of the PowerShell log to *4 GB*. Please note
    that the “MB” and “GB” prefixes are also available in this cmdlet.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将 PowerShell 日志的最大大小设置为 *4 GB*。请注意，"MB" 和 "GB" 前缀也可以在此 cmdlet 中使用。
- en: When setting the maximum size of the event log, it’s important to keep in mind
    that the size of an event log entry can vary, depending on the specific event
    log and the number of enabled events. Look how much space one event usually takes
    up in your environment on average per log. First, you need to get the log size
    of an event log. The following command returns the maximum size of the Windows
    PowerShell event log in *KB:*
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 设置事件日志的最大大小时，重要的是要记住，事件日志条目的大小可能会有所不同，这取决于特定的事件日志和启用的事件数量。看看在你的环境中，一个事件通常占用多少空间。首先，你需要获取事件日志的日志大小。以下命令返回
    *KB* 中 Windows PowerShell 事件日志的最大大小：
- en: '[PRE30]'
  id: totrans-514
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Then, divide it by the number of entries. Just like that you can calculate the
    estimated size of your event log and how many events it should hold before events
    will be rotated.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将其除以条目的数量。这样你就可以计算出事件日志的预估大小，以及在事件日志被轮换之前，它应该能容纳多少个事件。
- en: 'If you use PowerShell 7, the **Limit-EventLog** cmdlet is not available. Instead,
    you will need to alter the registry, using **New-ItemProperty**:'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 PowerShell 7，**Limit-EventLog** cmdlet 是不可用的。相反，你需要通过使用 **New-ItemProperty**
    来修改注册表：
- en: '[PRE31]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Using the **Limit-EventLog** command, you can also specify the behavior when
    an event log is full: [https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/limit-eventlog](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/limit-eventlog).'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **Limit-EventLog** 命令，你还可以指定当事件日志已满时的行为：[https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/limit-eventlog](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/limit-eventlog)。
- en: Summary
  id: totrans-519
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to get started with security logging for PowerShell.
    You now know which event logs are of interest and which event IDs you should look
    for. As security monitoring is a huge topic, you have learned just the basics
    on how to get started and continue.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何开始使用 PowerShell 的安全日志记录。你现在知道哪些事件日志是需要关注的，以及应该查找哪些事件 ID。由于安全监控是一个庞大的主题，你仅学习了如何开始和继续的基础知识。
- en: You learned how to configure PowerShell Module Logging, Script Block Logging,
    and PowerShell transcripts – manually and centralized for Windows PowerShell,
    as well as for PowerShell Core.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 你学习了如何为 Windows PowerShell 和 PowerShell Core 配置 PowerShell 模块日志记录、脚本块日志记录和 PowerShell
    转录——无论是手动配置还是集中配置。
- en: Another important learning point is that log events can be tampered with, and
    you can implement some level of protection using Protected Event Logging.
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的学习点是日志事件可能会被篡改，你可以通过使用受保护的事件日志来实施一定程度的保护。
- en: Eventually, it is best to forward your log events to a centralized SIEM system,
    but if that’s not possible, you also learned how to analyze events using PowerShell.
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，最好的做法是将你的日志事件转发到一个集中的 SIEM 系统，但如果这不可行，你也学会了如何使用 PowerShell 分析事件。
- en: Now that you have been provided with some example scripts and code snippets,
    you are ready to investigate all PowerShell activity on your clients and servers.
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经获得了一些示例脚本和代码片段，你准备好调查客户端和服务器上的所有 PowerShell 活动了。
- en: Last but not least, if you want to dive deeper into security monitoring, EventList
    can help you to find out which events are important to monitor.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你想更深入地了解安全监控，EventList 可以帮助你找出哪些事件是值得监控的。
- en: When we talk about auditing, detection, and monitoring; local systems are not
    far away. Let’s dive deeper into the system and have a look at the Windows registry,
    the Windows API, COM, CIM/WMI, and how it is possible to run PowerShell without
    running **powershell.exe** in our next chapter.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论审计、检测和监控时；本地系统也不可忽视。让我们深入探讨系统，并看看 Windows 注册表、Windows API、COM、CIM/WMI，及如何在不运行
    **powershell.exe** 的情况下运行 PowerShell，下一章会介绍这些内容。
- en: Further reading
  id: totrans-527
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'If you want to explore some of the topics that were mentioned in this chapter,
    follow these resources:'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想探索本章中提到的一些主题，可以参考以下资源：
- en: '**Auditing –** **further resources**:'
  id: totrans-529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审计 –** **更多资源**：'
- en: 'Detecting Offensive PowerShell Attack Tools: [https://adsecurity.org/?p=2604](https://adsecurity.org/?p=2604)'
  id: totrans-530
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测攻击性 PowerShell 攻击工具：[https://adsecurity.org/?p=2604](https://adsecurity.org/?p=2604)
- en: 'Lee Holmes on downgrade attacks: [https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/](https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/)'
  id: totrans-531
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lee Holmes 关于降级攻击的文章：[https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/](https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/)
- en: 'Microsoft SCT: [https://www.microsoft.com/en-us/download/details.aspx?id=55319](https://www.microsoft.com/en-us/download/details.aspx?id=55319)'
  id: totrans-532
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft SCT：[https://www.microsoft.com/en-us/download/details.aspx?id=55319](https://www.microsoft.com/en-us/download/details.aspx?id=55319)
- en: 'PowerShell ♥ the Blue Team: [https://devblogs.microsoft.com/powershell/powershell-the-blue-team/](https://devblogs.microsoft.com/powershell/powershell-the-blue-team/)'
  id: totrans-533
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell ♥ 蓝队：[https://devblogs.microsoft.com/powershell/powershell-the-blue-team/](https://devblogs.microsoft.com/powershell/powershell-the-blue-team/)
- en: 'Windows 10 and Windows Server 2016 security auditing and monitoring reference:
    [https://www.microsoft.com/en-us/download/details.aspx?id=52630](https://www.microsoft.com/en-us/download/details.aspx?id=52630)'
  id: totrans-534
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 10 和 Windows Server 2016 安全审计和监控参考：[https://www.microsoft.com/en-us/download/details.aspx?id=52630](https://www.microsoft.com/en-us/download/details.aspx?id=52630)
- en: '*PowerShell post-exploitation, the Empire has fallen, You CAN detect PowerShell
    exploitation* by Michael Gough: [https://de.slideshare.net/Hackerhurricane/you-can-detect-powershell-attacks](https://de.slideshare.net/Hackerhurricane/you-can-detect-powershell-attacks)'
  id: totrans-535
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*PowerShell 后期利用，帝国已倒塌，你可以检测 PowerShell 利用*，作者：Michael Gough：[https://de.slideshare.net/Hackerhurricane/you-can-detect-powershell-attacks](https://de.slideshare.net/Hackerhurricane/you-can-detect-powershell-attacks)'
- en: '**EventList**:'
  id: totrans-536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EventList**：'
- en: 'GitHub: [https://github.com/miriamxyra/EventList](https://github.com/miriamxyra/EventList)'
  id: totrans-537
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub：[https://github.com/miriamxyra/EventList](https://github.com/miriamxyra/EventList)
- en: 'Black Hat presentation 2020 (version 2.0.0): [https://www.youtube.com/watch?v=3x5-nZ2bfbo](https://www.youtube.com/watch?v=3x5-nZ2bfbo)'
  id: totrans-538
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Black Hat 2020 演讲（版本 2.0.0）：[https://www.youtube.com/watch?v=3x5-nZ2bfbo](https://www.youtube.com/watch?v=3x5-nZ2bfbo)
- en: '**Helpful cmdlets** **and commands**:'
  id: totrans-539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有用的 cmdlet** **和命令**：'
- en: '**Limit-EventLog** documentation: https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/limit-eventlog?view=powershell-5.1'
  id: totrans-540
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Limit-EventLog** 文档：[https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/limit-eventlog?view=powershell-5.1](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/limit-eventlog?view=powershell-5.1)'
- en: '**Start-Transcript** documentation: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-7#parameters'
  id: totrans-541
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Start-Transcript** 文档：[https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-7#parameters](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.host/start-transcript?view=powershell-7#parameters)'
- en: '**wevtutil** documentation: https://docs.microsoft.com/de-de/windows-server/administration/windows-commands/wevtutil'
  id: totrans-542
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**wevtutil** 文档：[https://docs.microsoft.com/de-de/windows-server/administration/windows-commands/wevtutil](https://docs.microsoft.com/de-de/windows-server/administration/windows-commands/wevtutil)'
- en: '**Unprotect-CmsMessage**: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/unprotect-cmsmessage'
  id: totrans-543
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unprotect-CmsMessage**：[https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/unprotect-cmsmessage](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/unprotect-cmsmessage)'
- en: '**PowerShell Logging and** **event logs**:'
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PowerShell 日志记录和** **事件日志**：'
- en: 'RFC – CMS: https://www.rfc-editor.org/rfc/rfc5652'
  id: totrans-545
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RFC – CMS：[https://www.rfc-editor.org/rfc/rfc5652](https://www.rfc-editor.org/rfc/rfc5652)
- en: 'PowerShell Core Group Policy settings: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_group_policy_settings?view=powershell-7.1'
  id: totrans-546
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell Core 组策略设置：[https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_group_policy_settings?view=powershell-7.1](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_group_policy_settings?view=powershell-7.1)
- en: 'PowerShell logging on a non-Windows OS: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging_non-windows?view=powershell-7'
  id: totrans-547
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在非 Windows 操作系统上的 PowerShell 日志记录：[https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging_non-windows?view=powershell-7](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging_non-windows?view=powershell-7)
- en: 'About logging on a Windows OS: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging_windows?view=powershell-7.1'
  id: totrans-548
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 Windows 操作系统上的日志记录：[https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging_windows?view=powershell-7.1](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging_windows?view=powershell-7.1)
- en: 'About event logs (v 5.1): https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_eventlogs'
  id: totrans-549
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于事件日志（v 5.1）：[https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_eventlogs](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_eventlogs)
- en: 'You can also find all links mentioned in this chapter in the GitHub repository
    for *Chapter 4* – there’s no need to manually type in every link: https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Links.md.'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在本章的 GitHub 仓库中找到所有提到的链接，无需手动输入每个链接：[https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Links.md](https://github.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/blob/master/Chapter04/Links.md)
- en: 'Part 2: Digging Deeper – Identities, System Access, and Day-to-Day Security
    Tasks'
  id: totrans-551
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 2 部分：深入挖掘 – 身份、系统访问和日常安全任务
- en: Let’s dive deeper and combine PowerShell with other technologies. The technology
    section of this part mostly explores the ways that attackers can enumerate, bypass,
    hijack, and compromise key components such as the operating system itself, Active
    Directory, and Azure AD/Entra ID. On July 11, 2023 Microsoft renamed Azure AD
    to Entra ID. As this was just shortly announced before this book was released,
    we will refer to Entra ID just as Azure Active Directory, Azure AD, or AAD in
    this part. This part is not only of interest to red teamers but also to blue teamers
    who want to learn how adversaries are trying to abuse well-established solutions
    in order to protect themselves from such attacks. Additionally, you will get a
    lot of useful extra information about concepts, protocols, and mitigation, and
    many more interesting insights.
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨并将 PowerShell 与其他技术结合起来。本部分的技术章节主要探讨攻击者如何枚举、绕过、劫持和危及关键组件，如操作系统本身、Active
    Directory 以及 Azure AD/Entra ID。2023年7月11日，微软将 Azure AD 更名为 Entra ID。由于这一变化在本书发布前刚刚宣布，因此在本部分我们将仅称其为
    Azure Active Directory、Azure AD 或 AAD。本部分不仅对红队成员感兴趣，对蓝队成员同样重要，因为他们希望了解敌手如何试图滥用这些已建立的解决方案，以保护自己免受此类攻击。此外，你还将获得大量关于概念、协议、缓解措施以及更多有趣见解的实用信息。
- en: 'We’ll first explore PowerShell’s capabilities to access the system: we will
    not only look into working with the registry and WMI but we will also find out
    how you can leverage .NET, as well as native Windows APIs, and how you can compile
    and run custom DLLs and unmanaged code from PowerShell. Ever wondered how it is
    possible to run PowerShell without calling powershell.exe? Don’t worry – after
    working through this part, you will know.'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先探讨 PowerShell 访问系统的能力：我们不仅会研究如何使用注册表和 WMI，还会了解如何利用 .NET 以及原生 Windows API，以及如何从
    PowerShell 编译和运行自定义 DLL 和非托管代码。曾经想过如何在不调用 powershell.exe 的情况下运行 PowerShell 吗？别担心——通过本部分的学习，你将知道答案。
- en: In the Active Directory chapter, we will dive into enumeration – with or without
    the Active Directory PowerShell module – as well as into access rights, authentication
    protocols, credential theft, and mitigation tactics. We will also look into the
    recommended Microsoft security baselines and the Security Compliance Toolkit.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Active Directory 章节中，我们将深入探讨枚举——无论是否使用 Active Directory PowerShell 模块——以及访问权限、认证协议、凭证窃取和缓解策略。我们还将研究推荐的微软安全基线和安全合规工具包。
- en: When talking about Active Directory, Azure AD is not far away; therefore, we
    will also investigate this technology from a PowerShell security perspective.
    Azure AD security is not a broadly well-known topic, and in this chapter, you
    will learn how to differentiate between Active Directory and Azure AD and about
    fundamental Azure AD concepts. You will learn which accounts and roles make useful
    targets for attackers and how Azure AD can be enumerated. Last but not least,
    we will explore several credential theft techniques and also look into mitigating
    them.
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 说到 Active Directory，Azure AD 自然也在其中；因此，我们还将从 PowerShell 安全的角度来研究这项技术。Azure AD
    安全并不是一个广为人知的话题，在本章中，你将学习如何区分 Active Directory 和 Azure AD 以及 Azure AD 的基本概念。你将了解哪些帐户和角色是攻击者的有用目标，并且如何枚举
    Azure AD。最后，我们将探讨几种凭证窃取技术，并讨论如何进行缓解。
- en: In [*Chapter 8*](B16679_08_Final_PD.xhtml#_idTextAnchor204) and [*Chapter 9*](B16679_09_Final_PD.xhtml#_idTextAnchor228),
    this book also provides you with red and blue team cookbooks. Both parts first
    explore the common PowerShell tools for both intents and then provide many useful
    PowerShell code snippets that you can use for your own purposes – no matter whether
    you are a blue or red teamer.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第8章*](B16679_08_Final_PD.xhtml#_idTextAnchor204) 和 [*第9章*](B16679_09_Final_PD.xhtml#_idTextAnchor228)
    中，本书还为你提供了红队和蓝队的操作手册。两部分首先探讨了常见的 PowerShell 工具及其应用，然后提供了许多实用的 PowerShell 代码片段，你可以根据自己的需求使用这些片段——无论你是红队还是蓝队成员。
- en: 'This part has the following chapters:'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 5*](B16679_05_Final_PD.xhtml#_idTextAnchor110), *PowerShell Is Powerful
    – System and API Access*'
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B16679_05_Final_PD.xhtml#_idTextAnchor110)，*PowerShell 强大 – 系统和 API
    访问*'
- en: '[*Chapter 6*](B16679_06_Final_PD.xhtml#_idTextAnchor150), *Active Directory
    – Attacks and Mitigation*'
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B16679_06_Final_PD.xhtml#_idTextAnchor150)，*Active Directory – 攻击与缓解*'
- en: '[*Chapter 7*](B16679_07_Final_PD.xhtml#_idTextAnchor179), *Hacking the Cloud
    – Exploiting Azure Active Directory/Entra ID*'
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B16679_07_Final_PD.xhtml#_idTextAnchor179)，*黑客入侵云端 – 利用 Azure Active
    Directory/Entra ID*'
- en: '[*Chapter 8*](B16679_08_Final_PD.xhtml#_idTextAnchor204), *Red Team Tasks and
    Cookbook*'
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B16679_08_Final_PD.xhtml#_idTextAnchor204)，*红队任务与手册*'
- en: '[*Chapter 9*](B16679_09_Final_PD.xhtml#_idTextAnchor228), *Blue Team Tasks
    and Cookbook*'
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*](B16679_09_Final_PD.xhtml#_idTextAnchor228)，*蓝队任务与手册*'
