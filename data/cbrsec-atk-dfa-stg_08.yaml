- en: Privilege Escalation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特权升级
- en: The previous chapters have explained the process of performing an attack to
    a point where the attacker can compromise a system. The previous [Chapter 7](9871410e-395d-4fcf-afe0-04e82f7883d3.xhtml),
    *Lateral Movement,* discussed how an attacker can move around in the compromised
    system without being identified or raising any alarms. A general trend was observable,
    where legitimate tools were being used to avoid alerts. A similar trend may also
    be observed in this phase of the attack life cycle.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的章节已经解释了攻击过程，直到攻击者能够攻破一个系统为止。上一章[第7章](9871410e-395d-4fcf-afe0-04e82f7883d3.xhtml)，*横向移动*，讨论了攻击者如何在被攻破的系统中移动而不被发现或触发任何警报。可以观察到一个普遍趋势，即攻击者使用合法工具来避免警报。在攻击生命周期的这个阶段，也可能会观察到类似的趋势。
- en: In this chapter, close attention will be paid to how attackers heighten the
    privileges of the user accounts that they have compromised. The aim of an attacker
    at this stage is to have the required level of privileges to achieve a greater
    objective. It could be mass deletion, corruption, or theft of data, disabling
    of computers, destroying hardware, and so many other things. An attacker requires
    control over access systems so that he can succeed with all of his plans. Mostly,
    attackers seek to acquire admin-level privileges before they start the actual
    attack. Many system developers have been employing the least privilege rule, where
    they assign users the least amount of privileges that are needed to perform their
    jobs. Therefore, most accounts do not have sufficient rights that can be abused
    to access or make changes to some files. Hackers will normally compromise these
    low-privileged accounts and, thus, have to upgrade them to higher privileges in
    order to access files or make changes to a system.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将重点讲解攻击者如何提升他们已入侵的用户账户的特权。在这个阶段，攻击者的目标是获取所需的特权级别，以实现更大的目标。可能的目标包括大规模删除、损坏或窃取数据、禁用计算机、破坏硬件等。攻击者需要控制访问系统，以便成功实施他们的所有计划。大多数攻击者在开始实际攻击之前，都会力图获得管理员级别的特权。许多系统开发人员已经实施了最小特权原则，即为用户分配执行工作所需的最少特权。因此，大多数账户没有足够的权限来滥用或更改某些文件。黑客通常会入侵这些低特权账户，因此他们需要将其升级为更高的特权账户，才能访问文件或更改系统。
- en: 'This chapter will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Infiltration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渗透
- en: Avoiding alerts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免警报
- en: Performing privilege escalation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行特权升级
- en: Conclusion
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结论
- en: Infiltration
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 渗透
- en: 'Privilege escalation normally occurs deep into an attack. This means that the
    attacker will have already done reconnaissance and successfully compromised a
    system, thereby gaining entry. After this, the attacker will have traversed the
    compromised system through lateral movement and identified all the systems and
    devices of interest. In this phase, the attacker wants to have a strong grip on
    the system. The attacker may have compromised a low-level account and will, therefore,
    be looking for an account with higher privileges, in order to study the system
    further or get ready to give the final blow. Privilege escalation is not a simple
    phase, as it will at times require the attacker to use a combination of skills
    and tools in order to heighten the privileges. There are generally two classifications
    of privilege escalation: horizontal and vertical privilege escalation.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 特权升级通常发生在攻击的深层阶段。这意味着攻击者已经完成了侦察并成功攻破了一个系统，从而获得了进入权限。之后，攻击者会通过横向移动在被攻破的系统中穿行，识别出所有感兴趣的系统和设备。在这个阶段，攻击者希望牢牢控制系统。攻击者可能已经入侵了一个低级账户，因此，他们会寻找具有更高特权的账户，以便进一步研究系统或为最终攻击做好准备。特权升级并不是一个简单的阶段，因为有时它会要求攻击者使用一系列技能和工具来提升特权。特权升级通常分为两类：横向特权升级和纵向特权升级。
- en: Horizontal privilege escalation
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 横向特权升级
- en: In horizontal privilege escalation, the attacker uses a normal account to access
    the accounts of other users. It is a simple process since the attacker does not
    actively seek to upgrade the privileges of an account, they are granted to him.
    Therefore, no tools are used to upgrade the accounts in this type of privilege
    escalation. There are two main ways through which a horizontal privilege escalation
    can occur. The first one is through software bugs, whereby a normal user is able
    to view and access files of other users due to an error in the coding of a system.
    As can be seen, no tools have been used and yet an attacker is able to access
    files that should have otherwise been protected from the eyes of normal users.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在水平权限升级中，攻击者使用一个普通账户访问其他用户的账户。这是一个简单的过程，因为攻击者并不主动寻求提升账户的权限，而是这些权限被授予给他。因此，在这种类型的权限升级中，攻击者不需要使用工具来提升账户权限。水平权限升级有两种主要方式。第一种是通过软件漏洞，在这种情况下，由于系统编码的错误，普通用户能够查看和访问其他用户的文件。如同所见，攻击者没有使用任何工具，但却能够访问那些本应受到普通用户保护的文件。
- en: Another instance is that wherein the attacker is lucky to compromise an administrator's
    account. In this scenario, there will be no need to use hacking tools and techniques
    to escalate the privileges of the account that the user has hacked. Already adorned
    with the admin-level privileges, attackers can go on with the attack by creating
    other admin-level users or just use the already hacked account to execute the
    attack. Horizontal privilege escalation attacks are normally facilitated by tools
    and techniques that steal login credentials at the phase where hackers compromise
    a system. A number of tools were discussed in the chapter on compromising the
    system, where it was shown that a hacker can recover passwords, steal them from
    users, or crack directly into accounts. In fortunate scenarios for the hacker,
    the user accounts compromised will belong to users with high-level privileges.
    Therefore, they will not have to face any hardships of having to upgrade an account.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种情况是，攻击者侥幸攻破了管理员账户。在这种情况下，攻击者无需使用黑客工具和技术来提升被攻破账户的权限。因为该账户已经拥有管理员级别的权限，攻击者可以通过创建其他管理员级用户或直接使用已经攻破的账户来继续进行攻击。水平权限升级攻击通常通过在黑客攻破系统时窃取登录凭证的工具和技术来实现。在关于系统入侵的章节中，讨论了多种工具，展示了黑客如何恢复密码、从用户那里窃取密码或直接破解账户。在对黑客来说较为幸运的情况下，被攻破的用户账户属于具有高级权限的用户。因此，他们无需经历升级账户的困难。
- en: Vertical privilege escalation
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 垂直权限升级
- en: The other type of privilege escalation is vertical privilege escalation. It
    consists of more demanding privilege escalation techniques and includes the use
    of hacking tools. It is complex, but not impossible, since an attacker is forced
    to perform admin-or kernel-level operations in order to elevate access rights
    illegally. Vertical rights escalation is more difficult but it is also more rewarding
    since the attacker can acquire system rights on a system. A system user has more
    rights than an administrator and, therefore, can do more damage. The attacker
    also has a higher chance of staying and performing actions on a network system
    whilst remaining undetected. With superuser access rights, an attacker can perform
    actions that the administrator cannot stop or interfere with. Vertical escalation
    techniques differ from system to system. In Windows, a common practice is to cause
    a buffer overflow to achieve vertical privilege escalation. This has already been
    witnessed in a tool called EternalBlue which is alleged to be one of the hacking
    tools in the possession of the NSA. The tool has however been made public by a
    hacking group called the Shadow Brokers.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种权限升级类型是垂直权限升级。它包含了更为复杂的权限升级技术，并包括使用黑客工具。尽管这种方法复杂，但并非不可能，因为攻击者需要执行管理员级别或内核级别的操作，才能非法提升访问权限。垂直权限升级虽然更加困难，但也更具回报，因为攻击者可以在系统中获得系统权限。一个系统用户拥有比管理员更多的权限，因此能够造成更大的破坏。攻击者也更有可能在保持未被检测到的情况下，长期驻留并在网络系统中执行操作。拥有超级用户权限后，攻击者可以执行管理员无法阻止或干预的操作。垂直权限升级的技术因系统而异。在Windows中，一种常见的做法是通过缓冲区溢出来实现垂直权限升级。这已经在一个名为EternalBlue的工具中得到验证，该工具据称是NSA拥有的黑客工具之一。不过，该工具已经被一个名为Shadow
    Brokers的黑客组织公开。
- en: On Linux, vertical escalation is done by allowing attackers to have root privileges
    that enable them to modify systems and programs. On Mac, vertical escalation is
    done in a process called **jailbreaking**, allowing the hackers to perform previously
    disallowed operations. These are operations that manufacturers restrict users
    from so as to protect the integrity of their devices and operating systems. Vertical
    escalation is also done on web-based tools. This is normally through the exploitation
    of the code used in the backend. At times, system developers unknowingly leave
    channels that can be exploited by hackers, especially during the submission of
    forms.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中，垂直权限提升是通过允许攻击者获得root权限来修改系统和程序。在Mac中，垂直权限提升是通过称为**越狱**的过程完成的，允许黑客执行之前不被允许的操作。这些操作是制造商限制用户执行的，目的是保护设备和操作系统的完整性。垂直权限提升也可以在基于Web的工具上进行。通常是通过利用后端代码中的漏洞。有时，系统开发人员在不知情的情况下留下了可以被黑客利用的渠道，尤其是在提交表单时。
- en: Avoiding alerts
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 避免警报
- en: Just like in the preceding phases, it is in the interests of the hacker to avoid
    raising any alarms that the victim system has been compromised. Detection, especially
    at this phase, would be costly, as it would mean that all the efforts that an
    attacker had made will have been for nothing. Therefore, before the attacker performs
    this phase, it is normal to disable security systems if possible. The methods
    of privilege escalation are also quite sophisticated. Most of the time, the attacker
    will have to create files with malicious instructions, rather than use a tool
    to execute malicious actions against the system.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在前面的阶段一样，黑客的目标是避免引发任何警报，表明受害系统已被入侵。尤其是在这个阶段，检测会非常昂贵，因为这意味着攻击者所做的所有努力都会付诸东流。因此，在进行此阶段之前，黑客通常会先禁用安全系统（如果可能）。权限提升的方法也相当复杂。大多数时候，攻击者必须创建包含恶意指令的文件，而不是使用工具对系统执行恶意操作。
- en: Most systems will be coded only to allow privileges to legitimate services and
    processes. Therefore, attackers will try to compromise these services and processes
    in order to be given the benefit of executing with heightened privileges. It is
    challenging for hackers to use brute force to get admin privileges and therefore
    they often opt to use the path of least resistance. If it means creating files
    identical to the ones a system recognizes to be legitimate, they will do so.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数系统的编码仅允许合法的服务和进程获得特权。因此，攻击者会尝试危害这些服务和进程，以便获得执行更高权限的机会。黑客使用暴力破解方式获得管理员权限是有挑战的，因此他们通常选择最小阻力路径。如果这意味着创建与系统认定为合法的文件相同的文件，他们也会这么做。
- en: Another way to avoid alerts is by using legitimate tools to perform the attack.
    As mentioned in previous chapters, the use of PowerShell as a hacking tool is
    growing because of its power, and also because many systems will not raise alerts
    since this is a valid, built-in OS tool.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 避免警报的另一种方法是使用合法工具来执行攻击。如前几章所提到的，由于其强大功能，PowerShell作为黑客工具的使用正在增加，而且许多系统不会触发警报，因为这是一个有效的、内置的操作系统工具。
- en: Performing privilege escalation
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行权限提升
- en: Privilege escalation can be done in a number of ways, depending on the level
    of skill that the hacker has and the intended outcome of the privilege escalation
    process. In Windows, administrator access should be rare and normal users should
    not have administrative access to systems. However, sometimes it becomes necessary
    to give remote users admin access to enable them to troubleshoot and solve some
    issues. This is something that system administrators should be worried about.
    When giving remote users admin access, admins should be cautious enough to ensure
    that this type of access is not used for privilege escalation. There are risks
    when normal employees in an organization maintain admin access. They open a network
    to multiple attack vectors.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 权限提升可以通过多种方式完成，具体取决于黑客的技能水平和权限提升过程的预期结果。在Windows中，管理员访问权限应该很少，普通用户不应拥有系统的管理员访问权限。然而，有时为了让远程用户能够进行故障排除并解决一些问题，给予他们管理员访问权限是必要的。这是系统管理员需要关注的事情。给予远程用户管理员访问权限时，管理员应谨慎确保这种权限不会被用来进行权限提升。当组织中的普通员工拥有管理员权限时，存在一定的风险，他们可能会为网络打开多个攻击路径。
- en: To begin with, malicious users can also use this access level to extract password
    hashes that can, later on, be used to recover the actual passwords or be used
    directly in remote attacks through pass-the-hash. This has already been exhaustively
    discussed in [Chapter 7](9871410e-395d-4fcf-afe0-04e82f7883d3.xhtml), *Lateral
    Movement*. Another threat is that they can use their systems for packet capturing.
    They can also install software which might turn out to be malicious. Lastly, they
    can interfere with the registry. Therefore, it is assumed that it is bad for users
    to be given admin access.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，恶意用户也可以利用这一访问权限提取密码哈希值，之后可以用来恢复实际密码，或通过“传递哈希”直接在远程攻击中使用。这在[第七章](9871410e-395d-4fcf-afe0-04e82f7883d3.xhtml)中已经有过详尽的讨论，*横向移动*。另一个威胁是他们可以利用自己的系统进行数据包捕获。他们还可以安装可能是恶意的软件。最后，他们还可能干扰注册表。因此，假设将管理员权限赋予用户是不好的。
- en: Since admin access is a closely guarded privilege, attackers will mostly have
    to fight their way into getting the access using a number of tools and techniques.
    Apple computers have a somewhat more reliable operating system when it comes to
    security. However, there are a number of ways that attackers have discovered that
    can be used to perform privilege escalation in OS X.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 由于管理员权限是严格保护的特权，攻击者通常需要使用多种工具和技术才能获得这一权限。苹果电脑在安全性方面有着相对更可靠的操作系统。然而，攻击者已发现多种方法可以在OS
    X中进行权限提升。
- en: The following are some of the commonly used privilege escalation methods.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些常见的权限提升方法。
- en: Exploiting unpatched operating systems
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用未打补丁的操作系统
- en: Windows, like many operating systems, keeps tabs on ways through which hackers
    can compromise it. It keeps on releasing patches to fix those avenues. However,
    some network administrators fail to install these patches in time. Some administrators
    forgo patching altogether. Therefore, there is a highly likely chance that an
    attacker will find machines that are unpatched. Hackers use scanning tools to
    find out information about the devices in a network and to identify the ones that
    are not patched. The tools that can be used for this have been discussed in the
    reconnaissance chapter; two of the most commonly used are Nessus and Nmap. After
    identifying the unpatched machines, hackers can search for exploits from Kali
    Linux that can be used to exploit them. Searchsploit will contain the corresponding
    exploits that can be used against unpatched computers. Once the exploits are found,
    the attacker will compromise the system. The attacker will then use a tool called
    PowerUp to bypass Windows privilege management and upgrade the user on the vulnerable
    machine to an admin.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 和许多操作系统一样，Windows会监控黑客可能利用的漏洞，并不断发布补丁来修复这些漏洞。然而，一些网络管理员未能及时安装这些补丁，有的管理员甚至完全忽视了补丁更新。因此，攻击者很可能会找到没有打补丁的机器。黑客使用扫描工具来获取网络中设备的信息，识别出那些没有打补丁的设备。可以用来扫描的工具在侦察章节中已有讨论，其中最常用的两个工具是Nessus和Nmap。识别出没有打补丁的机器后，黑客可以在Kali
    Linux中查找可以利用的漏洞。Searchsploit会包含可用于未打补丁计算机的相应漏洞。一旦找到漏洞，攻击者将入侵系统。攻击者随后会使用名为PowerUp的工具绕过Windows权限管理，将脆弱机器上的用户权限提升为管理员。
- en: 'If the attacker wants to avoid using scanning tools to verify the current system
    state, including patches, it is possible to use a WMI command-line tool called
    `wmic` to retrieve the list of updates installed, as shown as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击者想避免使用扫描工具来验证当前系统状态（包括补丁），可以使用名为`wmic`的WMI命令行工具来获取已安装的更新列表，如下所示：
- en: '![](assets/3cd04d02-332e-43fd-8dbf-ae76af38eed1.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3cd04d02-332e-43fd-8dbf-ae76af38eed1.png)'
- en: 'Another option is to use the PowerShell command `get-hotix`:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是使用PowerShell命令`get-hotix`：
- en: '![](assets/3bdf5e8a-5d71-4885-99dd-f4b1af3b8813.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3bdf5e8a-5d71-4885-99dd-f4b1af3b8813.png)'
- en: Access token manipulation
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问令牌操控
- en: In Windows, all processes are started by a certain user and the system knows
    the rights and privileges that the user has. Windows normally makes use of access
    tokens to determine the owners of all running processes. This technique of privilege
    escalation is used to make processes appear as if they were started by a different
    user than the one that actually started them. The way that Windows manages admin
    privileges is exploited. The operating system logs in admin users as normal users,
    but then executes their processes with admin privileges. Windows uses the `run
    as administrator` command to execute processes with the privileges of an administrator.
    Therefore, if an attacker can fool the system into believing that processes are
    being started by an admin, the processes will run without interference with full-level
    admin privileges.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows中，所有进程都是由某个用户启动的，系统知道该用户的权限和特权。Windows通常使用访问令牌来确定所有正在运行的进程的所有者。这种特权提升技术被用来让进程看起来像是由与实际启动者不同的用户启动的。Windows管理管理员权限的方式被利用了。操作系统将管理员用户登录为普通用户，但随后以管理员权限执行他们的进程。Windows使用`以管理员身份运行`命令，以管理员权限执行进程。因此，如果攻击者能够欺骗系统，使其相信进程是由管理员启动的，这些进程将不受干扰地以完全的管理员权限运行。
- en: Access token manipulation occurs when attackers cleverly copy access tokens
    from existing processes using built-in Windows API functions. They specifically
    target the processes that are started by admin users in a machine. When they paste
    an admin's access tokens to Windows as it starts a new process, it will execute
    the processes with admin privileges. Access token manipulation can also occur
    when hackers know an admin's credentials. These can be stolen in different types
    of attacks and then used for access token manipulation. Windows has an option
    of running an application as an administrator. To do this, Windows will request
    for a user to enter admin login credentials, so as to start a program/process
    with admin privileges.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 访问令牌操控发生在攻击者巧妙地使用Windows内建的API函数从现有进程中复制访问令牌时。它们专门针对由管理员用户启动的进程。当攻击者将管理员的访问令牌粘贴到Windows中，并启动一个新进程时，该进程将以管理员权限执行。访问令牌操控也可以发生在黑客知道管理员凭证的情况下。这些凭证可以通过不同类型的攻击窃取，然后用于访问令牌操控。Windows提供了以管理员身份运行应用程序的选项。为了实现这一点，Windows会要求用户输入管理员登录凭证，以便以管理员权限启动程序/进程。
- en: Lastly, access token manipulation can also occur when an attacker uses stolen
    tokens to authenticate remote system processes provided that the tokens stolen
    have the appropriate permissions on the remote system.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，访问令牌操控也可能发生，当攻击者使用窃取的令牌来验证远程系统进程时，只要被窃取的令牌在远程系统上具有相应的权限。
- en: Access token manipulation is highly used in Metasploit, a hacking and penetration
    testing tool that was discussed in [Chapter 5](d07abf73-093e-4004-b690-1aa70db11902.xhtml),
    *Compromising the System*. Metasploit has a Meterpreter payload that can perform
    token stealing and use the stolen tokens to run processes with escalated privileges.
    Metasploit also has a payload called *The Cobalt Strike* that also takes advantage
    of token stealing. The payload is able to steal and create its own tokens, which
    have admin privileges. The bottom line in this type of privilege escalation method
    is that there is an observable trend where attackers take advantage of an otherwise
    legitimate system. It could be said to be a form of defensive evasion on the side
    of an attacker.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 访问令牌操控在Metasploit中得到了广泛应用，Metasploit是一个黑客和渗透测试工具，在[第5章](d07abf73-093e-4004-b690-1aa70db11902.xhtml)《破坏系统》中有详细讨论。Metasploit具有一个Meterpreter有效载荷，可以执行令牌窃取，并使用被窃取的令牌以提升的权限运行进程。Metasploit还有一个名为*The
    Cobalt Strike*的有效载荷，同样利用令牌窃取。该有效载荷能够窃取并创建自己的令牌，并且这些令牌具有管理员权限。该类型的特权提升方法的底线是，攻击者利用一个原本合法的系统。从某种意义上说，这可以视为攻击者的防御回避手段。
- en: Exploiting accessibility features
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用可访问性功能
- en: Windows has several accessibility features that are supposed to help users to
    interact better with the OS and more attention is given to users that may have
    visual impairments. These features include; the magnifier, screen keyboard, display
    switch, and narrator. These features are conveniently placed on the Windows login
    screen so that they can be supportive to the user from the instant that he/she
    logs in. However, attackers can manipulate these features to create a backdoor
    through which they can log into the system without authentication. It is quite
    an easy process and can be executed in a matter of minutes. An attacker will be
    required to have compromised a Windows computer using a Linux LiveCD. This tool
    will allow the attacker to boot the computer with a temporary Linux Desktop OS.
    Once in the machine, the drive containing the Windows OS will be visible and editable.
    All these accessibility features are stored as executables in the `System32` folder.
    Therefore, a hacker will go and delete one or more of these and replace them with
    a command prompt or a backdoor. Once the replacement is done and the hacker has
    logged out, all will seem normal when the Windows OS is started. However, an attacker
    will have a walk-around to bypass the login prompt. When the OS displays the password
    prompt, the attacker can simply click on any of the accessibility features and
    launch the command prompt.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Windows有多个辅助功能，旨在帮助用户更好地与操作系统互动，特别是关注有视觉障碍的用户。这些功能包括：放大镜、屏幕键盘、显示切换和旁白。这些功能被方便地放置在Windows登录屏幕上，以便用户在登录的瞬间就能得到支持。然而，攻击者可以操纵这些功能，通过创建一个后门来绕过身份验证登录系统。这是一个相对简单的过程，并且可以在几分钟内完成。攻击者需要先通过Linux
    LiveCD攻破一台Windows计算机。这个工具将允许攻击者用临时的Linux桌面操作系统启动计算机。一旦进入计算机，包含Windows操作系统的驱动器将变得可见且可编辑。所有这些辅助功能都作为可执行文件存储在`System32`文件夹中。因此，黑客将删除其中一个或多个功能，并用命令提示符或后门替换它们。一旦替换完成，黑客退出后，当Windows操作系统启动时，一切看起来都会正常。然而，攻击者将有一种绕过登录提示的方法。当操作系统显示密码提示时，攻击者只需点击任何一个辅助功能并启动命令提示符。
- en: The command prompt that will display will be executing with system access, which
    is the highest level of privilege for a Windows machine. The attacker can use
    the command prompt to achieve other tasks. It can open browsers, install programs,
    create new users with privileges, and even install backdoors. An even more unique
    thing that an attacker can do is to launch the Windows Explorer by supplying the
    command `explorer.exe` into the command prompt. Windows Explorer will open on
    the computer that the attacker has not even logged into and it will open as a
    system user. This means that the attacker has exclusive rights to do whatever
    he pleases on the machine, without being requested to log in as an administrator.
    This method of privilege escalation is very effective, but it requires the attacker
    to have physical access to the target computer. Therefore, it is mostly done by
    insider threats or malicious actors that enter into an organization's premises
    through social engineering.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 将显示的命令提示符将以系统访问权限执行，这是Windows机器上最高级别的权限。攻击者可以使用命令提示符执行其他任务。它可以打开浏览器、安装程序、创建具有权限的新用户，甚至安装后门。攻击者还可以做的一件更独特的事情是，通过在命令提示符中输入命令`explorer.exe`来启动Windows资源管理器。Windows资源管理器将会在攻击者甚至没有登录的计算机上打开，并以系统用户身份打开。这意味着攻击者可以在机器上自由操作，无需作为管理员登录。这种特权提升的方法非常有效，但它要求攻击者必须具有物理访问目标计算机的权限。因此，这通常由内部威胁或通过社会工程学进入组织的恶意行为者执行。
- en: Application shimming
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序修补
- en: 'Application shimming is a Windows Application Compatibility framework that
    Windows created to allow programs to run on versions of the OS that they were
    not initially created to run on. Most applications that used to run on Windows
    XP can today run on Windows 10 due to this framework. The operation of the framework
    is quite simple: it creates a shim to buffer between a legacy program and the
    operating system. During execution of programs, the shim cache is referenced to
    find out whether they will need to use the shim database. If so, the shim database
    will use an API to ensure that the program''s codes are redirected effectively,
    so as to communicate with the OS. Since shims are in direct communication with
    the OS, Windows decided to add a safety feature where they are designed to run
    in user mode.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 应用修复程序是 Windows 应用兼容性框架的一部分，该框架是 Windows 为了允许程序在它们最初未被设计运行的操作系统版本上运行而创建的。大多数曾经在
    Windows XP 上运行的应用程序如今可以在 Windows 10 上运行，正是因为有了这个框架。该框架的工作原理非常简单：它创建一个修复程序，作为遗留程序与操作系统之间的缓冲层。在程序执行过程中，修复程序缓存会被引用，以了解是否需要使用修复程序数据库。如果需要，修复程序数据库将使用
    API 来确保程序的代码被有效地重定向，从而与操作系统进行通信。由于修复程序直接与操作系统进行通信，Windows 决定增加一项安全功能，即它们被设计为在用户模式下运行。
- en: Without admin privileges, the shims cannot modify the kernel. However, attackers
    have been able to create custom shims that can bypass user account control, inject
    DLLs into running processes, and meddle with memory addresses. These shims can
    enable an attacker to run their own malicious programs with elevated privileges.
    They can also be used to turn off security software, especially the Windows Defender.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有管理员权限的情况下，修复程序无法修改内核。然而，攻击者已能够创建自定义修复程序，绕过用户帐户控制，将DLL注入正在运行的进程，并干扰内存地址。这些修复程序可以使攻击者以提升的权限运行他们自己的恶意程序。它们还可以用来关闭安全软件，特别是
    Windows Defender。
- en: 'The following diagram illustrates the use of a custom shim against a new version
    of the Windows OS:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了针对新版 Windows 操作系统使用自定义修复程序的示例：
- en: '![](assets/66661c7d-9da7-422f-83ea-b30b512ca0f9.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/66661c7d-9da7-422f-83ea-b30b512ca0f9.png)'
- en: It is good to look at an example of how a shim is created. First, you need to
    start the Compatibility Administrator from the Microsoft Application Compatibility
    Toolkit.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 查看一个修复程序如何创建的例子是很有帮助的。首先，你需要从 Microsoft 应用兼容性工具包中启动兼容性管理员。
- en: 'This following figure shows Microsoft''s application compatibility toolkit
    (12)^:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了 Microsoft 的应用兼容性工具包（12）^：
- en: '![](assets/6762f948-2c0a-4ace-8560-77845b96e969.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6762f948-2c0a-4ace-8560-77845b96e969.png)'
- en: Next, you have to create a new database in Custom Databases by right-clicking
    on the New Database(1) option and selecting to create a new application fix.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要在“自定义数据库”中创建一个新数据库，方法是右键点击“新建数据库”（1）选项并选择创建一个新的应用修复程序。
- en: 'The following figure shows the process of creating a new application fix (12):'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了创建新应用修复程序的过程（12）：
- en: '![](assets/e1fd731b-099f-4598-a5d0-9fadecfabf63.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e1fd731b-099f-4598-a5d0-9fadecfabf63.png)'
- en: 'The next step is to give details of the particular program you want to create
    a shim for:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是提供你想为其创建修复程序的特定程序的详细信息：
- en: '![](assets/f4c20cbb-6c29-4914-a8ba-0c3ee3e681e6.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f4c20cbb-6c29-4914-a8ba-0c3ee3e681e6.png)'
- en: 'Next, you have to select the version of Windows that the shim is being created
    for. After selecting the Windows version, a number of compatibility fixes will
    be shown for the particular program. You are at liberty to choose the fixes that
    you want:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要选择修复程序所要创建的 Windows 版本。在选择了 Windows 版本后，会显示针对该特定程序的多个兼容性修复。你可以自由选择你需要的修复：
- en: '![](assets/879a9a1b-ab3a-4bf1-8820-880cef44e705.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/879a9a1b-ab3a-4bf1-8820-880cef44e705.png)'
- en: 'After clicking on Next, all the fixes you''ve chosen will be shown and you
    can click on Finish to end the process. The shim will be stored in the new database.
    To apply it, you need to right-click on the new database and click on install.
    Once this is done, the program will be run with all the compatibility fixes you''ve
    selected in your shim:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“下一步”后，你选择的所有修复将显示出来，你可以点击“完成”来结束此过程。修复程序将被存储在新数据库中。要应用它，你需要右键单击新数据库并点击“安装”。完成后，程序将按照你在修复程序中选择的所有兼容性修复来运行：
- en: '![](assets/400bac80-f100-462b-b564-1408d2ee2d7b.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/400bac80-f100-462b-b564-1408d2ee2d7b.jpg)'
- en: Bypassing user account control
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绕过用户帐户控制
- en: Windows has a well-structured mechanism for controlling the privileges of all
    users in a network and on the local machine. It has a Windows User Account Control (**UAC**)
    feature that acts as a gate between normal users and admin level users. The Windows
    UAC feature is used to give permissions to the program, to elevate their privileges,
    and to run with admin-level privileges. Therefore, Windows always prompts users
    to permit programs that want to execute with this level of access. It is also
    notable that only admin users can allow programs to run with these privileges.
    Therefore, a normal user will be denied permission to allow a program to execute
    a program with admin privileges.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Windows有一个结构良好的机制，用于控制网络中和本地计算机上所有用户的权限。它具有Windows用户帐户控制（**UAC**）功能，充当普通用户和管理员级用户之间的网关。Windows的UAC功能用于授予程序权限，提升其权限，并以管理员权限运行。因此，Windows总是提示用户允许程序以这种访问级别执行。值得注意的是，只有管理员用户才能允许程序以这些权限运行。因此，普通用户将被拒绝允许程序以管理员权限执行。
- en: This looks like a failure-proof mechanism, whereby only administrators can allow
    programs to run with heightened privileges since they can easily tell the malicious
    programs from the genuine ones. However, there are some gaps in this mechanism
    of securing the system. Some Windows programs are allowed to elevate privileges
    or execute COM objects that are elevated without prompting a user first.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来像是一个无懈可击的机制，只有管理员才能允许程序以提升的权限运行，因为他们可以轻松分辨出恶意程序和正常程序。然而，这个保护系统的机制中还是有一些漏洞。某些Windows程序允许提升权限或执行没有提示用户的COM对象。
- en: For instance, `rundl32.exe` is used to load a custom DLL that loads a COM object
    that has elevated privileges. This performs file operations even in protected
    directories that would normally require a user to have elevated access. This opens
    the UAC mechanism to compromise from knowledgeable attackers. The same processes
    used to allow Windows programs to run unauthenticated can allow malicious software
    to run with admin access in the same way. Attackers can inject a malicious process
    into a trusted process and thereby gain the advantage of running the malicious
    processes with admin privileges without having to prompt a user.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`rundl32.exe`用于加载一个自定义DLL，该DLL加载一个具有提升权限的COM对象。它执行文件操作，即使是在通常需要用户拥有提升权限的受保护目录中。这样就为了解UAC机制并进行破坏的攻击者提供了机会。用于允许Windows程序无认证地运行的相同过程，也可以允许恶意软件以管理员权限运行。攻击者可以将恶意进程注入到一个受信任的进程中，从而获得以管理员权限运行恶意进程的优势，而不需要提示用户。
- en: There are other ways that black hats have discovered that can be used to bypass
    UAC. There have been many methods published on GitHub that can potentially be
    used against UAC. One of these is `eventvwr.exe`, which can be compromised since
    it is normally auto-elevated when it runs and can, therefore, be injected with
    specific binary codes or scripts. Another approach to defeating the UAC is simply
    through the theft of admin credentials. The UAC mechanism is said to be a single
    security system and, therefore, the privileges of a process running on one computer
    remain unknown to lateral systems. Therefore, it is hard to nab attackers misusing
    the admin credentials to start processes with high-level privileges.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 黑帽黑客发现了其他方法可以绕过UAC（用户帐户控制）。GitHub上发布了许多可能被用来对付UAC的方法。其中之一是`eventvwr.exe`，由于它通常在运行时会自动提升权限，因此可以被注入特定的二进制代码或脚本，从而受到攻击。另一种绕过UAC的方法是直接窃取管理员凭证。UAC机制被认为是一个单一的安全系统，因此，一个计算机上运行的进程的权限对横向系统是未知的。因此，利用管理员凭证启动具有高级权限的进程的攻击者很难被抓到。
- en: To bypass UAC in Windows 7, you can also use the `uacscript`, which you can
    download from [https://github.com/Vozzie/uacscript](https://github.com/Vozzie/uacscript).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了绕过Windows 7中的UAC，你还可以使用`uacscript`，可以从[https://github.com/Vozzie/uacscript](https://github.com/Vozzie/uacscript)下载。
- en: DLL injection
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DLL注入
- en: DLL injection is another privilege escalation method that attackers are using.
    It also involves the compromising of legitimate processes and services of the
    Windows operating system. DLL injection is used to run malicious code using the
    context of a legitimate process. By using the context of a process recognized
    to be legitimate, an attacker gains several advantages, especially the ability
    to access the processes memory and permissions. The attacker's actions are also
    masked by the legitimate processes. There has recently been a discovery of a rather
    sophisticated DLL injection technique called **reflective DLL injection** (13).
    It is more effective since it loads the malicious code without having to make
    the usual Windows API calls and therefore bypassing DLL load monitoring (13).
    It uses a clever process of loading a malicious library from the memory onto a
    running process. Instead of following the normal DLL injection process of loading
    a malicious DLL code from a path, a process that not only creates an external
    dependency and degrades the stealth of an attack, reflective DLL injection sources
    its malicious code in the form of raw data. It is more difficult to detect, even
    on machines that are adequately protected by security software. DLL injection
    attacks have been used by attackers to modify the Windows Registry, create threads
    and to do DLL loading. These are all actions that require admin privileges, but
    attackers sneak their way into doing them without such privileges.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: DLL 注入是攻击者使用的另一种特权提升方法。它还涉及到对 Windows 操作系统中合法进程和服务的危害。DLL 注入用于在合法进程的上下文中运行恶意代码。通过利用被认为是合法的进程上下文，攻击者获得了多个优势，尤其是能够访问进程的内存和权限。攻击者的行为也被合法进程所掩盖。最近发现了一种相当复杂的
    DLL 注入技术，称为 **反射 DLL 注入**（13）。它更有效，因为它在不进行常规 Windows API 调用的情况下加载恶意代码，从而绕过 DLL
    加载监控（13）。它使用一种巧妙的过程，将恶意库从内存加载到正在运行的进程中。与常规 DLL 注入过程不同，反射 DLL 注入没有从路径加载恶意 DLL 代码，这一过程不仅会创建外部依赖，还会降低攻击的隐蔽性，而反射
    DLL 注入则将恶意代码以原始数据的形式来源。这种方法更难被检测到，即使在受到适当保护的安全软件的计算机上也一样。攻击者利用 DLL 注入攻击修改 Windows
    注册表、创建线程以及进行 DLL 加载等操作。这些都是需要管理员权限的行为，但攻击者通过绕过这些权限悄悄执行。
- en: 'The following diagram is a short illustration of how DLL injections work:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示简要说明了 DLL 注入的工作原理：
- en: '![](assets/51cafabe-4537-464d-a858-c4155d2e6e2c.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/51cafabe-4537-464d-a858-c4155d2e6e2c.png)'
- en: 'It is important to keep in mind that DLL injection is not only used for privilege
    escalation. Here are some examples of malware that use the DLL injection technique
    to either compromise a system or propagate to others:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的是，DLL 注入不仅仅用于特权提升。以下是一些使用 DLL 注入技术的恶意软件示例，它们要么危害系统，要么传播到其他系统：
- en: '**Backdoor.Oldrea**: injects itself in the `explore.exe` process'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Backdoor.Oldrea**：将自身注入到 `explore.exe` 进程中'
- en: '**BlackEnergy**: injects as a DLL into the `svchost.exe` process'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BlackEnergy**：作为 DLL 注入到 `svchost.exe` 进程中'
- en: '**Duqu**: injects itself in many processes to avoid detection'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Duqu**：将自身注入到多个进程中以避免被检测'
- en: DLL search order hijacking
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DLL 搜索顺序劫持
- en: DLL search order hijacking is another technique used to compromise DLLs and
    allow attackers to escalate their privileges, so as to progress with an attack.
    In this technique, attackers try to replace legitimate DLLs with malicious ones.
    Since the locations where programs store their DLLs can easily be identified,
    attackers may place malicious DLLs high up in the path traversed to find the legitimate
    DLL. Therefore, when Windows searches for a certain DLL in its normal location,
    it will find a DLL file with the same name but it will not be the legitimate DLL.
    Often, this type of attack occurs to programs that store DLLs in remote locations,
    such as in web shares. The DLLs are therefore more exposed to attackers and they
    no longer need physically to get to a computer so as to compromise files on hard
    drives.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: DLL 搜索顺序劫持是另一种技术，用于危害 DLL 并允许攻击者提升其权限，从而推动攻击的进行。在这一技术中，攻击者试图将合法 DLL 替换为恶意 DLL。由于程序存储
    DLL 的位置容易被识别，攻击者可能会将恶意 DLL 放置在搜索路径中的前面位置。因此，当 Windows 在正常位置搜索某个 DLL 时，它会找到一个具有相同名称的
    DLL 文件，但它并非合法的 DLL。通常，这种类型的攻击发生在将 DLL 存储在远程位置的程序中，例如 Web 共享。这样，DLL 就更容易暴露给攻击者，他们不再需要物理接触计算机就能危害硬盘上的文件。
- en: Another approach to DLL search order hijacking is the modification of the ways
    in which programs load DLLs. Here, attackers modify the *manifest* or the *local
    direction* files to cause a program to load a different DLL than the intended
    one. The attackers may redirect the program to always load the malicious DLL and
    this will lead to a persistent privilege escalation. The attackers can also change
    the path to the legitimate DLLs back when the compromised program behaves abnormally.
    The targeted programs are the ones that execute with a high level of privileges.
    When done to the right program, the attacker could essentially escalate privileges
    to become a system user and, therefore, have access to more things.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种 DLL 搜索顺序劫持的方法是修改程序加载 DLL 的方式。在这种情况下，攻击者修改*清单*或*本地方向*文件，导致程序加载一个不同于预期的 DLL。攻击者可以将程序重定向为始终加载恶意
    DLL，这将导致持续的特权提升。攻击者还可以在受损程序行为异常时，将路径改回合法的 DLL。目标程序通常是以较高权限运行的程序。当这种方法应用到合适的程序时，攻击者基本上可以将特权提升为系统用户，从而访问更多的资源。
- en: DLL hijacking is complex and it requires lots of caution to prevent abnormal
    behavior by the victim program. In an unfortunate, or fortunate, event where a
    user realizes that an application is behaving erratically, he or she can simply
    uninstall it. This will consequently thwart a DLL hijacking attack.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: DLL 劫持比较复杂，需要小心谨慎地防止受害程序出现异常行为。如果发生了不幸（或幸运）的情况，用户意识到应用程序行为异常时，他或她可以直接卸载该程序。这样就可以有效阻止
    DLL 劫持攻击。
- en: 'The diagram below shows an illustration of search order hijacking where an
    attacker has placed a malicious DLL file on the search path of a legitimate DLL
    file:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图示展示了搜索顺序劫持的示例，其中攻击者将一个恶意 DLL 文件放置在合法 DLL 文件的搜索路径上：
- en: '![](assets/7f5eb5c3-752c-44de-878c-6d2ad2561873.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7f5eb5c3-752c-44de-878c-6d2ad2561873.png)'
- en: Dylib hijacking
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dylib 劫持
- en: Dylib hijacking is a method that is used against Apple computers. Computers
    that have Apple's OS X use a similar search method for finding dynamic libraries
    that should be loaded into programs. The search method is also based on paths
    and, as was seen in DLL hijacking, attackers can take advantage of these paths
    for privilege escalation purposes. Attackers conduct research to find out the
    dylibs that specific applications use and they then place a malicious version
    with a similar name high up in the search path. Therefore, when the operating
    system is searching for an application's dylib, it finds the malicious one first.
    If the targeted program runs with higher-level privileges than the user of the
    computer has, when it is started, it will auto-elevate the privileges. In this
    instance, it will have also have created an admin level access to the malicious
    dylib.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Dylib 劫持是一种针对苹果电脑的攻击方法。使用苹果 OS X 操作系统的计算机采用类似的搜索方法来查找应该加载到程序中的动态库。该搜索方法同样基于路径，就像在
    DLL 劫持中所看到的那样，攻击者可以利用这些路径进行特权提升。攻击者通过研究特定应用程序使用的 dylib，并将一个名称相似的恶意版本放在搜索路径的前面。因此，当操作系统在查找应用程序的
    dylib 时，它会首先找到恶意的那个。如果目标程序以比计算机用户更高的权限运行，当它启动时，特权将自动提升。在这种情况下，它还会为恶意 dylib 创建管理员级别的访问权限。
- en: 'The following diagram illustrates the process of the dylib hijacking where
    attackers place a malicious dylib on the search path:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了 dylib 劫持的过程，攻击者将一个恶意 dylib 放置在搜索路径中：
- en: '![](assets/1b882856-3e52-49a6-b202-778d42e9c9c7.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1b882856-3e52-49a6-b202-778d42e9c9c7.png)'
- en: Exploration of vulnerabilities
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 漏洞探索
- en: The exploration of vulnerabilities is one of the few horizontal privilege escalations
    that gets used today. Due to the strictness in the coding and securing of systems,
    there tend to be fewer cases of horizontal privilege escalation. This type of
    privilege escalation is done on systems and programs that have programming errors.
    These programming errors may introduce vulnerabilities that attackers can exploit
    to bypass security mechanisms. Some systems will accept certain phrases as passwords
    for all users. This could probably be a programming error to allow system developers
    to quickly access systems. However, attackers may quickly discover this flaw and
    use it to access user accounts that have high privileges. Other errors in coding
    may allow attackers to change the access levels of users in the URL of a web-based
    system. In Windows, there was a programming error that allowed attackers to create
    their own Kerberos tickets with domain admin rights using regular domain user
    permissions. This vulnerability is called **MS14-068**. Even though system developers
    may be extremely careful, these errors show up at times and they provide attackers
    an avenue to quickly escalate privileges.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞探索是目前少数几种横向权限提升方式之一。由于系统的编码和安全性要求非常严格，横向权限提升的案例通常较少。此类权限提升发生在存在编程错误的系统和程序中。这些编程错误可能会引入漏洞，攻击者可以利用这些漏洞绕过安全机制。一些系统会接受某些短语作为所有用户的密码。这可能是一个编程错误，允许系统开发人员快速访问系统。然而，攻击者可能会迅速发现这个缺陷，并利用它访问拥有高权限的用户账户。其他编程错误可能允许攻击者在基于网页的系统的
    URL 中更改用户的访问权限。在 Windows 中，曾有一个编程错误，允许攻击者使用普通域用户权限创建带有域管理员权限的 Kerberos 票证。这个漏洞被称为**MS14-068**。尽管系统开发人员可能非常小心，但这些错误有时还是会出现，并为攻击者提供了快速提升权限的途径。
- en: Sometimes, an attacker will take advantage of how the operating system works
    to exploit an unknown vulnerability.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，攻击者会利用操作系统的工作原理来利用一个未知的漏洞。
- en: 'A classic example of that is the use of the registry key `AlwaysInstallElevated`,
    which is present in the system (set to 1) and will allow the installation of a
    Windows Installer package with elevated (system) privileges. For this key to be
    considered enabled, the following values should be set to 1:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一个经典的例子是使用注册表键`AlwaysInstallElevated`，该键存在于系统中（设置为 1），并允许以提升（系统）权限安装 Windows
    安装程序包。为了使此键被认为是启用的，以下值应设置为 1：
- en: '[PRE0]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The attacker can use the `reg` query command to verify if this key is present;
    if it is not, the following message will appear:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以使用`reg`查询命令来验证此键是否存在；如果不存在，将会显示以下消息：
- en: '![](assets/771f212f-ae0f-4de6-94c4-d72aeabe98f4.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/771f212f-ae0f-4de6-94c4-d72aeabe98f4.png)'
- en: This might sound harmless, but if you think deeply you will notice the problem.
    You are basically giving system-level privileges to a regular user to execute
    an installer. What if this installer package has malicious content? Game over!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来可能无害，但如果深入思考，你会发现问题所在。你实际上是在给普通用户提供系统级权限来执行一个安装程序。如果这个安装包包含恶意内容怎么办？游戏结束！
- en: Launch daemon
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动守护进程
- en: Using a launch daemon is another privilege escalation method applicable to Apple-based
    operating systems, especially OS X. When OS X boots up, `launchd` is normally
    run to end system initialization. The process is responsible for loading the parameters
    for the daemons from the `plis`t files found in `/Library/LaunchDaemons`. The
    daemons have property list files that point to the executables to be auto-started.
    Attackers may take advantage of this auto-start process to perform privilege escalation.
    They may install their own launch daemons and configure them to start during the
    bootup process using the launched process. The attackers' daemons may be given
    disguised names from a related OS or application. Launch daemons are created with
    admin privileges but they execute with root privileges. Therefore, if the attackers
    are successful, they will have their daemons auto-started and their privileges
    escalated from admin to root. It can be noted that again, attackers are relying
    on an otherwise legitimate process in order to perform privilege escalation.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 使用启动守护进程是另一种适用于基于Apple的操作系统（尤其是OS X）的特权升级方法。当OS X启动时，`launchd`通常会运行以完成系统初始化。该进程负责加载来自`plist`文件的守护进程参数，这些文件位于`/Library/LaunchDaemons`目录中。守护进程有属性列表文件，指向要自动启动的可执行文件。攻击者可能利用这个自动启动过程来进行特权升级。他们可以安装自己的启动守护进程，并通过已启动的进程将其配置为在启动过程中启动。攻击者的守护进程可能会被赋予与操作系统或应用程序相关的伪装名称。启动守护进程是以管理员权限创建的，但它们以root权限执行。因此，如果攻击者成功，他们将能够使自己的守护进程自动启动，并将特权从管理员提升到root。可以注意到，攻击者再次依赖一个原本合法的进程来执行特权升级。
- en: Hands-on example of privilege escalation on a Windows 8 target
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows 8目标上特权升级的实际操作示例
- en: This hands-on illustration works on Windows 8 and has also been reported to
    be effective in Windows 10\. It makes use of some techniques that have been discussed,
    that is, PowerShell and Meterpreter. It is a cunning technique that drives the
    user of the target machine to unknowingly allow a legitimate program to run which
    in turn does the privilege escalation. Therefore, it is the user that unknowingly
    allows malicious actors to escalate their privileges. The process starts within
    Metasploit and particularly on Meterpreter. Meterpreter is first used to establish
    a session with a target. This session is what the attackers use to send commands
    to the target and effectively control it.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 该实际操作示例适用于Windows 8，并且据报道在Windows 10上也有效。它利用了一些已经讨论过的技术，即PowerShell和Meterpreter。这是一种狡猾的技术，迫使目标机器的用户在不知情的情况下允许合法程序运行，从而进行特权升级。因此，实际上是用户在不知情的情况下允许恶意行为者升级其特权。整个过程从Metasploit开始，特别是在Meterpreter中。首先使用Meterpreter与目标建立会话。攻击者利用这个会话向目标发送命令并有效地控制目标。
- en: The following is a script called `persistence` that an attacker can use to start
    a session with a remote target. The script creates a persistent listener on the
    victim's system that runs upon boot.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个名为`persistence`的脚本，攻击者可以用它与远程目标建立会话。该脚本在受害者的系统上创建一个持久化监听器，该监听器在启动时自动运行。
- en: 'It is written as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 它的写法如下：
- en: '[PRE1]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This command starts a handler on the target (`A`), places Meterpreter at the
    `C` drive of the victim machine (`L c:\`) and instructs the listener to start
    on boot (`X`), make a check in intervals of 30 seconds (`i 30`), and to connect
    to port `443` of the victim's IP address. A hacker may check whether the connection
    was simple by sending a `reboot` command to the target machine and observing its
    behavior.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令在目标系统（`A`）上启动一个处理程序，将Meterpreter放置在受害者机器的`C`盘（`L c:\`），并指示监听器在启动时运行（`X`），每30秒检查一次（`i
    30`），并连接到受害者IP地址的`443`端口。攻击者可以通过向目标机器发送`reboot`命令并观察其行为，检查连接是否简单。
- en: 'The `reboot` command is as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`reboot`命令如下：'
- en: '[PRE2]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If satisfied with the connection, the attacker may background the session and
    begin the privilege escalation attempt. Meterpreter will run the session in the
    background and allow Metasploit to carry out other exploits.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对连接满意，攻击者可以将会话转入后台并开始特权升级尝试。Meterpreter将在后台运行该会话，并允许Metasploit执行其他漏洞攻击。
- en: 'The following command is issued in the Metasploit terminal:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令在Metasploit终端中发出：
- en: '[PRE3]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This is a command that works on all versions of Windows. It is used to request
    that the user on the target machine unknowingly escalates the execution level
    of the attacker. The user has to click OK on a non-suspicious looking prompt on
    their screen requesting permission to run a program. The user consent is required
    and if it is not given, the privilege escalation attempt is not successful. Therefore,
    the attacker has to request the user to allow for the running of a legitimate
    program and this is where PowerShell comes in. Attackers, therefore, have to set
    the `ask` technique to be through PowerShell. This is done as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个适用于所有版本 Windows 的命令。它的作用是请求目标计算机上的用户在不知情的情况下提升攻击者的执行级别。用户必须在屏幕上点击一个看起来不怀疑的提示，允许运行某个程序。如果用户同意，则权限提升尝试成功；否则，尝试失败。因此，攻击者必须要求用户允许运行一个合法程序，而这就是
    PowerShell 发挥作用的地方。因此，攻击者需要通过 PowerShell 设置 `ask` 技术。具体操作如下：
- en: '[PRE4]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'At this point, a popup will appear on the target user''s screen prompting them
    to allow the running of PowerShell, a completely legitimate Windows program. In
    most instances, the user will click OK. With this permission, the attacker can
    use Powershell to migrate from being a normal user to a system user, as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在此时，目标用户的屏幕上会弹出一个提示，要求他们允许运行 PowerShell，这是一个完全合法的 Windows 程序。在大多数情况下，用户会点击“确定”。在获得此权限后，攻击者可以使用
    PowerShell 从普通用户身份迁移到系统用户身份，具体如下：
- en: '[PRE5]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Thus, `1340` is listed as a system user on Metasploit. When this is successful,
    the attackers will have successfully acquired more privileges. A check on the
    privileges the attackers have should show that they have both admin and system
    rights. However, the `1340` admin user only has four Windows privileges and these
    are insufficient to perform a big attack. An attacker has to escalate his or her
    privileges further so as to have sufficient privileges to be able to perform more
    malicious actions. The attackers can then migrate to `3772` which is an `NT AuthoritySystem`
    user. This can be carried out using the following command:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`1340` 被列为 Metasploit 中的系统用户。当这一过程成功时，攻击者将成功获得更多权限。检查攻击者所拥有的权限应该会显示他们既拥有管理员权限，也拥有系统权限。然而，`1340`
    管理员用户仅具有四个 Windows 权限，这不足以进行大规模攻击。因此，攻击者必须进一步提升其权限，以便获得足够的权限来执行更多恶意操作。攻击者接下来可以迁移到
    `3772`，即 `NT AuthoritySystem` 用户。这可以通过以下命令实现：
- en: '[PRE6]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The attackers will still have the admin and root user rights and they will have
    additional Windows privileges. These additional privileges, 13 in number, can
    allow the attackers to do a myriad of things to the target using Metasploit.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者仍然拥有管理员和 root 用户权限，并且还会获得额外的 Windows 权限。这些额外的权限有 13 项，可以让攻击者使用 Metasploit
    对目标执行各种操作。
- en: Conclusion and lessons learned
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论与经验总结
- en: This chapter has discussed one of the most complex phases of an attack. Not
    all of the techniques used here are complex though. As has been said, there are
    two techniques; horizontal and vertical privilege escalation. Some attackers will
    use the horizontal privilege escalation methods because they are less tasking
    and easier to perform. However, veteran hackers who have a good understanding
    of the systems that they target use vertical privilege escalation methods. This
    paper has gone through some of these privilege escalation methods. It was clear
    from most methods that hackers had to target legitimate processes and services
    in order to escalate privileges. This is because most systems are built using
    the least privilege concept. Users are purposefully given the least privileges
    that they require to accomplish their roles. Only the legitimate services and
    processes are given high-level privileges and, therefore, attackers have to compromise
    them in most cases.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了攻击过程中最复杂的阶段之一。尽管如此，并非所有使用的技术都很复杂。正如前面所说，有两种技术：水平权限提升和垂直权限提升。一些攻击者会使用水平权限提升方法，因为它们工作量较小且更容易执行。然而，经验丰富的黑客会使用垂直权限提升方法，因为他们对目标系统有很好的了解。本文介绍了一些这些权限提升方法。通过大多数方法可以看出，黑客必须针对合法进程和服务进行攻击，才能提升权限。这是因为大多数系统都是基于最小权限原则构建的。用户只会被授予完成其职责所需的最低权限。只有合法的服务和进程才会被授予高级权限，因此，攻击者通常需要妥协这些服务和进程。
- en: References
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'A. Gouglidis, I. Mavridis and V. C. Hu, *Security policy verification for multi-domains
    in cloud systems*, International Journal of Information Security, vol. 13, (2),
    pp. 97-111, 2014\. Available: [https://search.proquest.com/docview/1509582424\.
    DOI: http://dx.doi.org/10.1007/s10207-013-0205-x](https://search.proquest.com/docview/1509582424.%20DOI:%20http://dx.doi.org/10.1007/s10207-013-0205-x).'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'A. Gouglidis, I. Mavridis 和 V. C. Hu，*云系统中多域安全策略验证*，《国际信息安全杂志》，第13卷，第2期，第97-111页，2014年。可用：[https://search.proquest.com/docview/1509582424\.
    DOI: http://dx.doi.org/10.1007/s10207-013-0205-x](https://search.proquest.com/docview/1509582424.%20DOI:%20http://dx.doi.org/10.1007/s10207-013-0205-x)。'
- en: 'T. Sommestad and F. Sandström, *An empirical test of the accuracy of an attack
    graph analysis tool*, Information and Computer Security, vol. 23, (5), pp. 516-531,
    2015\. Available: [https://search.proquest.com/docview/1786145799](https://search.proquest.com/docview/1786145799).'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: T. Sommestad 和 F. Sandström，*攻击图分析工具准确性的实证测试*，《信息与计算机安全》，第23卷，第5期，第516-531页，2015年。可用：[https://search.proquest.com/docview/1786145799](https://search.proquest.com/docview/1786145799)。
- en: 'D. A. Groves, *Industrial Control System Security by Isolation: A Dangerous
    Myth*, American Water Works Association.Journal, vol. 103, (7), pp. 28-30, 2011\.
    Available: [https://search.proquest.com/docview/878745593](https://search.proquest.com/docview/878745593).'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: D. A. Groves，*通过隔离提高工业控制系统安全性：一个危险的神话*，《美国水务协会期刊》，第103卷，第7期，第28-30页，2011年。可用：[https://search.proquest.com/docview/878745593](https://search.proquest.com/docview/878745593)。
- en: 'P. Asadoorian, *Windows Privilege Escalation Techniques (Local) - Tradecraft
    Security Weekly #2 - Security Weekly*, Security Weekly, 2017\. [Online]. Available:
    [https://securityweekly.com/2017/05/18/windows-privilege-escalation-techniques-local-tradecraft-security-weekly-2/](https://securityweekly.com/2017/05/18/windows-privilege-escalation-techniques-local-tradecraft-security-weekly-2/).
    [Accessed: 16- Aug- 2017].'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'P. Asadoorian，*Windows 权限提升技巧（本地） - 安全周刊 #2 - 安全周刊*，安全周刊，2017年。[在线]. 可用：[https://securityweekly.com/2017/05/18/windows-privilege-escalation-techniques-local-tradecraft-security-weekly-2/](https://securityweekly.com/2017/05/18/windows-privilege-escalation-techniques-local-tradecraft-security-weekly-2/)。[访问日期：2017年8月16日]。'
- en: 'C. Perez, *Meterpreter Token Manipulation*, Shell is Only the Beginning, 2017\.
    [Online]. Available: [https://www.darkoperator.com/blog/2010/1/2/meterpreter-token-manipulation.html](https://www.darkoperator.com/blog/2010/1/2/meterpreter-token-manipulation.html).
    [Accessed: 16- Aug- 2017].'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: C. Perez，*Meterpreter 令牌操作*，Shell 只是一个开始，2017年。[在线]. 可用：[https://www.darkoperator.com/blog/2010/1/2/meterpreter-token-manipulation.html](https://www.darkoperator.com/blog/2010/1/2/meterpreter-token-manipulation.html)。[访问日期：2017年8月16日]。
- en: 'S. Knight, *Exploit allows command prompt to launch at Windows 7 login screen*,
    TechSpot, 2017\. [Online]. Available: [https://www.techspot.com/news/48774-exploit-allows-command-prompt-to-launch-at-windows-7-login-screen.html](https://www.techspot.com/news/48774-exploit-allows-command-prompt-to-launch-at-windows-7-login-screen.html).
    [Accessed: 16- Aug- 2017].'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: S. Knight，*利用漏洞让命令提示符在 Windows 7 登录屏幕启动*，《TechSpot》，2017年。[在线]. 可用：[https://www.techspot.com/news/48774-exploit-allows-command-prompt-to-launch-at-windows-7-login-screen.html](https://www.techspot.com/news/48774-exploit-allows-command-prompt-to-launch-at-windows-7-login-screen.html)。[访问日期：2017年8月16日]。
- en: '*Application Shimming*, Attack.mitre.org, 2017\. [Online]. Available: [https://attack.mitre.org/wiki/Technique/T1138](https://attack.mitre.org/wiki/Technique/T1138).
    [Accessed: 16- Aug- 2017].'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*应用程序补丁技术*，Attack.mitre.org，2017年。[在线]. 可用： [https://attack.mitre.org/wiki/Technique/T1138](https://attack.mitre.org/wiki/Technique/T1138)。[访问日期：2017年8月16日]。'
- en: '*Bypass User Account Control*, Attack.mitre.org, 2017\. [Online]. Available:
    [https://attack.mitre.org/wiki/Technique/T1088](https://attack.mitre.org/wiki/Technique/T1088).
    [Accessed: 16- Aug- 2017].'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*绕过用户帐户控制*，Attack.mitre.org，2017年。[在线]. 可用：[https://attack.mitre.org/wiki/Technique/T1088](https://attack.mitre.org/wiki/Technique/T1088)。[访问日期：2017年8月16日]。'
- en: '*DLL Injection*, Attack.mitre.org, 2017\. [Online]. Available: [https://attack.mitre.org/wiki/Technique/T1055](https://attack.mitre.org/wiki/Technique/T1055).
    [Accessed: 16- Aug- 2017].'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*DLL 注入*，Attack.mitre.org，2017年。[在线]. 可用：[https://attack.mitre.org/wiki/Technique/T1055](https://attack.mitre.org/wiki/Technique/T1055)。[访问日期：2017年8月16日]。'
- en: '*DLL Hijacking Attacks Revisited*, InfoSec Resources, 2017\. [Online]. Available:
    [http://resources.infosecinstitute.com/dll-hijacking-attacks-revisited/](http://resources.infosecinstitute.com/dll-hijacking-attacks-revisited/).
    [Accessed: 16- Aug- 2017].'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*DLL 劫持攻击重访*，信息安全资源，2017年。[在线]. 可用： [http://resources.infosecinstitute.com/dll-hijacking-attacks-revisited/](http://resources.infosecinstitute.com/dll-hijacking-attacks-revisited/)。[访问日期：2017年8月16日]。'
- en: '*Dylib-Hijacking Protection*, Paloaltonetworks.com, 2017\. [Online]. Available:
    [https://www.paloaltonetworks.com/documentation/40/endpoint/newfeaturesguide/security-features/dylib-hijacking-protection.html](https://www.paloaltonetworks.com/documentation/40/endpoint/newfeaturesguide/security-features/dylib-hijacking-protection.html).
    [Accessed: 16- Aug- 2017].'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Dylib-Hijacking Protection*，Paloaltonetworks.com，2017年。[在线]。可用链接：[https://www.paloaltonetworks.com/documentation/40/endpoint/newfeaturesguide/security-features/dylib-hijacking-protection.html](https://www.paloaltonetworks.com/documentation/40/endpoint/newfeaturesguide/security-features/dylib-hijacking-protection.html)。
    [访问日期：2017年8月16日]。'
- en: 'T. Newton, *Demystifying Shims - or - Using the App Compat Toolkit to make
    your old stuff work with your new stuff*, *Blogs.technet.microsoft.com*, 2018\.
    [Online]. Available: [https://blogs.technet.microsoft.com/askperf/2011/06/17/demystifying-shims-or-using-the-app-compat-toolkit-to-make-your-old-stuff-work-with-your-new-stuff/](https://blogs.technet.microsoft.com/askperf/2011/06/17/demystifying-shims-or-using-the-app-compat-toolkit-to-make-your-old-stuff-work-with-your-new-stuff/).
    [Accessed: 03- Jan- 2018].'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: T. Newton，*Demystifying Shims - or - Using the App Compat Toolkit to make your
    old stuff work with your new stuff*，*Blogs.technet.microsoft.com*，2018年。[在线]。可用链接：[https://blogs.technet.microsoft.com/askperf/2011/06/17/demystifying-shims-or-using-the-app-compat-toolkit-to-make-your-old-stuff-work-with-your-new-stuff/](https://blogs.technet.microsoft.com/askperf/2011/06/17/demystifying-shims-or-using-the-app-compat-toolkit-to-make-your-old-stuff-work-with-your-new-stuff/)。
    [访问日期：2018年1月3日]。
- en: '*DLL Injection - enterprise*, *Attack.mitre.org*, 2018\. [Online]. Available:
    [https://attack.mitre.org/wiki/Technique/T1055](https://attack.mitre.org/wiki/Technique/T1055).
    [Accessed: 03- Jan- 2018].'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*DLL Injection - enterprise*，*Attack.mitre.org*，2018年。[在线]。可用链接：[https://attack.mitre.org/wiki/Technique/T1055](https://attack.mitre.org/wiki/Technique/T1055)。
    [访问日期：2018年1月3日]。'
- en: Summary
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'This chapter has gone through the privilege escalation phase. It has noted
    that there are two broad classifications of privilege escalation: vertical and
    horizontal. It has also brought to light that horizontal privilege escalation
    is the best luck that an attacker can hope for. This is because the methods used
    for horizontal privilege escalation tend not to be very complex. It has gone through
    most of the sophisticated vertical privilege escalation methods that attackers
    use against systems. It is noteworthy that most of the discussed techniques involve
    attempts to compromise legitimate services and processes in order to get higher
    privileges. This is probably the last task that the attacker will have to perform
    in the entire attack.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 本章已经讲解了特权提升阶段。指出特权提升有两大类：垂直特权提升和水平特权提升。还特别提到，水平特权提升是攻击者所能期望的最佳运气。这是因为水平特权提升所用的方法通常不会太复杂。已经讨论了攻击者针对系统使用的许多复杂的垂直特权提升方法。值得注意的是，所讨论的大多数技术都涉及通过妥协合法服务和进程以获得更高权限的尝试。这可能是攻击者在整个攻击过程中必须执行的最后一个任务。
- en: The next chapter will explain how the attackers deliver the final blow and,
    if successful, how they reap the rewards of their efforts.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将解释攻击者如何发起最后一击，并且如果成功，他们将如何收获努力的成果。
