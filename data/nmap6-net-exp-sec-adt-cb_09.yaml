- en: Chapter 9. Writing Your Own NSE Scripts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。编写您自己的NSE脚本
- en: Note
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This chapter shows you how to do some things that in many situations might be
    illegal, unethical, a violation of the terms of service, or just not a good idea.
    It is provided here to give you information that may be of use to protect yourself
    against threats and make your own system more secure. Before following these instructions,
    be sure you are on the right side of the legal and ethical line... use your powers
    for good!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向您展示如何执行在许多情况下可能是非法、不道德、违反服务条款或不明智的一些操作。这里提供这些信息是为了让您了解如何保护自己免受威胁，并使自己的系统更加安全。在遵循这些说明之前，请确保您站在法律和道德的一边……善用您的力量！
- en: 'In this chapter, we will cover:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Making HTTP requests to identify vulnerable Trendnet webcams
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过发出HTTP请求来识别易受攻击的Trendnet网络摄像头
- en: Sending UDP payloads by using NSE sockets
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用NSE套接字发送UDP有效载荷
- en: Exploiting a path traversal vulnerability with NSE
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用NSE利用路径遍历漏洞
- en: Writing a brute force script
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写暴力破解脚本
- en: Working with the web crawling library
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用网络爬虫库
- en: Reporting vulnerabilities correctly in NSE scripts
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在NSE脚本中正确报告漏洞
- en: Writing your own NSE library
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写您自己的NSE库
- en: Working with NSE threads, condition variables, and mutexes in NSE
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在NSE线程、条件变量和互斥体中工作
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: The Nmap Scripting Engine was introduced in 2007 in Version 4.5, in order to
    extend Nmap's functionality to a whole new level by using the information gathered
    during a port or a network scan and performing additional tasks powered by the
    powerful scripting language **Lua**. This feature has become a whole arsenal by
    itself with almost 300 scripts already officially included. The amount of tasks
    you can accomplish with this feature is impressive, as you have learned throughout
    this book.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap脚本引擎于2007年在版本4.5中推出，以利用在端口或网络扫描期间收集的信息，并使用强大的脚本语言Lua执行附加任务，从而将Nmap的功能扩展到一个全新的水平。这一功能已经成为一个完整的武器库，已经正式包含了近300个脚本。您可以通过这一功能完成的任务数量令人印象深刻，就像您在本书中学到的那样。
- en: Lua is a scripting language currently used in other important projects, such
    as World of Warcraft, Wireshark, and Snort, for very good reasons. Lua is very
    lightweight and extensible. As an NSE developer, my experience with Lua has been
    very positive. The language is very powerful and flexible, yet with a clear and
    easy-to-learn syntax. Because Lua is a whole topic by itself, I will not be able
    to focus on all of its great features, but I recommend that you read the official
    reference manual at [http://www.lua.org/manual/5.2/](http://www.lua.org/manual/5.2/).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Lua是一种脚本语言，目前在其他重要项目中使用，如魔兽世界、Wireshark和Snort，有很好的原因。Lua非常轻量级和可扩展。作为NSE开发人员，我对Lua的经验非常积极。该语言非常强大和灵活，但语法清晰且易于学习。因为Lua本身就是一个完整的主题，我将无法专注于其所有出色的功能，但我建议您阅读官方参考手册[http://www.lua.org/manual/5.2/](http://www.lua.org/manual/5.2/)。
- en: 'Each NSE script receives two arguments: a host and a port table. They contain
    the information collected during the discovery or port scan. Some information
    fields are populated only if certain flags are set. Some of the fields in the
    host table are:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每个NSE脚本接收两个参数：主机和端口表。它们包含在发现或端口扫描期间收集的信息。只有在设置了某些标志时，才会填充一些信息字段。主机表中的一些字段是：
- en: '`host.os`: Table with array of OS matches (needs flag `-O`)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`host.os`：包含OS匹配数组的表（需要标志`-O`）'
- en: '`host.ip`: Target IP'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`host.ip`：目标IP'
- en: '`host.name`: Returns the reverse DNS entry if available'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`host.name`：如果可用，返回反向DNS条目'
- en: For the complete list of fields, visit [http://nmap.org/book/nse-api.html#nse-api-arguments](http://nmap.org/book/nse-api.html#nse-api-arguments).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 有关完整字段列表，请访问[http://nmap.org/book/nse-api.html#nse-api-arguments](http://nmap.org/book/nse-api.html#nse-api-arguments)。
- en: 'On the other hand, the port table contains:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，端口表包含：
- en: '`port.number`: Port number'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`port.number`：端口号'
- en: '`port.protocol`: Port protocol'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`port.protocol`：端口协议'
- en: '`port.service`: Service name'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`port.service`：服务名称'
- en: '`port.version`: Service version'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`port.version`：服务版本'
- en: '`port.state`: Port state'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`port.state`：端口状态'
- en: The combination of flexibility and information provided by the Nmap Scripting
    Engine allows penetration testers and system administrators to save a lot of development
    time when writing scripts to automate tasks.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap脚本引擎提供的灵活性和信息的结合，使渗透测试人员和系统管理员在编写脚本自动化任务时节省了大量的开发时间。
- en: The community behind Nmap is amazing and very collaborative. I can say they
    are some of the most passionate people in the open source community. New scripts
    and libraries are added every week, and this has become the very same reason why
    penetration testers need to keep the latest development snapshot under their arsenal.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap背后的社区是令人惊讶且非常合作的。我可以说他们是开源社区中最热情的人之一。每周都会添加新的脚本和库，这也成为渗透测试人员需要将最新的开发快照纳入其武器库的原因。
- en: In honor of David Fifield and Fyodor's talk introducing the Nmap Scripting Engine
    in Defcon 2010 where they wrote a script to detect vulnerable httpd webcams, we
    will start by writing our own NSE script to detect Trendnet cameras.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了纪念David Fifield和Fyodor在Defcon 2010中介绍Nmap脚本引擎的演讲，他们编写了一个脚本来检测易受攻击的httpd网络摄像头，我们将开始编写我们自己的NSE脚本来检测Trendnet摄像头。
- en: In this chapter you will also learn how to write NSE scripts that perform brute
    force password auditing, and will use the new HTTP crawler library to automate
    security checks. We will talk about scripts that handle NSE sockets and raw packets
    to exploit vulnerabilities. We will cover some of the NSE libraries that allow
    us to make HTTP requests, manage found credentials, and report vulnerabilities
    to the users.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您还将学习如何编写执行暴力破解密码审核的NSE脚本，并使用新的HTTP爬虫库来自动执行安全检查。我们将讨论处理NSE套接字和原始数据包以利用漏洞的脚本。我们将介绍一些NSE库，这些库允许我们发出HTTP请求、管理找到的凭据，并向用户报告漏洞。
- en: The Nmap Scripting Engine evolves fast and grows even faster. Due to limited
    space it is impossible to cover all of the great NSE scripts and libraries that
    this project already has, but I invite you to visit the official book website
    [http://nmap-cookbook.com](http://nmap-cookbook.com) for additional recipes and
    script examples that I will be posting in the future.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap脚本引擎发展迅速，增长更快。由于空间有限，不可能涵盖该项目已经拥有的所有优秀NSE脚本和库，但我邀请您访问官方书籍网站[http://nmap-cookbook.com](http://nmap-cookbook.com)获取额外的配方和脚本示例，我将在未来发布。
- en: I hope that after reading the recipes I have picked for you, you will learn
    all of the necessary tools to take on more challenging tasks. Make debugging mode
    your friend (`-d[1-9]`) and of course, don't forget to contribute to this amazing
    project by sending your scripts or patches to `<[nmap-dev@insecure.org](mailto:nmap-dev@insecure.org)>`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 希望在阅读我为您挑选的配方后，您将学会应对更具挑战性的任务所需的所有必要工具。将调试模式设为您的朋友（`-d[1-9]`），当然，不要忘记通过将您的脚本或补丁发送至`<[nmap-dev@insecure.org](mailto:nmap-dev@insecure.org)>`来为这个令人惊叹的项目做出贡献。
- en: If this is the first time that you are writing a script for NSE, I recommend
    that you download and study the overall structure and necessary fields of a script.
    I uploaded the template that I have used to [https://github.com/cldrn/nmap-nse-scripts/blob/master/nse-script-template.nse](https://github.com/cldrn/nmap-nse-scripts/blob/master/nse-script-template.nse).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是您第一次为NSE编写脚本，我建议您下载并学习脚本的整体结构和必要字段。我上传了我用于[https://github.com/cldrn/nmap-nse-scripts/blob/master/nse-script-template.nse](https://github.com/cldrn/nmap-nse-scripts/blob/master/nse-script-template.nse)的模板。
- en: Ron Bowes also wrote a very detailed template for NSE scripts at [http://nmap.org/svn/docs/sample-script.nse](http://nmap.org/svn/docs/sample-script.nse).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Ron Bowes还在[http://nmap.org/svn/docs/sample-script.nse](http://nmap.org/svn/docs/sample-script.nse)上为NSE脚本编写了非常详细的模板。
- en: The complete documentation for the NSE script format can be found online at
    [http://nmap.org/book/nse-script-format.html](http://nmap.org/book/nse-script-format.html).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的NSE脚本格式文档可以在[http://nmap.org/book/nse-script-format.html](http://nmap.org/book/nse-script-format.html)上找到。
- en: Making HTTP requests to identify vulnerable Trendnet webcams
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进行HTTP请求以识别易受攻击的Trendnet网络摄像头
- en: The Nmap Scripting Engine offers a library to handle requests and other common
    functions of an HTTP client. With this library, NSE developers can accomplish
    many tasks, from information gathering to vulnerability exploitation.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap脚本引擎提供了一个库，用于处理HTTP客户端的请求和其他常见功能。使用此库，NSE开发人员可以完成许多任务，从信息收集到漏洞利用。
- en: This recipe will show you how to use the HTTP library to send an HTTP request
    to identify vulnerable Trendnet TV-IP110W webcams.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方将向您展示如何使用HTTP库发送HTTP请求以识别易受攻击的Trendnet TV-IP110W网络摄像头。
- en: How to do it...
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Trendnet TV-IP110W webcams allow unauthenticated access to their video feed
    by simply requesting the URI `/anony/mjpg.cgi`. Let''s write an NSE script to
    detect these devices. For now, let''s ignore the documentation tags:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Trendnet TV-IP110W网络摄像头允许通过简单请求URI`/anony/mjpg.cgi`来访问其视频源而无需身份验证。让我们编写一个NSE脚本来检测这些设备。现在，让我们忽略文档标签：
- en: 'Create the file `http-trendnet-tvip110w.nse` and start by filling up the NSE
    script basic information fields:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建文件`http-trendnet-tvip110w.nse`，并从填写NSE脚本基本信息字段开始：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We load the libraries that we are going to need. Note that this format corresponds
    to Nmap 6.x:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们加载将需要的库。请注意，此格式对应于Nmap 6.x：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We define our execution rule. We use the alias `shortport.http` to tell Nmap
    to execute the script when a web server is found:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们定义我们的执行规则。我们使用别名`shortport.http`告诉Nmap在找到Web服务器时执行脚本：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Our main function will identify the type of 404 responses and determine if
    the webcam is vulnerable to unauthorized access by sending the HTTP request to
    `/anony/mjpg.cgi` and checking for status code 200:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的主要功能将识别404响应的类型，并通过向`/anony/mjpg.cgi`发送HTTP请求并检查状态码200来确定网络摄像头是否容易受到未经授权的访问：
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now just run the NSE script against your target:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在只需针对目标运行NSE脚本：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you find a vulnerable webcam you will see the following output:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果找到易受攻击的网络摄像头，您将看到以下输出：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The complete script with documentation tags can be downloaded from [https://github.com/cldrn/nmap-nse-scripts/blob/master/scripts/6.x/http-trendnet-tvip110w.nse](https://github.com/cldrn/nmap-nse-scripts/blob/master/scripts/6.x/http-trendnet-tvip110w.nse).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 带有文档标签的完整脚本可以从[https://github.com/cldrn/nmap-nse-scripts/blob/master/scripts/6.x/http-trendnet-tvip110w.nse](https://github.com/cldrn/nmap-nse-scripts/blob/master/scripts/6.x/http-trendnet-tvip110w.nse)下载。
- en: How it works...
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'In the script `http-trendnet-tvip110w.nse`, we defined the execution rule with
    the alias `http` from the `shortport` library:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本`http-trendnet-tvip110w.nse`中，我们使用`shortport`库中的别名`http`定义了执行规则：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The alias `shortport.http` is defined in the file `/nselib/shortport.lua` as
    follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 别名`shortport.http`在文件`/nselib/shortport.lua`中定义如下：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `http` library has methods such as `http.head()`, `http.get()`, and `http.post()`
    corresponding to the common HTTP methods `HEAD`, `GET`, and `POST` respectively,
    but it also has a generic method named `http.generic_request()` to allow more
    flexibility to developers who may want to try more obscure HTTP verbs.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`http`库具有诸如`http.head()`、`http.get()`和`http.post()`的方法，分别对应于常见的HTTP方法`HEAD`、`GET`和`POST`，但它还有一个名为`http.generic_request()`的通用方法，允许开发人员更灵活地尝试更晦涩的HTTP动词。'
- en: 'In the script `http-trendnet-tvip110w`, we used the function `http.head()`
    to retrieve the URI `/anony/mjpg.cgi`:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本`http-trendnet-tvip110w`中，我们使用函数`http.head()`检索URI`/anony/mjpg.cgi`：
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The function `http.head()` returns a table containing the following response
    information:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 函数`http.head()`返回一个包含以下响应信息的表：
- en: '`status-line`: Contains the returned status line. For example, `HTTP/1.1 404
    Not Found`.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`status-line`：包含返回的状态行。例如，`HTTP/1.1 404 Not Found`。'
- en: '`status`: Contains the status code returned by the web server.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`status`：包含Web服务器返回的状态码。'
- en: '`body`: Contains the response body.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`body`：包含响应正文。'
- en: '`cookies`: Table of cookies set by the web server.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cookies`：Web服务器设置的cookie表。'
- en: '`header`: Associative table where the returned headers are stored. The name
    of the header is used as an index. For example, `header["server"]` contains the
    Server field returned by the web server.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`header`：返回的标题存储在关联表中。标题的名称用作索引。例如，`header["server"]`包含Web服务器返回的Server字段。'
- en: '`rawheader`: Numbered array of headers in the same order as they were sent
    by the web server.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rawheader`：按照它们被Web服务器发送的顺序编号的标题的数组。'
- en: 'The library `stdnse` is also used in the script `http-trendnet-tvip110w.nse`.
    This library is a collection of miscellaneous functions that come in handy when
    writing NSE scripts. The script used the function `stdnse.print_debug()`, a function
    to print debugging messages:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本`http-trendnet-tvip110w.nse`中还使用了库`stdnse`。这个库是一组在编写NSE脚本时非常方便的杂项函数。脚本使用了函数`stdnse.print_debug()`，这是一个用于打印调试消息的函数。
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The complete documentation for these libraries can be found at [http://nmap.org/nsedoc/lib/http.html](http://nmap.org/nsedoc/lib/http.html)
    and [http://nmap.org/nsedoc/lib/stdnse.html](http://nmap.org/nsedoc/lib/stdnse.html).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这些库的完整文档可以在[http://nmap.org/nsedoc/lib/http.html](http://nmap.org/nsedoc/lib/http.html)和[http://nmap.org/nsedoc/lib/stdnse.html](http://nmap.org/nsedoc/lib/stdnse.html)找到。
- en: There's more...
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Some web servers do not return regular status 404 code responses when a page
    does not exist, and instead return status code 200 all the time. This is an aspect
    that is often overlooked and even I have made the mistake before of assuming that
    a status of 200 meant that the URI exists. We need to be careful with this to
    avoid false positives in our scripts. The functions `http.identify_404()` and
    `http.page_exists()` were created to identify if a server returns regular 404
    responses and if a given page exists.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当页面不存在时，一些Web服务器不会返回常规的状态404代码响应，而是始终返回状态码200。这是一个经常被忽视的方面，甚至我以前也犯过这个错误，假设状态码200意味着URI存在。我们需要小心处理这个问题，以避免在我们的脚本中出现误报。函数`http.identify_404()`和`http.page_exists()`被创建用于识别服务器是否返回常规的404响应以及给定页面是否存在。
- en: '[PRE10]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If the function `http.identify_404(host, port)` was successful, we can use
    `http.page_exists()`:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果函数`http.identify_404(host, port)`成功，我们可以使用`http.page_exists()`：
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Debugging Nmap scripts
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试Nmap脚本
- en: 'If something unexpected happens, turn on debugging to get additional information.
    Nmap uses the flag `-d` for debugging and you can set any integer between 0 and
    9:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生意外情况，请打开调试以获取更多信息。Nmap使用`-d`标志进行调试，您可以设置0到9之间的任何整数：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Setting the user agent pragmatically
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 以编程方式设置用户代理
- en: 'There are some packet filtering products that block requests using Nmap''s
    default HTTP user agent. You can use a different user agent value by setting the
    argument `http.useragent`:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有些数据包过滤产品会阻止使用Nmap的默认HTTP用户代理的请求。您可以通过设置参数`http.useragent`来使用不同的用户代理值：
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To set the user agent in your NSE script, you can pass the header field:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您的NSE脚本中设置用户代理，可以传递标题字段：
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: HTTP pipelining
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HTTP流水线处理
- en: Some web server's configuration supports encapsulation of more than one HTTP
    request in a single packet. This may speed up the execution of an NSE HTTP script
    and it is recommended that you use it if the web server supports it. The `http`
    library, by default, tries to pipeline 40 requests and automatically adjusts that
    number according to the network conditions and the `Keep-Alive` header.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 某些Web服务器的配置支持在单个数据包中封装多个HTTP请求。这可能加快NSE HTTP脚本的执行速度，建议如果Web服务器支持，则使用它。默认情况下，`http`库尝试对40个请求进行流水线处理，并根据网络条件和`Keep-Alive`标头自动调整该数字。
- en: 'Users will need to set the script argument `http.pipeline` to adjust this value:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 用户需要设置脚本参数`http.pipeline`来调整此值：
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To implement HTTP pipelining in your NSE scripts, use the functions `http.pipeline_add()`
    and `http.pipeline()`. First, initiate a variable that will hold the requests:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您的NSE脚本中实现HTTP流水线处理，请使用函数`http.pipeline_add()`和`http.pipeline()`。首先，初始化一个变量来保存请求：
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add requests to the pipeline with `http.pipeline_add()`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`http.pipeline_add()`向管道添加请求：
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'When you are done adding requests, execute the pipe with `http.pipeline()`:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 添加请求后，使用`http.pipeline()`执行管道：
- en: '[PRE18]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The variable results will contain the number of response objects added to the
    HTTP request queue. To access them, you can simply iterate through the object:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 变量结果将包含添加到HTTP请求队列中的响应对象的数量。要访问它们，您可以简单地遍历对象：
- en: '[PRE19]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: See also
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Sending UDP payloads by using NSE sockets* recipe
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用NSE套接字发送UDP负载*配方'
- en: The *Exploiting a path traversal vulnerability with NSE* recipe
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用NSE利用路径遍历漏洞*配方'
- en: The *Writing a brute force script* recipe
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写暴力脚本*配方'
- en: The *Working with the web crawling library* recipe
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Web爬行库*配方'
- en: The *Reporting vulnerabilities correctly in NSE scripts* recipe
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在NSE脚本中正确报告漏洞*配方'
- en: The *Writing your own NSE library* recipe
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写自己的NSE库*配方'
- en: The *Listing supported HTTP methods* recipe in [Chapter 4](ch04.html "Chapter 4. Auditing
    Web Servers"), *Auditing Web Servers*
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。审计Web服务器")中的*列出支持的HTTP方法*配方，*审计Web服务器*'
- en: The *Checking if an HTTP proxy is open* recipe in [Chapter 4](ch04.html "Chapter 4. Auditing
    Web Servers"), *Auditing Web Servers*
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。审计Web服务器")中的*检查HTTP代理是否开放*配方，*审计Web服务器*'
- en: The *Detecting web application firewalls* recipe in [Chapter 4](ch04.html "Chapter 4. Auditing
    Web Servers"), *Auditing Web Servers*
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。审计Web服务器")中的*检测Web应用程序防火墙*配方，*审计Web服务器*'
- en: The *Detecting possible XST vulnerabilities* recipe in [Chapter 4](ch04.html
    "Chapter 4. Auditing Web Servers"), *Auditing Web Servers*
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。审计Web服务器")中的*检测可能的XST漏洞*配方，*审计Web服务器*'
- en: Sending UDP payloads by using NSE sockets
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用NSE套接字发送UDP负载
- en: The Nmap Scripting Engine offers a robust library for handling networking I/O
    operations by providing an interface to **Nsock**. Nsock is Nmap's optimized parallel
    sockets library, and its flexibility allows developers to handle raw packets and
    decide whether to use blocking or non-blocking network I/O operations.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap脚本引擎提供了一个强大的库，用于处理网络I/O操作，提供了一个接口到**Nsock**。Nsock是Nmap的优化并行套接字库，其灵活性允许开发人员处理原始数据包，并决定是否使用阻塞或非阻塞的网络I/O操作。
- en: This recipe will go through the process of writing an NSE script that reads
    a payload from a file and sends a UDP packet to exploit a vulnerability in Huawei
    HG5xx routers.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这个教程将介绍编写一个NSE脚本的过程，该脚本从文件中读取有效负载并发送UDP数据包以利用华为HG5xx路由器的漏洞。
- en: How to do it...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Huawei HG5xx routers reveal sensitive information when they receive a special
    packet to UDP port 43690\. This vulnerability caught my attention because this
    is a very popular device, works remotely, and obtains interesting information
    such as the PPPoE credentials, MAC address, and exact software/firmware version.
    Let''s write a script to exploit these devices:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当华为HG5xx路由器接收到UDP端口43690的特殊数据包时，会泄露敏感信息。这个漏洞引起了我的注意，因为这是一个非常流行的设备，可以远程工作，并获取有趣的信息，如PPPoE凭据、MAC地址和确切的软件/固件版本。让我们编写一个脚本来利用这些设备：
- en: 'To start, create the file `huawei-hg5xx-udpinfo.nse` and define the information
    tags:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建文件`huawei-hg5xx-udpinfo.nse`并定义信息标签：
- en: '[PRE20]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Load the required libraries (Nmap 6.x format):'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载所需的库（Nmap 6.x格式）：
- en: '[PRE21]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Define the execution rule:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义执行规则：
- en: '[PRE22]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Create a function to load the UDP payload from a file:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数，从文件中加载UDP负载：
- en: '[PRE23]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create a function that creates an NSE socket and sends the special UDP packet:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个函数，创建一个NSE套接字并发送特殊的UDP数据包：
- en: '[PRE24]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Add the main method, which will load and send the UDP payload:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加主要方法，加载并发送UDP负载：
- en: '[PRE25]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You may run the final script with the following command:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用以下命令运行最终脚本：
- en: '[PRE26]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'A vulnerable device will return the following output:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有漏洞的设备将返回以下输出：
- en: '[PRE27]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How it works...
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Our script `huawei-hg5xx-udpinfo` defined the execution rule with the alias
    `shortport.portnumber(ports, protos, states)`. Our script will run if UDP port
    43690 is either `open`, `open|filtered` or `filtered`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的脚本`huawei-hg5xx-udpinfo`使用别名`shortport.portnumber(ports, protos, states)`定义了执行规则。如果UDP端口43690是`open`、`open|filtered`或`filtered`，我们的脚本将运行：
- en: '[PRE28]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'You can read NSE arguments in a few different ways, but the recommended function
    is `stdnse.get_script_args()`. This allows multiple assignments and supports shorthand
    assignment (you don''t have to type the script name before the argument name):'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以以几种不同的方式读取NSE参数，但推荐的函数是`stdnse.get_script_args()`。这允许多个赋值，并支持快捷赋值（您不必在参数名之前输入脚本名称）：
- en: '[PRE29]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'NSE sockets are managed by the `nmap` library. To create an NSE socket, use
    the function `nmap.new_socket()` and to connect to this socket, use `connect()`:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: NSE套接字由`nmap`库管理。要创建一个NSE套接字，使用函数`nmap.new_socket()`，要连接到这个套接字，使用`connect()`：
- en: '[PRE30]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We send our UDP payload as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发送我们的UDP负载如下：
- en: '[PRE31]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We read the response from the NSE socket:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从NSE套接字中读取响应：
- en: '[PRE32]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'As always, we need to close the sockets when we are done by using the function
    `close()`:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，我们需要在完成时使用`close()`函数关闭套接字：
- en: '[PRE33]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now we can process the received data. In this case I will replace the null
    characters for an output that is easier to read:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以处理接收到的数据。在这种情况下，我将用一个更容易阅读的输出替换空字符：
- en: '[PRE34]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: You can download the complete script from [https://github.com/cldrn/nmap-nse-scripts/blob/master/scripts/6.x/huawei5xx-udp-info.nse](https://github.com/cldrn/nmap-nse-scripts/blob/master/scripts/6.x/huawei5xx-udp-info.nse).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[https://github.com/cldrn/nmap-nse-scripts/blob/master/scripts/6.x/huawei5xx-udp-info.nse](https://github.com/cldrn/nmap-nse-scripts/blob/master/scripts/6.x/huawei5xx-udp-info.nse)下载完整的脚本。
- en: There's more...
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The script `huawei-hg5xx-udpinfo` uses a standard connect-style in which a socket
    is created, the connection is established, data is sent and/or received, and the
    connection is closed.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本`huawei-hg5xx-udpinfo`使用标准的连接样式，其中创建套接字，建立连接，发送和/或接收数据，然后关闭连接。
- en: If you need more control, the `nmap` library also supports reading and writing
    raw packets. The scripting engine uses a `libpcap` wrapper through Nsock to read
    raw packets, and can send them at either the Ethernet or IP layer.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要更多控制，`nmap`库还支持读取和写入原始数据包。脚本引擎使用`libpcap`包装器通过Nsock读取原始数据包，并可以在以太网或IP层发送它们。
- en: When reading raw packets you will need to open the capture device and register
    a listener that will process the packets as they arrive. The functions `pcap_open()`,
    `pcap_receive()`, and `pcap_close()` correspond to opening a capture device, receiving
    packets, and closing the listener. I recommend that you look at the scripts `sniffer-detect`
    ([http://nmap.org/nsedoc/scripts/sniffer-detect.html](http://nmap.org/nsedoc/scripts/sniffer-detect.html)),
    `firewalk` ([http://nmap.org/svn/scripts/firewalk.nse](http://nmap.org/svn/scripts/firewalk.nse)),
    and `ipidseq` ([http://nmap.org/svn/scripts/ipidseq.nse](http://nmap.org/svn/scripts/ipidseq.nse)).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 当读取原始数据包时，您需要打开捕获设备并注册一个监听器，以处理数据包的到达。函数`pcap_open()`、`pcap_receive()`和`pcap_close()`对应于打开捕获设备、接收数据包和关闭监听器。我建议您查看脚本`sniffer-detect`（[http://nmap.org/nsedoc/scripts/sniffer-detect.html](http://nmap.org/nsedoc/scripts/sniffer-detect.html)）、`firewalk`（[http://nmap.org/svn/scripts/firewalk.nse](http://nmap.org/svn/scripts/firewalk.nse)）和`ipidseq`（[http://nmap.org/svn/scripts/ipidseq.nse](http://nmap.org/svn/scripts/ipidseq.nse)）。
- en: 'If you need to send raw packets, create a `dnet` object with `nmap.new_dnet()`
    and, depending on the layer, (IP or Ethernet), use the methods `ip_open()` or
    `ethernet_open()` to open a connection. To actually send the raw packets, use
    the functions `ip_send()` or `ethernet_send()` as appropriate. The following snippets
    from the script `ipidseq.nse` illustrate the procedure:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要发送原始数据包，使用`nmap.new_dnet()`创建一个`dnet`对象，并根据层（IP或以太网），使用`ip_open()`或`ethernet_open()`方法打开连接。要实际发送原始数据包，使用适当的`ip_send()`或`ethernet_send()`函数。来自脚本`ipidseq.nse`的以下片段说明了该过程：
- en: '[PRE35]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: I encourage you to read the entire documentation of these libraries at [http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html).
    If you are working with raw packets, the library `packet` will help you a lot
    too ([http://nmap.org/nsedoc/lib/packet.html)](http://nmap.org/nsedoc/lib/packet.html)).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我鼓励您阅读这些库的整个文档，网址为[http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html)。如果您正在使用原始数据包，库`packet`也会对您有很大帮助([http://nmap.org/nsedoc/lib/packet.html)](http://nmap.org/nsedoc/lib/packet.html))。
- en: Exception handling
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异常处理
- en: The library `nmap` provides an exception handling mechanism for NSE scripts
    that is designed to help with networking I/O tasks.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库为设计用于帮助网络I/O任务的NSE脚本提供了异常处理机制。'
- en: The exception handling mechanism from the `nmap` library works as expected.
    We wrap the code that we want to monitor for exceptions inside a `nmap.try()`
    call. The first value returned by the function indicates the completion status.
    If it returns `false` or `nil`, the second returned value must be an error string.
    The rest of the return values in a successful execution can be set and used as
    you wish. The catch function defined by `nmap.new_try()` will execute when an
    exception is raised.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库的异常处理机制按预期工作。我们将要监视异常的代码包装在`nmap.try()`调用内。函数返回的第一个值表示完成状态。如果返回`false`或`nil`，则第二个返回值必须是错误字符串。在成功执行的其余返回值可以根据需要进行设置和使用。`nmap.new_try()`定义的catch函数将在引发异常时执行。'
- en: 'The following example code is a snippet of the script `mysql-vuln-cve2012-2122.nse`
    ([http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html)).
    In this script, a catch function performs some simple garbage collection if a
    socket is left open:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例代码是脚本`mysql-vuln-cve2012-2122.nse`的片段([http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html))。在此脚本中，catch函数执行一些简单的垃圾收集，如果套接字保持打开状态：
- en: '[PRE36]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The official documentation of the NSE library `nmap` can be found at [http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: NSE库`nmap`的官方文档可在[http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html)找到。
- en: Debugging Nmap scripts
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试Nmap脚本
- en: 'If something unexpected happens, turn on debugging to get additional information.
    Nmap uses the flag `-d` for debugging and you can set any integer between 0 and
    9:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生意外情况，请打开调试以获取更多信息。Nmap使用`-d`标志进行调试，您可以设置0到9之间的任何整数：
- en: '[PRE37]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: See also
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Making HTTP requests to identify vulnerable Trendnet webcams* recipe
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*进行HTTP请求以识别易受攻击的Trendnet网络摄像头*配方'
- en: The *Exploiting a path traversal vulnerability with NSE* recipe
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用NSE利用路径遍历漏洞*配方'
- en: The *Writing a brute force script* recipe
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写蛮力脚本*配方'
- en: The *Working with the web crawling library* recipe
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Web爬行库*配方'
- en: The *Reporting vulnerabilities correctly in NSE scripts* recipe
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在NSE脚本中正确报告漏洞*配方'
- en: The *Writing your own NSE library* recipe
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写自己的NSE库*配方'
- en: The *Working with NSE threads, condition variables, and mutexes in NSE* recipe
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用NSE线程、条件变量和互斥体在NSE中工作*配方'
- en: Exploiting a path traversal vulnerability with NSE
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用NSE利用路径遍历漏洞
- en: Path traversal vulnerabilities exists in many web applications. Nmap NSE gives
    penetration testers the ability to quickly write scripts to exploit them. Lua
    also supports string captures, which help a lot when extracting information using
    patterns with a simpler syntax than regular expressions.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 路径遍历漏洞存在于许多Web应用程序中。Nmap NSE使渗透测试人员能够快速编写脚本来利用它们。Lua还支持字符串捕获，这在使用比正则表达式更简单的语法来提取信息时非常有帮助。
- en: This recipe will teach you how to write an NSE script to exploit a path traversal
    vulnerability existing in some models of TP-Link routers.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将教你如何编写一个NSE脚本，以利用TP-Link路由器某些型号中存在的路径遍历漏洞。
- en: How to do it...
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'We will write an NSE script that exploits a path traversal vulnerability in
    several TP-Link routers. We will take advantage of a few NSE libraries and Lua''s
    string library:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编写一个NSE脚本，利用几个NSE库和Lua的字符串库来利用几个TP-Link路由器中的路径遍历漏洞。
- en: 'Create the file `http-tplink-dir-traversal.nse` and complete the NSE information
    tags:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建文件`http-tplink-dir-traversal.nse`并完成NSE信息标签：
- en: '[PRE38]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Load the required libraries (Nmap 6.x format):'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载所需的库（Nmap 6.x格式）：
- en: '[PRE39]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Define the execution rule with some help of the `shortport` library:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`shortport`库的帮助定义执行规则：
- en: '[PRE40]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Write a function to send the path traversal request and determine if the web
    application is vulnerable:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个函数来发送路径遍历请求并确定Web应用程序是否易受攻击：
- en: '[PRE41]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Read and parse the file out of the response with some help of a Lua capture
    (`.*`):'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取并解析响应中的文件，借助Lua捕获(`.*`)的一些帮助：
- en: '[PRE42]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Finally, execute the script with the following command:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用以下命令执行脚本：
- en: '[PRE43]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'A vulnerable device will produce the following output:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 易受攻击的设备将产生以下输出：
- en: '[PRE44]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: How it works...
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The script `http-tplink-dir-traversal.nse` performs the following tasks to
    exploit the discussed path traversal vulnerability:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本`http-tplink-dir-traversal.nse`执行以下任务以利用讨论的路径遍历漏洞：
- en: First, it sends a path traversal request to determine if an installation is
    vulnerable.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，它发送路径遍历请求以确定安装是否易受攻击。
- en: If the installation is vulnerable, extract the requested file out of the response
    sent by the web server.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果安装易受攻击，则从Web服务器发送的响应中提取请求的文件。
- en: Report the vulnerability to the user and provide the proof of concept.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向用户报告漏洞并提供概念验证。
- en: 'In this case, the library `http` was required to send the HTTP request containing
    the path traversal payload. To determine if the device is vulnerable, we request
    the file `/etc/shadow`, because we know this file exists in all of the devices,
    and a root account must exist in it:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，需要`http`库来发送包含路径遍历有效负载的HTTP请求。为了确定设备是否易受攻击，我们请求文件`/etc/shadow`，因为我们知道所有设备中都存在此文件，并且其中必须存在一个root帐户：
- en: '[PRE45]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The response should contain the requested file inside its body, after the closing
    script tag `</SCRIPT>`:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 响应应该包含请求的文件，位于结束脚本标记`</SCRIPT>`之后的正文中：
- en: '![How it works...](img/7485_09_01.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/7485_09_01.jpg)'
- en: 'To confirm exploitability we only need to match the response body to the string
    "root:":'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 要确认可利用性，我们只需要将响应主体与字符串"root:"进行匹配：
- en: '[PRE46]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Lua captures allow developers to extract strings matching the given patterns.
    They are very helpful and I highly recommend that you play around with them ([http://www.lua.org/pil/20.3.html](http://www.lua.org/pil/20.3.html)):'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Lua捕获允许开发人员提取与给定模式匹配的字符串。它们非常有帮助，我强烈建议您尝试一下（[http://www.lua.org/pil/20.3.html](http://www.lua.org/pil/20.3.html)）：
- en: '[PRE47]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Once we confirm the vulnerability, it is recommended to report it using the
    library `vulns`. This library was created to unify the output format used by the
    various NSE scripts. It supports several fields to provide all of the vulnerability
    details in an organized manner:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认漏洞，建议使用`vulns`库进行报告。该库旨在统一各种NSE脚本使用的输出格式。它支持多个字段，以有组织的方式提供所有漏洞详细信息：
- en: '[PRE48]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The following states are defined in the `vulns` library:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在`vulns`库中定义了以下状态：
- en: '[PRE49]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'To return the vulnerability report, use `make_output(vuln)`. This function
    will return a vulnerability report if the state was set to anything except `vulns.STATE.NOT_VULN`:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要返回漏洞报告，请使用`make_output(vuln)`。如果状态设置为除`vulns.STATE.NOT_VULN`之外的任何值，此函数将返回漏洞报告：
- en: '[PRE50]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Check the script output from the previous example to see what a vulnerability
    report looks like when using the NSE library `vulns`. Visit the official documentation
    of the library to learn more about the possible report fields and their usage:
    [http://nmap.org/nsedoc/lib/vulns.html](http://nmap.org/nsedoc/lib/vulns.html).'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 检查前面示例中的脚本输出，以查看使用NSE库`vulns`时漏洞报告的外观。访问该库的官方文档，了解更多可能的报告字段及其用法：[http://nmap.org/nsedoc/lib/vulns.html](http://nmap.org/nsedoc/lib/vulns.html)。
- en: There's more...
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: When writing NSE scripts to exploit path traversal vulnerabilities, remember
    that IPS/IDS vendors will create patches to identify your detection probes. If
    possible, I recommend you use the stealthiest encoding scheme supported. In the
    previous example, no other encoding was read correctly in the application and
    we had no choice but to use the well known pattern `"../"` which will be detected
    by any decent WAF/IPS/IDS.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写NSE脚本以利用路径遍历漏洞时，请记住IPS/IDS供应商将创建补丁来识别您的检测探针。如果可能的话，我建议您使用支持的最隐秘的编码方案。在上一个示例中，应用程序没有正确读取其他编码，我们别无选择，只能使用众所周知的模式`"../"`，这将被任何体面的WAF/IPS/IDS检测到。
- en: 'I recommend the tool Dotdotpwn ([http://dotdotpwn.blogspot.com/](http://dotdotpwn.blogspot.com/))
    and its module `payload` to locate obscure encodings when exploiting path traversal
    vulnerabilities. Ideally, you could also write a small function that randomly
    uses a different path traversal pattern with each request:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议使用工具Dotdotpwn（[http://dotdotpwn.blogspot.com/](http://dotdotpwn.blogspot.com/)）及其模块`payload`来定位利用路径遍历漏洞时的模糊编码。理想情况下，您还可以编写一个小函数，随机使用不同的路径遍历模式来处理每个请求：
- en: '[PRE51]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Debugging NSE scripts
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试NSE脚本
- en: 'If something unexpected happens, turn on debugging to get additional information.
    Nmap uses the flag `-d` for debugging and you can set any integer between 0 and
    9:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生意外情况，请打开调试以获取额外信息。Nmap使用`-d`标志进行调试，您可以设置0到9之间的任何整数：
- en: '[PRE52]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Setting the user agent pragmatically
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 以编程方式设置用户代理
- en: 'There are some packet filtering products that block requests using Nmap''s
    default HTTP user agent. You can use a different user agent value by setting the
    argument `http.useragent`:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些数据包过滤产品会阻止使用Nmap的默认HTTP用户代理的请求。您可以通过设置参数`http.useragent`来使用不同的用户代理值：
- en: '[PRE53]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'To set the user agent in your NSE script you can pass the header field:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您的NSE脚本中设置用户代理，可以传递头字段：
- en: '[PRE54]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: HTTP pipelining
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HTTP管线
- en: Some web server configurations support encapsulation of more than one HTTP request
    in a single packet. This may speed up the execution of an NSE HTTP script and
    it is recommended that you use it if the web server supports it. The `http` library,
    by default, tries to pipeline 40 requests and automatically adjusts that number
    according to the network conditions and the `Keep-Alive` header.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 一些Web服务器配置支持将一个以上的HTTP请求封装在单个数据包中。这可能加快NSE HTTP脚本的执行速度，建议在Web服务器支持的情况下使用。默认情况下，`http`库尝试对40个请求进行管线处理，并根据网络条件和`Keep-Alive`头自动调整该数字。
- en: 'Users will need to set the script argument `http.pipeline` to adjust this value:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 用户需要将脚本参数`http.pipeline`设置为调整此值：
- en: '[PRE55]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'To implement HTTP pipelining in your NSE scripts, use the functions `http.pipeline_add()`
    and `http.pipeline()`. First, initiate a variable that will hold the requests:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您的NSE脚本中实现HTTP管线，请使用函数`http.pipeline_add()`和`http.pipeline()`。首先，初始化一个变量来保存请求：
- en: '[PRE56]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Add requests to the pipeline with `http.pipeline_add()`:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`http.pipeline_add()`将请求添加到管道中：
- en: '[PRE57]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'When you have finished adding requests, execute the pipe with `http.pipeline()`:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 添加请求后，使用`http.pipeline()`执行管道：
- en: '[PRE58]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The variable results will contain the number of response objects added to the
    HTTP request queue. To access them, you can simply iterate through the object:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 变量结果将包含添加到HTTP请求队列的响应对象的数量。要访问它们，您可以简单地遍历对象：
- en: '[PRE59]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: See also
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Making HTTP requests to identify vulnerable Trendnet webcams* recipe
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*进行HTTP请求以识别易受攻击的Trendnet网络摄像头*配方'
- en: The *Sending UDP payloads by using NSE sockets* recipe
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用NSE套接字发送UDP负载*配方'
- en: The *Detecting web application firewalls* recipe [Chapter 4](ch04.html "Chapter 4. Auditing
    Web Servers"), *Auditing Web Servers*
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*检测Web应用程序防火墙*配方[第4章](ch04.html "第4章。审计Web服务器"), *审计Web服务器*'
- en: The *Detecting possible XST vulnerabilities* recipe [Chapter 4](ch04.html "Chapter 4. Auditing
    Web Servers"), *Auditing Web Servers*
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*检测可能的XST漏洞*配方[第4章](ch04.html "第4章。审计Web服务器"), *审计Web服务器*'
- en: The *Writing a brute force script* recipe
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写暴力脚本*配方'
- en: The *Working with the web crawling library* recipe
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Web爬行库*配方'
- en: The *Reporting vulnerabilities correctly in NSE scripts* recipe
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在NSE脚本中正确报告漏洞*配方'
- en: Writing a brute force script
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写暴力脚本
- en: Brute force password auditing has become a major strength of the Nmap Scripting
    Engine. The library `brute` allows developers to quickly write scripts to perform
    their custom brute force attacks. Nmap offers libraries such as `unpwd`, which
    give access to a flexible username and password database to further customize
    the attacks, and the library `creds`, which provides an interface to manage the
    valid credentials found.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力破解密码审计已经成为Nmap脚本引擎的一个主要优势。库`brute`允许开发人员快速编写脚本来执行他们的自定义暴力破解攻击。Nmap提供了诸如`unpwd`这样的库，它可以访问灵活的用户名和密码数据库，以进一步定制攻击，以及`creds`库，它提供了一个接口来管理找到的有效凭据。
- en: This recipe will guide you through the process of writing your own brute force
    script by using the NSE libraries `brute`, `unpwdb`, and `creds` to perform brute
    force password auditing against Wordpress installations.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱将指导您通过使用NSE库`brute`，`unpwdb`和`creds`来执行针对Wordpress安装的暴力破解密码审计的过程。
- en: How to do it...
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s write an NSE script to brute force Wordpress accounts:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写一个NSE脚本来暴力破解Wordpress帐户：
- en: 'Create the file `http-wordpress-brute.nse` and complete the information tags:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建文件`http-wordpress-brute.nse`并填写信息标签：
- en: '[PRE60]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Load the required libraries (Nmap 6.x format):'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载所需的库（Nmap 6.x格式）：
- en: '[PRE61]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'NSE scripts that use the brute engine need to implement its `Driver` class
    as follows:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用暴力引擎的NSE脚本需要按照以下方式实现其`Driver`类：
- en: '[PRE62]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Let''s create the corresponding functions relevant to our script:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建与我们的脚本相关的相应函数：
- en: 'The `constructor` function takes care of reading the script arguments and setting
    any other options the script might need:'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`constructor`函数负责读取脚本参数并设置脚本可能需要的任何其他选项：'
- en: '[PRE63]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The `connect` function can be left empty because in this case there is no need
    to connect to a socket; we are performing a brute force password auditing attack
    against an HTTP service (the library `http` takes care of opening and closing
    the necessary sockets when used inside our next login function):'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`connect`函数可以留空，因为在这种情况下不需要连接到套接字；我们正在对HTTP服务执行暴力破解密码审计攻击（库`http`在我们的下一个登录函数中使用时负责打开和关闭必要的套接字）：'
- en: '[PRE64]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'The `disconnect` function also can be left empty for this script:'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disconnect`函数也可以在这个脚本中留空：'
- en: '[PRE65]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The `check` function is used as a sanity check before we begin our brute force
    password attack. Note that this function was marked as deprecated recently, and
    these checks will need to be moved to the main section in future versions:'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check`函数用作在我们开始暴力破解密码攻击之前的健全性检查。请注意，这个函数最近被标记为不推荐使用，这些检查将需要在将来的版本中移动到主要部分：'
- en: '[PRE66]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'And finally the `login` function:'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后是`login`函数：
- en: '[PRE67]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'We left the main sectionof the code to initialize, configure, and start the
    brute engine:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们留下了代码的主要部分来初始化、配置和启动暴力引擎：
- en: '[PRE68]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: How it works...
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'The library `brute` provides developers with an organized interface for writing
    NSE scripts that perform brute force password auditing. The number of brute scripts
    have grown a lot and currently NSE can perform brute force attacks against many
    applications, services, and protocols: Apache Jserv, BackOrifice, Joomla, Citrix
    PN Web Agent XML, CVS, DNS, Domino Console, Dpap, IBM DB2, Wordpress, FTP, HTTP,
    Asterisk IAX2, IMAP, Informix Dynamic Server, IRC, iSCSI, LDAP, Couchbase Membase,
    RPA Tech Mobile Mouse, Metasploit msgrpc, Metasploit XMLRPC, MongoDB, MSSQL, MySQL,
    Nessus daemon, Netbus, Nexpose, Nping Echo, OpenVAS, Oracle, PCAnywhere, PostgreSQL,
    POP3, redis, rlogin, rsync, rpcap, rtsp, SIP, Samba, SMTP, SNMP, SOCKS, SVN, Telnet,
    VMWare Auth daemon, and XMPP.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 库`brute`为开发人员提供了一个有组织的接口，用于编写执行暴力破解密码审计的NSE脚本。暴力脚本的数量已经大大增加，目前NSE可以对许多应用程序、服务和协议进行暴力破解攻击：Apache
    Jserv、BackOrifice、Joomla、Citrix PN Web Agent XML、CVS、DNS、Domino Console、Dpap、IBM
    DB2、Wordpress、FTP、HTTP、Asterisk IAX2、IMAP、Informix Dynamic Server、IRC、iSCSI、LDAP、Couchbase
    Membase、RPA Tech Mobile Mouse、Metasploit msgrpc、Metasploit XMLRPC、MongoDB、MSSQL、MySQL、Nessus
    daemon、Netbus、Nexpose、Nping Echo、OpenVAS、Oracle、PCAnywhere、PostgreSQL、POP3、redis、rlogin、rsync、rpcap、rtsp、SIP、Samba、SMTP、SNMP、SOCKS、SVN、Telnet、VMWare
    Auth daemon和XMPP。
- en: 'To use this library, we needed to create a `Driver` class and pass it to the
    brute engine as an argument. Each login attempt will create a new instance of
    this class:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这个库，我们需要创建一个`Driver`类并将其作为参数传递给暴力引擎。每次登录尝试都会创建这个类的一个新实例：
- en: '[PRE69]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: In the script `http-wordpress-brute`, the functions `connect()` and `disconnect()`
    returned `true` all the time because a connection did not need to be established
    beforehand.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本`http-wordpress-brute`中，函数`connect()`和`disconnect()`始终返回`true`，因为事先不需要建立连接。
- en: 'The `login` function should return a Boolean to indicate its status. If the
    login attempt was successful it should also return an `Account` object:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`login`函数应返回一个布尔值来指示其状态。如果登录尝试成功，它还应返回一个`Account`对象：'
- en: '[PRE70]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: In this script we are also storing the credentials by using the library `creds`.
    This allows other NSE scripts to access them, and users can even generate additional
    reports based on the results.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个脚本中，我们还通过使用库`creds`来存储凭据。这允许其他NSE脚本访问它们，用户甚至可以根据结果生成额外的报告。
- en: '[PRE71]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: There's more...
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The NSE libraries `unpwdb` and `brute` have several script arguments that users
    can tune for their brute force password auditing attacks.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: NSE库`unpwdb`和`brute`有几个脚本参数，用户可以调整这些参数以进行暴力破解密码审计攻击。
- en: 'To use different username and password lists, set the arguments `userdb` and
    `passdb` respectively:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用不同的用户名和密码列表，分别设置参数`userdb`和`passdb`：
- en: '[PRE72]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'To quit after finding one valid account, use the argument `brute.firstOnly`:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 要在找到一个有效帐户后退出，请使用参数`brute.firstOnly`：
- en: '[PRE73]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'To set a different timeout limit, use the argument `unpwd.timelimit`. To run
    it indefinitely, set it to 0:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置不同的超时限制，请使用参数`unpwd.timelimit`。要无限期运行，将其设置为0：
- en: '[PRE74]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'The official documentation for these libraries can be found at the following
    sites:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 这些库的官方文档可以在以下网站找到：
- en: '[http://nmap.org/nsedoc/lib/brute.html](http://nmap.org/nsedoc/lib/brute.html)'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://nmap.org/nsedoc/lib/brute.html](http://nmap.org/nsedoc/lib/brute.html)'
- en: '[http://nmap.org/nsedoc/lib/creds.html](http://nmap.org/nsedoc/lib/creds.html)'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://nmap.org/nsedoc/lib/creds.html](http://nmap.org/nsedoc/lib/creds.html)'
- en: '[http://nmap.org/nsedoc/lib/unpwdb.html](http://nmap.org/nsedoc/lib/unpwdb.html)'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://nmap.org/nsedoc/lib/unpwdb.html](http://nmap.org/nsedoc/lib/unpwdb.html)'
- en: Debugging NSE scripts
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试NSE脚本
- en: 'If something unexpected happens, turn on debugging to get additional information.
    Nmap uses the flag `-d` for debugging and you can set any integer between 0 and
    9:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生意外情况，请打开调试以获取更多信息。Nmap使用`-d`标志进行调试，您可以设置0到9之间的任何整数：
- en: '[PRE75]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Exception handling
  id: totrans-287
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异常处理
- en: The library `nmap` provides an exception handling mechanism for NSE scripts,
    which is designed to help with networking I/O tasks.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库为NSE脚本提供了一个异常处理机制，旨在帮助处理网络I/O任务。'
- en: The exception handling mechanism from the `nmap` library works as expected.
    We wrap the code that we want to monitor for exceptions inside a `nmap.try()`
    call. The first value returned by the function indicates the completion status.
    If it returns `false` or `nil`, the second returned value must be an error string.
    The rest of the return values in a successful execution can be set and used as
    you wish. The `catch` function defined by `nmap.new_try()` will execute when an
    exception is raised.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库中的异常处理机制运行正常。我们将要监视异常的代码包装在`nmap.try()`调用内。函数返回的第一个值表示完成状态。如果返回`false`或`nil`，则第二个返回值必须是错误字符串。在成功执行的返回值的其余部分可以设置和使用。由`nmap.new_try()`定义的`catch`函数将在引发异常时执行。'
- en: 'The following example is a code snippet of the script `mysql-vuln-cve2012-2122.nse`
    ([http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html)).
    In this script a `catch` function performs some simple garbage collection if a
    socket is left open:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例是脚本`mysql-vuln-cve2012-2122.nse`的代码片段([http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html))。在此脚本中，`catch`函数执行一些简单的垃圾收集，如果套接字保持打开状态：
- en: '[PRE76]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: The official documentation of the NSE library `nmap` can be found at [http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html).
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: NSE库`nmap`的官方文档可以在[http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html)找到。
- en: Brute modes
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Brute模式
- en: 'The `brute` library supports different modes that alter the combinations used
    in the attack. The available modes are:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '`brute`库支持不同的模式，可以改变攻击中使用的组合。可用的模式有：'
- en: '`user`: For each user listed in `userdb`, every password in `passdb` will be
    tried'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user`：对于`userdb`中列出的每个用户，将尝试`passdb`中的每个密码'
- en: '[PRE77]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '`pass`: For each password listed in `passdb`, every user in `userdb` will be
    tried'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pass`：对于`passdb`中列出的每个密码，将尝试`userdb`中的每个用户'
- en: '[PRE78]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '`creds`: This requires the additional argument `brute.credfile`'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`creds`：这需要额外的参数`brute.credfile`'
- en: '[PRE79]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: See also
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Making HTTP requests to identify vulnerable Trendnet webcams* recipe
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*利用HTTP请求识别易受攻击的Trendnet网络摄像头*配方'
- en: The *Brute forcing HTTP authentication* recipe in [Chapter 4](ch04.html "Chapter 4. Auditing
    Web Servers"), *Auditing Web Servers*
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章 审计Web服务器")中的*审计Web服务器*中的*暴力破解HTTP身份验证*配方
- en: The *Brute-force password auditing Wordpress installations* recipe in [Chapter
    4](ch04.html "Chapter 4. Auditing Web Servers"), *Auditing Web Servers*
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章 审计Web服务器")中的*审计Web服务器*中的*Brute-force密码审计Wordpress安装*配方
- en: The *Brute-force password auditing Joomla installations* recipe in [Chapter
    4](ch04.html "Chapter 4. Auditing Web Servers"), *Auditing Web Servers*
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章 审计Web服务器")中的*审计Web服务器*中的*Brute-force密码审计Joomla安装*配方
- en: The *Sending UDP payloads by using NSE sockets* recipe
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用NSE套接字发送UDP有效载荷*配方'
- en: The *Exploiting a path traversal vulnerability with NSE* recipe
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章 审计Web服务器")中的*审计Web服务器*中的*利用NSE的路径遍历漏洞*配方
- en: The *Writing a brute force script* recipe
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写暴力破解脚本*配方'
- en: The *Working with the web crawling library* recipe
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Web爬行库*配方'
- en: The *Reporting vulnerabilities correctly in NSE scripts* recipe
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在NSE脚本中正确报告漏洞*配方'
- en: The *Writing your own NSE library* recipe
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写自己的NSE库*配方'
- en: Working with the web crawling library
  id: totrans-312
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Web爬行库
- en: When pentesting web applications, there are certain checks that need to be done
    to every file in a web server. Tasks such as looking for forgotten backup files
    may reveal the application source code or database passwords. The Nmap Scripting
    Engine supports web crawling to help us with tasks that require a list of existing
    files on a web server.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试Web应用程序时，需要对Web服务器中的每个文件进行某些检查。诸如查找遗忘的备份文件之类的任务可能会显示应用程序源代码或数据库密码。 Nmap脚本引擎支持Web爬行，以帮助我们处理需要Web服务器上现有文件列表的任务。
- en: This recipe will show you how to write an NSE script that will crawl a web server
    looking for files with a `.php` extension and perform an injection test via the
    variable `$_SERVER["PHP_SELF"]` to find reflected Cross Site Scripting vulnerabilities.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将向您展示如何编写一个NSE脚本，该脚本将爬行Web服务器，寻找具有`.php`扩展名的文件，并通过变量`$_SERVER["PHP_SELF"]`执行注入测试，以查找反射型跨站脚本漏洞。
- en: How to do it...
  id: totrans-315
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'A common task that some major security scanners miss is to locate reflected
    cross-site scripting vulnerabilities in PHP files via the variable `$_SERVER["PHP_SELF"]`.
    The web crawler library `httpspider` comes handy when automating this task as
    follows:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 一项一些主要安全扫描程序忽略的常见任务是通过变量`$_SERVER["PHP_SELF"]`在PHP文件中查找反射型跨站脚本漏洞。在自动化此任务时，Web爬行库`httpspider`非常方便，如下所示：
- en: 'Create the script file `http-phpself-xss.nse` and complete the information
    tags:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建脚本文件`http-phpself-xss.nse`并填写信息标签：
- en: '[PRE80]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Load the required libraries (Nmap 6.x format):'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载所需的库（Nmap 6.x格式）：
- en: '[PRE81]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Define that the script should run every time it encounters an HTTP server with
    the alias `shortport.http`:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义脚本应在遇到别名为`shortport.http`的HTTP服务器时运行：
- en: '[PRE82]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Write the function that will receive a URI from the crawler and send an injection
    probe:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个函数，该函数将从爬虫接收一个URI并发送一个注入探针：
- en: '[PRE83]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Add the function that will check the response body to determine if a PHP file
    is vulnerable or not:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个函数，用于检查响应主体，以确定PHP文件是否易受攻击：
- en: '[PRE84]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'In the main section of the script, we will add the code that reads the script
    arguments, initializes the `http` crawler, sets the vulnerability information,
    and iterates through the pages to launch a probe if a PHP file is found:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在脚本的主要部分，我们将添加读取脚本参数、初始化`http`爬虫、设置漏洞信息，并迭代页面以启动探测（如果找到PHP文件）的代码：
- en: '[PRE85]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'To run the script, use the following command:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行脚本，请使用以下命令：
- en: '[PRE86]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'If a PHP file is vulnerable to Cross Site Scripting via `$_SERVER["PHP_SELF"]`
    injection, the output will look something like this:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 如果PHP文件通过`$_SERVER["PHP_SELF"]`注入易受跨站脚本攻击，输出将类似于这样：
- en: '[PRE87]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: How it works...
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The script `http-phpself-xss` depends on the library `httpspider`. This library
    provides an interface to a web crawler that returns an iterator to the discovered
    URIs. This library is extremely useful when conducting web penetration tests as
    it speeds up several tests that otherwise will have to be done manually or with
    a third-party tool.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本`http-phpself-xss`依赖于库`httpspider`。该库提供了一个返回发现的URI迭代器的Web爬虫接口。在进行Web渗透测试时，该库非常有用，因为它加快了几项测试，否则将不得不手动完成或使用第三方工具。
- en: PHP offers developers a variable named `$_SERVER["PHP_SELF"]` to retrieve the
    file name of the executing PHP script. Unfortunately, it is a value that can be
    tampered with user-supplied data, and many developers use it unsafely in their
    scripts, causing reflected **Cross Site Scripting** (**XSS**) vulnerabilities.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: PHP为开发人员提供了一个名为`$_SERVER["PHP_SELF"]`的变量，用于检索执行PHP脚本的文件名。不幸的是，这是一个可以被用户提供的数据篡改的值，许多开发人员在其脚本中不安全地使用它，导致反射型**跨站脚本**（**XSS**）漏洞。
- en: 'First, we initialize a web crawler. We set the starting path and the timeout
    value:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们初始化一个Web爬虫。我们设置起始路径和超时值：
- en: '[PRE88]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'The behavior of the web crawler can be modified with the following library
    arguments:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: Web爬虫的行为可以通过以下库参数进行修改：
- en: '`url`: Base URL at which to start spidering.'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url`：开始爬行的基本URL。'
- en: '`maxpagecount`: The maximum number of pages to visit before quitting.'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`maxpagecount`：在退出之前要访问的最大页面数。'
- en: '`useheadfornonwebfiles`: Save bandwidth by using `HEAD` when a binary file
    is found. The list of files not treated as binaries is defined in the `file /nselib/data/http-web-file-extensions.lst`.'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`useheadfornonwebfiles`：当发现二进制文件时，通过使用`HEAD`来节省带宽。未被视为二进制文件的文件列表在`file /nselib/data/http-web-file-extensions.lst`中定义。'
- en: '`noblacklist`: Don''t load the blacklist rules. This option is not recommended
    as it will download all files, including binaries.'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`noblacklist`：不加载黑名单规则。不建议使用此选项，因为它将下载所有文件，包括二进制文件。'
- en: '`withinhost`: Filters out URIs outside the same host.'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`withinhost`：过滤掉不在同一主机上的URI。'
- en: '`withindomain`: Filters out URIs outside the same domain.'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`withindomain`：过滤掉不在同一域中的URI。'
- en: 'We iterate through the URIs to find files with the extension `.php`:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过URI迭代查找扩展名为`.php`的文件：
- en: '[PRE89]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Each URI with the extension `.php` is processed and an injection probe is sent
    for each one of them, by using the function `http.get()`:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 处理每个扩展名为`.php`的URI，并使用`http.get()`函数为每个URI发送一个注入探测：
- en: '[PRE90]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'The `check_probe_response()` function simply looks for the injected text in
    the response with some help from `string.find()`:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '`check_probe_response()`函数只是在响应中查找注入的文本，借助`string.find()`的一些帮助：'
- en: '[PRE91]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'After execution, we check the table where we stored the vulnerable URIs, and
    report them as extra information:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后，我们检查存储有漏洞URI的表，并将它们报告为额外信息：
- en: '[PRE92]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: There's more...
  id: totrans-353
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'It is recommended you include a message to notify users about the settings
    used by the web crawler as it may have quit before completing a test. The function
    `crawler:getLimitations()` will return a string that displays the crawler settings:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 建议您包含一条消息，通知用户有关Web爬虫使用的设置，因为它可能在完成测试之前退出。函数`crawler:getLimitations()`将返回一个显示爬虫设置的字符串：
- en: '[PRE93]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: The official documentation for the library `httpspider` can be found at [http://nmap.org/nsedoc/lib/httpspider.html](http://nmap.org/nsedoc/lib/httpspider.html).
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 库`httpspider`的官方文档可以在[http://nmap.org/nsedoc/lib/httpspider.html](http://nmap.org/nsedoc/lib/httpspider.html)找到。
- en: Debugging NSE scripts
  id: totrans-357
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试NSE脚本
- en: 'If something unexpected happens, turn on debugging to get additional information.
    Nmap uses the flag `-d` for debugging and you can set any integer between 0 and
    9:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生意外情况，请打开调试以获取额外信息。Nmap使用`-d`标志进行调试，您可以设置0到9之间的任何整数：
- en: '[PRE94]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Setting the user agent pragmatically
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过设置用户代理来设置用户代理
- en: 'There are some packet filtering products that block requests using Nmap''s
    default HTTP user agent. You can use a different user agent value by setting the
    argument `http.useragent`:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些数据包过滤产品会阻止使用Nmap的默认HTTP用户代理的请求。您可以通过设置参数`http.useragent`来使用不同的用户代理值：
- en: '[PRE95]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'To set the user agent in your NSE script you can pass the `header` field:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您的NSE脚本中设置用户代理，可以传递`header`字段：
- en: '[PRE96]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: HTTP pipelining
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HTTP管线处理
- en: Some web server configurations support encapsulation of more than one HTTP request
    in a single packet. This may speed up the execution of an NSE HTTP script and
    it is recommended if the web server supports it. The `http` library, by default,
    tries to pipeline 40 requests and automatically adjusts that number according
    to the network conditions and the `Keep-Alive` header.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 一些Web服务器配置支持在单个数据包中封装多个HTTP请求。这可能会加快NSE HTTP脚本的执行速度，如果Web服务器支持的话，建议使用。默认情况下，`http`库尝试对40个请求进行管线处理，并根据网络条件和`Keep-Alive`标头自动调整该数字。
- en: 'Users will need to set the script argument `http.pipeline` to adjust this value:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 用户需要设置脚本参数`http.pipeline`来调整此值：
- en: '[PRE97]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'To implement HTTP pipelining in your NSE scripts, use the functions `http.pipeline_add()`
    and `http.pipeline()`. First, initiate a variable that will hold the requests:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您的NSE脚本中实现HTTP管线处理，请使用函数`http.pipeline_add()`和`http.pipeline()`。首先，初始化一个变量来保存请求：
- en: '[PRE98]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Add requests to the pipeline with `http.pipeline_add()`:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`http.pipeline_add()`将请求添加到管道中：
- en: '[PRE99]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'When you have finished adding requests, execute the pipe with `http.pipeline()`:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 当您添加请求完成后，使用`http.pipeline()`执行管道：
- en: '[PRE100]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'The variable results will contain the number of response objects added to the
    HTTP request queue. To access them you can simply iterate through the object:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 变量结果将包含添加到HTTP请求队列的响应对象的数量。要访问它们，您可以简单地遍历对象：
- en: '[PRE101]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Exception handling
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异常处理
- en: The library `nmap` provides an exception handling mechanism for NSE scripts
    designed to help with networking I/O tasks.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库为设计用于帮助网络I/O任务的NSE脚本提供了异常处理机制。'
- en: The exception handling mechanism from the `nmap` library works as expected.
    We wrap the code that we want to monitor for exceptions inside a `nmap.try()`
    call. The first value returned by the function indicates the completion status.
    If it returns `false` or `nil`, the second returned value must be an error string.
    The rest of the return values in a successful execution can be set and used as
    you wish. The `catch` function defined by `nmap.new_try()` will execute when an
    exception is raised.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库的异常处理机制按预期工作。我们将要监视异常的代码包装在`nmap.try()`调用内。函数返回的第一个值表示完成状态。如果返回`false`或`nil`，则第二个返回值必须是错误字符串。在成功执行的其余返回值可以根据需要设置和使用。由`nmap.new_try()`定义的`catch`函数将在引发异常时执行。'
- en: 'The following example is a code snippet of the script `mysql-vuln-cve2012-2122.nse`
    ([http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html)).
    In this script a `catch` function performs some simple garbage collection if a
    socket is left opened:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例是脚本`mysql-vuln-cve2012-2122.nse`的代码片段（[http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html)）。在此脚本中，`catch`函数执行一些简单的垃圾收集，如果套接字保持打开状态：
- en: '[PRE102]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: The official documentation of the NSE library `nmap` can be found at [http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html).
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: NSE库`nmap`的官方文档可以在[http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html)找到。
- en: See also
  id: totrans-383
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Making HTTP requests to identify vulnerable Trendnet webcams* recipe
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别易受攻击的Trendnet网络摄像头的HTTP请求的制作
- en: The *Sending UDP payloads by using NSE sockets* recipe
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用NSE套接字发送UDP有效载荷的食谱
- en: The *Exploiting a path traversal vulnerability with NSE* recipe
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用路径遍历漏洞与NSE的食谱
- en: The *Writing a brute force script* recipe
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写暴力脚本的食谱
- en: The *Reporting vulnerabilities correctly in NSE scripts* recipe
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在NSE脚本中正确报告漏洞的食谱
- en: The *Writing your own NSE library* recipe
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 撰写自己的NSE库食谱
- en: Reporting vulnerabilities correctly in NSE scripts
  id: totrans-390
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在NSE脚本中正确报告漏洞
- en: The Nmap Scripting Engine is perfect for detecting vulnerabilities, and for
    this reason there are already several exploitation scripts included with Nmap.
    Not too long ago, each developer used his own criteria of what output to include
    when reporting these vulnerabilities. To address this issue and unify the output
    format and the amount of information provided, the library `vulns` was introduced.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap脚本引擎非常适合检测漏洞，因此Nmap已经包含了几个利用脚本。不久之前，每个开发人员都使用自己的标准来报告这些漏洞时要包含的输出。为了解决这个问题并统一输出格式和提供的信息量，引入了`vulns`库。
- en: This recipe will teach you how to report vulnerabilities correctly in your NSE
    scripts by using the library `vulns`.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱将教你如何通过使用`vulns`库在你的NSE脚本中正确报告漏洞。
- en: How to do it...
  id: totrans-393
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The correct way to report vulnerabilities in NSE is through the library `vulns`.
    Let''s review the process of reporting a vulnerability:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 在NSE中正确报告漏洞的正确方法是通过`vulns`库。让我们回顾一下报告漏洞的过程：
- en: 'Load the library `vulns` (Nmap 6.x format):'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载`vulns`库（Nmap 6.x格式）：
- en: '[PRE103]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'Create a `vuln` object table. Pay special attention to the `state` field:'
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`vuln`对象表。特别注意`state`字段：
- en: '[PRE104]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'Create a report object and report the vulnerability:'
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建报告对象并报告漏洞：
- en: '[PRE105]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'If the state is set to indicate if a host is vulnerable, Nmap will include
    a similar vulnerability report:'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果状态设置为指示主机是否易受攻击，Nmap将包括类似的漏洞报告：
- en: '[PRE106]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: How it works...
  id: totrans-403
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The library `vulns` was introduced by Djalal Harouni and Henri Doreau to unify
    the output returned by NSE scripts that performed vulnerability checks. This library
    also manages and keeps track of the security checks done, a useful feature for
    users who would like to list the security checks even if the target was not vulnerable.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '`vulns`库由Djalal Harouni和Henri Doreau引入，用于统一执行漏洞检查的NSE脚本返回的输出。该库还管理和跟踪已完成的安全检查，这对于希望列出安全检查的用户来说是一个有用的功能，即使目标不易受攻击。'
- en: 'The vulnerability table can contain the following fields:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 漏洞表可以包含以下字段：
- en: '`title`: String indicating the title of the vulnerability. This field is mandatory.'
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`title`：指示漏洞标题的字符串。此字段是必需的。'
- en: '`state`: This field indicates different possible states of the vulnerability
    check. This field is mandatory. See the table `vulns.STATE` for all possible values.'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`state`：此字段指示漏洞检查的不同可能状态。此字段是必需的。查看表`vulns.STATE`以获取所有可能的值。'
- en: '`IDS`: Field that stores CVE and BID IDs. It is used to automatically generate
    advisory URLs.'
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IDS`：存储CVE和BID ID的字段。它用于自动生成咨询URL。'
- en: '`risk_factor`: String that indicates the risk factor: `High`/`Medium`/`Low`.'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`risk_factor`：表示风险因素的字符串：`高`/`中`/`低`。'
- en: '`scores`: Field that stores CVSS and CVSSv2 scores.'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scores`：存储CVSS和CVSSv2分数的字段。'
- en: '`description`: Description of the vulnerability.'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`：漏洞描述。'
- en: '`dates`: Field of dates relevant to this vulnerability.'
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dates`：与此漏洞相关的日期字段。'
- en: '`check_results`: String or list of strings used to store returned results.'
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check_results`：用于存储返回结果的字符串或字符串列表。'
- en: '`exploit_results`: String or list of strings used to store the exploitation
    results.'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exploit_results`：用于存储利用结果的字符串或字符串列表。'
- en: '`extra_info`: String or list of strings used to store additional information.'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`extra_info`：用于存储附加信息的字符串或字符串列表。'
- en: '`references`: List of URIs to be included as references. The library will automatically
    generate URIs for CVE and BID links if the table IDS was set.'
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`references`：要包括为引用的URI列表。如果设置了IDS表，库将自动生成CVE和BID链接的URI。'
- en: 'As you saw previously, the procedure to report vulnerabilities within NSE is
    pretty straightforward. First, we create a table containing all of the vulnerability
    information:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您之前看到的，报告NSE中的漏洞非常简单。首先，我们创建一个包含所有漏洞信息的表：
- en: '[PRE107]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'To report back to the users, we need a report object:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 要向用户报告，我们需要一个报告对象：
- en: '[PRE108]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: The last function that you should use in NSE scripts that include this library
    is `make_output()`. This will generate and display the report if the target was
    found to be vulnerable, or will return `nil` if it wasn't.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 包含此库的NSE脚本中应使用的最后一个函数是`make_output()`。如果发现目标易受攻击，它将生成并显示报告，或者如果没有发现目标易受攻击，则返回`nil`。
- en: '[PRE109]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: If you would like to study more NSE scripts that use this library, visit [http://nmap.org/nsedoc/categories/vuln.html](http://nmap.org/nsedoc/categories/vuln.html).
    Note that not all the scripts use it yet as this library was introduced fairly
    recently.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想学习更多使用此库的NSE脚本，请访问[http://nmap.org/nsedoc/categories/vuln.html](http://nmap.org/nsedoc/categories/vuln.html)。请注意，并非所有脚本都使用它，因为该库是最近引入的。
- en: There's more...
  id: totrans-424
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'You can tell Nmap to report on all vulnerability checks performed by NSE by
    using the library argument `vulns.showall`:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以告诉Nmap通过使用库参数`vulns.showall`报告NSE执行的所有漏洞检查：
- en: '[PRE110]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'A list of all vulnerability checks will be shown:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 将显示所有漏洞检查的列表：
- en: '[PRE111]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: This library can also be combined with prerule and postrule actions if you need
    more flexibility. The online documentation of the NSE library `vulns` can be found
    at [http://nmap.org/nsedoc/lib/vulns.html](http://nmap.org/nsedoc/lib/vulns.html).
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要更多灵活性，此库还可以与prerule和postrule操作结合使用。NSE库`vulns`的在线文档可在[http://nmap.org/nsedoc/lib/vulns.html](http://nmap.org/nsedoc/lib/vulns.html)找到。
- en: Vulnerability states of the library vulns
  id: totrans-430
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 库vulns的漏洞状态
- en: The library `vulns` can mark hosts with an exploitability status which is used
    to indicate to the Nmap Scripting Engine if certain vulnerabilities exist in a
    host.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 库`vulns`可以标记具有可利用性状态的主机，用于指示Nmap脚本引擎是否存在主机中的某些漏洞。
- en: 'The following is a snippet from the `vulns` library that shows the supported
    states and the corresponding string message used in the reports:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是来自`vulns`库的片段，显示了支持的状态和报告中使用的相应字符串消息：
- en: '[PRE112]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: See also
  id: totrans-434
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Making HTTP requests to identify vulnerable Trendnet webcams* recipe
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*制作HTTP请求以识别易受攻击的Trendnet网络摄像头*配方'
- en: The *Sending UDP payloads by using NSE sockets* recipe
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用NSE套接字发送UDP负载*配方'
- en: The *Exploiting a path traversal vulnerability with NSE* recipe
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*利用NSE的路径遍历漏洞*配方'
- en: The *Writing a brute force script* recipe
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写蛮力脚本*配方'
- en: The *Working with the web crawling library* recipe
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Web爬虫库*配方'
- en: The *Writing your own NSE library* recipe
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写您自己的NSE库*配方'
- en: Writing your own NSE library
  id: totrans-441
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写您自己的NSE库
- en: There are times when you will realize that the code you are writing could be
    put into a library to be re-used by other NSE scripts. The process of writing
    an NSE library is straightforward, and there are only certain things that we need
    to consider, such as not accessing global variables used by other scripts. Although
    Lua modules are preferred, the Nmap Scripting Engine also supports C modules via
    the Lua C API, for those looking for that extra performance.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您会意识到您正在编写的代码可以放入库中，以便其他NSE脚本重复使用。编写NSE库的过程很简单，我们只需要考虑一些特定的事情，比如不要访问其他脚本使用的全局变量。尽管首选Lua模块，但Nmap脚本引擎还通过Lua
    C API支持C模块，以提供额外的性能。
- en: This recipe will teach you how to create your own Lua NSE library.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方将教您如何创建自己的Lua NSE库。
- en: How to do it...
  id: totrans-444
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Creating a library has a similar process to writing scripts. Just keep in mind
    the scope of the variables that you are working with. Let''s create a simple library:'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 创建库的过程与编写脚本类似。只需记住您正在使用的变量的范围。让我们创建一个简单的库：
- en: 'Create a new file `mylibrary.lua`, and start by typing the required libraries
    you may need:'
  id: totrans-446
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`mylibrary.lua`的新文件，并开始输入您可能需要的所需库：
- en: '[PRE113]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'Now, simply add the functions to your library. We will create a function that
    returns the classic `"Hello World!"` message:'
  id: totrans-448
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，只需将函数添加到您的库中。我们将创建一个返回经典的`"Hello World!"`消息的函数：
- en: '[PRE114]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'Place your library file inside the directory `/nselib/`. Create a new NSE script
    and add the `require()` call inside of it:'
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的库文件放入`/nselib/`目录中。创建一个新的NSE脚本，并在其中添加`require()`调用：
- en: '[PRE115]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'Execute your method from inside your script. If the method can''t be accessed,
    you probably set an incorrect scope assignment for the function:'
  id: totrans-452
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从脚本内部执行您的方法。如果无法访问该方法，则可能为函数设置了不正确的范围分配：
- en: '[PRE116]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: How it works...
  id: totrans-454
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The LUA NSE libraries are stored inside the directory `/nselib/` in your configured
    data directory. To create our own libraries we just need to create the `.lua`
    file and place it in that directory:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: LUA NSE库存储在您配置的数据目录中的`/nselib/`目录中。要创建我们自己的库，我们只需要创建`.lua`文件并将其放在该目录中：
- en: '[PRE117]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'NSE scripts can now import your NSE library and call the available functions:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: NSE脚本现在可以导入您的NSE库并调用可用的函数：
- en: '[PRE118]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: It is important to document your library well before submitting it to `<[nmap-dev@insecure.org](mailto:nmap-dev@insecure.org)>`
    in order to help other developers quickly understand the purpose and functionality
    of your new library.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 在将其提交到`<[nmap-dev@insecure.org](mailto:nmap-dev@insecure.org)>`之前，有必要对您的库进行良好的文档记录，以帮助其他开发人员快速了解您的新库的目的和功能。
- en: There's more...
  id: totrans-460
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: To avoid overriding global variables used in other scripts by mistake, include
    the module `strict.lua`. This module will alert you every time you access or modify
    undeclared global variables at runtime.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免错误地覆盖其他脚本使用的全局变量，请包含模块`strict.lua`。该模块将在运行时每次访问或修改未声明的全局变量时提醒您。
- en: Debugging NSE scripts
  id: totrans-462
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试NSE脚本
- en: 'If something unexpected happens, turn on debugging to get additional information.
    Nmap uses the flag `-d` for debugging and you can set any integer between 0 and
    9:'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生意外情况，请打开调试以获取更多信息。Nmap使用`-d`标志进行调试，您可以设置0到9之间的任何整数：
- en: '[PRE119]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Exception handling
  id: totrans-465
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异常处理
- en: The library `nmap` provides an exception handling mechanism for NSE scripts,
    which is designed to help with networking I/O tasks.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库为NSE脚本提供了一个异常处理机制，旨在帮助处理网络I/O任务。'
- en: The exception handling mechanism from the nmap library works as expected. We
    wrap the code that we want to monitor for exceptions inside a `nmap.try()` call.
    The first value returned by the function indicates the completion status. If it
    returns `false` or `nil`, the second returned value must be an error string. The
    rest of the return values in a successful execution can be set and used as you
    wish. The `catch` function defined by `nmap.new_try()` will execute when an exception
    is raised.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: nmap库中的异常处理机制按预期工作。我们将要监视异常的代码包装在`nmap.try()`调用中。函数返回的第一个值表示完成状态。如果返回`false`或`nil`，则第二个返回值必须是错误字符串。在成功执行的其余返回值可以根据需要进行设置和使用。当引发异常时，由`nmap.new_try()`定义的`catch`函数将执行。
- en: 'The following example is a code snippet of the script `mysql-vuln-cve2012-2122.nse`
    ([http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html)).
    In this script a `catch` function performs some simple garbage collection if a
    socket is left open:'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例是脚本`mysql-vuln-cve2012-2122.nse`的代码片段([http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html))。在这个脚本中，`catch`函数执行一些简单的垃圾回收，如果套接字保持打开状态：
- en: '[PRE120]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: The official documentation of the NSE library `nmap` can be found at [http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html).
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: NSE库的官方文档可以在[http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html)找到。
- en: Importing modules in C
  id: totrans-471
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在C中导入模块
- en: Some modules included with the Nmap Scripting Engine are written in C++ or C.
    These languages provide enhanced performance and are recommended when that is
    a critical aspect of the required task.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 一些包含在Nmap脚本引擎中的模块是用C++或C编写的。这些语言提供了增强的性能，在所需任务的关键方面推荐使用。
- en: 'We can use compiled C modules with the Lua C API in our scripts by following
    the protocols described extensively at:'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过遵循在以下详细描述的协议，在我们的脚本中使用Lua C API中的编译C模块：
- en: '[http://www.lua.org/manual/5.2/manual.html#4](http://www.lua.org/manual/5.2/manual.html#4)'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.lua.org/manual/5.2/manual.html#4](http://www.lua.org/manual/5.2/manual.html#4)'
- en: '[http://nmap.org/book/nse-library.html](http://nmap.org/book/nse-library.html)'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://nmap.org/book/nse-library.html](http://nmap.org/book/nse-library.html)'
- en: See also
  id: totrans-476
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Making HTTP requests to identify vulnerable Trendnet webcams* recipe
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向Trendnet网络摄像头发送HTTP请求以识别漏洞的方法
- en: The *Sending UDP payloads by using NSE sockets* recipe
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用NSE套接字发送UDP负载的方法
- en: The *Exploiting a path traversal vulnerability with NSE* recipe
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用NSE利用路径遍历漏洞的方法
- en: The *Writing a brute force script* recipe
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写暴力脚本的方法
- en: The *Working with the web crawling library* recipe
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用网络爬虫库的方法
- en: The *Reporting vulnerabilities correctly in NSE scripts* recipe
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在NSE脚本中正确报告漏洞
- en: Working with NSE threads, condition variables, and mutexes in NSE
  id: totrans-483
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在NSE中使用线程、条件变量和互斥锁
- en: The Nmap Scripting Engine offers finer control over script parallelism by implementing
    threads, condition variables, and mutexes. Each NSE script is normally executed
    inside a Lua coroutine or thread but it may yield additional worker threads if
    the programmer decides to do so.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap脚本引擎通过实现线程、条件变量和互斥锁，提供了对脚本并行性的更精细控制。每个NSE脚本通常在Lua协程或线程中执行，但如果程序员决定这样做，它可能会产生额外的工作线程。
- en: This recipe will teach you how to deal with parallelism in NSE.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法将教你如何处理NSE中的并行性。
- en: How to do it...
  id: totrans-486
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'NSE threads are recommended for scripts that need to perform network operations
    in parallel. Let''s see how to deal with parallelism in our scripts:'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: NSE线程建议用于需要并行执行网络操作的脚本。让我们看看如何处理我们脚本中的并行性：
- en: 'To create a new NSE thread, use the function `new_thread()` from the library
    `stdnse`:'
  id: totrans-488
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个新的NSE线程，使用库`stdnse`中的函数`new_thread()`：
- en: '[PRE121]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'To synchronize access to a network resource, create a mutex on an object:'
  id: totrans-490
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了同步访问网络资源，在对象上创建一个互斥锁：
- en: '[PRE122]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'Then the function returned by `nmap.mutex(object)` can be locked as follows:'
  id: totrans-492
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，通过`nmap.mutex(object)`返回的函数可以如下锁定：
- en: '[PRE123]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'After you are done working with it, you should release it with the function
    `"done"`:'
  id: totrans-494
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在完成工作后，应使用函数`"done"`释放它：
- en: '[PRE124]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'NSE supports condition variables to help you synchronize the execution of threads.
    To create a condition variable, use the function `nmap.condvar(object)`:'
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: NSE支持条件变量，以帮助您同步线程的执行。要创建条件变量，请使用函数`nmap.condvar(object)`：
- en: '[PRE125]'
  id: totrans-497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'After that you may wait on, signal, or broadcast the condition variable:'
  id: totrans-498
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您可以等待、信号或广播条件变量：
- en: '[PRE126]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: How it works...
  id: totrans-500
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: NSE scripts transparently yield when a network operation occurs. Script writers
    may want to perform parallel networking tasks, like the script `http-slowloris`
    which opens several sockets and keeps them open concurrently. NSE threads solve
    this problem by allowing script writers to yield parallel network operations.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: NSE脚本在进行网络操作时会透明地产生。脚本编写者可能希望执行并行的网络任务，比如脚本`http-slowloris`打开几个套接字并同时保持它们打开。NSE线程通过允许脚本编写者产生并行网络操作来解决这个问题。
- en: The function `stdnse.new_thread` receives as the first argument the new worker's
    main function. This function will be executed after the new thread is created.
    Script writers may pass any additional arguments as optional parameters in `stdnse.new_thread()`.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 函数`stdnse.new_thread`的第一个参数是新工作线程的主函数。此函数将在创建新线程后执行。脚本编写者可以将任何额外的参数作为可选参数传递给`stdnse.new_thread()`。
- en: '[PRE127]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: The worker's return values are ignored by NSE and they can't report script output.
    The official documentation recommends using `upvalues`, function parameters, or
    environments to report results back to the base thread.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: NSE忽略了工作线程的返回值，它们无法报告脚本输出。官方文档建议使用`upvalues`、函数参数或环境来将结果报告回基本线程。
- en: 'After execution, it returns the base coroutine and a status query function.
    This status query function returns up to two values: the results of `coroutine.status`
    using the base `coroutine` and, if an error occurs, an error object.'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后，它返回基本协程和状态查询函数。此状态查询函数返回最多两个值：使用基本`coroutine`的`coroutine.status`的结果，以及如果发生错误，则为错误对象。
- en: 'Mutexes or mutual exclusive objects were implemented to protect resources such
    as NSE sockets. The following operations can be performed on a mutex:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 互斥锁或互斥对象被实现用来保护诸如NSE套接字之类的资源。可以对互斥锁执行以下操作：
- en: '`lock`: Locks the mutex. If the mutex is taken, the worker thread will yield
    and wait until it is released.'
  id: totrans-507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lock`：锁定互斥锁。如果互斥锁被占用，工作线程将让出并等待直到释放。'
- en: '`trylock`: Attempts to lock the mutex in a non-blocking way. If the mutex is
    taken, it will return false. (It will not yield as in the function `lock`.)'
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`trylock`：尝试以非阻塞方式锁定互斥锁。如果互斥锁被占用，它将返回false。（不会像`lock`函数那样让出。）'
- en: '`done`: Releases the mutex. Other threads can lock it after this.'
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`done`：释放互斥锁。其他线程可以在此之后锁定它。'
- en: '`running`: This function should not be used at all other than for debugging,
    because it affects the thread collection of finished threads.'
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`running`：除了用于调试之外，根本不应该使用此函数，因为它会影响已完成线程的线程收集。'
- en: 'Condition variables were implemented to help developers coordinate the communication
    between threads. The following operations can be performed on a conditional variable:'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 条件变量被实现以帮助开发人员协调线程之间的通信。可以对条件变量执行以下操作：
- en: '`broadcast`: Resumes all threads in the condition variable queue'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`broadcast`：恢复条件变量队列中的所有线程'
- en: '`wait`: Adds the current thread to the waiting queue on the condition variable'
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wait`：将当前线程添加到条件变量的等待队列中'
- en: '`signal`: Signals a thread from the waiting queue'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`signal`：从等待队列中发出信号的线程'
- en: To read implementations of script parallelism, I recommend that you read the
    source code of the NSE scripts `broadcast-ping`, `ssl-enum-ciphers`, `firewall-bypass`,
    `http-slowloris`, or `broadcast-dhcp-discover`.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 要阅读脚本并行性的实现，建议阅读NSE脚本`broadcast-ping`，`ssl-enum-ciphers`，`firewall-bypass`，`http-slowloris`或`broadcast-dhcp-discover`的源代码。
- en: There's more...
  id: totrans-516
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Lua provides an interesting feature called coroutines. Each coroutine has its
    own execution stack. The most important part is that we can suspend and resume
    the execution via `coroutine.resume()` and `coroutine.yield()`. The function `stdnse.base()`
    was introduced to help identify if the main script thread is still running. It
    returns the base coroutine of the running script.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: Lua提供了一个有趣的功能，称为协程。每个协程都有自己的执行堆栈。最重要的部分是我们可以通过`coroutine.resume()`和`coroutine.yield()`挂起和恢复执行。引入了函数`stdnse.base()`来帮助确定主脚本线程是否仍在运行。它返回运行脚本的基本协程。
- en: 'You can learn more about coroutines from Lua''s official documentation:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从Lua的官方文档中了解有关协程的更多信息：
- en: '[http://lua-users.org/wiki/CoroutinesTutorial](http://lua-users.org/wiki/CoroutinesTutorial)'
  id: totrans-519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://lua-users.org/wiki/CoroutinesTutorial](http://lua-users.org/wiki/CoroutinesTutorial)'
- en: '[http://www.lua.org/pil/9.1.html](http://www.lua.org/pil/9.1.html)'
  id: totrans-520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.lua.org/pil/9.1.html](http://www.lua.org/pil/9.1.html)'
- en: Debugging NSE scripts
  id: totrans-521
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试NSE脚本
- en: 'If something unexpected happens, turn on debugging to get additional information.
    Nmap uses the flag `-d` for debugging and you can set any integer between 0 and
    9:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生意外情况，请打开调试以获取更多信息。Nmap使用`-d`标志进行调试，您可以设置0到9之间的任何整数：
- en: '[PRE128]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: Exception handling
  id: totrans-524
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异常处理
- en: The library `nmap` provides an exception handling mechanism for NSE scripts
    that is designed to help with networking I/O tasks.
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库为设计用于帮助网络I/O任务的NSE脚本提供了异常处理机制。'
- en: The exception handling mechanism from the `nmap` library works as expected.
    We wrap the code that we want to monitor for exceptions inside a `nmap.try()`
    call. The first value returned by the function indicates the completion status.
    If it returns `false` or `nil`, the second returned value must be an error string.
    The rest of the return values in a successful execution can be set and used as
    you wish. The `catch` function defined by `nmap.new_try()` will execute when an
    exception is raised.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '`nmap`库的异常处理机制按预期工作。我们将想要监视异常的代码包装在`nmap.try()`调用内。函数返回的第一个值表示完成状态。如果返回`false`或`nil`，则第二个返回值必须是错误字符串。在成功执行的其余返回值可以根据需要设置和使用。`nmap.new_try()`定义的`catch`函数将在引发异常时执行。'
- en: 'The following example is a code snippet of the script `mysql-vuln-cve2012-2122.nse`
    ([http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html)).
    In this script a `catch` function performs some simple garbage collection if a
    socket is left open:'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例是脚本`mysql-vuln-cve2012-2122.nse`的代码片段（[http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html](http://nmap.org/nsedoc/scripts/mysql-vuln-cve2012-2122.html)）。在此脚本中，`catch`函数在套接字保持打开时执行一些简单的垃圾回收：
- en: '[PRE129]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: The official documentation of the NSE library `nmap` can be found at [http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html).
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: NSE库`nmap`的官方文档可以在[http://nmap.org/nsedoc/lib/nmap.html](http://nmap.org/nsedoc/lib/nmap.html)找到。
- en: See also
  id: totrans-530
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Making HTTP requests to identify vulnerable Trendnet webcams* recipe
  id: totrans-531
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*发出HTTP请求以识别易受攻击的Trendnet网络摄像头*配方'
- en: The *Sending UDP payloads by using NSE sockets* recipe
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用NSE套接字发送UDP负载*配方'
- en: The *Exploiting a path traversal vulnerability with NSE* recipe
  id: totrans-533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*利用NSE的路径遍历漏洞*配方'
- en: The *Writing a brute force script* recipe
  id: totrans-534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*编写暴力脚本*配方'
- en: The *Working with the web crawling library* recipe
  id: totrans-535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Web爬虫库*配方'
- en: The *Reporting vulnerabilities correctly in NSE scripts* recipe
  id: totrans-536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在NSE脚本中正确报告漏洞*配方'
