- en: Network Penetration Testing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络渗透测试
- en: 'In this chapter, we will cover all of the concepts that will be needed to get
    started with network penetration testing. We will start off with what a network
    is, and see two types of networks: wired and wireless. Later, we will see how
    to connect a wireless adapter to a virtual machine. After that, we will look at
    what a MAC address is also, steps to change a MAC address. Finally, we will see
    methods for activating the monitor mode.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖开始进行网络渗透测试所需的所有概念。我们将从网络是什么开始，看看两种类型的网络：有线和无线。随后，我们将学习如何将无线适配器连接到虚拟机。之后，我们还将了解什么是MAC地址，以及如何更改MAC地址的步骤。最后，我们将学习启用监控模式的方法。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涉及以下主题：
- en: What is a network?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是网络？
- en: Network basics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络基础
- en: Connecting to a wireless adapter
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到无线适配器
- en: MAC addresses
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MAC地址
- en: Wireless modes – managed and monitor
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无线模式——管理模式与监控模式
- en: Enabling monitor mode manually
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动启用监控模式
- en: Enabling monitor mode using `airmon-ng`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`airmon-ng`启用监控模式
- en: What is a network?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是网络？
- en: The first penetration testing section that we are going to cover is network
    penetration testing. Most of the systems and computers that we are going to try
    to gain access to will be connected to a network, whether it's a device, a computer,
    a phone, or simply any device connected to the internet. Therefore, you need to
    learn how devices interact with each other in a network, as well as how networks
    work, before you can advance into different types of penetration testing.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要覆盖的第一个渗透测试部分是网络渗透测试。我们将尝试访问的大多数系统和计算机都会连接到网络，无论是设备、计算机、手机，还是任何连接到互联网的设备。因此，在深入了解各种渗透测试之前，你需要学习设备如何在网络中相互作用，以及网络如何工作。
- en: 'Network penetration testing can be divided into four main sections:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 网络渗透测试可以分为四个主要部分：
- en: Pre-connection
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接前
- en: Gaining access
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获得访问权限
- en: Post-connection
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接后
- en: Detection and security
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测与安全
- en: Both the first section (pre-connection) and the second section (gaining access)
    are geared toward wireless networks. Usually, with a wireless network, there is
    protection (encryption), and we need to use a key to connect to the network. There
    are WEP, WPA, and WPA2 encryptions, and we are going to learn how to break them.
    We will also learn the kinds of attacks we can do without being connected to a
    network, and what we can do using a wireless card.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分（连接前）和第二部分（获取访问权限）都针对无线网络。通常，对于无线网络来说，它有保护（加密），我们需要使用密钥才能连接到网络。有WEP、WPA和WPA2加密，我们将学习如何破解它们。我们还将了解在不连接网络的情况下可以执行的攻击类型，以及使用无线网卡可以做什么。
- en: The reason we don't mention wired connections in the first two sections is because,
    in order to gain access to a wired network, all you need is an Ethernet cable.
    Some wired networks use security and some use MAC filtering, and we're going to
    discuss that later—changing the MAC address is very easy.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在前两部分中没有提到有线连接的原因是，要获得对有线网络的访问权限，你只需要一根以太网线。某些有线网络使用安全性保护，某些则使用MAC过滤，我们稍后会讨论这些——更改MAC地址非常容易。
- en: Section 3 is where the fun starts—we will learn how to sniff packets from the
    network, how to control connections, how to sniff passwords, usernames, and cookies,
    how to inject them into your browser, and how to launch attacks that will allow
    us to gain full access to any device on a network, bet it wired or wireless. Section
    3 will apply to both wired and wireless, which will work exactly the same, with
    no need for a change in configuration. In the last section, we will discuss how
    to secure yourself against attacks, and how to detect them.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分才是有趣的开始——我们将学习如何嗅探网络数据包、如何控制连接、如何嗅探密码、用户名和Cookies、如何将它们注入到浏览器中，并如何发起攻击，允许我们获得网络中任何设备的完全访问权限，无论是有线的还是无线的。第三部分适用于有线和无线网络，操作完全相同，无需更改配置。在最后一部分，我们将讨论如何保护自己免受攻击，以及如何检测攻击。
- en: Network basics
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络基础
- en: Before we start trying to hack into networks, there are a few basics that we
    need to learn. What is a network? A network is a number of devices connected together
    so that they can share data. This data can be files, resources (such as on a home
    network), or just a way to connect to the internet.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始尝试入侵网络之前，我们需要了解一些基本知识。什么是网络？网络是多个设备通过连接共享数据的方式。这些数据可以是文件、资源（例如家庭网络上的资源），或者仅仅是连接到互联网的一种方式。
- en: All networks, Wi-Fi or wired, achieve this sharing of data by using the same
    principle—a device that acts as a server, which all of the devices communicate
    with. The server has access to the resources, and all of the other devices on
    the network can access the data from the server. On most Wi-Fi networks, the server
    is the router, and all devices connect to the router and access the internet through
    it. The only device on the network that is directly connected to the internet
    is the Wi-Fi router.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所有网络，无论是Wi-Fi还是有线网络，都通过相同的原理实现数据共享—一个作为服务器的设备，所有其他设备与之通信。服务器拥有资源，网络中的所有其他设备都可以访问服务器上的数据。在大多数Wi-Fi网络中，服务器就是路由器，所有设备都连接到路由器并通过它访问互联网。网络中唯一一个直接连接互联网的设备就是Wi-Fi路由器。
- en: 'In the following diagram, clients 1, 2, and 3 have no access to the internet,
    but they can access it through the router:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的图示中，客户端1、2和3无法直接访问互联网，但它们可以通过路由器访问互联网：
- en: '![](assets/17019b49-5a2b-4f75-b41c-cf4bf7dd3ff5.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/17019b49-5a2b-4f75-b41c-cf4bf7dd3ff5.png)'
- en: For example, whenever Client 3 wants to open Google, it sends a request to the
    router. The router goes to the internet, grabs [http://www.google.com](http://www.google.com),
    and forwards it back to Client 3. Client 3 does not have direct access to the
    internet—it has to go through the router, and the router grabs the request and
    sends the response back to the client. All of this data—requests and responses—is
    transferred through packets, so there are a number of packets being sent between
    clients and the router. In a Wi-Fi network, these packets are sent through the
    air, so they are broadcasted. If we are in the range of these packets, we can
    just sniff them, capture them, and read them, being able to see all of the information
    inside. All of this data—whether it's usernames, passwords, videos, audio, music,
    charts, and so on—is transferred as packets, and it's always transferred between
    the router and the client. So, if we capture the packets, we can read all of the
    information on our device.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，每当客户端3想要打开Google时，它会向路由器发送请求。路由器访问互联网，抓取[http://www.google.com](http://www.google.com)，然后将其转发回客户端3。客户端3不能直接访问互联网—它必须通过路由器，路由器获取请求并将响应返回给客户端。所有这些数据—请求和响应—都是通过数据包传输的，因此在客户端和路由器之间会有很多数据包传输。在Wi-Fi网络中，这些数据包是通过空气传输的，因此它们是广播的。如果我们处于这些数据包的范围内，我们可以嗅探它们，捕获它们，并读取其中的所有信息。所有这些数据—无论是用户名、密码、视频、音频、音乐、图表等等—都是以数据包的形式传输的，并且始终在路由器和客户端之间传输。因此，如果我们捕获到这些数据包，我们就可以在我们的设备上读取所有信息。
- en: Connecting to a wireless adapter
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到无线适配器
- en: In this part of the chapter, we will see how to connect a USB device to a virtual
    machine. As an example, we are going to connect a wireless adapter to a Kali machine,
    but the same method can be used to connect any USB device. We will need a wireless
    adapter for the cracking section of the network penetration test, because in later
    chapters, we will learn how to crack passwords for Wi-Fi networks. Other than
    that, we can do everything else without a wireless adapter.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的这一部分，我们将学习如何将USB设备连接到虚拟机。作为示例，我们将把一个无线适配器连接到Kali机器上，但同样的方法也可以用来连接任何USB设备。我们将在网络渗透测试的破解部分需要一个无线适配器，因为在后续章节中，我们将学习如何破解Wi-Fi网络的密码。除此之外，其他操作无需无线适配器。
- en: A wireless adapter is a USB device that connects to the computer through the
    USB and allows us to communicate with wireless networks. Most computers and laptops
    now come with built-in wireless cards. The only problem is, first of all, that
    we can't access built-in wireless cards from a virtual machine. Also, even if
    you install Kali as a main machine, the built-in wireless cards are not good for
    hacking, because we need a powerful adapter that supports monitor mode and packet
    injection (we will go into what these mean). Basically, the built-in wireless
    adapter does not support these modes, and can't be used for hacking.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 无线适配器是一种通过USB连接到计算机的USB设备，它使我们能够与无线网络通信。如今，大多数计算机和笔记本电脑都内置了无线网卡。唯一的问题是，首先，我们无法从虚拟机访问内置无线网卡。其次，即使你将Kali安装为主机，内置无线网卡也不适合黑客攻击，因为我们需要一个支持监控模式和数据包注入的强大适配器（我们将进一步解释这些模式的含义）。基本上，内置无线适配器不支持这些模式，因此无法用于黑客攻击。
- en: Powerful wireless adapters are recommended. For more information, check out [https://www.youtube.com/watch?v=0lqRZ3MWPXY](https://www.youtube.com/watch?v=0lqRZ3MWPXY).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐使用强大的无线适配器。欲了解更多信息，请查看[https://www.youtube.com/watch?v=0lqRZ3MWPXY](https://www.youtube.com/watch?v=0lqRZ3MWPXY)。
- en: 'Now, we will connect adapters to Kali by using the following steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将通过以下步骤将适配器连接到 Kali：
- en: We have to open VirtualBox (if it's open, it can be seen on the left-hand side
    of the screen) and click on the machine that we want to connect the adapter to.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要打开 VirtualBox（如果已经打开，它会显示在屏幕的左侧），然后点击我们希望连接适配器的虚拟机。
- en: 'Then, we go to Settings | USB, and make sure that Enable USB Controller is
    checked; if not, just click on Enable USB Controller:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接着，我们进入设置 | USB，并确保启用 USB 控制器选项已勾选；如果没有，点击启用 USB 控制器：
- en: '![](assets/a8ad40b7-e36c-4018-ba0f-cbc34f4903d3.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a8ad40b7-e36c-4018-ba0f-cbc34f4903d3.png)'
- en: 'Now, we have to pick the USB hardware type that is used by our adapter—either
    USB 1.0, 2.0, or 3.0\. Then, we go to the plus (+) sign, and click on it:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要选择适配器使用的 USB 硬件类型——USB 1.0、2.0 或 3.0。然后，我们点击加号（+）按钮：
- en: '![](assets/91d9415f-cf8d-429e-a12f-221ed64aa036.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/91d9415f-cf8d-429e-a12f-221ed64aa036.png)'
- en: 'We will see that we have a number of devices that can be attached to the Kali
    machine. We connect to the adapter, first of all, just to have a look at the available
    devices. The name that we see is the name of the chipset that was used inside
    the adapter, not the brand name of the adapter itself. When we click on it, we
    see a new entry called ATHEROS—this is actually my wireless adapter, an Alpha
    AWS 036NHA. We click on it; then we click on OK, and the adapter is added to Kali:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们会看到有许多设备可以连接到 Kali 虚拟机。首先，我们连接适配器，仅仅是为了查看可用的设备。我们看到的名称是适配器内部使用的芯片组名称，而不是适配器本身的品牌名称。当我们点击它时，会看到一个新的条目叫做
    ATHEROS——这实际上是我的无线适配器，一个 Alpha AWS 036NHA。我们点击它，然后点击确定，适配器就添加到 Kali 上了：
- en: '![](assets/5263622b-546a-46e0-b447-c89eb13fc83b.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5263622b-546a-46e0-b447-c89eb13fc83b.png)'
- en: Before we can start Kali, we have to install extensions to allow VirtualBox
    to use the USB device. They can be downloaded at [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads),
    and you can see that there is a link for the VirtualBox Extension Pack. This will
    only work for VirtualBox 5.1.22 and up.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用 Kali 之前，我们需要安装扩展程序，以便 VirtualBox 可以使用 USB 设备。你可以在 [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)
    下载这些扩展程序，你会看到有一个 VirtualBox 扩展包的链接。这些扩展包仅适用于 VirtualBox 5.1.22 及以上版本。
- en: If you have a different version of VirtualBox, to get your version, you can
    just go to VirtualBox | About VirtualBox; if you're on Windows, you'll have to
    go to File | About VirtualBox. You'll see the version there. If you don't find
    the latest version on the link, you have to go down to the VirtualBox older builds,
    to 5.0, and look for 5.0.20, to download its Extension Pack. Download the one
    that is compatible with your version.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是不同版本的 VirtualBox，可以通过访问 VirtualBox | 关于 VirtualBox 来查看你的版本；如果你使用的是 Windows，则需要访问文件
    | 关于 VirtualBox。在那里你可以看到版本号。如果在链接中找不到最新版本，你需要访问 VirtualBox 的旧版本页面，找到 5.0 版本，并下载
    5.0.20 版本的扩展包。下载与您的版本兼容的扩展包。
- en: Once it's downloaded, it will be available in your default download location.
    You just have to double-click on it to install it. If you have already installed
    it, it will show a popup for reinstalling; otherwise, it will show an Install
    button. If you are reinstalling, you'll need to scroll down and Agree, including
    your password. After that, the Extension Pack will be installed.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，它会保存在你默认的下载位置。你只需双击它进行安装。如果你已经安装过，它会弹出重新安装的提示；否则，它会显示一个安装按钮。如果你正在重新安装，你需要向下滚动并同意相关条款，并输入密码。完成后，扩展包将被安装。
- en: 'Before starting the virtual machine, we are going to physically disconnect
    the wireless adapter, and then connect the adapter once Kali fully loads. Boot
    up the Kali virtual machine, put in the username, which is `root`, and the password,
    which is `toor`. Now, Kali is fully loaded, and we can physically connect the
    wireless adapter. This is done to avoid conflicts. Once the adapter is connected
    and virtual machine is up, we will confirm that the adapter is connected by opening
    Terminal and typing `ifconfig`. This command lists all of the interfaces that
    are connected to the machine, and, as we can see in the following screenshot,
    it should list an adapter called `wlan0`, which is the wireless adapter:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动虚拟机之前，我们将物理上断开无线适配器的连接，等到 Kali 完全加载后再连接适配器。启动 Kali 虚拟机，输入用户名 `root` 和密码 `toor`。现在，Kali
    已经完全加载，我们可以物理连接无线适配器。这样做是为了避免冲突。一旦适配器连接并且虚拟机启动，我们将通过打开终端并输入 `ifconfig` 命令来确认适配器是否已连接。此命令列出所有连接到计算机的接口，正如以下截图所示，它应该列出一个名为
    `wlan0` 的适配器，这是无线适配器：
- en: '![](assets/123808c7-c6e5-4e01-b99e-5a96b285b84b.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/123808c7-c6e5-4e01-b99e-5a96b285b84b.png)'
- en: 'If you go to the top-right corner of the screen and click on power icon, you''ll
    see a Wi-Fi Not Connected option, which can be used to connect to Wi-Fi networks:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击屏幕右上角的电源图标，你会看到一个“Wi-Fi 未连接”选项，可以用来连接 Wi-Fi 网络：
- en: '![](assets/9993b86d-081a-499f-bbf6-28dbe9fb98e9.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9993b86d-081a-499f-bbf6-28dbe9fb98e9.png)'
- en: We don't need to connect to any Wi-Fi connection, because we have set up a NAT
    network, and Kali already has internet access through that NAT network. We only
    need the wireless adapter to hack into other networks and crack their passwords.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要连接到任何 Wi-Fi 网络，因为我们已经设置了一个 NAT 网络，Kali 通过该 NAT 网络已经可以访问互联网。我们只需要无线适配器来入侵其他网络并破解它们的密码。
- en: MAC addresses
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MAC 地址
- en: In this section, we will study MAC addresses. Each network card, whether it's
    a Wi-Fi card or a wired card, has a physical, static address, assigned by the
    card manufacturer. This is the **Media Access Control** (**MAC**) address. The
    MAC address is written on the card, and it's physical, so it never changes. It
    is used between devices, for identification and to transfer packets in the right
    direction. This works because each packet has a source MAC and a destination MAC,
    and travels from the source to the destination.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习 MAC 地址。每个网卡，无论是 Wi-Fi 卡还是有线网卡，都有一个由卡制造商分配的物理静态地址，这就是 **媒体访问控制**（**MAC**）地址。MAC
    地址写在卡上，并且是物理的，因此永远不会更改。它用于设备之间的识别，并且用于将数据包传输到正确的方向。这是因为每个数据包都有源 MAC 地址和目标 MAC
    地址，并从源地址传输到目标地址。
- en: Because the MAC address is static and never changes, it can be used to trace
    back and identify a device. Also, since devices use MAC addresses to identify
    each other, we can have some networks that only allow certain MAC addresses to
    connect to them (by using a whitelist), or that blacklist MAC addresses so that
    they cannot connect to the network. Changing your MAC address can help you to
    either connect to a network by being on a whitelist, or to bypass a blacklist.
    The only way to change the MAC address is to change it in the RAM—so it will only
    be changed for the current session, and once you restart, you will have to change
    it again.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 MAC 地址是静态的并且永不更改，因此它可以用来追踪和识别设备。而且，由于设备使用 MAC 地址来相互识别，我们可以设置一些只允许特定 MAC 地址连接的网络（通过使用白名单），或者将
    MAC 地址列入黑名单，使其无法连接到网络。更改 MAC 地址可以帮助你通过进入白名单连接网络，或绕过黑名单。更改 MAC 地址的唯一方法是将其更改为 RAM
    中的地址——因此它只会在当前会话中更改，重启后需要重新更改。
- en: 'Now, let''s change the MAC address; the procedure is as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更改 MAC 地址；步骤如下：
- en: 'We''re going to use a tool called `macchanger`. First of all, to get the Wi-Fi
    card name, just type in `iwconfig`, and it will show all of the wireless cards.
    In the following screenshot, `eth0` has no wireless extensions, and the same applies
    to `lo`; we can see that `wlan0` is the wireless card:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用一个名为 `macchanger` 的工具。首先，为了获取 Wi-Fi 卡的名称，只需输入 `iwconfig`，它将显示所有无线网卡。在以下截图中，`eth0`
    没有无线扩展，`lo` 同样如此；我们可以看到 `wlan0` 是无线网卡：
- en: '![](assets/b68d5a57-dea0-4435-8fc0-c5369dae3b50.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b68d5a57-dea0-4435-8fc0-c5369dae3b50.png)'
- en: We are going to disable the wireless card, using the `ifconfig wlan0 down` command.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将禁用无线网卡，使用 `ifconfig wlan0 down` 命令。
- en: 'Now, we''re going to change the MAC address, using a tool called `macchanger`.
    With these tools, it''s always a good idea to look at the help section; just go
    onto the Terminal and type `macchanger --help`, and we''ll see all of the options
    that we can use with the tools. You can use `--help` and `--version` to show the
    help and version, `--show` to show our current MAC address, and `-e` so that it
    doesn''t change the vendor bytes (the manufacturer of the MAC address). Another
    method is to try a random vendor MAC of the same kind (`-A` is just to set a random
    vendor here). The `-p` option will reset the original permanent MAC address, so
    if we changed our MAC address and we want to use the old one again, we can use
    `-p`. The `-r` option will just give us a random MAC address, and `-l` will just
    print the known vendors that we can use. The `-m` option will help us to pick
    our own MAC address:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用一个名为`macchanger`的工具来更改 MAC 地址。使用这些工具时，查看帮助部分总是个好主意；只需进入终端并输入`macchanger
    --help`，我们就可以看到所有可以与该工具一起使用的选项。你可以使用`--help`和`--version`来显示帮助和版本，`--show`来显示当前的
    MAC 地址，`-e`可以防止更改供应商字节（MAC 地址的制造商）。另一种方法是尝试一个相同类型的随机供应商 MAC（`-A`只是为了设置一个随机供应商）。`-p`选项将重置原始的永久
    MAC 地址，因此如果我们更改了 MAC 地址并想再次使用旧的地址，我们可以使用`-p`。`-r`选项将为我们提供一个随机的 MAC 地址，而`-l`将打印出我们可以使用的已知供应商。`-m`选项将帮助我们选择自己的
    MAC 地址：
- en: '![](assets/72db7537-f4c5-459c-9363-3198a92b5189.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/72db7537-f4c5-459c-9363-3198a92b5189.png)'
- en: In case there is a whitelist, we will learn how we can see all connected devices;
    for example, for your target network, three devices are connected, and the target
    network only allows three devices to connect. We can just take one of the whitelisted
    MAC addresses, change it, and use it.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有白名单，我们将学习如何查看所有连接的设备；例如，对于你的目标网络，三个设备已连接，而目标网络只允许三个设备连接。我们可以直接取一个白名单中的 MAC
    地址，更改它，并使用它。
- en: 'To change the MAC address, first we have to disable the `wlan0` wireless card
    by using the `ifconfig wlan0 down` command. We can use the `--random` option to
    set up a random MAC address using `macchanger`. The command is simply `macchanger
    --random wlan0`. We can use `m` to specify our own MAC address, if we want. After
    hitting *Enter*, we can see that the original MAC address is being changed to
    `5a:c4:0c:9a:ac:79`:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更改 MAC 地址，首先我们需要通过使用`ifconfig wlan0 down`命令禁用`wlan0`无线网卡。我们可以使用`--random`选项来通过`macchanger`设置一个随机的
    MAC 地址。命令就是`macchanger --random wlan0`。如果需要，我们可以使用`m`来指定自己的 MAC 地址。按下*Enter*后，我们可以看到原始的
    MAC 地址被更改为`5a:c4:0c:9a:ac:79`：
- en: '![](assets/c071e51e-2730-4a36-9a8d-e10a3fae6775.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c071e51e-2730-4a36-9a8d-e10a3fae6775.png)'
- en: Now, our wireless card is ready, and we've changed its MAC address.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的无线网卡已经准备好，并且我们已经更改了它的 MAC 地址。
- en: 'Now we need to enable the wireless card again, because we disabled it. So,
    we''ll do the opposite; we''re going to use `ifconfig wlan0 up`. That''s it; the
    card is enabled, and its MAC address has been changed. Let''s take a look at it
    in the following screenshot; if we type in `ifconfig wlan0`, we can now see the
    new MAC address:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要重新启用无线网卡，因为我们之前禁用了它。所以，我们将做相反的操作；我们将使用`ifconfig wlan0 up`。就这样；网卡已启用，并且其
    MAC 地址已被更改。让我们在下图中查看一下；如果我们输入`ifconfig wlan0`，现在可以看到新的 MAC 地址：
- en: '![](assets/24b4acc0-a80b-481d-a08f-205845e2811c.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/24b4acc0-a80b-481d-a08f-205845e2811c.png)'
- en: Wireless modes – managed and monitor
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无线模式 – 管理模式和监控模式
- en: 'Now we know that the MAC address is used to make sure that the packet goes
    in the right direction, so each packet has a source MAC and a destination MAC,
    and it flows from the device that has the source MAC to the device that has the
    destination MAC. This is how wireless cards work in the default mode. So, if we
    go into the Kali machine and use `iwconfig`, in the following screenshot, you
    can see that we have a wireless card, named `wlan0`, and that the default mode
    is called managed mode:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道 MAC 地址是用来确保数据包走向正确方向的，因此每个数据包都有一个源 MAC 和一个目标 MAC，它从具有源 MAC 的设备流向具有目标
    MAC 的设备。这就是无线网卡在默认模式下的工作方式。所以，如果我们进入 Kali 机器并使用`iwconfig`，在下图中，你可以看到我们有一个无线网卡，名为`wlan0`，而且默认模式是称为管理模式：
- en: '![](assets/6a1d4b94-4fe3-4b40-b1c9-0cf8231ddb5d.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6a1d4b94-4fe3-4b40-b1c9-0cf8231ddb5d.png)'
- en: So, basically, in this mode, our wireless device will only receive packets,
    or will only try to capture packets that have our device's MAC address as the
    destination MAC. It will only capture packets that are actually directed to our
    computer.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，基本上，在这个模式下，我们的无线设备将只接收数据包，或者只会尝试捕获那些目标 MAC 地址是我们设备 MAC 地址的数据包。它只会捕获实际发送到我们计算机的数据包。
- en: What we want to do, however, is enable it to capture any packet that's around
    us—any packet that is within our range. To do that, we're going to use a mode
    called monitor mode. It tells the wireless card to capture everything around it,
    even if the destination MAC is not our MAC. Basically, we'll then be able to capture
    all of the packets within our range, even if they aren't directed to our device.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们想要做的是使它能够捕获我们周围的任何数据包——任何在我们范围内的数据包。为此，我们将使用一种叫做监视模式的模式。它指示无线网卡捕获周围的所有内容，即使目的MAC地址不是我们的MAC。基本上，我们将能够捕获我们范围内的所有数据包，即使它们并不是发送给我们设备的。
- en: There is more than one method to enable monitor mode; we're going to discuss
    three methods in this chapter, starting with the most basic method, in this section.
    Sometimes, monitor mode will be enabled, but when it comes to actually running
    an attack, the attack will not work. We may then need to try a different method
    of enabling monitor mode.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 启用监视模式的方法不止一种；我们将在本章讨论三种方法，从最基础的方法开始。在某些情况下，监视模式已启用，但当我们实际执行攻击时，攻击不会成功。此时我们可能需要尝试另一种启用监视模式的方法。
- en: 'We''re going to talk about the first method now, using `airmon-ng` to do it.
    First, we type in `airmon-ng`, and, as we can see in the following screenshot,
    it lists the wireless cards available:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将讨论第一种方法，使用`airmon-ng`来实现。首先，我们输入`airmon-ng`，如以下截图所示，它列出了可用的无线网卡：
- en: '![](assets/61909a27-0fda-4836-b76b-7f37db20421f.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/61909a27-0fda-4836-b76b-7f37db20421f.png)'
- en: 'We have a wireless card called `wlan0`, so we''re going to start monitor mode
    on this interface, and the command is going to be `airmon-ng start wlan0`. It''s
    very simple; `airmon-ng` is the name of the program, `start` initializes monitor
    mode, and `wlan0` is the wireless card name, so it''s the interface. We now have
    monitor mode enabled on `mon0`, so in the upcoming chapters, whenever we want
    to use monitor mode, we will specify `mon0` as the interface:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个无线网卡，名为`wlan0`，所以我们将在这个接口上启动监视模式，命令是`airmon-ng start wlan0`。这个操作非常简单；`airmon-ng`是程序的名称，`start`用于初始化监视模式，`wlan0`是无线网卡的名称，也就是接口名。我们现在已经在`mon0`上启用了监视模式，因此在接下来的章节中，任何需要使用监视模式的地方，我们都将指定`mon0`作为接口：
- en: '![](assets/a7e53799-518f-452c-bbff-7b9ec597c094.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a7e53799-518f-452c-bbff-7b9ec597c094.png)'
- en: 'All interfaces might not have the same name, so it will probably be called
    `wlan0mon` or something else; it doesn''t matter, just make sure to use the name
    that monitor mode is enabled on, in the future. If we use `iwconfig wlan0mon`,
    we will see (as shown in the following screenshot) that the mode is now monitor
    mode instead of managed mode:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 不是所有的接口名称都相同，所以它可能被称为`wlan0mon`或其他名称；这没关系，只要记得以后使用启用了监视模式的名称即可。如果我们使用`iwconfig
    wlan0mon`，我们会看到（如以下截图所示），模式现在是监视模式，而不是管理模式：
- en: '![](assets/5a7f65ab-e012-4f78-8fbf-8281d6fc3ffd.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5a7f65ab-e012-4f78-8fbf-8281d6fc3ffd.png)'
- en: This means that we can use this card to capture any packet within our range,
    even if the packet is not directed to our device, and even if it doesn't have
    the MAC address of our device as the destination MAC.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以使用这张卡捕获我们范围内的任何数据包，即使该数据包不是发给我们设备的，也即使它的目的MAC地址不是我们设备的MAC地址。
- en: 'A few things to note:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意几点：
- en: First of all, when we enable monitor mode, the card will lose its connection.
    So, if it was connected to a wireless network, it will get disconnected. This
    is normal, because the card will not be in managed mode, and it will be capturing
    all of the packets that are available to it, instead of only capturing the packets
    that are directed to it. This doesn't really matter, because when we enable monitor
    mode, we actually want to hack into a different network or capture packets from
    networks that we don't have passwords for. So, it's completely normal to lose
    our internet connection.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，当我们启用监视模式时，网卡会失去连接。所以，如果它之前连接到了无线网络，它将会断开连接。这是正常的，因为网卡将不再处于管理模式，而是会捕获它所能接收到的所有数据包，而不是仅仅捕获指向它的数据包。这没关系，因为当我们启用监视模式时，我们实际上是想攻击其他网络或捕获我们没有密码的网络的数据包。所以，失去互联网连接是完全正常的。
- en: The next thing is to make sure to use the name that monitor mode is enabled
    on. As mentioned previously, this was `wlan0mon`; it will change from system to
    system, so make sure to use the name that the `airmon-ng` command uses.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来要确保使用启用了监视模式的名称。如前所述，这个名称是`wlan0mon`；它会根据系统不同而变化，因此一定要使用`airmon-ng`命令显示的名称。
- en: The third note is that if we enable monitor mode and run an attack in the future,
    and get unexpected results, we can come back and try one of the other methods
    for enabling monitor mode.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三点是，如果我们启用监控模式并在将来进行攻击时，结果不如预期，我们可以返回并尝试其他启用监控模式的方法。
- en: 'If we want to stop monitor mode, we can use the `airmon-ng stop wlan0mon` command.
    Now, monitor mode is disabled, as seen in the following screenshot, and we can
    use `wlan0` in managed mode to connect to networks and use it normally:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想停止监控模式，可以使用`airmon-ng stop wlan0mon`命令。现在，监控模式已被禁用，如下图所示，我们可以在管理模式下使用`wlan0`连接到网络并正常使用：
- en: '![](assets/d23d9845-7a2a-4a68-a5d2-415a9ac7cf4d.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d23d9845-7a2a-4a68-a5d2-415a9ac7cf4d.png)'
- en: Enabling monitor mode manually
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动启用监控模式
- en: With the latest update of `aircrack-ng`, `airmon-ng` stopped working for some
    wireless cards. It will actually say that it enabled monitor mode on `wlan0mon`;
    so, instead of just using `mon0`, it's going to start calling wireless cards `wlan0mon`.
    When we try to use this card, it might not work in monitor mode, even though the
    card supports monitor mode. For now, with Kali 2.1, it is recommend using a different
    method for enabling monitor mode. This method is actually the manual method for
    enabling monitor mode.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 随着`aircrack-ng`的最新更新，`airmon-ng`在某些无线网卡上停止工作。它实际上会显示它已在`wlan0mon`上启用监控模式；所以，它将不再仅使用`mon0`，而是开始称无线网卡为`wlan0mon`。当我们尝试使用这张卡时，即使该卡支持监控模式，它可能在监控模式下无法正常工作。目前，在Kali
    2.1版本中，建议使用不同的方法来启用监控模式。这个方法实际上是手动启用监控模式的方法。
- en: 'Our wireless card is `wlan0`, so let''s just take a look at it. We use the `iwconfig
    wlan0` command; the wireless card can be seen in the following screenshot, following
    command execution:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的无线网卡是`wlan0`，让我们来看一下它。我们使用`iwconfig wlan0`命令；执行命令后，可以在下图中看到无线网卡：
- en: '![](assets/0b2ac853-a5c9-490c-aadc-f46fe3c65d14.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0b2ac853-a5c9-490c-aadc-f46fe3c65d14.png)'
- en: As we can see in the preceding screenshot, `wlan0` is now in managed mode. So,
    what we are going to do is enable it by using the manual method. We're going to
    disable the card using the `ifconfig wlan0 down` command, the same way that we
    did in the previous method, and the card will be disabled.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，`wlan0`现在处于管理模式。所以，我们要做的是通过手动方法启用它。我们将使用`ifconfig wlan0 down`命令禁用卡，就像我们在上一个方法中做的那样，然后卡会被禁用。
- en: 'Now, the next command will be to enable monitor mode on the card: it''s `iwconfig
    wlan0`, the name of the card, and then `mode monitor`. It''s very simple: `iwconfig
    wlan0 mode monitor`. Then, we press *Enter,* and it''s done.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们的命令是启用卡的监控模式：它是`iwconfig wlan0`，卡的名称，然后是`mode monitor`。非常简单：`iwconfig
    wlan0 mode monitor`。然后，我们按*Enter*，就完成了。
- en: 'Now, if there are no error messages, it means that the commands are running
    successfully. We can then enable the card again, so we will execute `ifconfig
    wlan0 up`, which will bring up the card. If we use `iwconfig wlan0`, the card
    will be in monitor mode:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果没有错误信息，说明命令执行成功。然后我们可以再次启用卡，因此我们将执行`ifconfig wlan0 up`命令，将卡启用。如果我们使用`iwconfig
    wlan0`，卡会进入监控模式：
- en: '![](assets/45c0b12f-846d-49c7-9de9-3ed97246150b.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/45c0b12f-846d-49c7-9de9-3ed97246150b.png)'
- en: So, in this part, we have actually used the old method of enabling monitor mode,
    if we have used `airmon-ng`, and then we will be using `wlan0mon` as the card
    in monitor mode, but if we use the old method, then `wlan0` is the one that's
    going to be in monitor mode. We are going to use `wlan0` instead of `wlan0mon`,
    because monitor mode is now enabled on `wlan0`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在这一部分中，我们实际上使用了启用监控模式的旧方法，如果我们使用了`airmon-ng`，那么我们将使用`wlan0mon`作为监控模式下的卡，但如果使用旧方法，则`wlan0`将处于监控模式。我们将使用`wlan0`而不是`wlan0mon`，因为监控模式现在已在`wlan0`上启用。
- en: This card now works perfectly, and monitor mode is enabled on it. We can choose
    any method we want, but this method will work on all cards, whereas the `aircrack`
    and `airmon-ng` methods will only work on some cards.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这张卡现在工作正常，并且已启用监控模式。我们可以选择任何我们想要的方法，但这种方法适用于所有卡，而`aircrack`和`airmon-ng`方法只适用于某些卡。
- en: Enabling monitor mode using airmon-ng
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用airmon-ng启用监控模式
- en: So, we have seen two methods to enable monitor mode, and now we're going to
    learn the third method. All of these methods achieve the same objective, which
    is enabling monitor mode on your wireless card. Which method works for you will
    depend on your operating system, your host system, and the compatibility of the
    wireless cards in the systems. In many cases, all of the methods will enable monitor
    mode on your card, but not all of the attacks will work. Sometimes, injection
    will not work, or creating a fake access point will fail—we will learn all of
    these in future chapters, so don't worry about them yet.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经学习了两种启用监控模式的方法，接下来我们将学习第三种方法。所有这些方法的目标都是相同的，都是启用你的无线网卡的监控模式。哪种方法对你有效取决于你的操作系统、主机系统以及无线网卡的兼容性。在很多情况下，所有方法都会启用网卡的监控模式，但并非所有攻击都会成功。有时候，注入可能无法成功，或者创建虚假接入点可能会失败——这些问题我们将在后续章节中学习，所以现在不用太担心。
- en: Basically, the idea to take from here is that if we know our card supports injection
    (if it's an alpha card such as 036H or 036NHA, or one of the known cards that
    support injection), but the injection isn't working well, then we can just unplug
    the card, plug it back in, and try another method of enabling monitor mode. So
    far, you have two methods, and we will now learn the third method.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，关键点是：如果我们知道我们的网卡支持注入（例如它是036H或036NHA这样的Alpha网卡，或者其他已知支持注入的网卡），但注入效果不好，那么我们可以拔掉网卡，再重新插回去，并尝试另一种启用监控模式的方法。到目前为止，你已经学会了两种方法，接下来我们将学习第三种方法。
- en: 'If any of the preceding methods work for you, then stick with it; if they don''t,
    then try this method. We have the wireless card connected, and it''s called `wlan0`.
    So we''re going to disable the card as usual, using `ifconfig wlan0 down`, and
    run a command to kill any service that might interfere with enabling monitor mode.
    The command is `airmon-ng check kill`; as you can see in the following screenshot,
    it killed three processes that `airmon` thinks might interfere with enabling monitor
    mode:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前面的方法对你有效，就继续使用它；如果无效，那就试试这个方法。我们已经连接了无线网卡，它的名字叫做`wlan0`。接下来，我们将像往常一样禁用网卡，使用`ifconfig
    wlan0 down`，并运行一个命令来终止可能干扰启用监控模式的服务。这个命令是`airmon-ng check kill`；如你在以下截图中看到的，它终止了三个`airmon`认为可能干扰启用监控模式的进程：
- en: '![](assets/c102aaf2-450f-4877-9f62-2b579554ba0e.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c102aaf2-450f-4877-9f62-2b579554ba0e.png)'
- en: 'What we are going to do now is enable monitor mode in the same way that we
    did in the first method, using the `airmon-ng start wlan0` command. Now, as monitor
    mode has been started on `wlan0mon`, which is a virtual wireless interface, we
    can use the `iwconfig` command to check; then, it will be in monitor mode:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将按照第一种方法启用监控模式，使用`airmon-ng start wlan0`命令。现在，监控模式已经在`wlan0mon`这个虚拟无线接口上启动，我们可以使用`iwconfig`命令进行检查；此时，它就处于监控模式：
- en: '![](assets/86e631e8-63d6-40ee-baff-0767bdc60db3.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/86e631e8-63d6-40ee-baff-0767bdc60db3.png)'
- en: Now, as we have seen, all of the methods enable monitor mode, and, in the future,
    we're going to use monitor mode in different attacks. If an attack doesn't work,
    all we have to do is unplug the card, plug it back in, and try another method
    for enabling monitor mode. Hopefully, one of them will work, and we can carry
    on with the attacks.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，所有这些方法都可以启用监控模式，未来我们将在不同的攻击中使用监控模式。如果某个攻击失败，我们只需拔掉网卡，再重新插回去，尝试另一种启用监控模式的方法。希望其中某一种能够生效，然后我们就能继续进行攻击。
- en: Summary
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned what a network is and how it works, and also studied
    basic network terminology and how to connect the wireless adapter to the virtual
    Kali machine. Mostly, we will only need this adapter for network penetration testing,
    to crack passwords. We also saw the important concept of MAC addresses, which
    are unique for every machine. Also, we saw how we can alter our MAC address so
    that we cannot be traced when hacking. Finally, we learned how we can enable monitor
    mode by using three different techniques.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学习了什么是网络以及它是如何工作的，还学习了基本的网络术语，以及如何将无线适配器连接到虚拟的Kali机器上。大部分情况下，我们只需要这个适配器来进行网络渗透测试，破解密码。我们还了解了MAC地址这一重要概念，它是每台机器的唯一标识。此外，我们还了解了如何修改MAC地址，以便在黑客攻击时不被追踪。最后，我们学习了如何使用三种不同的技巧来启用监控模式。
- en: In the next chapter, we will learn how to perform network penetration testing.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何进行网络渗透测试。
