- en: Chapter 3\. Acquisition – Approaching Android Devices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章 获取 – 接近 Android 设备
- en: Approximately, 82% of mobile devices (Q1, 2016) run the Android OS. The total
    number of active Android devices is about 1.4 billion (although not all of these
    are Google devices).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 大约 82% 的移动设备（2016年第一季度）运行 Android 操作系统。活跃的 Android 设备总数约为 14 亿（尽管并非所有这些设备都是
    Google 设备）。
- en: Similar to iOS, the data is not stored exclusively on mobile devices. In Android
    6, Google officially introduced a cloud backup option, allowing users to maintain
    limited automatic backups for Android devices on Google Drive. Learning what Google
    knows about the user can be essential for an investigation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 iOS，数据并不是仅存储在移动设备上。在 Android 6 中，Google 正式引入了云备份选项，允许用户在 Google Drive 上为
    Android 设备保持有限的自动备份。了解 Google 知道用户的哪些信息对于调查至关重要。
- en: An excellent resource with lots of detailed (but not too technical) information
    exists to help forensic experts get a better understanding of Android forensics.
    The **Free Android Forensics** blog at [http://freeandroidforensics.blogspot.com](http://freeandroidforensics.blogspot.com)
    offers excellent insight into the Android platform, imaging tools, and techniques.
    The blog mostly talks about using free forensic tools and acquisition techniques,
    which in our opinion can limit the available acquisition options and require more
    time and effort than an examiner may have at their disposal. However, the information
    presented in the blog is an excellent read for understanding what exactly the
    acquisition tools do on your behalf when acquiring information from mobile devices.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个很好的资源，包含大量详细的（但不是过于技术化的）信息，可以帮助法医专家更好地理解 Android 法医分析。**免费 Android 法医**博客（[http://freeandroidforensics.blogspot.com](http://freeandroidforensics.blogspot.com)）提供了对
    Android 平台、成像工具和技术的深刻洞察。该博客主要讨论使用免费法医工具和获取技术，而在我们看来，这可能会限制可用的获取选项，并需要比检查员可能有的时间和精力更多的投入。然而，博客中提供的信息是理解获取工具在获取移动设备信息时到底做了什么的极好阅读材料。
- en: 'In the following sections, we will discuss the options available for acquiring
    information from Android devices, as well as for pulling associated data from
    Google servers. In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将讨论从 Android 设备获取信息以及从 Google 服务器提取相关数据的可用选项。在本章中，我们将涵盖以下主题：
- en: Android platform fragmentation and why it matters
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android 平台碎片化及其重要性
- en: AOSP and GMS demystified
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AOSP 和 GMS 解析
- en: Logical acquisition via ADB backup
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 ADB 备份进行逻辑获取
- en: Dealing with unallocated space
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理未分配空间
- en: Overview of advanced acquisition methods
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级获取方法概述
- en: Android platform fragmentation
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android 平台碎片化
- en: 'Android is a heavily fragmented platform. Nearly 1,300 manufacturers and over
    24,000 device models introduce a huge degree of variance:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Android 是一个高度碎片化的平台。近 1,300 家制造商和超过 24,000 款设备型号带来了极大的差异性：
- en: '![Android platform fragmentation](img/0007.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![Android 平台碎片化](img/0007.jpeg)'
- en: 'Source: http://opensignal.com/reports/2015/08/android-fragmentation/'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[http://opensignal.com/reports/2015/08/android-fragmentation/](http://opensignal.com/reports/2015/08/android-fragmentation/)
- en: 'Hardware specifications demonstrate wild variations in screen size, resolution,
    and display ratio, CPU, SoC, and even architectures (ARMv7, ARMv8, and Intel''s
    x86/x64 are among the most popular Android platforms). Android devices also vary
    in the version of the core OS and available API''s. Compare this to Apple''s iOS:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件规格在屏幕大小、分辨率、显示比例、CPU、SoC 甚至架构（ARMv7、ARMv8 和 Intel 的 x86/x64 是最流行的 Android
    平台之一）上表现出极大的差异。Android 设备在核心操作系统的版本和可用 API 上也有所不同。与苹果的 iOS 相比：
- en: '![Android platform fragmentation](img/0008.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![Android 平台碎片化](img/0008.jpeg)'
- en: iOS and Android distribution charts (April 2016)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 和 Android 分布图（2016年4月）
- en: Android devices come with many different versions of Android and many different
    API levels that are available at any given time. For the purpose of mobile forensics,
    this means that one must either become familiar with the acquisition and protection
    specifics of all versions of Android or revert to using a dedicated Android acquisition
    product.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Android 设备有许多不同版本的 Android 操作系统和不同的 API 级别，这些版本和级别在任何时候都可能存在。对于移动法医分析来说，这意味着必须熟悉所有版本的
    Android 的获取和保护细节，或者转而使用专门的 Android 获取产品。
- en: 'More information on Android fragmentation is available at the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Android 碎片化的更多信息可在以下链接查看：
- en: '**The genius of Google Play Services: Tackling Android fragmentation, malware
    and forking in one fell swoop** at [http://www.androidcentral.com/genius-google-play-services](http://www.androidcentral.com/genius-google-play-services)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Play 服务的独特之处：一举解决 Android 分裂、恶意软件和分支问题** [在此查看](http://www.androidcentral.com/genius-google-play-services)'
- en: OpenSignal Android Fragmentation Report at [http://opensignal.com/reports/2015/08/android-fragmentation/](http://opensignal.com/reports/2015/08/android-fragmentation/)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSignal Android 分裂报告 [在此查看](http://opensignal.com/reports/2015/08/android-fragmentation/)
- en: '**Another Android ''fragmentation'' report misses the point** at [http://www.androidcentral.com/another-android-fragmentation-report-misses-point](http://www.androidcentral.com/another-android-fragmentation-report-misses-point)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**另一份 Android ''分裂''报告忽略了关键点** [在此查看](http://www.androidcentral.com/another-android-fragmentation-report-misses-point)'
- en: AOSP, GMS, and their forensic implications
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AOSP、GMS 及其取证影响
- en: Android and Google are not synonymous. The core Android OS is developed and
    maintained by Google and published open source via **Android Open Source Project**
    (**AOSP**). AOSP Android is freely available for everyone to take with no contracts
    to sign and no restrictions on how manufacturers can use and modify it. Manufacturers
    have the ability (both technical and legal) to create so-called Android forks,
    which are heavily modified versions of Android that may or may not be compatible
    with all Android apps. AOSP Android does not include any proprietary Google services
    (we will discuss more on that later).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Android 和 Google 并不是同义词。核心 Android 操作系统由 Google 开发和维护，并通过**Android 开源项目**（**AOSP**）以开放源代码发布。AOSP
    Android 是免费提供给任何人使用的，无需签署合同，并且制造商在使用和修改时没有任何限制。制造商具有（技术和法律上的）能力创建所谓的 Android 分支版本，这是经过高度修改的
    Android 版本，可能与所有 Android 应用兼容，也可能不兼容。AOSP Android 不包括任何专有的 Google 服务（稍后我们会讨论更多相关内容）。
- en: Majority of Chinese smartphones sold in mainland China are based on AOSP Android,
    while some are running customized versions of the OS (for example, Xiaomi MIUI
    or Meizu FlyMe).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 中国大陆出售的大多数智能手机基于 AOSP Android，而一些手机则运行定制的操作系统版本（例如，小米 MIUI 或魅族 FlyMe）。
- en: What makes Android devices so popular in the Western hemisphere is the Google-provided
    ecosystem. Google Play Store offers access to millions of games and applications.
    Google Maps offers convenient mapping services with free navigation and live traffic.
    Gmail (Google mail), Google Drive, Google Photos, Google Keep (notes), Google
    Chrome (browser), and a lot of other things Google comprise a closed-source ecosystem
    working under the **Google Mobile Services** (**GMS**) umbrella.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Android 设备在西半球如此受欢迎的原因在于 Google 提供的生态系统。Google Play 商店提供了数百万款游戏和应用的访问。Google
    地图提供了便捷的地图服务，包括免费的导航和实时交通信息。Gmail（Google 邮件）、Google Drive、Google Photos、Google
    Keep（便签）、Google Chrome（浏览器）等，以及其他许多 Google 产品，构成了一个在**Google 移动服务**（**GMS**） umbrella下运作的封闭源生态系统。
- en: In order to preinstall GMS on their devices, manufacturers must join the **Open
    Handset Alliance** (**OHA**) and sign a very restrictive agreement. The agreement
    does not allow OHA members to manufacture devices based on Android forks, which
    makes manufacturers choose between making AOSP-based devices without Google services
    or shipping GMS-enabled devices. It's an either/or condition.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在设备上预装 GMS，制造商必须加入**开放手机联盟**（**OHA**）并签署一份非常严格的协议。该协议不允许 OHA 成员制造基于 Android
    分支的设备，这使得制造商只能在没有 Google 服务的 AOSP 设备和启用 GMS 的设备之间做出选择。只能选择其一。
- en: Google Mobile Services are included with virtually all Android smartphones sold
    in the Western hemisphere. Google uses its services to collect large amounts of
    information from GMS-enabled devices. Location reporting, Google Account details,
    notes, search and browsing history, stored forms and passwords, synced application
    data, and a lot of other information is automatically transmitted to Google services
    by GMS-enabled devices.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Google 移动服务几乎包含了所有在西半球销售的 Android 智能手机。Google 使用其服务从启用 GMS 的设备收集大量信息。位置报告、Google
    帐号详情、便签、搜索和浏览历史、存储的表单和密码、同步的应用数据，以及其他许多信息，都会由 GMS 启用的设备自动传输到 Google 服务。
- en: Most of this data can be acquired or requested from Google. AOSP-based devices
    without Google Mobile Services do not report their usage to Google servers, and
    therefore, are much less susceptible to over-the-air acquisition techniques.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据中的大部分可以通过 Google 获取或请求。没有 Google 移动服务的基于 AOSP 的设备不会将其使用情况报告给 Google 服务器，因此，它们更不容易受到空中下载技术的影响。
- en: In the U.S., Amazon is the biggest company making devices based on an Android
    fork. Amazon's custom Android-based OS-dubbed Fire OS empowers the company's Fire
    tablets, including the original Amazon Kindle Fire, Kindle Fire HD, Kindle Fire
    HDX 7, Kindle Fire HDX 8.9 (2013), Fire HDX 8.9 (2014), as well as the entire
    2015 range. The only Amazon smartphone, Amazon Fire Phone, is also based on the
    Fire OS. Amazon Fire OS replaces Google Mobile Services with Amazon's in-house
    alternatives, offering alternative Maps, push and sync services, as well as its
    own app store. Older versions of Fire OS differed greatly from stock Android to
    the extent that Google Play Store would not run on the platform. The latest versions
    (Fire OS 5) are much closer to stock Android in look and feel, and offer much
    greater compatibility with Google services.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在美国，亚马逊是基于 Android 分叉系统开发设备的最大公司。亚马逊的定制 Android 系统——Fire OS，驱动着该公司推出的 Fire 平板，包括原版
    Kindle Fire、Kindle Fire HD、Kindle Fire HDX 7、Kindle Fire HDX 8.9（2013年版）、Fire
    HDX 8.9（2014年版）以及整个 2015 年系列。唯一的亚马逊智能手机 Amazon Fire Phone 也基于 Fire OS。Amazon Fire
    OS 用亚马逊自家的替代品替代了 Google 移动服务，提供了替代的地图、推送和同步服务以及自家的应用商店。较旧版本的 Fire OS 与原生 Android
    相差甚远，以至于 Google Play Store 无法在平台上运行。最新版本（Fire OS 5）在外观和操作体验上与原生 Android 更为相似，并且与
    Google 服务兼容性大大增强。
- en: Google Play Services help overcome platform fragmentation by providing timely
    background updates to users of all versions of Android since 2.3 Gingerbread.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Google Play 服务通过向所有版本的 Android（自 2.3 Gingerbread 起）用户提供及时的后台更新，帮助克服平台分裂问题。
- en: Note
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**The genius of Google Play Services: Tackling Android fragmentation, malware
    and forking in one fell swoop** at [http://www.androidcentral.com/genius-google-play-services](http://www.androidcentral.com/genius-google-play-services).'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Play 服务的天才之处：一举解决 Android 分裂、恶意软件和分叉问题** 见 [http://www.androidcentral.com/genius-google-play-services](http://www.androidcentral.com/genius-google-play-services)。'
- en: Android logical acquisition
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安卓逻辑获取
- en: The pure Android OS offers limited support for offline backups via ADB. Google
    implemented the ADB backup functionality in Android 4.0 Ice Cream Sandwich. The
    ADB backup functionality allows examiners to extract application data to a local
    PC over ADB. This process does not require root and works without custom recoveries
    or unlocking the bootloader; however, it extracts a very limited amount of information,
    and should only be used as the last resort. Additionally, using the ADB backup
    requires having the phone unlocked and the **ADB Debugging** option enabled.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 纯粹的 Android 操作系统对 ADB 离线备份的支持有限。Google 在 Android 4.0 冰激凌三明治版本中实现了 ADB 备份功能。ADB
    备份功能允许检查员通过 ADB 将应用程序数据提取到本地 PC。这一过程不需要 root 权限，也不需要自定义恢复模式或解锁引导加载程序；然而，它提取的信息非常有限，应该仅作为最后的手段使用。此外，使用
    ADB 备份功能需要解锁手机并启用 **ADB 调试** 选项。
- en: 'XDA developers published a complete guide for backing up the phone via ADB:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: XDA 开发者发布了一个完整的指南，用于通过 ADB 备份手机：
- en: '[http://forum.xda-developers.com/galaxy-nexus/general/guide-phone-backup-unlock-root-t1420351](http://forum.xda-developers.com/galaxy-nexus/general/guide-phone-backup-unlock-root-t1420351)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://forum.xda-developers.com/galaxy-nexus/general/guide-phone-backup-unlock-root-t1420351](http://forum.xda-developers.com/galaxy-nexus/general/guide-phone-backup-unlock-root-t1420351)'
- en: 'Additional information is available at:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 额外信息请参见：
- en: '[http://android.stackexchange.com/questions/28481/how-do-you-extract-an-apps-data-from-a-full-backup-made-through-adb-backup](http://android.stackexchange.com/questions/28481/how-do-you-extract-an-apps-data-from-a-full-backup-made-through-adb-backup)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://android.stackexchange.com/questions/28481/how-do-you-extract-an-apps-data-from-a-full-backup-made-through-adb-backup](http://android.stackexchange.com/questions/28481/how-do-you-extract-an-apps-data-from-a-full-backup-made-through-adb-backup)'
- en: 'The following command should produce a full backup of the device, complete
    with all APK files, including system apps and the content of the shared (`/sdcard`)
    storage:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令应生成设备的完整备份，包含所有 APK 文件，包括系统应用和共享 (`/sdcard`) 存储的内容：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The complete syntax is as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的语法如下：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The options are explained as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 各选项解释如下：
- en: Write an archive of the device's data to . If no `-f` option is supplied, then
    the data is written to `backup.ab` in the current directory.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将设备的数据写入归档文件。如果没有提供 `-f` 选项，则数据将写入当前目录下的 `backup.ab` 文件。
- en: '`-apk|-noapk` will enable/disable backup of the `.apks` itself in the archive;
    the default is `noapk`.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-apk|-noapk` 将启用/禁用备份 `.apks` 文件本身到归档文件中；默认值为 `noapk`。'
- en: '`-shared|-noshared` will enable/disable backup of the device''s shared storage
    / SD card contents; the default is `noshared`.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-shared|-noshared` 将启用/禁用设备共享存储 / SD 卡内容的备份；默认值为 `noshared`。'
- en: '`-all` means to back up all installed applications.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-all` 表示备份所有已安装的应用程序。'
- en: '`-system|-nosystem` toggles whether `-all` automatically includes system applications;
    the default is to include system apps.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-system|-nosystem` 切换是否将 `-all` 自动包含系统应用；默认情况下会包含系统应用。'
- en: '`<packages...></packages...>`is the list of applications to be backed up. If
    the `-all` or `-shared` flags are passed, then the package list is optional. Applications
    explicitly given on the command line will be included even if `-nosystem` would
    ordinarily cause them to be omitted.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<packages...></packages...>` 是待备份的应用程序列表。如果传递了 `-all` 或 `-shared` 标志，则包列表是可选的。命令行中明确指定的应用程序将被包含，即使
    `-nosystem` 通常会导致它们被排除。'
- en: For this to work, the phone must have **ADB Debugging** enabled and unlocked.
    The phone may display a prompt asking you to confirm the action.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使其正常工作，手机必须启用 **ADB 调试** 并解锁。手机可能会显示提示，要求您确认操作。
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In real life, specifying certain keys may cause the backup to fail. For example,
    when we attempted to back up a Motorola Nexus 6 with the `-noapk` option, the
    backup failed. However, using the `adb backup –all –f c:\temp\nexus6.ab` command
    completed correctly.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际操作中，指定某些选项可能会导致备份失败。例如，当我们尝试使用 `-noapk` 选项备份 Motorola Nexus 6 时，备份失败。然而，使用
    `adb backup –all –f c:\temp\nexus6.ab` 命令成功完成备份。
- en: Without root access, extraction via ADB backup is limited. ADB backup cannot
    acquire every application installed on the device. Developers can choose whether
    their apps allow backups or not. While the default setting is set to `on`, some
    developers choose to disable backups. It's worth noting that ADB backup does not
    capture the content of application cache. The ADB backup functionality is separate
    from the new cloud backups introduced with Android 6.0 Marshmallow.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有 root 权限的情况下，通过 ADB 备份提取的功能是有限的。ADB 备份无法获取设备上安装的所有应用程序。开发人员可以选择是否允许他们的应用程序进行备份。尽管默认设置为
    `on`，但一些开发者选择禁用备份。值得注意的是，ADB 备份无法捕获应用程序缓存的内容。ADB 备份功能与 Android 6.0 Marshmallow
    引入的新云备份功能是分开的。
- en: 'While performing logical acquisition of an Android device is possible without
    the use of any specific mobile forensic tools by using the manufacturer-specific
    drivers and **Android Debug Bridge** (**ADB**), you may want to use a commercial
    mobile forensic tool if you already own one. For example, the following is how
    you perform logical acquisition of an Android device with Oxygen Forensic Suite:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管通过使用制造商特定的驱动程序和 **Android 调试桥** (**ADB**) 可以在没有任何特定移动取证工具的情况下进行 Android 设备的逻辑采集，但如果您已经拥有商业化的移动取证工具，您可能更愿意使用它。例如，以下是使用
    Oxygen Forensic Suite 执行 Android 设备逻辑采集的步骤：
- en: Turn on and unlock the device.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开并解锁设备。
- en: Ensure that **USB debugging** is enabled in the **Developer** options, as shown
    in the following screenshot:![Android logical acquisition](img/0009.jpeg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在 **开发者选项** 中启用了 **USB 调试**，如下面的截图所示：![Android逻辑采集](img/0009.jpeg)
- en: Connect the device to your computer via a USB cable. On some devices, you may
    need to switch the USB connection mode from **Charging only** to **PTP** or **MTP**.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 USB 电缆将设备连接到计算机。在某些设备上，您可能需要将 USB 连接模式从 **仅充电** 切换到 **PTP** 或 **MTP**。
- en: Note
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Android offers a choice of connectivity options. You may see **Charging**, **File
    transfers (MTP)**, **Photo transfer (PTP)**, and other options. An ADB connection
    can only be established once you choose either **MTP** (Media Transfer Protocol
    for transferring files between your Android device and a Windows or Mac) or **PTP**
    (Photo Transfer Protocol, generally employed by devices such as printers and cameras
    for transferring photos). In our tests, we had a better success rate on selecting
    the **PTP** option.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Android 提供了多种连接选项。您可能会看到 **充电**、**文件传输（MTP）**、**照片传输（PTP）** 等选项。只有选择 **MTP**（媒体传输协议，用于在
    Android 设备和 Windows 或 Mac 之间传输文件）或 **PTP**（照片传输协议，通常由打印机和相机等设备用于传输照片）后，才能建立 ADB
    连接。在我们的测试中，选择 **PTP** 选项的成功率更高。
- en: '![Android logical acquisition](img/0010.jpeg)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Android逻辑采集](img/0010.jpeg)'
- en: Select **Connect device** | **Fast backup/image extraction...**, as shown in
    the following screenshot:![Android logical acquisition](img/0011.jpeg)
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **连接设备** | **快速备份/镜像提取...**，如下面的截图所示：![Android逻辑采集](img/0011.jpeg)
- en: Select **Android backup** and click on **Next**:![Android logical acquisition](img/0012.jpeg)
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **Android 备份** 并点击 **下一步**：![Android逻辑采集](img/0012.jpeg)
- en: Connect the device and follow the instructions:![Android logical acquisition](img/0013.jpeg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接设备并按照指示操作：![Android逻辑采集](img/0013.jpeg)
- en: On the Android device, you may need to authorize your PC as a debug bridge:![Android
    logical acquisition](img/0014.jpeg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Android设备上，您可能需要授权您的PC作为调试桥接：![Android逻辑获取](img/0014.jpeg)
- en: Oxygen Forensic Extractor will automatically establish a connection with the
    device and begin extracting the backup.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Oxygen Forensic Extractor将自动与设备建立连接并开始提取备份。
- en: Additional information on ADB backups is available in [Chapter 4](ch04.html
    "Chapter 4\. Practical Steps to Android Acquisition"), *Practical Steps to Android
    Acquisition*.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 关于ADB备份的更多信息，请参见[第4章](ch04.html "第4章．Android获取的实际步骤")，*Android获取的实际步骤*。
- en: OEM software
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: OEM软件
- en: 'Some manufacturers offer companion software to enable communication between
    the phone and the PC. The most common example is Apple iTunes, which is commonly
    used by forensic experts during logical acquisition. As an example, SONY PC Companion
    provides full backup and restore functionality for Xperia devices without the
    need to root or unlock bootloader. While using SONY PC Companion requires the
    user to unlock the device with the correct method (PIN, pattern, and so on), we''ve
    seen evidence of such lock measures being bypassed:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一些制造商提供配套软件以启用手机与PC之间的通信。最常见的例子是苹果iTunes，法医专家在进行逻辑获取时经常使用它。例如，SONY PC伴侣提供完整的备份和恢复功能，支持Xperia设备，无需root或解锁引导加载程序。尽管使用SONY
    PC伴侣需要用户用正确的方法解锁设备（PIN码、图案等），但我们已经见过一些绕过这种锁定措施的证据：
- en: '![OEM software](img/0015.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![OEM软件](img/0015.jpeg)'
- en: Sony PC Companion backup
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 索尼PC伴侣备份
- en: In addition, some OEMs (LG, ASUS, and many others) include their own proprietary
    software to allow backing up and restoring the entire contents of the device.
    Using these tools, however, requires that the device is unlocked, in which case
    other acquisition methods may be available.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一些OEM（如LG、华硕等）提供自己的专有软件，用于备份和恢复设备的全部内容。然而，使用这些工具需要设备已解锁，在这种情况下，可能还有其他获取方法可用。
- en: 'A backup extracted from an ASUS ZenPad S 8.0 tablet contains all of the following
    files:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 从ASUS ZenPad S 8.0平板提取的备份包含以下所有文件：
- en: '![OEM software](img/0016.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![OEM软件](img/0016.jpeg)'
- en: The content of ASUS ZenPad S 8.0 backup
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: ASUS ZenPad S 8.0备份的内容
- en: Backups made with proprietary tools generally contain device settings, passwords
    (or, in certain cases, authentication tokens that may or may not have expired
    by the time they are restored), the list of installed applications, as well as
    application data (and often application binaries). These backups do not have provision
    for accessing unallocated space.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用专有工具制作的备份通常包含设备设置、密码（或在某些情况下，身份验证令牌，这些令牌可能已过期，或者恢复时仍有效）、已安装的应用程序列表，以及应用程序数据（通常还包括应用程序二进制文件）。这些备份不包括访问未分配空间的功能。
- en: Android acquisition – special considerations
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android获取 – 特殊注意事项
- en: What happens to information that the user attempts to destroy? Deleted evidence
    may still be recovered—at least in Android smartphones. Rarely encrypted, Android
    devices are susceptible to various acquisition techniques, many of which enable
    access to deleted data. Let's look at how Android deletes information and what
    can be done to recover deleted data.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 用户试图销毁的信息会发生什么？已删除的证据仍然可以恢复——至少在Android智能手机中是这样。Android设备很少加密，容易受到各种获取技术的攻击，其中许多技术能够访问已删除的数据。我们来看看Android如何删除信息，以及如何恢复已删除的数据。
- en: Unallocated space
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 未分配空间
- en: In Android, unallocated space can usually be extracted along with the filesystem
    (which is not the case with Apple devices due to iOS full-disk encryption). However,
    it is important to realize that Android devices employ trim support, erasing the
    content of unallocated disk space every time the device is shut down. This is
    one of the reasons why standard acquisition techniques don't recommend turning
    the phone off at any time; instead, they advice putting the device on a charger
    and placing it into a Faraday bag.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android中，未分配空间通常可以与文件系统一起提取（而苹果设备则不行，因为iOS采用全盘加密）。然而，需要意识到的是，Android设备支持修整（trim）功能，每次设备关闭时，未分配磁盘空间的内容都会被擦除。这也是为什么标准的获取技术不建议在任何时候关闭手机的原因；相反，建议将设备连接到充电器并放入法拉第袋中。
- en: So what happens to unallocated (or released) space inside an Android phone?
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，Android手机中的未分配（或释放）空间会发生什么呢？
- en: eMMC storage
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: eMMC存储
- en: Let's take a look at how recent smartphones and tablets store information. Since
    2011, most Android smartphones use eMMC flash chips for non-volatile storage.
    Unlike the *plain* flash chips, eMMC storage integrates flash memory and controller
    onto a single chip planted into the phone's main board. The built-in controller
    is responsible for flash-specific operations to maintain data integrity while
    ensuring the optimum performance and lifespan of the NAND cells. The controller
    performs, among other things, operations such as trimming unused data blocks,
    remapping logical addresses to physical chips. The controller is also responsible
    for performing secure data erasure when requested.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看最近的智能手机和平板电脑是如何存储信息的。自2011年以来，大多数安卓智能手机都使用eMMC闪存芯片进行非易失性存储。与*普通*闪存芯片不同，eMMC存储将闪存内存和控制器集成到一个单芯片中，植入到手机的主板上。内建控制器负责执行特定于闪存的操作，以维护数据完整性，同时确保NAND单元的最佳性能和使用寿命。控制器执行的操作包括修剪未使用的数据块、将逻辑地址映射到物理芯片等。此外，控制器还负责在请求时执行安全数据擦除。
- en: Remapping and overprovisioning
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 重新映射与超额预留
- en: Internally, the built-in controller is responsible for establishing a link between
    addressable (logical) storage space and physical blocks in the flash chip. In
    other words, each logical block is mapped to a corresponding physical block by
    the eMMC controller. The reverse, however, is not true—we cannot say that each
    physical block has a corresponding addressable logical block assigned.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部，内建控制器负责在可寻址（逻辑）存储空间与闪存芯片中的物理块之间建立链接。换句话说，每个逻辑块都会通过eMMC控制器映射到一个对应的物理块。然而，反过来却不成立——我们不能说每个物理块都有一个对应的可寻址逻辑块。
- en: eMMC chips have more actual storage capacity than they advertise to the outside
    world. The extra physical data blocks are therefore non-addressable until called
    into service by the integral eMMC controller. This feature is called overprovisioning.
    Overprovisioned data blocks have no logical addresses. Any *bad sectors* (unstable
    or unreadable data blocks) will be permanently placed into the overprovisioned
    area. They'll never be assigned a logical address or be visible to the operating
    system, or anything at all, except the built-in eMMC controller.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: eMMC芯片的实际存储容量要比它对外宣称的要多。因此，额外的物理数据块在被eMMC控制器调用服务之前是不可寻址的。这个特性被称为超额预留。超额预留的数据块没有逻辑地址。任何*坏块*（不稳定或不可读的数据块）将永久性地被放置到超额预留区域。它们将永远不会被分配逻辑地址，也不会对操作系统或其他任何系统可见，只有内建的eMMC控制器可以访问它们。
- en: Note
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Important**: There is no feasible way of extracting information contained
    in the overprovisioned area. The entire area is invisible to logical or physical
    acquisition tools as these data blocks are not mapped onto available address space.
    These data blocks are only accessible to the internal controller, there is no
    interface available to intentionally access their contents from the outside the
    eMMC chip. As a result, even performing chip-off extraction will not give you
    access to physical blocks from the overprovisioned area, as chip-off extraction
    of eMMC chips is still based on sending commands to the eMMC controller.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要**：没有可行的方法可以提取超额预留区域中的信息。整个区域对逻辑或物理获取工具不可见，因为这些数据块没有映射到可用的地址空间。这些数据块只能由内部控制器访问，外部没有接口可以故意访问其内容。因此，即使进行芯片拆除提取，也无法访问超额预留区域中的物理块，因为eMMC芯片的芯片拆除提取仍然是通过向eMMC控制器发送命令进行的。'
- en: Wear leveling
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 磨损均衡
- en: Flash memory has several qualities unique to this type of storage. NAND flash
    chips have a limited lifespan by only supporting a finite number of write-erase
    cycles. After reaching the end of its effective lifespan, the flash chip may continue
    functioning, yet the data retention period may be severely affected (the data
    will get corrupted or disappear completely after the flash storage is powered
    off for a certain amount of time). As a result, the embedded eMMC controller will
    attempt to evenly distribute write cycles among available data blocks. This is
    called wear leveling.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 闪存有一些该类型存储特有的特点。NAND闪存芯片的使用寿命有限，只能支持有限次数的写入-擦除循环。达到有效使用寿命的终点后，闪存芯片可能仍然能够继续工作，但数据保持期可能会受到严重影响（在闪存存储断电一段时间后，数据可能会损坏或完全消失）。因此，嵌入式eMMC控制器将尽力将写入循环均匀地分配到可用的数据块中，这被称为磨损均衡。
- en: Trimming
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 修剪
- en: Another quality unique to flash storage is how they write information. Blocks
    must be erased before they can be written to. Erasing a *dirty* flash cell takes
    significantly more time than writing into an already empty block. In order to
    work around this issue, the eMMC controller will perform background garbage collection
    by trimming (erasing) released blocks when the controller is idle. In order to
    make a certain logical address immediately writeable after its content was deleted
    (and the block was advertised as available, but not yet erased), the controller
    may perform address remapping by pointing this logical block to an already empty
    physical cell. Unlike erasing, remapping happens instantly, making the block that
    used to contain deleted data writeable without the wait associated with erasing
    its content.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 闪存存储的另一个独特特性是它们写入信息的方式。块必须先被擦除才能写入。擦除一个*脏*闪存单元所需的时间比写入到一个已经空闲的块所需的时间要长得多。为了绕过这个问题，eMMC
    控制器将在空闲时通过修剪（擦除）已释放的块进行后台垃圾回收。为了使某个逻辑地址在其内容被删除后立即可写（而且该块已被标记为可用，但尚未擦除），控制器可能会通过将该逻辑块指向一个已经空闲的物理单元来执行地址重映射。与擦除不同，重映射是瞬时发生的，使得曾经包含已删除数据的块可以无需等待擦除过程即可被写入。
- en: Due to Android platform fragmentation, trim support in Android varies between
    versions and among the different OEMs. Full-trim support only came to Android
    in version 4.3 Jelly Bean. Moreover, full-trim support is only guaranteed in devices
    that originally shipped with Android 4.3 or newer, which excludes devices upgrading
    from earlier versions of Android. While some manufacturers implemented trim support
    during the course of updating devices to newer versions of Android, some other
    OEMs never bothered. As a result, a large number of devices that originally shipped
    with Android 4.2 and were updated to Android Kit Kat or even Lollipop never received
    proper trim support.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Android 平台的碎片化，Android 的修剪支持在不同版本之间以及不同 OEM 之间有所不同。完全修剪支持直到 Android 版本 4.3
    Jelly Bean 才开始支持。此外，完全修剪支持仅保证在原本搭载 Android 4.3 或更新版本的设备上，这意味着从早期 Android 版本升级的设备不在此范围内。虽然一些制造商在更新设备到新版本
    Android 时实现了修剪支持，但其他一些 OEM 从未处理过此问题。因此，许多最初搭载 Android 4.2 并更新到 Android Kit Kat
    或甚至 Lollipop 的设备，始终没有获得正确的修剪支持。
- en: Earlier versions of Android without full-trim support used to include a basic
    form of trimming. With no *live* trimming available in older Android builds, the
    cleanup (trimming) was performed every time the device was shut down. This is
    one of the reasons for the ACPO requirements to keep devices powered on instead
    of shutting them down. On a side note, simply removing the battery would not trigger
    the cleanup stage.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 早期没有完全修剪支持的 Android 版本曾经包含一种基本的修剪形式。在旧版 Android 中没有*实时*修剪的情况下，每次设备关机时都会执行清理（修剪）。这也是
    ACPO 要求保持设备开机而不是关机的原因之一。顺便说一句，仅仅移除电池并不会触发清理阶段。
- en: If you are handling an Android device, and it's one of the older ones, you may
    be able to dump a physical image of its eMMC chip and access information about
    its unallocated space.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在处理一台 Android 设备，并且它是旧版设备，你可能能够导出其 eMMC 芯片的物理镜像，并访问其未分配空间的信息。
- en: What happens to the deleted data?
  id: totrans-95
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除的数据会发生什么？
- en: So what happens to information stored in the blocks released by the operating
    system? The Android OS (depending on the version) will pass a `trim` command to
    the eMMC controller, telling it that a certain logical block is no longer used.
    The controller assigns a special status of *do not care* to the physical block
    corresponding to this logical address, adding the physical block to the *to be
    erased* list and remapping the logical address to a clean physical block (either
    from an existing address space or from the overprovisioned area).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，操作系统释放的块中的信息会发生什么呢？Android 操作系统（取决于版本）会向 eMMC 控制器发送一个`trim`命令，告诉它某个逻辑块不再使用。控制器将给与该逻辑地址对应的物理块一个特殊状态，标记为*无所谓*，将该物理块添加到*待擦除*列表，并将逻辑地址重新映射到一个干净的物理块（可以是现有地址空间中的，或者是超额配置区域中的）。
- en: Notably, the controller may or may not decide to push a newly released physical
    block out of the addressable space and into the overprovisioned area. As a result,
    the content of a deleted logical block may remain available in the addressable
    space for a while. This phenomenon enables forensic specialists to carve information
    from unallocated areas.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，控制器可能会或可能不会决定将新发布的物理块从可寻址空间推送到超配区域。因此，已删除的逻辑块的内容可能会在可寻址空间中保留一段时间。这个现象使得法医专家能够从未分配的区域中恢复信息。
- en: If you need more information about what happens to information deleted from
    Android devices, refer to the *Security Analysis of Android Factory Resets* publication
    by *Laurent Simon* and *Ross Anderson* (*University of Cambridge*) at [http://www.cl.cam.ac.uk/~rja14/Papers/fr_most15.pdf](http://www.cl.cam.ac.uk/~rja14/Papers/fr_most15.pdf)
    . In this paper, the scientists studied the implementation of factory reset on
    multiple Android smartphones running Android versions 2.3.x to 4.3, reviewed how
    Android smartphones handle deleted files, and discovered that, in many cases,
    user data is still available after a factory reset due to improper implementations
    of the function by many device manufacturers.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要了解关于 Android 设备上删除的信息会发生什么，请参考*Laurent Simon* 和 *Ross Anderson*（*剑桥大学*）发布的《*Android
    工厂重置的安全分析*》论文，论文可通过 [http://www.cl.cam.ac.uk/~rja14/Papers/fr_most15.pdf](http://www.cl.cam.ac.uk/~rja14/Papers/fr_most15.pdf)
    获取。在这篇论文中，科学家研究了多款运行 Android 2.3.x 至 4.3 版本的 Android 智能手机上的工厂重置实现，回顾了 Android
    智能手机如何处理已删除文件，并发现，在许多情况下，由于许多设备制造商对该功能的实现不当，用户数据在工厂重置后仍然可以访问。
- en: JTAG forensics
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JTAG 取证
- en: JTAG forensics is an advanced acquisition procedure that uses **test access
    ports** (**TAP**) standardized by the **Joint Test Action Group** (**JTAG**) association.
    These ports, among other things, can be utilized to access raw data stored in
    the connected device. The acquisition process involves using existing solder points
    on the device's circuit board. By using specialized equipment and a matching device-specific
    JTAG cable, one can retrieve the entire flash memory contents (less the eMMC overprovisioned
    area, but including addressable unallocated space) from compatible devices. Notably,
    JTAG acquisition is often available even for locked, damaged, or otherwise inaccessible
    devices. JTAG acquisition is available for many Android devices, as well as some
    feature phones and Windows Phone 7 and 8 devices.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: JTAG 取证是一种先进的数据获取程序，使用**联合测试行动小组**（**JTAG**）协会标准化的**测试接入端口**（**TAP**）。这些端口可以用于访问连接设备中存储的原始数据等内容。获取过程涉及使用设备电路板上现有的焊接点。通过使用专用设备和与设备匹配的
    JTAG 电缆，专家可以从兼容设备中提取整个闪存内容（去除 eMMC 超配区，但包括可寻址的未分配空间）。值得注意的是，即使是被锁定、损坏或其他无法访问的设备，JTAG
    获取仍然是可行的。JTAG 获取适用于许多 Android 设备，以及一些功能手机和 Windows Phone 7 和 8 设备。
- en: JTAG forensics is a labor-intensive and time-consuming process requiring an
    expert to use a well-equipped lab. As such, forensic experts tend to try JTAG
    acquisition after other methods prove unsuccessful.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: JTAG 取证是一个劳动密集型且耗时的过程，要求专家在设备齐全的实验室中操作。因此，法医专家往往在其他方法无效后尝试 JTAG 获取数据。
- en: When to JTAG a device
  id: totrans-102
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 何时进行 JTAG 取证
- en: JTAG is an invasive acquisition method since it requires disassembling the device
    to a certain level and soldering wires to the contacts of the test port. While
    being invasive, JTAG is not considered a destructive method by many experts. If
    JTAG is performed carefully, the device, if it was in working order prior to the
    JTAG procedure, will continue to work post JTAG—which is exactly what the test
    port is designed for. From time to time, JTAG can still result in the device being
    rendered inoperable. For this reason, JTAG forensics is normally used when commercial
    forensic tools fail to image the device, or when the device is soft-bricked or
    unbootable. This includes devices locked with an unknown passcode and the **USB
    debugging** option not enabled if no exploit is available to bypass protection.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: JTAG 是一种侵入式获取方法，因为它需要将设备拆解到一定程度，并将电线焊接到测试端口的接触点上。尽管具有侵入性，但许多专家认为 JTAG 并不是一种破坏性的方法。如果操作得当，JTAG
    过程前设备处于正常工作状态时，设备在 JTAG 处理后仍会继续工作——这正是测试端口的设计初衷。尽管如此，JTAG 操作有时仍会导致设备无法使用。因此，JTAG
    取证通常用于商业法医工具无法提取设备数据，或者设备软砖化或无法启动时。这包括被锁定且密码未知的设备，以及未启用**USB 调试**选项且无法绕过保护的设备。
- en: 'JTAG acquisition produces a full image of the device''s memory complete with
    unallocated space. This is how JTAG acquisition may look in a lab:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: JTAG采集会生成设备内存的完整映像，包括未分配的空间。这就是JTAG采集在实验室中的样子：
- en: '![When to JTAG a device](img/0017.jpeg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![何时使用JTAG对设备进行提取](img/0017.jpeg)'
- en: 'JTAG acquisition of Nokia Lumia 920\. Image source: SYTECH Digital Forensics,
    http://sytech-consultants.com/.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 诺基亚Lumia 920的JTAG采集。图片来源：SYTECH数字取证，http://sytech-consultants.com/.
- en: Limitations of JTAG forensics
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: JTAG取证的限制
- en: JTAG extraction is a low-level acquisition method that returns raw content of
    the device storage. If full-disk encryption is enabled, JTAG will extract a raw
    encrypted image. Breaking the encryption may or may not be an option, depending
    on the manufacturer (Samsung is renowned for *making things different*), phone
    model, and Android version.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: JTAG提取是一种低级别的采集方法，它返回设备存储的原始内容。如果启用了全盘加密，JTAG将提取原始加密映像。是否能够破解加密取决于制造商（例如三星以*与众不同*而闻名）、手机型号和Android版本。
- en: In order to extract a decrypted image, a higher level API must be used. This,
    however, may require unlocking the device with the correct passcode (or an alternative
    method, such as pattern or knock code). Full-disk encryption is active out-of-the-box
    on some Samsung devices, Google-manufactured devices running Android 5 (such as
    Nexus 6 and Nexus 9), as well as some other flagship phones sold by leading manufacturers.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提取解密的映像，必须使用更高级别的API。不过，这可能需要用正确的密码解锁设备（或采用其他方法，如图案或敲击密码）。某些三星设备、运行Android
    5的谷歌制造设备（如Nexus 6和Nexus 9）以及一些其他由领先制造商销售的旗舰手机，开箱即启用全盘加密。
- en: JTAG processes are minimally documented and require an expert examiner. Some
    manufacturers disable TAP on their devices after they leave the factory, so JTAG
    acquisition may not be available even if a TAP port is visibly present.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: JTAG过程的文档资料极为有限，并且需要专家级检查员。有些制造商在设备出厂后会禁用TAP端口，因此即使设备上有TAP端口，JTAG采集可能也无法进行。
- en: The full image extracted via JTAG does not include the overprovisioned area.
    JTAG will not bypass the controller and can only obtain access to the device memory
    area allowed by the controller of the device being acquired, unless the examiner
    is using an advanced form of JTAG called **Boundary Scan**. In other words, without
    using the Boundary Scan technique, the overprovisioned area is inaccessible with
    standard JTAG method. Yet, even using the Boundary Scan technique, examiners can
    only access as much information as can be obtained from the embedded storage.
    If the device uses eMMC memory, all extraction requests are still routed through
    the embedded controller integrated into the eMMC chip, which in turn will not
    allow accessing the content of flash chip(s) directly. As a result, the Boundary
    Scan technique is only effective if the device is equipped with plain flash chips,
    which is not the case for up-to-date devices (for example, majority of Android
    smartphones has been using eMMC chips since Android 2.3). Notably, some entry-level
    no-name Chinese smartphones are still equipped with plain flash chips instead
    of eMMC.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 通过JTAG提取的完整映像不包括过度配置区域。JTAG不会绕过控制器，只能访问设备控制器允许的设备内存区域，除非检查员使用一种被称为**边界扫描**的高级JTAG形式。换句话说，未使用边界扫描技术时，标准JTAG方法无法访问过度配置区域。然而，即便使用边界扫描技术，检查员也只能访问从嵌入式存储中提取的信息。如果设备使用eMMC内存，所有提取请求仍会通过集成在eMMC芯片中的嵌入式控制器进行路由，而该控制器又不允许直接访问闪存芯片的内容。因此，边界扫描技术仅在设备配备普通闪存芯片时有效，而当前的设备大多使用eMMC芯片（例如，大多数Android智能手机自Android
    2.3以来一直使用eMMC芯片）。值得注意的是，一些入门级的无品牌中国智能手机仍然使用普通闪存芯片而非eMMC。
- en: Despite the limitations, JTAG remains a viable acquisition method for compatible
    devices. Google decided to back away from encrypting new Android 5.0 devices ([http://arstechnica.com/gadgets/2015/03/google-quietly-backs-away-from-encrypting-new-lollipop-devices-by-default/](http://arstechnica.com/gadgets/2015/03/google-quietly-backs-away-from-encrypting-new-lollipop-devices-by-default/)),
    removing the requirement to enforce full-disk encryption in existing devices receiving
    an upgrade to Android 5.0/5.1, as well as newly released phones running Lollipop
    out-of-the-box. You can use JTAG forensics on compatible phones only if they are
    not using whole-disk encryption.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存在一些限制，JTAG 仍然是兼容设备的一种可行获取方法。谷歌决定放弃对新 Android 5.0 设备进行加密（[http://arstechnica.com/gadgets/2015/03/google-quietly-backs-away-from-encrypting-new-lollipop-devices-by-default/](http://arstechnica.com/gadgets/2015/03/google-quietly-backs-away-from-encrypting-new-lollipop-devices-by-default/)），取消了要求在升级到
    Android 5.0/5.1 的现有设备中强制执行全盘加密的要求，以及新发布的 Lollipop 系统手机的默认加密。只有当手机没有使用全盘加密时，您才能对兼容的手机使用
    JTAG 取证。
- en: Step-by-step JTAG acquisition
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 步骤逐步的 JTAG 获取
- en: 'This book targets mobile forensic experts in general, so we don''t discuss
    JTAG extraction in detail. Sending the phone to a lab specializing in low-level
    extractions is probably your best option. In the lab, they''ll perform the following
    steps:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向移动取证专家，因此我们不会详细讨论 JTAG 提取。将手机送往专门从事低级提取的实验室可能是您最好的选择。在实验室中，他们将执行以下步骤：
- en: The expert will attempt to identify TAP by researching available service documentation
    for the particular device model. If no service documentation is available, the
    examiner will open the device and inspect its PCB for potential TAPs, and then
    manually probe to identify TAP connector pins.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 专家将尝试通过研究特定设备型号的服务文档来识别 TAP。如果没有服务文档可用，检查员将打开设备并检查其 PCB，寻找潜在的 TAP，然后手动探测以识别
    TAP 连接器引脚。
- en: The expert will then attach wire leads to the correct connector pins by either
    soldering the connectors or utilizing a solderless jig.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 专家随后将通过焊接连接器或使用无焊接夹具，将电线引线连接到正确的连接器引脚。
- en: The wire leads will be connected to an appropriate JTAG emulator supporting
    the device being analyzed.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 电线引线将连接到支持正在分析设备的适当 JTAG 仿真器。
- en: By sending appropriate commands to the exhibit device via the TAP, the expert
    will make the device dump its flash memory contents. The raw dump will be captured
    by the JTAG emulator and will be saved into a binary file.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过向展品设备发送适当的命令，专家将使设备转储其闪存内容。原始转储将由 JTAG 仿真器捕获，并保存为二进制文件。
- en: The binary file with raw contents of the memory chips will be presented to you
    for analysis. The dump may or may not be encrypted, and it may or may not be possible
    to decrypt its content at that time even if the lock screen passcode is known.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 包含内存芯片原始内容的二进制文件将提供给您进行分析。该转储可能已加密，也可能未加密，即使知道锁屏密码，也可能无法在当时解密其内容。
- en: At this time, you can use a mobile forensic tool of your choice to load the
    content of the JTAG dump and parse and analyze its content.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，您可以使用您选择的移动取证工具加载 JTAG 转储的内容并解析和分析其内容。
- en: Chip-off acquisition
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Chip-off 获取
- en: Chip-off acquisition is a highly advanced, destructive extraction technique
    that requires attaching wire leads to the PCB contacts or physically removing
    (desoldering) the phone's flash memory chip. Chip-off is considered more difficult
    compared to JTAG; however, the amount of information acquired via chip-off acquisition
    is similar to the amount of data acquired by JTAGging the device. Since most smartphones
    use standard eMMC flash modules, the process is standardized and typically presents
    no surprises to the examiner.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Chip-off 获取是一种高度先进的破坏性提取技术，需要将电线引线连接到 PCB 接触点或物理移除（拆焊）手机的闪存芯片。与 JTAG 相比，Chip-off
    被认为更困难；然而，通过 Chip-off 获取到的信息量与通过 JTAG 提取设备获得的数据量相似。由于大多数智能手机使用标准的 eMMC 闪存模块，过程是标准化的，通常不会给检查员带来意外。
- en: In the world of mobile forensics, the lowest-level access is not always the
    best. While reading the chips directly produces a complete raw dump of the memory
    chips, the investigator may be faced with an encrypted partition with no decryption
    keys stored anywhere around. In the case of Apple devices, many Samsung phones,
    and some other devices (for example, the Android 5 Nexus line), encryption is
    enforced out-of-the-box and may not be bypassed during or after the chip-off acquisition
    even if the correct passcode is known. Сhip-off acquisition delivers the best
    result when used on unencrypted devices.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动取证的世界中，最低级别的访问并不总是最好的。虽然直接读取芯片可以生成内存芯片的完整原始转储，但调查员可能会面对一个加密分区，而加密密钥并未存储在任何地方。在苹果设备、许多三星手机以及一些其他设备（例如，Android
    5 Nexus 系列）的情况下，加密是开箱即用的，并且即使知道正确的密码，也无法在芯片卸载采集过程中绕过加密。芯片卸载采集在未加密设备上使用时能获得最佳结果。
- en: Chip-off and encryption
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 芯片卸载与加密
- en: Chip-off often involves removing the memory chip from the circuit board and
    using special eMMC adapters to make a raw dump of the memory chip. If full-disk
    encryption was enabled on the device, on many Android versions prior to Android
    5.0 Lollipop (with the default encryption scheme), it is then possible to attempt
    carving the raw data dump in order to locate and extract the encryption metadata.
    If the encryption metadata is successfully extracted, the analyst can then attempt
    to brute-force the passcode and decrypt the image.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 芯片卸载通常涉及从电路板上移除内存芯片，并使用特殊的 eMMC 适配器制作内存芯片的原始转储。如果设备启用了全盘加密，在许多 Android 5.0 Lollipop
    之前的 Android 版本中（使用默认加密方案），就可以尝试在原始数据转储中进行数据雕刻，以便定位并提取加密元数据。如果成功提取了加密元数据，分析员可以尝试暴力破解密码并解密镜像。
- en: Chip-off extraction is the lowest-level acquisition method available. Chip-off
    is often used as a last resort if both physical acquisition and JTAG extraction
    fail. If full-disk encryption has been used, chip-off acquisition will result
    in an encrypted image that may or may not be possible to decrypt.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 芯片卸载提取是可用的最低级别采集方法。如果物理采集和 JTAG 提取都失败，芯片卸载通常作为最后的手段。如果使用了全盘加密，芯片卸载采集将导致一个加密的镜像，可能无法解密。
- en: Note that this technique does not work on many Samsung phones with fairly recent
    firmware, as well as on most devices running Android 5.0 and later versions of
    Android. Recent Samsung devices (as well as all Android 5.x smartphones) encrypt
    metadata with a master key, while the master key itself is stored in a protected
    area that cannot be accessed via chip-off.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这项技术在许多具有较新固件的三星手机上不起作用，也在大多数运行 Android 5.0 及以后版本的 Android 设备上无法使用。近期的三星设备（以及所有
    Android 5.x 智能手机）使用主密钥加密元数据，而主密钥本身存储在一个无法通过芯片卸载访问的受保护区域中。
- en: In-system programming forensics
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 系统编程取证
- en: 'In-system programming forensics is a non-destructive variation of the chip-off
    acquisition. ISP is an advanced acquisition process that is in between JTAG and
    chip-off. During the acquisition process, examiners can attempt to dump the content
    of the eMMC memory without removing the chip. ISP acquisition is only available
    for devices utilizing eMMC or eMCP-style BGA chips. Access to the memory is obtained
    through access points around the BGA chip. This acquisition process is considered
    non-destructive in that, if all stars align, the device can be reassembled and
    booted after the extraction. This is how ISP acquisition may look in a lab:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 系统编程取证是芯片卸载采集的一种非破坏性变体。ISP 是一种高级采集过程，介于 JTAG 和芯片卸载之间。在采集过程中，检查员可以尝试不移除芯片就转储
    eMMC 内存的内容。ISP 采集仅适用于使用 eMMC 或 eMCP 样式 BGA 芯片的设备。通过 BGA 芯片周围的接入点获取对内存的访问。这个采集过程被认为是非破坏性的，因为如果一切顺利，设备在提取后可以重新组装并启动。这是实验室中
    ISP 采集的样子：
- en: '![In-system programming forensics](img/0018.jpeg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![系统编程取证](img/0018.jpeg)'
- en: 'eMMC adapter attached to a smartphone PCB. Source: http://easy-jtag.com/.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到智能手机 PCB 的 eMMC 适配器。来源：http://easy-jtag.com/。
- en: 'The following is a schematic image of JTAG eMMC pinout (courtesy of Easy Jtag):'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 JTAG eMMC 引脚图的示意图（感谢 Easy Jtag 提供）：
- en: '![In-system programming forensics](img/0019.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![系统编程取证](img/0019.jpeg)'
- en: 'Easy JTAG eMMC box. Source: http://easy-jtag.com/.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Easy JTAG eMMC 盒子。来源：http://easy-jtag.com/。
- en: 'Teel Technologies ([http://www.teeltech.com/mobile-device-forensics-training/in-system-programming-for-mobile-device-forensics/](http://www.teeltech.com/mobile-device-forensics-training/in-system-programming-for-mobile-device-forensics/))
    lists the following benefits for ISP acquisition:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: Teel Technologies（[http://www.teeltech.com/mobile-device-forensics-training/in-system-programming-for-mobile-device-forensics/](http://www.teeltech.com/mobile-device-forensics-training/in-system-programming-for-mobile-device-forensics/)）列出了
    ISP 采集的以下优点：
- en: Enables examiners to bypass lock codes and recover the complete dataset from
    phones that are not supported by JTAG or commercial tools
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使检查员能够绕过锁码，从不支持 JTAG 或商业工具的手机中恢复完整的数据集
- en: Non-destructive practice that achieves the same results as a chip-off, while
    leaving the original evidence intact
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种非破坏性的操作方法，能够实现与芯片拆除相同的结果，同时保持原始证据完好无损
- en: Acquires data much faster than JTAG, enabling examiners to process more phones
    faster
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比 JTAG 快得多，能够更快速地收集数据，使检查员能够更高效地处理更多手机
- en: Fewer resources and tools are required to perform an ISP download compared to
    chip-off
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行 ISP 下载所需的资源和工具比芯片拆除更少
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at the Android OS from the forensic standpoint. We
    reviewed the various acquisition options and discussed how to perform logical
    acquisition of an Android device. We also took a look at the issue of deleted
    evidence, and discussed when and how deleted data can be recovered. In the next
    chapter, we'll continue working with Android devices, learning about some of the
    most commonly used forensic techniques—physical acquisition.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们从取证的角度审视了 Android 操作系统。我们回顾了各种数据采集选项，并讨论了如何进行 Android 设备的逻辑采集。我们还探讨了已删除证据的问题，并讨论了何时以及如何恢复已删除的数据。在下一章，我们将继续研究
    Android 设备，学习一些最常用的取证技术——物理采集。
