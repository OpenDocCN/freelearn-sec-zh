- en: Reconnaissance
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 侦察
- en: 'This chapter will include the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将包括以下内容：
- en: Using Google to find subdomains
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Google查找子域名
- en: Finding e-mail addresses using theHarvester
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用theHarvester查找电子邮件地址
- en: Enumerating DNS using the `host` command
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`host`命令枚举DNS
- en: Enumerating DNS using DNSRecon
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用DNSRecon枚举DNS
- en: Enumerating DNS using the `dnsenum` command
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`dnsenum`命令枚举DNS
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: In this chapter, we will begin the process of gathering information on our target. This
    begins with utilizing passive information-gathering techniques using public sources
    and moves into the active scanning of our target. At this point, it makes sense
    for us to discuss what our strategy is. Once the targets are determined, we will
    want to start collecting information on them. One of the key pieces of information
    is their domain. The **Domain Name System** (**DNS**) is a system of databases
    used to look up IP address(es) for a domain or, given an IP address, provide the
    domain name associated with it. Identifying the domains and subdomains associated
    with the target will provide us with a better idea of the targets assets and organization. We
    start by using Google and other public sources to reveal what we can. This is
    called **reconnaissance** or **passive information gathering**.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将开始收集关于目标的信息。这一过程从利用公共来源的被动信息收集技术开始，然后转向对目标的主动扫描。此时，我们需要讨论我们的策略。一旦确定目标，我们就需要开始收集它们的信息。关键信息之一是它们的域名。**域名系统**（**DNS**）是一个数据库系统，用于查找域名的IP地址，或者给定一个IP地址，提供与之相关联的域名。识别与目标相关联的域名和子域名将帮助我们更好地了解目标的资产和组织。我们首先使用Google和其他公共来源来揭示我们能找到的信息。这就是所谓的**侦察**或**被动信息收集**。
- en: When we have completed finding what we can using public sources, we move into
    the active information-gathering phase. The delineation here is that moving forward,
    we will be physically interacting with the target's assets. We begin by actively
    querying the target's DNS servers to uncover more information. Using this information,
    we can begin to narrow in on our target. The goal of this exercise is to uncover
    networks of the target suitable for further investigation.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们完成利用公共来源找到的信息后，我们将进入主动信息收集阶段。这里的界定是，接下来我们将与目标的资产进行物理交互。我们首先通过主动查询目标的DNS服务器来获取更多信息。利用这些信息，我们可以开始缩小目标范围。本次操作的目标是发现适合进一步调查的目标网络。
- en: Next, in [Chapter 3](part0103.html#3279U1-cf89710d791c4a3bb78ec273d9322426),
    *Discovery*, we perform discovery scanning to identify live hosts on the network(s).
    In the context of penetration testing, this is usually performed to identify potential
    targets for attack. The objective here is not to exhaust resources in gathering
    information about targets, but instead to merely find out where the targets are
    logically located. The final product of our discovery should be a list of IP addresses
    that we can then use for further analysis.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在[第3章](part0103.html#3279U1-cf89710d791c4a3bb78ec273d9322426)《*发现*》中，我们进行发现扫描，以识别网络上的活动主机。在渗透测试的背景下，这通常是为了识别潜在的攻击目标。这里的目标不是耗费资源去收集关于目标的信息，而是简单地找出目标在逻辑上的位置。我们发现的最终成果应该是一个IP地址列表，接下来可以用于进一步分析。
- en: 'After identifying IP addresses, we will then identify the open ports on these
    machines; this is covered in [Chapter 4](part0146.html#4B7I41-cf89710d791c4a3bb78ec273d9322426),
    *Port Scanning*.  After identifying the open ports, we then want to identify the
    services and as many details about the service version, OS, and other details
    as we can; this is covered in [Chapter 5](part0189.html#5K7QA1-cf89710d791c4a3bb78ec273d9322426),
    *Fingerprinting*.  Using the information found here, we will look to uncover specific
    vulnerabilities on the target''s assets; this is covered in [Chapter 6](part0255.html#7J5VE1-cf89710d791c4a3bb78ec273d9322426),
    *Vulnerability Scanning*. The following diagram summarizes the aforementioned
    methodology:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在识别IP地址之后，我们将识别这些机器的开放端口；这在[第4章](part0146.html#4B7I41-cf89710d791c4a3bb78ec273d9322426)《*端口扫描*》中有所介绍。在识别开放端口后，我们需要确定服务及其版本、操作系统和其他尽可能多的细节；这在[第5章](part0189.html#5K7QA1-cf89710d791c4a3bb78ec273d9322426)《*指纹识别*》中有所介绍。利用这里找到的信息，我们将寻找目标资产上的特定漏洞；这在[第6章](part0255.html#7J5VE1-cf89710d791c4a3bb78ec273d9322426)《*漏洞扫描*》中有所介绍。下图总结了上述方法：
- en: '![](../images/00607.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00607.jpeg)'
- en: Using Google to find subdomains
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Google查找子域名
- en: A great deal of information can be gathered from publicly available sources. As
    penetration testers, we should take advantage of any methods to gather valuable
    information about our targets anonymously.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 很多信息可以通过公开的来源收集。作为渗透测试者，我们应当利用任何方法以匿名的方式收集关于目标的有价值信息。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: All that is needed to perform this exercise is Internet access and a web browser.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 执行这个操作只需要互联网连接和一个网页浏览器。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何进行…
- en: In this example, we will use the Google search engine; however, know that there
    are a number of search engines that can provide similar information and, in some
    cases, more or different data. The Google search engine provides a number of search
    operators that allow you to narrow your results when performing queries. A few
    that can come in particularly handy for the penetration tester are `site:`, `inurl:`,
    and `intitle:`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用Google搜索引擎；然而，请注意，实际上有许多其他搜索引擎可以提供类似的信息，并且在某些情况下，它们还可以提供更多或不同的数据。Google搜索引擎提供了一些搜索操作符，可以帮助你在执行查询时缩小搜索结果范围。对渗透测试者特别有用的几个操作符包括`site:`、`inurl:`和`intitle:`。
- en: 'For our purposes (finding subdomains), we will use the `site:` search operator,
    as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的（查找子域），我们将使用`site:`搜索操作符，如下所示：
- en: 'Navigate to [https://www.google.com](https://www.google.com), and we will search
    for sites that are part of the `google.com` domain.  We do this by searching `site:google.com`,
    as shown in the following screenshot:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://www.google.com](https://www.google.com)，我们将搜索属于`google.com`域的站点。我们通过搜索`site:google.com`来实现，如下图所示：
- en: '![](../images/00609.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00609.jpeg)'
- en: 'As you can see, Google finds about 2.9 billion results, but almost all of the
    results are of the subdomain `www.google.com`. So, our next step is to filter
    these out so we can continue to find unique subdomains. We do this by modifying
    our query `site:google.com -site:www.google.com`, as shown in the following screenshot:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如你所看到的，Google找到了大约29亿个结果，但几乎所有结果都是`www.google.com`子域。因此，我们的下一步是过滤掉这些结果，以便继续查找独特的子域。我们通过修改查询`site:google.com
    -site:www.google.com`来完成这一操作，如下图所示：
- en: '![](../images/00611.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00611.jpeg)'
- en: 'We find the additional subdomains of cloud.google.com, translate.google.com,
    gsuite.google.com, duo.google.com, domains.google.com, store.google.com, blog.google.com,
    firebase.google.com, on.google.com and developers.google.com. In some cases, you
    may need to repeat this process a number of times, excluding subdomains as you
    find them:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们找到了cloud.google.com、translate.google.com、gsuite.google.com、duo.google.com、domains.google.com、store.google.com、blog.google.com、firebase.google.com、on.google.com和developers.google.com等附加子域。在某些情况下，你可能需要多次重复这一过程，逐步排除已找到的子域：
- en: '`site:google.com -site:www.google.com -site:cloud.google.com -site:translate.google.com
    -site:gsuite.google.com -site:duo.google.com -site:domains.google.com -site:store.google.com
    -site:blog.google.com -site:firebase.google.com -site:on.google.com -site:developers.google.com`'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`site:google.com -site:www.google.com -site:cloud.google.com -site:translate.google.com
    -site:gsuite.google.com -site:duo.google.com -site:domains.google.com -site:store.google.com
    -site:blog.google.com -site:firebase.google.com -site:on.google.com -site:developers.google.com`'
- en: '![](../images/00612.jpeg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00612.jpeg)'
- en: How it works...
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Google is a powerful tool with a wealth of knowledge. Learning how to use its
    search operators can prove very powerful and valuable for the penetration tester.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Google是一个功能强大的工具，拥有丰富的知识。学习如何使用它的搜索操作符，对于渗透测试者来说，非常有用和有价值。
- en: Finding e-mail addresses using theHarvester
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用theHarvester查找电子邮件地址
- en: Using publicly available information, we can also gather information on individuals
    belonging to our target organization. This type of passive information gathering
    could become very valuable for social engineering or deploying an attack.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过公开可用的信息，我们还可以收集关于目标组织成员的个人信息。这种被动信息收集对于社会工程学或部署攻击可能非常有价值。
- en: Getting ready
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: theHarvester comes preinstalled on Kali Linux. If you are using a different
    Linux/Unix distribution, it can be downloaded and installed from [https://github.com/laramies/theHarvester](https://github.com/laramies/theHarvester).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: theHarvester在Kali Linux上预装。如果你使用的是其他Linux/Unix发行版，可以从[https://github.com/laramies/theHarvester](https://github.com/laramies/theHarvester)下载并安装。
- en: How to do it…
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何进行…
- en: theHarvester is an excellent tool for getting information on an organization
    from public sources. Using the tool, we can query Google, Bing, Twitter, and LinkedIn
    among other sources.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: theHarvester是一个非常出色的工具，可以从公共来源收集有关一个组织的信息。使用该工具，我们可以查询Google、Bing、Twitter、LinkedIn等多个来源。
- en: 'To see the help and options for theHarvester, simply open the Terminal and
    type the following command:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看 theHarvester 的帮助和选项，只需打开终端并输入以下命令：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../images/00614.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00614.jpeg)'
- en: 'In order to find e-mail addresses from `google.com` using the Google search
    engine, we''ll use the following:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使用 Google 搜索引擎从 `google.com` 查找电子邮件地址，我们将使用以下命令：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../images/00617.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00617.jpeg)'
- en: The command uses `-d` as the domain we want to search, `-l` is used to limit
    the number of results, and `-b` is used to define the data source. Additionally,
    we could use the `-f` flag to write the results to a file.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该命令使用 `-d` 作为我们要搜索的域名，`-l` 用于限制结果数量，`-b` 用于定义数据源。此外，我们还可以使用 `-f` 标志将结果写入文件。
- en: 'theHarvester does not always return e-mail addresses. If we use LinkedIn as
    our data source, we can get a list of users.  However for this domain we do not
    receive any:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: theHarvester 并不总是返回电子邮件地址。如果我们使用 LinkedIn 作为数据源，可以获取用户列表。然而，对于这个域名，我们没有收到任何电子邮件地址：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../images/00619.jpeg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00619.jpeg)'
- en: We can also search against all data sources. With this, we will discover not
    just e-mails, but also hosts and virtual hosts.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以搜索所有数据源。通过此操作，我们不仅会发现电子邮件地址，还能找到主机和虚拟主机。
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../images/00653.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00653.jpeg)'
- en: 'TheHarvester begins by querying all datasources then outputs its findings:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: TheHarvester 开始查询所有数据源，然后输出其发现结果：
- en: '![](../images/00569.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00569.jpeg)'
- en: How it works…
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: theHarvester is an excellent tool that queries publicly available data sources and
    provides information on the domain you pass to it.  This information includes
    subdomains, LinkedIn users and email addresses.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: theHarvester 是一个优秀的工具，它查询公开的数据源并提供您传递给它的域名信息。该信息包括子域名、LinkedIn 用户和电子邮件地址。
- en: Enumerating DNS using the host command
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `host` 命令枚举 DNS
- en: The previous section covered how we could find subdomains using the publicly
    available Google search engine. While this is great, we should never assume that
    all subdomains can be found through such a method. The next few sections will
    cover finding subdomains using active discovery methods.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 前一部分讲解了如何使用公开的 Google 搜索引擎查找子域名。虽然这很有用，但我们不应假设所有的子域名都能通过这种方法找到。接下来的几部分将讲解如何使用主动发现方法来查找子域名。
- en: Getting ready
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: To prepare for working with the `host` command, all you need is to open a Terminal
    from your Kali Linux distribution.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备使用 `host` 命令，您只需从 Kali Linux 发行版中打开终端。
- en: The `host` command is a standard command for Unix, Linux, and macOS systems.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`host` 命令是 Unix、Linux 和 macOS 系统的标准命令。'
- en: How to do it...
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何执行...
- en: 'Working with `host` command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `host` 命令：
- en: 'DNS servers are address books; for this reason normally they will divulge at
    least some information regarding the domains they are the authority for. The `host`
    command is a utility that performs DNS lookups. So we can use the `host` command
    to investigate information about our target domain. We can use the `-a` flag to
    do a comprehensive look up or use the `-t` flag followed by the type to get specific:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DNS 服务器是地址簿；因此，通常它们会透露至少一些关于它们所掌管域名的信息。`host` 命令是一个执行 DNS 查找的工具。所以我们可以使用 `host`
    命令来调查目标域名的信息。我们可以使用 `-a` 标志进行全面查找，或者使用 `-t` 标志后跟类型来获取特定信息：
- en: '![](../images/00466.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00466.jpeg)'
- en: 'The following command will reveal the nameservers associated with `google.com`:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令将显示与 `google.com` 相关的名称服务器：
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../images/00468.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00468.jpeg)'
- en: 'The following command will reveal the mail server details for the domain:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令将显示该域名的邮件服务器详细信息：
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../images/00608.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00608.jpeg)'
- en: 'At a minimum now we should have DNS and mail servers responsible for `google.com`,
    but what else can we find associated with the domain `google.com`? In the previous
    exercise, we already found some web servers associated. Let’s take a closer look:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 至少现在我们应该有负责 `google.com` 的 DNS 和邮件服务器，但我们还能找到与 `google.com` 域名相关的其他内容吗？在之前的练习中，我们已经找到了一些相关的
    Web 服务器。让我们更仔细地查看一下：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../images/00321.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00321.jpeg)'
- en: What if we try something that doesn’t exist? What can we expect as a result?
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们尝试一些不存在的内容呢？我们可以期望得到什么结果？
- en: '[PRE7]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../images/00411.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00411.jpeg)'
- en: We get an error stating that the subdomain was not found. Knowing this, we could
    test subdomains to see whether they exist. Some popular subdomain are mail, blog,
    ftp, dev, admin, wiki, and help. Of course, this is not a comprehensive list and
    there could be subdomains that are not common at at all.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们收到错误消息，表示找不到该子域名。知道这一点后，我们可以测试一些常见子域名，看看它们是否存在。一些常见的子域名包括 mail、blog、ftp、dev、admin、wiki
    和 help。当然，这并不是一个完整的列表，可能还有一些不常见的子域名。
- en: 'We can also perform zone transfers with the `host` command. In order to do
    this, we need the domain we are analyzing, along with the nameserver address.
    Keep in mind generally DNS is configured in such a way as to not allow transfers.
    Let''s attempt to do a transfer of `google.com` using the nameserver we found
    earlier, `ns1.google.com`:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们也可以使用 `host` 命令执行区域传输。为了做到这一点，我们需要分析的域名和相应的 nameserver 地址。请记住，通常 DNS 配置为不允许进行传输。我们来尝试使用之前找到的
    nameserver `ns1.google.com` 来进行 `google.com` 的传输：
- en: '![](../images/00477.jpeg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00477.jpeg)'
- en: Sometimes an organization may have a large number of nameservers. In these cases,
    it makes sense to automate this process.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有时候一个组织可能有大量的 nameserver。在这种情况下，自动化该过程是有意义的。
- en: 'In the bash script that follows, we first generate a list of nameservers for
    a given domain, then we iterate over each nameserver, attempting a zone transfer:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的 bash 脚本中，我们首先为给定域名生成一个 nameserver 列表，然后遍历每个 nameserver，尝试进行区域传输：
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can now run our script and view the results:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以运行脚本并查看结果：
- en: '![](../images/00556.jpeg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00556.jpeg)'
- en: How it works...
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `host` command is a simple utility that returns information about the host
    or IP address it is used to query.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`host` 命令是一个简单的工具，用于查询主机或 IP 地址的相关信息。'
- en: Enumerating DNS using DNSRecon
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 DNSRecon 枚举 DNS
- en: In the following sections, we will explore a couple of tools that allow us to
    conduct DNS reconnaissance. In effect, this means identifying our target organization's
    DNS servers and subsequently the DNS entries contained in them.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将探索一些可以帮助我们进行 DNS 侦察的工具。实际上，这意味着识别我们目标组织的 DNS 服务器，进而获取它们包含的 DNS 条目。
- en: Getting ready
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: DNSRecon comes preinstalled on Kali Linux. If you are using a different Linux/Unix
    distribution, it can be downloaded and installed from [https://github.com/darkoperator/dnsrecon](https://github.com/darkoperator/dnsrecon).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: DNSRecon 已预装在 Kali Linux 上。如果你使用的是其他 Linux/Unix 发行版，它可以从 [https://github.com/darkoperator/dnsrecon](https://github.com/darkoperator/dnsrecon)
    下载并安装。
- en: How to do it…
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'DNSRecon is a Python script written by Carlos Perez for conducting DNS reconnaissance. It
    can enumerate general DNS records, perform zone transfers, perform reverse lookups,
    and brute-force subdomains among other functions. It will even perform Google
    scanning, automating the process we discussed in the *Using Google to find subdomains*
    section. To see usage information for `dnsrecon`, run the following command from
    within the `/usr/share/dnsrecon` directory:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: DNSRecon 是由 Carlos Perez 编写的 Python 脚本，用于进行 DNS 侦察。它可以枚举常规 DNS 记录，执行区域传输，执行反向查找，进行子域名暴力破解等功能。它甚至可以执行
    Google 扫描，自动化我们在 *使用 Google 查找子域名* 部分中讨论的过程。要查看 `dnsrecon` 的使用信息，请在 `/usr/share/dnsrecon`
    目录中运行以下命令：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../images/00658.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00658.jpeg)'
- en: Standard DNS enumeration
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标准 DNS 枚举
- en: 'A standard DNS enumeration should provide us with SOA, NS, A, AAAA, MX, and
    SRV records, as available. If we run `dnsrecon` without passing the type (`-t`)
    flag, it will run a standard enumeration. To pass the domain we want the scan
    to run against, we use the domain (`-d`) flag followed by our target domain. To
    run a standard enumeration against our target domain, [google.com](http://google.com),
    run the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 标准 DNS 枚举应该提供 SOA、NS、A、AAAA、MX 和 SRV 记录（如有）。如果我们运行 `dnsrecon` 而不传递类型（`-t`）标志，它将执行标准枚举。为了传递我们希望扫描的域名，我们使用域名（`-d`）标志，后跟目标域名。要对我们的目标域名
    [google.com](http://google.com) 执行标准枚举，请运行以下命令：
- en: '[PRE10]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../images/00668.jpeg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00668.jpeg)'
- en: Reverse lookups
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反向查找
- en: 'We can also use `dnsrecon` to perform a reverse lookup by providing it a range
    of IP addresses. We do this using the range (`-r`) flag, followed by the IP range
    we want it to perform lookups on, as in this example:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用 `dnsrecon` 通过提供一个 IP 地址范围来执行反向查找。我们使用范围（`-r`）标志，后跟我们希望其执行查找的 IP 范围，如以下示例所示：
- en: '[PRE11]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](../images/00053.jpeg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00053.jpeg)'
- en: Zone transfer
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 区域传输
- en: 'DNS zone transfers are a tool for domain name administrators to replicate their
    DNS databases across their organization''s DNS servers. The problem that arises
    is that this can reveal a great deal of information about an organization''s infrastructure. For
    this reason, typically, DNS servers are configured to not allow a zone transfer. To
    attempt a zone transfer using `dnsrecon`, we would use the `-a` flag (AXFR), or
    you can use the `-t` flag with type `axfr`. The `axfr` type is the query type
    that denotes DNS zone transfer. The command to run a zone transfer would look
    like the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: DNS区域传输是域名管理员用于将其DNS数据库复制到组织DNS服务器的工具。问题是，这可能会泄露很多关于组织基础设施的信息。因此，通常DNS服务器会配置为不允许区域传输。要使用`dnsrecon`尝试区域传输，我们需要使用`-a`标志（AXFR），或者可以使用`-t`标志并指定类型为`axfr`。`axfr`类型是表示DNS区域传输的查询类型。运行区域传输的命令如下：
- en: '[PRE12]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../images/00120.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00120.jpeg)'
- en: As you can see, in our example the zone transfers fail, but it never hurts to
    try. Every now and then, you may come across a DNS server that has not been configured
    correctly to prevent this.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在我们的例子中，区域传输失败了，但尝试一下并无妨。偶尔，你可能会遇到配置不当的DNS服务器，未能正确阻止此类操作。
- en: How it works…
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: DNS servers by design take queries and provide address information. The `dnsrecon`
    script takes advantage of this function to enumerate a DNS server, revealing information
    about an organization's infrastructure.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: DNS服务器的设计是接收查询并提供地址信息。`dnsrecon`脚本利用此功能来枚举DNS服务器，从而揭示有关组织基础设施的信息。
- en: Enumerating DNS using the dnsenum command
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`dnsenum`命令枚举DNS
- en: Similar to `dnsrecon`, `dnsenum` is a tool used for enumerating DNS information.
    The `dnsenum` script is a multithreaded Perl script written by Filip Waeytens
    for conducting DNS reconnaissance. It can be used to enumerate DNS information
    of a domain in order to find non-contiguous IP blocks. It not only helps discover
    non-contiguous IP blocks, but also provides several other types of information,
    such as the *A* record of the host's address, threaded nameservers, threaded MX
    record, and threaded *bind version*.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 与`dnsrecon`类似，`dnsenum`是用于枚举DNS信息的工具。`dnsenum`脚本是由Filip Waeytens编写的一个多线程Perl脚本，用于进行DNS侦察。它可以用于枚举域名的DNS信息，以便寻找不连续的IP块。它不仅帮助发现不连续的IP块，还提供其他几种信息，如主机地址的*A*记录、线程化的名称服务器、线程化的MX记录以及线程化的*bind版本*。
- en: Getting ready
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `dnsenum` script comes preinstalled on Kali Linux. If you are using a different
    Linux/Unix distribution, it can be downloaded and installed from [https://github.com/fwaeytens/dnsenum](https://github.com/fwaeytens/dnsenum).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`dnsenum`脚本在Kali Linux上是预安装的。如果你使用的是其他Linux/Unix发行版，可以从[https://github.com/fwaeytens/dnsenum](https://github.com/fwaeytens/dnsenum)下载并安装。'
- en: How to do it…
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何做到的…
- en: 'To see usage information for the `dnsenum` command, run the following command
    from a Terminal:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看`dnsenum`命令的使用信息，请从终端运行以下命令：
- en: '[PRE13]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../images/00139.jpeg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00139.jpeg)'
- en: Default settings
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 默认设置
- en: 'If we run `dnsenum` without any flags, it will be run with the default settings.
    Those default settings are the following:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们不使用任何标志运行`dnsenum`，它将以默认设置运行。默认设置如下：
- en: '`thread 5` (as mentioned earlier, the script is multithreaded; this setting
    determines how many threads it will run with)'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`thread 5`（如前所述，脚本是多线程的；此设置决定了它将使用多少个线程）'
- en: '`s 15` (this determines the maximum number of subdomains it will scrape from
    Google)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`s 15`（这决定了它从Google抓取的最大子域数）'
- en: '`-w` (this flag tells the script to run `whois` queries)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-w`（此标志告诉脚本运行`whois`查询）'
- en: '![](../images/00039.jpeg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00039.jpeg)'
- en: Brute-force
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 暴力破解
- en: Where the `dnsenum` command really shines is brute-forcing, which it does recursively.
    This means that when it identifies `subdomain.domain.com`, it will start brute-forcing
    `subdomain.subdomain.domain.com`. Obviously, this can take a while even though
    it is a multithreaded script.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`dnsenum`命令的真正亮点在于暴力破解，它是递归进行的。这意味着当它识别出`subdomain.domain.com`时，它将开始暴力破解`subdomain.subdomain.domain.com`。显然，即使它是多线程脚本，这个过程可能也需要一些时间。'
- en: In the next example, we will use the `dnsenum` command to brute-force subdomains,
    but first, we need a list of subdomains for `dnsenum` to use. There is a very
    interesting project called **dnspop** that identifies top subdomains.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的示例中，我们将使用`dnsenum`命令进行子域名的暴力破解，但首先，我们需要一份供`dnsenum`使用的子域名列表。有一个非常有趣的项目叫做**dnspop**，它能识别出顶级子域名。
- en: The project can be found here at [https://github.com/bitquark/dnspop](https://github.com/bitquark/dnspop).
    We do not need to download and install the Python script, as the results are also
    published at [https://github.com/bitquark/dnspop/tree/master/results](https://github.com/bitquark/dnspop/tree/master/results).
    I have downloaded the list with the top 1,000 most popular subdomains and placed
    it in the `/usr/share/wordlists/subdomains/` directory.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目可以在 [https://github.com/bitquark/dnspop](https://github.com/bitquark/dnspop)
    找到。我们不需要下载和安装 Python 脚本，因为结果也发布在 [https://github.com/bitquark/dnspop/tree/master/results](https://github.com/bitquark/dnspop/tree/master/results)。我已经下载了包含前
    1000 个最流行子域的列表，并将其放置在 `/usr/share/wordlists/subdomains/` 目录中。
- en: I created the subdomains directory, naming it `subdomains_popular_1000`.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我创建了子域目录，并命名为 `subdomains_popular_1000`。
- en: 'Now we have a list of names `dnsenum` can use to brute-force with. The command
    to brute-force subdomains uses the file (`-f`) flag followed by the file path/name
    and, if you want, the recursive (`-r`) flag to enumerate the subdomains recursively.
    The command looks like this:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了 `dnsenum` 可以用来进行暴力破解的名称列表。暴力破解子域的命令使用 `-f` 标志，后跟文件路径/名称，如果需要，还可以使用递归标志
    (`-r`) 来递归枚举子域。命令如下所示：
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The aforementioned command does the following:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令执行以下操作：
- en: 'First, the `dnsenum` command performs the default lookups:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，`dnsenum` 命令执行默认的查找操作：
- en: '![](../images/00157.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00157.jpeg)'
- en: 'Next, `dnsenum` begins brute-forcing subdomains:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，`dnsenum` 开始暴力破解子域：
- en: '![](../images/00435.jpeg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00435.jpeg)'
- en: 'Once it has completed brute-forcing the subdomains, it will begin brute-forcing
    recursively:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦完成对子域的暴力破解，它将开始递归地进行暴力破解：
- en: '![](../images/00509.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00509.jpeg)'
- en: How it works…
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: The `dnsenum` command has many options that you can use with it, and this script
    will collect information or perform the action based to the selected option(s).
    Once you have enumerated a DNS, use the `–o` or `--output <file>` option to write
    the output to an XML file.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`dnsenum` 命令有许多选项可以使用，且此脚本会根据所选选项收集信息或执行相应的操作。一旦你枚举了 DNS，使用 `–o` 或 `--output
    <file>` 选项将输出写入 XML 文件。'
