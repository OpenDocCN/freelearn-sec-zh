- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Network Enumeration and Port Scanning
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络枚举和端口扫描
- en: In this chapter, we will explore how PowerShell can be used as part of a penetration
    test to perform TCP/UDP port scanning. Through practical examples, we will explore
    how specific cmdlets can be used and how PowerShell can use functions in other
    frameworks such as .NET. Finally, we will examine some open source tools that
    can be used to perform a port scan. We will now begin this chapter by looking
    at how various cmdlets can be used to perform network enumeration.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何将 PowerShell 用作渗透测试的一部分来执行 TCP/UDP 端口扫描。通过实际示例，我们将探索如何使用特定的 cmdlet，以及
    PowerShell 如何使用其他框架（如 .NET）中的函数。最后，我们将审视一些可以用来执行端口扫描的开源工具。我们现在将通过查看如何使用各种 cmdlet
    来进行网络枚举，来开始本章内容。
- en: 'The following are the main topics we will cover in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将覆盖的主要主题如下：
- en: Network enumeration using PowerShell
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PowerShell 进行网络枚举
- en: TCP port scanning using PowerShell
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PowerShell 进行 TCP 端口扫描
- en: UDP port scanning using PowerShell
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PowerShell 进行 UDP 端口扫描
- en: Using PowerShell tools for port scanning
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PowerShell 工具进行端口扫描
- en: Network enumeration using PowerShell
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PowerShell 进行网络枚举
- en: 'Network enumeration is a crucial phase in a penetration test, where security
    professionals assess the vulnerabilities and weaknesses of a target network. PowerShell,
    a powerful scripting language and framework in Windows environments, can be an
    invaluable tool to conduct network enumeration. Here, we’ll delve into how PowerShell
    can be used for this purpose in a penetration test:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 网络枚举是渗透测试中的一个关键阶段，安全专家评估目标网络的漏洞和弱点。PowerShell 是一种强大的脚本语言和框架，适用于 Windows 环境，并且在进行网络枚举时，可以作为一个极具价值的工具。在这里，我们将深入探讨如何在渗透测试中使用
    PowerShell 来实现这一目标：
- en: '**Discovery of network assets**: PowerShell allows testers to discover network
    assets such as hosts, servers, and devices. Commands such as **Test-Connection**
    can be employed to ping hosts and check their availability. **Resolve-DnsName**
    can help identify hostnames, while **Test-NetConnection** can assess open ports
    and services.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络资产的发现**：PowerShell 允许测试人员发现网络资产，如主机、服务器和设备。可以使用 **Test-Connection** 命令来
    ping 主机并检查其可用性。**Resolve-DnsName** 可以帮助识别主机名，而 **Test-NetConnection** 可以评估开放的端口和服务。'
- en: '**Active Directory enumeration**: With PowerShell, testers can gather valuable
    information about the target’s **Active Directory** (**AD**) environment. Tools
    such as **Get-ADUser, Get-ADComputer**, and **Get-ADGroupMember** can be used
    to retrieve user, computer, and group data. This data aids in understanding the
    network’s structure and potential entry points. This will be covered in greater
    detail in [*Chapter 6*](B21364_06.xhtml#_idTextAnchor100).'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Active Directory 枚举**：通过 PowerShell，测试人员可以收集有关目标 **Active Directory** (**AD**)
    环境的宝贵信息。工具如 **Get-ADUser**、**Get-ADComputer** 和 **Get-ADGroupMember** 可用于检索用户、计算机和组数据。这些数据有助于理解网络结构和潜在的入口点。详细内容将在
    [*第 6 章*](B21364_06.xhtml#_idTextAnchor100) 中进一步讨论。'
- en: '**Network shares and permissions**: PowerShell scripts can be crafted to enumerate
    network shares and their permissions. Commands such as **Get-SmbShare** and **Get-Acl**
    can be employed to identify open shares and their associated access rights, providing
    insights into potential areas of exploitation. This will be covered in greater
    detail in [*Chapter 6*](B21364_06.xhtml#_idTextAnchor100).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络共享和权限**：PowerShell 脚本可以编写来枚举网络共享及其权限。可以使用 **Get-SmbShare** 和 **Get-Acl**
    等命令来识别开放的共享及其相关访问权限，从而提供潜在的利用点。这将在 [*第 6 章*](B21364_06.xhtml#_idTextAnchor100)
    中进一步详细讨论。'
- en: '**Enumeration of network shares and user information**: PowerShell can facilitate
    the enumeration of network shares and users’ information by querying LDAP and
    SMB services. Tools like **NetView** and **NetUser** can reveal additional information
    about the network’s structure and potential vulnerabilities. This will be covered
    in greater detail in [*Chapter 6*](B21364_06.xhtml#_idTextAnchor100).'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络共享和用户信息的枚举**：PowerShell 可以通过查询 LDAP 和 SMB 服务，帮助枚举网络共享和用户信息。像 **NetView**
    和 **NetUser** 这样的工具可以揭示关于网络结构和潜在漏洞的更多信息。详细内容将在 [*第 6 章*](B21364_06.xhtml#_idTextAnchor100)中进一步介绍。'
- en: '**Enumeration of running services**: PowerShell allows testers to identify
    running services on target hosts. By using **Get-Service** or querying the **Windows
    Management Instrumentation** (**WMI**) repository with **Get-WmiObject**, testers
    can gather information about services, their configurations, and potential vulnerabilities.
    These types of services include databases. This will be covered in [*Chapter 7*](B21364_07.xhtml#_idTextAnchor135),
    [*Chapter 8*](B21364_08.xhtml#_idTextAnchor164), and [*Chapter 9*](B21364_09.xhtml#_idTextAnchor183).'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正在运行的服务枚举**：PowerShell 允许测试人员识别目标主机上正在运行的服务。通过使用**Get-Service**或查询**Windows
    Management Instrumentation**（**WMI**）存储库的**Get-WmiObject**，测试人员可以收集有关服务、其配置和潜在漏洞的信息。这些服务类型包括数据库。详细内容将在[*第7章*](B21364_07.xhtml#_idTextAnchor135)、[*第8章*](B21364_08.xhtml#_idTextAnchor164)和[*第9章*](B21364_09.xhtml#_idTextAnchor183)中讨论。'
- en: '**Vulnerability scanning**: PowerShell can be used to initiate vulnerability
    scans on target systems, employing scripts that check for known vulnerabilities
    or outdated software versions. This aids in prioritizing potential attack vectors.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漏洞扫描**：PowerShell 可以用于在目标系统上发起漏洞扫描，利用脚本检查已知的漏洞或过时的软件版本。这有助于优先考虑潜在的攻击途径。'
- en: '**Port scanning and banner grabbing**: PowerShell’s **Test-NetConnection**
    and **Invoke-WebRequest** can be used to perform port scans and banner grabbing.
    This information helps testers identify open ports, services, and potentially
    outdated software versions that may be susceptible to known exploits.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口扫描和横幅抓取**：PowerShell 的 **Test-NetConnection** 和 **Invoke-WebRequest** 可以用来执行端口扫描和横幅抓取。这些信息帮助测试人员识别开放端口、服务以及可能存在的过时软件版本，这些版本可能容易受到已知漏洞的攻击。'
- en: Hence, PowerShell is an indispensable tool for network enumeration during a
    penetration test in Windows environments. Its versatility, scripting capabilities,
    and access to system resources enable testers to gather critical information about
    the target network, helping them identify potential weaknesses and entry points
    for further exploitation. However, it’s essential to conduct these activities
    ethically and with proper authorization to ensure the security of the assessed
    network.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，PowerShell 是 Windows 环境中渗透测试期间进行网络枚举的不可或缺的工具。它的多功能性、脚本能力和对系统资源的访问使测试人员能够收集关于目标网络的关键信息，帮助他们识别潜在的弱点和进一步利用的入口。然而，必须在道德和授权的前提下进行这些活动，以确保被评估网络的安全性。
- en: TCP port scanning using PowerShell
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PowerShell 进行 TCP 端口扫描
- en: Port scanning is the practice of systematically checking the open, closed, or
    filtered ports on a target system. Open ports represent potential entry points
    for attackers, while closed or filtered ports may indicate security measures in
    place. By conducting a port scan, penetration testers can gather crucial information
    about a network or system’s security posture.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 端口扫描是指系统地检查目标系统上开放、关闭或被过滤的端口。开放端口代表潜在的攻击入口，而关闭或被过滤的端口可能表明存在安全措施。通过进行端口扫描，渗透测试人员可以收集有关网络或系统安全状态的重要信息。
- en: '**Test-NetConnection** is a versatile cmdlet available in Windows PowerShell
    (version 4.0 and later) that primarily serves to diagnose network connectivity.
    However, it can be repurposed to perform port scanning in a penetration-testing
    context.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Test-NetConnection** 是 Windows PowerShell（版本 4.0 及以上）中提供的多功能 cmdlet，主要用于诊断网络连接。然而，它也可以重新用于渗透测试上下文中的端口扫描。'
- en: Single port scanning with Test-NetConnection
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Test-NetConnection 扫描单个端口
- en: 'To perform a simple port scan on a target host using **Test-NetConnection**,
    follow this example:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用**Test-NetConnection**对目标主机进行简单的端口扫描，请参考此示例：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this example, **Test-NetConnection** confirms that port **80** on the target
    system is open, which is indicative of a web server.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，**Test-NetConnection** 确认目标系统上的端口**80**已打开，表明该系统运行着一个 Web 服务器。
- en: Multiple port scanning with Test-NetConnection
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Test-NetConnection 扫描多个端口
- en: 'A penetration tester often needs to scan multiple ports on a target system.
    **Test-NetConnection** can be used in a loop to scan a range of ports or a list
    of specific ports:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员通常需要扫描目标系统上的多个端口。**Test-NetConnection** 可以通过循环来扫描一系列端口或特定端口列表：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this case, **Test-NetConnection** scans ports **80** and **443** on the target
    system. The results show whether each port is open or not.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在此案例中，**Test-NetConnection** 扫描目标系统上的端口**80**和**443**，结果显示每个端口是否开放。
- en: Enumerating open ports with Test-NetConnection
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Test-NetConnection 枚举开放端口
- en: 'One of the primary objectives of a penetration test is to enumerate open ports.
    You can utilize PowerShell to filter and display only the open ports:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试的主要目标之一是列举开放的端口。你可以利用PowerShell仅筛选并显示开放的端口：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this example, **Test-NetConnection** scans all possible ports and identifies
    the open ones. **Test-NetConnection**, while primarily designed for diagnosing
    network connectivity, can be a valuable tool for penetration testers to perform
    port scanning. By utilizing its capabilities to check the status of specific ports
    on a target system, penetration testers can gather crucial information about potential
    vulnerabilities and security weaknesses. However, it’s important to note that
    penetration testing should always be conducted with proper authorization and in
    a responsible, ethical manner to avoid any legal or ethical issues. **Test-NetConnection**,
    when used within these guidelines, can be an asset in a penetration tester’s toolkit.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，**Test-NetConnection**扫描所有可能的端口并识别开放的端口。**Test-NetConnection**主要用于诊断网络连接，但它对渗透测试人员来说也是一个宝贵的端口扫描工具。通过利用它的功能来检查目标系统上特定端口的状态，渗透测试人员可以收集有关潜在漏洞和安全弱点的重要信息。然而，重要的是要注意，渗透测试应始终在获得适当授权并以负责任、道德的方式进行，以避免任何法律或道德问题。**Test-NetConnection**在这些指导方针下使用时，可以成为渗透测试人员工具箱中的一项资产。
- en: Single port scanning with .NET
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用.NET进行单端口扫描
- en: 'PowerShell can create a .NET socket object to establish a connection with a
    single port on a target host. Here’s an example:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell可以创建一个.NET套接字对象，与目标主机上的单个端口建立连接。以下是一个示例：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this example, PowerShell creates a TCP client object and attempts to connect
    to the specified port on the target host. It then reports whether the port is
    open or closed.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，PowerShell创建了一个TCP客户端对象，并尝试连接到目标主机的指定端口。然后，它报告该端口是开放还是关闭的。
- en: Multiple port scanning with .NET
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用.NET进行多端口扫描
- en: 'A typical penetration test involves scanning multiple ports on a target system.
    PowerShell can iterate through a list of ports and check their status:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一次典型的渗透测试涉及扫描目标系统上的多个端口。PowerShell可以遍历端口列表并检查它们的状态：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This PowerShell script scans a list of ports on the target host and reports
    their status.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个PowerShell脚本扫描目标主机上的端口列表，并报告它们的状态。
- en: Enumerating all open ports with .NET
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用.NET列举所有开放端口
- en: 'In some cases, it’s essential to enumerate all open ports on a target system.
    PowerShell can be used to scan a range of ports systematically:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，列举目标系统上所有开放的端口是非常重要的。PowerShell可以用来系统地扫描一系列端口：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: PowerShell systematically scans all possible ports on the target host and reports
    the open ones.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell系统地扫描目标主机上所有可能的端口，并报告开放的端口。
- en: Leveraging .NET Socket Objects in PowerShell provides penetration testers with
    a versatile and programmable approach to conducting port scanning, as a vital
    part of ethical hacking assessments. Port scanning plays a pivotal role in identifying
    potential vulnerabilities within a target system, and .NET Socket Objects empower
    testers to automate and customize this process effectively. However, it’s imperative
    to conduct penetration tests responsibly, adhering to legal and ethical guidelines
    and obtaining proper authorization. When used responsibly, .NET Socket Objects
    in PowerShell serve as powerful tools for penetration testers to assess the security
    posture of systems and networks, ultimately enhancing cybersecurity.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在PowerShell中利用.NET套接字对象为渗透测试人员提供了一种多功能且可编程的端口扫描方法，作为道德黑客评估的一个重要组成部分。端口扫描在识别目标系统中的潜在漏洞方面发挥着关键作用，而.NET套接字对象使测试人员能够有效地自动化和自定义这个过程。然而，进行渗透测试时，必须负责任地进行，遵守法律和道德规范并获得适当的授权。负责任地使用时，PowerShell中的.NET套接字对象为渗透测试人员评估系统和网络的安全态势提供了强大的工具，最终提升了网络安全性。
- en: UDP port scanning using PowerShell
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PowerShell进行UDP端口扫描
- en: 'Performing UDP port scanning in PowerShell involves sending UDP packets to
    specific ports on a target host to determine whether those ports are open or closed.
    Unlike TCP, UDP is connectionless, which makes UDP port scanning a bit more challenging,
    as there are no handshakes to confirm the port’s status. Here’s a simplified method
    using PowerShell:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在PowerShell中执行UDP端口扫描涉及向目标主机的特定端口发送UDP数据包，以确定这些端口是开放还是关闭的。与TCP不同，UDP是无连接的，这使得UDP端口扫描更加具有挑战性，因为没有握手来确认端口的状态。以下是使用PowerShell的简化方法：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This script iterates through the specified UDP ports, creates a UDP client object,
    and sends an empty UDP packet to each port. If an exception is caught during the
    process, it means the port is closed or filtered. If no exception is raised, the
    port is considered open.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本会遍历指定的UDP端口，创建UDP客户端对象，并向每个端口发送一个空的UDP数据包。如果在过程中捕获到异常，则表示端口已关闭或被过滤。如果没有异常，则认为该端口是开放的。
- en: Note that UDP scanning can be less reliable than TCP scanning, as UDP does not
    provide the same acknowledgment and response mechanisms as TCP. Some open UDP
    ports may not respond to empty UDP packets, which could lead to false negatives.
    Additionally, firewalls and network filtering can affect the accuracy of UDP port
    scanning. Always ensure you have proper authorization, and consider using more
    specialized tools for comprehensive penetration-testing tasks.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，UDP扫描可能不如TCP扫描可靠，因为UDP不像TCP那样提供相同的确认和响应机制。某些开放的UDP端口可能不会响应空的UDP数据包，这可能导致假阴性。此外，防火墙和网络过滤可能会影响UDP端口扫描的准确性。请始终确保获得适当的授权，并考虑使用更专业的工具进行全面的渗透测试任务。
- en: Using PowerShell tools for port scanning
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PowerShell工具进行端口扫描
- en: 'There are several open source PowerShell tools that support TCP/UDP port scanning.
    The following is an example of a PowerShell Scanning tool: [https://github.com/BornToBeRoot/PowerShell_IPv4PortScanner](https://github.com/BornToBeRoot/PowerShell_IPv4PortScanner).'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个开源的PowerShell工具支持TCP/UDP端口扫描。以下是一个PowerShell扫描工具的示例：[https://github.com/BornToBeRoot/PowerShell_IPv4PortScanner](https://github.com/BornToBeRoot/PowerShell_IPv4PortScanner)。
- en: 'The IPv4PortScan is an asynchronous TCP scanning tool that allows a user to
    define the port range to be scanned. The command line for the tool is as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: IPv4PortScan是一个异步的TCP扫描工具，允许用户定义要扫描的端口范围。该工具的命令行如下：
- en: '[PRE7]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In the following, we will use this tool to scan the first 500 ports on the
    computer **www.snowcapcyber.com**:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，我们将使用此工具扫描计算机**www.snowcapcyber.com**上的前500个端口：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The PS2 tool is a TCP port scanner tool that mimics some of the functions of
    Nmap. This tool can be downloaded at [https://github.com/nccgroup/PS2](https://github.com/nccgroup/PS2).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: PS2工具是一个TCP端口扫描器工具，模拟了Nmap的一些功能。此工具可以在[https://github.com/nccgroup/PS2](https://github.com/nccgroup/PS2)下载。
- en: 'The tool supports TCP and UDP scanning as well as mapping out a network using
    a traceroute function. In the following, we will use this tool to scan the top
    1,000 commonly used TCP ports:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具支持TCP和UDP扫描，并通过Traceroute功能绘制网络拓扑。接下来，我们将使用此工具扫描常用的前1,000个TCP端口：
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the following example, we will use the tool to scan all the TCP ports:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们将使用该工具扫描所有TCP端口：
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Finally, we will use the tool to scan the top 1,000 commonly used UDP ports:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将使用此工具扫描常用的前1,000个UDP端口：
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In summary, PowerShell provides us with the ability to create simple, and powerful,
    TCP/UDP port scanning tools. We have shown how cmdlets can be used and scripted
    and how PowerShell can make use of .NET functions. These tools enable us to live
    off the land within a penetration test and minimize the number of tools we are
    required to support within a security test.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，PowerShell使我们能够创建简单而强大的TCP/UDP端口扫描工具。我们展示了如何使用和脚本化cmdlet，以及如何利用PowerShell调用.NET功能。这些工具使我们能够在渗透测试中“活用土地”，并减少在安全测试中所需支持的工具数量。
- en: Summary
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter was a comprehensive exploration of leveraging PowerShell for robust
    network reconnaissance and security assessment. Detailing the significance of
    understanding network structures, the chapter illuminated how PowerShell can be
    harnessed to enumerate devices and services efficiently. You were guided through
    the intricacies of network enumeration, gaining insights into PowerShell techniques
    to discover active hosts, identify live systems, and map network architectures.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 本章全面探讨了如何利用PowerShell进行强大的网络侦察和安全评估。详细阐述了理解网络结构的重要性，并揭示了如何有效地利用PowerShell列举设备和服务。你将深入了解网络枚举的复杂性，掌握使用PowerShell技术发现活跃主机、识别在线系统以及绘制网络架构的技巧。
- en: The chapter further delved into the realm of port scanning, emphasizing the
    critical role it plays in vulnerability assessment. Demonstrating the power of
    PowerShell for port scanning, the chapter unveiled strategies to identify open
    ports, services, and potential vulnerabilities. Practical examples and real-world
    scenarios equipped you with hands-on experience, empowering you to strengthen
    network security. Whether for defensive purposes or ethical hacking, this chapter
    serves as a valuable resource, providing a nuanced understanding of network enumeration
    and port scanning using the versatile capabilities of PowerShell.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 本章深入探讨了端口扫描的领域，强调了它在漏洞评估中的关键作用。通过展示PowerShell在端口扫描中的强大功能，本章揭示了识别开放端口、服务和潜在漏洞的策略。实际案例和真实场景为你提供了动手实践的经验，使你能够增强网络安全性。无论是用于防御目的还是道德黑客，本章都作为一个宝贵的资源，提供了使用PowerShell多功能能力进行网络枚举和端口扫描的深刻理解。
- en: In the next chapter, we will learn how to use PowerShell when performing penetration
    testing on REST and SOAP APIs.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何在对REST和SOAP API进行渗透测试时使用PowerShell。
