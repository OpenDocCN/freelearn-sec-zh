- en: Penetrating the Target
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 渗透目标
- en: So far, we have gathered information through some detective work, scanned a
    target to learn about where the live targets are and what they have left open,
    before trying to extract more detailed information through enumeration. During
    this process, we learned quite a bit, but we still have further to go as we learn
    more about both the process and how Kali NetHunter can assist us. We are now moving
    into the step where we actually put the penetration in penetration test by attempting
    to gain access to the target itself. Everything up to this point has allowed us
    to plan, learn, and prepare to make a successful attempt at entry.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们通过一些侦探工作收集了信息，扫描了目标以了解活动目标的位置和它们留下的开放端口，然后尝试通过枚举提取更详细的信息。在这个过程中，我们学到了不少，但我们仍然有更多要学习，包括关于过程和Kali
    NetHunter如何帮助我们的更多信息。我们现在正在进入实际将渗透测试中的渗透放入渗透测试的步骤，尝试获取对目标本身的访问权限。到目前为止，一切都让我们能够计划、学习和准备成功尝试进入。
- en: Our goal is to gain access to a host and, if we have played our cards right
    so far, the information we have accumulated will help us. When we gain access
    to a system, there are a seemingly endless number of ways to accomplish this,
    but we will limit our focus to a handful of these and show how Kali Nethunter
    may be helpful in carrying them out. Expect to carry out various tasks during
    this part of the process, which is designed to crack or recover passwords, escalate
    privileges, execute applications, hide files, cover tracks, and otherwise conceal
    evidence of your actions. It's all in a day's work, so let's fire Kali Nethunter
    up and get started.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是获取主机的访问权限，如果到目前为止我们做得不错，我们积累的信息将会帮助我们。当我们获得对系统的访问权限时，有看似无穷无尽的方法可以实现这一点，但我们将把重点限制在其中一些方法上，并展示Kali
    Nethunter如何在执行这些方法时有所帮助。在这个过程的这一部分，您可以期待执行各种任务，这些任务旨在破解或恢复密码、提升权限、执行应用程序、隐藏文件、覆盖踪迹，以及以其他方式掩盖您的行动证据。这都是每天的工作，所以让我们启动Kali
    Nethunter并开始吧。
- en: 'In this chapter we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Choosing an approach to cracking
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择破解方法
- en: Executing applications on the target
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在目标上执行应用程序
- en: Capturing confidential information
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捕获机密信息
- en: Password-cracking techniques
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码破解技术
- en: Executing applications
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行应用程序
- en: Escalating privileges
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升权限
- en: Running backdoors
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行后门
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you will need Kali NetHunter (the default installation is
    OK).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将需要Kali NetHunter（默认安装即可）。
- en: Concerning passwords
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于密码
- en: A popular first step to take in order to acquire access to a system is to just
    use a password that you have obtained for an account on the system. Of course,
    obtaining this password is the important part as you must find a way to obtain
    a password for a valid account. This is where a process known as password-cracking
    or password-recovery comes into play.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 获取系统访问权限的一个常见第一步是使用您在系统上获得的帐户的密码。当然，获取这个密码是重要的，因为您必须找到一种方法来获取有效帐户的密码。这就是所谓的密码破解或密码恢复的过程发挥作用的地方。
- en: So, what's the definition of the term *password-cracking*? Well, despite what
    movies and TV have to say about the topic, password-cracking is a catchall term
    for a group of techniques used to gain possession of this piece of information.
    You can expect to use any individual, or combination of, methods during the process—each
    of which has its pros and cons. You can guess a password blindly or you may have
    some information about the system owner that may make the guessing process easier.
    Other techniques to obtain passwords may involve repeatedly guessing or exploiting
    security weaknesses in a system.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，术语*密码破解*的定义是什么呢？尽管电影和电视对这个话题有所描述，但密码破解是一个用于获取这一信息的一组技术的总称。在这个过程中，您可以期待使用任何个别或组合的方法，每种方法都有其优缺点。您可以盲目猜测密码，或者您可能对系统所有者有一些信息，这可能会使猜测过程变得更容易。获取密码的其他技术可能涉及反复猜测或利用系统中的安全漏洞。
- en: Choosing an approach to cracking
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择破解方法
- en: 'To make things easier, let''s break password-cracking down into a few major
    categories that we can then sort our techniques into. We will sort out the techniques
    into categories based on method of operation as the main characteristic. Be aware
    that each category and the techniques within offer not only unique approaches,
    but their own pros and cons, which we will discuss as we encounter them. The following
    diagram displays a breakdown of password-cracking attacks:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让事情变得更容易，让我们把密码破解分解成几个主要类别，然后将我们的技术分类。我们将根据操作方法将技术分类，作为主要特征。请注意，每个类别和其中的技术不仅提供独特的方法，还有各自的优缺点，我们将在遇到它们时进行讨论。以下图表显示了密码破解攻击的分类：
- en: '![image](img/cafd3606-58a5-4cab-bbf5-4e6d54640049.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/cafd3606-58a5-4cab-bbf5-4e6d54640049.png)'
- en: 'The categories of password cracking techniques are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 密码破解技术的类别如下：
- en: '**Passive techniques**: Anything in this category is an attack carried out
    simply by listening and avoiding direct interaction with the target. Offline password
    attacks are designed to exploit inherent design flaws and defects in the way the
    passwords are stored.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**被动技术**：这个类别中的任何攻击都是通过简单地监听和避免与目标直接交互来执行的。离线密码攻击旨在利用密码存储方式中固有的设计缺陷和缺陷。'
- en: '**Direct techniques**: This technique requires more aggressive and direct interaction
    with the target. These types of attack can be very effective, but the risk of
    detection is higher.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直接技术**：这种技术需要更积极和直接地与目标进行交互。这些类型的攻击可能非常有效，但被发现的风险更高。'
- en: Passive techniques
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 被动技术
- en: In this first category, we have those techniques that adopt the low-risk approach
    of patiently waiting. How effective the process and end result turn out to be,
    depends on the approach used, the strength of the password and the system being
    targeted.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个第一类别中，我们有那些采用低风险方法耐心等待的技术。这个过程和最终结果的有效性取决于所采用的方法、密码的强度和目标系统。
- en: '**Sniffing** is a very effective method of gaining information, as you are
    simply plugging into a network and turning on a sniffer that will observe and
    capture the information as it flows across in the stream of packets. What makes
    this technique particularly effective is if you are targeting credentials that
    are transmitted over the network using an unsecured method, such as an older networking
    protocol such as File Transfer Protocol (FTP), Telnet, or Simple Mail Transfer
    Protocol (SMTP). Many of these long-lived and commonly-used protocols find themselves
    vulnerable as they lack any appreciable protection on their own. An example would
    be HTTP, which sends information in clear text, and you can use a tool such as
    Wireshark to sniff packets and view the content inside packets:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**嗅探**是一种非常有效的获取信息的方法，因为你只需插入到网络中，打开一个嗅探器，它将观察并捕获流经数据包流的信息。这种技术之所以特别有效，是因为如果你针对的是通过不安全方法传输的凭据，比如使用较旧的网络协议（如文件传输协议（FTP）、Telnet或简单邮件传输协议（SMTP））传输的凭据。许多这些长期存在且常用的协议因缺乏任何可感知的保护而容易受到攻击。例如，HTTP发送的是明文信息，你可以使用诸如Wireshark之类的工具来嗅探数据包并查看数据包内的内容：'
- en: '![image](img/178a9a21-21d2-4dd1-b569-dc0cd3f17d26.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/178a9a21-21d2-4dd1-b569-dc0cd3f17d26.jpg)'
- en: The preceding diagram shows where a sniffer can be placed on a network.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 上图显示了嗅探器可以放置在网络上的位置。
- en: Man-in-the-Middle
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中间人攻击
- en: 'Building on the principle of sniffing, we have the **Man-in-the-Middle** (**MITM**)
    attack. This attack occurs when two devices are actively communicating and a third
    device moves from listening in to become an active participant. The following
    diagram shows the concept of an MITM attack:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在嗅探的基础上，我们有**中间人攻击**（**MITM**）。当两个设备正在进行通信，第三个设备从监听状态转变为主动参与状态时，就会发生这种攻击。下图显示了中间人攻击的概念：
- en: '![image](img/d5c37dd6-2830-4330-a9eb-d7ac15a17dcc.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/d5c37dd6-2830-4330-a9eb-d7ac15a17dcc.jpg)'
- en: This type of attack is useful in capturing network traffic and protocols. However,
    some protocols have been found to be vulnerable as well, such as the Secure Sockets
    Layer (SSL) that is used to secure many e-commerce and similar applications.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的攻击对捕获网络流量和协议很有用。然而，一些协议也被发现存在漏洞，比如用于保护许多电子商务和类似应用的安全套接层（SSL）。
- en: Within Kali NetHunter, you will find a few tools able to assist you in the process
    of executing an MITM, such as SSL strip and Burp Suite. In order to demonstrate
    an MITM, let's use SSL strip.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kali NetHunter中，你会找到一些工具能够帮助你执行中间人攻击，比如SSL剥离和Burp Suite。为了演示中间人攻击，让我们使用SSL剥离。
- en: SSL is a widely-used standard that came into existence in the early 1990s and
    has been publicly available from 1995\. The latest version of the protocol is
    SSL 3.0, which was deprecated in mid-2015 and should no longer be used due to
    successful compromises, such at the publicized POODLE attack. To ensure secure
    communications, SSL should be replaced with the newer **Transport Layer Security**
    (**TLS**) version 1.2 in order to maintain the strongest possible level of security.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: SSL是一个广泛使用的标准，它诞生于1990年代初，并且从1995年起公开可用。该协议的最新版本是SSL 3.0，于2015年中期被弃用，不应再使用，因为存在成功的妥协，比如公开的POODLE攻击。为了确保安全通信，SSL应该被新的**传输层安全**（**TLS**）1.2版本所取代，以保持最强大的安全级别。
- en: So, before we get into the actual attack, let's go over a few details in order
    to fully appreciate it.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在我们开始实际攻击之前，让我们先了解一些细节，以便充分欣赏它。
- en: The **Address Resolution Protocol** (**ARP**) poisoning, will make use of the
    ARP protocol (which associates an IP address with a specific MAC address if you
    recall from your basic network experience) to make the systems we are targeting
    believe we are the router (when we are not).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**地址解析协议**（**ARP**）欺骗，将利用ARP协议（如果你还记得你的基本网络经验，它将IP地址与特定MAC地址关联起来）使我们针对的系统相信我们是路由器（而实际上并非如此）。'
- en: Since we are using ARP poisoning, we are using falsified ARP messages across
    the network with the goal of changing the ARP cache on systems. Under normal conditions,
    when a system sends out an ARP request, it is looking for the MAC address that
    corresponds to the given IP address. When responded to, the return message will
    include the IP address and MAC address of the system that matches the request,
    which will then be cached in the requester's system. When we poison these caches,
    we send a message out that rewrites the cache with a different MAC address, which
    will route the traffic differently to that which the network owner would have
    intended. This has the effect of directing traffic in a myriad of different ways.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用ARP欺骗，我们在网络上使用伪造的ARP消息，目的是改变系统上的ARP缓存。在正常情况下，当系统发送ARP请求时，它正在寻找与给定IP地址对应的MAC地址。当得到响应时，返回的消息将包括与请求匹配的系统的IP地址和MAC地址，然后将被缓存在请求者的系统中。当我们毒化这些缓存时，我们发送一条消息，重写缓存为不同的MAC地址，这将使流量以与网络所有者意图不同的方式进行路由。这将导致流量以多种不同的方式进行定向。
- en: Through this simple act, clients will forward their traffic to our system, where
    we can perform our MITM before forwarding it on, instead of sending it to the
    actual router.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种简单的行为，客户端将把它们的流量转发到我们的系统，我们可以在将其转发之前执行我们的中间人攻击，而不是将其发送到实际的路由器。
- en: '**Traffic analysis**: Behind the scenes, we are using SSL strip to detect requests
    made to URLs using the SSL protocol as they flow through our system. Traffic that
    matches our criteria will be intercepted and modified.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**流量分析**：在幕后，我们使用SSL剥离来检测通过我们系统流动的使用SSL协议的URL的请求。符合我们标准的流量将被拦截和修改。'
- en: '**Intercepting and altering requests**: Essentially, when it comes down to
    an SSL strip detecting a request, it is stripping off the SSL and then altering
    the request or simply gathering information.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**拦截和修改请求**：基本上，当涉及到SSL剥离检测请求时，它会剥离SSL，然后修改请求或者简单地收集信息。'
- en: 'So, if we put it all together, we can see what is occurring when an SSL strip
    is running:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们把所有这些放在一起，我们就可以看到在运行**SSL剥离**时发生了什么：
- en: The attacker makes themselves appear as the router by spoofing the router's
    MAC address.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 攻击者通过欺骗路由器的MAC地址使自己看起来像路由器。
- en: Clients make requests to websites or other locations using SSL as usual.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端像往常一样向网站或其他位置发出请求。
- en: Requests that should go directly to the router, instead go to the attacker's
    impersonated system.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应直接发送到路由器的请求，而是发送到攻击者的模拟系统。
- en: An SSL strip (running on the attacker's system) observes traffic and looks for
    any requests destined for a location using SSL.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SSL剥离（在攻击者的系统上运行）观察流量，并寻找任何发送到使用SSL的位置的请求。
- en: When an SSL request is made, it is instead stripped of its protection and the
    private information retrieved.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当发出SSL请求时，它将被剥离其保护，并检索私人信息。
- en: The request then has its SSL layer reapplied and forwarded to the server.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后请求重新应用其SSL层并转发到服务器。
- en: The server responds and sends the SSL-protected content back to the attacker,
    who strips the SSL off of the request and gathers the return information.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器响应并将SSL保护的内容发送回攻击者，攻击者剥离请求的SSL并收集返回的信息。
- en: The response is then returned to the client who is none the wiser.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后将响应返回给客户端，客户端对此一无所知。
- en: So, let's make it happen with SSL strip.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们使用SSL strip。
- en: Exercise – working with SSL strip
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习-使用SSL strip
- en: 'To get things ready for SSL strip, we need to set a few things up ahead of
    time—fortunately, we already have the skills to do so. We are going to set up
    the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备好使用SSL strip，我们需要提前设置一些东西-幸运的是，我们已经具备了这样的技能。我们将设置以下内容：
- en: IP forwarding
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP转发
- en: IP table for redirect `80` to `8080`
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP表重定向`80`到`8080`
- en: Finding a gateway IP
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找网关IP
- en: Finding a target IP
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找目标IP
- en: Arpspoof
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arpspoof
- en: 'The following steps should be performed to set up IP forwarding:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 应执行以下步骤来设置IP转发：
- en: 'Type the following at the Terminal window:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端窗口中输入以下内容：
- en: '[PRE0]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Set up a redirect to redirect requests from port `80` to `8080`. From the Terminal
    window, issue the following command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置重定向，将端口`80`的请求重定向到`8080`。在终端窗口中，输入以下命令：
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Discover the router IP by typing the following at the Terminal window:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在终端窗口中输入以下内容来查找路由器IP：
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Choose a target from the list. In order to target a client, we need to locate
    one and get its IP. You can do this through the use of nmap, sniffing, or through
    other means. Once you have this IP, move to the next step.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表中选择一个目标。为了针对客户端进行定位，我们需要找到一个客户端并获取其IP。您可以通过使用nmap、嗅探或其他方式来完成此操作。一旦获得此IP，就可以进行下一步。
- en: 'Redirect traffic through the attacking computer that is hosting SSL Strip using
    the following at the Terminal window:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在终端窗口中输入以下内容来重定向流量通过托管SSL Strip的攻击计算机：
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Leave the Terminal window open.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持终端窗口打开。
- en: Open up a second Terminal window and leave the first open.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开第二个终端窗口并保持第一个窗口打开。
- en: Start `sslstrip` by typing `sslstrip -l 8080` at the second Terminal window;
    this will tell `sslstrip` to listen (via the `-l` switch) on port `8080`. If you
    look back at our earlier steps, we redirected to port 8080 so we are observing
    traffic going to the port.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二个终端窗口中输入`sslstrip -l 8080`启动`sslstrip`；这将告诉`sslstrip`通过`-l`开关监听端口`8080`。如果回顾我们之前的步骤，我们重定向到端口8080，因此我们正在观察流向该端口的流量。
- en: On the target system (the one you found in *step 4*), open up a website that
    uses SSL (you can tell via the `https` in the site's address). Sites such as Gmail
    is an example.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在目标系统（在*步骤4*中找到的系统）上打开一个使用SSL的网站（您可以通过站点地址中的`https`来判断）。Gmail等网站是一个例子。
- en: Visitthe site and enter the credentials for your account or other item; you
    will notice that data being captured on the sslstrip system.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问该网站并输入您的帐户或其他项目的凭据；您会注意到在sslstrip系统上捕获的数据。
- en: Capture some traffic on the Kali NetHunter system, switch to the window running
    sslstrip, and press *Ctrl* + *C* to stop the process and automatically write the
    results to a file named `sslstrip.log`.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Kali NetHunter系统上捕获一些流量，切换到运行sslstrip的窗口，并按*Ctrl* + *C*停止进程，并自动将结果写入名为`sslstrip.log`的文件。
- en: The results can be opened in any text editor, such as nano.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 结果可以在任何文本编辑器中打开，例如nano。
- en: Active techniques
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主动技术
- en: Active password-cracking techniques are done directly on or against the target
    system. The disadvantage of using this type of technique is that it increases
    the chances of being detected.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 主动密码破解技术直接在目标系统上或对目标系统进行。使用这种类型的技术的缺点是增加被检测到的机会。
- en: Working with Ncrack
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ncrack
- en: One method of carrying out this type of attack is to use the Ncrack utility
    included with Kali NetHunter. This utility was designed to audit hosts on a network
    for poor passwords that could be potentially leveraged in an attack against a
    host or networking device. The utility is command-line-based, which allows for
    the use of different combinations of switches and options designed to refine the
    cracking process. Additionally, the utility supports many major protocols and
    services, including RDP, SSH, HTTP(S), SMB, POP3(S), VNC, FTP, SIP, Redis, PostgreSQL,
    MySQL, and Telnet.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 进行此类攻击的一种方法是使用Kali NetHunter附带的Ncrack实用程序。该实用程序旨在对网络上的主机进行审计，以查找可能被利用来攻击主机或网络设备的弱密码。该实用程序基于命令行，可以使用不同组合的开关和选项来精细化破解过程。此外，该实用程序支持许多主要协议和服务，包括RDP、SSH、HTTP(S)、SMB、POP3(S)、VNC、FTP、SIP、Redis、PostgreSQL、MySQL和Telnet。
- en: Exercise – working with Ncrack
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习-使用Ncrack
- en: 'In order to use Ncrack, we can take the information we have been gathering
    so far on live systems, port scans, and usernames to get things started:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用Ncrack，我们可以利用迄今为止在活动系统、端口扫描和用户名上收集的信息来开始工作：
- en: Find a live system.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找活动系统。
- en: Look for ports that have a service running on them that Ncrack supports.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找Ncrack支持的运行服务的端口。
- en: Perform a banner grab against the port using telnet or your banner-grabbing
    tool of choice (such as nmap) to fingerprint the service.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行对端口的横幅抓取，使用telnet或您选择的横幅抓取工具（如nmap）对服务进行指纹识别。
- en: Use any usernames, such as those you gathered from SMTP enumeration, and save
    them to a text file. Save the file with a name you can remember, such as `usernames.txt`.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用任何用户名，例如您从SMTP枚举中收集的用户名，并将它们保存到一个文本文件中。将文件保存为您可以记住的名称，例如`usernames.txt`。
- en: Create a second text file with the passwords you want to try. You can alternatively
    download this file from the internet by locating one with a simple search for
    `password lists` or `word lists`. Save this to a text file named something that
    you can remember, such as `passwords.txt`.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建第二个文本文件，其中包含您要尝试的密码。您还可以通过查找`密码列表`或`单词列表`来从互联网上下载此文件。将其保存到一个您可以记住的文本文件中，例如`passwords.txt`。
- en: 'Once we have this completed, we can use Ncrack to see what results we can scare
    up:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，我们可以使用Ncrack来查看我们能够吓唬出什么结果：
- en: '[PRE4]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In this example, we are using the following:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用以下内容：
- en: '`-vv` to increase the output details while the command is running.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-vv` 用于在命令运行时增加输出细节。'
- en: '`-U` to specify the file with the usernames to try.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-U` 用于指定要尝试的用户名文件。'
- en: '`-P` to specify the file with the passwords to use.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-P` 用于指定要使用的密码文件。'
- en: IP address with the port for the Ncrack-supported service to target.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP地址和Ncrack支持的服务的端口。
- en: '`CL` to specify how many connections to open simultaneously with the target.
    More connections may increase the speed.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CL` 用于指定与目标同时打开的连接数。更多的连接可能会增加速度。'
- en: 'If the command is successful for an account, your results will be printed onscreen,
    like so:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令对某个帐户成功，你的结果将被打印在屏幕上，如下所示：
- en: '[PRE5]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As you can see, the username is `schmuck` and the password is `aesop`.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，用户名是`schmuck`，密码是`aesop`。
- en: Offline attacks
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 离线攻击
- en: '**Offline attacks** are not done directly on the target but rather on the attacker''s
    system itself. Offline password-cracking is very CPU-intensive.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**离线攻击**不是直接针对目标进行的，而是针对攻击者的系统本身。离线密码破解非常消耗CPU。'
- en: Rainbow tables
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 彩虹表
- en: One very effective demonstration of the functioning and power of offline attacks
    is through a technique known as rainbow tables. This type of attack utilizes pre-computed
    hashes of all the different combinations of characters created using a given hashing
    method. In practice, the rainbow table will be created by the pentester, who will
    choose the parameters for creating the hashes. For example, parameters defining
    the minimum and maximum length of the password, as well as character sets and
    hashing types, will be defined. The result will be a table that can be used to
    find the correct password.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 离线攻击功能和力量的一个非常有效的演示是通过一种称为彩虹表的技术。这种类型的攻击利用了使用给定哈希方法创建的所有不同字符组合的预计算哈希。在实践中，彩虹表将由渗透测试人员创建，他将选择创建哈希的参数。例如，定义密码的最小和最大长度的参数，以及字符集和哈希类型将被定义。结果将是一个可以用来找到正确密码的表。
- en: So how do we find the correct password using the table? Simple! We retrieve
    a hashed password from the local storage of the victim or capture it off the wire
    using sniffing.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们如何使用表找到正确的密码呢？简单！我们从受害者的本地存储中检索一个哈希密码，或者通过嗅探从网络中捕获它。
- en: The disadvantage of rainbow tables is that they must be generated prior to executing
    the attempt to recover the password. One other failing of rainbow tables is that
    the longer the password you are attempting to recover becomes, the larger the
    resulting table and the more time it takes to generate it.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 彩虹表的缺点是必须在执行恢复密码的尝试之前生成它们。彩虹表的另一个失败是，尝试恢复的密码越长，生成的表越大，生成它所需的时间就越长。
- en: Exercise – creating the rainbow table
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 - 创建彩虹表
- en: The first step in utilizing the rainbow table cracking method is to actually
    create the table itself. To do this, we will make use of `rtgen` to generate the
    table with the parameters we specify.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 利用彩虹表破解方法的第一步是实际创建表本身。为此，我们将使用`rtgen`来生成我们指定的参数的表。
- en: Exercise – working with rtgen
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习 - 使用rtgen
- en: 'To use the `rtgen` command, we must open a Terminal window and provide the
    desired parameters. The following is a list of the options available with `rtgen`:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`rtgen`命令，我们必须打开一个终端窗口并提供所需的参数。以下是`rtgen`提供的选项列表：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If we want to generate a rainbow table, we type:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想生成一个彩虹表，我们输入：
- en: '[PRE7]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When creating rainbow tables, each table is specific for a given hash type,
    such as MD5 or SHA1\. The `rtgen` program supports many hashing algorithms, such
    as MD5 and SHA1.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建彩虹表时，每个表都是针对给定的哈希类型，例如MD5或SHA1。`rtgen`程序支持许多哈希算法，例如MD5和SHA1。
- en: In the preceding example, we generated SHA1 rainbow tables that will speed up
    cracking SHA1 hashes.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们生成了SHA1彩虹表，这将加快破解SHA1哈希的速度。
- en: 'After the command has executed, you will be left with files with the .rt extension
    in the folder where you executed the command. The next step is to sort the files
    by using the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 命令执行后，您将在执行命令的文件夹中留下扩展名为.rt的文件。下一步是使用以下命令对文件进行排序：
- en: '[PRE8]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This will sort the files before we use them.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在我们使用它们之前对文件进行排序。
- en: 'Now we will recover the password using one of the following commands. Here''s
    the first:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将使用以下命令恢复密码。这是第一个：
- en: '[PRE9]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Alternatively, you can use this command:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以使用此命令：
- en: '[PRE10]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This command will attempt to recover the password for the hash provided.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将尝试恢复提供的哈希密码。
- en: Putting it together
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将它们放在一起
- en: To successfully crack a password, you must have a plan; just stumbling through
    different techniques may bear "fruit" but they are more likely to be not only
    unsuccessful, but may get you detected in the process. So, let's think of a strategy
    to use with our powerful tools within Kali NetHunter.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要成功破解密码，您必须有一个计划；仅仅通过不同的技术来尝试可能会取得“成果”，但更有可能不仅不成功，而且可能在过程中被检测到。因此，让我们考虑一种策略，以利用我们在Kali
    NetHunter中强大的工具。
- en: First, you should understand that the hashes that will most likely be the target
    of your password-cracking attempts will exist in different places depending on
    your approach and the target environment.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您应该了解，您尝试破解密码的哈希很可能存在于不同的位置，这取决于您的方法和目标环境。
- en: In environments with Microsoft Windows, these locations are the SAM file, which
    exists on local computer filesystems and also within Active Directory if the environment
    uses a domain.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Microsoft Windows的环境中，这些位置是SAM文件，它存在于本地计算机文件系统中，也存在于Active Directory中，如果环境使用域。
- en: Those environments that are either based on Linux or UNIX environments, and
    typically have their hashes stored in a different location entirely. These systems
    store their hashes in a location known as `/etc/shadow`, which is again on a local
    filesystem.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 那些基于Linux或UNIX环境的环境通常将它们的哈希存储在完全不同的位置。这些系统将它们的哈希存储在一个名为`/etc/shadow`的位置，这也是在本地文件系统上。
- en: In both situations, the hashes are, as is the design of hashes, one-way encryption
    that generates a unique output or fingerprint for each password. Of course, even
    though a hash isn't reversible, we have already explained that a rainbow table
    may be employed to look up what created a hash; however, there is a problem that
    hasn't been addressed. This problem is that there are multiple hashing algorithms
    and the same input will produce different results on each. So we need to identify
    the hash algorithm before we can go too far; fortunately, we have ways to do this.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，哈希是一种单向加密，为每个密码生成唯一的输出或指纹。当然，尽管哈希是不可逆的，我们已经解释过彩虹表可以用来查找生成哈希的内容；然而，还有一个问题没有解决。这个问题是有多种哈希算法，相同的输入会在每种算法上产生不同的结果。因此，我们需要在走得太远之前确定哈希算法；幸运的是，我们有办法做到这一点。
- en: For example, Linux-based systems use the well-known MD5 algorithm, while Windows
    systems make use of HMAC-MD5, and some other technologies make use of SHA1, MD4,
    NTLM, and so on.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，基于Linux的系统使用众所周知的MD5算法，而Windows系统使用HMAC-MD5，一些其他技术使用SHA1、MD4、NTLM等。
- en: 'One way is to use a tool in Kali NetHunter Linux known as hash-identifier.
    This tool can be run simply by opening up a command prompt in Kali NetHunter and
    entering the following:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是使用Kali NetHunter Linux中的一个工具，称为hash-identifier。这个工具可以通过在Kali NetHunter中打开命令提示符并输入以下命令来运行：
- en: '[PRE11]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The hash-identifier tool will proceed to attempt to identify the hash and list
    out the possible types.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: hash-identifier工具将尝试识别哈希并列出可能的类型。
- en: Another option is to use the John the Ripper password-cracker (which is also
    included with Kali Nethunter). In other popular password-cracking tools, however,
    automatic detection is not an option so the hash type must be specified, hence
    the need for hash-identifier.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选择是使用John the Ripper密码破解工具（也包含在Kali NetHunter中）。然而，在其他流行的密码破解工具中，自动检测不是一个选项，因此需要指定哈希类型，因此需要hash-identifier。
- en: Exercise – recovering passwords with hashcat
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习-使用hashcat恢复密码
- en: Let's recover our first set of passwords by using Kali NetHunter Linux and hashcat.
    **Hashcat** is known as one of the fastest CPU-based password-recovery tools available.
    While initially proprietary, the software is now completely free and widely used
    not just in Linux, but in OS X and Windows. It also comes with a version that
    can harness the CPU of a system, but also has the ability to make use of a faster
    Graphic Processing Unit (GPU). Examples of hashcat-supported hashing algorithms
    are Microsoft's LM hashes, MD4, MD5, SHA-family, Unix Crypt formats, MySQL, Cisco
    PIX.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Kali NetHunter Linux和hashcat来恢复我们的第一组密码。**Hashcat**被认为是最快的基于CPU的密码恢复工具之一。虽然最初是专有的，但现在这个软件完全免费，不仅在Linux中广泛使用，在OS
    X和Windows中也广泛使用。它还配备了一个可以利用系统的CPU的版本，但也有能力利用更快的图形处理单元（GPU）。hashcat支持的哈希算法的例子包括Microsoft的LM哈希、MD4、MD5、SHA系列、Unix
    Crypt格式、MySQL、Cisco PIX。
- en: To get the process of password-cracking started in Kali NetHunter, go to `Applications`
    | `Kali Nethunter Linux` | `Password Attacks` | `Offline Attacks` | `hashcat`.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Kali NetHunter中启动密码破解过程，请转到`应用程序` | `Kali NetHunter Linux` | `密码攻击` | `离线攻击`
    | `hashcat`。
- en: This will open the terminal window with some help information displayed.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开一个带有一些帮助信息的终端窗口。
- en: 'At the top of the screen, you will see the hashcat syntax:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕顶部，您将看到hashcat的语法：
- en: '[PRE12]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Some of the most important of these are -m (the hashtype) and -a (attack mode).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一些最重要的是-m（哈希类型）和-a（攻击模式）。
- en: Let's dissect hashcat's syntax and options of importance that are available
    to customize and tweak the process of cracking with hashcat. These rules can take
    a wordlist file that you have created and apply capitalization rules, special
    characters, word combinations, and appended and prepended numbers. Each of these
    techniques will make the breaking of more complex passwords more likely. In fact,
    hashcat will let you customize the custom character sets and options that are
    used to attempt recovery of the password(s) on a target.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析hashcat的语法和重要的选项，这些选项可以用来定制和调整使用hashcat进行破解的过程。这些规则可以接受您创建的单词列表文件，并应用大写规则、特殊字符、单词组合以及附加和前置数字。这些技术中的每一种都会增加破解更复杂密码的可能性。事实上，hashcat将允许您定制用于尝试在目标上恢复密码的自定义字符集和选项。
- en: You will also be presented with the requirement to choose the type of hash being
    cracked. It can be done if you know the hashing type on the system you are targeting
    or have used a hash identifier.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将被要求选择正在破解的哈希类型。如果您知道您正在瞄准的系统上的哈希类型，或者已经使用了哈希标识符，那么可以这样做。
- en: Finally, we have to choose the type of hash we are attempting to crack. Hashcat
    gives us numerous options. When we get ready to target the hash, you will designate
    the type of hash that is being targeted by choosing it (by number) from a list
    that hashcat presents.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们必须选择我们要尝试破解的哈希类型。Hashcat给了我们很多选择。当准备好瞄准哈希时，您将从hashcat呈现的列表中选择（按编号）正在瞄准的哈希类型。
- en: 'You can download a wordlist from online or you can search your Kali NetHunter
    system using the locate command to find the built-in wordlists in the product.
    You can do this using the following syntax:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从网上下载一个单词列表，或者您可以使用locate命令在您的Kali NetHunter系统中搜索内置的单词列表。您可以使用以下语法来做到这一点：
- en: '[PRE13]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Once we are ready with hashcat and a wordlist, we can start by grabbing some
    hashes. In Linux, we can grab these by logging in as root and looking in `/etc/shadow`
    like so:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们准备好了hashcat和一个单词列表，我们可以通过以root用户登录并查看`/etc/shadow`来获取一些哈希。在Linux中，可以这样做：
- en: '[PRE14]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We can see the shadow file with the hashes, once this command has executed.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦执行了这个命令，我们就可以看到带有哈希的shadow文件。
- en: 'With this information in hand, we now need to determine what type of hashing
    is in use by the system. Fortunately, we can do that fairly easily by issuing
    the following command:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些信息，现在我们需要确定系统使用的是什么类型的哈希。幸运的是，我们可以通过发出以下命令相当容易地做到这一点：
- en: '[PRE15]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Navigate about 80% of the way down the file by tapping the enter key until you
    see an entry labeled `ENCRYPT_METHOD`, which will be followed by a value that
    is typically SHA512\. This is important, as hashcat will need this information
    to reveal the hashes.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 通过按Enter键向下滚动文件约80%，直到看到一个标记为`ENCRYPT_METHOD`的条目，其后通常是SHA512的值。这很重要，因为hashcat将需要这些信息来显示哈希。
- en: With knowledge of where the hashes are located, along with the hashing algorithm
    that is used by the system, it is now possible to start the process of cracking
    the hashes.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 有了哈希的位置信息以及系统使用的哈希算法的知识，现在可以开始破解哈希的过程了。
- en: 'First, we want to place the hashes into a file we will name `hash.lst`, which
    we create by issuing the following command:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们想把哈希放入一个我们将命名为`hash.lst`的文件中，我们通过发出以下命令来创建这个文件：
- en: '[PRE16]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In order to ensure that everything was copied over, let''s issue the following
    command:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保一切都被复制过去，让我们发出以下命令：
- en: '[PRE17]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: If everything completed successfully, you should see that the hashes have been
    copied over to the `hash.lst` file as intended.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利完成，您应该看到哈希已经按预期复制到`hash.lst`文件中。
- en: Before we can attempt to crack the hashes in this file, we need to strip out
    some information to clean things up. Basically, we are going to remove anything
    that isn't a hash. By default, the file will include username information, which
    is not needed during this process.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们尝试破解此文件中的哈希之前，我们需要剥离一些信息以清理一下。基本上，我们将删除任何不是哈希的东西。默认情况下，文件将包括用户名信息，在此过程中不需要。
- en: 'In order to ensure that the process will be successful, you will need to remove
    the username and the colon immediately proceeding the username. After you have
    removed this, you will then remove everything: go to the end of the line and strip
    out anything that starts with a colon. In order to explain things further, let''s
    consider the following screenshot:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保这个过程将会成功，您需要删除用户名和紧接用户名的冒号。在您删除了这个之后，您将删除一切：去到行的末尾并删除任何以冒号开头的东西。为了进一步解释，让我们考虑以下截图：
- en: '![image](img/504103ce-036e-4788-b546-5109b1361578.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/504103ce-036e-4788-b546-5109b1361578.jpg)'
- en: 'We need to clean this up a bit to display only the highlighted hash values:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要清理一下，只显示高亮的哈希值：
- en: '![image](img/a0ecead2-3a40-417c-9d9b-17f1600db71d.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/a0ecead2-3a40-417c-9d9b-17f1600db71d.jpg)'
- en: 'In the final step, you can now start the process of cracking the hashes. Here''s
    the command to initiate this process:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一步，您现在可以开始破解哈希的过程了。以下是启动此过程的命令：
- en: '[PRE18]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '`-m 1800` designates the type of hash we are cracking (SHA-512).'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-m 1800`指定了我们要破解的哈希类型（SHA-512）。'
- en: '`-a 0` designates a dictionary attack.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-a 0`指定了字典攻击。'
- en: '`-o cracked.txt` is the output file for the cracked passwords.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-o cracked.txt`是破解密码的输出文件。'
- en: '`--remove` tells hashcat to remove the hash after it has been cracked.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--remove`告诉hashcat在破解后删除哈希。'
- en: '`hash.lst` is our input file of hashes.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hash.lst`是我们的哈希输入文件。'
- en: '`/usr/share/sqlmap/txt/wordlist.txt` is the absolute path to our word list
    for this dictionary attack.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/usr/share/sqlmap/txt/wordlist.txt`是我们用于此字典攻击的单词列表的绝对路径。'
- en: Once the cracking process is underway, you can see how things are proceeding
    by pressing *Enter*. This process will take varying periods of time, depending
    on the power of your Android device and what else you have running on the system
    at the same time.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦破解过程开始，您可以通过按下*Enter*键来查看进展情况。这个过程将需要不同的时间，这取决于您的安卓设备的性能以及同时运行在系统上的其他内容。
- en: Executing applications
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行应用程序
- en: In this section, we will discuss how you can run applications remotely and what
    you can do with that power.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何远程运行应用程序以及您可以利用这种能力做些什么。
- en: 'As a pentester, you should have a good or definite idea of what you will be
    doing at this point, such as running an application or performing. Need to carry
    out tasks such as the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 作为渗透测试人员，您应该对此时将要做的事情有一个很好或明确的想法，比如运行一个应用程序或执行。需要执行以下任务：
- en: '**Backdoors**: After compromising a system, a hacker would create multiple
    doorways into the compromised computer. This is to ensure the attacker always
    has a way into the computer, whether it''s for remote access purposes or to exfiltrate
    data. This is known as a Backdoor. Backdoors are usually created when a Trojan
    virus installs itself on a host computer.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后门**：在入侵系统后，黑客会在受损的计算机中创建多个入口。这是为了确保攻击者始终有一种方式进入计算机，无论是出于远程访问目的还是为了外泄数据。这就是所谓的后门。后门通常是当特洛伊木马病毒安装在主机计算机上时创建的。'
- en: '**Keyloggers**: This is a software- or hardware-based device that has the capability
    of recording keystrokes from a user keyboard.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**键盘记录器**：这是一种软件或硬件设备，具有从用户键盘记录按键的能力。'
- en: Escalating privileges
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提升权限
- en: After compromising an operating system, such as Windows, you would have limited
    privileges on the system. This means if you try to execute certain commands or
    run applications, the built-in security will deny such actions. If you're able
    to compromise a user account, it might be a standard user with limited privileges
    as well. As a penetration tester, we would like the ability to execute any command
    and applications on a victim machine without any sort of restrictions.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在入侵操作系统（如Windows）之后，您将在系统上拥有有限的特权。这意味着如果您尝试执行某些命令或运行应用程序，内置安全性将拒绝此类操作。如果您能够破坏用户帐户，它可能也是一个具有有限特权的标准用户。作为渗透测试人员，我们希望能够在受害机器上执行任何命令和应用程序，而不受任何限制。
- en: Therefore, depending on the objectives of the penetration test, you may be required
    to gain "administrator" privileges in a Windows environment, or root-level access
    on Linux-based systems.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，根据渗透测试的目标，您可能需要在Windows环境中获得"管理员"特权，或者在基于Linux的系统上获得root级别访问权限。
- en: Executing applications on the target
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在目标上执行应用程序
- en: Once access is gained and sufficient privileges obtained, it becomes time to
    execute applications on the victim. Which types of applications or actions are
    executed at this point is something that you will have to decide, but the field
    is wide open as to what you could do.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦获得访问权限并获得足够的特权，就该执行受害者上的应用程序了。在这一点上执行哪些类型的应用程序或操作是您需要决定的，但您可以做的事情非常多。
- en: Exercise – planting a backdoor with Netcat
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习-使用Netcat种植后门
- en: '**Netcat** is like a Swiss Army knife in the TCP/IP stack. It''s a very popular
    networking tool that provides networking and security professionals with many
    features; some of these features include the following:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**Netcat**就像TCP/IP堆栈中的瑞士军刀。它是一个非常受欢迎的网络工具，为网络和安全专业人员提供了许多功能；其中一些功能包括以下内容：'
- en: Able to read and write data over a networking
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够在网络上传输数据
- en: Ability to transfer files
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够传输文件
- en: Open service ports
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开服务端口
- en: Conduct port-scanning and banner-grabbing
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行端口扫描和横幅抓取
- en: Netcat is not specific to an operating system; it's available to both Windows
    and Linux platforms. In this section, we will look at a few examples and usage
    of Netcat.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: Netcat并不特定于操作系统；它适用于Windows和Linux平台。在本节中，我们将看一些Netcat的例子和用法。
- en: 'To connect to another machine, do the following:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到另一台机器，请执行以下操作：
- en: '[PRE19]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'To listen for inbound connections, issue the following:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 要监听入站连接，请发出以下命令：
- en: '[PRE20]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Simply replace the port number with any unused, valid port on the remote system.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 只需用远程系统上的任何未使用的有效端口替换端口号。
- en: 'On the system that you wish to connect from, run the following:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在您希望连接的系统上运行以下命令：
- en: '[PRE21]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This command says to contact the remote system and then connect to the port
    that you have told `nc` to listen to on the remote system.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令表示要联系远程系统，然后连接到您告诉`nc`在远程系统上监听的端口。
- en: Let's go a little further.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再深入一点。
- en: Now let's create a backdoor on the target system that we can make use of whenever
    we desire. The command will vary slightly based on whether you happen to be targeting
    a Linux or Windows system.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在目标系统上创建一个后门，我们可以随时使用。根据您是否针对Linux或Windows系统，命令会略有不同。
- en: 'For Windows, we use the following:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows，我们使用以下命令：
- en: '[PRE22]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'For Linux, we use this:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux，我们使用这个：
- en: '[PRE23]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In both of these commands, the -e switch is used to execute a command when
    the machine is connected to a command shell. This means that we will be presented
    with a shell locally that we can use to pipe commands to the remote system. Then,
    on our attacking system, we type the following:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两个命令中，使用-e开关来在连接到命令shell时执行命令。这意味着我们将在本地获得一个shell，我们可以用它来向远程系统发送命令。然后，在我们的攻击系统上，我们输入以下内容：
- en: '[PRE24]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: At this point, if you executed the command successfully, you would see a command
    prompt that allows you to interact with the remote system.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，如果您成功执行了命令，您将看到一个命令提示符，允许您与远程系统进行交互。
- en: Netcat can also be used to exfiltrate files and data from the target. We can
    use a stealth connection to slowly copy that data over to our local system. In
    this example, we will exfiltrate a file called `passwords.xls`, presumably an
    Excel file with passwords.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Netcat也可以用于从目标中转移文件和数据。我们可以使用隐蔽连接将数据慢慢复制到我们的本地系统。在这个例子中，我们将转移一个名为`passwords.xls`的文件，可能是一个包含密码的Excel文件。
- en: 'From the source system, we type the following:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 从源系统，我们输入以下内容：
- en: '[PRE25]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: This command says to display the `passwords.xls` file and then pipe (`|`) it
    to netcat (nc) to the `192.168.1.104` remote IP address through port `6996`.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令表示要显示`passwords.xls`文件，然后将其管道(`|`)到netcat (nc)到`192.168.1.104`远程IP地址通过端口`6996`。
- en: 'From the destination system, we type the following:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 从目标系统，我们输入以下内容：
- en: '[PRE26]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This command says to create a listener (`l`) on port (`p`) `6996` and then send
    the data received on this listener to a file named `passwords.xls`.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令表示要在端口(`p`)`6996`上创建一个监听器(`l`)，然后将在此监听器上接收到的数据发送到名为`passwords.xls`的文件中。
- en: Summary
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We started things off by looking at how to utilize information gathered during
    the previous steps for a target. Information from previous chapters was gathered
    with measured, but increasing, levels of direct interaction with a target. The
    intention was to gain additional information that we could use to compromise a
    system while attempting to be less intrusive.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开始时看了如何利用在前几步中收集的有关目标的信息。在前几章中收集的信息是通过与目标的直接交互来逐渐增加的。我们的目的是获得更多信息，以便在尝试更少侵入性的情况下利用系统。
- en: We typically start with cracking or recovering a password to gain access to
    an account before attempting to gain additional access to a system through privilege
    escalation. With this increased access, it is possible to carry out more intrusive
    tasks. Common actions that an attacker may attempt to carry out typically include
    installing software, installing remote software, or creating other backdoors for
    later access.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 通常我们会先破解或恢复密码，以获取账户访问权限，然后尝试通过特权升级来获得对系统的额外访问权限。有了这种增加的访问权限，就有可能执行更具侵入性的任务。攻击者通常可能尝试执行的常见操作包括安装软件、安装远程软件，或者创建其他后门以便以后访问。
- en: In the next chapter we will learn about clearing tracks and removing evidence
    from a target system.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何清除痕迹并从目标系统中删除证据。
- en: Further reading
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Refer to the Kali Linux/Kali NetHunter tools list at: [http://tools.kali.org](http://tools.kali.org).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考Kali Linux/Kali NetHunter工具列表：[http://tools.kali.org](http://tools.kali.org)。
