- en: Chapter 7. Wireless Client Attacks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。无线客户端攻击
- en: 'So far, we have covered attacks against WEP and WPA/WPA2 protocols, access
    points, and network infrastructure. In this chapter, we treat attacks targeting
    the clients, whether they are connected or not to a Wi-Fi network. We will cover
    the following topics in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经涵盖了针对WEP和WPA/WPA2协议、接入点和网络基础设施的攻击。在本章中，我们将讨论针对客户端的攻击，无论它们是否连接到Wi-Fi网络。本章将涵盖以下主题：
- en: Honeypot access points and Evil Twin attacks
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蜜罐接入点和Evil Twin攻击
- en: Man-in-the-middle attacks
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中间人攻击
- en: Caffe Latte and Hirte attacks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Caffe Latte和Hirte攻击
- en: Cracking WPA keys without the AP
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需AP即可破解WPA密钥
- en: Honeypot access points and Evil Twin attacks
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蜜罐接入点和Evil Twin攻击
- en: In the last chapter, we have seen how to set up a rogue access point, which
    is part of the local wired network. An attacker can also set up a fake AP that
    appears to be legitimate to the client but is not connected to the local network.
    This kind of AP is called a **honeypot** AP, because it lures clients to associate
    with it. A honeypot AP that impersonates a genuine one, standing in its proximity,
    can be used to conduct the so-called **Evil Twin** attack. Indeed, the honeypot
    AP spoofs the SSID (and eventually the MAC address) of the real AP, advertising
    it in the beacon frames it sends. The operating system of a wireless client typically
    keeps track of the networks to which the client has already connected in the past.
    The client can be configured to automatically connect to such networks when it
    is in their range and the signal is strong enough. So, if the fake AP is closer
    to the client than the legitimate one, and therefore its signal is stronger, the
    first *wins* on the latter and the client connects to it.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们已经看到了如何设置一个属于本地有线网络的恶意接入点。攻击者还可以设置一个看似合法但未连接到本地网络的假AP。这种AP被称为**蜜罐**AP，因为它诱使客户端与其关联。模拟真实AP的蜜罐AP，站在其附近，可用于进行所谓的**Evil
    Twin**攻击。事实上，蜜罐AP伪造了真实AP的SSID（以及可能的MAC地址），在发送的信标帧中进行广告。无线客户端的操作系统通常会跟踪客户端过去连接过的网络。当客户端在这些网络的范围内且信号足够强时，客户端可以配置为自动连接到这些网络。因此，如果假AP比合法AP更接近客户端，因此其信号更强，那么前者就会胜过后者，客户端会连接到前者。
- en: There is no way for the client to authenticate the AP, because 802.11 management
    frames are not cryptographically signed. The usage of WEP or WPA-PSK serves to
    authenticate the client and encrypt the data exchanged after the association takes
    place, but does not authenticate the server to the client.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端无法对AP进行身份验证，因为802.11管理帧没有加密签名。使用WEP或WPA-PSK用于对客户端进行身份验证，并在关联发生后加密交换的数据，但不对服务器进行客户端身份验证。
- en: Even a WPA-Enterprise enabled AP can be susceptible to this attack, because
    clients are often configured to not check the authentication server certificate,
    as we have seen in the last chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 即使启用了WPA-Enterprise的AP也可能受到这种攻击的影响，因为客户端通常配置为不检查认证服务器证书，正如我们在上一章中所看到的。
- en: Moreover, these certificates are not tightly bound to network SSIDs and an attacker
    can set up its authentication server and present the client a certificate that
    appears legitimate. To do so, the attacker could register a domain name that resembles
    that of the target network and obtain a valid certificate for it from a certification
    authority.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这些证书与网络SSID没有紧密绑定，攻击者可以设置其认证服务器并向客户端呈现看似合法的证书。为此，攻击者可以注册一个类似于目标网络的域名，并从认证机构获取有效证书。
- en: This technique is also used by a variant of the Evil Twin attack targeting WPA-Enterprise
    networks, which is described in the research paper that can be found at [http://seclab.ccs.neu.edu/static/publications/ndss2013wpa.pdf](http://seclab.ccs.neu.edu/static/publications/ndss2013wpa.pdf).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术也被用于针对WPA-Enterprise网络的Evil Twin攻击的变种，该攻击在研究论文中有描述，可在[http://seclab.ccs.neu.edu/static/publications/ndss2013wpa.pdf](http://seclab.ccs.neu.edu/static/publications/ndss2013wpa.pdf)找到。
- en: Note
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**The Multipot attack**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**Multipot攻击**'
- en: Another interesting variant of the Evil Twin attack is the so-called Multipot
    attack, presented at the Defcon 15 conference in 2007 by K.N. Gopinath, where
    multiple honeypot APs are used in the attack. The relative white-paper and the
    slides of the presentation (along with the audio and video) are available at [https://www.defcon.org/html/links/dc-archives/dc-15-archive.html#Gopinath](https://www.defcon.org/html/links/dc-archives/dc-15-archive.html#Gopinath).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的Evil Twin攻击变种是所谓的Multipot攻击，由K.N. Gopinath在2007年的Defcon 15会议上提出，其中使用多个蜜罐AP来进行攻击。演示的相关白皮书和演示文稿（以及音频和视频）可在[https://www.defcon.org/html/links/dc-archives/dc-15-archive.html#Gopinath](https://www.defcon.org/html/links/dc-archives/dc-15-archive.html#Gopinath)上找到。
- en: In the next subsection, we will see how to set up a honeypot AP and perform
    an Evil Twin attack with the aircrack-ng suite.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一小节中，我们将看到如何设置蜜罐AP并使用aircrack-ng套件进行Evil Twin攻击。
- en: The Evil Twin attack in practice
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实践中的Evil Twin攻击
- en: Prior to creating a honeypot AP, we assume to have carried out the reconnaissance
    phase and identified the APs and the clients connected, following the methods
    illustrated in [Chapter 3](ch03.html "Chapter 3. WLAN Reconnaissance"), *WLAN
    Reconnaissance*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建蜜罐AP之前，我们假设已经进行了侦察阶段，并识别了连接的AP和客户端，遵循[第3章](ch03.html "第3章。WLAN侦察")中介绍的方法，*WLAN侦察*。
- en: 'Once we have selected the target AP that we want to impersonate, we set up
    our honeypot AP with the same SSID, running airbase-ng in a new terminal emulator
    window:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们选择了要模拟的目标AP，我们就在新的终端模拟器窗口中使用相同的SSID设置我们的蜜罐AP，运行airbase-ng：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Recall that the `--essid` option defines the SSID of our AP, and the `-c` option
    the channel it uses.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`--essid`选项定义了我们AP的SSID，`-c`选项定义了它使用的信道。
- en: '![The Evil Twin attack in practice](img/B04527_07_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![实践中的Evil Twin攻击](img/B04527_07_01.jpg)'
- en: 'In the `airodump-ng` output window, we can see both our twin APs, with the
    same SSID:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在`airodump-ng`输出窗口中，我们可以看到我们的两个双胞胎AP，具有相同的SSID：
- en: '![The Evil Twin attack in practice](img/B04527_07_02.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![实践中的恶意双胞胎攻击](img/B04527_07_02.jpg)'
- en: We can distinguish them for the type of encryption used (the fake AP uses Open
    authentication), the channel and for other fields such as the beacons and data
    packets transmitted, and the signal power level (`Pwr`). A lower negative value
    of the `Pwr` field means a higher signal level. The signal level of the honeypot
    AP should be higher than that of the genuine AP, to lure clients to connect to
    it.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用的加密类型（虚假AP使用开放认证）、信道和其他字段（如信标和数据包传输）以及信号功率水平（`Pwr`）来区分它们。`Pwr`字段的较低负值意味着更高的信号水平。蜜罐AP的信号水平应该高于真实AP的信号水平，以吸引客户端连接。
- en: If no client is currently connected to the legitimate AP, we need to wait for
    clients to connect to the fake AP, while believing to connect to the real one.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前没有客户端连接到合法的AP，我们需要等待客户端连接到虚假AP，同时相信连接到真实AP。
- en: 'If a client is already connected, we can force it to de-authenticate from the
    network with the `aireplay-ng` tool:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果客户端已经连接，我们可以使用`aireplay-ng`工具强制其从网络中注销：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This command can also be used to conduct a DoS attack against the target client:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令也可以用来对目标客户端进行DoS攻击：
- en: '![The Evil Twin attack in practice](img/B04527_07_03.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![实践中的恶意双胞胎攻击](img/B04527_07_03.jpg)'
- en: 'If more clients are connected, we can send broadcast de-authentication packets
    to disconnect all of them from the network:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有更多的客户端连接，我们可以发送广播去认证数据包，将所有客户端从网络中断开：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![The Evil Twin attack in practice](img/B04527_07_04.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![实践中的恶意双胞胎攻击](img/B04527_07_04.jpg)'
- en: 'In the following screenshot, we can see that the client has reconnected again,
    this time to the honeypot AP, which means that we succeeded in the attack:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我们可以看到客户端再次重新连接到蜜罐AP，这意味着我们成功了：
- en: '![The Evil Twin attack in practice](img/B04527_07_05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![实践中的恶意双胞胎攻击](img/B04527_07_05.jpg)'
- en: In the next section, we will see how to perform man-in-the-middle attacks against
    clients connected to a honeypot AP.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将看到如何对连接到蜜罐AP的客户端进行中间人攻击。
- en: Man-in-the-middle attacks
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中间人攻击
- en: A **man-in-the-middle** (**MITM**) attack is a kind of attack where an attacker
    interposes itself between two communicating parties, typically (but not necessarily)
    a client and a server, and relays the exchanged messages transparently, making
    the parties believe that they are directly talking to each other.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**中间人**（**MITM**）攻击是一种攻击，攻击者在两个通信方之间插入自己，通常（但不一定）是客户端和服务器，并透明地中继交换的消息，使双方相信他们直接在交谈。'
- en: In our case, the MITM attack is a honeypot software AP that lures the clients
    to connect to it, believing it is the legitimate one. In this way, all the network
    traffic sent and received by the client passes through the fake AP and the attacker
    can sniff and manipulate it, retrieving passwords and sensitive information, altering
    data, and hijacking sessions.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，中间人攻击是一个蜜罐软件AP，诱使客户端连接到它，相信它是合法的。这样，客户端发送和接收的所有网络流量都通过虚假AP，并且攻击者可以窃听和操纵它，获取密码和敏感信息，更改数据，并劫持会话。
- en: For example, the attacker can eavesdrop and sniff the traffic using network
    sniffers such as tcpdump, Wireshark, and **Ettercap**. Ettercap is not only a
    sniffer but also a tool for launching MITM attacks that provides a GUI and supports
    many network protocols. For more information about it, refer to [Appendix](apa.html
    "Appendix A. References"), *References* or to the manual page (`man ettercap`).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，攻击者可以使用网络嗅探器如tcpdump、Wireshark和**Ettercap**来窃听和嗅探流量。Ettercap不仅是一个嗅探器，还是一个用于发动中间人攻击的工具，提供了GUI并支持许多网络协议。有关更多信息，请参阅[附录](apa.html
    "附录A。参考资料")，*参考资料*或手册页（`man ettercap`）。
- en: Typical MITM attacks are conducted through ARP cache poisoning, DNS spoofing,
    and session hijacking. For example, with DNS spoofing, the attacker can redirect
    a user to a cloned website and deceive him/her to enter their credentials.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的中间人攻击是通过ARP缓存投毒、DNS欺骗和会话劫持进行的。例如，通过DNS欺骗，攻击者可以将用户重定向到一个克隆的网站，并欺骗他们输入他们的凭据。
- en: Also, TLS encrypted sessions can be attacked, if the attacker exploits a vulnerability
    like the CVE-2014-0224 in OpenSSL ([https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224))
    or present the client with a fake certificate that is accepted despite the warnings
    displayed by the client's browser.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果攻击者利用类似于OpenSSL中的CVE-2014-0224的漏洞或向客户端呈现一个虚假证书，即使客户端浏览器显示警告，也可以攻击TLS加密会话。
- en: To make the honeypot AP act as a router between the wireless clients and the
    wired network and/or the Internet, we must create a bridge interface and enable
    IP forwarding, following the same procedure described in [Chapter 6](ch06.html
    "Chapter 6. Attacking Access Points and the Infrastructure"), *Attacking Access
    Points and the Infrastructure*, to set up a rogue AP.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使蜜罐AP充当无线客户端和有线网络和/或互联网之间的路由器，我们必须创建一个桥接接口并启用IP转发，按照[第6章](ch06.html "第6章。攻击访问点和基础设施")中描述的相同过程，*攻击访问点和基础设施*，来设置一个恶意AP。
- en: Kali Linux provides many tools to conduct MITM attacks, such as `arpspoof`,
    `dnsspoof`, `ettercap`, `burp suite`, `urlsnarf`, `driftnet`, and `webmitm`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux提供了许多用于进行中间人攻击的工具，如`arpspoof`、`dnsspoof`、`ettercap`、`burp suite`、`urlsnarf`、`driftnet`和`webmitm`。
- en: There is also an all-in-one graphical program for MITM attacks, which is already
    included in Kali Linux, **Ghost-phisher**.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux还提供了一个用于中间人攻击的全功能图形程序，名为**Ghost-phisher**。
- en: Ghost phisher
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ghost phisher
- en: Ghost phisher is a GUI program, written in Python, that offers various features
    to perform MITM attacks, including the setup of a honeypot AP and fake network
    services (HTTP, DNS, and DHCP), session hijacking, ARP poisoning, and password
    harvesting.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Ghost phisher是一个用Python编写的GUI程序，提供各种功能来执行中间人攻击，包括设置蜜罐AP和虚假网络服务（HTTP、DNS和DHCP）、会话劫持、ARP欺骗和密码收集。
- en: The program is easy and intuitive to use. To start it, we execute the ghost-phisher
    command in a terminal. The program window is divided into different tabs, each
    for a different feature, and each tab includes a configuration section on the
    top and a status section at the bottom.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序易于使用且直观。要启动它，我们在终端中执行ghost-phisher命令。程序窗口分为不同的选项卡，每个选项卡用于不同的功能，并且每个选项卡包括顶部的配置部分和底部的状态部分。
- en: 'To perform a MITM attack, we can execute the following steps:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行中间人攻击，我们可以执行以下步骤：
- en: The first tab window is relative to the fake AP setup. In the **Wireless Interface**
    section, we can select the interface we want to use and then put it in monitor
    mode by clicking on the **Set Monitor** button below:![Ghost phisher](img/B04527_07_06.jpg)
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个选项卡窗口与虚假AP设置有关。在**无线接口**部分，我们可以选择要使用的接口，然后通过单击下面的**设置监视器**按钮将其置于监视模式：![Ghost
    phisher](img/B04527_07_06.jpg)
- en: In the **Access Point Settings**, we assign the SSID, a valid private IP address
    (for example, 192.168.0.1), the channel and the type of encryption to the honeypot
    AP.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**访问点设置**中，我们为诱饵AP分配SSID、有效的私有IP地址（例如192.168.0.1）、信道和加密类型。
- en: 'Then we click on the **Start** button and the AP is running, as the **Status**
    pane shows us:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们单击**开始**按钮，AP正在运行，因为**状态**窗格向我们显示：
- en: '![Ghost phisher](img/B04527_07_07.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![Ghost phisher](img/B04527_07_07.jpg)'
- en: We then start the fake DHCP server with a class C network IP assignment range
    (in our case, 192.168.0.2 to 192.168.0.254), setting the IP of the AP (`192.168.0.1`)
    as the gateway and the fake DNS server. Thus, when a client connects to the AP,
    it is assigned an IP address in this range.![Ghost phisher](img/B04527_07_08.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们使用类C网络IP分配范围（在我们的情况下为192.168.0.2到192.168.0.254）启动虚假DHCP服务器，将AP（`192.168.0.1`）的IP设置为网关和虚假DNS服务器。因此，当客户端连接到AP时，它将被分配在此范围内的IP地址。![Ghost
    phisher](img/B04527_07_08.jpg)
- en: We set up a fake HTTP server, which we use to host a cloned page of a legitimate
    website on which the client intends to login, for example, to access his/her online
    bank account. In this case, we can specify the web page to display to the client
    when it visits a fictitious site `www.exampleonlinebank.com`:![Ghost phisher](img/B04527_07_09.jpg)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们设置了一个虚假的HTTP服务器，用于托管合法网站的克隆页面，客户端打算登录，例如，访问他/她的在线银行账户。在这种情况下，我们可以指定客户端访问虚构网站`www.exampleonlinebank.com`时要显示的网页：![Ghost
    phisher](img/B04527_07_09.jpg)
- en: Then, it is the time of the fake DNS server that resolves the client's queries
    for this particular domain to the IP address of our AP.![Ghost phisher](img/B04527_07_10.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，是虚假DNS服务器的时间，它将此特定域的客户端查询解析为我们AP的IP地址。![Ghost phisher](img/B04527_07_10.jpg)
- en: Clicking on the **Add** button, the IP address of the fake AP (`192.168.0.1`)
    is used to resolve the target domain `www.exampleonlinebank.com`. We could also
    add other target domains to be resolved to this IP address as well as to IP addresses
    of the attacker-controlled hosts.![Ghost phisher](img/B04527_07_11.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮，使用虚假AP（`192.168.0.1`）的IP地址来解析目标域`www.exampleonlinebank.com`。我们还可以将其他目标域名添加到此IP地址以及攻击者控制的主机的IP地址进行解析。![Ghost
    phisher](img/B04527_07_11.jpg)
- en: When the client connects to the preceding website, it is presented with a fake
    login page, that resembles the one on the legitimate site:![Ghost phisher](img/B04527_07_12.jpg)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当客户端连接到上述网站时，它会看到一个伪造的登录页面，类似于合法网站上的页面：![Ghost phisher](img/B04527_07_12.jpg)
- en: The credentials entered by the user are grabbed by the fake HTTP server and
    displayed in the **Harvested Credentials** tab window, as we can see in the following
    screenshot:![Ghost phisher](img/B04527_07_13.jpg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户输入的凭证被虚假HTTP服务器抓取，并显示在**收集的凭证**选项卡窗口中，如下面的屏幕截图所示：![Ghost phisher](img/B04527_07_13.jpg)
- en: The harvested credentials are stored in a SQLite database under `/usr/share/ghost-phisher/Ghost-Phisher-Database`.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 收集的凭证存储在SQLite数据库中，位于`/usr/share/ghost-phisher/Ghost-Phisher-Database`下。
- en: Another example for this attack could be to set up a fake authentication page
    for the real AP web administration panel, so that a network administrator that
    connects to the fake AP is redirected to this page and reveals the authentication
    credentials.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击的另一个例子可能是为真实AP的Web管理面板设置一个虚假的身份验证页面，以便连接到虚假AP的网络管理员被重定向到此页面并透露身份验证凭据。
- en: It is worth underlining that these attacks, as well as all the attacks described
    in the book, are illegal, if conducted without the written and explicit permission
    by the owner(s) of the network!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 值得强调的是，这些攻击以及书中描述的所有攻击，如果未经网络所有者的书面和明确许可，都是非法的！
- en: The Caffe Latte attack
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Caffe Latte攻击
- en: In [Chapter 4](ch04.html "Chapter 4. WEP Cracking"), *WEP Cracking*, we covered
    how to crack the WEP keys when the client is connected to the AP, injecting ARP
    request packets and capturing the generated traffic to collect a consistent number
    of IVs and then launching a statistical attack to crack the key.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章。WEP破解")中，*WEP破解*，我们介绍了当客户端连接到AP时如何破解WEP密钥，注入ARP请求数据包并捕获生成的流量以收集一致数量的IV，然后发起统计攻击来破解密钥。
- en: Two wireless security researchers, Vivek Ramachandran and MD Sohail Ahmad, presented
    a new attack called **Caffe Latte** at the Toorcon 2007 conference that allows
    you to retrieve the WEP key from a client even when it is not connected and it
    is distant from the network.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 两位无线安全研究人员Vivek Ramachandran和MD Sohail Ahmad在Toorcon 2007会议上提出了一种名为**Caffe Latte**的新攻击，允许您即使客户端未连接并且远离网络，也可以检索WEP密钥。
- en: The attack has been given this name because the authors demonstrated that the
    time required to complete it is (almost) as short as to take a cup of coffee in
    a coffee shop or in a restaurant (two classical locations for this kind of attack)!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击被命名为Caffe Latte，因为作者证明完成它所需的时间（几乎）与在咖啡店或餐厅喝一杯咖啡的时间一样短（这两个地方是这种攻击的经典场所）！
- en: To perform the attack, we must induce the isolated client to generate enough
    encrypted WEP data packets. Operating systems such as Windows cache the WEP shared
    keys along with the relative network details in the **Preferred Network List**
    (**PNL**) to automatically connect to such networks.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行攻击，我们必须诱使孤立的客户端生成足够的加密WEP数据包。诸如Windows之类的操作系统会将WEP共享密钥与相关网络详细信息一起缓存到**首选网络列表**（**PNL**）中，以便自动连接到这些网络。
- en: The client sends probe requests for the networks in its PNL. If we sniff these
    probe requests, we can determine the SSID of the network and set up a fake AP
    with the same SSID, sending back a probe response to the client. The client associates
    with this AP even if the latter does not know the key, as the WEP protocol does
    not expect the AP to authenticate to the client.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端发送对其PNL中网络的探测请求。如果我们嗅探这些探测请求，我们可以确定网络的SSID，并设置一个具有相同SSID的虚假AP，向客户端发送探测响应。即使后者不知道密钥，客户端也会与此AP关联，因为WEP协议不要求AP对客户端进行身份验证。
- en: Once the client is associated, it is assigned an IP address either statically
    or dynamically with DHCP. If a DHCP server is not present or fails to respond,
    Windows assigns the client an IP address from the 169.254.0.0/16 subnet range.
    The client begins to send some gratuitous ARP packets, which are obviously encrypted
    with the WEP key. To crack the key, we need to force the client to send these
    packets continuously, until we collect the necessary number (about 80,000 for
    the PTW attack). A technique to do so would be to de-authenticate the client repeatedly,
    but it would take quite a long time.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦客户端关联，它将被分配一个IP地址，可以是静态分配或通过DHCP动态分配。如果没有DHCP服务器或者服务器未能响应，Windows会为客户端分配一个来自169.254.0.0/16子网范围的IP地址。客户端开始发送一些伪造的ARP数据包，显然是使用WEP密钥加密的。为了破解密钥，我们需要强制客户端持续发送这些数据包，直到我们收集到足够数量的数据包（对于PTW攻击大约为80,000个）。一种做法是反复取消客户端的认证，但这需要相当长的时间。
- en: The Caffe Latte attack offers a more efficient solution capturing these gratuitous
    ARP packets and flipping the appropriate bits to modify the sender MAC and IP
    addresses, which are at fixed positions inside the packets.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Caffe Latte攻击提供了一个更有效的解决方案，捕获这些伪造的ARP数据包，并翻转适当的位以修改数据包中固定位置的发送者MAC和IP地址。
- en: The gratuitous ARPs are so transformed into ARP requests to be continuously
    sent back to the client. This is possible because the integrity of WEP packets
    is not cryptographically protected and the attacker can modify the payload and
    the CRC accordingly to create a still valid encrypted packet.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这些伪造的ARP数据包被转换为ARP请求，不断地发送回客户端。这是可能的，因为WEP数据包的完整性没有得到加密保护，攻击者可以修改有效载荷和CRC，从而创建一个仍然有效的加密数据包。
- en: In this way, the client will respond to these ARP requests and generate traffic
    quickly, speeding up the key cracking process. For more details on the Caffe Latte
    attack, refer to the links provided in [Appendix](apa.html "Appendix A. References"),
    *References*.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，客户端将响应这些ARP请求并快速生成流量，加快密钥破解过程。有关Caffe Latte攻击的更多细节，请参考[附录](apa.html "附录 A.
    参考资料")中提供的链接，*参考资料*。
- en: Now that we have seen the theory of the attack, we can take a look at how to
    realize it with the aircrack-ng suite, specifically with airbase-ng.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了攻击的理论，我们可以看看如何使用aircrack-ng套件来实现它，特别是使用airbase-ng。
- en: 'We put our interface in monitor mode and run `airodump-ng mon0` to detect probe
    requests for networks that are not in range. We can see these probes in the lower-right
    part of the airodump-ng output:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将接口设置为监视模式，并运行`airodump-ng mon0`来检测不在范围内的网络的探测请求。我们可以在airodump-ng输出的右下部分看到这些探测请求：
- en: '![The Caffe Latte attack](img/B04527_07_14.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![Caffe Latte攻击](img/B04527_07_14.jpg)'
- en: 'Once the target network SSID is identified, we set up a fake AP with the same
    SSID using the following command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦目标网络的SSID被识别出来，我们就使用以下命令设置一个具有相同SSID的虚假AP：
- en: '[PRE3]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here, the `-L` option is for the Caffe Latte attack, `-W 1` allows us to specify
    the WEP protocol in the beacon frames, and `-F` writes the captured packets to
    the specified file.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`-L`选项是用于Caffe Latte攻击，`-W 1`允许我们在信标帧中指定WEP协议，`-F`将捕获的数据包写入指定的文件。
- en: When the client connects to the fake AP and begins sending the gratuitous ARPs,
    airbase-ng starts the Caffe Latte attack.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户端连接到虚假AP并开始发送伪造的ARP请求时，airbase-ng启动Caffe Latte攻击。
- en: '![The Caffe Latte attack](img/B04527_07_15.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![Caffe Latte攻击](img/B04527_07_15.jpg)'
- en: 'When we have collected a sufficient number of packets, we can run aircrack-ng
    to crack the WEP key:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们收集到足够数量的数据包时，我们可以运行aircrack-ng来破解WEP密钥：
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: An optimization of the Caffe Latte attack has been developed, the Hirte attack.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Caffe Latte攻击的一个优化方案已经开发出来，即Hirte攻击。
- en: The Hirte attack
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hirte攻击
- en: The Hirte attack extends the Caffe Latte attack in the sense that it also allows
    the use of any IP packets and not only of gratuitous ARP packets received from
    the client.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Hirte攻击扩展了Caffe Latte攻击，因为它还允许使用任何IP数据包，而不仅仅是从客户端收到的伪造ARP数据包。
- en: By bit-flipping these packets, we generate the ARP requests to send back to
    the client and then perform the attack. Another difference with Caffe Latte is
    that Hirte also uses packet fragmentation to send ARP requests to the client.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 通过位翻转这些数据包，我们生成ARP请求发送回客户端，然后执行攻击。与Caffe Latte的另一个不同之处在于，Hirte还使用数据包分片将ARP请求发送到客户端。
- en: More technical details about this attack can be found on the Aircrack-ng Wiki
    at [http://www.aircrack-ng.org/doku.php?id=hirte](http://www.aircrack-ng.org/doku.php?id=hirte).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这次攻击的更多技术细节可以在Aircrack-ng Wiki上找到，网址为[http://www.aircrack-ng.org/doku.php?id=hirte](http://www.aircrack-ng.org/doku.php?id=hirte)。
- en: 'In practice, launching the Hirte attack is almost identical to launching the
    Caffe Latte attack; the only difference is the use of the `-N` option, specific
    for this attack, instead of the `-L` option:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，启动Hirte攻击几乎与启动Caffe Latte攻击相同；唯一的区别是使用特定于此攻击的`-N`选项，而不是`-L`选项：
- en: '[PRE5]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![The Hirte attack](img/B04527_07_16.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![Hirte攻击](img/B04527_07_16.jpg)'
- en: For those who prefer using a graphical, automated tool, both the Caffe Latte
    and Hirte attacks can be performed with Fern WiFi Cracker, which we have already
    covered in [Chapter 4](ch04.html "Chapter 4. WEP Cracking"), *WEP Cracking*.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些更喜欢使用图形化、自动化工具的人，Caffe Latte和Hirte攻击都可以使用Fern WiFi Cracker来执行，我们在[第4章](ch04.html
    "第4章 WEP破解")中已经介绍过了。
- en: These attacks represent one more reason (if needed) to stop using the WEP protocol
    and adopt WPA2, although the latter may be subject to a similar kind of attack.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这些攻击代表了停止使用WEP协议并采用WPA2的另一个理由（如果需要的话），尽管后者可能会受到类似的攻击。
- en: Cracking WPA keys without the AP
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在没有AP的情况下破解WPA密钥
- en: The Caffe Latte and Hirte attacks allow us to crack the WEP key in the absence
    of the target AP, attacking the disconnected client.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Caffe Latte和Hirte攻击允许我们在没有目标AP的情况下破解WEP密钥，攻击断开连接的客户端。
- en: In this section, we will see that it is also possible to crack a WPA key, being
    in this situation.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到即使在这种情况下，破解WPA密钥也是可能的。
- en: 'Recall from [Chapter 5](ch05.html "Chapter 5. WPA/WPA2 Cracking"), *WPA/WPA2
    Cracking*, that to crack a WPA key, we must capture a WPA four-way handshake to
    retrieve all the required parameters to run the cracking process: the A-nonce,
    the S-nonce, the client, the AP MAC addresses, and the **MIC** (**Message Integrity
    Check**).'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下[第5章](ch05.html "第5章 WPA/WPA2破解")中提到，要破解WPA密钥，我们必须捕获WPA四路握手以检索运行破解过程所需的所有参数：A-nonce、S-nonce、客户端、AP
    MAC地址和MIC（消息完整性检查）。
- en: 'It is worth noting that it is not necessary to complete the four-way handshake,
    as all these parameters are exchanged in the first two packets and the AP does
    not need to know the preshared key, as we can see in the following diagram:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，不需要完成四路握手，因为所有这些参数在前两个数据包中交换，AP不需要知道预共享密钥，如下图所示：
- en: '![Cracking WPA keys without the AP](img/B04527_07_17.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![在没有AP的情况下破解WPA密钥](img/B04527_07_17.jpg)'
- en: 'Therefore, we can set up a honeypot AP with the WPA protocol and the same SSID
    of the target network with the following command:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以使用以下命令设置一个带有WPA协议和目标网络相同SSID的蜜罐AP：
- en: '[PRE6]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here, the `-z` option stands for WPA and the value `2` for TKIP encryption.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`-z`选项代表WPA，值`2`代表TKIP加密。
- en: 'If we wanted to set up a WPA2-CCMP AP, the command would have been the following:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想设置一个WPA2-CCMP AP，命令将如下所示：
- en: '[PRE7]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In fact, the `-Z` option means WPA2 and `4` the CCMP encryption.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，`-Z`选项表示WPA2，`4`表示CCMP加密。
- en: After having collected the handshake parameters, we follow the same procedure
    described in [Chapter 5](ch05.html "Chapter 5. WPA/WPA2 Cracking"), *WPA/WPA2
    Cracking*, to crack the key with aircrack-ng.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 收集了握手参数后，我们按照[第5章](ch05.html "第5章 WPA/WPA2破解")中描述的相同步骤，使用aircrack-ng来破解密钥。
- en: Clearly, this attack offers one more chance to crack a WPA key, since it is
    targeted to isolated clients and does not need to capture a real four-way handshake
    with the AP.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这种攻击提供了另一种破解WPA密钥的机会，因为它针对孤立的客户端，并且不需要捕获与AP的真实四路握手。
- en: Cracking a WPA key is not usually as easy as cracking a WEP key but could become
    simple if a weak preshared key is used; hence, the necessity to use a strong WPA
    key!
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 破解WPA密钥通常不像破解WEP密钥那么容易，但如果使用弱预共享密钥，可能会变得简单；因此，有必要使用强大的WPA密钥！
- en: Summary
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have analyzed the most common attacks against wireless clients,
    covered how to set up a honeypot AP that impersonates a legitimate one and induces
    the clients to connect to it (Evil Twin attack). We have also covered the MITM
    attacks against connected clients and the attacks to recover the WPA and WEP keys
    (Caffe Latte and Hirte attacks) when the client is isolated from the network.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们分析了针对无线客户端的最常见攻击，介绍了如何设置一个冒充合法AP并诱使客户端连接的蜜罐AP（恶意双胞胎攻击）。我们还介绍了针对连接的客户端的MITM攻击以及在客户端与网络隔离时恢复WPA和WEP密钥的攻击（Caffe
    Latte和Hirte攻击）。
- en: The next chapter will cover the reporting phase, which will show how to write
    smart and effective reports of our penetration test.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将涵盖报告阶段，展示如何撰写智能有效的渗透测试报告。
