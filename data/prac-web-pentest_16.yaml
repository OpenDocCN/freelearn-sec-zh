- en: Python Quick Reference
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python快速参考
- en: 'This appendix contains a quick overview of the amazing programming language,
    Python. This reference will contain the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录包含了对这门神奇编程语言Python的快速概述。此参考将包含以下内容：
- en: Basics of using Python language
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Python语言的基础
- en: Operators in Python
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python中的运算符
- en: How to make a condition statement in Python
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在Python中创建条件语句
- en: Python variable types
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python变量类型
- en: Handling files and much more
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理文件等更多内容
- en: Quick Python language overview
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python语言概述
- en: It's time to start learning Python. I included this section in the book for
    two reasons. The first is that I want you to use it as a reference for when you
    develop your Python scripts in the future. The second reason is that I want to
    refresh your memory about this amazing programming language. It is important to
    note that I can't fit all the information about this programming language in an
    appendix, so I will include the most important elements of Python that will help
    you to achieve the most results in your career. You can enjoy learning and experimenting
    with the following examples using your Terminal window's Python interpreter—just
    type Python in your terminal window and you're ready to go.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是开始学习Python的时候了。我在书中加入这一节有两个原因。首先，我希望你在未来开发Python脚本时能作为参考。其次，我希望刷新你对这门神奇编程语言的记忆。需要注意的是，我无法将所有关于这门语言的信息都放在附录中，因此我会包括一些Python的最重要元素，帮助你在职业生涯中获得最大的成果。你可以通过在终端窗口的Python解释器中学习和尝试以下示例——只需在终端窗口中输入Python，你就可以开始了。
- en: Basics of Python
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python基础
- en: 'In this section, I will list all the basic operations that you need to be aware
    of when using the Python language:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我将列出使用Python语言时需要注意的所有基本操作：
- en: 'To run a Python file, execute the following in your Terminal window:'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要运行Python文件，请在终端窗口中执行以下命令：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can also use the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用以下运算符：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Before executing the preceding command, you will need to give it the permission
    to execute:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在执行上述命令之前，您需要授予其执行权限：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To add comments to your code in Python, use the following syntaxes:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Python中添加注释，可以使用以下语法：
- en: 'For a one-line comment use the `#` character, and use `"""` for a multiple-line
    comment :'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于单行注释，使用`#`字符，使用`"""`进行多行注释：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To organize your blocks in Python, remember to press *Tab* to insert a new
    block section underneath the semicolon character:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Python中组织你的代码块时，记得按*Tab*键，在分号字符下方插入新的代码块：
- en: In this example, we must create a new block underneath the `if` statement (exactly
    after the `:` character)
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这个例子中，我们必须在`if`语句下方创建一个新块（紧接着`:`字符之后）
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you want to go to a new line, use the backslash character, except for `[]`,
    `{}`, or `()`. For example:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要换行，请使用反斜杠字符，但`[]`、`{}`或`()`除外。例如：
- en: 'To combine three reports together, use the following:'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将三份报告合并在一起，请使用以下命令：
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To write a list of long IP addresses, use the following:'
  id: totrans-26
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要写一个长IP地址的列表，请使用以下格式：
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To import other external libraries to use their functionalities, use the `import`
    keyword:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要导入其他外部库以使用其功能，请使用`import`关键字：
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To print a message to the console output, use the `print` function:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要打印信息到控制台输出，请使用`print`函数：
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To accept user input from the Terminal window, use the `raw_input` function:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要从终端窗口接受用户输入，请使用`raw_input`函数：
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Null objects in Python are represented by the `None` keyword:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python中的空对象用`None`关键字表示：
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Operators
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运算符
- en: 'There are so many types of operators that exist in the Python programming language.
    What is an operator? A simple example is the `==` operator, which is used by the
    `if` condition statement (for example, `if` `x==1`). In general, operators come
    under the following categories:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Python编程语言中有许多不同类型的运算符。什么是运算符？一个简单的例子是`==`运算符，它被`if`条件语句使用（例如，`if` `x==1`）。一般来说，运算符可分为以下几类：
- en: Arithmetic calculation operators
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 算术运算符
- en: '| Operator | Description | Example |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 运算符  | 描述  | 示例  |'
- en: '| `+` | **Adds** values | `x + y + z = 5` |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `+`  | **加法** 运算 | `x + y + z = 5` |'
- en: '| `-`  | **Subtracts** values | `num1 – num2 = 3` |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `-`  | **减法** 运算 | `num1 – num2 = 3` |'
- en: '| `*`  | **Multiplies** values | `x * y = 9` |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `*`  | **乘法** 运算 | `x * y = 9` |'
- en: '| `/`  | **Divides** the left operand by the right operand | `b / a = 3` |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `/`  | **除法** 运算，左操作数除以右操作数 | `b / a = 3` |'
- en: '| `%` | **Divides** the left operand by the right operand and returns the **remainder**
    | `x % a = 0` |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `%`  | **除法** 运算，左操作数除以右操作数并返回**余数** | `x % a = 0` |'
- en: '| `**`  | **Performs an exponential** **(power) calculation** on operators
    | `a**b =9 ` |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `**`  | **对操作数执行指数（幂）运算** | `a**b =9` |'
- en: Assignment operators
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 赋值运算符
- en: '| Operator | Description | Example |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| Operator  | Description  | Example |'
- en: '| `=` | **Assigns** values | `x=y` |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| `=`  | **赋值**运算符 | `x=y` |'
- en: '| `+=`  | **Adds** the right operand to the left operand and assigns the result
    to the left operand | `x +=y` (same as `x = x+y`) |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `+=`  | **将右操作数加到左操作数**并将结果赋值给左操作数 | `x +=y`（等同于 `x = x + y`） |'
- en: '| `-=`  | **Subtracts** the right operand from the left operand and assigns
    the result to the left operand | `y -=x` (same as `y=y-x`) |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `-=`  | **从左操作数中减去**右操作数并将结果赋值给左操作数 | `y -=x`（等同于 `y=y-x`） |'
- en: '| `*=`  | **Multiplies** the right operand by the left operand and assigns
    the result to the left operand | `x *= a` (same as `x = x * a`) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `*=`  | **将右操作数与左操作数相乘**并将结果赋值给左操作数 | `x *= a`（等同于 `x = x * a`） |'
- en: '| `/=`  | **Divides** the left operand by the right operand and assigns the
    result to the left operand | `x /= a` (same as `x = x / ax`)  |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `/=`  | **将左操作数除以右操作数**并将结果赋值给左操作数 | `x /= a`（等同于 `x = x / a`） |'
- en: '| `%=`  | **Performs a modulus** on operators and assigns the result to the
    left operand | `x %= a` (same as `x = x % a`) |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `%=`  | 对操作数执行**取余**运算并将结果赋值给左操作数 | `x %= a`（等同于 `x = x % a`） |'
- en: '| `**=`  | **Performs an exponential (power) calculation** on operators and
    assigns the result to the left operand | `x **= a` (same as `x = x ** a`) |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `**=`  | 对操作数执行**指数（幂）运算**并将结果赋值给左操作数 | `x **= a`（等同于 `x = x ** a`） |'
- en: Comparison operators
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较运算符
- en: '| Operator | Description | Example |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| Operator  | Description  | Example |'
- en: '| `==` | If the two operands are **equal**, then the condition becomes true
    | `x==y` |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `==`  | 如果两个操作数**相等**，则条件为真 | `x==y` |'
- en: '| `!= or <>` | If the two operands are **not equal**, then the condition becomes
    true | `x!=y` |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `!= or <>`  | 如果两个操作数**不相等**，则条件为真 | `x!=y` |'
- en: '| `>` | If the left operand is **greater** than the value of the right operand,
    then the condition becomes true | `x>y` |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `>`  | 如果左操作数**大于**右操作数的值，则条件为真 | `x>y` |'
- en: '| `<` | If the left operand is **less** than the value of the right operand,
    then the condition becomes true | `x<y` |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `<`  | 如果左操作数**小于**右操作数的值，则条件为真 | `x<y` |'
- en: '| `>=` | If the left operand is **greater than or equal** to the value of the
    right operand, then the condition becomes true | `x>=y` |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `>=`  | 如果左操作数**大于或等于**右操作数的值，则条件为真 | `x>=y` |'
- en: '| `<=` | If the value of the left operand is **less than or equal** to the
    value of the right operand, then the condition becomes true | `x<= y` |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `<=`  | 如果左操作数的值**小于或等于**右操作数的值，则条件为真 | `x<= y` |'
- en: Membership and identity operators
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成员和身份运算符
- en: '| Operator | Description | Example |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| Operator  | Description  | Example |'
- en: '| `in` | Evaluates to true if it is a variable in the specified sequence |
    `if ''tcp'' in results:` |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `in`  | 如果变量在指定序列中，则返回true | `if ''tcp'' in results:` |'
- en: '| `not in` | Evaluates to false if it is a variable in the specified sequence
    | `if not ''http'' in results:` |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `not in`  | 如果变量不在指定的序列中，则返回false | `if not ''http'' in results:` |'
- en: '| `is` | Evaluates to true if the variables on either side of the operator
    are equal |  `if results is None:` |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `is`  | 如果运算符两边的变量相等，则返回true | `if results is None:` |'
- en: '| `is not` | Evaluates to true if the variables on either side of the operator
    are not equal | `if results is not None:` |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `is not`  | 如果运算符两边的变量不相等，则返回true | `if results is not None:` |'
- en: Binary operators
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 二元运算符
- en: '| Operator | Description | Example |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| Operator  | Description  | Example |'
- en: '| `&`  | **AND** operator checks whether the result exists in both operands
    | `1&1 = 1 ` |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `&`  | **AND** 运算符检查结果是否同时存在于两个操作数中 | `1&1 = 1` |'
- en: '| `&#124;` | **OR** operator checks whether the result exists in either operand
    | `0&#124;1=1` |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `&#124;`  | **OR** 运算符检查结果是否存在于任一操作数中 | `0&#124;1=1` |'
- en: '| `^` | **XOR** operator checks whether the result exists in one operand but
    not both | `0^1=1` |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `^`  | **XOR** 运算符检查结果是否存在于某一个操作数中但不在两个操作数中 | `0^1=1` |'
- en: '| `~` | **NOT** operator refers to the opposite bit | `~0=1` |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `~`  | **NOT** 运算符表示反向位 | `~0=1` |'
- en: Making an if decision
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做出if判断
- en: '| Operator | Description | Example |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| Operator  | Description  | Example |'
- en: '| `if` | Makes a decision based on the operands | `if service == 80: print
    ''HTTP''` |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `if`  | 基于操作数做出决策 | `if service == 80: print ''HTTP''` |'
- en: '| `if-else` | Takes a different action after an `if` decision | `if service
    == 80:``    print ''HTTP''``else:``    print ''Not HTTP''` |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `if-else`  | 在`if`判断之后采取不同的操作 | `if service == 80:``    print ''HTTP''``else:``    print
    ''Not HTTP''` |'
- en: '| `if-elif` | Makes multiple sequential decisions | `if service == 80:``   
    print ''HTTP''``elif service == 443:``    print ''TLS''``else:``    print ''Not
    HTTP or TLS''` |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `if-elif` | 做出多个顺序决策 | `if service == 80:``    print ''HTTP''``elif service
    == 443:``    print ''TLS''``else:``    print ''Not HTTP or TLS''` |'
- en: Variables
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 变量
- en: Variables are used in Python and in other programming languages to store temporary
    values in memory in order to reuse them in multiple places in the source code.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 变量用于 Python 和其他编程语言中，用于在内存中存储临时值，以便在源代码中多个地方重用它们。
- en: 'We have various types of variables in Python, as shown in the following list:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，我们有各种类型的变量，如下所示：
- en: Strings
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串
- en: Numbers
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字
- en: Lists
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表
- en: Dictionaries
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典
- en: Tuples
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组
- en: 'At any stage in your source code, you can cast from one variable to another
    using the following **type casting** syntaxes:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在源代码的任何阶段，你都可以使用以下**类型转换**语法从一个变量转换到另一个变量：
- en: '[PRE11]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Strings
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字符串
- en: 'Use the string variable type when you want to store a set of characters into
    that variable:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想将一组字符存储到变量中时，使用字符串变量类型：
- en: 'You can use the string variable type as shown in the following example:'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以像以下示例一样使用字符串变量类型：
- en: '[PRE12]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'To concatenate two string variables together, use the `+` sign:'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将两个字符串变量连接在一起，使用`+`符号：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To format a string using the `%` operator, do the following:'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用`%`运算符格式化字符串，请执行以下操作：
- en: '[PRE14]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can use the following formatters:'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用以下格式化程序：
- en: '`%s`: String'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%s`：字符串'
- en: '`%d`: Integer number'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%d`：整数'
- en: '`%f`: Float number'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%f`：浮动数'
- en: '`%x`: Hexadecimal number'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%x`：十六进制数字'
- en: Escape String Characters
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转义字符串字符
- en: '| Backslash notation | Hexadecimal character | Description |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 反斜杠符号 | 十六进制字符 | 描述 |'
- en: '| `\a` | 0x07 | Bell or alert |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `\a` | 0x07 | 响铃或警报 |'
- en: '| `\b` | 0x08 | Backspace |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `\b` | 0x08 | 退格符 |'
- en: '| `\e` | 0x1b | Escape |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `\e` | 0x1b | 转义符 |'
- en: '| `\f` | 0x0c | Formfeed |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| `\f` | 0x0c | 换页符 |'
- en: '| `\n` | 0x0a | Newline |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| `\n` | 0x0a | 换行符 |'
- en: '| `\r` | 0x0d | Carriage return |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| `\r` | 0x0d | 回车符 |'
- en: '| `\s` | 0x20 | Space |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| `\s` | 0x20 | 空格 |'
- en: '| `\t` | 0x09 | Tab |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| `\t` | 0x09 | 制表符 |'
- en: 'To remove trailing and leading white spaces from a string, include a white
    space before the `Welcome` and a leading space after the `Python`:'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要去除字符串中的前后空格，在`Welcome`前加一个空格，在`Python`后加一个空格：
- en: '[PRE15]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To get the length of a string, do the following:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要获取字符串的长度，请执行以下操作：
- en: '[PRE16]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To split a string and return the value in a list, do the following:'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要分割字符串并返回一个列表中的值，请执行以下操作：
- en: '[PRE17]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Numbers
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数字
- en: 'The following is a list of the most common numerical types that Python supports:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Python 支持的最常见数字类型的列表：
- en: '**int**: These are sometimes called integers, and they are positive or negative
    whole numbers with no decimal point (for example, 11).'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**int**：这些有时被称为整数，它们是没有小数点的正数或负数（例如，11）。'
- en: '**long** (**long integers**): These are integers of unlimited size, written
    like integers and followed by an uppercase or lowercase L (for example, 788739888999L).'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**long**（**长整数**）：这些是没有大小限制的整数，写法与整数相同，后面跟大写或小写字母L（例如，788739888999L）。'
- en: '**float** (**floating points**): These represent real numbers, and are written
    with a decimal point (99.9999). Floats are sometimes used in scientific notation,
    with E or e indicating the power of 10 (2e2 = 2 x 10²).'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**float**（**浮点数**）：这些表示实数，写作带有小数点的数字（99.9999）。浮点数有时以科学记数法表示，使用E或e表示10的幂（2e2
    = 2 x 10²）。'
- en: 'To get the maximum or minimum of two numbers, do the following:'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要获取两个数字中的最大值或最小值，请执行以下操作：
- en: '[PRE18]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To generate a random number from a range, do the following:'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要从一个范围中生成随机数，请执行以下操作：
- en: '[PRE19]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Lists
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列表
- en: 'A list is a collection of items (for example, strings, numbers, objects, and
    so on). In other programming languages, it''s called an array. Now, should you
    hear that word in the future, you''ll know that it means a list in Python:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 列表是一个包含项的集合（例如，字符串、数字、对象等）。在其他编程语言中，它被称为数组。现在，如果你将来听到这个词，你会知道它在 Python 中意味着列表：
- en: 'Here is an example of a list:'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个列表的示例：
- en: '[PRE20]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To add a new item to the list, use the `append` function:'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要向列表中添加新项，使用`append`函数：
- en: '[PRE21]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'To access each item in the list, use its index number. For example:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要访问列表中的每一项，使用其索引号。例如：
- en: '[PRE22]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To change an item in a list, just use its index and assign it a new value.
    For example:'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要更改列表中的一项，只需使用其索引并为其赋予新值。例如：
- en: '[PRE23]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To delete an item from the list, do the following:'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要从列表中删除一项，请执行以下操作：
- en: '[PRE24]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'To get the length of a list, use the `len` function. For example:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要获取列表的长度，使用`len`函数。例如：
- en: '[PRE25]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Tuples
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 元组
- en: 'Tuples are similar to lists, but they''re read only. I rarely use them, but
    they exist in Python, and you need to be aware of their existence:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 元组类似于列表，但它们是只读的。我很少使用它们，但它们存在于 Python 中，你需要知道它们的存在：
- en: 'To declare a tuple variable, do the following:'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要声明一个元组变量，请执行以下操作：
- en: '[PRE26]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To access an item in a tuple, use its index number. For example:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要访问元组中的项目，使用其索引号。例如：
- en: '[PRE27]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To get the length of a tuple, use the `len` function. For example:'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要获取元组的长度，使用 `len` 函数。例如：
- en: '[PRE28]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Dictionary
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字典
- en: 'A dictionary is a list of items with key and value pairs. The best way to describe
    it is by using examples. Let''s start:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 字典是一个包含键值对的项目列表。最好的描述方式是通过示例来说明。我们开始吧：
- en: 'To declare a key–value pair of the host and IP, enter the following (for example):'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要声明主机和 IP 的键值对，请输入以下内容（例如）：
- en: '[PRE29]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'To add a new item to a dictionary, do the following:'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要向字典添加新项目，请执行以下操作：
- en: '[PRE30]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'To update an existing item in a dictionary, do the following:'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要更新字典中的现有项目，请执行以下操作：
- en: '[PRE31]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'To delete an existing item in a dictionary, do the following:'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要删除字典中的现有项目，请执行以下操作：
- en: '[PRE32]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To iterate through a dictionary, do the following:'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要遍历字典，请执行以下操作：
- en: '[PRE33]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Miscellaneous
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 杂项
- en: 'To create a **function**, use the `def` keyword, followed by the function name,
    some optional variables, and the `:` character at the end.  For example:'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要创建一个**函数**，使用 `def` 关键字，后跟函数名称、一些可选变量，以及末尾的 `:` 字符。例如：
- en: '[PRE34]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'To create a `for` loop, do the following:'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要创建一个 `for` 循环，请执行以下操作：
- en: '[PRE35]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The following is a sample custom `class` object in Python:'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是 Python 中的一个示例自定义 `class` 对象：
- en: '[PRE36]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'To manage errors using exceptions in Python, do the following:'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在 Python 中使用异常管理错误，请执行以下操作：
- en: '[PRE37]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'To open and read a text file, do the following:'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要打开并读取文本文件，请执行以下操作：
- en: '[PRE38]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To write to a file, do the following:'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要写入文件，请执行以下操作：
- en: '[PRE39]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
