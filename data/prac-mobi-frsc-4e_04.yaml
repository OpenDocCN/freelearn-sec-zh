- en: Data Acquisition from iOS Devices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 iOS 设备获取数据
- en: An iOS device that's been recovered from a crime scene can be a rich source
    of evidence. Think about how personal a smartphone is to a user; nothing else
    that's digital comes close. We rarely leave our homes or even walk around outside
    them without our smartphones within arm's reach. It's literally a glimpse into
    the most personal aspects of a human, almost like a diary of our everyday activity.
    According to several news references, Oscar Pistorius' iPads were examined by
    a mobile expert and presented during his trial to show his internet activity hours
    before the death of his girlfriend. When an iOS device can provide access to a
    so-called *smoking gun*, you, as the examiner, must ensure that you know how to
    properly handle, acquire, and analyze the device.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 从犯罪现场恢复的 iOS 设备可能是一个丰富的证据来源。想想看，智能手机对用户来说有多个人化；没有任何其他数字设备能比得上这一点。我们很少在离开家或者走出家门时没有将智能手机放在触手可及的地方。它几乎像是我们日常活动的日记，深入窥视人类最私密的方面。根据多个新闻报道，奥斯卡·皮斯托瑞斯的
    iPad 被一名移动专家检查，并在他的审判中展示，显示他在女友去世前几小时的互联网活动。当 iOS 设备能够提供所谓的*铁证*时，作为检查员的你必须确保知道如何正确处理、采集和分析该设备。
- en: There are different ways to acquire forensic data from an iOS device. Though
    each method will have its pluses and minuses, the fundamental principle of any
    acquisition method is to obtain as much data as possible.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以从 iOS 设备获取取证数据。尽管每种方法都有其优缺点，但任何采集方法的基本原则都是尽可能获取更多的数据。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: iOS device operating modes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 设备操作模式
- en: Password protection and potential bypasses
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码保护和潜在的绕过方法
- en: Logical acquisition
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑采集
- en: Filesystem acquisition
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件系统采集
- en: Operating modes of iOS devices
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS 设备的操作模式
- en: Before we dive into forensic techniques and acquisition methods, it's important
    to know the different operating modes of an iOS device. Many forensic tools and
    methods require you to place the device in one of the operating modes. Understanding
    the iOS device's operating modes is required in order to perform a particular
    action on the device.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨取证技术和采集方法之前，了解 iOS 设备的不同操作模式非常重要。许多取证工具和方法要求将设备置于某一操作模式。理解 iOS 设备的操作模式是执行特定操作所必需的。
- en: 'While most commercial tools will demonstrate the proper steps to get the device
    in a particular mode, you must understand what that mode represents. iOS devices
    are capable of running in different operating modes: normal mode, recovery mode,
    and **Device Firmware Update** (**DFU**) mode. Some forensic tools require you
    to know which mode the device is currently utilizing. We will define each mode
    in this section.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管大多数商业工具会演示如何将设备置于某种特定模式，你必须理解该模式代表的含义。iOS 设备能够运行在不同的操作模式下：正常模式、恢复模式和 **设备固件更新**
    (**DFU**) 模式。一些取证工具要求你知道设备当前使用的是哪种模式。本节将定义每种模式。
- en: Note that when the term *iPhone* is mentioned, it should be understood that
    the statement remains true for all iOS devices.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当提到 *iPhone* 时，应理解该说法适用于所有 iOS 设备。
- en: Normal mode
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正常模式
- en: When an iPhone is switched on, its operating system is booted; this mode is
    known as normal mode. Most regular activities (calling, texting, and so on) that
    are performed on an iPhone will be run in normal mode.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当 iPhone 开机时，它的操作系统会启动；这种模式称为正常模式。大多数常规活动（如拨打电话、发短信等）都会在正常模式下进行。
- en: 'When an iPhone is turned on, internally, it goes through a *secure boot chain*,
    as shown in the following diagram. This does not occur for jailbroken devices.
    Each step in the boot-up process contains software components that are cryptographically
    signed by Apple to ensure integrity:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当 iPhone 开机时，内部会通过一个*安全启动链*，如下图所示。这在越狱设备上不会发生。启动过程中的每个步骤都包含由 Apple 加密签名的软件组件，以确保完整性：
- en: '![](img/c0a280cd-095e-427c-997b-87d5fd796bd5.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c0a280cd-095e-427c-997b-87d5fd796bd5.png)'
- en: A secure boot chain of an iPhone in normal mode
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 正常模式下 iPhone 的安全启动链
- en: '*The boot ROM, in turn, verifies whether the Low-Level Bootloader (LLB) is
    signed by Apple and loads it. The LLB is loaded and verified by the boot ROM,
    but this only occurs on devices with an A9 or earlier A-series processor'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*启动 ROM 反过来验证低级引导加载程序（LLB）是否经过 Apple 签名，并将其加载。LLB 由启动 ROM 加载并验证，但这只在配备 A9 或更早版本
    A 系列处理器的设备上发生。'
- en: 'The *boot ROM**,* known as the *secure ROM*, is **read-only memory** (**ROM**)
    and is the first significant piece of code that runs on an iPhone ([https://www.apple.com/business/docs/iOS_Security_Guide.pdf](https://www.apple.com/business/docs/iOS_Security_Guide.pdf)).
    An explanation of the boot process for iOS devices is defined in the following
    steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*启动 ROM*，也叫 *安全 ROM*，是 **只读内存**（**ROM**），是 iPhone 上运行的第一段重要代码（[https://www.apple.com/business/docs/iOS_Security_Guide.pdf](https://www.apple.com/business/docs/iOS_Security_Guide.pdf)）。iOS
    设备的启动过程定义在以下步骤中：'
- en: The boot ROM code contains the Apple root **certificate authority** (**CA**)
    public key, which is used to verify the signature of the next stage before allowing
    it to load.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 ROM 代码包含 Apple 根 **证书授权**（**CA**）公钥，用于验证下一阶段的签名，然后才允许其加载。
- en: When the iPhone is started, the application processor executes the code from
    the boot ROM.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 iPhone 启动时，应用处理器执行来自启动 ROM 的代码。
- en: The boot ROM, in turn, verifies whether the **Low-Level Bootloader** (**LLB**)
    is signed by Apple and loads it. The LLB is loaded and verified by the boot ROM,
    but this only occurs on devices with an A9 or earlier A-series processor.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 ROM 会验证 **低级引导加载程序**（**LLB**）是否由 Apple 签名并加载它。LLB 会被启动 ROM 加载并验证，但这只会在配备
    A9 或更早 A 系列处理器的设备上发生。
- en: When the LLB finishes its tasks, it verifies and loads the second-stage boot
    loader (iBoot). iBoot verifies and loads the iOS kernel.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 LLB 完成其任务时，它会验证并加载第二阶段引导加载程序（iBoot）。iBoot 会验证并加载 iOS 内核。
- en: The iOS kernel, in turn, verifies and runs all the user applications.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: iOS 内核会验证并运行所有用户应用程序。
- en: When an iOS device is in this state, it's possible to gain a part that is accessible
    to the user through forensic acquisition. Most often, this includes a logical
    acquisition, which will be discussed later in this chapter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当 iOS 设备处于此状态时，可以通过取证获取用户可访问的一部分内容。最常见的包括逻辑获取，稍后将在本章中讨论。
- en: Recovery mode
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恢复模式
- en: 'During the boot-up process, if one step is unable to load or verify the next
    step, then the boot-up is stopped and the iPhone displays the screen shown in
    the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，如果某一步无法加载或验证下一步，则启动会停止，iPhone 会显示以下屏幕：
- en: '![](img/e76ee9a8-c570-4b6a-a1b4-b8bf3a0dba6d.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e76ee9a8-c570-4b6a-a1b4-b8bf3a0dba6d.png)'
- en: iOS device recovery mode
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 设备恢复模式
- en: 'This mode is known as recovery mode and is required to perform upgrades or
    restore the iPhone. To enter recovery mode, perform the following steps:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此模式被称为恢复模式，并且在执行升级或恢复 iPhone 时是必需的。要进入恢复模式，请执行以下步骤：
- en: Turn off the device.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭设备。
- en: Hold down the iPhone Home button and connect the device to a computer via a
    USB cable. The device should turn on.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住 iPhone Home 按钮，并通过 USB 数据线将设备连接到计算机。设备应该会开启。
- en: Continue holding the Home button until the Connect to iTunes screen appears. Then,
    you can release the Home button (on a jailbroken iOS device, this screen may appear
    with different icons). Most forensic tools and extraction methods will alert you
    regarding the current state of the iOS device.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 持续按住 Home 按钮，直到出现连接到 iTunes 的屏幕。然后，可以释放 Home 按钮（在越狱的 iOS 设备上，此屏幕可能会显示不同的图标）。大多数取证工具和提取方法会提醒您当前
    iOS 设备的状态。
- en: To exit recovery mode, reboot the iPhone. On iPhone 6s and earlier, this can
    be completed by holding down the Home and Sleep/Power buttons until the Apple
    logo appears. On iPhone 7 and iPhone 7 Plus, this can be done by holding the Side
    button and Volume Down button together. On iPhone 8 and later, you do this by
    clicking the Volume Up button, then clicking the Volume Down button, and then
    holding down the Side button.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要退出恢复模式，请重新启动 iPhone。在 iPhone 6s 及更早版本上，可以通过同时按住 Home 按钮和睡眠/电源按钮，直到出现 Apple
    标志来完成。在 iPhone 7 和 iPhone 7 Plus 上，可以通过同时按住侧边按钮和音量下按钮来完成。对于 iPhone 8 及更新版本，您需要先按音量加按钮，再按音量减按钮，然后长按侧边按钮。
- en: You can read more about recovery mode on iOS devices at [https://support.apple.com/en-in/HT201263](https://support.apple.com/en-in/HT201263).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [https://support.apple.com/en-in/HT201263](https://support.apple.com/en-in/HT201263)
    阅读有关 iOS 设备恢复模式的更多信息。
- en: Normally, the process of rebooting returns the iPhone from recovery mode to
    normal mode. This same methodology applies to the Apple Watch. You may experience
    a situation where the iPhone constantly reboots into recovery mode. This is known
    as a recovery loop. A recovery loop may occur when the user or examiner attempts
    to jailbreak the iOS device and an error occurs. To get the device out of a recovery
    loop, the device must be connected to iTunes so that a backup can be restored
    to the device.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，重启过程会将 iPhone 从恢复模式恢复到正常模式。相同的方法适用于 Apple Watch。你可能会遇到 iPhone 不断重启到恢复模式的情况，这被称为恢复循环。当用户或检查员尝试越狱
    iOS 设备时，若发生错误，可能会出现恢复循环。要摆脱恢复循环，必须将设备连接到 iTunes，以便恢复备份到设备。
- en: This makes changes to the evidence, so ensure that you have validated your acquisition
    methods on a test device prior to attempting to use your methods on real evidence.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这会对证据造成更改，因此请确保在尝试使用这些方法处理真实证据之前，已在测试设备上验证过你的获取方法。
- en: DFU mode
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DFU 模式
- en: During the boot-up process, if the Boot ROM is unable to load or verify the
    LLB or iBoot (on newer devices), the iPhone enters **Device Firmware Upgrade**
    (**DFU**) mode. DFU mode is a low-level diagnostic mode and is designed to perform
    firmware upgrades for iPhones.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，如果 Boot ROM 无法加载或验证 LLB 或 iBoot（在较新的设备上），iPhone 将进入**设备固件升级**（**DFU**）模式。DFU
    模式是一个低级诊断模式，旨在为 iPhone 执行固件升级。
- en: 'To enter DFU mode, perform the following steps for iPhone 8 and later:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要进入 DFU 模式，请按照以下步骤操作适用于 iPhone 8 及更高版本：
- en: Connect the device to your workstation via a USB cable.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 USB 数据线将设备连接到工作站。
- en: Press the Volume Up button and quickly release it.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下音量加大按钮并迅速释放。
- en: Press the Volume Down button and quickly release it.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下音量减小按钮并迅速释放。
- en: Hold the Side button and press the Volume Down button again.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住侧边按钮，再次按音量减小按钮。
- en: After 5 seconds, release the Side button, but continue holding the Volume Down
    button until you see the Recovery screen.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5秒后，释放侧边按钮，但继续按住音量减小按钮，直到你看到恢复模式屏幕。
- en: 'Follow these steps for iPhone 7:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作适用于 iPhone 7：
- en: Connect the device to your workstation via a USB cable.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 USB 数据线将设备连接到工作站。
- en: At the same time, press and hold the Side and Volume Down buttons.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时按住侧边和音量减小按钮。
- en: Release the Side button, but continue to hold the Volume Down button until you
    see the Recovery screen.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 释放侧边按钮，但继续按住音量减小按钮，直到你看到恢复模式屏幕。
- en: 'Follow these steps for iPhone 6s and earlier:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤操作适用于 iPhone 6s 及更早版本：
- en: Connect the device to your workstation via a USB cable.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 USB 数据线将设备连接到工作站。
- en: At the same time, press and hold the Home and the Top (or Side) buttons.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时按住主屏和顶部（或侧边）按钮。
- en: Release the Top (or Side) button and continue holding the Home button.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 释放顶部（或侧边）按钮并继续按住主屏按钮。
- en: On iPhone 6s and earlier, nothing will be displayed on the screen when the device
    is in DFU mode.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 iPhone 6s 及更早版本，当设备处于 DFU 模式时，屏幕上不会显示任何内容。
- en: 'To verify whether the iPhone is in DFU mode on macOS, launch a System Reportand
    go to the USB option. You should see something similar to the following screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在 macOS 上验证 iPhone 是否处于 DFU 模式时，启动系统报告并转到 USB 选项。你应该能看到类似以下截图的内容：
- en: '![](img/653124b3-6f3d-4e98-a6de-4888459f9038.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/653124b3-6f3d-4e98-a6de-4888459f9038.png)'
- en: The MacBook system information displaying a device in DFU mode
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 显示 DFU 模式设备的 MacBook 系统信息
- en: Next, we will have a quick look at the tools that are required to set up the
    forensic environment.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将快速浏览设置取证环境所需的工具。
- en: Setting up the forensic environment
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置取证环境
- en: Nowadays, we have a few tools that can be used by mobile forensic examiners
    to acquire and analyze iOS devices using both macOS and Windows systems as the
    hosts. For example,* Elcomsoft iOS Forensic Toolkit* has both macOS and Windows
    versions; as for free and open source tools, the `libimobiledevice` library can
    be used – not only on macOS and Windows forensic workstations, but even on Linux!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，我们有一些工具可以供移动取证检查员使用，帮助在 macOS 和 Windows 系统主机上获取和分析 iOS 设备。例如，*Elcomsoft iOS
    Forensic Toolkit* 有 macOS 和 Windows 版本；至于免费和开源工具，`libimobiledevice` 库可以使用——不仅在
    macOS 和 Windows 的取证工作站上，甚至在 Linux 上也可以使用！
- en: We are going to introduce you to these tools with hands-on exercises, of course,
    including practical logical and filesystem acquisitions, and even jailbreaking,
    later in this chapter. But let's start with password protection and potential
    bypasses, since, without the passcode, we can't extract anything from a modern
    iOS device.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章后面介绍这些工具的使用，包括实践中的逻辑和文件系统获取，甚至越狱。但是让我们先从密码保护和可能的绕过方法开始，因为没有密码，我们无法从现代iOS设备中提取任何数据。
- en: Password protection and potential bypasses
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码保护和潜在绕过方法
- en: We want to start with the bad news: if you are examining an iPhone that runs
    iOS 8 or newer, and especially if it's a newer device, for example, the iPhone
    6s, your chances of unlocking it are not good at all.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们先从坏消息开始：如果你正在检查运行iOS 8或更高版本的iPhone，特别是如果是较新的设备，比如iPhone 6s，那么解锁的机会几乎为零。
- en: Of course, there are some hardware-based solutions, such as IP-BOX 3, but all
    of them work only occasionally, and using one of them can even result in bricking
    the device. With iOS 11, this problem becomes even more severe – even if the device
    under examination is not passcode protected, you will need the passcode anyway
    as it must be entered to confirm the trust between the device and your workstation.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，也有一些硬件解决方案，比如IP-BOX 3，但它们都只能偶尔奏效，使用这些工具甚至可能导致设备变砖。随着iOS 11的发布，这个问题变得更加严重——即使检查的设备没有密码保护，你仍然需要输入密码，因为必须输入密码来确认设备与工作站之间的信任关系。
- en: So, what should a mobile forensic examiner do? Use the lockdown files! The lockdown
    files, which are stored as a `plist` file on *trusted computers*, allow you to
    trick the device into believing it's unlocked or *trusted* on the forensic workstation.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，移动取证专家该怎么办呢？使用锁定文件！这些锁定文件以`plist`文件的形式存储在*受信任的计算机*上，允许你欺骗设备，让它认为在取证工作站上已被解锁或*信任*。
- en: 'The lockdown files are located in the following locations:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 锁定文件位于以下位置：
- en: '`/var/db/lockdown` on macOS'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS中的`/var/db/lockdown`
- en: '`C:\ProgramData\Apple\Lockdown` on Windows 7 and later releases'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 7及更高版本中的`C:\ProgramData\Apple\Lockdown`
- en: You must be aware that unlocking with a lockdown file only works if the device
    was unlocked with a passcode at least once after the last reboot.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须知道，只有设备在上次重启后至少一次通过密码解锁，才能通过锁定文件解锁设备。
- en: There are also some advanced techniques that exist. These include fingerprint
    molds to trick Touch ID, masks to trick Face ID, and NAND mirroring to bypass
    passcode entry limits.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些高级技术存在。包括通过指纹模具欺骗Touch ID、通过面具欺骗Face ID，以及通过NAND镜像绕过密码输入限制。
- en: The first technique was first demonstrated by Jason Chaikin. He demonstrated
    how to bypass Touch ID by lifting another person's fingerprint with common molding
    materials, such as dental mold and Play-Doh.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种技术最早由Jason Chaikin演示。他展示了如何通过用常见的模具材料（如牙科模具和橡皮泥）提取他人指纹，从而绕过Touch ID。
- en: The second technique was demonstrated as a proof of concept by the Vietnamese
    cybersecurity firm Bkav. They created a mask that can be used to trick the Face
    ID feature using a combination of three-dimensional printing, makeup, and two-dimensional
    images.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种技术由越南网络安全公司Bkav作为概念验证进行了演示。他们创建了一种面具，利用三维打印、化妆和二维图像的组合，可以欺骗Face ID功能。
- en: The last technique was demonstrated by Sergei Skorobogatov, a senior research
    associate at the Cambridge Computer Laboratory's Security Group. This technique
    allows you to bypass passcode entry limits by soldering off the iPhone's flash
    memory chip and cloning it. This technique should work on any iOS device up to
    iPhone 6s Plus.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一种技术由剑桥计算机实验室安全小组的高级研究员Sergei Skorobogatov演示。这项技术通过焊接掉iPhone的闪存芯片并克隆它，绕过了密码输入限制。这项技术应该适用于任何iOS设备，直到iPhone
    6s Plus。
- en: Logical acquisition
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 逻辑获取
- en: A logical acquisition captures a part of what is accessible to the user; in
    other words, what is included in an iTunes backup. It means that we won't get
    any deleted files, but, thanks to SQLite databases' free lists and unallocated
    space, we can recover deleted records, including SMS and other chats, browsing
    history, and so on. We will discuss recovering SQLite data and deleted artifacts
    in [Chapter 5](4f92f4a2-f8f9-4274-96eb-da9174fc6772.xhtml), *iOS Data Analysis
    and Recovery.*
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑获取捕获了用户可访问的部分内容；换句话说，就是包含在 iTunes 备份中的内容。这意味着我们无法获取任何已删除的文件，但得益于 SQLite 数据库的空闲列表和未分配空间，我们可以恢复已删除的记录，包括短信和其他聊天记录、浏览历史等。我们将在[第五章](4f92f4a2-f8f9-4274-96eb-da9174fc6772.xhtml)中讨论恢复
    SQLite 数据和已删除的证据，*iOS 数据分析与恢复*。
- en: Logical acquisition is the simplest way to ascertain whether the device is unlocked
    as it simply uses the built-in backup mechanism. Most tools and methods that support
    the logical acquisition of iOS devices will fail if the device is locked. Some
    think that if a physical image is captured, there is little to no need for a logical
    acquisition. However, not all data is parsed in a physical image, which is why
    having access to a logical image, which results in readable data, will assist
    you in digging deep into the physical image for artifacts to support your forensic
    investigation.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑获取是确认设备是否解锁的最简单方式，因为它只是使用内置的备份机制。大多数支持 iOS 设备逻辑获取的工具和方法，如果设备被锁定，都会失败。有些人认为，如果捕获了物理镜像，就几乎不需要进行逻辑获取。然而，并不是所有数据都会在物理镜像中解析出来，这就是为什么获取逻辑镜像、获得可读数据能帮助你深入物理镜像，从中提取支持法医调查的证据。
- en: Logical acquisition is the fastest, easiest, and cheapest way to gain access
    to data stored on an iOS device. There are a variety of tools, ranging from commercial
    to free, that are capable of capturing logical images. Most of these tools require
    that the device be unlocked, or access to the `plist` file from the host machine
    be readily available.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑获取是最快、最简单、最便宜的方式来获取存储在 iOS 设备上的数据。有各种工具，从商业工具到免费的工具，都能够捕获逻辑镜像。大多数这些工具要求设备已解锁，或者主机机器上可以轻松访问
    `plist` 文件。
- en: Practical logical acquisition with libimobiledevice
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 libimobiledevice 进行实际的逻辑获取
- en: Having the theory under your belt is good, but putting this into practice is
    much better. Let's create a logical image of an iPhone running iOS 13.2 with `libimobiledevice`,
    which should already be installed on your workstation, as we used it for device
    information gathering in the previous chapter.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 理论掌握好是好事，但将其付诸实践更为重要。让我们使用 `libimobiledevice` 创建一个运行 iOS 13.2 的 iPhone 的逻辑镜像，它应该已经安装在你的工作站上，因为我们在上一章中使用它来收集设备信息。
- en: 'OK, let''s start:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们开始：
- en: 'First of all, let''s make our backups encrypted. Connect the iOS device to
    your workstation and start the Command Prompt. Change the directory to the one
    containing `libimobiledevice` and type in the following command:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们使备份加密。将 iOS 设备连接到工作站并启动命令提示符。将目录更改为包含 `libimobiledevice` 的目录，并输入以下命令：
- en: '[PRE0]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you see Backup encryption has been enabled successfully, then you've done
    everything right and the backups will be encrypted. This will help you, the forensics
    examiner, to gain more information regarding users' passwords, Safari browsing
    history, and much more.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你看到“备份加密已成功启用”，那么你已经做对了，备份将会被加密。这将帮助你，作为法医检查员，获取更多关于用户密码、Safari 浏览历史等信息。
- en: 'It''s time to create the backup—our iOS device logical image. To do this, type
    in the following command:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是时候创建备份了——我们的 iOS 设备逻辑镜像。为此，请输入以下命令：
- en: '[PRE1]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'That''s it. You can see the logical imaging process in the following screenshot:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样。你可以在下面的截图中看到逻辑成像的过程：
- en: '![](img/8eb26ad2-4dd8-4db9-8f43-edc5f7f7ec0f.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8eb26ad2-4dd8-4db9-8f43-edc5f7f7ec0f.png)'
- en: iPhone logical imaging with libimobiledevice
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 libimobiledevice 进行 iPhone 逻辑成像
- en: Next, let's look at logical acquisition with the Belkasoft Acquisition Tool.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何使用 Belkasoft Acquisition Tool 进行逻辑获取。
- en: Practical logical acquisition with the Belkasoft Acquisition Tool
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Belkasoft Acquisition Tool 进行实际的逻辑获取
- en: Since logical acquisition is the most common option for modern iOS devices,
    we'll demonstrate how to use a few more free tools. The first one is the Belkasoft
    Acquisition Tool. This tool can be used not only for iOS device acquisition, but
    also for hard drives, and even cloud data.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 由于逻辑获取是现代 iOS 设备最常见的选项，我们将演示如何使用更多免费的工具。第一个工具是 Belkasoft Acquisition Tool。这个工具不仅可以用于
    iOS 设备获取，还可以用于硬盘，甚至是云数据。
- en: 'Let''s acquire an iPhone running iOS 13.2.3 using the Belkasoft Acquisition
    Tool:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Belkasoft Acquisition Tool获取一台运行iOS 13.2.3的iPhone：
- en: 'Launch the Belkasoft Acquisition Tool and choose the Mobile device option:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Belkasoft Acquisition Tool并选择移动设备选项：
- en: '![](img/ecc44deb-2c74-48a8-a99f-cd8f54f2b210.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ecc44deb-2c74-48a8-a99f-cd8f54f2b210.png)'
- en: Choosing the source
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 选择源
- en: 'In the next window, choose the Apple option:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个窗口中，选择Apple选项：
- en: '![](img/155f47fb-e14f-495e-b7a0-15458c26170d.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/155f47fb-e14f-495e-b7a0-15458c26170d.png)'
- en: Choosing the mobile type
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 选择移动类型
- en: 'Now, choose the acquisition method and the image path:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择获取方法和图像路径：
- en: '![](img/29aefeb1-0419-4b44-8286-768b480a10fa.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/29aefeb1-0419-4b44-8286-768b480a10fa.png)'
- en: Choosing the acquisition method
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 选择获取方法
- en: The tool is able to create an iTunes backup if the device isn't jailbroken and
    perform filesystem extraction if it is.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具能够在设备未越狱的情况下创建iTunes备份，在设备越狱的情况下执行文件系统提取。
- en: 'Wait for the task to finish successfully. You will find your device''s logical
    image in the folder you chose in the previous step:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待任务成功完成。你将找到设备的逻辑镜像文件，保存在你在上一步中选择的文件夹里：
- en: '![](img/db5d235f-d6a8-4255-8e6d-ac10d055f52e.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db5d235f-d6a8-4255-8e6d-ac10d055f52e.png)'
- en: Creating the backup
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 创建备份
- en: The backup can be analyzed both by Belkasoft Evidence Center and by many other
    mobile forensic tools.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 备份可以通过Belkasoft Evidence Center以及许多其他移动取证工具进行分析。
- en: Practical logical acquisition with Magnet ACQUIRE
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Magnet ACQUIRE进行实际的逻辑获取
- en: 'Another free tool capable of logical acquisition is **ACQUIRE** from Magnet
    Forensics. Let''s perform a logical acquisition again, this time using a device
    running iOS 12.2:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个免费工具，Magnet Forensics的**ACQUIRE**，也能进行逻辑获取。让我们再次进行逻辑获取，这次使用运行iOS 12.2的设备：
- en: 'Launch Magnet ACQUIRE and choose the device you want to image from the list:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Magnet ACQUIRE并从列表中选择你想要获取镜像的设备：
- en: '![](img/dd1fe238-1247-4534-9970-2ae71a92c6a0.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd1fe238-1247-4534-9970-2ae71a92c6a0.png)'
- en: Choosing the device
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 选择设备
- en: 'Choose the type of image you want to acquire. We want to acquire a logical
    image and our device is not jailbroken, so we are going to choose the Quick option:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你想要获取的图像类型。我们想要获取逻辑图像，并且我们的设备没有越狱，所以我们将选择Quick选项：
- en: '![](img/d166b841-324a-4737-a783-b36cc82d6b66.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d166b841-324a-4737-a783-b36cc82d6b66.png)'
- en: Choosing the image type
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 选择图像类型
- en: 'You can add a description of the evidence source if needed, and choose the
    folder where you want the image to be saved:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要，你可以添加证据源的描述，并选择你希望保存图像的文件夹：
- en: '![](img/3f8d9f8a-86c8-40ed-8bd2-df086b08afb5.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3f8d9f8a-86c8-40ed-8bd2-df086b08afb5.png)'
- en: Choosing the destination folder, image name, and image information
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 选择目标文件夹、图像名称和图像信息
- en: 'Wait for the tasks to finish successfully; you''ll see a summary of the acquisition
    process:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待任务成功完成；你将看到获取过程的总结：
- en: '![](img/11f2a674-f0b8-4a30-81f7-563be3b440f4.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/11f2a674-f0b8-4a30-81f7-563be3b440f4.png)'
- en: Creating the image
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 创建镜像
- en: All extracted data will be saved to the destination folder in a ZIP archive.
    Also, the destination folder will contain a TXT file with the acquisition's process
    log and image information.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 所有提取的数据将保存在目标文件夹中的ZIP归档文件中。此外，目标文件夹将包含一个TXT文件，其中包含获取过程的日志和图像信息。
- en: The next section will walk you through jailbreaking and filesystem acquisition.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分将指导你如何进行越狱和文件系统获取。
- en: Filesystem acquisition
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件系统获取
- en: Secure Enclave has brought new challenges to iOS forensic examiners. We can't
    extract the encryption keys that are required to decrypt the device image, so
    performing physical acquisition is useless. But there is filesystem acquisition.
    Unfortunately, in most cases, it requires the iOS device to be jailbroken. The
    next section will show you how to jailbreak an iPhone running iOS 11.4.1 with
    Electra and an iPhone running iOS 13.2 with Checkra1n.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Secure Enclave为iOS取证专家带来了新的挑战。我们无法提取解密设备镜像所需的加密密钥，因此执行物理获取是无效的。但仍有文件系统获取。遗憾的是，在大多数情况下，这需要iOS设备越狱。接下来的章节将向你展示如何使用Electra对运行iOS
    11.4.1的iPhone进行越狱，并使用Checkra1n对运行iOS 13.2的iPhone进行越狱。
- en: Practical jailbreaking
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际的越狱操作
- en: 'To perform filesystem acquisition, we need our iOS device to be jailbroken.
    The steps to jailbreak an iOS device running 11.4.1 are as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行文件系统获取，我们需要将iOS设备进行越狱。以下是越狱iOS 11.4.1设备的步骤：
- en: Download `Electra` from: [https://github.com/coolstar/electra-ipas/raw/master/Electra1141-1.3.2.ipa](https://github.com/coolstar/electra-ipas/raw/master/Electra1141-1.3.2.ipa).
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下链接下载`Electra`：[https://github.com/coolstar/electra-ipas/raw/master/Electra1141-1.3.2.ipa](https://github.com/coolstar/electra-ipas/raw/master/Electra1141-1.3.2.ipa)。
- en: 'Download `Cydia Impactor` ([http://www.cydiaimpactor.com/](http://www.cydiaimpactor.com/)),
    run it, and connect the device to your workstation:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载`Cydia Impactor`（[http://www.cydiaimpactor.com/](http://www.cydiaimpactor.com/)），运行它并将设备连接到你的工作站：
- en: '![](img/3a5e89f6-befb-4614-b972-5a33885ecc2a.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3a5e89f6-befb-4614-b972-5a33885ecc2a.png)'
- en: Running Cydia Impactor
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Cydia Impactor
- en: Drag and drop the `Electra IPA` file to the `Cydia Impactor` window.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`Electra IPA`文件拖放到`Cydia Impactor`窗口中。
- en: Type any Apple ID in the new window (you can register a new one for every device
    you examine).
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新窗口中输入任何 Apple ID（你可以为每个检查的设备注册一个新的 Apple ID）。
- en: Log on with this Apple ID to [https://appleid.apple.com/](https://appleid.apple.com/) and
    generate an app-specific password under the Security section. Paste this password
    into the next window. Wait for the process to finish.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用此 Apple ID 登录 [https://appleid.apple.com/](https://appleid.apple.com/) 并在安全部分生成一个应用专用密码。将此密码粘贴到下一个窗口中。等待过程完成。
- en: 'On the phone, go to Settings | General | Device Management | Apple ID and tap
    Trust:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在手机上，进入 设置 | 通用 | 设备管理 | Apple ID 并点击信任：
- en: '![](img/d529bb5c-bf6f-4e21-8ad2-1946a8cd8648.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d529bb5c-bf6f-4e21-8ad2-1946a8cd8648.png)'
- en: Verifying the developer
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 验证开发者
- en: Put the phone into Airplane mode, turn Siri off, and reboot the device.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将手机置于飞行模式，关闭 Siri，然后重启设备。
- en: 'Tap the Electra icon on the Springboard and then choose Jailbreak. If the process
    finishes successfully, you will find the Cydia icon on the Springboard:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主屏幕上点击 Electra 图标，然后选择越狱。如果过程成功完成，你将在主屏幕上看到 Cydia 图标：
- en: '![](img/611a08f6-bede-4da9-b57b-06bca3b79384.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/611a08f6-bede-4da9-b57b-06bca3b79384.png)'
- en: Jailbreaking the device
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 越狱设备
- en: Now, the phone is jailbroken and ready for filesystem acquisition.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，手机已经越狱，可以进行文件系统获取了。
- en: '`Checkra1n` is based on a bootrom vulnerability and exploit and supports a
    wide range of iOS devices, even those running the latest (at the time of writing)
    iOS 13.2\. Here are the steps to jailbreak an iOS device running 13.2:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`Checkra1n`基于 bootrom 漏洞和利用，支持广泛的 iOS 设备，甚至包括运行最新（截至写作时）的 iOS 13.2 的设备。以下是越狱运行
    13.2 的 iOS 设备的步骤：'
- en: Download `Checkra1n` from: [https://checkra.in/](https://checkra.in/).
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://checkra.in/](https://checkra.in/) 下载 `Checkra1n`。
- en: Run the application. At the time of writing, `Checkra1n` is only available for
    macOS.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行应用程序。写作时，`Checkra1n`仅适用于 macOS。
- en: 'Connect the device and put it into DFU mode:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接设备并将其置于 DFU 模式：
- en: '![](img/370be42e-f715-49dc-8ad7-06e0135ec1ec.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/370be42e-f715-49dc-8ad7-06e0135ec1ec.png)'
- en: Putting the device into DFU mode
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 将设备置于 DFU 模式
- en: 'Wait for the exploitation process to finish:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待利用过程完成：
- en: '![](img/e16ecd22-6179-4e31-a1aa-3c84fd7a289a.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e16ecd22-6179-4e31-a1aa-3c84fd7a289a.png)'
- en: Exploitation process
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 利用过程
- en: Once the device has been rebooted, you will find the checkra1n icon on the Springboard
    – the device is now jailbroken and ready for filesystem acquisition.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设备重新启动，你将在主屏幕上看到 checkra1n 图标——设备现在已经越狱，并准备好进行文件系统获取。
- en: For more jailbreaking techniques, please refer to the *Jailbreaking* section
    of [Chapter 2](acc4800c-2775-4ca6-9f5f-e447fa5ac0a8.xhtml), *Understanding the
    Internals of iOS Devices*.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多越狱技术，请参考[第二章](acc4800c-2775-4ca6-9f5f-e447fa5ac0a8.xhtml)中的*越狱*部分，*理解 iOS
    设备的内部结构*。
- en: Practical filesystem acquisition with free tools
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用免费工具进行实用的文件系统获取
- en: 'It''s time to perform filesystem acquisition. All we''ll need is `iproxy` from
    `libimobiledevice`:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是进行文件系统获取的时候了。我们只需要`libimobiledevice`中的`iproxy`：
- en: 'Open a Command Prompt window and run `iproxy` with the following parameters:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符窗口，并使用以下参数运行`iproxy`：
- en: '![](img/8c762d32-cd21-496e-bbf8-773ff72e3413.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8c762d32-cd21-496e-bbf8-773ff72e3413.png)'
- en: 'Open another Command Prompt window, change the directory to the one you want
    your image to be stored in, and run the following command:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开另一个命令提示符窗口，切换到你希望存储镜像的目录，并运行以下命令：
- en: '[PRE2]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To connect via SSH, you will be prompted for the necessary password. The default
    password for SSH is *alpine*.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 SSH 连接时，会提示输入必要的密码。SSH 的默认密码是 *alpine*。
- en: 'Once the process has finished, you''ll find the created filesystem image in
    the directory you changed to before running the preceding command. It''s a TAR
    archive and can be opened with many archivers, such as 7-Zip:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦过程完成，你将在之前切换的目录中找到创建的文件系统镜像。它是一个 TAR 压缩文件，可以使用许多压缩软件（如 7-Zip）打开。
- en: '![](img/f5ba6cb7-7d36-4f65-8ea7-bd0da366cb7e.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5ba6cb7-7d36-4f65-8ea7-bd0da366cb7e.png)'
- en: Filesystem image contents
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统镜像内容
- en: Next, let's look at the *Elcomsoft iOS Forensic Toolkit*.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看一下*Elcomsoft iOS 取证工具包*。
- en: Practical filesystem acquisition with Elcomsoft iOS Forensic Toolkit
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Elcomsoft iOS Forensic Toolkit 进行实际的文件系统获取
- en: Of course, commercial tools are more stable and reliable. One of the tools that's
    capable of filesystem acquisition is the Elcomsoft iOS Forensic Toolkit. Here,
    we are going to acquire a jailbroken iOS device running iOS 12.4.3.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，商业工具更加稳定和可靠。能够进行文件系统获取的工具之一是 Elcomsoft iOS Forensic Toolkit。在这里，我们将获取一台运行
    iOS 12.4.3 的越狱 iOS 设备。
- en: 'The steps to do this are as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此操作的步骤如下：
- en: Connect the device to your workstation and start `Toolkit.cmd`.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将设备连接到工作站并启动 `Toolkit.cmd`。
- en: 'Choose the port to use for SSH connection (the default is `22`, but since we
    used checkra1n for jailbreaking, the port is `44` instead) and type in the password
    (the default is `alpine`):'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择用于 SSH 连接的端口（默认是 `22`，但由于我们使用了 checkra1n 越狱，端口改为 `44`），然后输入密码（默认是 `alpine`）：
- en: '![](img/a87928bc-2348-4f86-9cd2-36c9f4301088.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a87928bc-2348-4f86-9cd2-36c9f4301088.png)'
- en: 'To acquire the device filesystem, type *F*:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取设备的文件系统，请输入 *F*：
- en: '![](img/cdbd5f6d-d1da-4e92-8184-2f13d900bdca.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cdbd5f6d-d1da-4e92-8184-2f13d900bdca.png)'
- en: Choose the image name and start the process.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择镜像名称并启动该过程。
- en: Once the process has finished, we'll have a filesystem image ready to be analyzed
    with a mobile forensic tool of our choice.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦过程完成，我们将拥有一个文件系统镜像，可以用我们选择的移动法医工具进行分析。
- en: Summary
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The first step in iOS device forensic examination is to acquire the data from
    the device. There are several different ways to acquire data from an iOS device.
    This chapter covered logical and filesystem acquisition techniques, as well as
    jailbreaking and methods to bypass passcodes.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 设备法医检查的第一步是从设备中获取数据。有几种不同的方法可以从 iOS 设备获取数据。本章涵盖了逻辑和文件系统获取技术，以及越狱和绕过密码的相关方法。
- en: While filesystem acquisition is the best method for forensically obtaining a
    majority of the data from iOS devices, backup files may exist or be the only method
    to extract data from the device.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然文件系统获取是法医学上从 iOS 设备中获取大部分数据的最佳方法，但备份文件可能存在，或者可能是从设备提取数据的唯一方法。
- en: The next chapter will discuss iOS device backup files in detail, including user,
    forensic, encrypted, and iCloud backup files, and the methods that you can perform
    to conduct your forensic examination.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将详细讨论 iOS 设备的备份文件，包括用户、法医、加密和 iCloud 备份文件，以及您可以执行的法医学检查方法。
