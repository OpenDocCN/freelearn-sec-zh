- en: Gathering Intel and Planning Attack Strategies
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集情报和规划攻击策略
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下配方：
- en: Getting a list of subdomains
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取子域列表
- en: Using Shodan for fun and profit
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Shodan进行娱乐和盈利
- en: Shodan Honeyscore
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shodan Honeyscore
- en: Shodan plugins
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shodan插件
- en: Using Nmap to find open ports
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nmap查找开放端口
- en: Bypassing firewalls with Nmap
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nmap绕过防火墙
- en: Searching for open directories
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索开放目录
- en: Performing deep magic with DMitry
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用DMitry进行深度探测
- en: Hunting for SSL flaws
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 寻找SSL漏洞
- en: Exploring connections with intrace
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用intrace探索连接
- en: Digging deep with theharvester
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入挖掘使用theharvester
- en: Finding technology behind web apps
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找Web应用程序背后的技术
- en: Scanning IPs with masscan
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用masscan扫描IP
- en: Sniffing around with Kismet
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Kismet进行嗅探
- en: Testing routers with firewalk
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用firewalk测试路由器
- en: Introduction
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: We learned in the previous chapter the basics of hunting subdomains. In this
    chapter, we dive a little deeper and look at other different tools available for
    gathering Intel on our target. We start by using the infamous tools of Kali Linux.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了狩猎子域的基础知识。在本章中，我们将深入一点，看看其他可用于收集目标情报的不同工具。我们首先使用Kali Linux中臭名昭著的工具。
- en: Gathering information is a very crucial stage of performing a penetration test,
    as every next step we take after this will totally be an outcome of all the information
    we gather during this stage. So it is very important that we gather as much information
    as possible before jumping into the exploitation stage.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 收集信息是进行渗透测试的一个非常关键的阶段，因为在此阶段收集的所有信息将完全决定我们在接下来的每一步。因此，在进入利用阶段之前，我们尽可能多地收集信息非常重要。
- en: Getting a list of subdomains
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取子域列表
- en: We don't always we have a situation where a client has defined a full detailed
    scope of what needs to be pentested. So we will use the following mentioned recipes
    to gather as much information as we can to perform a pentest.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们并不总是处于客户已经定义了需要进行渗透测试的详细范围的情况。因此，我们将使用以下提到的配方尽可能多地收集信息，以进行渗透测试。
- en: Fierce
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Fierce
- en: We start with jumping into Kali's Terminal and using the first and most widely
    used tool `fierce`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先跳转到Kali的终端，使用第一个和最常用的工具`fierce`。
- en: How to do it...
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following steps demonstrate the use of `fierce`:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤演示了如何使用`fierce`：
- en: 'To launch fierce, we type `fierce -h` to see the help menu:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启动fierce，我们输入`fierce -h`来查看帮助菜单：
- en: '![](img/85300354-60d2-4ea1-8258-6d2082bf627c.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/85300354-60d2-4ea1-8258-6d2082bf627c.png)'
- en: 'To perform a subdomain scan we use the following command:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行子域扫描我们使用以下命令：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前述命令的输出：
- en: '![](img/0a76a4d2-5034-4360-abfe-506bb041d434.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a76a4d2-5034-4360-abfe-506bb041d434.png)'
- en: DNSdumpster
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DNSdumpster
- en: This is a free project by Hacker Target to look up subdomains. It relies on
    [https://scans.io/](https://scans.io/) for its results. It can also be used to
    get the subdomains of a website. We should always prefer to use more than one
    tool for subdomain enumeration as we may get something from other tools that the
    first one failed to pick.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Hacker Target的一个免费项目，用于查找子域。它依赖于[https://scans.io/](https://scans.io/)来获取结果。它也可以用于获取网站的子域。我们应该始终倾向于使用多个工具进行子域枚举，因为我们可能会从其他工具中得到第一个工具未能捕获的信息。
- en: How to do it...
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'It is pretty simple to use. We type the domain name we want the subdomains
    for and it will show us the results:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用起来非常简单。我们输入要获取子域的域名，它会显示结果：
- en: '![](img/b0462e37-cb98-46a9-a70f-e06481f49932.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0462e37-cb98-46a9-a70f-e06481f49932.png)'
- en: Using Shodan for fun and profit
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Shodan进行娱乐和盈利
- en: Shodan is the world's first search engine to search for devices connected to
    the internet. It was launched in 2009 by John Matherly. Shodan can be used to
    look up webcams, databases, industrial systems, video games, and so on. Shodan
    mostly collects data on the most popular web services running, such as HTTP, HTTPS,
    MongoDB, FTP, and many more.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Shodan是世界上第一个搜索连接到互联网的设备的搜索引擎。它由John Matherly于2009年推出。Shodan可用于查找网络摄像头、数据库、工业系统、视频游戏等。Shodan主要收集运行的最流行的网络服务的数据，如HTTP、HTTPS、MongoDB、FTP等等。
- en: Getting ready
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: To use Shodan we will need to create an account on Shodan.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Shodan，我们需要在Shodan上创建一个帐户。
- en: How to do it...
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To learn about Shodan, follow the given steps:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解Shodan，请按照给定的步骤进行：
- en: 'Open your browser and visit [https://www.shodan.io](https://www.shodan.io):'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器，访问[https://www.shodan.io](https://www.shodan.io)：
- en: '![](img/c37be7d1-dcc2-4486-9a00-c02619411c09.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c37be7d1-dcc2-4486-9a00-c02619411c09.png)'
- en: 'We begin by performing a simple search for the FTP services running. To do
    this we can use the following Shodan dorks: `port:"21"`. The following screenshot
    shows the search results:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先执行一个简单的搜索，查找正在运行的FTP服务。为此，我们可以使用以下Shodan dorks：`port:"21"`。以下截图显示了搜索结果：
- en: '![](img/4f081bfa-6d92-4c2e-871e-9efdfc746d11.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4f081bfa-6d92-4c2e-871e-9efdfc746d11.png)'
- en: 'This search can be made more specific by specifying a particular country/organization:
    `port:"21" country:"IN"`. The following screenshot shows the search results:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以通过指定特定的国家/组织来使此搜索更加具体：`port:"21" country:"IN"`。以下截图显示了搜索结果：
- en: '![](img/c6ddb2e6-ec35-4d64-a5d8-00290198facf.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c6ddb2e6-ec35-4d64-a5d8-00290198facf.png)'
- en: We can now see all the FTP servers running in India; we can also see the servers
    that allow anonymous login and the version of the FTP server they are running.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以看到所有在印度运行的FTP服务器；我们还可以看到允许匿名登录的服务器以及它们正在运行的FTP服务器的版本。
- en: 'Next, we try the organization filter. It can be done by typing `port:"21" country:"IN"
    org:"BSNL"` as shown in the following screenshot:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们尝试组织过滤器。可以通过输入`port:"21" country:"IN" org:"BSNL"`来完成，如下截图所示：
- en: '![](img/881d975d-6c73-41ef-95f3-1c52947ed82b.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/881d975d-6c73-41ef-95f3-1c52947ed82b.png)'
- en: 'Shodan has other tags as well that can be used to perform advanced searches,
    such as:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Shodan还有其他标签，可以用来进行高级搜索，比如：
- en: '`net`: to scan IP ranges'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`net`：扫描IP范围'
- en: '`city`: to filter by city'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`city`：按城市过滤'
- en: More details can be found at [https://www.shodan.io/explore](https://www.shodan.io/explore).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详细信息可以在[https://www.shodan.io/explore](https://www.shodan.io/explore)找到。
- en: Shodan Honeyscore
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shodan Honeyscore
- en: Shodan Honeyscore is another great project built in the Python. It helps us
    figure out whether an IP address we have is a honeypot or a real system.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Shodan Honeyscore是另一个出色的Python项目。它帮助我们确定我们拥有的IP地址是蜜罐还是真实系统。
- en: How to do it...
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following steps demonstrate the use of Shodan Honeyscore:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤演示了如何使用Shodan Honeyscore：
- en: 'To use Shodan Honeyscore we visit [https://honeyscore.shodan.io/](https://honeyscore.shodan.io/):'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用Shodan Honeyscore，我们访问[https://honeyscore.shodan.io/](https://honeyscore.shodan.io/)：
- en: '![](img/f054bc50-87df-4843-a3c1-47f533282dec.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f054bc50-87df-4843-a3c1-47f533282dec.png)'
- en: Enter the IP address we want to check, and that's it!
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入我们要检查的IP地址，就这样！
- en: '![](img/24c6629e-7f52-48ac-bf38-c52c7f164ab5.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/24c6629e-7f52-48ac-bf38-c52c7f164ab5.png)'
- en: Shodan plugins
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shodan插件
- en: To make our life even easier, Shodan has plugins for Chrome and Firefox that
    can be used to check open ports for websites we visit on the go!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的生活更加轻松，Shodan还为Chrome和Firefox提供了插件，可以用来在我们访问的网站上检查开放端口！
- en: How to do it...
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'We download and install the plugin from [https://www.shodan.io/](https://www.shodan.io/).
    Browse any website and we will see that by clicking on the plugin we can see the
    open ports:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从[https://www.shodan.io/](https://www.shodan.io/)下载并安装插件。浏览任何网站，我们会发现通过点击插件，我们可以看到开放的端口：
- en: '![](img/ff4ac8fa-50e4-491a-8832-10ece78296e1.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ff4ac8fa-50e4-491a-8832-10ece78296e1.png)'
- en: See also
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Dnscan* recipe from [Chapter 1](c9685838-403e-40ce-bf19-d04d72e06e05.xhtml),
    *Kali – An Introduction*
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自[第1章](c9685838-403e-40ce-bf19-d04d72e06e05.xhtml)的*Dnscan*步骤，*Kali – An Introduction*
- en: The *Digging deep with theharvester* recipe
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用theharvester深入挖掘的步骤
- en: Using Nmap to find open ports
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Nmap查找开放端口
- en: '**Network Mapper** (**Nmap**) is a security scanner written by Gordon Lyon.
    It is used to find hosts and services in a network. It first came out in September
    1997\. Nmap has various features as well as scripts to perform various tests such
    as finding the OS, service version, brute force default logins, and so on.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 网络映射器（Nmap）是由Gordon Lyon编写的安全扫描程序。它用于在网络中查找主机和服务。它最早是在1997年9月发布的。Nmap具有各种功能以及用于执行各种测试的脚本，例如查找操作系统、服务版本、暴力破解默认登录等。
- en: 'Some of the most common types of scan are:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一些最常见的扫描类型是：
- en: TCP `connect()` scan
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP `connect()`扫描
- en: SYN stealth scan
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SYN 隐秘扫描
- en: UDP scan
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UDP扫描
- en: Ping scan
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ping扫描
- en: Idle scan
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空闲扫描
- en: How to do it...
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following is the recipe for using Nmap:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用Nmap的步骤：
- en: 'Nmap is already installed in Kali Linux. We can type the following command
    to start it and see all the options available:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nmap已经安装在Kali Linux中。我们可以输入以下命令来启动它并查看所有可用的选项：
- en: '[PRE1]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了前面命令的输出：
- en: '![](img/045da05e-ce64-4018-b197-2c5c551809e6.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/045da05e-ce64-4018-b197-2c5c551809e6.png)'
- en: 'To perform a basic scan we use the following command:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要执行基本扫描，我们使用以下命令：
- en: '[PRE2]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了前面命令的输出：
- en: '![](img/3273298a-1a37-4b34-ac5f-a459ff060532.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3273298a-1a37-4b34-ac5f-a459ff060532.png)'
- en: '`-Pn` implies that we do not check whether the host is up or not by performing
    a ping request first. The `-sV` parameter is to list all the running services
    on the found open ports.'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`-Pn`表示我们不通过首先执行ping请求来检查主机是否正常。`-sV`参数是列出在找到的开放端口上运行的所有服务。'
- en: 'Another flag we can use is `-A`, which automatically performs OS detection,
    version detection, script scanning, and traceroute. The command is:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用的另一个标志是`-A`，它会自动执行操作系统检测、版本检测、脚本扫描和跟踪路由。命令是：
- en: '[PRE3]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To scan an IP range or multiple IPs, we can use this command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要扫描IP范围或多个IP，我们可以使用以下命令：
- en: '[PRE4]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Using scripts
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用脚本
- en: 'The **Nmap Scripting Engine** (**NSE**) allows users to create their own scripts
    to perform different tasks automatically. These scripts are executed side by side
    when a scan is run. They can be used to perform more effective version detection,
    exploitation of the vulnerability, and so on. The command for using a script is:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap脚本引擎（NSE）允许用户创建自己的脚本，以便在运行扫描时并行执行这些脚本来执行不同的任务。它们可用于执行更有效的版本检测、利用漏洞等。使用脚本的命令是：
- en: '[PRE5]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](img/f1f9be51-5d1e-4f38-8e4f-8c3503ef4d39.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f1f9be51-5d1e-4f38-8e4f-8c3503ef4d39.png)'
- en: 'The output of the preceding command is as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 前面命令的输出如下：
- en: '![](img/d1bb1b36-57bb-44bc-8829-a20af81df217.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d1bb1b36-57bb-44bc-8829-a20af81df217.png)'
- en: Here the script `dns-brute` tries to fetch the available subdomains by brute
    forcing it against a set of common subdomain names.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的脚本`dns-brute`尝试通过针对一组常见子域名名称进行暴力破解来获取可用的子域名。
- en: See also
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Using Shodan for fun and profit* recipe
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Shodan进行娱乐和盈利的步骤
- en: More information on the scripts can be found in the official NSE documentation
    at [https://nmap.org/nsedoc/](https://nmap.org/nsedoc/)
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关脚本的更多信息可以在官方NSE文档中找到[https://nmap.org/nsedoc/](https://nmap.org/nsedoc/)
- en: Bypassing firewalls with Nmap
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Nmap绕过防火墙
- en: Most of the time during a pentest, we will come across systems protected by
    firewalls or **Intrusion Detection Systems** (**IDS**). The Nmap provides different
    ways to bypass these IDS/firewalls to perform port scans on a network. In this
    recipe, we will learn some of the ways we can bypass firewalls.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试期间，我们通常会遇到受防火墙或入侵检测系统（IDS）保护的系统。Nmap提供了不同的方法来绕过这些IDS/防火墙，执行对网络的端口扫描。在这个步骤中，我们将学习一些绕过防火墙的方法。
- en: TCP ACK scan
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TCP ACK扫描
- en: The ACK scan (`-sA`) sends acknowledgment packets instead of SYN packets, and
    the firewall does not create logs of ACK packets as it will treat ACK packets
    as responses to SYN packets. It is mostly used to map the type of firewall being
    used.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: ACK扫描（`-sA`）发送确认包而不是SYN包，防火墙不会创建ACK包的日志，因为它会将ACK包视为对SYN包的响应。它主要用于映射防火墙的类型。
- en: How to do it...
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: The ACK scan was made to show unfiltered and filtered ports instead of open
    ones.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: ACK扫描是为了显示未经过滤和经过滤的端口，而不是打开的端口。
- en: 'The command for ACK scan is:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: ACK扫描的命令是：
- en: '[PRE6]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Let''s look at the comparison of how a normal scan differs from an ACK scan:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看正常扫描与ACK扫描的比较：
- en: '![](img/e3889456-d344-4c12-afb2-b07c936f04ac.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e3889456-d344-4c12-afb2-b07c936f04ac.png)'
- en: 'Here we see the difference between a normal scan and an ACK scan:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们看到正常扫描和ACK扫描之间的区别：
- en: '![](img/956854a7-c95f-441e-a13d-dc6797d923e4.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/956854a7-c95f-441e-a13d-dc6797d923e4.png)'
- en: How it works...
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The scan results of filtered and unfiltered ports depends on whether a firewall
    being used is stateful or stateless. A stateful firewall checks if an incoming
    ACK packet is part of an existing connection or not. It blocks it if the packets
    are not part of any requested connection. Hence, the port will show up as filtered
    during a scan.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤和未过滤端口的扫描结果取决于使用的防火墙是有状态的还是无状态的。有状态防火墙检查传入的ACK数据包是否是现有连接的一部分。如果数据包不是任何请求连接的一部分，它将被阻止。因此，在扫描期间，端口将显示为已过滤。
- en: Whereas, in the case of a stateless firewall, it will not block the ACK packets
    and the ports will show up as unfiltered.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 而在无状态防火墙的情况下，它不会阻止ACK数据包，端口将显示为未过滤。
- en: TCP Window scan
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TCP窗口扫描
- en: Window scan (`-sW`) is almost the same as an ACK scan except it shows open and
    closed ports.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口扫描（`-sW`）几乎与ACK扫描相同，只是显示打开和关闭的端口。
- en: How to do it...
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Let''s look at the difference between a normal scan and a TCP scan:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看正常扫描和TCP扫描之间的区别：
- en: 'The command to run is:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行的命令是：
- en: '[PRE7]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let''s look at the comparison of how a normal scan differs from a TCP Window
    scan:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看正常扫描与TCP窗口扫描的比较：
- en: '![](img/982d2593-087e-4c94-bffb-f45d19e06880.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/982d2593-087e-4c94-bffb-f45d19e06880.png)'
- en: 'We can see the difference between the two scans in the following screenshot:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在以下屏幕截图中看到两种扫描之间的区别：
- en: '![](img/4eb0f5a2-2bce-45f1-b274-fbd0dac7bc4f.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4eb0f5a2-2bce-45f1-b274-fbd0dac7bc4f.png)'
- en: Idle scan
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 空闲扫描
- en: Idle scanning is an advanced technique where no packets sent to the target can
    be traced back to the attacker machine. It requires a zombie host to be specified.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 空闲扫描是一种高级技术，其中没有发送到目标的数据包可以追溯到攻击者的机器。它需要指定一个僵尸主机。
- en: How to do it...
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'The command to do an idle scan is:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 执行空闲扫描的命令是：
- en: '[PRE8]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: How it works...
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Idle scan works on the basis of a predictable IPID or an IP fragmentation ID
    of the zombie host. First, the IPID of the zombie host is checked and then a connection
    request is spoofed from that host to the target host. If the port is open, an
    acknowledgment is sent back to the zombie host which **resets** (**RST**) the
    connection as it has no history of opening such a connection. Next, the attacker
    checks the IPID on the zombie again; if it has changed by one step it implies
    an RST was received from the target. But if the IPID has changed by two steps
    it means a packet was received by the zombie host from the target host and there
    was an RST on the zombie host, which implies that the port is open.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 空闲扫描基于可预测的僵尸主机的IPID或IP分段ID。首先检查僵尸主机的IPID，然后欺骗性地从该主机向目标主机发送连接请求。如果端口是打开的，将向僵尸主机发送确认，这将重置连接，因为它没有打开这样的连接的历史记录。接下来，攻击者再次检查僵尸上的IPID；如果它改变了一步，这意味着从目标接收到了RST。但如果IPID改变了两步，这意味着从目标主机接收到了一个数据包，并且在僵尸主机上有一个RST，这意味着端口是打开的。
- en: Searching for open directories
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索打开的目录
- en: In the previous recipe, we discussed how to find open ports on a network IP
    or domain name. We often see developers running web servers on different ports.
    Sometimes developers may also leave directories misconfigured that may contain
    juicy information for us. We have already covered dirsearch in the previous chapter;
    here we will look at alternatives.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一篇文章中，我们讨论了如何在网络IP或域名上找到开放的端口。我们经常看到开发人员在不同的端口上运行Web服务器。有时开发人员也可能会留下错误配置的目录，其中可能包含对我们有用的信息。我们已经在上一章中介绍了dirsearch；在这里，我们将看看其他选择。
- en: The dirb tool
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: dirb工具
- en: The `dirb` tool is a well-known tool that can be used to brute force open directories.
    Although it is generally slow and does not support multi-threading, it is still
    a great way to find directories/subdirectories that may have been left open due
    to a misconfiguration.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`dirb`工具是一个众所周知的工具，可以用来暴力破解打开的目录。虽然它通常速度较慢，不支持多线程，但仍然是发现可能由于错误配置而留下的目录/子目录的好方法。'
- en: How to do it...
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Type the following command to fire up the tool:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 键入以下命令启动工具：
- en: '[PRE9]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了上述命令的输出：
- en: '![](img/7ccd6dfa-64a0-46df-9fae-d6d362685cba.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ccd6dfa-64a0-46df-9fae-d6d362685cba.png)'
- en: There's more...
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'There are other options in `dirb`, as well, that come in handy:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`dirb`中还有其他选项，也很方便：'
- en: '`-a`: to specify a user agent'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-a`：指定用户代理'
- en: '`-c`: to specify a cookie'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-c`：指定cookie'
- en: '`-H`: to enter a custom header'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-H`：输入自定义标头'
- en: '`-X`: to specify the file extension'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-X`：指定文件扩展名'
- en: See also
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Dirsearch* recipe from [Chapter 1](c9685838-403e-40ce-bf19-d04d72e06e05.xhtml),
    *Kali – An Introduction*
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自[第1章](c9685838-403e-40ce-bf19-d04d72e06e05.xhtml)的*Dirsearch*食谱，*Kali-简介*
- en: Performing deep magic with DMitry
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用DMitry进行深度魔法
- en: The **Deepmagic Information Gathering Tool** (**DMitry**) is a command-line
    tool open source application coded in C. It has the capability of gathering subdomains,
    email addresses, whois info, and so on, about a target.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**Deepmagic信息收集工具**（**DMitry**）是一个用C编写的命令行工具开源应用程序。它具有收集有关目标的子域、电子邮件地址、whois信息等能力。'
- en: How to do it...
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'To learn about DMitry, follow the given steps:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解DMitry，请按照以下步骤：
- en: 'We use a simple command:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用一个简单的命令：
- en: '[PRE10]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了上述命令的输出：
- en: '![](img/b68c984a-5e1f-442e-bc74-d6c2ed7b9557.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b68c984a-5e1f-442e-bc74-d6c2ed7b9557.png)'
- en: 'Next, we try performing an email, whois, TCP port scan, and subdomain search
    by using the following:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们尝试执行电子邮件、whois、TCP端口扫描和子域搜索，使用以下命令：
- en: '[PRE11]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了上述命令的输出：
- en: '![](img/1f5adc31-c102-414d-8bdc-06680348ad9d.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f5adc31-c102-414d-8bdc-06680348ad9d.png)'
- en: Hunting for SSL flaws
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找SSL漏洞
- en: Most of the web applications today use SSL to communicate with the server. The
    `sslscan` is a great tool to check SSL for flaws or misconfigurations.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 今天大多数Web应用程序都使用SSL与服务器通信。`sslscan`是一个很好的工具，用于检查SSL是否存在漏洞或配置错误。
- en: How to do it...
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To learn about `sslscan` follow the given steps:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解`sslscan`，请按照以下步骤：
- en: 'We will look at the help manual to see the various options the tool has:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将查看帮助手册，以了解该工具具有的各种选项：
- en: '[PRE12]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/9fd70237-5231-4993-b00a-dd03dc3c11f6.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fd70237-5231-4993-b00a-dd03dc3c11f6.png)'
- en: 'To run the tool against a host we type the following:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要对主机运行该工具，我们输入以下内容：
- en: '[PRE13]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/6fbdb7d9-86b0-4d42-b21c-208a4571b701.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6fbdb7d9-86b0-4d42-b21c-208a4571b701.png)'
- en: See also
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *A tale of a bleeding heart* recipe from [Chapter 5](2fbf988a-afe8-4d88-ac57-6555e93d66b7.xhtml),
    *Network Exploitation on Current Exploitation*
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自[第5章](2fbf988a-afe8-4d88-ac57-6555e93d66b7.xhtml)的*一个流血的故事*教程，*当前利用的网络利用*
- en: TLSSLed is also an alternative we can use in Kali to perform checks on SSL.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: TLSSLed也是我们可以在Kali中使用的替代工具，用于对SSL进行检查。
- en: Exploring connections with intrace
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用intrace探索连接
- en: The `intrace` tool is a great tool to enumerate IP hops on existing TCP connections.
    It can be useful for firewall bypassing and gathering more information about a
    network.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`intrace`工具是一个枚举现有TCP连接上的IP跳数的好工具。它对于防火墙绕过和收集有关网络的更多信息可能是有用的。'
- en: How to do it...
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Run the following command:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE14]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/57200668-142c-4ad4-9ff1-a94c334b426b.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/57200668-142c-4ad4-9ff1-a94c334b426b.png)'
- en: Digging deep with theharvester
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入挖掘theharvester
- en: The `theharvester` tool is a great tool for penetration testing as it helps
    us find a lot of information about a company. It can be used to find email accounts,
    subdomains, and so on. In this recipe, we will learn how to use it to discover
    data.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`theharvester`工具是一个很好的渗透测试工具，因为它可以帮助我们找到有关公司的大量信息。它可以用于查找电子邮件帐户、子域等。在这个教程中，我们将学习如何使用它来发现数据。'
- en: How to do it...
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The command is pretty simple:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 命令非常简单：
- en: '[PRE15]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/1ac2e24e-7172-47b0-a166-d86a9488910d.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1ac2e24e-7172-47b0-a166-d86a9488910d.png)'
- en: How it works...
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In the preceding recipe, `-d` is for the domain name or the keyword we want
    to search, `-l` is for limiting the number of search results, and `-b` is the
    source we want the tool to use while gathering information. The tool supports
    Google, Google CSE, Bing, Bing API, PGP, LinkedIn, Google Profiles, people123,
    Jigsaw, Twitter, and Google Plus sources.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的教程中，`-d`是域名或我们想要搜索的关键字，`-l`是限制搜索结果的数量，`-b`是我们希望工具在收集信息时使用的来源。该工具支持Google、Google
    CSE、Bing、Bing API、PGP、LinkedIn、Google Profiles、people123、Jigsaw、Twitter和Google
    Plus来源。
- en: Finding the technology behind web apps
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找Web应用程序背后的技术
- en: There is no point starting a pentest against a web application without knowing
    what the actual technology behind it is. For example, it would be absolutely useless
    to run dirsearch to look for files with the extension `.php` when the technology
    is actually ASP.NET. So, in this recipe, we will learn to use a simple tool `whatweb`
    to understand the technology behind a web app. It comes by default in Kali.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在不知道Web应用程序的实际技术的情况下开始对Web应用程序进行渗透测试是没有意义的。例如，当技术实际上是ASP.NET时，运行dirsearch查找扩展名为`.php`的文件将是完全无用的。因此，在这个教程中，我们将学习使用一个简单的工具`whatweb`来了解Web应用程序背后的技术。它在Kali中默认安装。
- en: It can also be installed manually from the URL [https://github.com/urbanadventurer/WhatWeb](https://github.com/urbanadventurer/WhatWeb).
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 它也可以从以下网址手动安装[https://github.com/urbanadventurer/WhatWeb](https://github.com/urbanadventurer/WhatWeb)。
- en: How to do it...
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The use of `whatweb` can be done as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`whatweb`可以这样做：
- en: 'The tool can be launched by using the following command:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用以下命令启动该工具：
- en: '[PRE16]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/d6b1c83b-831f-4eb9-b7b3-a2cdbaebc2af.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d6b1c83b-831f-4eb9-b7b3-a2cdbaebc2af.png)'
- en: 'The domain name can be given as a parameter, or multiple domain names can be
    entered by using a `--input-file` argument:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 域名可以作为参数给出，也可以使用`--input-file`参数输入多个域名：
- en: '[PRE17]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/18d6e528-5d9b-4915-9e3b-047de25bca62.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![](img/18d6e528-5d9b-4915-9e3b-047de25bca62.png)'
- en: Scanning IPs with masscan
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用masscan扫描IP
- en: The `masscan` tool is an amazing tool; it is the fastest port scan tool. It
    is supposed to scan the entire internet when it transmits at a speed of 10 million
    packets per second. It is a good alternative for Nmap when we know exactly what
    ports we are looking for in a network.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`masscan`工具是一个了不起的工具；它是最快的端口扫描工具。当以每秒1000万个数据包的速度传输时，它被认为是扫描整个互联网。当我们确切地知道我们在网络中寻找哪些端口时，它是Nmap的一个很好的替代品。'
- en: It is similar to Nmap, however, in that it does not support default port scanning
    all ports must be specified using `-p`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 它类似于Nmap，但不支持默认端口扫描，所有端口必须使用`-p`指定。
- en: How to do it...
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The `masscan` tool is simple to use. We can begin a scan of a network by using
    the following command:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`masscan`工具使用简单。我们可以使用以下命令开始对网络的扫描：'
- en: '[PRE18]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/5d155374-61cb-4994-9e75-a48bab2f4dc7.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5d155374-61cb-4994-9e75-a48bab2f4dc7.png)'
- en: We can also specify the packet rate by using `--max-rate`. By default, the rate
    is `100` packets per second. Using it is not recommended as it will put a lot
    of load on the network device.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`--max-rate`指定数据包速率。默认情况下，速率是每秒100个数据包。不建议使用它，因为它会给网络设备带来很大的负载。
- en: Sniffing around with Kismet
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Kismet进行侦听
- en: Kismet is a layer 2 wireless network detector. It comes in handy because while
    performing pentest in a corporate environment, we may need to look for wireless
    networks as well. Kismet can sniff 802.11a/b/g/n traffic. It works with any wireless
    card that supports raw monitoring modes.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: Kismet是一个二层无线网络探测器。它非常方便，因为在企业环境中进行渗透测试时，我们可能也需要查找无线网络。Kismet可以嗅探802.11a/b/g/n流量。它适用于支持原始监控模式的任何无线网卡。
- en: In this recipe, we will learn how to use Kismet to monitor Wi-Fi networks.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个步骤中，我们将学习如何使用Kismet来监视Wi-Fi网络。
- en: How to do it...
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To learn about Kismet follow the given steps:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解Kismet，请按照以下步骤进行：
- en: 'We use the following command to launch Kismet:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用以下命令启动Kismet：
- en: '[PRE19]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/5493fe78-c8cd-4789-b7bf-4f6c61853ed1.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5493fe78-c8cd-4789-b7bf-4f6c61853ed1.png)'
- en: 'Once the GUI is up, it will ask us to start the server, and we choose `yes`:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦GUI启动，它将要求我们启动服务器，我们选择“是”：
- en: '![](img/0b4e0d63-8022-40c1-8f75-9a9a6a10a03e.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b4e0d63-8022-40c1-8f75-9a9a6a10a03e.png)'
- en: 'Next, we need to specify a source interface, in our case it is `wlan0`, so
    we type that. Make sure the interface is in monitor mode before initializing it
    in Kismet:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要指定一个源接口，在我们的情况下是`wlan0`，所以我们输入那个。确保在Kismet中初始化之前，接口处于监视模式：
- en: '![](img/a33dde97-bad0-4394-80be-7dea40cd82cc.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a33dde97-bad0-4394-80be-7dea40cd82cc.png)'
- en: 'Now we will see a list of all the wireless networks around us:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们将看到我们周围所有无线网络的列表：
- en: '![](img/4a7ae25d-38de-4399-a0cb-2ef87a6c7f6e.png)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4a7ae25d-38de-4399-a0cb-2ef87a6c7f6e.png)'
- en: 'By default, Kismet listens on all the channels, so we can specify a particular
    channel by selecting the entry Config Channel... from the Kismet menu:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，Kismet会监听所有频道，因此我们可以通过从Kismet菜单中选择“配置频道...”来指定特定频道：
- en: '![](img/27cf346f-24c0-4708-bdb5-b377881b88b6.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](img/27cf346f-24c0-4708-bdb5-b377881b88b6.png)'
- en: 'We can choose the channel number here:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在这里选择频道号：
- en: '![](img/329dd92b-610f-4050-860a-647c9c7c7cfc.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![](img/329dd92b-610f-4050-860a-647c9c7c7cfc.png)'
- en: 'Kismet also allows us to see the signal to noise ratio. We can see that by
    selecting Channel Details... in the Windows menu:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kismet还允许我们查看信噪比。我们可以通过在Windows菜单中选择“通道详情...”来查看：
- en: '![](img/8df58adf-44cd-4d50-946c-3da348446927.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8df58adf-44cd-4d50-946c-3da348446927.png)'
- en: 'This signal to noise ratio is very helpful during times of wardriving:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在无线侦察时，这种信噪比非常有用：
- en: '![](img/3d9a1ef3-a427-4159-9d88-0465df617b8d.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d9a1ef3-a427-4159-9d88-0465df617b8d.png)'
- en: Testing routers with firewalk
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用firewalk测试路由器
- en: The `firewalk` tool is a network security reconnaissance tool that helps us
    figure out whether our routers are actually doing the job they are supposed to
    do. It attempts to find what protocols a router/firewall will allow and what it
    will block.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`firewalk`工具是一个网络安全侦察工具，可以帮助我们弄清楚我们的路由器是否真的在做它们应该做的工作。它尝试找出路由器/防火墙允许什么协议，以及它将阻止什么。'
- en: This tool is incredibly useful during pentesting to verify and validate firewall
    policies in a corporate environment.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具在渗透测试中非常有用，可以验证企业环境中的防火墙策略。
- en: How to do it...
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The following is the recipe for using `firewalk`:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用`firewalk`的步骤：
- en: 'If `firewalk` is not found, we can install it using:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果找不到`firewalk`，我们可以使用以下命令进行安装：
- en: '[PRE20]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We can use the following command to run firewalk:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令运行firewalk：
- en: '[PRE21]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/35de97da-2b06-47dc-9934-cd6ac24ea7b1.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35de97da-2b06-47dc-9934-cd6ac24ea7b1.png)'
- en: How it works...
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: In the preceding command, `-i` is for specifying the network interface, `-S`
    is for specifying the port numbers we want to test, and the next two are the router's
    IP address and the host's IP address that we want to check against our router.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，`-i`用于指定网络接口，`-S`用于指定我们要测试的端口号，接下来的两个是路由器的IP地址和我们要检查与我们的路由器相对的主机的IP地址。
- en: Nmap also includes a script to perform firewalk. More information can be found
    at [https://nmap.org/nsedoc/](https://nmap.org/nsedoc/).
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap还包括一个执行firewalk的脚本。更多信息可以在[https://nmap.org/nsedoc/](https://nmap.org/nsedoc/)找到。
