- en: '*Chapter 17*: Achieving Automation of Security Tools'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第17章*：实现安全工具的自动化'
- en: '*"Most of the time people don''t realize the benefits of Automation for being
    afraid of the myth, "Automation will replace the human," but what really Automation
    represents is the highest level of maturity and excellence."*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*“大多数时候，人们因为害怕‘自动化会取代人类’的神话，而没意识到自动化的好处，但实际上，自动化代表的是最高级别的成熟和卓越。”*'
- en: '*– Desilda Toska, Dottore Magistrale and Automation leader*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*– Desilda Toska, Dottore Magistrale 和自动化领导者*'
- en: Most attackers leverage automation tools and techniques to enhance the reach
    of their attacks. Therefore, you must understand the importance of automation
    so that you can also take advantage of it to better secure your infrastructure.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数攻击者利用自动化工具和技术来增强攻击的范围。因此，你必须理解自动化的重要性，这样你也可以利用它来更好地保护你的基础设施。
- en: Additionally, you must understand the different types of automated attacks that
    compose the threat landscape so that you can plan your defenses against them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还必须了解构成威胁环境的不同类型的自动化攻击，以便为它们做好防御规划。
- en: In fact, I am sure that you are familiar with several automated attacks such
    as *spam* and **distributed denial-of-service** (**DDoS**) attacks, but here,
    we will review the top 21 automated attacks to better understand this threat,
    which includes very interesting attacks such as credential stuffing, scalping,
    sniping, and more.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，我相信你一定熟悉一些自动化攻击，如*垃圾邮件*和**分布式拒绝服务**（**DDoS**）攻击，但在这里，我们将回顾21种自动化攻击，以便更好地理解这一威胁，其中包括一些非常有趣的攻击，如凭证填充、抢购、狙击等。
- en: 'Here is a list of the main topics to be covered in this chapter:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本章要涵盖的主要主题列表：
- en: Why bother with automation?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么要使用自动化？
- en: Types of automated attacks
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化攻击的类型
- en: Automation of cybersecurity tools using Python
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Python进行网络安全工具的自动化
- en: Cybersecurity automation with Raspberry Pi
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Raspberry Pi进行网络安全自动化
- en: Why bother with automation?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要使用自动化？
- en: '*"In computing, the most efficient job is the one that doesn''t need to be
    performed."*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*“在计算中，最有效的工作是那些不需要执行的工作。”*'
- en: '*– Ignacio Trejos-Zelaya*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*– Ignacio Trejos-Zelaya*'
- en: As mentioned before, cybercriminals leverage automation as their main tool to
    increase the reach of their attacks, so if you want to play on the same terms,
    then you should be using also leveraging automation as a key factor in your defensive
    security strategy.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，网络犯罪分子利用自动化作为其主要工具来扩大攻击的范围，所以如果你想在同一起跑线上竞争，也应该把自动化作为防御安全策略的关键因素。
- en: Benefits of automation
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化的好处
- en: 'Let''s review some of the benefits that you can leverage by implementing automation
    as part of your defensive security strategy. They are listed here:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一些通过将自动化作为防御安全策略的一部分来利用的好处。它们列在这里：
- en: Optimization of resources (you can do more with less)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源优化（你可以用更少的资源做更多的事情）
- en: Relocation of resources to more advanced tasks (by automating time-consuming
    non-value-added tasks)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将资源转移到更高级的任务上（通过自动化耗时的无增值任务）
- en: Cost reduction
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成本降低
- en: Faster detection of threats
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更快地检测到威胁
- en: Faster application of countermeasures
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更快速地采取对策
- en: Reduction of impact in the case of attacks
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少攻击时的影响
- en: Support of compliance and compliance-related tasks
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合规性和与合规性相关的任务支持
- en: Now, on the other hand, let's review the risks of not applying automation.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，另一方面，让我们回顾一下不应用自动化的风险。
- en: The risks of ignoring automation
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 忽视自动化的风险
- en: 'Some companies may not be willing to invest in automation; however, here are
    some of the risks associated with that:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一些公司可能不愿意投资于自动化；然而，以下是与之相关的一些风险：
- en: Waste of resources (by working on tasks that can be automated)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源浪费（做那些可以自动化的任务）
- en: Increased probability of human error
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人为错误的概率增加
- en: Slower time to react (human speed versus computer speed)
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 反应时间较慢（人类速度与计算机速度的对比）
- en: Increased possibility of becoming vulnerable to automated attacks
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更容易成为自动化攻击的目标
- en: Fewer resources available for innovation
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创新资源减少
- en: Fewer resources available for research
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于研究的资源减少
- en: Lower capability to discover threats
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现威胁的能力降低
- en: Now, let's review the different types of automated attacks that we may face.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回顾一下我们可能面临的各种自动化攻击类型。
- en: Types of automated attacks
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化攻击的类型
- en: Most attacks are automated, aimed to target a broader audience to increase the
    chances of success; therefore, it is important that you understand the types of
    automated attacks that you may face, and to do that, we will do a review of the
    classification of automated attacks based on the **Open Web Application Security
    Project** (**OWASP**).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数攻击是自动化的，旨在针对更广泛的受众，以提高成功的机会；因此，了解可能面临的自动化攻击类型非常重要，为此我们将基于**开放Web应用程序安全项目**（**OWASP**）对自动化攻击进行分类回顾。
- en: Account aggregation
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 账户聚合
- en: This attack is aimed at identifying and aggregating accounts based on a common
    factor—for example, gathering all credentials from a given system, gathering credentials
    from a single user (from a plurality of systems), and so on.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 该攻击旨在根据共同因素识别和聚合账户——例如，收集来自某一系统的所有凭证，收集来自单个用户（来自多个系统）的凭证，等等。
- en: Account creation
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 账户创建
- en: This attack is aimed at creating bulk accounts.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 该攻击旨在创建大量账户。
- en: The objectives of attackers are varied, including using new accounts for spam,
    account misuse, **Denial of Service (DoS)**, and so on.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者的目标多种多样，包括使用新账户进行垃圾邮件、账户滥用、**拒绝服务攻击（DoS）**等。
- en: Ad fraud
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 广告欺诈
- en: 'This automated attack is aimed at providing false clicks to commit fraud with
    advertisements, as illustrated in the following screenshot:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这种自动化攻击旨在通过虚假点击进行广告欺诈，如下图所示：
- en: '![Figure 17.1 – Ad fraud example'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.1 – 广告欺诈示例'
- en: '](img/Figure_17.1_B16290.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.1_B16290.jpg)'
- en: Figure 17.1 – Ad fraud example
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.1 – 广告欺诈示例
- en: As illustrated in the preceding screenshot, cybercriminals may increase their
    earnings exponentially by using this type of automated attack to commit fraud.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所示的截图所示，网络犯罪分子可以通过使用这种自动化攻击来进行欺诈，从而使他们的收入呈指数增长。
- en: CAPTCHA defeat
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CAPTCHA 绕过
- en: '**Completely Automated Public Turing Test to tell Computers and Humans Apart**
    (**CAPTCHA)** is a very basic way to prevent some types of automated attacks by
    creating a test that can be solved by humans and not by robots (scripts). However,
    with the current advances in image recognition technologies and **optical character
    recognition** (**OCR**), CAPTCHAs became harder for users and easier for computers.
    You can see a couple of examples of impossible CAPTCHAs in the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**完全自动化公共图灵测试以区分计算机与人类**（**CAPTCHA**）是一种非常基础的防止某些类型自动化攻击的方法，通过创建一个人类可以解决而机器人（脚本）无法解决的测试。然而，随着图像识别技术和**光学字符识别**（**OCR**）的进步，CAPTCHA
    对用户来说变得更加困难，但对计算机来说则变得更加容易。您可以在以下截图中看到一些不可能的 CAPTCHA 示例：'
- en: '![Figure 17.2 – Examples of impossible CAPTCHAs'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.2 – 不可能的 CAPTCHA 示例'
- en: '](img/Figure_17.2_B16290.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.2_B16290.jpg)'
- en: Figure 17.2 – Examples of impossible CAPTCHAs
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.2 – 不可能的 CAPTCHA 示例
- en: In fact, as illustrated in the preceding screenshot, some CAPTCHAs are impossible
    to decipher by humans.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，如前所示的截图所示，某些 CAPTCHA 对人类来说是无法解读的。
- en: Card cracking
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 卡片破解
- en: This kind of attack is aimed at identifying missing credit card data (such as
    security codes and expiration dates) by brute-forcing them on credit card processing
    sites.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击旨在通过在信用卡处理网站上暴力破解信用卡数据（如安全码和有效期）来识别缺失的信用卡数据。
- en: Carding
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 卡片欺诈
- en: This attack is used to validate a bulk of stolen or fraudulent credit card numbers.
    This is normally achieved by testing a bulk of cards on a credit card processing
    site.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 该攻击用于验证大量被盗或欺诈的信用卡号码。这通常通过在信用卡处理网站上测试大量卡片来实现。
- en: Cashing out
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 兑现
- en: Purchasing goods or services using stolen or fraudulent payment information.
    This attack is automated in order to enable purchases on several sites or in a
    short period of time (before the card is blocked).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 使用被盗或欺诈的支付信息购买商品或服务。此攻击是自动化的，旨在实现多个网站或在短时间内的购买（在卡被封锁之前）。
- en: Credential cracking
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 凭证破解
- en: Here, the attacker tries to validate username and password combinations by using
    brute-force or dictionary-based attacks for both values.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，攻击者尝试通过暴力破解或基于字典的攻击来验证用户名和密码组合。
- en: Credential stuffing
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 凭证填充
- en: This attack is aimed at validating a plurality of username and password combinations
    (normally obtained on the black market or from a previous data breach) against
    a given site.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 该攻击旨在验证大量用户名和密码组合（通常从黑市或以前的数据泄露中获得），并与给定网站进行比对。
- en: Denial of inventory
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拒绝库存
- en: 'A very interesting attack aimed at reducing the inventory of a product for
    a period of time by putting it on the cart, but without paying for it. This attack
    may have a very negative impact on the sales of an e-commerce page, but it can
    also be triggered to negatively impact the release of a given product or to promote
    a product. You can see an example of such an attack in the following screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常有趣的攻击，旨在通过将产品加入购物车但不付款，从而在一段时间内减少产品的库存。此攻击可能对电子商务页面的销售产生非常负面的影响，但它也可以被触发以负面影响某个产品的发布，或推动某个产品的销售。你可以在下面的截图中看到此类攻击的一个示例：
- en: '![Figure 17.3 – Denial of inventory attack'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图17.3 – 库存拒绝攻击'
- en: '](img/Figure_17.3_B16290.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.3_B16290.jpg)'
- en: Figure 17.3 – Denial of inventory attack
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.3 – 库存拒绝攻击
- en: It is important to highlight that this attack can also be carried out against
    services such as hotel room reservations, car rentals, and other services and
    products offered through e-commerce sites.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 需要强调的是，这种攻击也可以针对诸如酒店预订、汽车租赁和其他通过电子商务网站提供的服务和产品进行。
- en: DoS
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拒绝服务（DoS）
- en: This is probably the most common type of automated attack, which consists of
    exceeding the capacity of a web server to stay online by flooding the site with
    an overwhelming amount of requests, directly affecting the availability of the
    site and the services provided.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是最常见的自动化攻击类型，攻击的方式是通过大量请求淹没网站，超过Web服务器的承载能力，直接影响网站及其服务的可用性。
- en: Expediting
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加速
- en: 'This attack is aimed at bypassing a series of steps of a process to reach the
    final steps of the process faster, as illustrated in the following screenshot:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击旨在绕过一系列步骤，更快地到达流程的最后步骤，如下面的截图所示：
- en: '![Figure 17.4 – Example of expediting an account'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '![图17.4 – 加速账户示例'
- en: '](img/Figure_17.4_B16290.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.4_B16290.jpg)'
- en: Figure 17.4 – Example of expediting an account
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.4 – 加速账户示例
- en: As seen in the preceding screenshot, expediting could save an attacker time
    by reaching the last part of a given web process faster—for example, clicking
    **Next** on a web training form until the attacker reaches the final question.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所示的截图所示，加速可以通过更快地进入给定的Web流程的最后部分来为攻击者节省时间——例如，在Web培训表单中点击**下一步**，直到攻击者到达最后一个问题。
- en: Fingerprinting
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指纹识别
- en: This automated attack is about gathering publicly available information about
    a given website to have a better understanding of the site. Most of the time,
    it gathers data such as **HyperText Transfer Protocol** (**HTTP**) headers, error
    messages, **Uniform Resource Locator** (**URL**) paths, and so on. This attack
    can be performed without accessing the site by leveraging information indexed
    on search engines and other techniques, such as leveraging Google dorks.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这种自动化攻击旨在收集有关某个网站的公开可用信息，以便更好地理解该站点。大多数时候，它收集如**超文本传输协议**（**HTTP**）头、错误信息、**统一资源定位符**（**URL**）路径等数据。这种攻击可以通过利用搜索引擎上索引的信息以及其他技术，如利用Google
    dorks，在不访问网站的情况下进行。
- en: Footprinting
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 足迹扫描
- en: This attack can be considered a more intrusive type of fingerprinting. In this
    scenario, the attack is aimed at the application, and it tries to collect a plurality
    of data such as application parameters, values, process sequences, folder structure,
    and more. This can also be considered as a type of **application programming interface**
    (**API**) scanning, but it is important to highlight that this is only about discovery
    and not about exploiting the information discovered.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击可以被视为一种更具侵入性的指纹识别。在这种情况下，攻击针对应用程序，尝试收集多个数据，如应用程序参数、值、处理顺序、文件夹结构等。这也可以被视为一种**应用程序编程接口**（**API**）扫描，但需要强调的是，这仅仅是发现信息，而不是利用所发现的信息。
- en: Scalping
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 票贩子
- en: This automated attack is about monitoring the availability of a given product
    or service offered online and then automatically performing a purchase when a
    given condition is met (for example, buy all tickets to Lida's concert when availability
    = 10).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这种自动化攻击涉及监控在线提供的某个产品或服务的可用性，然后在满足特定条件时自动进行购买（例如，当可用数量=10时，购买Lida音乐会的所有票）。
- en: Sniping
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 抢购
- en: This attack is similar to scalping, with the difference being that this type
    of attack is triggered by time (last minute)—for example, place the last bet when
    time = (deadline -1).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击类似于票贩子攻击，不同之处在于这种攻击是由时间触发的（最后时刻）——例如，当时间=（截止日期-1）时，进行最后一轮下注。
- en: Scraping
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 抓取
- en: This automated attack is about gathering information from web pages and APIs
    either by accessing these as an authenticated user (using a compromised credential)
    or even doing this without posing as an authenticated user.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这种自动化攻击涉及通过访问网页和API来收集信息，可以通过认证用户身份（使用被盗凭证）来进行，甚至可以在没有认证用户身份的情况下进行。
- en: Skewing
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 偏移
- en: 'The objective of this attack is to manipulate site metrics (such as click count,
    visitors, and so on), polls, reviews, and likes in order to manipulate the real
    results and gain benefit from this (reputation, fame, followers, and more). You
    can see an example of skewing in the following screenshot:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这个攻击的目的是操控网站指标（如点击数、访客数等）、投票、评论和点赞，从而操纵真实的结果并从中获利（如声誉、名气、粉丝等）。你可以在以下截图中看到偏移的示例：
- en: '![Figure 17.5 – Example of skewing'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '![图17.5 – 偏移示例'
- en: '](img/Figure_17.5_B16290.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.5_B16290.jpg)'
- en: Figure 17.5 – Example of skewing
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.5 – 偏移示例
- en: As illustrated in the preceding screenshot, with this attack, the reputation
    of a given article could be manipulated.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，使用这种攻击方式，某篇文章的声誉可能会被操控。
- en: Spamming
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 垃圾邮件攻击
- en: This is a well-known attack consisting of the massive submission of emails,
    either for marketing or to distribute malware.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种著名的攻击方式，涉及大量发送电子邮件，无论是用于营销还是传播恶意软件。
- en: Token cracking
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 令牌破解
- en: This attack is aimed at discovering tokens such as coupon codes, discounts,
    and offers that are active on a given site and that can be used by the attacker.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这个攻击的目的是发现网站上激活的令牌，如优惠券代码、折扣和优惠，这些令牌可以被攻击者使用。
- en: Vulnerability scanning
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 漏洞扫描
- en: We already talked in depth about this automated attack, which consists of the
    identification of known vulnerabilities on a given website, API, or any other
    web resource.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经深入讨论了这种自动化攻击，主要是通过识别给定网站、API或其他网络资源中的已知漏洞来进行。
- en: Now, let's discover how to apply automation in cybersecurity using Python.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来探索如何使用Python在网络安全中应用自动化。
- en: Automation of cybersecurity tools using Python
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python自动化网络安全工具
- en: We started this chapter by showing all the benefits of automation. Now, it's
    time to see how we can leverage Python to achieve automation.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过展示自动化的所有好处来开始本章，现在是时候看看如何利用Python实现自动化了。
- en: Python is a super-intuitive language that is widely used for scripting and automation,
    and we can also leverage it to automate some cybersecurity-related tasks.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Python是一种超直观的语言，广泛用于脚本编写和自动化，我们也可以利用它来自动化一些与网络安全相关的任务。
- en: In fact, you can automate almost everything you want with Python, including
    automating well-known cybersecurity tools such as **Nessus**, **Nexpose**, **Shodan**,
    **Nmap**, **Metasploit**, **Sqlmap**, and more.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，你几乎可以用Python自动化你想做的任何事情，包括自动化一些知名的网络安全工具，如**Nessus**、**Nexpose**、**Shodan**、**Nmap**、**Metasploit**、**Sqlmap**等。
- en: However, in this section, we are going to discover other ways to automate cybersecurity
    tasks with Python.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在本节中，我们将探索使用Python自动化网络安全任务的其他方法。
- en: Local file search
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地文件搜索
- en: There are cases where you need to search for a given file or folder on a given
    workstation—for example, to achieve compliance, as part of an audit, or as part
    of a forensics investigation.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，你需要在给定工作站上搜索特定的文件或文件夹，例如，为了实现合规性、作为审计的一部分或作为取证调查的一部分。
- en: So, if you are an auditor, it would be great to have a script to look for those
    files and folders, and that can be easily achieved with Python. Let's discover
    how.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你是审计员，拥有一个脚本来查找这些文件和文件夹会非常有用，而这可以通过Python轻松实现。让我们来看看怎么做。
- en: 'Python is loaded by default in Kali Linux, so to run it, you only need to execute
    the following command:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Python默认安装在Kali Linux中，因此要运行它，只需执行以下命令：
- en: '[PRE0]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, as you can see in the following screenshot, `>>>` indicates that the Python
    interpreter is ready for your code:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，`>>>`表示Python解释器已准备好接收你的代码：
- en: '![Figure 17.6 – Python interpreter on Kali Linux'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![图17.6 – Kali Linux上的Python解释器'
- en: '](img/Figure_17.6_B16290.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.6_B16290.jpg)'
- en: Figure 17.6 – Python interpreter on Kali Linux
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.6 – Kali Linux上的Python解释器
- en: Now, let's use a function called `os.walk` that basically collects the filenames
    and directories by doing a top-down (or even bottom-up) walk of the directory
    tree.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用一个叫做`os.walk`的函数，它基本上通过自上而下（甚至自下而上）地遍历目录树来收集文件名和目录。
- en: 'For our example, let''s imagine we have a file structure like the one in the
    following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的例子，假设我们有如下截图中的文件结构：
- en: '![Figure 17.7 – File structure of the proposed example'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.7 – 提出的示例文件结构'
- en: '](img/Figure_17.7_B16290.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.7_B16290.jpg)'
- en: Figure 17.7 – File structure of the proposed example
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.7 – 提出的示例文件结构
- en: Now, let's see how easily we can automate the search of files and directories
    using `os.walk`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何轻松地使用 `os.walk` 来自动化搜索文件和目录。
- en: 'Let''s start by going back to the Python session that we left open and put
    the following code there:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从回到我们之前打开的 Python 会话开始，并在那里输入以下代码：
- en: '[PRE1]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The Python interpreter uses indentation, so make sure your code includes the
    same indentation as shown in the preceding code snippet.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Python 解释器使用缩进，因此确保你的代码与前面的代码片段保持相同的缩进。
- en: 'As illustrated in the following screenshot, the code outputs all the files
    (top-down) located under our current directory tree:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，代码输出了当前目录树下所有的文件（从上到下）：
- en: '![Figure 17.8 – Output of code with the os.walk function'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.8 – 使用 os.walk 函数的代码输出'
- en: '](img/Figure_17.8_B16290.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.8_B16290.jpg)'
- en: Figure 17.8 – Output of code with the os.walk function
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.8 – 使用 os.walk 函数的代码输出
- en: In this example, we only printed the filename, but you can also print other
    parameters such as `root` (directories) and `dirs` (subdirectories).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们只打印了文件名，但你也可以打印其他参数，如 `root`（目录）和 `dirs`（子目录）。
- en: Tip
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: 'If you have experience with Python, then you may find this example extremely
    basic, and indeed that was the idea: to illustrate the concept with a very basic
    example for readers who are not experienced with Python.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有 Python 使用经验，可能会觉得这个例子非常基础，事实上，正是为了这个目的：用一个非常基础的例子来向那些没有 Python 经验的读者阐明这个概念。
- en: Additionally, you can expand on that example by using other functions such as
    `os.path` to show the path of a file, or you could even add a couple of programing
    lines to only show you a given file type. Here, your imagination is the only limit!
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以通过使用其他函数（如 `os.path`）扩展该例子，显示文件的路径，或者甚至添加几行程序代码，只显示某种特定类型的文件。在这里，唯一的限制就是你的想象力！
- en: Basic forensics
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基础取证
- en: You can also automate the gathering of metadata from files with simple Python
    code.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过简单的 Python 代码自动收集文件的元数据。
- en: 'To achieve that task, we will use the `os` library. In this example, we will
    use `os.stat` because it provides a lot of useful metadata available to the OS,
    including the following:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这个任务，我们将使用 `os` 库。在这个例子中，我们使用 `os.stat`，因为它提供了许多操作系统可以使用的有用元数据，包括以下内容：
- en: The last time the file was modified (`st_mtime`)
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件最后修改时间（`st_mtime`）
- en: The last time the file was accessed (`st_atime`)
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件最后访问时间（`st_atime`）
- en: The creation time or the last time metadata was changed (`st_ctime`)
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建时间或最后一次元数据更改时间（`st_ctime`）
- en: The user `st_uid`)
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户 `st_uid`）
- en: The group ID of the owner (`st_gid`)
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件所有者的组 ID（`st_gid`）
- en: The file size (`st_size`)
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件大小（`st_size`）
- en: Let's see an example.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子。
- en: 'Go back to Python and write the following lines of code:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 回到 Python，并输入以下代码行：
- en: '[PRE2]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output should give you all the information just described (creation date,
    file owner, and so on), as illustrated in the following screenshot:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该会显示所有前述的信息（创建日期、文件所有者等等），如下图所示：
- en: '![Figure 17.9 – Metadata obtained from file with os.stat'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.9 – 使用 os.stat 获取的文件元数据'
- en: '](img/Figure_17.9_B16290.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.9_B16290.jpg)'
- en: Figure 17.9 – Metadata obtained from file with os.stat
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.9 – 使用 os.stat 获取的文件元数据
- en: 'If you want to discover more about this library, visit the following web pages:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于这个库的信息，可以访问以下网页：
- en: '[https://docs.python.org/3/library/os.html](https://docs.python.org/3/library/os.html)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.python.org/3/library/os.html](https://docs.python.org/3/library/os.html)'
- en: '[https://docs.python.org/3/library/stat.html](https://docs.python.org/3/library/stat.html
    )'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.python.org/3/library/stat.html](https://docs.python.org/3/library/stat.html)'
- en: Tip
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提示
- en: Is the format of the dates not familiar to you? Don't worry—you can use some
    libraries such as `time` or `datetime` to convert the string from Unix time to
    a human-readable time.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些日期格式对你来说不熟悉吗？别担心——你可以使用像 `time` 或 `datetime` 这样的库将 Unix 时间转换为人类可读的时间。
- en: Many other cool libraries can be used to harvest information from files, as
    discussed next.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 许多其他酷炫的库可以用来从文件中获取信息，接下来会讨论这些。
- en: Pillow
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Pillow
- en: '`Pillow` is an additional Python library that allows image manipulation. In
    our case, we can use it to gather metadata from the image, such as the **Global
    Positioning System** (**GPS**) coordinates of the location where the picture was
    taken.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`Pillow`是一个额外的 Python 库，允许对图像进行处理。在我们的案例中，我们可以用它从图片中获取元数据，例如拍摄地点的**全球定位系统**（**GPS**）坐标。'
- en: Gathering metadata from PDF and Word files with Python
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Python 收集 PDF 和 Word 文件的元数据
- en: In the case of `PDFDocument`, `PDFParser`, `PyPDF2`, and `PdfFileReader`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在`PDFDocument`、`PDFParser`、`PyPDF2`和`PdfFileReader`的情况下。
- en: For Word documents, the most famous library is `Python-Docx`, which allows you
    to harvest more than 14 attributes from a Word document.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Word 文档，最著名的库是`Python-Docx`，它可以从 Word 文档中提取超过 14 个属性。
- en: Web scraping
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网页抓取
- en: Another common way to use Python for automation is through web scraping. So,
    let's do an overview of the most common libraries, packages, and modules used
    to automate web scraping with Python.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种常见的使用 Python 进行自动化的方法是通过网页抓取。那么，接下来我们来概述一下最常用的库、包和模块，看看如何使用 Python 来自动化网页抓取。
- en: Using pip
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 pip
- en: If you are going to play around with Python, then is highly recommended that
    you install `pip`. `pip` is the package manager for Python, and it can be installed
    to be used on the command line to download and install Python packages and their
    requisite dependencies.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算玩 Python，那么强烈推荐你安装`pip`。`pip`是 Python 的包管理器，可以安装在命令行中使用，来下载和安装 Python 包及其所需的依赖项。
- en: 'Installation on Kali Linux is very simple, and it can be achieved with the
    following commands:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Kali Linux 上的安装非常简单，可以通过以下命令完成：
- en: '[PRE3]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, to verify the version installed, you can use the following command:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要验证安装的版本，可以使用以下命令：
- en: '[PRE4]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As seen in the following screenshot, we successfully installed `pip3` on Kali
    Linux:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，我们在 Kali Linux 上成功安装了`pip3`：
- en: '![Figure 17.10 – Displaying pip3 version on Kali Linux'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.10 – 在 Kali Linux 上显示 pip3 版本'
- en: '](img/Figure_17.10_B16290.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.10_B16290.jpg)'
- en: Figure 17.10 – Displaying pip3 version on Kali Linux
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.10 – 在 Kali Linux 上显示 pip3 版本
- en: Now that we have the environment set up, let's continue with our overview of
    some of the most used and famous libraries and modules that you can use for Python
    automation.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置好了环境，接下来继续概述一些你可以用来进行 Python 自动化的最常用和最著名的库与模块。
- en: Beautiful Soup
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Beautiful Soup
- en: When it comes to cybersecurity, `BeautifulSoup` is a must-have Python library
    to parse **HyperText Markup Language** (**HTML**) and **Extensible Markup Language**
    (**XML**) files. In fact, you will see that this library is used in almost all
    Python code in terms of web scraping.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络安全领域，`BeautifulSoup`是一个必备的 Python 库，用于解析**超文本标记语言**（**HTML**）和**可扩展标记语言**（**XML**）文件。事实上，你会发现几乎所有关于网页抓取的
    Python 代码中都使用了这个库。
- en: The beauty of `BeautifulSoup` lies in all the options it gives you to extract
    only the data you need in an easy and clean way. Let me explain to you how this
    works.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`BeautifulSoup`的魅力在于它提供了多种选项，能够以一种简单清晰的方式提取你需要的数据。让我来向你解释一下它是如何工作的。'
- en: '*First, let''s be clear on one thing*—*an HTML file is not only a file but
    a juicy source of information and with Beautiful Soup, you can extract all that
    juice.*'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '*首先，我们要明确一点*——*HTML 文件不仅仅是一个文件，而是一个充满信息的宝贵源泉，通过 Beautiful Soup，你可以提取所有这些信息。*'
- en: 'The following screenshot depicts information that can be parsed using Beautiful
    Soup:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了可以使用 Beautiful Soup 解析的信息：
- en: '![Figure 17.11 – Information that can be parsed with Beautiful Soup'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.11 – 可以通过 Beautiful Soup 解析的信息'
- en: '](img/Figure_17.11_B16290.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.11_B16290.jpg)'
- en: Figure 17.11 – Information that can be parsed with Beautiful Soup
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.11 – 可以通过 Beautiful Soup 解析的信息
- en: As shown in the preceding screenshot, there is a lot of information that can
    be parsed out of an HTML file, and `BeautifulSoup` makes this easier for us.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所示截图，HTML 文件中有很多信息可以被解析，`BeautifulSoup`使我们更容易提取这些信息。
- en: Now, let's see how you can also leverage Python to automate some network security
    tasks.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看你如何也可以利用 Python 来自动化一些网络安全任务。
- en: Network security automation
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络安全自动化
- en: You can find countless Python scripts to automate some network security tasks,
    and they vary depending on the tools and systems that you have in place.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以找到无数的 Python 脚本来自动化一些网络安全任务，它们的具体内容取决于你所使用的工具和系统。
- en: However, you can also create your own, so let's have an overview of a very famous
    tool that you can leverage to automate some tasks regarding the capture and analysis
    of network traffic—the famous **Scapy**.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你也可以自己创建一个，因此让我们概述一个非常著名的工具，它可以帮助你自动化一些关于捕获和分析网络流量的任务——著名的**Scapy**。
- en: Scapy
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Scapy
- en: This is a great tool that you can leverage on your Python code (interactively
    or as a library) to manage packets gathered from network-sniffing software such
    as Wireshark.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很棒的工具，你可以在Python代码中使用它（无论是交互式还是作为库）来管理从网络嗅探软件（如Wireshark）收集的数据包。
- en: 'To install it, you can leverage the following command:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装它，你可以使用以下命令：
- en: '[PRE5]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then, you can confirm `scapy` is installed with the following command:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以通过以下命令确认`scapy`已安装：
- en: '[PRE6]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If the installation was successful, you should see something like this:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装成功，你应该看到类似下面的内容：
- en: '![Figure 17.12 – Scapy'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '![图17.12 – Scapy'
- en: '](img/Figure_17.12_B16290.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.12_B16290.jpg)'
- en: Figure 17.12 – Scapy
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图17.12 – Scapy
- en: There is a lot of cool things you can do with Scapy, such as sending modified
    **Internet Control Message Protocol** (**ICMP**) packets, port scanning, reading
    **packet capture (PCAP)** files, or even capturing packets (just like you do with
    Wireshark).
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Scapy，你可以做很多酷炫的事情，比如发送修改过的**互联网控制消息协议**（**ICMP**）数据包、端口扫描、读取**数据包捕获（PCAP）**文件，甚至像Wireshark一样捕获数据包。
- en: Note
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A lot of people get confused between `scapy` and `scrapy`, as both are used
    for security on Python. However, while `scapy` is mostly used for packet manipulation,
    `scrapy` is used for web scraping for Python. Similar, but not the same!
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 很多人在`scapy`和`scrapy`之间感到困惑，因为这两个工具都用于Python的安全。然而，虽然`scapy`主要用于数据包操作，`scrapy`则用于Python的网页抓取。相似，但不相同！
- en: Now, let's discover how we can leverage the powerful **Raspberry Pi** to automate
    cybersecurity tasks.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看如何利用强大的**树莓派**来自动化网络安全任务。
- en: Cybersecurity automation with the Raspberry Pi
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用树莓派进行网络安全自动化
- en: 'In [*Chapter 10*](B16290_10_Final_JC_ePub.xhtml#_idTextAnchor231), *Applying
    IoT Security*, we covered a lot of cool cybersecurity projects that you can do
    with the Raspberry Pi, including the following:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第10章*](B16290_10_Final_JC_ePub.xhtml#_idTextAnchor231)，*应用物联网安全*中，我们介绍了很多可以用树莓派做的酷炫网络安全项目，包括以下内容：
- en: Detection of a rogue access point
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测恶意接入点
- en: Creating an **Intrusion Detection System** (**ISD**) and a firewall with the
    Raspberry Pi
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用树莓派创建**入侵检测系统**（**IDS**）和防火墙
- en: Creating a machine to safely copy information from a **Universal Serial Bus**
    (**USB**) device
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个安全复制**统一串行总线**（**USB**）设备信息的机器
- en: Creating a honeypot
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建蜜罐
- en: Creating a network monitoring device
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个网络监控设备
- en: Creating an ad blocker
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建广告拦截器
- en: And even creating a system to detect a rogue Raspberry Pi in your network and
    how to disable it
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 甚至可以创建一个系统来检测网络中不明的树莓派设备，并学习如何禁用它
- en: Now, in this section, we will do an overview of Raspberry Pi projects that will
    help you to automate some cybersecurity tasks.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在本节中，我们将概述一些可以帮助你自动化网络安全任务的树莓派项目。
- en: Automating threat intelligence gathering with a Fail2ban honeypot on a Raspberry
    Pi
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用树莓派的Fail2ban蜜罐自动化威胁情报收集
- en: There are a lot of tools and techniques to blacklist **Internet Protocol** (**IP**)
    addresses. In fact, you can even build your own using a Raspberry Pi by installing
    Pi-hole (as mentioned in [*Chapter 10*](B16290_10_Final_JC_ePub.xhtml#_idTextAnchor231),
    *Applying IoT Security*), but we are not going to talk about those systems here
    but rather about how you can leverage an unexpensive Raspberry Pi to gather data
    about attackers and use that data to better protect your infrastructure.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多工具和技术可以用来将**互联网协议**（**IP**）地址列入黑名单。事实上，你甚至可以通过在树莓派上安装Pi-hole（如[*第10章*](B16290_10_Final_JC_ePub.xhtml#_idTextAnchor231)，*应用物联网安全*中提到的那样）来自己创建，但我们这里不讨论这些系统，而是讲述如何利用一台便宜的树莓派收集攻击者的数据，并利用这些数据来更好地保护你的基础设施。
- en: Note
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: These solutions based on low-cost hardware are not designed to replace robust
    enterprise-grade devices. Instead, they are designed as a great tool to create
    prototypes and **proof of concepts** (**PoCs**), which are an essential step in
    doing research, which in the end is a must-have skill for a master in cybersecurity.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 这些基于低成本硬件的解决方案并不是为了取代强大的企业级设备。相反，它们是为了作为一个很棒的工具，用于创建原型和**概念验证**（**PoC**），这是进行研究的一个重要步骤，最终这也是网络安全大师必备的技能。
- en: For this task, we will leverage a free open source software called **Fail2ban**.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这个任务，我们将利用一款免费的开源软件，名为 **Fail2ban**。
- en: Fail2ban works by analyzing the system log files (such as `/var/log/apache/error_log`)
    to look for malicious login attempts, brute-force attacks, and other exploits
    against our system.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: Fail2ban 通过分析系统日志文件（如 `/var/log/apache/error_log`）来寻找恶意登录尝试、暴力破解攻击和其他针对系统的攻击。
- en: However, Fail2ban was designed to run on a single system, so what we will do
    is to leverage the power and low cost of the Raspberry Pi, set it up as an exposed
    honeypot system to gather threat intelligence about attackers, and then use that
    information to enhance the blacklists used on our defensive security systems.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Fail2ban 设计时是针对单一系统运行的，因此我们将利用 Raspberry Pi 的强大性能和低成本，将其设置为一个暴露的蜜罐系统，收集有关攻击者的威胁情报，并利用这些信息来增强我们防御性安全系统中的黑名单。
- en: 'The following screenshot illustrates the proposed architecture to leverage
    Fail2ban on the Raspberry Pi to automate intelligence gathering:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了提议的架构，旨在利用 Fail2ban 在 Raspberry Pi 上自动化情报收集：
- en: '![Figure 17.13 – Proposed solution architecture with Fail2ban on the Raspberry
    Pi'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.13 – 在 Raspberry Pi 上使用 Fail2ban 的提议解决方案架构'
- en: '](img/Figure_17.13_B16290.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.13_B16290.jpg)'
- en: Figure 17.13 – Proposed solution architecture with Fail2ban on the Raspberry
    Pi
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.13 – 在 Raspberry Pi 上使用 Fail2ban 的提议解决方案架构
- en: You can follow a tutorial created by [pimylifeup.com](http://pimylifeup.com)
    about how to install Fail2ban on the Raspberry Pi at [https://pimylifeup.com/raspberry-pi-fail2ban/](https://pimylifeup.com/raspberry-pi-fail2ban/).
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以参考 [pimylifeup.com](http://pimylifeup.com) 上创建的教程，了解如何在 Raspberry Pi 上安装
    Fail2ban，网址是：[https://pimylifeup.com/raspberry-pi-fail2ban/](https://pimylifeup.com/raspberry-pi-fail2ban/)。
- en: 'You can also set up Fail2ban directly on a Unix server by following this guide:
    [https://www.redhat.com/sysadmin/protect-systems-fail2ban](https://www.redhat.com/sysadmin/protect-systems-fail2ban).'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过遵循这份指南直接在 Unix 服务器上设置 Fail2ban：[https://www.redhat.com/sysadmin/protect-systems-fail2ban](https://www.redhat.com/sysadmin/protect-systems-fail2ban)。
- en: Alternatively, you can visit their official site at [https://www.fail2ban.org](https://www.fail2ban.org).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以访问他们的官方网站：[https://www.fail2ban.org](https://www.fail2ban.org)。
- en: Tip
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Another cool feature of Fail2ban is that you can configure it to notify you
    as soon as an attack is detected so that you can grab the attacker's data and
    input it into your systems in no time.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Fail2ban 的另一个酷功能是，你可以配置它在检测到攻击时立即通知你，这样你就能快速获取攻击者的数据，并将其输入到你的系统中。
- en: Now, let's look at another cool project to automate internet monitoring with
    our little friend, the Raspberry Pi.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看另一个很酷的项目，使用我们的好朋友 Raspberry Pi 来自动化互联网监控。
- en: Automated internet monitoring system with the Raspberry Pi
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于 Raspberry Pi 的自动化互联网监控系统
- en: Imagine you have a remote location with Wi-Fi for your clients, and there are
    a lot of things that may impact that internet connection, from being slow to offering
    no internet connection at all.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个远程位置，提供 Wi-Fi 服务给你的客户，而这个互联网连接可能会受到多种因素的影响，从速度变慢到完全没有连接。
- en: So, let's review a couple of projects in which you can use the Raspberry Pi
    to automate the detection of those issues and inform you so that you can take
    action before your clients get impacted.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们回顾几个项目，看看如何利用 Raspberry Pi 自动化检测这些问题并通知你，从而在客户受到影响之前采取行动。
- en: Automated internet monitor with a Raspberry Pi
  id: totrans-230
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于 Raspberry Pi 的自动化互联网监控
- en: 'There is a simple solution in which you use a Raspberry Pi with simple code
    to ping one of the devices on an external location to determine if they have an
    active internet connection. Then, you can leverage the Raspberry Pi''s capabilities
    to alert you using a **light-emitting diode** (**LED**), a sound, or a more subtle
    alternative such as alerting you through a dashboard, email, or even a message
    to your social media account, as illustrated in the following screenshot:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个简单的解决方案，你可以使用 Raspberry Pi 和简单的代码来 Ping 外部位置的一个设备，以确定它们是否有活动的互联网连接。然后，你可以利用
    Raspberry Pi 的功能，通过 **发光二极管** (**LED**)、声音或更为隐蔽的方式（如通过仪表盘、电子邮件或社交媒体消息）提醒你，以下截图中展示了这一过程：
- en: '![Figure 17.14 – Architecture of an automated internet monitoring system'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.14 – 自动化互联网监控系统架构'
- en: '](img/Figure_17.14_B16290.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.14_B16290.jpg)'
- en: Figure 17.14 – Architecture of an automated internet monitoring system
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.14 – 自动化互联网监控系统架构
- en: If you want to implement this internet monitoring solution, then you can follow
    a very detailed step-by-step installation published by the maker called *talk2bruce*
    at [https://www.instructables.com/Raspberry-Pi-Internet-Monitor/](https://www.instructables.com/Raspberry-Pi-Internet-Monitor/).
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想实现这个互联网监控解决方案，你可以参考由制作人 *talk2bruce* 发布的非常详细的逐步安装教程，链接：[https://www.instructables.com/Raspberry-Pi-Internet-Monitor/](https://www.instructables.com/Raspberry-Pi-Internet-Monitor/)。
- en: Now, let's review another automation aimed to control not just the connection
    but the speed of the internet.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回顾另一种自动化方法，旨在控制不仅是连接，还有互联网的速度。
- en: Automated internet speed monitor
  id: totrans-237
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动化互联网速度监控
- en: As mentioned, there may be cases in which the internet may be working but is
    slow due to **internet service provider** (**ISP**) problems, issues with the
    router, issues with cables, and more. Regardless of the source of the problem,
    you need to be informed about those issues so that you can take action to resolve
    them (remember—availability issues are also your responsibility).
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，可能会有一些情况下，互联网连接正常但速度较慢，这可能是由于 **互联网服务提供商**（**ISP**）的问题、路由器问题、线路问题等原因。不管问题的来源是什么，你需要及时了解这些问题，以便采取措施加以解决（记住——可用性问题也是你的责任）。
- en: Additionally, the Raspberry Pi also allows you to record a history of your internet
    connectivity in your database so that you can use all that data for further analysis
    (for example, find patterns to discover the root cause of an issue).
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Raspberry Pi 还允许你在数据库中记录互联网连接历史，这样你可以利用这些数据进行进一步的分析（例如，找出模式来发现问题的根本原因）。
- en: 'There is a tutorial about how you can leverage a third-party API from Ookla
    ([https://www.speedtest.net/apps/cli](https://www.speedtest.net/apps/cli)) to
    monitor the internet speed on the Raspberry Pi: [https://pimylifeup.com/raspberry-pi-internet-speed-monitor/](https://pimylifeup.com/raspberry-pi-internet-speed-monitor/).'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个教程，介绍了如何利用来自 Ookla 的第三方 API ([https://www.speedtest.net/apps/cli](https://www.speedtest.net/apps/cli))
    来监控 Raspberry Pi 上的互联网速度：[https://pimylifeup.com/raspberry-pi-internet-speed-monitor/](https://pimylifeup.com/raspberry-pi-internet-speed-monitor/)。
- en: Those are some examples of automation with the Raspberry Pi, but here, the sky
    is the limit.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是使用 Raspberry Pi 进行自动化的一些例子，但在这里，天空才是极限。
- en: And remember—if you are an expert on the Raspberry Pi, send me a link to your
    projects for review and we can even include them in upcoming versions of the book.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 记住——如果你是 Raspberry Pi 的专家，可以把你的项目链接发给我进行审阅，我们甚至可以在未来版本的书中包含它们。
- en: Summary
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We did a comprehensive overview of the top 21 types of automated attacks that
    are currently being used by attackers so that you can do an assessment of your
    organization to determine which of those attacks are a possible threat to your
    infrastructure and organization.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对目前攻击者使用的 21 种主要自动化攻击进行了全面的概述，以便你可以对你的组织进行评估，确定哪些攻击可能对你的基础设施和组织构成威胁。
- en: But we also learned that we can take advantage of automation, so we reviewed
    some Python libraries that you can leverage to perform automation in tasks related
    to forensics, web scraping, and network security.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们也学到了如何利用自动化，因此我们回顾了一些 Python 库，你可以利用它们在取证、网页抓取和网络安全等任务中进行自动化处理。
- en: And before closing the chapter, we learned how to take advantage of the famous
    Raspberry Pi to create some very cool cybersecurity gadgets that enable us to
    automate some tasks such as gathering malicious addresses to include in our blacklist
    and two different methods to test the speed and stability of an internet connection.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在结束本章之前，我们学会了如何利用著名的 Raspberry Pi 创建一些非常酷的网络安全小工具，这些工具能够帮助我们自动化一些任务，例如收集恶意地址以加入黑名单，以及两种不同的方法来测试互联网连接的速度和稳定性。
- en: I hope this last part inspires you to do some extra testing and research to
    develop your own cybersecurity gadgets and prototypes like a master!
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望最后这一部分能够激发你进行一些额外的测试和研究，开发你自己的网络安全小工具和原型，像一个大师一样！
- en: Further reading
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: If you want to know more about the Raspberry Pi, then you can visit the manufacturer's
    website, which is a great source of resources including tutorials, projects, and
    more.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于 Raspberry Pi 的信息，可以访问制造商的网站，这里有丰富的资源，包括教程、项目等。
- en: Also, you can find information there about all the different versions of the
    Raspberry Pi available, to determine which one is more suitable for your project.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以在那里找到关于 Raspberry Pi 不同版本的信息，以确定哪一种更适合你的项目。
- en: 'Here''s the link to the site:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这是网站的链接：
- en: '[https://www.raspberrypi.org/](https://www.raspberrypi.org/)'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.raspberrypi.org/](https://www.raspberrypi.org/)'
