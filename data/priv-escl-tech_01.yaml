- en: '*Chapter 3*: Gaining Access (Exploitation)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第3章*：获取访问权限（利用）'
- en: Before we can get our hands dirty with privilege escalation on both Windows
    and Linux, we need to explore the process of **exploitation** and the various
    *exploitation techniques* that can be leveraged, including how these techniques
    will affect the privilege escalation process.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入了解Windows和Linux的权限提升之前，我们需要探索**利用**过程以及可以利用的各种*利用技术*，包括这些技术如何影响权限提升过程。
- en: Exploitation is a unique phase of the **penetration testing life cycle**. This
    is because it involves actively engaging with the target to determine or discover
    flaws or vulnerabilities that can be exploited in order to gain access.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 利用是**渗透测试生命周期**中的一个独特阶段。因为它涉及主动与目标进行交互，以确定或发现可以被利用的缺陷或漏洞，从而获取访问权限。
- en: Exploitation sets the scene for a successful penetration test and validates
    how far you will be able to get on a target system or network. Choosing the correct
    *attack vector* and *exploitation framework* or exploit is critical for gaining
    and maintaining access to a target system.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 利用为成功的渗透测试奠定了基础，并验证你能够在目标系统或网络上进行的操作范围。选择正确的*攻击向量*和*利用框架*或利用手段对于获取和保持目标系统的访问至关重要。
- en: In this chapter, you will learn about the various ways of exploiting both Windows
    and Linux systems and how to leverage exploitation frameworks such as **Metasploit**.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解利用Windows和Linux系统的各种方法，以及如何利用像**Metasploit**这样的利用框架。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涉及以下主题：
- en: Setting up Metasploit
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Metasploit
- en: Information gathering and footprinting
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信息收集和足迹分析
- en: Gaining access
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取访问权限
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To follow along with the demonstrations in this chapter, you need to ensure
    that you meet the following technical requirements:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟随本章中的演示，你需要确保满足以下技术要求：
- en: A basic understanding of the *Linux Terminal commands*
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对*Linux终端命令*有基本的了解
- en: Some familiarity with information gathering and *footprinting* techniques
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对信息收集和*足迹*技术有一定的了解
- en: 'You can view this chapter''s code in action here: [https://bit.ly/3m5qIaI](https://bit.ly/3m5qIaI)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里查看本章代码的实际操作：[https://bit.ly/3m5qIaI](https://bit.ly/3m5qIaI)
- en: Setting up Metasploit
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Metasploit
- en: The **Metasploit framework** is an open source exploitation framework developed
    by H.D. Moore. It was originally written in Perl and later rewritten in Ruby.
    It is the de facto exploitation framework adopted by security professionals worldwide.
    It was acquired by *Rapid7*, in 2009, and is actively maintained and supported.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**Metasploit框架**是由H.D. Moore开发的开源利用框架。最初是用Perl编写的，后来被用Ruby重写。它是全球安全专家广泛采用的事实标准利用框架。它于2009年被*Rapid7*收购，并且得到了持续的维护和支持。'
- en: It was designed to streamline and enhance the penetration testing process. It
    does this by offering compartmentalized functionality in the form of modules based
    on various phases of the penetration testing methodology.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 它的设计目的是简化和增强渗透测试过程。通过提供基于渗透测试方法不同阶段的模块化功能，它达到了这一目的。
- en: Metasploit can be used in almost every stage of the penetration testing life
    cycle, from information gathering to exploitation and privilege escalation. This
    robust functionality is what makes Metasploit an essential framework to learn
    for any penetration tester.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit可以在渗透测试生命周期的几乎每个阶段使用，从信息收集到利用和权限提升。正是这种强大的功能使得Metasploit成为任何渗透测试者必须学习的框架。
- en: 'Metasploit has two versions available that offer varying functionality and
    features:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit有两个版本，提供不同的功能和特性：
- en: '**Metasploit Pro**'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Metasploit专业版**'
- en: '**Metasploit Community**'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Metasploit社区版**'
- en: During the course of this book, we will be utilizing the Metasploit framework
    version of Metasploit.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的过程中，我们将使用Metasploit框架版本的Metasploit。
- en: The Metasploit structure
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Metasploit结构
- en: 'Before we can begin setting up and using the Metasploit framework, first, we
    need to understand exactly how it is structured. *Figure 3.1* outlines the components
    that make up the Metasploit framework and provides a high-level overview of how
    these components interact with each other:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始设置和使用Metasploit框架之前，首先需要了解它的具体结构。*图3.1*概述了构成Metasploit框架的组件，并提供了这些组件如何相互作用的高层次概述：
- en: '![Figure 3.1 – The Metasploit architecture'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.1 – Metasploit架构'
- en: '](Images/B17389_03_001.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_001.jpg)'
- en: Figure 3.1 – The Metasploit architecture
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 – Metasploit架构
- en: Given the subject matter of this book, we will not be taking a detailed look
    at how each of these components works and what their purpose is. Instead, we will
    focus on the most important element of the Metasploit framework in relation to
    exploitation, that is, the *modules*.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于本书的主题，我们不会详细探讨每个组件的工作原理和目的。相反，我们将重点关注与漏洞利用相关的 Metasploit 框架中最重要的元素——即 *模块*。
- en: Important note
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The Metasploit framework comes prepackaged. It is installed on *Kali Linux*
    and is also available in the official Kali repositories. As a result, we will
    not be discussing how to install Metasploit manually.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit 框架是预先打包的。它已安装在 *Kali Linux* 上，也可以在官方的 Kali 仓库中找到。因此，我们不会讨论如何手动安装
    Metasploit。
- en: 'The best way to understand how Metasploit modules are structured is to browse
    through the directory on Kali Linux. The default Metasploit framework directory
    is located under **/usr/share/metasploit-framework**, and you can list the contents
    of the directory by running the following command:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 理解 Metasploit 模块如何结构化的最佳方法是浏览 Kali Linux 上的目录。默认的 Metasploit 框架目录位于 **/usr/share/metasploit-framework**，你可以通过运行以下命令列出该目录的内容：
- en: ls -al /usr/share/metasploit-framework
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: ls -al /usr/share/metasploit-framework
- en: '*Figure 3.2* outlines the contents of the default Metasploit framework directory
    on Kali Linux. As you can see, the directory contains binaries and directories
    based on their functionality. For example, we can see the **msfdb** binary that
    is responsible for interacting with the Metasploit framework database, and we
    can also see that the modules have been sorted into their own directory:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 3.2* 概述了 Kali Linux 上默认 Metasploit 框架目录的内容。如图所示，该目录包含了根据功能分类的二进制文件和目录。例如，我们可以看到
    **msfdb** 二进制文件，它负责与 Metasploit 框架数据库进行交互；同时也可以看到，模块已经被整理到各自的目录中：'
- en: '![Figure 3.2 – Layout of the Metasploit directory'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.2 – Metasploit 目录布局'
- en: '](Images/B17389_03_002.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_002.jpg)'
- en: Figure 3.2 – Layout of the Metasploit directory
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – Metasploit 目录布局
- en: In the next section, we will take a look at how modules are further organized
    based on their type.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看看如何根据模块类型进一步组织这些模块。
- en: The Metasploit modules
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Metasploit 模块
- en: 'Given the compartmentalized nature of the framework, Metasploit utilizes modules
    to segregate functionality. It does this by categorizing modules based on their
    specific functionality in respect to the role they play in the penetration testing
    life cycle. You can access this by viewing the contents of the module''s directory
    under **/usr/share/metasploit/framework/modules**, as shown in *Figure 3.3*:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 由于框架的模块化特性，Metasploit 使用模块来划分功能。它通过根据模块在渗透测试生命周期中所扮演的角色，按照特定功能对模块进行分类。你可以通过查看
    **/usr/share/metasploit/framework/modules** 目录中的内容来访问这些模块，如 *图 3.3* 所示：
- en: '![Figure 3.3 – The Metasploit module directory'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.3 – Metasploit 模块目录'
- en: '](Images/B17389_03_003.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_003.jpg)'
- en: Figure 3.3 – The Metasploit module directory
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – Metasploit 模块目录
- en: 'The modules and their functionality are sorted as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 模块及其功能按以下方式分类：
- en: '**Exploits**: These are pieces of code whose function is to exploit/leverage
    particular vulnerabilities within a system or program. Metasploit sorts these
    exploits further based on the target operating system, architecture, and service
    version.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漏洞利用**：这些是利用/杠杆化系统或程序中特定漏洞的代码片段。Metasploit 根据目标操作系统、架构和服务版本进一步对这些漏洞利用进行分类。'
- en: '**Payloads**: These are pieces of code that are typically bundled with an exploit
    and are used to execute additional commands and instructions after successful
    exploitation. For example, most remote access exploits utilize payloads to spawn
    reverse shells that grant direct access to attackers.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**载荷**：这些是通常与漏洞利用捆绑在一起的代码，用于在成功利用后执行额外的命令和指令。例如，大多数远程访问漏洞利用都使用载荷来生成反向 shell，从而为攻击者提供直接访问权限。'
- en: '**Auxiliary modules**: These modules are used to perform a specific function,
    typically involving information gathering, fuzzing, and scanning for vulnerabilities.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**辅助模块**：这些模块用于执行特定功能，通常涉及信息收集、模糊测试和漏洞扫描。'
- en: '**Encoders**: Encoders are used to encode and obfuscate payloads in order to
    avoid antivirus and signature-based detection. Encoders are also used to generate
    various types of payloads for specific use cases.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编码器**：编码器用于对载荷进行编码和混淆，以避免被防病毒软件和基于签名的检测识别。编码器还用于为特定用途生成各种类型的载荷。'
- en: '**Post-exploitation**: Post-exploitation modules are used after a successful
    exploitation to further increase control over the target system. Typically, they
    are used to perform the following tasks:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后渗透**：后渗透模块在成功利用目标后使用，以进一步增强对目标系统的控制。通常，它们用于执行以下任务：'
- en: a) Privilege escalation
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 提升权限
- en: b) Credential harvesting and dumping hashes
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 凭证收集与哈希值提取
- en: c) Capturing user input on the target system
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 捕获目标系统上的用户输入
- en: d) Executing processes and binaries
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 执行进程和二进制文件
- en: e) Setting up persistence
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e) 设置持久性
- en: Now that we have familiarized ourselves with the various modules available in
    the Metasploit framework, we can begin setting up and configuring the Metasploit
    framework to use.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经熟悉了 Metasploit 框架中可用的各种模块，可以开始设置和配置 Metasploit 框架以供使用。
- en: Setting up the Metasploit framework
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Metasploit 框架
- en: 'To begin using the Metasploit framework, we will need to create and initialize
    the **Metasploit database**. You will need to perform the following steps:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 Metasploit 框架，我们需要创建并初始化 **Metasploit 数据库**。你需要执行以下步骤：
- en: 'Metasploit utilizes a *PostgreSQL* database backend for storage. First, we
    will need to ensure that the PostgreSQL service is running by inputting the following
    command:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Metasploit 使用 *PostgreSQL* 数据库作为存储后端。首先，我们需要确保 PostgreSQL 服务正在运行，可以通过输入以下命令来检查：
- en: '**sudo systemctl start postgresql**'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo systemctl start postgresql**'
- en: 'We can now initialize the Metasploit database by running the following command
    with root privileges:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以通过运行以下命令并使用 root 权限来初始化 Metasploit 数据库：
- en: '**sudo msfdb init**'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo msfdb init**'
- en: The initialization process will create the **msf** database and add the **msf_test**
    role to the database configuration.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 初始化过程将创建 **msf** 数据库，并将 **msf_test** 角色添加到数据库配置中。
- en: 'We can now access the Metasploit framework console, which is also known as
    **msfconsole**. This can be done by running the following command in the Terminal:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以访问 Metasploit 框架控制台，也叫做 **msfconsole**。这可以通过在终端中运行以下命令来完成：
- en: '**msfconsole**'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**msfconsole**'
- en: 'As you can see, in *Figure 3.4*, starting **msfconsole** will take a few seconds:'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，在 *图 3.4* 中，启动 **msfconsole** 需要几秒钟：
- en: '![Figure 3.4 – Staring msfconsole'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.4 – 启动 msfconsole](Images/B17389_03_004.jpg)'
- en: '](Images/B17389_03_004.jpg)'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_004.jpg)'
- en: Figure 3.4 – Staring msfconsole
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.4 – 启动 msfconsole
- en: After **msfconsole** has started up, you will be greeted with a banner and the
    **msf** prompt, as outlined in the following screenshot:![Figure 3.5 – The msfconsole
    banner
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **msfconsole** 启动后，你将看到一个横幅和 **msf** 提示符，如下所示的截图所示：![图 3.5 – msfconsole 横幅](Images/B17389_03_005.jpg)
- en: '](Images/B17389_03_005.jpg)'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_005.jpg)'
- en: Figure 3.5 – The msfconsole banner
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.5 – msfconsole 横幅
- en: 'Before we can start using **msfconsole**, we need to verify that the Metasploit
    database is connected by running the following command within **msfconsole**:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们开始使用 **msfconsole** 之前，需要通过在 **msfconsole** 中运行以下命令来验证 Metasploit 数据库是否已连接：
- en: '**db_status**'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**db_status**'
- en: 'As you can see, in *Figure 3.6*, the output informs us that **msfconsole**
    is connected to the database:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在 *图 3.6* 中，输出告诉我们 **msfconsole** 已连接到数据库：
- en: '![Figure 3.6 – The database status of Metasploit ](Images/B17389_03_006.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.6 – Metasploit 数据库状态](Images/B17389_03_006.jpg)'
- en: Figure 3.6 – The database status of Metasploit
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – Metasploit 数据库状态
- en: The Metasploit framework should now be fully functional and ready to use. We
    can now move on to the next phase, which involves performing footprinting and
    *active reconnaissance* on our target virtual machines.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Metasploit 框架应该已经完全功能化并准备好使用。我们现在可以进入下一阶段，进行目标虚拟机的足迹分析和 *主动侦察*。
- en: Information gathering and footprinting
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信息收集与足迹分析
- en: Before we can exploit a target system, we need to accurately enumerate in order
    to retrieve important information from our targets. This phase of the penetration
    testing life cycle involves scanning and discovering hosts on a network. We scan
    these hosts to find the open *ports* and *services* that are running along with
    their versions. Additionally, we identify what operating systems the *targets*
    are running.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够利用目标系统之前，需要准确地枚举目标，以便从中获取重要信息。渗透测试生命周期的这一阶段包括扫描和发现网络中的主机。我们扫描这些主机以找到开放的
    *端口* 和 *服务*，并了解它们的版本。此外，我们还需要识别目标系统所运行的操作系统。
- en: This is one of the most important phases of a penetration test, as it will determine
    the overall success of the exploitation phase. If we can gather and enumerate
    enough information from our targets, we can set up effective attacks and exploits.
    However, if we don't do this, our exploitation methods will be inefficient and
    may not yield any results.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这是渗透测试中最重要的阶段之一，因为它将决定攻击阶段的整体成功。如果我们能从目标中收集和列举足够的信息，就可以设立有效的攻击和漏洞利用方法。然而，如果我们没有做到这一点，攻击方法将会低效，甚至可能没有任何结果。
- en: We will begin the **footprinting** process by mapping out our virtual network
    to discover the target virtual machines and their corresponding IP addresses.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过绘制虚拟网络图来开始**足迹分析**过程，以发现目标虚拟机及其对应的IP地址。
- en: Network mapping with Nmap
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Nmap进行网络映射
- en: '**Network Mapper** (**Nmap**) is a free, open source network mapping utility
    that is used to discover hosts on a network, perform port scanning and service
    detection, and operate system detection. It does this by sending specially crafted
    packets to the targets and analyzing the responses that are sent from the target.
    Based on these responses, Nmap makes decisions as to whether a port is open, a
    target is online, or a firewall is in place.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络映射工具**（**Nmap**）是一个免费的开源网络映射工具，用于发现网络上的主机、执行端口扫描、服务检测和操作系统检测。它通过向目标发送特殊构造的数据包，并分析目标返回的响应来完成这些任务。根据这些响应，Nmap判断端口是否开放、目标是否在线，或者防火墙是否存在。'
- en: We will be using Nmap in conjunction with Metasploit, where we will import our
    Nmap scan results into the Metasploit framework database. Nmap can generate output
    in a wide variety of formats. In our case, we will be exporting our scan results
    in XML format so that we can import them into the Metasploit database.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将结合使用Nmap和Metasploit，在其中导入Nmap扫描结果到Metasploit框架数据库。Nmap可以生成多种格式的输出。在我们的案例中，我们将以XML格式导出扫描结果，以便将其导入Metasploit数据库。
- en: 'Ensure that you have the following target virtual machines running, as we will
    be utilizing them in this chapter:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保您已运行以下目标虚拟机，因为我们将在本章中使用它们：
- en: '**Windows 7**'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows 7**'
- en: '**Metasploitable3**'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Metasploitable3**'
- en: '**Metasploitable2**'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Metasploitable2**'
- en: Now that we have a clear picture of what hosts we will be targeting, we can
    begin the host discovery process with Nmap.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经清楚了要攻击的主机，我们可以开始使用Nmap进行主机发现。
- en: Host discovery with Nmap
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Nmap进行主机发现
- en: 'The first step in footprinting is to discover the active hosts on a network
    and their corresponding IP addresses. Following this, we will scan these hosts
    individually to discover open ports, the services running, and the operating system
    that is being used:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 足迹分析的第一步是发现网络上的活动主机及其对应的IP地址。接下来，我们将单独扫描这些主机，以发现开放端口、运行的服务以及正在使用的操作系统：
- en: 'We can perform a *ping sweep* scan on the entire virtual network subnet that
    we created in [*Chapter 2*](B17389_02_Final_PG_ePub.xhtml#_idTextAnchor030), *Setting
    Up Our Lab*, by running the following command:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过运行以下命令，在[*第二章*](B17389_02_Final_PG_ePub.xhtml#_idTextAnchor030)中创建的整个虚拟网络子网执行*ping扫描*：
- en: '**sudo nmap -sn 10.10.10.1/24**'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo nmap -sn 10.10.10.1/24**'
- en: 'As you can see, in *Figure 3.7*, we have four active hosts on our network.
    However, we still do not know what operating systems these hosts are running,
    making it very difficult to identify what IP addresses correspond to our virtual
    machines:'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您所见，在*图3.7*中，我们的网络上有四个活动主机。然而，我们仍然不知道这些主机运行的是哪种操作系统，这使得确定哪些IP地址对应我们的虚拟机变得非常困难：
- en: '![Figure 3.7 – Host discovery with Nmap'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图3.7 – 使用Nmap进行主机发现'
- en: '](Images/B17389_03_007.jpg)'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_007.jpg)'
- en: Figure 3.7 – Host discovery with Nmap
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.7 – 使用Nmap进行主机发现
- en: This Nmap scan will send *ping* requests to all hosts on the network and will
    determine whether a host is online based on the responses it receives.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个Nmap扫描将向网络上的所有主机发送*ping*请求，并根据收到的响应判断主机是否在线。
- en: 'To determine the operating systems that the target virtual machines are running,
    we can run an aggressive scan on our virtual network subnet with Nmap. This can
    be done by running the following command:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了确定目标虚拟机运行的操作系统，我们可以在虚拟网络子网上使用Nmap进行激进扫描。可以通过运行以下命令来实现：
- en: '**sudo nmap -A -T4 10.10.10.1/24**'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo nmap -A -T4 10.10.10.1/24**'
- en: 'This scan will reveal the target operating system, the services running, the
    service versions, and the open ports running on the target systems. For instance,
    you should be able to determine what operating system a host is running by analyzing
    the operating system scan discovery results. *Figure 3.8* outlines the **OS discovery
    results** for the virtual machine with an IP address of **10.10.10.7**. As you
    can see, the **OS discovery results** indicate that the host is running **Windows
    Server 2008 SP1**, which means it is the Metasploitable3 virtual machine:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此扫描将显示目标操作系统、运行的服务、服务版本以及在目标系统上开放的端口。例如，通过分析操作系统扫描发现的结果，你应该能够确定主机正在运行什么操作系统。*图3.8*列出了IP地址为**10.10.10.7**的虚拟机的**操作系统发现结果**。如你所见，**操作系统发现结果**表明主机运行的是**Windows
    Server 2008 SP1**，这意味着它是Metasploitable3虚拟机：
- en: '![Figure 3.8 – OS discovery with Nmap'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图3.8 – 使用Nmap进行操作系统发现'
- en: '](Images/B17389_03_008.jpg)'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_008.jpg)'
- en: Figure 3.8 – OS discovery with Nmap
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.8 – 使用Nmap进行操作系统发现
- en: Note
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: You can also scan for specific information such as the operating system and
    service information by using the **-O** flag and the **-sV** flag.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还可以使用**-O**标志和**-sV**标志扫描特定信息，如操作系统和服务信息。
- en: 'Given the infrastructure of our virtual network and the use of **Dynamic Host
    Configuration Protocol** (**DHCP**), your virtual machine IP addresses might be
    assigned differently in comparison to the scenario here. In this case, the IP
    addresses correspond to the following hosts:'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 鉴于我们虚拟网络的基础设施以及**动态主机配置协议**（**DHCP**）的使用，虚拟机的IP地址可能与此处的情景有所不同。在这种情况下，IP地址对应以下主机：
- en: 'a) Metasploitable3: **10.10.10.4**'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'a) Metasploitable3: **10.10.10.4**'
- en: 'b) Metasploitable2: **10.10.10.8**'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'b) Metasploitable2: **10.10.10.8**'
- en: 'c) Windows 7: **10.10.10.7**'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'c) Windows 7: **10.10.10.7**'
- en: Now that we have mapped out the hosts on our network, we can perform our individual
    scans on all the hosts on the network to determine what services are running and
    what ports are open.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们已经绘制了网络上主机的映射图，可以对所有网络上的主机进行个别扫描，以确定运行的服务和开放的端口。
- en: 'To perform a comprehensive scan on a target, we will use a *half-open advanced
    scan* (*SYN scan*) in Nmap on all TCP ports. This will give us an accurate picture
    of what services and ports are open and are running on the target systems. We
    will also output the results into XML format for importation into **msfconsole**.
    This can be done by running the following Nmap scan:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要对目标进行全面扫描，我们将使用Nmap的*半开放高级扫描*（*SYN扫描*）对所有TCP端口进行扫描。这将为我们提供目标系统上开放的服务和端口的准确图景。我们还将把结果输出为XML格式，以便导入到**msfconsole**中。这可以通过运行以下Nmap扫描来实现：
- en: '**sudo nmap -sS -A -T4 -p- <IP-ADDRESS> -oX output_file.xml**'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo nmap -sS -A -T4 -p- <IP-ADDRESS> -oX output_file.xml**'
- en: Important note
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: You will need to run this scan for all target virtual machines on the virtual
    network to determine what ports are open and what services are running. We will
    use this information in the next section, which involves performing a vulnerability
    analysis to determine potential vulnerabilities that can be exploited.
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要对虚拟网络上的所有目标虚拟机运行此扫描，以确定开放的端口和运行的服务。我们将在下一节中使用这些信息，进行漏洞分析，以确定可能被利用的漏洞。
- en: After running the scans, you should have your scan results saved in XML format.
    We can now begin importing the results into Metasploit. First, we need to start
    **msfconsole**.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行扫描后，你应该将扫描结果保存为XML格式。现在，我们可以开始将结果导入Metasploit。首先，我们需要启动**msfconsole**。
- en: 'After starting **msfconsole**, we can import the Nmap XML results by running
    the **db_import** command:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动**msfconsole**后，我们可以通过运行**db_import**命令将Nmap的XML结果导入：
- en: '**db_import /home/kali/Desktop/outpute_file.xml**'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**db_import /home/kali/Desktop/outpute_file.xml**'
- en: 'This will import the scan results, and **msfconsole** will automatically add
    the target specified in the scan as a host, as demonstrated in the following screenshot:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将导入扫描结果，并且**msfconsole**将自动将扫描中指定的目标添加为主机，如以下屏幕截图所示：
- en: '![Figure 3.9 – Importing the Nmap scan results'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.9 – 导入Nmap扫描结果'
- en: '](Images/B17389_03_009.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_009.jpg)'
- en: Figure 3.9 – Importing the Nmap scan results
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9 – 导入Nmap扫描结果
- en: After importing the scan results, we can perform a vulnerability analysis on
    these results to identify potentially exploitable vulnerabilities. This process
    is extremely important as it will determine our chances of successful exploitation.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 导入扫描结果后，我们可以对这些结果进行漏洞分析，以识别可能的可利用漏洞。这个过程至关重要，因为它将决定我们成功利用漏洞的机会。
- en: Vulnerability assessment
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 漏洞评估
- en: '**Vulnerability assessment** is the process of identifying, quantifying, and
    prioritizing vulnerabilities within a system. This process can be automated through
    the use of vulnerability scanning systems such as *OpenVAS* and *Nessus*. However,
    automated vulnerability scans do not actively exploit vulnerabilities on systems,
    they only report them. This is where penetration tests come in. As a penetration
    tester, you will not only need to discover vulnerabilities but actively attempt
    to exploit them to verify their severity and risk.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**漏洞评估** 是识别、量化和优先排序系统内漏洞的过程。通过使用像 *OpenVAS* 和 *Nessus* 这样的漏洞扫描系统，可以实现这个过程的自动化。然而，自动化的漏洞扫描并不会主动利用系统中的漏洞，它们仅仅报告漏洞。这正是渗透测试的作用所在。作为渗透测试员，您不仅需要发现漏洞，还要积极尝试利用这些漏洞，以验证其严重性和风险。'
- en: Therefore, it is important, as a penetration tester, to learn how to perform
    manual vulnerability assessments on your targets as opposed to relying on automated
    *vulnerability scanning* tools. The ability to actively scan and detect vulnerabilities
    manually is an essential skill.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为渗透测试员，学习如何对目标进行手动漏洞评估是非常重要的，而不是仅仅依赖自动化的*漏洞扫描*工具。能够主动扫描并手动检测漏洞是一项必备技能。
- en: Based on the results we have gathered from our targets in the footprinting phase,
    we can begin the process of identifying vulnerabilities by closely examining the
    operating systems and services that are running on the target virtual machines.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们在足迹分析阶段从目标收集的结果，我们可以开始通过仔细检查目标虚拟机上运行的操作系统和服务，来识别漏洞。
- en: Metasploitable3 vulnerabilities
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Metasploitable3 漏洞
- en: 'We can begin analyzing the Nmap results for the Metasploitable3 virtual machine
    in **msfconsole**:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在 **msfconsole** 中开始分析 Metasploitable3 虚拟机的 Nmap 扫描结果：
- en: 'After starting **msfconsole**, we can list the active hosts to identify the
    Metasploitable3 virtual machine. You can do this by running the following command
    in **msfconsole**:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 **msfconsole** 后，我们可以列出活动主机，以识别 Metasploitable3 虚拟机。您可以通过在 **msfconsole**
    中运行以下命令来完成此操作：
- en: '**hosts -u**'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**hosts -u**'
- en: '*Figure 3.10* outlines all of the active hosts that we imported from our Nmap
    scan results. As you can see, **msfconsole** lists the target IP addresses and
    OS name. This information is useful; however, we need to identify the operating
    system and service versions:'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3.10* 概述了我们从 Nmap 扫描结果中导入的所有活动主机。如您所见，**msfconsole** 列出了目标的 IP 地址和操作系统名称。这些信息很有用；然而，我们需要识别操作系统和服务版本：'
- en: '![Figure 3.10 – The msfconsole hosts'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.10 – msfconsole 主机'
- en: '](Images/B17389_03_010.jpg)'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_010.jpg)'
- en: Figure 3.10 – The msfconsole hosts
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.10 – msfconsole 主机
- en: 'To display the services and service versions running on a particular host,
    we can use the following command in **msfconsole**:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要显示特定主机上运行的服务及其服务版本，我们可以在 **msfconsole** 中使用以下命令：
- en: '**services <IP-ADDRESS>**'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**services <IP-ADDRESS>**'
- en: 'As outlined in *Figure 3.11*, we can identify that the operating system version
    is **Windows Server 2008 R2, Service Pack 1**:'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如 *图 3.11* 所示，我们可以识别出操作系统版本为 **Windows Server 2008 R2，服务包 1**：
- en: '![Figure 3.11 – Metasploitable3 services'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.11 – Metasploitable3 服务'
- en: '](Images/B17389_03_011.jpg)'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_011.jpg)'
- en: Figure 3.11 – Metasploitable3 services
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.11 – Metasploitable3 服务
- en: After some quick Google searching, I can identify an unpatched vulnerability
    in the operating system.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过快速 Google 搜索，我可以识别操作系统中的一个未修补的漏洞。
- en: 'You can search for service and operating system-specific vulnerabilities through
    search engines such as Google. This process can be fine-tuned through the use
    of specific search engine operators, as demonstrated in *Figure 3.12*:'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以通过像 Google 这样的搜索引擎来搜索与服务和操作系统相关的漏洞。通过使用特定的搜索引擎操作符，这个过程可以得到优化，如 *图 3.12* 所示：
- en: '![Figure 3.12 – Searching for vulnerabilities'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.12 – 搜索漏洞'
- en: '](Images/B17389_03_012.jpg)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_012.jpg)'
- en: Figure 3.12 – Searching for vulnerabilities
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.12 – 搜索漏洞
- en: This particular version of Windows Server 2008 is vulnerable to the *MS17-010*
    vulnerability, which is code-named **EternalBlue**. For more information about
    this vulnerability, please refer to [https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010](https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010).
    **EternalBlue** is an exploit that allows attackers to remotely execute arbitrary
    code by exploiting a vulnerability in Microsoft's **Server Message Block (SMB**)
    V1 protocol.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个特定版本的Windows Server 2008易受*MS17-010*漏洞攻击，代号为**EternalBlue**。有关此漏洞的更多信息，请参见[https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010](https://docs.microsoft.com/en-us/security-updates/securitybulletins/2017/ms17-010)。**EternalBlue**是一个漏洞利用，允许攻击者通过利用Microsoft的**服务器消息块（SMB）**V1协议中的漏洞来远程执行任意代码。
- en: 'To verify that our target is vulnerable to this exploit, we can search for
    an auxiliary scanner module within **msfconsole**. This can be done by running
    the following command:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了验证我们的目标是否易受此漏洞攻击，我们可以在**msfconsole**中搜索一个辅助扫描模块。可以通过运行以下命令来完成：
- en: '**search eternalblue**'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**search eternalblue**'
- en: 'As you can see, in *Figure 3.13*, this will display multiple modules matching
    the search term of **eternalblue**. However, we want to select the auxiliary module
    that will identify whether our target is vulnerable or not:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如*图3.13*所示，这将显示多个与**eternalblue**搜索词匹配的模块。然而，我们要选择的辅助模块将识别我们的目标是否易受攻击：
- en: '![Figure 3.13 – The auxiliary module](Images/B17389_03_013.jpg)'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图3.13 – 辅助模块](Images/B17389_03_013.jpg)'
- en: Figure 3.13 – The auxiliary module
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.13 – 辅助模块
- en: 'To use the module, we can use the **use** command and specify the module name:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用该模块，我们可以使用**use**命令并指定模块名称：
- en: '**use auxiliary/scanner/smb/smb_ms17_010**'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**use auxiliary/scanner/smb/smb_ms17_010**'
- en: After specifying the module, we will need to configure the scanner options.
    The main option that we need to modify is the **RHOSTS** option. The **RHOSTS**
    option is used to specify the target IP address, as shown in *Figure 3.14*:![Figure
    3.14 – The RHOSTS option](Images/B17389_03_014.jpg)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在指定模块后，我们需要配置扫描器选项。我们需要修改的主要选项是**RHOSTS**选项。**RHOSTS**选项用于指定目标IP地址，如*图3.14*所示：![图3.14
    – RHOSTS选项](Images/B17389_03_014.jpg)
- en: Figure 3.14 – The RHOSTS option
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.14 – RHOSTS选项
- en: 'We can set the **RHOSTS** option by running the following command:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过运行以下命令设置**RHOSTS**选项：
- en: '**set RHOSTS <IP-ADDRESS>**'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**set RHOSTS <IP-ADDRESS>**'
- en: 'After setting the **RHOSTS** option, we can run the auxiliary module using
    the following command:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置完**RHOSTS**选项后，我们可以使用以下命令运行辅助模块：
- en: '**run**'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**run**'
- en: 'As demonstrated in *Figure 3.15*, our Metasploitable3 virtual machine is vulnerable
    to the EternalBlue exploit:'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如*图3.15*所示，我们的Metasploitable3虚拟机易受EternalBlue漏洞的攻击：
- en: '![Figure 3.15 – The host is vulnerable](Images/B17389_03_015.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图3.15 – 主机易受攻击](Images/B17389_03_015.jpg)'
- en: Figure 3.15 – The host is vulnerable
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15 – 主机易受攻击
- en: We have now identified and confirmed a potential vulnerability that could provide
    us with remote access to the target if successfully exploited. In the next section,
    we will take a look at the exploitation phase.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经识别并确认了一个潜在的漏洞，如果成功利用，它可以为我们提供远程访问目标的权限。在下一节中，我们将了解漏洞利用阶段。
- en: Metasploitable2 vulnerabilities
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Metasploitable2漏洞
- en: 'Similar to Metasploitable3, we can analyze the Nmap results that we imported
    for the Metasploitable2 virtual machine in *msfconsole*. Let''s perform the following
    steps:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 与Metasploitable3类似，我们可以分析在**msfconsole**中导入的Metasploitable2虚拟机的Nmap结果。让我们执行以下步骤：
- en: 'To display the services and service versions running on Metasploitable2, we
    can use the following command in **msfconsole**:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要显示Metasploitable2上运行的服务及其版本，我们可以在**msfconsole**中使用以下命令：
- en: '**services <IP-ADDRESS>**'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**services <IP-ADDRESS>**'
- en: 'As you can see, in *Figure 3.16*, Metasploitable2 has services running. Most
    of these are outdated given the service versions. We can also deduce that the
    server is running an older version of Ubuntu:'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如*图3.16*所示，Metasploitable2上有多个服务正在运行。鉴于服务版本，许多服务是过时的。我们还可以推断该服务器正在运行较旧版本的Ubuntu：
- en: '![Figure 3.16 – Metasploitable2 services'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图3.16 – Metasploitable2服务](Images/B17389_03_016.jpg)'
- en: '](Images/B17389_03_016.jpg)'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_016.jpg)'
- en: Figure 3.16 – Metasploitable2 services
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.16 – Metasploitable2服务
- en: 'We can utilize a useful tool, called **searchsploit**, which comes prepackaged
    with Kali Linux, to find potential exploits for the specific service versions
    that are running on the target. We can do this by running the following command:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以利用一个名为 **searchsploit** 的有用工具，它是 Kali Linux 中预装的，可以帮助我们找到与目标上运行的特定服务版本相关的潜在漏洞。我们可以通过运行以下命令来实现：
- en: '**searchsploit <Service Name & Version>**'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**searchsploit <服务名称和版本>**'
- en: Note
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: '**Searchsploit** is a utility that allows you to search for exploits available
    on **exploit-db** without having to directly access the **exploit-db** website
    manually.'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Searchsploit** 是一个工具，可以让你在 **exploit-db** 上搜索可用的漏洞，而不必手动访问 **exploit-db**
    网站。'
- en: 'If we use searchsploit to scan for vulnerabilities that affect the *Samba smbd
    V3.0.20* service, we will discover that it is vulnerable to the command execution
    and has a corresponding Metasploit module that can be used to exploit this vulnerability.
    First, you will need to run the following command:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们使用 searchsploit 扫描影响 *Samba smbd V3.0.20* 服务的漏洞，我们会发现它容易受到命令执行攻击，并且有一个相应的
    Metasploit 模块可以用来利用这个漏洞。首先，你需要运行以下命令：
- en: '**searchsploit samba 3.0.20**'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**searchsploit samba 3.0.20**'
- en: '*Figure 3.17* outlines the various exploits available for Samba **smbd V3.0.20**.
    We will be using the second exploit, which has a Metasploit module available:'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3.17* 概述了针对 Samba **smbd V3.0.20** 可用的各种漏洞。我们将使用第二个漏洞，该漏洞有一个可用的 Metasploit
    模块：'
- en: '![Figure 3.17 – The Metasploitable2 vulnerability'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.17 – Metasploitable2 漏洞'
- en: '](Images/B17389_03_017.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_017.jpg)'
- en: Figure 3.17 – The Metasploitable2 vulnerability
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.17 – Metasploitable2 漏洞
- en: Now that we have identified a potential exploit on our target systems, we can
    take a look at how to use the utilize exploit modules to gain access.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确定了目标系统上的潜在漏洞，接下来我们可以了解如何使用利用模块来获取访问权限。
- en: Gaining access
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获得访问权限
- en: We can now get started with **exploitation**, which is the most exciting phase
    of the penetration testing life cycle. We have already identified our potential
    exploits on our target systems; therefore, we now need to run and test these exploits
    to gain our initial foothold.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以开始进行 **利用**，这是渗透测试生命周期中最令人兴奋的阶段。我们已经确定了目标系统上的潜在漏洞；因此，我们现在需要运行并测试这些漏洞以获得初步的立足点。
- en: The objective of the exploitation phase is to gain stable and persistent access
    to the target system, which will ensure that once a system is exploited, we will
    have persistent access even if the system is restarted.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 利用阶段的目标是获得对目标系统的稳定和持久访问，这样一旦系统被利用，即使系统重启，我们也能保持访问权限。
- en: Exploiting Metasploitable3
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用 Metasploitable3
- en: 'In the previous section, we were able to identify and verify the *EternalBlue*
    exploit as a potential access vector inside the Metasploitable3 host. Let''s take
    a look at how we can use this exploit to gain access:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一部分中，我们已经能够识别并验证 *EternalBlue* 漏洞作为 Metasploitable3 主机内的潜在访问路径。让我们看看如何使用这个漏洞来获得访问权限：
- en: 'The first step is to fire up **msfconsole** and search for the *EternalBlue*
    exploit module by running the following command:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是启动 **msfconsole**，并通过运行以下命令搜索 *EternalBlue* 漏洞模块：
- en: '**search eternalblue**'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**search eternalblue**'
- en: The module we will use is the exploit module named **exploit/windows/smb/ms17_010_eternalblue**,
    as shown in the following screenshot:![Figure 3.18 – The Metasploitable3 eternalblue
    exploit
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用的模块是名为 **exploit/windows/smb/ms17_010_eternalblue** 的利用模块，如下图所示：![图 3.18
    – Metasploitable3 eternalblue 漏洞
- en: '](Images/B17389_03_018.jpg)'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_018.jpg)'
- en: Figure 3.18 – The Metasploitable3 eternalblue exploit
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.18 – Metasploitable3 eternalblue 漏洞
- en: 'To use this module, we will run the following command:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用此模块时，我们将运行以下命令：
- en: '**use exploit/windows/smb/ms17_010_eternalblue**'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**use exploit/windows/smb/ms17_010_eternalblue**'
- en: After specifying the module, we will need to configure the module options. The
    main option that we need to modify is the **RHOSTS** option. The **RHOSTS** option
    is used to specify the target IP address, as demonstrated in the following screenshot:![Figure
    3.19 – EternalBlue module options](Images/B17389_03_019.jpg)
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在指定模块后，我们需要配置模块选项。我们需要修改的主要选项是 **RHOSTS** 选项。**RHOSTS** 选项用于指定目标 IP 地址，如以下截图所示：![图
    3.19 – EternalBlue 模块选项](Images/B17389_03_019.jpg)
- en: Figure 3.19 – EternalBlue module options
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.19 – EternalBlue 模块选项
- en: 'We can set the **RHOSTS** option by running the following command:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过运行以下命令来设置 **RHOSTS** 选项：
- en: '**set RHOSTS <IP-ADDRESS>**'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**set RHOSTS <IP-ADDRESS>**'
- en: We can also set the **payload** to be used and the *payload listener* options,
    as specified in *Figure 3.20*. We use the default options specified by the module.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以设置要使用的**有效载荷**和*有效载荷监听器*选项，如*图 3.20*所示。我们使用模块指定的默认选项。
- en: 'After setting the **RHOSTS** option, we can run the auxiliary module with the
    following command:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置 **RHOSTS** 选项后，我们可以使用以下命令运行辅助模块：
- en: '**run**'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**run**'
- en: If the exploit is successful, we should get a **meterpreter** session on the
    target system, as illustrated at the bottom of the following screenshot:![Figure
    3.20 – The successful exploitation of eternalblue
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果漏洞利用成功，我们应该在目标系统上获得一个**Meterpreter**会话，如下面截图所示：![图 3.20 – 永恒之蓝漏洞利用成功
- en: '](Images/B17389_03_020.jpg)'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_020.jpg)'
- en: Figure 3.20 – The successful exploitation of eternalblue
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.20 – 永恒之蓝漏洞利用成功
- en: What is meterpreter?
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 什么是 Meterpreter？
- en: '**Meterpreter** is an advanced payload that uses in-memory **Dynamic Link Library**
    (**DLL**) injection and provides attackers with an advanced interactive shell
    that can be used to explore the target system, run system commands, and execute
    code.'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**Meterpreter** 是一个高级有效载荷，利用内存中的**动态链接库**（**DLL**）注入，提供攻击者一个高级交互式 shell，可以用来探索目标系统、执行系统命令和执行代码。'
- en: 'The **meterpreter shell** gives us the ability to explore the system and run
    commands. However, we still need to set up persistence in the event that our connection
    is terminated, or the system is restarted. We can do this by using the persistence
    module within Metasploit. However, before we can use this module, we will need
    to send our *meterpreter* session into **background** by running the following
    command:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Meterpreter Shell** 使我们能够探索系统并执行命令。然而，我们仍然需要设置持久化，以防我们的连接被中断或系统重启。我们可以通过使用
    Metasploit 中的持久化模块来实现这一点。然而，在使用此模块之前，我们需要通过运行以下命令将我们的*Meterpreter*会话转入**后台**：'
- en: '**background**'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**background**'
- en: '*Figure 3.21* outlines a list of active meterpreter sessions and their corresponding
    details:'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3.21* 概述了一个活动的 Meterpreter 会话列表及其相关详细信息：'
- en: '![Figure 3.21 – The background meterpreter session'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.21 – 背景 Meterpreter 会话'
- en: '](Images/B17389_03_021.jpg)'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_021.jpg)'
- en: Figure 3.21 – The background meterpreter session
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.21 – 背景 Meterpreter 会话
- en: 'After the meterpreter session is in the background, we can load the persistence
    module by running the following command:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Meterpreter 会话转入后台后，我们可以通过运行以下命令加载持久化模块：
- en: '**use exploit/windows/local/persistence**'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**use exploit/windows/local/persistence**'
- en: 'We now need to configure the module options. In this case, we need to change
    the **SESSION** option by running the following command:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要配置模块选项。在这种情况下，我们需要通过运行以下命令来更改**SESSION**选项：
- en: '**set SESSION 1**'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**set SESSION 1**'
- en: 'Additionally, we need to change the payload option, in particular, the **LPORT**
    option, this can be done by running the following command:'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，我们还需要更改有效载荷选项，特别是**LPORT**选项，可以通过运行以下命令来完成：
- en: '**set LPORT 4443**'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**set LPORT 4443**'
- en: '*Figure 3.22* outlines the various options available for the persistence module.
    The highlighted options are the values that need to be changed:'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3.22* 概述了持久化模块的各种选项。突出显示的选项是需要更改的值：'
- en: '![Figure 3.22 – The persistence module options'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.22 – 持久化模块选项'
- en: '](Images/B17389_03_022.jpg)'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_022.jpg)'
- en: Figure 3.22 – The persistence module options
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.22 – 持久化模块选项
- en: 'After setting the module options, we can run the module with the following
    command:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置模块选项后，我们可以使用以下命令运行模块：
- en: '**run**'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**run**'
- en: 'If successful, the persistence module should install **VBS script** and autorun
    to the registry, as shown in *Figure 3.23*:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果成功，持久化模块应安装**VBS 脚本**并将其设置为自启动注册表项，如*图 3.23*所示：
- en: '![Figure 3.23 – The persistence module is successful'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.23 – 持久化模块成功'
- en: '](Images/B17389_03_023.jpg)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_023.jpg)'
- en: Figure 3.23 – The persistence module is successful
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.23 – 持久化模块成功
- en: We have successfully exploited and set up persistence on our Metasploitable3
    host. Next, we will look at how to exploit **Metasploitable2**, which is our Linux
    host.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已成功利用漏洞并在 Metasploitable3 主机上设置了持久化。接下来，我们将学习如何利用**Metasploitable2**，也就是我们的
    Linux 主机。
- en: Exploiting Metasploitable2
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利用 Metasploitable2
- en: 'In the *Information gathering and footprinting* section, we were able to identify
    an exploit for the *Samba smbd 3.0.20* service. Let''s take a look at how we can
    use this exploit to gain access:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在*信息收集与足迹分析*部分，我们能够识别出针对*Samba smbd 3.0.20* 服务的漏洞利用。让我们看看如何使用这个漏洞来获取访问权限：
- en: 'The first step is to fire up **msfconsole** and search for the **Samba 3.0.20**
    exploit module by running the following command:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是启动 **msfconsole**，并通过运行以下命令搜索 **Samba 3.0.20** 利用模块：
- en: '**search samba 3.0.20**'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**搜索 samba 3.0.20**'
- en: The module we will use is the exploit module, called **exploit/multi/samba/usermap_script**,
    as demonstrated in the following screenshot:![Figure 3.24 – The Metasploitable2
    exploit module
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用的模块是利用模块，名为 **exploit/multi/samba/usermap_script**，如下图所示：![图 3.24 – Metasploitable2
    利用模块](Images/B17389_03_024.jpg)
- en: '](Images/B17389_03_024.jpg)'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_024.jpg)'
- en: Figure 3.24 – The Metasploitable2 exploit module
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.24 – Metasploitable2 利用模块
- en: 'To use this module, we will run the following command:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用此模块，我们将运行以下命令：
- en: '**use exploit/multi/samba/usermap_script**'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**使用 exploit/multi/samba/usermap_script**'
- en: After specifying the module, we will need to configure the module options. The
    main option that we need to modify is the **RHOSTS** option. The **RHOSTS** option
    is used to specify the target IP address, as shown in *Figure 3.25*:![Figure 3.25
    – The Metasploitable2 exploit module options
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在指定模块后，我们需要配置模块选项。我们需要修改的主要选项是 **RHOSTS** 选项。**RHOSTS** 选项用于指定目标 IP 地址，如 *图
    3.25* 所示：![图 3.25 – Metasploitable2 利用模块选项](Images/B17389_03_025.jpg)
- en: '](Images/B17389_03_025.jpg)'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_025.jpg)'
- en: Figure 3.25 – The Metasploitable2 exploit module options
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.25 – Metasploitable2 利用模块选项
- en: 'We can set the **RHOSTS** option by running the following command:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过运行以下命令来设置 **RHOSTS** 选项：
- en: '**set RHOSTS <IP-ADDRESS>**'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**设置 RHOSTS <IP-ADDRESS>**'
- en: We can also set the payload *to be used* and the payload listener options, as
    specified in *Figure 3.25*. We use the default options specified by the module.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以设置将要使用的负载以及负载监听器选项，如 *图 3.25* 所示。我们使用模块指定的默认选项。
- en: 'After setting the **RHOSTS** option, we can run the auxiliary module with the
    following command:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置 **RHOSTS** 选项后，我们可以使用以下命令运行辅助模块：
- en: '**run**'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**运行**'
- en: If the exploit is successful, we should get a command shell on the target system,
    as demonstrated in the following screenshot:![Figure 3.26 – The Metasploitable2
    command shell](Images/B17389_03_026.jpg)
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果利用成功，我们应该能够在目标系统上获取一个命令 shell，如以下截图所示：![图 3.26 – Metasploitable2 命令 shell](Images/B17389_03_026.jpg)
- en: Figure 3.26 – The Metasploitable2 command shell
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.26 – Metasploitable2 命令 shell
- en: We can use the command-shell session to run system commands and explore the
    system. However, for more consistent access, we will need to upgrade the command
    shell to a meterpreter session. We can do this by moving the command-shell session
    to the background. This can be done by using the keyboard combination of **Ctrl
    + Z**, as shown in *Figure 3.27*:![Figure 3.27 – The Metasploitable2 background
    command shell](Images/B17389_03_027.jpg)
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用命令 shell 会话来运行系统命令并探索系统。然而，为了获得更稳定的访问，我们需要将命令 shell 升级为 meterpreter 会话。我们可以通过将命令
    shell 会话移到后台来实现。这可以通过使用键盘组合 **Ctrl + Z** 完成，如 *图 3.27* 所示：![图 3.27 – Metasploitable2
    后台命令 shell](Images/B17389_03_027.jpg)
- en: Figure 3.27 – The Metasploitable2 background command shell
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.27 – Metasploitable2 后台命令 shell
- en: 'After the command-shell session has moved to the background, we can load the
    shell to the meterpreter module by running the following command:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令 shell 会话移到后台后，我们可以通过运行以下命令加载 shell 到 meterpreter 模块：
- en: '**use post/multi/manage/shell_to_meterpreter**'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**使用 post/multi/manage/shell_to_meterpreter**'
- en: 'We now need to configure the module options. Here, we need to change the **SESSION**
    option. We can do this by running this command:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要配置模块选项。在这里，我们需要更改 **SESSION** 选项。可以通过运行以下命令来实现：
- en: '**set SESSION 1**'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**设置 SESSION 1**'
- en: 'Additionally, we can change the payload option, **LPORT**, by running the following
    command:'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，我们还可以通过运行以下命令来更改负载选项 **LPORT**：
- en: '**set LPORT 4443**'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**设置 LPORT 4443**'
- en: '*Figure 3.28* outlines the options available for the **shell_to_meterpreter**
    module:'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 3.28* 概述了 **shell_to_meterpreter** 模块的可用选项：'
- en: '![Figure 3.28 – The shell_to_meterpreter module options'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.28 – shell_to_meterpreter 模块选项](Images/B17389_03_028.jpg)'
- en: '](Images/B17389_03_028.jpg)'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_028.jpg)'
- en: Figure 3.28 – The shell_to_meterpreter module options
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 3.28 – shell_to_meterpreter 模块选项
- en: 'After setting the module options, we can run the module with the following
    command:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置模块选项后，我们可以使用以下命令运行该模块：
- en: '**run**'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**运行**'
- en: If successful, the **shell_to_meterpreter** module should send a new stage and
    launch a meterpreter session in the background, as demonstrated in the following
    screenshot:![Figure 3.29 – The shell_to_meterpreter module is successful
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果成功，**shell_to_meterpreter** 模块应当发送一个新阶段并在后台启动一个 meterpreter 会话，如以下截图所示：![图
    3.29 – shell_to_meterpreter 模块成功运行](Images/B17389_03_029.jpg)
- en: '](Images/B17389_03_029.jpg)'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_029.jpg)'
- en: Figure 3.29 – The shell_to_meterpreter module is successful
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图3.29 – shell_to_meterpreter模块成功
- en: 'We can switch to this session by running the following command:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过运行以下命令切换到这个会话：
- en: '**sessions 2**'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sessions 2**'
- en: 'As you can see in *Figure 3.30*, we have successfully upgraded our command
    shell to a meterpreter session:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如在*图3.30*中所示，我们已成功将命令行shell升级为meterpreter会话：
- en: '![Figure 3.30 – The Metasploitable2 meterpreter session'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.30 – Metasploitable2 meterpreter会话'
- en: '](Images/B17389_03_030.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_03_030.jpg)'
- en: Figure 3.30 – The Metasploitable2 meterpreter session
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.30 – Metasploitable2 meterpreter会话
- en: We have now been able to successfully exploit a Windows and Linux host via different
    exploitation vectors to gain our initial foothold onto the system. We are now
    ready to begin the privilege escalation process.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经成功通过不同的利用向量利用了Windows和Linux主机，获得了系统的初步立足点。现在，我们准备开始特权提升过程。
- en: Summary
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we started by familiarizing ourselves with the structure of
    the Metasploit framework. We then looked at how to perform both footprinting and
    vulnerability analyses on our targets with *Nmap* and *Metasploit*. We then ended
    the chapter by exploring how to use the information we gathered during footprinting
    to successfully exploit a Windows and Linux host through the operating system
    and service vulnerabilities.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先了解了Metasploit框架的结构。接着，我们研究了如何使用*Nmap*和*Metasploit*对目标进行足迹分析和漏洞分析。最后，我们通过探讨如何利用在足迹分析中收集到的信息，通过操作系统和服务漏洞成功利用Windows和Linux主机，结束了本章的内容。
- en: Now that we have learned how to establish our initial foothold on the system,
    we can learn how to perform local system enumeration.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经学会了如何在系统上建立初步的立足点，接下来我们可以学习如何执行本地系统枚举。
- en: In the next chapter, we will discover the various tools and techniques that
    we can use to enumerate information from our target systems and explore how to
    use this information to stage a privilege escalation attack.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将发现可以用来枚举目标系统信息的各种工具和技术，并探讨如何利用这些信息发起特权提升攻击。
