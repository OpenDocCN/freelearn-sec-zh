- en: Chapter 8. Additional Nmap Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。其他Nmap工具
- en: We have now successfully written our first Nmap script, and launched a variety
    of scans against a plethora of different target types (and defenses). However,
    scanning a host is only a small part of the full power of the Nmap suite.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经成功编写了我们的第一个Nmap脚本，并对各种不同类型的目标（和防御）进行了各种扫描。然而，扫描主机只是Nmap套件的全部功能的一小部分。
- en: In addition to creating a powerful scanning tool and the NSE, Nmap developers
    have included several additional tools—including Ncrack, Nping, Ncat, and Ndiff—into
    default install bundles of Nmap. These tools can help analyze existing scans,
    pivot to other hosts, transfer files, or compare scan results over time.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 除了创建强大的扫描工具和NSE之外，Nmap开发人员还包括了几个其他工具——包括Ncrack、Nping、Ncat和Ndiff——在Nmap的默认安装包中。这些工具可以帮助分析现有的扫描结果，转向其他主机，传输文件，或者随时间比较扫描结果。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Attacking services with Ncrack
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ncrack攻击服务
- en: Host detection with Nping
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Nping进行主机检测
- en: File transfers and backdoors with Ncat
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ncat进行文件传输和后门
- en: Comparing Nmap results with Ndiff
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ndiff比较Nmap结果
- en: Attacking services with Ncrack
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ncrack攻击服务
- en: One of the most aggressive tools included in the Nmap suite is Ncrack—a tool
    for aggressively brute-forcing (or "cracking") network services. While it's not
    unique in its functionality (as there are many software tools that can brute force
    network accounts), the ability to easily (and natively) integrate with Nmap (and
    Nmap results) makes it ideal for use after scans.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap套件中包含的最具侵略性的工具之一是Ncrack——一种用于积极暴力破解（或“破解”）网络服务的工具。虽然它的功能并不独特（因为有许多软件工具可以暴力破解网络帐户），但易于（和本地）与Nmap集成（和Nmap结果）使其成为扫描后的理想选择。
- en: Before using Ncrack, we need to ensure that it's installed. Although most Nmap
    tools come installed with Nmap suite packages, since Ncrack is technically (at
    the time of writing) an alpha build, it is not included in many installations.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Ncrack之前，我们需要确保它已安装。虽然大多数Nmap工具都随Nmap套件包安装，但由于Ncrack在技术上（在撰写本文时）是一个alpha版本，因此它并未包含在许多安装中。
- en: Note
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Documentation and the most recent download link is available at [http://nmap.org/ncrack/](http://nmap.org/ncrack/).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 文档和最新的下载链接可在[http://nmap.org/ncrack/](http://nmap.org/ncrack/)找到。
- en: 'Installation, like many Nmap tools, is extraordinarily simple; perform the
    following steps:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 像许多Nmap工具一样，安装非常简单；执行以下步骤：
- en: '`wget http://nmap.org/ncrack/dist/ncrack-0.4ALPHA.tar.gz`'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`wget http://nmap.org/ncrack/dist/ncrack-0.4ALPHA.tar.gz`'
- en: '`tar -xzf ncrack-0.4ALPHA.tar.gz`'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`tar -xzf ncrack-0.4ALPHA.tar.gz`'
- en: '`cd ncrack-0.4ALPHA`'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`cd ncrack-0.4ALPHA`'
- en: '`./configure`'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`./configure`'
- en: '`make` ; `sudo make install`'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`make` ; `sudo make install`'
- en: 'You will be able to see the output of the preceding steps as shown in the following
    screenshot:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您将能够看到前面步骤的输出，如下面的屏幕截图所示：
- en: '![Attacking services with Ncrack](img/4065OS_08_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncrack攻击服务](img/4065OS_08_01.jpg)'
- en: Upon configuration, you may notice a scorpion ASCII art (as shown in the preceding
    screenshot). This art pays homage to the Nmap dragon that you may remember from
    when we first installed Nmap, several chapters ago!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成后，您可能会注意到一个蝎子的ASCII艺术（如前面的屏幕截图所示）。这个艺术是向您致敬Nmap龙，您可能还记得我们几章前第一次安装Nmap时的情景！
- en: Once Ncrack is installed, there are several useful and interesting ways we can
    invoke it to do our bidding.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了Ncrack之后，我们可以以几种有用和有趣的方式来调用它来为我们服务。
- en: '![Attacking services with Ncrack](img/4065OS_08_02.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncrack攻击服务](img/4065OS_08_02.jpg)'
- en: The most straightforward way to run Ncrack is very simple; as shown in the preceding
    screenshot, one may simply run `ncrack` followed by the protocol URI and hostname
    (or IP address) of the targeted service. Used in this way, we can attack services
    (such as SSH) by running `ncrack ssh://TARGET`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 运行Ncrack最直接的方法非常简单；如前面的屏幕截图所示，可以简单地运行`ncrack`，然后跟上目标服务的协议URI和主机名（或IP地址）。以这种方式使用，我们可以通过运行`ncrack
    ssh://TARGET`来攻击服务（如SSH）。
- en: Ncrack is most effective when used with a known username. For example, if we
    knew that a given system had a root login that allowed password authentication,
    we would run `ncrack --user root ssh://TARGET` to brute force against that username.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用已知用户名时，Ncrack最有效。例如，如果我们知道某个系统有一个允许密码认证的root登录，我们将运行`ncrack --user root ssh://TARGET`来对该用户名进行暴力破解。
- en: Although this functionality is very useful, it is by no means unique; many tools,
    such as **Hydra** and **Medusa** can run brute force attacks. The true benefits
    of Ncrack are revealed when Ncrack is run based on the results from an Nmap scan.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这个功能非常有用，但它并不是唯一的；许多工具，如**Hydra**和**Medusa**都可以进行暴力破解攻击。当Ncrack基于Nmap扫描的结果运行时，Ncrack的真正优势就显现出来了。
- en: Let's say that we are conducting a penetration test or security assessment on
    a series of hosts across a Class C (/24) network. If, for example, 200 hosts are
    online—and each one has between five and ten services listening—you're looking
    at a lot of different brute force attempts to implement over the command line.
    Ncrack, however, can do this for you.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们正在对一个C类（/24）网络中的一系列主机进行渗透测试或安全评估。例如，如果有200台主机在线，每台主机有五到十个服务在监听，那么您需要在命令行上执行大量不同的暴力破解尝试。然而，Ncrack可以为您完成这些工作。
- en: 'Just as Nmap can export different log types, Ncrack can read them as input—and
    automatically attack the services in question. For example, if we have an `-oX`
    flag (XML output) from an Nmap scan, Ncrack can use `-iX` to input that same list
    as a target file:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Nmap可以导出不同的日志类型一样，Ncrack可以将它们作为输入读取，并自动攻击相关服务。例如，如果我们从Nmap扫描中有一个`-oX`标志（XML输出），Ncrack可以使用`-iX`将相同的列表作为目标文件输入：
- en: '![Attacking services with Ncrack](img/4065OS_08_03.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncrack攻击服务](img/4065OS_08_03.jpg)'
- en: We can easily see that by scanning `nmap.scanme.org` and exporting an XML file,
    we can easily import it to Ncrack. Although this is just one host, you can imagine
    how much time we would save if we used this for a large network! It's also worth
    noting that services that either don't support login, or that Ncrack doesn't know
    how to use, are by default excluded from the scan. In this case, `nping-echo`
    was excluded due to not having a login prompt.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松地看到，通过扫描`nmap.scanme.org`并导出XML文件，我们可以轻松地将其导入到Ncrack中。虽然这只是一个主机，但您可以想象如果我们用于大型网络时会节省多少时间！值得注意的是，不支持登录的服务，或者Ncrack不知道如何使用的服务，默认情况下会从扫描中排除。在这种情况下，由于没有登录提示，`nping-echo`被排除在外。
- en: There are a few flags that are absolutely necessary to run Ncrack effectively,
    in addition to specifying target files. The two most important flags for Ncrack
    are `-U` and `-P` flags, which each point to a text file containing usernames
    and passwords.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 除了指定目标文件之外，运行Ncrack所需的一些标志是绝对必要的。对于Ncrack来说，最重要的两个标志是`-U`和`-P`标志，它们分别指向包含用户名和密码的文本文件。
- en: There are a plethora of other flags, configuration settings, and uses for Ncrack—all
    of which can be found on the very useful main page.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 有大量其他标志、配置设置和Ncrack的用途，所有这些都可以在非常有用的主页上找到。
- en: 'Before using Ncrack, a word of caution: while port scanning with Nmap can be
    irritating to many system administrators (and is, in fact, illegal in some areas),
    attempting to compromise a service using Ncrack is illegal and should only be
    done with explicit permission of the system owner. If you''re trying to perform
    a security assessment on your own assets or if you have a signed consent form
    (such as in the case of a penetration test), you''ll be okay—but do not attempt
    to compromise arbitrary hosts on the Internet!'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Ncrack之前，需要注意：虽然使用Nmap进行端口扫描可能会让许多系统管理员感到恼火（实际上在某些地区是非法的），但使用Ncrack尝试破解服务是非法的，只能在系统所有者明确许可的情况下进行。如果您试图对自己的资产进行安全评估，或者您有签署的同意书（比如渗透测试的情况），那么您是可以的-但不要试图破解互联网上的任意主机！
- en: Host detection with Nping
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Nping进行主机检测
- en: Much like Ncrack, Nping was added into the Nmap suite only very recently—its
    first iteration was created in August 2009 (along with Ncrack), and was first
    included in the actual Nmap suite in March 2010.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 与Ncrack一样，Nping是最近才被添加到Nmap套件中的-它的第一个版本是在2009年8月创建的（与Ncrack一起），并且在2010年3月首次包含在实际的Nmap套件中。
- en: 'Although you might not expect it from its name, Nping does much more than ICMP
    echo requests (what we typically call a ping)—primarily, it can also execute ARP
    probes and TCP or UDP requests to given ports, in order to find out if those hosts
    are online based on the response. For example, if we want to debug certain network
    connections, we can easily use Nping to determine what''s happening on the wire.
    The following screenshot shows a basic Nping command:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管从其名称中您可能不会期望到，但Nping的功能远不止于ICMP回显请求（我们通常称之为ping）-主要是它还可以执行ARP探测和对给定端口的TCP或UDP请求，以便根据响应来判断这些主机是否在线。例如，如果我们想要调试某些网络连接，我们可以轻松地使用Nping来确定在网络上发生了什么。以下屏幕截图显示了一个基本的Nping命令：
- en: '![Host detection with Nping](img/4065OS_08_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![使用Nping进行主机检测](img/4065OS_08_04.jpg)'
- en: In the preceding screenshot, we ran Nping with two checks per port (`-c 2`,
    where "c" stands for "count"), and scanned ports on `dshaw.net`—80\. In this case,
    80 is an open port (it is running my web server), and we can clearly see the responses
    we're expecting. As we remember from earlier chapters, we can now see exactly
    what is happening as the TCP handshake is attempted through network connection
    information (packets sent and received). If we were debugging a network connection,
    we would also specify `-v` to see even more packet information.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，我们使用Nping对每个端口进行了两次检查（`-c 2`，其中"c"代表"count"），并扫描了`dshaw.net`上的端口-80。在这种情况下，80是一个开放的端口（它正在运行我的Web服务器），我们可以清楚地看到我们期望的响应。正如我们在前面的章节中记得的那样，现在我们可以看到在尝试进行TCP握手时通过网络连接信息（发送和接收的数据包）发生了什么。如果我们正在调试网络连接，我们还会指定`-v`来查看更多的数据包信息。
- en: One of the most unique features of Nping is its built-in echo mode. The echo
    mode allows Nping to work as both a server and a client, and sends packets back
    and forth. By showing the entirety of a network connection (the packets that the
    client is sending, in their original state, and the packets as they are received
    by a server), it is extremely easy to detect network address translation, interfering
    intrusion prevention systems, packet shaping, and so on.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Nping最独特的功能之一是其内置的回显模式。回显模式允许Nping作为服务器和客户端工作，并来回发送数据包。通过显示整个网络连接（客户端发送的数据包，以其原始状态，以及服务器接收到的数据包），非常容易检测网络地址转换、干扰入侵防御系统、数据包整形等等。
- en: Note
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For a full list of Nping echo commands, as well as a variety of intended uses,
    view the Nmap documentation portal (NSEDoc), which has a comprehensive tutorial
    located at [http://nmap.org/book/nping-man-echo-mode.html](http://www.nmap.org/book/nping-man-echo-mode.html).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Nping回显命令的完整列表，以及各种预期用途，请查看Nmap文档门户网站（NSEDoc），其中有一个位于[http://nmap.org/book/nping-man-echo-mode.html](http://www.nmap.org/book/nping-man-echo-mode.html)的全面教程。
- en: File transfers and backdoors with Ncat
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ncat进行文件传输和后门
- en: For those who may not be familiar, a wonderful network administration tool was
    unveiled in 1995; it was called Netcat. This had a variety of uses, from file
    transfers, to network monitoring, to chat servers—even so functional as to create
    a backdoor—by mirroring its input to a specified network address of the user's
    choice. Netcat was in many ways a very lightweight port scanner—by using a quick
    shell script, it was extremely easy to check whether certain ports were responding
    on a given host.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些可能不熟悉的人来说，一个很棒的网络管理工具在1995年推出，它被称为Netcat。它有各种用途，从文件传输到网络监视，到聊天服务器，甚至可以创建后门，通过将其输入镜像到用户选择的指定网络地址。Netcat在很多方面都是一个非常轻量级的端口扫描程序-通过使用一个快速的shell脚本，非常容易检查给定主机上是否响应了某些端口。
- en: Netcat is still in heavy use today, but the Nmap development team saw some pretty
    serious improvements—both in stability and usability—that they can make to the
    software. As such, in 2009, Ncat was released as a part of the Nmap suite.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Netcat今天仍然被广泛使用，但Nmap开发团队看到了软件在稳定性和可用性方面的一些非常严重的改进。因此，2009年，Ncat作为Nmap套件的一部分发布了。
- en: Unlike Netcat, Ncat has SSL support (natively), great connection redirection
    reliability, and several other built-in features that make it a great tool in
    a security administrator's toolbox.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 与Netcat不同，Ncat具有SSL支持（本地支持）、良好的连接重定向可靠性，以及其他几个内置功能，使其成为安全管理员工具箱中的一款好工具。
- en: 'Ncat has two modes: the "listen" mode, which listens on a provided port for
    incoming connections, and the "connect" mode, through which commands are sent
    and feedback is received. In the connect mode, we can use Ncat to connect to a
    variety of services, including HTTP-based web servers.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Ncat有两种模式：“监听”模式，它在提供的端口上监听传入的连接，“连接”模式，通过它发送命令并接收反馈。在连接模式下，我们可以使用Ncat连接到各种服务，包括基于HTTP的Web服务器。
- en: 'Sending the `GET / HTTP/1.0` request after invoking Ncat via `ncat nmap.org
    80` yields the following output:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在调用`ncat nmap.org 80`后发送`GET / HTTP/1.0`请求，得到以下输出：
- en: '![File transfers and backdoors with Ncat](img/4065OS_08_05.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncat进行文件传输和后门操作](img/4065OS_08_05.jpg)'
- en: Although it clearly doesn't render as well as a web browser like Chrome or Firefox
    would, you can see the HTTP/HTML response from the web server quite clearly. This
    same functionality of Ncat can also be used to connect to many different types
    of services, including SMTP, FTP, POP3, and so on. When trying to send different
    inputs to different protocols, Ncat can be invaluable!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它显然不像Chrome或Firefox等网页浏览器那样渲染得好，但你可以很清楚地看到来自Web服务器的HTTP/HTML响应。Ncat的这种功能也可以用于连接到许多不同类型的服务，包括SMTP、FTP、POP3等等。当尝试向不同的协议发送不同的输入时，Ncat可以非常有价值！
- en: Ncat is also very useful when conducting a penetration test or security assessment,
    as it can be used as both a method for data exfiltration, and as a way to have
    a persistent backdoor into a compromised system.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行渗透测试或安全评估时，Ncat也非常有用，因为它既可以用作数据外泄的方法，也可以用作对受损系统的持久后门。
- en: 'The ability to send a file through Ncat uses both the "listen" and "connect"
    functionalities of the tool. The following screenshot shows a very basic Ncat
    command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Ncat发送文件的能力使用了工具的“监听”和“连接”功能。以下截图显示了一个非常基本的Ncat命令：
- en: '![File transfers and backdoors with Ncat](img/4065OS_08_06.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncat进行文件传输和后门操作](img/4065OS_08_06.jpg)'
- en: To begin, we set up an Ncat listener using the `-l` or `listen` flag. Since
    we are expecting a file, we can pipe the output to `received.txt`. We always want
    to make sure that we are outputting the type of file that we're expecting so that
    we don't have to deal with changing file types at a later date. When setting up
    the listener, we can also set up a specific port (which is useful on penetration
    tests); but in this case, we left the default port of 31337 intact.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们使用`-l`或`listen`标志设置了一个Ncat监听器。由于我们期望接收一个文件，我们可以将输出导向`received.txt`。我们始终要确保输出的文件类型与我们期望的文件类型相匹配，这样我们就不必在以后处理更改文件类型的问题。在设置监听器时，我们还可以设置一个特定的端口（在渗透测试中很有用）；但在这种情况下，我们保留了默认端口31337。
- en: '![File transfers and backdoors with Ncat](img/4065OS_08_07.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncat进行文件传输和后门操作](img/4065OS_08_07.jpg)'
- en: 'We can see in the preceding screenshot that somewhere else (not in the listener)
    we have a file called `send.txt` with the `this is the file that we are going
    to send!` content. Sending the file is easy! All we need to do is invoke Ncat,
    point it at a localhost (again, we''re using the default port of 31337 so no port
    specification is necessary), and pipe the input from `send.txt`. The following
    screenshot demonstrates opening a received text file:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，在其他地方（不在监听器中）我们有一个名为`send.txt`的文件，其中包含`这是我们要发送的文件！`的内容。发送文件很容易！我们只需要调用Ncat，将其指向本地主机（同样，我们使用默认端口31337，因此不需要指定端口），并将输入从`send.txt`管道传输。以下截图演示了打开接收到的文本文件：
- en: '![File transfers and backdoors with Ncat](img/4065OS_08_08.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncat进行文件传输和后门操作](img/4065OS_08_08.jpg)'
- en: As we can see in the preceding screenshot, Ncat will automatically close out
    once the file is received. Once we actually receive the file, it's as simple as
    "cat"-ing the file we received to see that it is in fact the same content as the
    one we sent.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的截图中看到的，一旦接收到文件，Ncat将自动关闭。一旦我们实际接收到文件，只需简单地使用“cat”命令查看我们接收到的文件，就可以看到它实际上与我们发送的内容相同。
- en: 'Lastly, Ncat can also be used as a backdoor, in order to create persistent
    access to a compromised system. The following screenshot shows this basic functionality:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Ncat还可以用作后门，以创建对受损系统的持久访问。以下截图显示了这个基本功能：
- en: '![File transfers and backdoors with Ncat](img/4065OS_08_09.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncat进行文件传输和后门操作](img/4065OS_08_09.jpg)'
- en: 'As seen in the preceding screenshot, establishing a shell connection via Ncat
    is very simple. We used `ncat -l -e /bin/bash` to listen on the default, and executed
    `/bin/bash` (our shell) when a client connected. It''s worth noting that in this
    form, the backdoor is not persistent—meaning that it will not stay listening after
    the client has disconnected. The following screenshot demonstrates the ability
    to run Linux commands on a remote system through Ncat:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，通过Ncat建立shell连接非常简单。我们使用`ncat -l -e /bin/bash`在默认端口上监听，并在客户端连接时执行`/bin/bash`（我们的shell）。值得注意的是，在这种形式下，后门不是持久的，意味着在客户端断开连接后不会保持监听。以下截图演示了通过Ncat在远程系统上运行Linux命令的能力：
- en: '![File transfers and backdoors with Ncat](img/4065OS_08_10.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ncat进行文件传输和后门操作](img/4065OS_08_10.jpg)'
- en: In order to connect to the shell, as shown in the preceding screenshot, we can
    simply invoke `ncat localhost` (since the port is still default) and have a bash
    shell spawn our prompt. In this case, we ran `whoami` and received back `dshaw`,
    then executed a `ls` command and received a directory listing of the remote directory.
    While other backdoor access methods may be more reliable or complicated, it is
    hard to think of one more simple!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为了连接到shell，如前面的屏幕截图所示，我们可以简单地调用`ncat localhost`（因为端口仍然是默认的），并让一个bash shell生成我们的提示符。在这种情况下，我们运行了`whoami`，收到了`dshaw`，然后执行了`ls`命令，并收到了远程目录的目录列表。虽然其他后门访问方法可能更可靠或更复杂，但很难想象有更简单的方法！
- en: Comparing Nmap results with Ndiff
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ndiff比较Nmap结果
- en: 'The last tool that comes packed with the Nmap suite is Ndiff. For those unfamiliar
    with the traditional *NIX tool "diff," it is designed to visually show the differences
    between two separate files of text. In other words, if you (for example) want
    to see which lines of code changed when a patch was applied, you can "diff" the
    new patch and the old code, and visually see the differences. The following screenshot
    shows a basic Nmap command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Nmap套件中附带的最后一个工具是Ndiff。对于那些不熟悉传统的* NIX工具“diff”的人来说，它旨在直观地显示两个单独的文本文件之间的差异。换句话说，如果您（例如）想要查看在应用补丁时哪些代码行发生了变化，您可以“diff”新补丁和旧代码，并直观地看到差异。以下屏幕截图显示了一个基本的Nmap命令：
- en: '![Comparing Nmap results with Ndiff](img/4065OS_08_11.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ndiff比较Nmap结果](img/4065OS_08_11.jpg)'
- en: In the preceding screenshot, we launched a scan against my web server—`dshaw.net`—for
    ports 80 and 81\. We named our first scan `scan1.xml` and ran another scan against
    the same host—we called it `scan2.xml`. The only difference is that I used Ncat
    (which we learned about earlier in this chapter) to open up port 81 to the Internet.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的屏幕截图中，我们针对我的Web服务器`dshaw.net`的80和81端口启动了一次扫描。我们命名了我们的第一次扫描为`scan1.xml`，并对同一主机进行了另一次扫描——我们称之为`scan2.xml`。唯一的区别是我使用了Ncat（我们在本章前面学到的）来将端口81打开到互联网。
- en: 'In order to compare the results, we simply have to call `ndiff scan1.xml scan2.xml`—very
    straightforward. The following screenshot demonstrates this command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了比较结果，我们只需调用`ndiff scan1.xml scan2.xml`——非常简单。以下屏幕截图演示了这个命令：
- en: '![Comparing Nmap results with Ndiff](img/4065OS_08_12.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![使用Ndiff比较Nmap结果](img/4065OS_08_12.jpg)'
- en: As you can clearly see in the preceding screenshot, the Ndiff output—which uses
    the same format as the traditional "diff" tool—shows `+` and `–` to indicate which
    lines are new or old. Since it parses through the actual XML file, rather than
    just the text output, Ndiff can successfully determine when new hosts were added
    in their entirety, rather than just being in a different place in the output.
    In this case, it's very clear that port 81 (with only a default "service" tag,
    rather than actual version scanning) was open in the second scan, but not the
    first. This tool is very useful for system administrators who want to view the
    state of their network over time.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的屏幕截图中清楚地看到的那样，Ndiff输出使用与传统“diff”工具相同的格式，显示`+`和`-`表示哪些行是新的或旧的。由于它解析实际的XML文件，而不仅仅是文本输出，因此Ndiff可以成功确定何时完全添加了新的主机，而不仅仅是在输出中的不同位置。在这种情况下，很明显端口81（只有一个默认的“service”标签，而不是实际的版本扫描）在第二次扫描中是打开的，而在第一次扫描中不是。这个工具对于想要随时间查看其网络状态的系统管理员非常有用。
- en: Summary
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter gave an overview of the additional tools that ship with the Nmap
    suite, and the various tasks that we can accomplish using them. Although Nmap
    itself is wonderful, in order to have the full breadth of Nmap's usefulness, we
    need to use some of the packaged tools as well.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了Nmap套件附带的其他工具，以及我们可以使用这些工具完成的各种任务。虽然Nmap本身很棒，但为了充分发挥Nmap的用途，我们需要使用一些打包的工具。
- en: In the next chapter, we will learn how to use Nmap with other tools outside
    of the Nmap suite, in order to conduct a fully functional security assessment,
    or penetration tests.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何将Nmap与Nmap套件之外的其他工具结合使用，以进行完全功能的安全评估或渗透测试。
