- en: Identifying Android Malware
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别安卓恶意软件
- en: Identifying malware is a typical task in many Android forensic examinations.
    In this chapter, we will start with an overview of the most common Android malware
    types, and then walk you through the process of identifying malware on Android
    devices using different methods.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 识别恶意软件是许多安卓取证检查中的典型任务。本章将首先介绍最常见的安卓恶意软件类型概述，然后带你了解使用不同方法识别安卓设备中的恶意软件的过程。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: An introduction to Android malware
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安卓恶意软件简介
- en: Android malware overview
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安卓恶意软件概述
- en: Identifying Android malware
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别安卓恶意软件
- en: An introduction to Android malware
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安卓恶意软件简介
- en: Nowadays, malicious programs are common on any operating system, and mobile
    devices are no exception. Even such secure devices as those running iOS, iPhones,
    and iPads, can be infected. A good example is **Pegasus** spyware, which was used
    to attack Arab human rights defender, Ahmed Mansoor, in 2016\. It is able to jailbreak
    the target device and plant spyware on it, thereby enabling attackers to read
    a victim's messages, track calls, collect passwords, trace the phone's location,
    and gather information from different applications.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，恶意程序在任何操作系统上都很常见，移动设备也不例外。即使是像运行iOS的设备、iPhone和iPad这样的安全设备，也可能会感染恶意软件。一个很好的例子是**Pegasus**间谍软件，它在2016年被用于攻击阿拉伯人权捍卫者Ahmed
    Mansoor。它能够越狱目标设备并植入间谍软件，从而使攻击者能够读取受害者的消息、追踪电话、收集密码、定位手机，并从不同的应用程序收集信息。
- en: If we are talking about Android, the situation is even worse. It is easier to
    install applications from untrusted sources, making it the most malware-affected
    mobile platform. What's more, security researchers often find lots of malware
    samples even on the Google Play Store! A good example is the **Android Grabos**
    campaign, discovered by McAfee in late 2017/early 2018\. This campaign pushed
    unwanted apps onto unsuspecting users—this is commonly known as a pay-per download
    scam. 144 apps were identified by security researchers and removed from Google
    Play. But around 17.5 million global smartphone devices had already downloaded
    those applications before they were removed from the store.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们谈论安卓系统，情况更为严重。从不受信任的来源安装应用程序更容易，这使得安卓成为受恶意软件影响最严重的移动平台。更重要的是，安全研究人员经常在Google
    Play商店发现大量恶意软件样本！一个很好的例子是**Android Grabos**运动，它是在2017年底/2018年初由McAfee发现的。这个运动将不需要的应用推送给毫无防备的用户——这通常被称为按下载付费骗局。安全研究人员发现并从Google
    Play中移除了144个应用程序。但在它们被移除之前，全球约有1750万台智能手机设备已经下载了这些应用。
- en: Let's go further now and look at the most common types of Android malware.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们进一步了解最常见的安卓恶意软件类型。
- en: Android malware overview
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安卓恶意软件概述
- en: As you may know, different types of malware have different goals, so they have
    different functionalities as well. Some malicious programs spy on the victim and
    attempt to steal application data, for example, SMS messages, and emails, while
    others just show the user unwanted advertisements. This section will introduce
    you to the most common types of Android malware.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，不同类型的恶意软件有不同的目标，因此它们的功能也各不相同。一些恶意程序会监视受害者并试图窃取应用数据，例如短信和电子邮件，而另一些则仅仅是向用户显示不需要的广告。本节将向你介绍最常见的安卓恶意软件类型。
- en: Banking malware
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 银行恶意软件
- en: Banking malware is one of the most popular varieties on the Android platform.
    It can be distributed as fake banking applications to steal banking information
    typed by the users, or as a third-party application that will steal such info
    from a genuine one. Also, usually, banking Trojans can intercept banking transactions,
    and perform actions typical of spyware, such as sending, deleting, and intercepting
    SMS messages, and keylogging. Some pieces of banking Trojans have even more advanced
    capabilities. A good example is **MysteryBot**—this can also send spam from the
    affected device and has ransomware capabilities.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 银行恶意软件是安卓平台上最常见的恶意软件之一。它可以伪装成假冒银行应用程序来窃取用户输入的银行信息，或者作为一个第三方应用从真实的银行应用中窃取信息。此外，银行木马通常可以拦截银行交易，并执行典型的间谍软件行为，例如发送、删除和拦截短信，以及键盘记录。一些银行木马甚至具有更高级的功能。一个很好的例子是**MysteryBot**——它还可以从受感染设备发送垃圾邮件，并具备勒索软件功能。
- en: Spyware
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 间谍软件
- en: Spyware monitors, logs, and sends important information from the target device
    to the attacker's server. This information might be comprised of SMS messages,
    recorded phone calls, screenshots, keylogs, emails, or any other application data
    that may be of interest to the attacker. An interesting example is **BusyGasper**, identified
    by Kaspersky Lab experts in early 2018\. It not only possesses common spyware
    capabilities, such as collecting information from popular messаging applications,
    such as WhatsApp, Viber, and Facebook, but it also has device sensor listeners,
    including motion detectors.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 间谍软件监视、记录并将目标设备的重要信息发送到攻击者的服务器。这些信息可能包括短信消息、录音电话、截屏、按键记录、电子邮件或可能对攻击者感兴趣的任何其他应用程序数据。一个有趣的例子是
    **BusyGasper**，由卡巴斯基实验室专家于 2018 年初发现。它不仅具有收集来自 WhatsApp、Viber 和 Facebook 等流行消息应用程序的信息的常见间谍软件功能，还具有设备传感器监听器，包括运动检测器。
- en: Adware
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 广告软件
- en: Adware is another popular malicious or unwanted application type that is very
    common on Android devices. It is relatively easy to detect, as the victim will receive
    continuous popups and ads on their device's screen. Such unwanted programs are
    not always harmless, since popups may result in the downloading of another piece
    of malware, including the types already mentioned—spyware and banking Trojans.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 广告软件是另一种在 Android 设备上非常常见的恶意或不需要的应用程序类型。它相对容易检测，因为受害者会在其设备屏幕上接收持续的弹出窗口和广告。这些不受欢迎的程序并不总是无害的，因为弹出窗口可能导致下载另一种恶意软件，包括已提到的间谍软件和银行木马。
- en: Ransomware
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 勒索软件
- en: Of course, the main targets of ransomware are desktop Windows-based computers
    and servers, but it also exists on mobile platforms, and on Android in particular.
    Usually, it only locks the device screen with a ransom note, but sometimes it
    encrypts users' data as well. A good example is **WannaLocker **ransomware, which
    targeted Chinese Android users in 2017, and used AES to encrypt users' files,
    except those whose names start with `.` and files that have `DCIM`, `download`, `miad`,
    `android`, and `com`. in their pathname.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，勒索软件的主要目标是桌面 Windows 计算机和服务器，但它也存在于移动平台上，尤其是 Android。通常，它只锁定设备屏幕并附上勒索信息，但有时也会加密用户的数据。一个很好的例子是
    2017 年针对中国 Android 用户的 **WannaLocker** 勒索软件，它使用 AES 加密用户的文件，除了其路径名以 `.` 开头和包含
    `DCIM`、`download`、`miad`、`android` 和 `com` 的文件。
- en: Cryptomining malware
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密货币挖掘恶意软件
- en: Cryptocurrencies are extremely popular nowadays, so this type of malicious program
    is available even for mobile platforms, such as Android. The goal of such applications
    is to mine cryptocurrency, using a victim's device computation capacity, for example,
    Monero. Occasionally, this type of malware can even put smartphone hardware at
    risk. For example, **Loapi**, a Trojan with cryptomining capabilities, worked
    victims' phones so hard that their batteries swelled up in less than 48 hours!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 加密货币现在非常流行，因此这种类型的恶意程序甚至适用于 Android 等移动平台。此类应用程序的目标是使用受害者设备的计算能力来挖掘加密货币，例如 Monero。有时，这种类型的恶意软件甚至会使智能手机硬件处于风险之中。例如，具有加密货币挖掘功能的木马
    **Loapi** 会让受害者的手机工作得非常辛苦，以至于其电池在不到 48 小时内膨胀！
- en: The following section walks you through identifying malicious applications on
    Android devices.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将指导您识别 Android 设备上的恶意应用程序。
- en: Android malware identification
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android 恶意软件识别
- en: This section walks you through the process of identifying Android malware in
    forensic images using antivirus scanners, VirusTotal, and YARA rules.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将指导您如何使用防病毒扫描器、VirusTotal 和 YARA 规则在取证镜像中识别 Android 恶意软件的过程。
- en: Android malware identification using antivirus scanners
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用防病毒扫描器在 Android 设备上识别恶意软件
- en: Using antivirus scanners is a typical way to find known pieces of malware, so
    it's a recommended first step for picking low-hanging fruit. There are a multitude
    of antivirus scanners, with many of them having free versions that can be used
    by mobile forensic examiners to complete such tasks. Most of them are Windows-based,
    so the first step is to mount a previously created physical image so that it will
    be accessible to the operating system and antivirus scanner.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用防病毒扫描器是查找已知恶意软件的典型方法，因此这是选择低 hanging fruit 的推荐第一步。有许多防病毒扫描器，其中许多都有免费版本，移动取证检查员可以使用这些版本完成这些任务。其中大多数是基于
    Windows 的，因此第一步是挂载先前创建的物理镜像，以便操作系统和防病毒扫描器可以访问它。
- en: As you already know, most Android devices use EXT4 as the filesystem for the
    most interesting partition from a forensic point of view—the userdata partition.
    By default, this filesystem isn't supported by Windows, so we need a third-party
    tool to be able to mount it and, more importantly, in read-only mode, as we don't
    want the antivirus scanner to delete anything from the image we are going to examine.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，大多数Android设备使用EXT4作为文件系统，尤其是从取证角度来看最有趣的分区——userdata分区。默认情况下，Windows不支持这种文件系统，因此我们需要一个第三方工具来挂载它，更重要的是，必须以只读模式进行挂载，因为我们不希望防病毒扫描器删除我们将要检查的镜像中的任何内容。
- en: 'Of course, forensic examiners have such a tool available. It''s called *Linux
    File Systems for Windows*, and its trial version is available for download here:
    [https://www.paragon-drivers.com/en/lfswin/](https://www.paragon-drivers.com/en/lfswin/).
    After installation, you are ready to start mounting the userdata partition. You''ll
    need FTK Imager, but you should have it already installed, as we used it in the
    previous chapters. Here is how to mount an ext4 partition on a Windows host in
    two simple steps:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，取证检查员有这样的工具可以使用。它叫做*Linux文件系统 for Windows*，其试用版可以在此下载：[https://www.paragon-drivers.com/en/lfswin/](https://www.paragon-drivers.com/en/lfswin/)。安装后，你就可以开始挂载userdata分区了。你需要FTK
    Imager，但应该已经安装了它，因为我们在前面的章节中使用过它。以下是在Windows主机上挂载ext4分区的两步简单操作：
- en: Open FTK Imager and go to File | Image Mounting...
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开FTK Imager，点击文件|映像挂载...
- en: '![](img/b72c30f2-fa90-491e-9020-b47122bd2c00.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b72c30f2-fa90-491e-9020-b47122bd2c00.png)'
- en: AccessData FTK Imager
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: AccessData FTK Imager
- en: 'Choose the image file. In our case, it''s an Android 9 userdata partition physical
    image. Choose Physical & Logical as the mount type, Block Device / Read Only as
    the mount method, and then click the Mount button:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择镜像文件。在我们的例子中，它是一个Android 9 userdata分区的物理镜像。选择物理与逻辑作为挂载类型，选择块设备 / 只读作为挂载方式，然后点击挂载按钮：
- en: '![](img/8f03e091-3b99-425a-b94f-036702d5b3e2.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8f03e091-3b99-425a-b94f-036702d5b3e2.png)'
- en: Mounting an EXT4 image with FTK Imager
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用FTK Imager挂载EXT4镜像
- en: 'That''s it! Now the filesystem is available as logical disk `E:` on our Windows
    10 host:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！现在文件系统作为逻辑磁盘`E:`在我们的Windows 10主机上可用了：
- en: '![](img/f38c5744-b3b6-4234-ba87-b042d0b75b98.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f38c5744-b3b6-4234-ba87-b042d0b75b98.png)'
- en: Part of a mounted filesystem, as seen in Windows Explorer
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Windows资源管理器中挂载的文件系统的一部分
- en: 'Now it can be easily scanned with an antivirus scanner. Usually, user-installed
    applications can be found under the `/data/app` directory, so it may be a very
    good idea to start our malware hunting by scanning this folder. For this example,
    we will use ESET NOD32 antivirus ([https://www.eset.com/int/home/antivirus/](https://www.eset.com/int/home/antivirus/)).
    It has a very interesting option from a forensic point of view—**Scan without
    cleaning**. This enables an examiner to find a piece of malware, but not delete
    or quarantine it. To choose it, right-click on your folder of choice, and go to
    Advanced options. In our case, scanning only took a few seconds, and the result
    yielded two malicious objects:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以使用防病毒扫描器轻松扫描它。通常，用户安装的应用程序可以在`/data/app`目录下找到，因此，开始我们的恶意软件检测时扫描这个文件夹可能是一个非常好的主意。对于本例，我们将使用ESET
    NOD32防病毒软件（[https://www.eset.com/int/home/antivirus/](https://www.eset.com/int/home/antivirus/)）。从取证的角度来看，它有一个非常有趣的选项——**扫描不清除**。这使得检查人员能够找到恶意软件，但不会删除或隔离它。要选择此选项，右键点击你选择的文件夹，然后进入高级选项。在我们的例子中，扫描只用了几秒钟，结果显示出了两个恶意对象：
- en: '![](img/e6fe3801-cfc8-4dbb-84e2-9f9d7b70a41e.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6fe3801-cfc8-4dbb-84e2-9f9d7b70a41e.png)'
- en: Antivirus scan log
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 防病毒扫描日志
- en: As you can see, sometimes, especially if you know where to look, you can find
    Android malware very quickly and easily using antivirus engines. Of course, the
    software you are using may not contain corresponding signatures and may miss malicious
    applications, so it's highly recommended to use multiple engines for scanning.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，有时候，尤其是如果你知道在哪里查找，使用防病毒引擎可以非常快速、轻松地找到Android恶意软件。当然，你使用的软件可能没有包含相应的签名，可能会漏掉恶意应用程序，因此强烈建议使用多个引擎进行扫描。
- en: Android malware identification using VirusTotal
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用VirusTotal识别Android恶意软件
- en: VirusTotal is a free service that can be used to analyze suspicious files and
    URLs for malware. As you may have noticed, Android applications have an `.apk`
    extension, so if you find a suspicious file, you may want to upload it to VirusTotal
    to check whether it's actually malicious. Why is this better than scanning with
    an antivirus scanner? It will scan your file with at least 55 antivirus engines!
    What's more, you may not want to upload any files from your real cases to the
    internet, but it's not a problem, as you can search for files that have already
    been uploaded using their hash sums, MD5, SHA1, or SHA256\. This service is available
    here: [https://www.virustotal.com](https://www.virustotal.com).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: VirusTotal 是一个免费的服务，可以用来分析可疑的文件和 URL 是否包含恶意软件。如你所见，Android 应用程序的文件扩展名为 `.apk`，所以如果你发现一个可疑文件，你可能会想把它上传到
    VirusTotal，检查它是否真的是恶意的。为什么这比使用杀毒软件扫描更好？因为它会使用至少 55 个杀毒引擎扫描你的文件！更重要的是，你可能不希望将真实案例中的文件上传到互联网上，但这不是问题，因为你可以通过文件的哈希值
    MD5、SHA1 或 SHA256 来查找已经上传的文件。此服务可以在这里使用：[https://www.virustotal.com](https://www.virustotal.com)。
- en: 'We have already found two malicious files in our Android 9 image, so let''s
    upload one of them to VirusTotal and see how it is detected by other antivirus
    engines. Go to VirusTotal using a web browser of your choice, and click the Choose
    file button:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在 Android 9 镜像中发现了两个恶意文件，因此让我们将其中一个文件上传到 VirusTotal，看看它是如何被其他杀毒引擎检测到的。使用你选择的网页浏览器访问
    VirusTotal，然后点击“选择文件”按钮：
- en: '![](img/02a25991-91ea-4b69-9112-718b6b67baaa.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/02a25991-91ea-4b69-9112-718b6b67baaa.png)'
- en: VirusTotal interface
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: VirusTotal 界面
- en: 'If a file''s hash is already in the database, you''ll immediately be redirected
    to the page with the results; if not, it will need some time to scan it. In our
    case, the file''s hash has been found immediately, and we see the results:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文件的哈希值已经在数据库中，你将立即被重定向到包含结果的页面；如果没有，系统将需要一些时间来扫描该文件。在我们的例子中，文件的哈希值已立即找到，我们看到了结果：
- en: '![](img/2443dee3-00ac-4a5b-ac79-cb16edafa447.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2443dee3-00ac-4a5b-ac79-cb16edafa447.png)'
- en: VirusTotal scan results
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: VirusTotal 扫描结果
- en: As you can see, our malware sample has been detected by 29 antivirus engines
    out of 56 – not bad at all. But what if we didn't want to upload our sample? As
    previously mentioned, you can use hashes to search for malicious files on VirusTotal.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们的恶意软件样本已经被 56 个杀毒引擎中的 29 个检测到——表现还不错。但如果我们不想上传我们的样本呢？如前所述，你可以使用哈希值在 VirusTotal
    上查找恶意文件。
- en: 'To obtain a suspicious file''s hash sum, you can use Eric Zimmerman''s free
    tool, called Hasher, which is available at [https://ericzimmerman.github.io](https://ericzimmerman.github.io).
    Now take the following steps:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 若要获取可疑文件的哈希值，你可以使用 Eric Zimmerman 提供的免费工具 Hasher，该工具可在 [https://ericzimmerman.github.io](https://ericzimmerman.github.io)
    上下载。接下来请按照以下步骤操作：
- en: Start the tool, go to Tools - Options, and choose hashing algorithms. In our
    case, we chose MD5 and SHA256.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动工具，进入工具 - 选项，选择哈希算法。在我们的案例中，我们选择了 MD5 和 SHA256。
- en: 'To select the file you want to hash, go to File - Select file, or press *Alt*
    + *1*. You''ll see the results in the main window:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要选择你想要哈希的文件，进入文件 - 选择文件，或者按 *Alt* + *1*。你将在主窗口看到结果：
- en: '![](img/aac87593-fabc-432a-8edc-697a85d1b3e4.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aac87593-fabc-432a-8edc-697a85d1b3e4.png)'
- en: Hashing results
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希值结果
- en: 'To copy the hash value, click on the corresponding field and press *Alt* +
    *C*. Now you are ready to go to VirusTotal. Click on the Search tab, and paste
    the hash value:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制哈希值，点击相应字段并按 *Alt* + *C*。现在你可以前往 VirusTotal，点击搜索标签，并粘贴哈希值：
- en: '![](img/14f6da0d-076b-4fef-9c12-28119f10f86e.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/14f6da0d-076b-4fef-9c12-28119f10f86e.png)'
- en: Searching VirusTotal using hash values
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用哈希值在 VirusTotal 上搜索
- en: As we used the SHA256 hash sum of the file already scanned by VirusTotal, we
    will be redirected to the same page. But even if we didn't upload the file, we
    would get the result, as the file had already been uploaded by a third party.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用的是已经由 VirusTotal 扫描过的文件的 SHA256 哈希值，我们将被重定向到相同的页面。但即使我们没有上传文件，由于该文件已经被第三方上传，我们也能获得结果。
- en: Sometimes, you have a bunch of files to scan, and it may be a problem to upload
    them one by one. To upload a bunch of files automatically, you can use VirusTotal
    Uploader, which is available here: [https://support.virustotal.com/hc/en-us/articles/115002179065-Desktop-Apps](https://support.virustotal.com/hc/en-us/articles/115002179065-Desktop-Apps).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，你需要扫描一大堆文件，逐个上传可能会很麻烦。为了自动上传一堆文件，你可以使用 VirusTotal Uploader，该工具可以在这里下载：[https://support.virustotal.com/hc/en-us/articles/115002179065-Desktop-Apps](https://support.virustotal.com/hc/en-us/articles/115002179065-Desktop-Apps)。
- en: 'To upload a file or multiple files, click Select file(s) and upload:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要上传一个文件或多个文件，请单击“选择文件”并上传：
- en: '![](img/63432575-4f4c-492b-bba1-3dab0a0546a2.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/63432575-4f4c-492b-bba1-3dab0a0546a2.png)'
- en: VirusTotal Uploader inteface
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: VirusTotal上传工具界面
- en: 'For demonstration purposes, let''s upload the second malicious file we have
    already identified. Its hash value was found as well, so the tool immediately
    opened the browser tab containing the scan results:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示目的，让我们上传我们已经识别的第二个恶意文件。它的哈希值也被找到了，所以工具立即打开了包含扫描结果的浏览器选项卡：
- en: '![](img/dace1291-1a32-493e-8a91-4a97822218f8.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dace1291-1a32-493e-8a91-4a97822218f8.png)'
- en: VirusTotal scan results
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: VirusTotal扫描结果
- en: This file has even better detection results—34 engines out of 60\. But what
    is a forensic examiner going to do if the file isn't detected by any of the antivirus
    engines as there are no signatures for it? Write your own rules using YARA! You'll
    learn how to do this in the following section.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件的检测结果更好 —— 60个引擎中有34个。但如果文件没有被任何防病毒引擎检测到，因为没有对应的签名，法医检查员该怎么办呢？使用YARA编写您自己的规则吧！您将在接下来的章节中学习如何做到这一点。
- en: Android malware identification using YARA rules
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用YARA规则进行Android恶意软件识别
- en: According to the official documentation (which can be found at [https://yara.readthedocs.io/en/v3.8.1/](https://yara.readthedocs.io/en/v3.8.1/)),
    YARA is a tool aimed at helping malware researchers (and forensic examiners—both
    computer and mobile, of course) to identify and classify malware samples.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 根据官方文档（可在[https://yara.readthedocs.io/en/v3.8.1/](https://yara.readthedocs.io/en/v3.8.1/)找到），YARA是一个旨在帮助恶意软件研究人员（当然也包括计算机和移动设备的法医检查员）识别和分类恶意软件样本的工具。
- en: 'With the help of YARA, an examiner can write rules based on textual or binary
    patterns. Here is an example of such a rule:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 借助YARA的帮助，检查员可以基于文本或二进制模式编写规则。这里是这样一个规则的示例：
- en: '[PRE0]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This rule will detect any file that contains the `teststring` string. Let''s
    look closely at the principal parts of the rule:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 此规则将检测包含`teststring`字符串的任何文件。让我们仔细看看规则的主要部分：
- en: '`meta`: This part contains the rule''s metadata, for example, what exactly
    it detects, and who wrote it. It may even not be included in the rule.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`meta`：此部分包含规则的元数据，例如它确切地检测到什么以及谁编写了它。它甚至可能不包含在规则中。'
- en: '`strings`: These are strings that your malware sample must contain in order
    to be detected. You can use multiple strings or even binary patterns. Strings
    can be case-sensitive or not, and in ASCII or wide form (two bytes are used to
    encode a single character), or both.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strings`：这些是您的恶意软件样本必须包含的字符串，以便进行检测。您可以使用多个字符串或甚至二进制模式。字符串可以区分大小写，也可以是ASCII格式或宽字符形式（两个字节用于编码一个字符），或者两者兼有。'
- en: '`condition`: This contains a Boolean expression telling us under what circumstances
    a file satisfies the rule. It may be all the strings defined in the `strings`
    section, or a limited number of them.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`condition`：这部分包含一个布尔表达式，告诉我们在什么情况下文件满足规则。它可以是在`strings`部分定义的所有字符串，也可以是其中有限数量的字符串。'
- en: Let's write a YARA rule to detect a piece of malware we already identified in
    the previous sections. First of all, we must find unique strings. To be able to
    do this, let's use another forensic tool from Eric Zimmerman – bstrings: [https://ericzimmerman.github.io/](https://ericzimmerman.github.io/).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写一个YARA规则来检测我们在前几节已经识别的恶意软件。首先，我们必须找到唯一的字符串。为了能够做到这一点，让我们使用Eric Zimmerman的另一个法庭工具bstrings：[https://ericzimmerman.github.io/](https://ericzimmerman.github.io/)。
- en: 'This is a command-line tool, so you''ll have to run it from the Windows Command
    Prompt. Use the `-f` switch to point to the file you want to extract strings from:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个命令行工具，因此您必须从Windows命令提示符中运行它。使用`-f`开关指定要从中提取字符串的文件：
- en: '![](img/aef46ecf-dfae-4611-969e-93c7e19d8f9e.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aef46ecf-dfae-4611-969e-93c7e19d8f9e.png)'
- en: Using bstrings to extract strings from an APK file
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 使用bstrings从APK文件中提取字符串
- en: 'An interesting string emerges from the very outset – `com.example.horsenjnj`.
    But how can we determine whether it''s unique? A good idea is to search for the
    string in Google or another available search engine:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 从一开始就出现了一个有趣的字符串 —— `com.example.horsenjnj`。但我们如何确定它是否是唯一的呢？一个好主意是在Google或其他可用的搜索引擎中搜索这个字符串：
- en: '![](img/cbd489ac-3fd8-4a6e-8a47-79ab4fd05674.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cbd489ac-3fd8-4a6e-8a47-79ab4fd05674.png)'
- en: Google search results
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌搜索结果
- en: As you can see, there is only one search result, which makes the string we found
    unique. What's more, if we click the link, it will bring us to the VirusTotal
    page we already saw in the previous section.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，只有一个搜索结果，这使我们找到的字符串变得独特。而且，如果我们点击链接，它将带我们到我们在前一部分已经看过的VirusTotal页面。
- en: If we scroll the output of strings, we will find more interesting strings, for
    example, `res/xml/shit.xml`– not a very common name for an XML file from application
    resources.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们滚动字符串的输出，我们会发现更多有趣的字符串，例如 `res/xml/shit.xml`—这个名称并不是应用程序资源中的常见 XML 文件名称。
- en: Let's use two of the strings we have found to write a YARA rule for the detection
    of our piece of malware. As you may remember from the previous sections, most
    antivirus engines detected it as Android Banker, so let's call our rule `android_banker`.
    The same can be written in the description—**Detects Android Banker**; we will
    add this to the `meta` section. We have two strings for our rule. Since we don't
    know how they are encoded, we can add `ascii wide` after each of them. The final
    section—the condition (the file that will be detected by the rule) must contain
    both strings, so let's use `all of them` as the condition.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用我们发现的两个字符串编写一个 YARA 规则来检测我们的恶意软件样本。如您从前面的章节中记得，大多数杀毒引擎将其检测为 Android Banker，所以我们将我们的规则命名为
    `android_banker`。同样可以在描述中写出—**检测 Android Banker**；我们会将其添加到 `meta` 部分。我们有两个字符串供规则使用。由于我们不知道它们的编码方式，我们可以在它们后面添加
    `ascii wide`。最后一部分—条件（将被规则检测到的文件）必须包含这两个字符串，因此我们将使用 `all of them` 作为条件。
- en: 'Here is what we end up with:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们最终得到的结果：
- en: '[PRE1]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To use it, you must save it as a file with the `.yar` extension. Now, all you
    need is a scanner capable of using YARA rules. You can get one here: [https://github.com/virustotal/yara/releases/](https://github.com/virustotal/yara/releases/).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用它，您必须将其保存为一个以`.yar`扩展名结尾的文件。现在，您需要的只是一个能够使用 YARA 规则的扫描器。您可以在这里获得： [https://github.com/virustotal/yara/releases/](https://github.com/virustotal/yara/releases/)。
- en: 'The scanner is another command-line tool. Use the `-r` switch to scan a directory
    of your choice recursively:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描器是另一个命令行工具。使用 `-r` 开关递归扫描您选择的目录：
- en: '![](img/eaf608a2-2b85-4c0a-96f9-8d05b09049a2.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eaf608a2-2b85-4c0a-96f9-8d05b09049a2.png)'
- en: Scanning for malware using YARA rules
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 YARA 规则扫描恶意软件
- en: As you can see from the preceding screenshot, our malware sample was successfully
    identified by the YARA scanner.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从前面的截图中看到的，我们的恶意软件样本已成功被 YARA 扫描器识别。
- en: You can create more complex rules, of course, and the official YARA documentation
    is a very good reference source. This can be found at [https://yara.readthedocs.io/en/v3.8.1/](https://yara.readthedocs.io/en/v3.8.1/).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您可以创建更复杂的规则，官方的 YARA 文档是一个非常好的参考资源。您可以在这里找到它：[https://yara.readthedocs.io/en/v3.8.1/](https://yara.readthedocs.io/en/v3.8.1/)。
- en: Summary
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter has shown you how to identify malware in forensic images of Android
    smartphones and tablets using antivirus scanners, VirusTotal, and YARA rules,
    as well as how to write your own rules.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 本章向您展示了如何使用杀毒扫描器、VirusTotal 和 YARA 规则，在 Android 智能手机和平板电脑的取证镜像中识别恶意软件，以及如何编写您自己的规则。
- en: The final chapter will introduce you to Android malware analysis techniques,
    including the basics of dynamic and static analyses of malicious applications.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一章将向您介绍 Android 恶意软件分析技术，包括恶意应用程序的动态和静态分析基础。
