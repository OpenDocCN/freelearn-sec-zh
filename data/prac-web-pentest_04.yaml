- en: All About Using Burp Suite
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于使用Burp Suite
- en: You are getting closer and closer to becoming a pro in application security
    testing. This chapter is dedicated to an amazing application called **Burp Suite**.
    It is a mandatory tool for testing web application security. I'm not trying to
    sell you the application; rather, I'm giving you an honest opinion, based on my
    own experience as a web application penetration tester. Burp was written by PortSwigger
    Ltd. I can't thank them enough for allowing us to test web applications, making
    sure that they are secure against threats.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你距离成为应用安全测试专家越来越近了。本章将介绍一个令人惊叹的应用——**Burp Suite**。它是进行Web应用安全测试的必备工具。我不是要推销这个应用，而是基于我作为Web应用渗透测试员的个人经验，给出一个诚实的意见。Burp是由PortSwigger
    Ltd.开发的。我无法足够感谢他们，感谢他们让我们可以测试Web应用，确保它们能够抵御各种威胁。
- en: You're probably wondering, why Burp? Why not one of the fancy, expensive, single-button
    tools out there on the market?
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，为什么选择Burp？为什么不选择市场上那些花哨的、昂贵的一键式工具呢？
- en: First of all, just because they are expensive doesn't mean that they are good;
    secondly, don't be a slave to the Gartner charts. Big companies increase their
    prices when they appear at the top of the Gartner chart; they are big businesses,
    and they want to make big bucks. On the other hand, Burp offers many options (from
    manual to automated tests) for only 350 USD per year, compared to other big name
    scanners, which cost thousands of dollars per year. When you work in the security
    field, you will be amazed by how expensive these tools are. Our job, as professionals,
    is to help our clients or companies choose the right tools for their budgets,
    while also providing a professional outcome.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，仅仅因为它们很贵并不意味着它们就是好的；其次，不要盲目跟随Gartner图表的排名。当大公司出现在Gartner图表的顶部时，它们会提高价格；它们是大企业，想赚取巨额利润。另一方面，Burp仅需每年350美元，提供多种选项（从手动到自动化测试），相比其他大品牌扫描工具每年需花费数千美元。当你从事安全领域工作时，你会对这些工具的高价感到震惊。作为专业人士，我们的工作是帮助客户或公司根据预算选择合适的工具，同时确保提供专业的成果。
- en: False positives (fake vulnerabilities that are flagged by the scanner) will
    always be there, and it is your job to differentiate the real vulnerabilities
    from the false ones. Never copy and paste the contents of any report without understanding
    its contents. Try to test a vulnerability and make sure that it's real before
    putting it into a final report.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假阳性（扫描器标记的虚假漏洞）永远存在，而你的工作就是区分真实的漏洞和虚假的漏洞。在没有理解报告内容的情况下，绝不要复制粘贴任何报告的内容。尝试测试一个漏洞，确保它是真的，然后再将其写入最终报告中。
- en: 'In this chapter, I will do my best to cover the ins and outs of Burp Suite,
    including the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将尽力覆盖Burp Suite的各个方面，包括以下内容：
- en: Introducing Burp Suite
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍Burp Suite
- en: Practical examples of how to use Burp Suite
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Burp Suite的实际示例
- en: How to use Burp Proxy
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Burp Proxy
- en: How to install the Burp SSL certificate
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何安装Burp SSL证书
- en: How to crawl a web application
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何爬取Web应用
- en: How to find hidden items using Burp
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Burp查找隐藏项
- en: Using the Burp vulnerabilities scanner
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Burp漏洞扫描器
- en: How to use the Repeater tab
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Repeater标签
- en: Exploring the functionalities of the Intruder tab
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索Intruder标签的功能
- en: How to install additional applications in Burp
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在Burp中安装额外的应用
- en: An introduction to Burp Suite
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Burp Suite简介
- en: Burp Suite is a simple platform for web application security testing. This application
    has many tools, combining to form a monster at your fingertips. It will help you
    to test every component of your web application.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite是一个简洁的Web应用安全测试平台。这个应用包含了许多工具，组合在一起形成了一个强大的测试工具，能够帮助你测试Web应用的每个组件。
- en: Burp will be the key in cases where you need to check how strong your website
    security is, how predictable your session tokens are, or how valid the checkpoint
    data in your application is. Furthermore, Burp allows for detailed manual assessments
    and automated technique combinations, leading to enumerate and analyze web application
    security analysis.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在需要检查网站安全强度、会话令牌的可预测性或应用程序中检查点数据有效性时，Burp将成为关键工具。此外，Burp还支持详细的手动评估和自动化技术组合，从而进行Web应用安全分析的枚举和分析。
- en: 'Burp has two editions that are available for download:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Burp提供两个版本可以下载：
- en: Burp Suite Community Edition (pre-installed on Kali)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Burp Suite社区版（已预装在Kali上）
- en: Burp Suite Professional Edition (requires a yearly license, around 350 USD per
    year)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Burp Suite专业版（需要每年许可证，大约350美元/年）
- en: In summary, Burp is a local web proxy that allows you to manually modify, intercept,
    and inspect HTTP/S requests and responses between a user's browser and the target
    website that you're trying to test. While the user navigates through the web application
    manually, the tool intercepts all of the necessary details on all visited pages.
    The traffic between the server and the browser can be analyzed, modified, visualized,
    and, eventually, repeated multiple times. The professional version of Burp allows
    you to scan and find web application vulnerabilities.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 总结：Burp 是一个本地 web 代理，允许您手动修改、拦截和检查用户浏览器与目标网站之间的 HTTP/S 请求和响应。在用户手动浏览 web 应用程序时，工具会拦截所有访问页面的必要细节。服务器和浏览器之间的流量可以被分析、修改、可视化，并最终多次重复。Burp
    的专业版允许您扫描并发现 web 应用程序的漏洞。
- en: 'The different tools included in Burp Suite can be seen in the tabs area (see
    the following screenshot):'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Suite 中包含的不同工具可以在标签区看到（见下图）：
- en: '![](Images/6554e2b6-f780-4734-a441-8227865424ab.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6554e2b6-f780-4734-a441-8227865424ab.png)'
- en: 'Target: This tool allows you to visualize your target application''s contents
    in a folder structure hierarchy that corresponds to the site''s URL structure. This section
    shows all of the content that has been discovered until now, by manually browsing
    the site''s pages.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标：该工具允许您以与网站 URL 结构对应的文件夹结构层次来可视化目标应用程序的内容。本节展示了通过手动浏览网站页面所发现的所有内容。
- en: 'Proxy: This is the main engine of Burp, which allows it to intercept and modify
    all web traffic.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理：这是 Burp 的主要引擎，它允许拦截和修改所有 web 流量。
- en: 'Spider: This is a web spider tool that crawls applications to locate contents
    and functionalities.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 蜘蛛工具：这是一个 web 蜘蛛工具，能够爬取应用程序以定位内容和功能。
- en: 'Scanner: This tool is a web vulnerability scanner, which discovers numerous
    types of web vulnerabilities (SQLi, XSS, and CSRF) automatically. It is available
    in the professional version only.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描器：这是一个 web 漏洞扫描工具，能够自动发现多种类型的 web 漏洞（SQL 注入、XSS 和 CSRF）。此功能仅在专业版中提供。
- en: 'Intruder: This is a powerful tool for carrying out automated, customized attacks
    against web applications. I call it the web fuzzer; web fuzzing typically involves
    sending unexpected input to the target application. This process may help to identify
    web application security flaws.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入侵者：这是一个强大的工具，用于对 web 应用程序进行自动化的定制化攻击。我称之为 web fuzz 工具；web fuzzing 通常包括向目标应用程序发送意外的输入。这个过程有助于识别
    web 应用程序的安全漏洞。
- en: 'Repeater: As the name suggests, it is used to manually modify and reissue web
    requests.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重发器：顾名思义，它用于手动修改并重新发送 web 请求。
- en: 'Sequencer: This analyzes the quality of randomness in an application''s session
    tokens or other important data items that are intended to be unpredictable.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 序列器：此工具分析应用程序会话令牌或其他重要数据项的随机性质量，这些数据项应该是不可预测的。
- en: 'Decoder: This allows for encoding and decoding data.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解码器：此工具用于编码和解码数据。
- en: 'Comparer: The Burp Comparer is a handy utility for performing a visual diff
    between any two items of data, such as pairs of similar web responses.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较器：Burp Comparer 是一个方便的工具，用于执行任何两项数据（如相似的 web 响应）之间的视觉差异对比。
- en: Extender: Burp Extender (BApp Store) allows you to load Burp extensions, which
    extend Burp's functionalities through using third-party apps.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展工具：Burp Extender（BApp Store）允许您加载 Burp 扩展，这些扩展通过使用第三方应用程序扩展 Burp 的功能。
- en: A quick example
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个快速示例
- en: Before I start to dig deeper into the functionality of each section, it is best
    to start with a simple example, so that you can quickly visualize how you can
    use this amazing application. *"Not just talking but by doing!"*
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在我深入讲解各部分功能之前，最好从一个简单的示例开始，这样您可以快速了解如何使用这个强大的应用程序。 *“不只是说，而是通过实践！”*
- en: 'This is going to be an oversimplified example, so I will not go into too much
    detail. I want you to understand the big picture. Later in this chapter, you will
    learn the nitty-gritty details of the functionalities:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是一个过于简化的示例，因此我不会进入过多的细节。我希望您理解大致框架。稍后在本章中，您将学习到各个功能的具体细节：
- en: Fire Burp up, and open your browser in Kali Linux (I already set the Proxy settings
    in Firefox; I will show you how to do that later).
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Burp，并在 Kali Linux 中打开浏览器（我已经在 Firefox 中设置了代理设置；稍后我会展示如何设置）。
- en: Browse to the Mutillidae home page; you will see that the page is not loading,
    and that's normal, because the Proxy in Burp has intercepted the request and is
    waiting for you to take action.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到Mutillidae主页；您会发现页面未加载，这是正常的，因为Burp中的代理已拦截请求，并正在等待您采取行动。
- en: 'Switch to Burp, and you will see the web request in the Proxy/Intercept section.
    At this point, you can change the request, but I will just send it to the server
    using the Forward button:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到Burp，您将在代理/拦截部分看到Web请求。此时，您可以更改请求，但我将仅使用“转发”按钮将其发送到服务器：
- en: '![](Images/6615c299-985d-4d4e-a743-dc66e5099b3a.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6615c299-985d-4d4e-a743-dc66e5099b3a.png)'
- en: When you click on the Forward button, Burp will send the request to the web
    server. If you enabled the option to intercept the response in the Options tab,
    then you'll see that, as well.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您单击“转发”按钮时，Burp将请求发送到Web服务器。如果您在选项标签中启用了拦截响应的选项，那么您也会看到响应。
- en: 'By default, the response is not intercepted; if you would like to change this
    behavior, go to the Options tab, and make sure that you have the following settings:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，响应不会被拦截；如果您想更改此行为，请转到选项标签，并确保以下设置：
- en: '![](Images/d6073314-886a-431c-8354-bb8db9bac982.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/d6073314-886a-431c-8354-bb8db9bac982.png)'
- en: The preceding settings are the ones that I use for request and response interception
    in Burp on a daily basis (by default, you will have different settings for request/response
    interception).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 前述设置是我每天在Burp中进行请求和响应拦截时使用的设置（默认情况下，你会有不同的请求/响应拦截设置）。
- en: What's next? Let the response go back to the client by clicking on the Forward
    button. Then, switch the interception off by clicking on the Intercept is on button.
    Note that by clicking on this button, Burp will still collect the web requests/responses,
    but they will not stop the page from loading, and it will not give you a chance
    to intercept and change the contents (of the web request/response).
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来做什么？通过单击“转发”按钮，让响应返回客户端。然后，通过单击“拦截已开启”按钮关闭拦截。请注意，通过单击此按钮，Burp仍然会收集Web请求/响应，但它们不会阻止页面加载，并且不会给您拦截和更改内容的机会。
- en: 'I will now go back to the Mutillidae website and try to log in, and then manually
    browse to a couple of pages, because I want burp to start recognizing the structure
    of this website. Now, go back to Burp and click on the Target tab, and you should
    see something similar to the following:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我将返回Mutillidae网站并尝试登录，然后手动浏览几页，因为我希望Burp开始识别此网站的结构。现在，返回Burp并单击“目标”选项卡，您应该看到类似以下内容：
- en: '![](Images/c4d4da74-7f40-4965-9eea-b24e6dce70e2.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/c4d4da74-7f40-4965-9eea-b24e6dce70e2.png)'
- en: 'It looks like Burp intercepted everything that my browser was trying to connect
    with, and that''s normal, because I did not filter or set the scope yet. To do
    this, I will right-click on the Mutillidae server IP address and select Add to
    scope:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 看起来Burp拦截了我浏览器尝试连接的所有内容，这是正常的，因为我还没有过滤或设置范围。要做到这一点，我将右键单击Mutillidae服务器IP地址，然后选择添加到范围：
- en: '![](Images/f8167248-10ec-48ac-a2a9-89b55b4ce8f4.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/f8167248-10ec-48ac-a2a9-89b55b4ce8f4.png)'
- en: 'I''m not done yet; we still need to clean up the mess, showing only the scope
    in the site map tree. To make this happen, click on the Filter: Hiding not found
    items; section, a menu will appear. Select the checkbox to Show only in-scope
    items:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我还没有完成；我们仍然需要清理混乱，只显示站点地图树中的范围内项目。要实现这一点，请单击“过滤器：隐藏未找到的项目”部分，会出现一个菜单。选中复选框以“仅显示范围内项目”：
- en: '![](Images/33c87914-83cd-4ba5-bee1-8f6d91a1f070.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/33c87914-83cd-4ba5-bee1-8f6d91a1f070.png)'
- en: 'Alright! You''re done with this basic tutorial. Here''s what a pen tester can
    do after finishing all of the preceding steps:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！你已经完成了这个基础教程。在完成所有上述步骤之后，渗透测试员可以做以下事情：
- en: '**Spider** the web application branch'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**爬取**Web应用程序分支'
- en: Discover the **hidden contents**
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发现**隐藏内容**
- en: '**Inspect** the web request/response of each page'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**检查**每个页面的Web请求/响应'
- en: '**Passively scan** the web application'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**被动地扫描**Web应用程序'
- en: '**Actively scan** the web application'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**主动扫描**Web应用程序'
- en: '**Perform some manual tests** using the Intruder and Repeater tabs'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用入侵者和重复器标签**执行一些手动测试**
- en: Test the vulnerabilities for **false positives**
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试**假阳性**的漏洞
- en: Generate a **report**
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成**报告**
- en: 'If you have purchased Burp Pro, then you can start it through the Terminal
    window by using the following command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已购买Burp Pro，则可以通过以下命令在终端窗口中启动它：
- en: '` java -jar -Xmx2G /[path]/[burp.jar]`'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '` java -jar -Xmx2G /[path]/[burp.jar]`'
- en: Visualizing the application structure using Burp Target
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Burp Target 可视化应用结构。
- en: In the previous section, you saw how an application can be mapped by using Burp
    in the Target tab. In this section, I want you to learn how Burp Target works
    (in a simplified way) so that you can handle the workflow when you're doing the
    pen tests.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一部分中，你看到了如何通过 Burp 在 Target 标签下映射一个应用。在本节中，我希望你了解 Burp Target 的工作原理（以简化的方式），这样你在进行渗透测试时就可以处理工作流程。
- en: 'The Burp Target tool offers you the following functionalities (I will only
    list the important ones):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Target 工具为你提供了以下功能（我只列出重要的功能）：
- en: '**Visualize** the application structure using the Site Map tab.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Site Map 标签**可视化**应用结构。
- en: Define the **scope** of your target website using Add To Scope.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Add To Scope 定义目标网站的**范围**。
- en: '**Spider** the web application to discover more contents using Spider this
    branch.'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Spider this branch 对 web 应用进行**爬虫**，以发现更多内容。
- en: Search for **hidden contents** using the Discover Content functionality.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Discover Content 功能搜索**隐藏内容**。
- en: Conduct a **passive scan**, using Passively Scan this branch to identify some
    vulnerabilities.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Passively Scan this branch 进行**被动扫描**，以识别一些漏洞。
- en: List **comments**, **scripts**, and **references** by using the Engagement Tools
    menu.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Engagement Tools 菜单列出**评论**、**脚本**和**参考**。
- en: '**Analyze** the web application target to identify all of the dynamic URLs
    and parameters by using Analyze Target.'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分析** web 应用目标，使用 Analyze Target 来识别所有动态 URL 和参数。'
- en: '**Send** **web requests** to another tool tab (for example, Repeater, Sequencer,
    Decoder, Comparer, and Intruder).'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**发送** **web 请求**到其他工具标签（例如，Repeater、Sequencer、Decoder、Comparer 和 Intruder）。'
- en: Conduct a full web application vulnerability scan using Actively scan this branch.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Actively scan this branch 进行全面的 web 应用漏洞扫描。
- en: 'Save the **reports** by branch using Issues/Report issues for this branch:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Issues/Report issues 为该分支保存**报告**：
- en: '![](Images/09ba47e3-e462-4389-9022-1db9c8b0bf98.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/09ba47e3-e462-4389-9022-1db9c8b0bf98.png)'
- en: As you may have realized, the Target tab is your **dashboard** for everything
    that you want to initiate using Burp. You will frequently spend your time on this
    section/tab. Looking at the preceding screenshot, you can see, in the middle section,
    all of the **web requests/responses** to the application (under the Contents section)
    for further analysis. On the right-hand side of the screen, Burp shows the Issues,
    and the Advisory to fix every single flaw. Amazing, right?
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，Target 标签是你使用 Burp 启动所有操作的**控制面板**。你将经常花时间在这一部分/标签上。从前面的截图来看，你可以看到中间部分，所有的**web
    请求/响应**都列出了（在 Contents 部分），以便进一步分析。在屏幕的右侧，Burp 显示了 Issues 和 Advisory，帮助你修复每一个缺陷。是不是很棒？
- en: Intercepting the requests/responses using Burp Proxy
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Burp Proxy 拦截请求/响应。
- en: 'The Proxy tool is the heart of Burp. In summary, it intercepts all of the requests
    and responses that you try to manually visit using your browser. It operates as
    a web proxy server, and it sits as a man-in-the-middle between your browser and
    destination web servers. This lets you intercept, inspect, and modify the raw
    traffic passing in both directions (request/response):'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Proxy 工具是 Burp 的核心。简而言之，它会拦截你尝试通过浏览器手动访问的所有请求和响应。它作为一个 web 代理服务器工作，位于你的浏览器和目标
    web 服务器之间，充当中间人。这使你能够拦截、检查和修改双向传输的原始流量（请求/响应）：
- en: '![](Images/699789be-8924-4d2b-96f1-2580688d38ce.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/699789be-8924-4d2b-96f1-2580688d38ce.png)'
- en: Setting the proxy in your browser
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在浏览器中设置代理。
- en: I'm assuming that you are using Kali Linux for your web application penetration
    testing, so you will be using Firefox or Iceweasel as a browser. You can install
    Chrome, but the instructions that I'm using are for Firefox (if you're using Chrome,
    don't worry; the settings should be very similar to Firefox).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我假设你正在使用 Kali Linux 进行 web 应用渗透测试，所以你将使用 Firefox 或 Iceweasel 浏览器。你可以安装 Chrome，但我使用的教程是针对
    Firefox 的（如果你使用 Chrome，不用担心，设置应该与 Firefox 非常相似）。
- en: 'By default, Burp''s port Proxy number is `8080`, and this can be changed in
    the Options sub-tab under the Proxy tab:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Burp 的端口代理号是 `8080`，可以在 Proxy 标签下的 Options 子标签中进行更改：
- en: '![](Images/a36a2a91-dd3c-453e-8350-933658a57557.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/a36a2a91-dd3c-453e-8350-933658a57557.png)'
- en: 'Open Firefox and select Preferences from the menu. Click on the Advanced tab
    in the left menu; after that, select the Network tab in the top menu, and click
    on the Settings button in the Connection section. Finally, enter the proxy settings
    in the Manual proxy configuration section (see the following screenshot):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 Firefox，从菜单中选择“偏好设置”。点击左侧菜单中的“高级”选项卡；之后，选择顶部菜单中的“网络”选项卡，然后点击连接部分中的“设置”按钮。最后，在“手动代理配置”部分输入代理设置（见以下截图）：
- en: '![](Images/35e022fa-7ce1-4080-ac37-1a67186fc74e.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/35e022fa-7ce1-4080-ac37-1a67186fc74e.png)'
- en: Don't forget to disable the proxy when you're done with your pen tests; otherwise,
    your browser will not load any pages when you turn Burp off.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在完成渗透测试后别忘了禁用代理，否则当你关闭 Burp 时，浏览器将无法加载任何页面。
- en: Make sure that the No Proxy for: textbox does not contain the value `127.0.0.1:8080`,
    or else Burp will not intercept the connection.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保“无代理的：”文本框不包含 `127.0.0.1:8080`，否则 Burp 将无法拦截连接。
- en: There is a nice, easy shortcut to avoid making all of these changes manually.
    You can use the FoxyProxy plugin for Firefox. Try it out!
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个非常简单的快捷方式，可以避免手动进行所有这些更改。你可以使用 Firefox 的 FoxyProxy 插件，试试看！
- en: BURP SSL certificate
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BURP SSL 证书
- en: 'To use Burp Proxy most effectively with HTTPS websites, you will need to install
    Burp''s CA certificate as a trusted root in your browser. If you have not already
    done so, configure your browser to use Burp as its proxy, and configure Burp to
    generate a CA-signed, per-host certificate (this is the default setting). Let''s
    look at how to install it in Kali''s Firefox browser:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最有效地使用 Burp Proxy 与 HTTPS 网站，你需要将 Burp 的 CA 证书安装为浏览器的受信根证书。如果你还没有这样做，配置浏览器使用
    Burp 作为其代理，并将 Burp 配置为生成 CA 签名的每个主机证书（这是默认设置）。让我们看看如何在 Kali 的 Firefox 浏览器中安装它：
- en: 'Open Firefox and browse to `http://burp`, then click on the CA Certificate button
    to download it locally to your `Downloads` folder:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Firefox 并访问 `http://burp`，然后点击 CA 证书按钮，将其下载到本地的 `Downloads` 文件夹：
- en: '![](Images/1a9c21cf-758b-406c-ab26-af2dac8933f8.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/1a9c21cf-758b-406c-ab26-af2dac8933f8.png)'
- en: 'After you''ve downloaded your CA file, open the Firefox Preferences from the
    menu. Click on the Advanced tab in the left menu; after that, select the Certificates
    tab in the top menu, and click on the View Certificates button. Finally, click
    on the Import button to install the certificate that you just downloaded from
    Burp (see the following screenshot):'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 CA 文件后，从菜单中打开 Firefox 偏好设置。点击左侧菜单中的“高级”选项卡；之后，选择顶部菜单中的“证书”选项卡，点击“查看证书”按钮。最后，点击“导入”按钮安装你刚刚从
    Burp 下载的证书（见以下截图）：
- en: '![](Images/157fb174-29cd-4163-bbfa-4dcd67652f2d.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/157fb174-29cd-4163-bbfa-4dcd67652f2d.png)'
- en: Burp Proxy options
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Burp Proxy 选项
- en: In the practical example that I shared with you previously, I showed you my
    configuration for the requests/responses in the Proxy/Options tab. Check it out,
    and try to implement it, if that is what you are looking for during your web intrusion
    tests.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在我之前与您分享的实际示例中，我向您展示了我的请求/响应配置，位于 Proxy/Options 选项卡中。查看一下，并尝试实现它，如果这是你在 Web
    入侵测试中需要的内容。
- en: 'I intercept requests/responses for the following reasons:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我拦截请求/响应的原因如下：
- en: To inspect the contents of the requests/responses for analysis
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查请求/响应的内容以进行分析
- en: To intercept the request to override JavaScript validation
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 截取请求以覆盖 JavaScript 验证
- en: To intercept the response when I need to override any values that the server
    has sent (for example, any header value)
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我需要覆盖服务器发送的任何值（例如，任何头部值）时，拦截响应
- en: 'An interesting configuration section is the Response Modification, which allows
    you to Unhide hidden form fields or Remove JavaScript form validation automatically:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的配置部分是响应修改（Response Modification），它允许你自动取消隐藏表单字段或移除 JavaScript 表单验证：
- en: '![](Images/ec7083d2-5745-457b-9bbb-ea88dc72ce40.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/ec7083d2-5745-457b-9bbb-ea88dc72ce40.png)'
- en: Crawling the web application using Burp Spider
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Burp Spider 爬取 Web 应用
- en: 'The idea here is simple: all you need to know is how to find all of the pages
    for the web application of your target scope. There are three ways to accomplish
    this task:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的思路很简单：你需要做的就是找到目标范围内 Web 应用的所有页面。有三种方法可以完成这个任务：
- en: Manually crawling by using the Intruder tool
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Intruder 工具手动爬取
- en: Automatically crawling by using Burp Spider
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Burp Spider 自动爬取
- en: Automatically finding hidden items by using the Discover Content tool
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Discover Content 工具自动查找隐藏项目
- en: Manually crawling by using the Intruder tool
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Intruder 工具手动爬取
- en: 'In some cases you want to run a manual crawling using one of the predefined
    dictionary file, to do this perform the following steps:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，你可能希望使用预定义的字典文件进行手动爬取，若要执行此操作，请按照以下步骤进行：
- en: 'Select the root path; in our example, it''s `mutillidae`, because this is our
    starting point for crawling. Next, right-click on the request and send it to the
    Intruder tab:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择根路径；在我们的示例中，它是 `mutillidae`，因为这是我们开始爬取的起点。接下来，右键点击请求并将其发送到 Intruder 标签：
- en: '![](Images/040a69db-5ab9-4f4b-ab02-51de5f9d965f.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/040a69db-5ab9-4f4b-ab02-51de5f9d965f.png)'
- en: 'At this point, the Intruder tab will start blinking, which tells you that it''s
    ready (let''s click on the Intruder tab). The first thing that you will encounter
    in the Intruder tab is the Target section; leave it as it is, and move on to the
    Positions section:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，Intruder 标签将开始闪烁，表示它已经准备好（让我们点击 Intruder 标签）。你首先会看到的是 Target 部分；保持不变，然后继续到
    Positions 部分：
- en: '![](Images/5da1b1b5-ca26-4128-a923-f8c24ce45f90.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/5da1b1b5-ca26-4128-a923-f8c24ce45f90.png)'
- en: 'In the Positions sub-tab, leave the attack type to Sniper, and write any word
    (in my case, I''ve chosen the word `attack`) after `mutillidae/`. After that,
    we need to make sure that we have a clean slate, so click on the Clear button
    to remove any pre-generated positions:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Positions 子标签中，将攻击类型保持为 Sniper，并在 `mutillidae/` 后面写下任何单词（在我的例子中，我选择了单词 `attack`）。然后，我们需要确保清空所有内容，因此点击
    Clear 按钮以删除任何预生成的位置：
- en: '![](Images/203ae874-ded8-4a65-a248-23ceec3fdb86.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/203ae874-ded8-4a65-a248-23ceec3fdb86.png)'
- en: 'Next, select the word that you just wrote. In the preceding screenshot, I selected
    the word `attack` and clicked on the **Add** button, to tell Burp that this is
    where I am going to fuzz for directories:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择你刚才写的单词。在前面的截图中，我选择了单词 `attack` 并点击 **Add** 按钮，告诉 Burp 这是我要进行目录模糊处理的地方：
- en: '![](Images/726439d5-3940-4a68-8be3-7f3aa627788f.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/726439d5-3940-4a68-8be3-7f3aa627788f.png)'
- en: 'After that, click on the Payloads tab, and make sure that the Payload type
    is a simple list. Next, select Directories – short from the Add from list ... drop-down
    menu. You''re now ready to click on the Start Attack button, which will launch
    a pop-up window to show you the progress of the results:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，点击 Payloads 标签，并确保 Payload 类型为简单列表。接下来，从 Add from list ... 下拉菜单中选择 Directories
    – short。现在，你可以点击 Start Attack 按钮，它将启动一个弹出窗口，向你展示结果的进度：
- en: '![](Images/db0e239e-9373-4b40-91df-b1581649983b.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/db0e239e-9373-4b40-91df-b1581649983b.png)'
- en: 'Finally, click on the Status column header to sort the items by the response
    status code. For the Mutillidae application, I found an interesting passwords
    region (see the preceding screenshot). I will leave it as an exercise for you
    to check the contents of the passwords directory:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击 Status 列表头来根据响应状态码对项目进行排序。对于 Mutillidae 应用，我找到了一块有趣的密码区域（见前面的截图）。我将把检查密码目录的内容留给你作为练习：
- en: '![](Images/82765259-874a-4bf2-a396-9f2ac70e387c.png)You can use the Repeater
    tab, which we will explore in upcoming sections, to verify the preceding findings.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![](Images/82765259-874a-4bf2-a396-9f2ac70e387c.png)你可以使用 Repeater 标签，我们将在接下来的部分中探索它，以验证前面的发现。'
- en: Automated crawling and finding hidden spots
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动爬取和寻找隐藏点
- en: 'In the preceding section, I showed you the manual method for finding interesting
    directories, and you can do the same for finding pages, as well. If you have no
    time and you want to use an automated method, Burp offers you an easy way to scan
    your projects:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我向你展示了手动寻找有趣目录的方法，你也可以用相同的方法寻找页面。如果你没有时间并希望使用自动化方法，Burp 为你提供了一种简单的方式来扫描你的项目：
- en: Go to the Target tab, and, in the site map, right-click on your Target project
    and select Spider this branch from the menu. At this point, the Spider tab will
    blink, telling you that it's in progress; depending on the application depth,
    this action should not take too long to execute.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 Target 标签，在站点地图中，右键点击你的目标项目并从菜单中选择 Spider this branch。此时，Spider 标签将开始闪烁，告诉你它正在进行中；根据应用程序的深度，这个操作执行起来应该不会太长时间。
- en: 'If you want to check for the progress of the crawling, go to the Spider tab
    and select the Control sub-tab, and you should get an idea of what is going on
    there:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想检查爬取进度，去 Spider 标签并选择 Control 子标签，你应该能看到那里的进度：
- en: '![](Images/764fe834-5e2d-4852-85f8-6f9cea6e926c.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/764fe834-5e2d-4852-85f8-6f9cea6e926c.png)'
- en: An even more powerful and time-consuming tool that can find hidden files and
    directories also exists in Burp. Be careful with this one, because it is aggressive,
    and it can sometimes cause the site to malfunction. If you use it, ask the development
    team to back up the database, in case things go in the wrong direction.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Burp 中还存在一种更强大且耗时的工具，可以查找隐藏的文件和目录。对于这个工具要小心使用，因为它很具侵略性，有时会导致网站发生故障。如果你使用它，请请求开发团队备份数据库，以防事情朝着错误的方向发展。
- en: 'To find hidden contents, right-click on the `Application` directory in the
    Target/Site map section. From the menu, select Engagement tools; then, click on
    the Discover content menu item. After this action, a pop-up menu will appear.
    To run it, all you have to do is click on the Session is not running button, and
    the advanced crawling will start executing:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查找隐藏内容，请右键单击目标/站点地图部分中的 `Application` 目录。从菜单中选择 Engagement tools；然后，单击 Discover
    content 菜单项。执行此操作后，将出现一个弹出菜单。要运行它，您只需单击 Session is not running 按钮，高级爬行将开始执行：
- en: '![](Images/03301533-3dcf-4b18-bc7c-9c10e131dfb0.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/03301533-3dcf-4b18-bc7c-9c10e131dfb0.png)'
- en: Looking for web vulnerabilities using the scanner
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用扫描程序查找 Web 漏洞
- en: For an effective web application penetration test, you will need to perform
    both a manual test and an automated test. If you only do one of them, you're not
    doing the right thing. This has been a debate, and sometimes, I see teams relying
    on fancy, automated tools, because they lack the knowledge for manual tests. On
    the other hand, I've seen teams with sky high egos; they think that manual tests
    are for the elite, and that those tests should be enough. My philosophy is that
    you need both. In this section, I will show you the automated method to scan for
    vulnerabilities. The manual method will be covered in an upcoming chapter.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 对于有效的 Web 应用程序渗透测试，您需要进行手动测试和自动化测试。如果您只执行其中之一，那就不对了。这一直是一个争论的话题，有时我看到团队依赖花哨的自动化工具，因为他们缺乏手动测试的知识。另一方面，我见过自负自大的团队；他们认为手动测试是为精英人士准备的，认为这些测试应该足够了。我的理念是您两者都需要。在本节中，我将向您展示扫描漏洞的自动化方法。手动方法将在即将到来的章节中介绍。
- en: In Burp, the first type of scan is the passive scan, which involves analyzing
    the HTTP messages for evidence of certain types of vulnerabilities. It does not
    send any additional requests to the server. This can be accomplished when you're
    browsing manually, and you can trigger it by right-clicking on the target scope
    on the site map. Then, from the menu, click on Passively scan this branch.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Burp 中，第一种扫描类型是被动扫描，它涉及分析 HTTP 消息以查找某些类型漏洞的证据。它不会向服务器发送任何额外的请求。当您手动浏览时，可以通过右键单击站点地图上的目标范围来触发它。然后，从菜单中单击 Passively
    scan this branch。
- en: 'The second scan technique is the one that really automates the fuzzing to find
    web application vulnerabilities:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种扫描技术是真正自动化模糊测试以查找 Web 应用程序漏洞的技术：
- en: 'To execute it, simply right-click on the directory that you wish to test, and
    then, from the menu, click on Actively scan this branch. After this action, a
    pop-up menu will appear. In general, I use the options that you can see in the
    following screenshot:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要执行它，只需右键单击您希望测试的目录，然后从菜单中单击 主动扫描此分支。执行此操作后，将出现一个弹出菜单。通常，我使用您在以下截图中看到的选项：
- en: '![](Images/b56b820c-6e14-4e8d-8695-dfd9761e8d64.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/b56b820c-6e14-4e8d-8695-dfd9761e8d64.png)'
- en: 'Click on Next, and a second step will show you the list of files that will
    be scanned in this process. Check them out, then click on the OK button to start
    the scanner:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击下一步，第二步将显示将在此过程中扫描的文件列表。查看它们，然后单击 OK 按钮开始扫描：
- en: '![](Images/39deb50a-778a-4351-9263-3804a7f3e094.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/39deb50a-778a-4351-9263-3804a7f3e094.png)'
- en: 'To check out the progress of this event, select the Scanner tab, then click
    on the Scan queue sub-tab. At first, you will see that the scanner has started
    to look for vulnerabilities; you can use the Status column as an indicator of
    the progress of the scan:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看此事件的进度，请选择扫描器选项卡，然后单击扫描队列子选项卡。首先，您将看到扫描程序已开始查找漏洞；您可以使用状态列作为扫描进度的指示器：
- en: '![](Images/6b5f8169-ca4f-4124-b1b3-a937d4ea0a57.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/6b5f8169-ca4f-4124-b1b3-a937d4ea0a57.png)'
- en: 'Later, when all of the statuses turn into a Finished state, you can start taking
    a peek at each item by double-clicking to see the results:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 稍后，当所有状态都变为已完成状态时，您可以通过双击每个项目来查看结果：
- en: '![](Images/f7ba025e-72b4-47c4-935a-894add890d69.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/f7ba025e-72b4-47c4-935a-894add890d69.png)'
- en: This dialog window (seen in the preceding screenshot) allows you to analyze
    the Request that Burp generated to produce the error Response. Later, you will
    use the Repeater tab to double-check the results and make sure that there's not
    a false positive.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这个对话窗口（见前面的截图）允许你分析Burp生成的请求，以便产生错误的响应。稍后，你将使用Repeater标签页来再次检查结果，并确保没有假阳性。
- en: 'Finally, it''s time to generate a report. To do this, go back to the Target
    tab and select your target application root directory (in our case, it''s going
    to be the `mutillidae` folder). Right-click and select Issues from the menu, then
    click on Report issues for this branch:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，是时候生成报告了。为此，请返回Target标签页，选择你的目标应用程序根目录（在我们的案例中，它将是`mutillidae`文件夹）。右键点击并从菜单中选择Issues，然后点击“为此分支报告问题”：
- en: '![](Images/652f2721-67a4-43b8-9883-021ea3582318.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/652f2721-67a4-43b8-9883-021ea3582318.png)'
- en: 'After that, you will have a few dialog windows to fill out; they''re pretty
    straightforward. I usually just choose the default options until the report is
    generated in an HTML format:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，你将看到一些需要填写的对话框；它们非常直接。我通常只是选择默认选项，直到报告以HTML格式生成：
- en: '![](Images/f4f662da-1e4f-496d-9191-4e6fe58cca2e.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/f4f662da-1e4f-496d-9191-4e6fe58cca2e.png)'
- en: At this stage, your role is to identify the false positives. Logically speaking,
    when you see Burp telling you that the confidence is **Certain** that is more
    than 90%, it is a real flaw. When the confidence is **Firm**, it means 60% it's
    not a false positive and **Tentative** most probably is a false positive. Flaws
    and vulnerabilities are called issues in Burp—just to make sure that you understand
    the terminology this application uses to identify web application vulnerabilities.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，你的角色是识别假阳性。从逻辑上讲，当你看到Burp告诉你置信度是**Certain**（大于90%）时，它是一个真正的漏洞。当置信度是**Firm**时，表示有60%的可能性不是假阳性，而**Tentative**大概率是一个假阳性。Burp将缺陷和漏洞称为问题——这是为了确保你理解该应用程序用于识别Web应用漏洞的术语。
- en: Please do not copy the Burp report and give it to your client without checking
    for false positives; if you want to have a good reputation, then don't. I've seen
    reports from companies where the flaws were copied directly from the report—I've
    recognized the fonts in the Burp reports, and then you can assume what I did say
    when I saw that report.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要在没有检查假阳性问题的情况下，直接复制Burp报告并交给客户；如果你想有一个良好的声誉，那就不要这么做。我曾看到一些公司直接将缺陷从报告中复制出来——我认出了Burp报告中的字体，你可以想象我看到那份报告时的反应。
- en: Replaying web requests using the Repeater tab
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Repeater标签重放Web请求
- en: 'As the name suggests, the Repeater tab allows you to repeat web requests manually.
    Why? To check the web response. Most of the time, you will use the Send to repeater menu
    item to send the results to this section. After that, just click on the Go button,
    and you will be able to replay the request:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名所示，Repeater标签允许你手动重复Web请求。为什么？是为了检查Web响应。大多数时候，你会使用“Send to repeater”菜单项将结果发送到这个部分。之后，只需点击“Go”按钮，你就能重放请求：
- en: '![](Images/ed0a709c-ae78-4ab0-bff1-2d60549eab45.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/ed0a709c-ae78-4ab0-bff1-2d60549eab45.png)'
- en: 'The following is the checklist that I implement when I want to use the Repeater
    tab:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我在使用Repeater标签时会实施的检查清单：
- en: Testing the logic flaws of a page
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试页面的逻辑漏洞
- en: Checking for false positive issues after generating a report
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成报告后检查假阳性问题
- en: Changing the parameter values (for example, testing input-based vulnerabilities)
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改参数值（例如，测试基于输入的漏洞）
- en: Fuzzing web requests using the Intruder tab
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Intruder标签进行Web请求模糊测试
- en: 'Burp Intruder is a monster of automation, and it allows you to enumerate, fuzz,
    and harvest data from the target web application. In the old days, when I started
    using Burp, the first thing that I learned was to use the Intruder tool to brute-force
    login credentials. We will cover more examples in the upcoming chapters, but for
    this section, I want you to understand the basics of this tool:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Intruder是一个自动化怪物，它允许你对目标Web应用进行枚举、模糊测试并收集数据。在我刚开始使用Burp时，我学到的第一件事就是使用Intruder工具进行暴力破解登录凭证。我们将在接下来的章节中讨论更多示例，但在这一节，我希望你理解这个工具的基本用法：
- en: '![](Images/b730ca43-8044-427f-9e0c-3a827df3cfc7.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/b730ca43-8044-427f-9e0c-3a827df3cfc7.png)'
- en: Intruder attack types
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Intruder攻击类型
- en: 'One of the most confusing things for beginners are the attack types in the
    Intruder tool. I will do my best to explain them to you in a practical way, so
    they won''t be an obstacle for you to use this section:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 对初学者来说，最令人困惑的事情之一就是Intruder工具中的攻击类型。我会尽力以实际的方式向你解释它们，这样它们就不会成为你使用这一部分的障碍：
- en: '**Sniper**: This is the most popular one, and you can use it for only *one*
    payload. A practical example of this type of payload is the one that we saw earlier,
    for fuzzing directory names. Another example would be to fuzz the query string
    value. Hackers fuzz the product number in the URL, to see which products are on
    a discount before they appear online.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**狙击手**：这是最受欢迎的一种，你只能使用*一个*有效载荷。这个类型的有效载荷的一个实际例子就是我们之前看到的，用于模糊测试目录名称。另一个例子是模糊测试查询字符串的值。黑客在URL中模糊测试产品编号，以查看哪些产品在上线前有折扣。'
- en: '**Battering ram**: This uses a *single* payload, as well, but it allows you
    to place the *same payload into all defined positions*. A practical example is
    when you want to insert the email address in the form field and the query string.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**攻城锤**：这种攻击也使用*单一*有效载荷，但它允许你将*相同的有效载荷插入所有定义的位置*。一个实际的例子是，当你希望在表单字段和查询字符串中插入电子邮件地址时。'
- en: '**Cluster bomb**: This one uses *multiple* payloads for each position (the
    maximum is 20). In other words, this attack is used when an attack requires different,
    but *unrelated,* input to be inserted in multiple places in the request. The best
    way to explain it to you is through a practical example, which is the *password
    credentials attack*—my favorite one. So, you would use the username in one field
    and the password in the password field.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集束炸弹**：这种攻击使用*多个*有效载荷针对每个位置（最多为20）。换句话说，当一次攻击需要在请求中的多个位置插入不同但*无关*的输入时，就使用这种攻击。最好的解释方式是通过一个实际的例子，也就是*密码凭证攻击*——我最喜欢的那种。所以，你会在一个字段中使用用户名，在密码字段中使用密码。'
- en: '**Pitchfork**: This one uses *multiple* payloads for each position (the maximum
    is 20). In other words, this attack is used when an attack requires different,
    but *related* (the opposite of the cluster bomb), input to be inserted in multiple
    places in the request. For example, when you want to insert a username in a field,
    and its associated ID in another field.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**草叉**：这种攻击使用*多个*有效载荷针对每个位置（最多为20）。换句话说，当一次攻击需要在请求中的多个位置插入不同但*相关*的输入时（与集束炸弹相反），就使用这种攻击。例如，当你希望在一个字段中插入用户名，在另一个字段中插入其关联的ID时。'
- en: Practical examples
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实际示例
- en: 'By now, you have probably guessed what this tool can do, but let me widen your
    imagination and give you more examples that you can use when you want to handle
    the Intruder tab:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，你可能已经猜到这个工具能做什么了，但让我拓宽你的想象力，给你更多的例子，让你在使用Intruder标签时能够应对自如：
- en: Enumerating usernames
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举用户名
- en: Enumerating account IDs
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举账户ID
- en: Enumerating any ID (articleID, BlogID, ProductID, and so on)
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举任何ID（articleID、BlogID、ProductID等）
- en: Enumerating documents (PDF, TXT, and so on)
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举文档（PDF、TXT等）
- en: Enumerating pages
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举页面
- en: Enumerating directories
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 枚举目录
- en: Fuzzing for vulnerabilities
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模糊测试漏洞
- en: Fuzzing usernames/passwords
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模糊测试用户名/密码
- en: There are many more; this is just a sample, including the most important ones,
    which I use on a daily basis. I hope they'll help you, as well.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多其他工具；这只是一个示例，包含了我每天使用的最重要的工具。希望它们也能帮助你。
- en: Installing third-party apps using Burp Extender
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Burp Extender安装第三方应用
- en: Before I start on this section, I would like to inform you that I did not include
    the Sequencer, Decoder, and Comparer tabs in this chapter. In fact, I excluded
    them on purpose, because their usage is very straightforward. You will rarely
    use them in your daily career, so why waste your time?
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在我开始这一部分之前，我想通知你，我在本章中没有包含Sequencer、Decoder和Comparer标签。事实上，我故意没有包含它们，因为它们的使用非常直观。在你的日常工作中，你很少使用它们，那么为什么要浪费时间呢？
- en: 'Burp Extender is an important tab; it will allow you to include additional,
    powerful functionalities in Burp. For example, if you want to add the functionality
    to scan for outdated JavaScript libraries, then you can install the module `Retire.js`,
    and it will do the work for you. There is a tool for every need: WAF, errors,
    Java, .NET, SQLi, XSS, and so on.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Burp Extender是一个重要的标签，它允许你在Burp中添加额外的强大功能。例如，如果你想增加扫描过时JavaScript库的功能，可以安装模块`Retire.js`，它会为你完成这项工作。每种需求都有相应的工具：WAF、错误、Java、.NET、SQLi、XSS等。
- en: Before starting to use the BApp Store, you will need to download the **Jython**
    standalone JAR from:[ http://www.jython.org/downloads.html](http://www.jython.org/downloads.html).
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用BApp Store之前，你需要从[http://www.jython.org/downloads.html](http://www.jython.org/downloads.html)下载**Jython**独立JAR包。
- en: 'Jython is a library for Java and Python, and some apps use this library, so
    it''s a prerequisite for the apps to work. After downloading the file, go to the Extender/Options
    tab, and include the path where you copied the downloaded file:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Jython是一个Java和Python的库，一些应用程序使用这个库，因此它是应用程序正常工作的前提。下载文件后，前往Extender/Options标签页，并包含你复制下载文件的路径：
- en: '![](Images/f5daf1af-9c00-4d95-88b1-7b817490b82e.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/f5daf1af-9c00-4d95-88b1-7b817490b82e.png)'
- en: 'To install your favorite app, go to the BApp Store tab and pick the application
    that fits your needs, then click on the Install button to install it. Sometimes,
    it takes a few seconds to install the app, so be patient. Some applications will
    inject an additional tab in Burp, so you will be able to configure it and manage
    the results at the same time:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装你最喜欢的应用，前往BApp Store标签页，选择适合你需求的应用，然后点击安装按钮进行安装。有时候，安装应用需要几秒钟的时间，所以请耐心等待。有些应用会在Burp中注入一个额外的标签页，这样你就能同时配置它并管理结果：
- en: '![](Images/a11b9059-e54b-4896-aab4-95f26a1633d5.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/a11b9059-e54b-4896-aab4-95f26a1633d5.png)'
- en: 'I use these apps a lot, and I thought I should share a list of my favorite
    ones:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我经常使用这些应用，觉得应该分享一份我最喜欢的应用清单：
- en: Active Scan ++
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主动扫描++
- en: Additional Scanner Checks
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 额外的扫描器检查
- en: Backslash Powered Scanner
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 反斜杠驱动扫描器
- en: CO2
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CO2
- en: Error Message Checks
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误消息检查
- en: JSON Beautifier
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON Beautifier
- en: Random IP Address Header
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机IP地址头
- en: Retire.js
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Retire.js
- en: Scan manual insertion point
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描手动插入点
- en: SQLiPy
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLiPy
- en: WAFDetect
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WAFDetect
- en: Wordlist Extractor
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单词列表提取器
- en: 'If you see an error, like `java.lang.OutOfMemoryError: PermGen space`, you
    can fix it by starting Burp using the following command:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '如果你看到类似`java.lang.OutOfMemoryError: PermGen space`的错误，你可以通过以下命令启动Burp来解决：'
- en: '`java -XX:MaxPermSize=1G -jar [burp_file_name.jar]`'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`java -XX:MaxPermSize=1G -jar [burp_file_name.jar]`'
- en: Summary
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Congratulations! You now know the ins and outs of Burp. In future chapters,
    we will use Burp to conduct our Web Intrusion Tests. I invite you to start practicing
    and using Burp; it is your Swiss Army knife for every Web Application Intrusion
    Test. If you can afford to buy a license, do it now! It is worthwhile for practicing
    and enhancing your web application hacking skills.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你现在已经了解了Burp的方方面面。在接下来的章节中，我们将使用Burp进行Web入侵测试。我邀请你开始练习和使用Burp，它是你进行每次Web应用入侵测试的瑞士军刀。如果你有条件购买许可证，现在就去做吧！它对提升和加强你的Web应用黑客技能非常值得。
- en: 'In the next chapter, I will show you the basics of web application vulnerabilities:
    a nice, exciting topic that will allow you to enhance and deepen your penetration
    testing skills.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章节中，我将向你展示Web应用漏洞的基础知识：这是一个非常有趣且激动人心的话题，它将帮助你提升和加深你的渗透测试技能。
