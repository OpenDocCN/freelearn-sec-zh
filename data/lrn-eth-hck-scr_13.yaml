- en: Client-Side Attacks - Social Engineering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端攻击 - 社会工程学
- en: This chapter focuses on client-side attacks, where the victim's action will
    allow us to gain access to their system, which is where the social engineering
    concept is going to be useful to help us to launch an attack. We are going to
    look at a tool called Maltego, which is a very powerful tool for gathering information,
    but we will just look at it's basic applications in this chapter. Then, we are
    going to search all the possible social links that are related to our target;
    we will be using the Maltego tool for this, too. Following that, we are going
    to target the victim via their Twitter and email contacts. As we move ahead, we
    will be using the backdoor file. Then, we will generate an icon for the file –
    it looks more like an ordinary image, but it is a backdoor in disguise so that
    we can get access to the system. We will also learn how to change the extensions
    of the files that can be sent to the target. Finally, we will perform email spoofing,
    which means we will send emails to the victim via a valid email ID.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点讨论客户端攻击，受害者的行动将允许我们访问他们的系统，这就是社会工程概念将有助于我们发动攻击的地方。我们将看一下一个叫做 Maltego 的工具，这是一个非常强大的信息收集工具，但在本章中我们只会看它的基本应用。然后，我们将搜索所有与我们目标相关的可能的社交链接；我们也将使用
    Maltego 工具进行这项工作。接着，我们将通过他们的推特和电子邮件联系人来定位受害者。随着我们的前进，我们将使用后门文件。然后，我们将为文件生成一个图标
    - 它看起来更像是一个普通的图像，但实际上是一个伪装的后门，以便我们可以访问系统。我们还将学习如何更改可以发送给目标的文件的扩展名。最后，我们将执行电子邮件欺骗，这意味着我们将通过有效的电子邮件
    ID 向受害者发送电子邮件。
- en: 'This chapter covers the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: Client-side attacks using social engineering
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用社会工程学的客户端攻击
- en: Maltego overview
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maltego 概述
- en: Social engineering – linking accounts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社会工程学 - 关联账户
- en: Social engineering – Twitter
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社会工程学 - 推特
- en: Social engineering – emails
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社会工程学 - 电子邮件
- en: Social engineering – summary
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社会工程学 - 总结
- en: Downloading and executing AutoIt
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并执行 AutoIt
- en: Changing the icon and compiling the payload
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改图标并编译有效载荷
- en: Changing extensions
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改扩展名
- en: Client-side attacks – TDM email spoofing
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端攻击 - TDM 电子邮件欺骗
- en: Client-side attacks using social engineering
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用社会工程学的客户端攻击
- en: So far, we've seen really good methods in client-side attacks. These methods
    were good because we didn't really need to ask the client to do anything. We would
    gain access to the target computer if the client updated their system, or, if
    they downloaded something, then we'd backdoor it on the fly. These methods are
    really good because we don't actually need to do something, so the target has
    to do an action, but we don't need to ask them to do something. The only problem
    with these methods is that we need to be the man in the middle, we either need
    to do the ARP poisoning, we need to start our own fake access point, or we need
    to do something to become the man in the middle.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到了客户端攻击中非常好的方法。这些方法很好，因为我们实际上不需要要求客户端做任何事情。如果客户端更新他们的系统，或者如果他们下载了什么东西，那么我们会在飞行中给它加上后门。这些方法非常好，因为我们实际上不需要做什么，所以目标必须执行一个动作，但我们不需要要求他们做什么。这些方法的唯一问题是我们需要成为中间人，我们需要做
    ARP 欺骗，我们需要启动我们自己的虚假接入点，或者我们需要做一些事情成为中间人。
- en: In the next sections, we're going to talk about a method we can use if we aren't
    the man in the middle, if the person exists in a remote place where it's not possible
    for us to become the man in the middle. Here, we're going to be talking about
    social engineering. Social engineering is a vast concept; there are so many attacks
    that we can do because it all depends on the target. Sometimes, we don't even
    need any technical information to do these kinds of attacks, so it all depends
    on our target and how we are going to build a strategy to attack that target.
    We are going to be gathering information in order to get access to victims' systems.
    We need to gather as much information as we can about our target, about what websites
    they use, who their friends are, and so on; anything, any piece of information,
    can become really useful to us in social engineering.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将讨论如果我们不是中间人，且目标人物位于远程位置，无法成为中间人的情况下，我们可以使用的方法。这里我们将谈论社交工程学。社交工程学是一个广泛的概念；我们可以进行很多攻击，因为它完全取决于目标。有时候，我们甚至不需要任何技术信息来进行这些攻击，所以这完全取决于我们的目标，以及我们如何构建攻击策略。我们将收集信息，以便获得受害者系统的访问权限。我们需要尽可能多地收集有关目标的信息，了解他们使用哪些网站，谁是他们的朋友，等等；任何信息，都可能在社交工程中对我们非常有用。
- en: We will first be looking at how to gather information about a specific person.
    So, all we have is just a name, or a Facebook account, and any information we
    can gather based on that name. After that, we're going to start building a strategy,
    and we'll see how we can use all the information that we gathered to build a strategy
    in order to build an attack and gain access to the target computer system, and,
    at the end, we're going to create our backdoor. We're going to make a backdoor
    that's acceptable to the target user, so they'll probably use it, and we'll also
    see how we can pretend to be one of their friends and get the target person to
    run the backdoor. We are actually going to be asking them to run a specific file,
    instead of the methods that we've seen so far where the user voluntarily updates
    their system or downloads a certain executable.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先探讨如何收集有关特定人员的信息。所以，假设我们只有一个名字，或一个Facebook账号，以及基于这个名字我们能收集到的任何信息。之后，我们将开始构建策略，看看如何利用收集到的所有信息来构建一个策略，进而发起攻击并获取目标计算机系统的访问权限，最后我们将创建我们的后门。我们将创建一个目标用户能够接受的后门，使他们可能会使用它，我们还将看看如何伪装成他们的朋友，诱使目标人物运行后门。实际上，我们将要求他们运行一个特定的文件，而不是我们之前看到的方法，即用户自愿更新他们的系统或下载某个可执行文件。
- en: Maltego overview
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Maltego概述
- en: In this section, we'll look at a tool that we're going to be using often in
    this chapter. This tool is great for information gathering and it allows us to
    gather information about almost anything, we can gather information about people,
    websites, computers, companies, phone numbers, everything really; everything we
    can think of, we can add to this tool and try to extract information related to
    that entity. The tool is called Maltego, and it's going to become our best friend
    when it comes to information gathering. This tool can be used to gather information
    about anything, but using the tool is the same, so it doesn't matter whether our
    target is a website, a person, a phone number, or a company. Only the information
    that we will be getting is going to be different. In this section, we're going
    to have a quick overview of this tool, and then we're going to be using it more
    in the following sections.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍一个在本章中我们将频繁使用的工具。这个工具非常适合信息收集，它允许我们收集几乎任何事物的信息，我们可以收集有关人、网站、计算机、公司、电话号码等方面的信息；任何我们能想到的事情，都可以加入到这个工具中，尝试提取与该实体相关的信息。这个工具叫做Maltego，它将成为我们进行信息收集时最好的朋友。这个工具可以用来收集任何事物的信息，但使用方式是一样的，因此无论我们的目标是一个网站、一个人、一部电话号码还是一家公司，都没有关系。唯一不同的是我们将收集到的信息。在这一节中，我们将快速概览这个工具，然后在接下来的章节中我们将更多地使用它。
- en: 'In order to run the tool, just go to Show Applications, then type `maltego` in
    the search bar, and we can see that a tool called maltego appears:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行该工具，只需进入“显示应用程序”，然后在搜索栏中输入`maltego`，我们可以看到一个名为maltego的工具出现：
- en: '![](assets/be4f8ac1-f6da-44eb-aef3-bbf0ceef228a.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/be4f8ac1-f6da-44eb-aef3-bbf0ceef228a.png)'
- en: 'The first time the tool is used, we will be asked to log in with a username
    and a password; if we don''t have one, we will have to register through the wizard.
    We just have to create a new username and new password, they''ll send us an activation
    link, and then we''ll be able to log in and use the tool. Once we log in, it will
    offer us one of the already made templates for gathering information. We are not
    going to use any of those. In the following screenshot, we can see the home page,
    and from here we can add more transformers to the tool:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次使用该工具时，我们会被要求使用用户名和密码登录；如果没有账号，我们需要通过向导进行注册。我们只需要创建一个新的用户名和密码，系统会向我们发送激活链接，之后我们就能登录并使用该工具。登录后，它会为我们提供一个已经制作好的信息收集模板。我们不会使用任何一个模板。在接下来的截图中，我们可以看到主页，从这里我们可以向工具中添加更多的变换器：
- en: '![](assets/3bfc243f-82fd-4513-b61c-19486c87dbd2.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3bfc243f-82fd-4513-b61c-19486c87dbd2.png)'
- en: Basically, transformers are plugins that allow us to gather information about
    specific things. We can just click on Install on any of available options that
    we can see in the screenshot and it will add more transformers or more things
    that we can do with Maltego. A lot of these extra transformers will ask us to
    log in with a username and a password or use a certain API.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，变换器是插件，它们允许我们收集特定事物的信息。我们只需点击任何一个可用选项上的安装按钮，它就会添加更多的变换器或我们可以用Maltego做的其他事情。很多这些额外的变换器会要求我们使用用户名和密码登录，或者使用某个特定的API。
- en: 'For now, we''re just going to use the built-in transformers, and we are going
    to go to the entity selection menu on the menu bar to create a new graph and open
    a principle workplace for Maltego:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将使用内置的变换器，并且我们将前往菜单栏中的实体选择菜单，创建一个新的图形，并打开Maltego的主要工作区：
- en: '![](assets/68e4913d-ccab-4555-b4c0-5ce039629320.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/68e4913d-ccab-4555-b4c0-5ce039629320.png)'
- en: 'As we can see in the following screenshot, in the middle we have our graph,
    where we are going to be seeing our entities and information about entities:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，在中间我们有我们的图形，我们将在这里看到我们的实体和关于实体的信息：
- en: '![](assets/0e47a3e7-5bfb-4e79-b9e7-c0833bd7c62f.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0e47a3e7-5bfb-4e79-b9e7-c0833bd7c62f.png)'
- en: In the Overview tab, we have an overview of the graph, in Detailed View, we
    have details about each entity in the graph, and in the Property View tab in the
    bottom right corner, we will be able to change the properties for each of these
    entities. All these tabs are empty now, but once we start using the tool, it'll
    start making sense straightaway. In the top left corner, we have our entities
    in the Entity Palette tab, where they are organized into categories depending
    on the type of entity.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在概览标签中，我们可以看到图形的概述，在详细视图中，我们可以查看图中每个实体的详细信息，在右下角的属性视图标签中，我们将能够更改这些实体的属性。目前这些标签都是空的，但一旦我们开始使用该工具，它将立刻变得清晰。在左上角，我们可以在实体调色板标签中找到我们的实体，它们根据实体类型被组织成不同类别。
- en: 'For example, if we click on Infrastructure, it will allow us to add a domain
    name; we can add MX records, URLs, or a website:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们点击基础设施，它将允许我们添加一个域名；我们可以添加MX记录、URL或网站：
- en: '![](assets/f8db635b-f0ac-4dee-b4a6-4c7a9beb0387.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f8db635b-f0ac-4dee-b4a6-4c7a9beb0387.png)'
- en: 'We can just drag and drop the entity that we want; for example, if we want
    a website, just drag and drop the Website entity in the graph editor window and
    now we have a website in the graph. From here, we can start gathering information
    about the website:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以直接拖拽我们需要的实体；例如，如果我们需要一个网站，只需在图形编辑窗口中拖拽网站实体，现在我们在图中就有了一个网站。从这里开始，我们可以开始收集关于该网站的信息：
- en: '![](assets/975fa72e-0d5a-46d4-be77-1edd160925ff.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/975fa72e-0d5a-46d4-be77-1edd160925ff.png)'
- en: 'There are a lot of different types of entities. We can also add a device from
    Entity Palette. For example, if we go to Personal, we can actually just add a
    Person entity, give their first and last names, and then we will be able to gather
    information about this person. We can also add a phone number and start gathering
    information about it:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多不同类型的实体。我们还可以从实体调色板中添加一个设备。例如，如果我们进入个人类目，我们可以直接添加一个人物实体，填写他们的名字和姓氏，然后我们将能够收集关于这个人的信息。我们还可以添加一个电话号码，并开始收集有关它的信息：
- en: '![](assets/28a9bbf5-6271-45c3-afc4-1bddf34db423.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/28a9bbf5-6271-45c3-afc4-1bddf34db423.png)'
- en: 'One of the really amazing categories here is socialLinks, which will allow
    us to add Facebook entities, while also allowing us to add GitHub, Foursquare,
    LinkedIn, Instagram, and other social networks:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这里真正令人惊叹的一个类别是socialLinks，它将允许我们添加Facebook实体，同时还允许我们添加GitHub、Foursquare、LinkedIn、Instagram和其他社交网络：
- en: '![](assets/e29c6eee-5a02-42f7-a9f6-269d2ed55d81.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e29c6eee-5a02-42f7-a9f6-269d2ed55d81.png)'
- en: Once we add them, we will be able to gather information about these entities,
    and obviously this information will really help us when it comes to trying to
    exploit that person and hack into their system.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们添加它们，我们将能够收集关于这些实体的信息，显然这些信息在试图利用该人并侵入其系统时将对我们非常有帮助。
- en: 'Once we add the entity, as we can see in the following screenshot, if we click
    on the website, for example, we are just going to go to the Property View tab
    and we can see that we can modify the properties for the selected website. Suppose,
    for example, the first thing that we need to change is to put the name of our
    target website in the Website parameter:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们添加了实体，如下截图所示，如果我们点击网站，例如，我们只需转到“属性视图”选项卡，我们就可以看到我们可以修改所选网站的属性。例如，假设我们需要更改的第一件事是将我们目标网站的名称放在“网站”参数中：
- en: '![](assets/127db7b5-6c36-4f3d-8b4c-0f7be0eb9600.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/127db7b5-6c36-4f3d-8b4c-0f7be0eb9600.png)'
- en: 'Once we do that, we can right-click the website entity on the graph and select
    what type of information we want to gather. In the following screenshot, we can
    see all the possible options:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们这样做，我们可以右键单击图中的网站实体并选择我们想要收集的信息类型。在下面的截图中，我们可以看到所有可能的选项：
- en: '![](assets/52856373-b42c-44b6-9ddb-35ba9999cbf3.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/52856373-b42c-44b6-9ddb-35ba9999cbf3.png)'
- en: We are not going to run any transformers in this section; we're going to do
    this in the next sections. For now, we are just showing us a quick overview of
    the tool, how to add entities, how to run transformers, and what we mean by all
    of these things. A lot of this is still a bit vague, but we're going to be using
    this tool a lot in this chapter, and it's going to become very easy for us. As
    we know, we can use it to gather information about anything, and it's really going
    to enhance our social engineering skills.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们不会运行任何转换器；我们将在接下来的章节中进行。现在，我们只是展示了一下工具的快速概述，如何添加实体，如何运行转换器，以及我们所说的这些事情的含义。很多内容仍然有点模糊，但我们将在本章中大量使用这个工具，这将变得非常容易。正如我们所知，我们可以用它来收集关于任何事物的信息，这将极大地增强我们的社会工程技能。
- en: Social engineering – linking accounts
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社会工程 - 关联账户
- en: 'In this section, we will learn how to target a person. We are going to start
    with just a person''s name, and then see how we can gather information about that
    person and build up an attack strategy. As we do that, we''re also going to look
    at more of Maltego''s features and how to configure a few more settings. So, we
    are going to start a new graph by clicking on the plus sign, as shown in the following
    screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何针对一个人。我们将从一个人的名字开始，然后看看如何收集关于该人的信息并制定攻击策略。在这个过程中，我们还将了解更多Maltego的功能以及如何配置更多设置。因此，我们将通过点击加号开始一个新的图形，如下截图所示：
- en: '![](assets/9a419fb8-b9b8-4087-8c62-e528dee3a4ef.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9a419fb8-b9b8-4087-8c62-e528dee3a4ef.png)'
- en: 'Inside the Entity Palette, search for a Person entity under the Personal section,
    and then drag and drop the Person entity to the workspace. We are going to assume
    that we have a target and we know their name, so the first name is `Zaid` and the
    surname is `Sabih`. We''re going to go to the Property View tab and set the First
    Names property; just double-click it. We are going to set it to `Zaid`, and then
    we are going to set the Surname property to `Sabih`, as shown in the following
    screenshot:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在实体面板中，在“个人”部分搜索“人员”实体，然后将“人员”实体拖放到工作区。我们假设我们有一个目标并且知道他们的名字，所以名字是`Zaid`，姓氏是`Sabih`。我们将转到“属性视图”选项卡并设置“名字”属性；只需双击它。我们将把它设置为`Zaid`，然后将姓氏属性设置为`Sabih`，如下截图所示：
- en: '![](assets/b7eaf300-449b-4d68-b3d1-3bd8dbb5167b.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b7eaf300-449b-4d68-b3d1-3bd8dbb5167b.png)'
- en: 'Now, let''s see what information can we gather about the entity created. Again,
    all we have to do is right-click the entity and see what we can get. So, we click
    on the PATERVA CTAS category, and we are going to go to All Transforms; we can
    get associated emails, we can try to get a phone number, and we can try to get
    a Twitter account; we can try all of these. For now, we are going to try to get
    a website, or websites, for this person:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看可以收集到哪些关于已创建实体的信息。再次强调，我们所要做的就是右键点击实体，看看我们能获取到什么。所以，我们点击PATERVA CTAS类别，然后进入All
    Transforms；我们可以获取关联的邮箱，尝试获取电话号码，或者尝试获取Twitter账户；我们可以尝试这些。现在，我们将尝试获取这个人的网站，或多个网站：
- en: '![](assets/f71f14f1-a84f-4983-97a7-9442299ea183.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f71f14f1-a84f-4983-97a7-9442299ea183.png)'
- en: 'Now, it will ask us whether we want to look for a specific domain name. We
    are going to assume that we know nothing, so we are just going to put a space
    between two websites, in both entries. That just means looking for any websites
    that are associated with this person:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，它会问我们是否要寻找特定的域名。我们假设自己对这方面一无所知，所以我们会在两个网站之间留一个空格，这意味着查找任何与此人相关的网站：
- en: '![](assets/3d980eb2-45a8-4d95-8fb8-a428c3833501.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3d980eb2-45a8-4d95-8fb8-a428c3833501.png)'
- en: 'After clicking Run!, we should get a number of websites, and all of the websites
    are associated with Zaid Sabih:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 点击Run!之后，我们应该会得到一些网站，这些网站都与Zaid Sabih有关：
- en: '![](assets/2b51c427-b61f-45f4-b8a6-4425b7cf8f83.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2b51c427-b61f-45f4-b8a6-4425b7cf8f83.png)'
- en: Association websites
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 关联网站
- en: 'Now, that doesn''t really mean that these websites are actually associated
    with our target, because there could be another person named Zaid Sabih, so we
    will have to go to each one and see which are actually related to that person.
    For example, we will double-click on the Facebook website to see the associated
    information. In Properties, we will see that we have the Facebook URLs that are
    associated with that particular name:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这并不意味着这些网站实际上与我们的目标人物有关，因为可能还有另一个名为Zaid Sabih的人，所以我们需要去每一个网站查看，看看哪些是与那个人相关的。例如，我们会双击Facebook网站查看关联信息。在**属性**中，我们将看到与该名字关联的Facebook
    URLs：
- en: '![](assets/32365003-7d76-4b6b-a6f6-f70200dcfbca.png)URLs associated with the
    target'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/32365003-7d76-4b6b-a6f6-f70200dcfbca.png)与目标相关的URLs'
- en: 'We can even copy the URL to a text file to read it better, and we can see in
    the following screenshot that we have three profiles:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以将URL复制到文本文件中，以便更好地查看，我们可以在下面的截图中看到，我们有三个资料页面：
- en: '![](assets/07210101-ec0a-4272-b0bf-6b9f62fedfb3.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/07210101-ec0a-4272-b0bf-6b9f62fedfb3.png)'
- en: Now, in a real-life situation, we should go into each of these profiles and
    see which one is actually related to our person. In this example, we are not going
    to do that because three of them are actually not related to Zaid at all, so this
    is really not useful. In this case, we will just come back, move to the next entity,
    and see what's useful.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在实际情况下，我们应该进入每一个这些资料页面，看看哪一个与我们的目标人物有关。在这个例子中，我们不打算这么做，因为其中三个实际上与Zaid根本没有关系，所以这实际上并没有什么用处。在这种情况下，我们将直接返回，转到下一个实体，看看有什么是有用的。
- en: It is highly recommended to delete the ones that are not useful because they'll
    just make it harder to look through things. Just click it, press Delete, and that
    will delete it for us.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议删除那些没有用的，因为它们只会让浏览变得更加困难。只需要点击它，按下删除键，它就会被删除。
- en: 'For our example, it''s all related to our target. We can double-click each
    one of them, go to Properties, look for the URL, and open it in our browser. When
    we do that, we will get the information related to that person, and it will help
    us to form some sort of an attack strategy, or help us to get even more information.
    For now, because we have already looked at all of them, we are going to focus
    on one of them, which is the Udemy link, that is, the information related to our
    target on Udemy. We are going to double-click as we did before, go to Properties,
    get a URL, copy that URL, and open it in our browser. We can see that the URL
    is related to our target person, and we can see that it''s leading us to a course
    taught by our target. Although this information is not really useful, we can now
    see that the target person is teaching online courses:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的例子，所有这些信息都与我们的目标相关。我们可以双击其中的每一个，进入属性，寻找网址，并在浏览器中打开。当我们这样做时，我们会得到与此人相关的信息，这将帮助我们制定某种攻击策略，或者帮助我们获取更多信息。现在，因为我们已经查看了所有这些内容，我们将专注于其中一个链接，那就是Udemy的链接，也就是与目标在Udemy上的信息。我们将像之前一样双击，进入属性，获取网址，复制该网址，并在浏览器中打开。我们可以看到该网址与目标人相关，并且它引导我们到目标教授的一个课程页面。虽然这些信息并不太有用，但我们现在可以看到目标正在教授在线课程：
- en: '![](assets/686efa76-2663-4162-8a31-8d95b30982aa.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/686efa76-2663-4162-8a31-8d95b30982aa.png)'
- en: 'Go back and look at the other two URLs. If we browse the second URL, we can
    see it is showing us the profile for the target person:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 返回并查看另外两个网址。如果我们浏览第二个网址，我们可以看到它展示的是目标人物的个人资料：
- en: '![](assets/8ab47f12-f386-488f-bd9b-efd68cd9a0cf.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8ab47f12-f386-488f-bd9b-efd68cd9a0cf.png)'
- en: 'By browsing the URL, we can gather information about the person. We can check
    all the websites to gather more information about them. Now, we need to keep in
    mind that we are setting our target—which is me, a person with knowledge of computers
    and information technology. When we are targeting normal companies or normal people,
    it will be easier to get effective information. If we look at their YouTube, LinkedIn,
    and Facebook profiles, we really won''t get much. Even if we click on their Facebook
    profile, we will see that Facebook won''t lead us to anything, we need to log
    in, and even after logging in, we won''t get too much useful information. What''s
    useful is if we go to their blog and go to the ABOUT section; what''s useful here
    is that we have the email address of the target person, and we have their Twitter
    account:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 通过浏览该网址，我们可以收集关于这个人的信息。我们可以查看所有相关网站以获取更多的信息。现在，我们需要记住我们设定的目标——那就是我，一个懂得计算机和信息技术的人。当我们的目标是普通公司或普通人时，获取有效信息会容易一些。如果我们查看他们的YouTube、LinkedIn和Facebook个人资料，我们真的不会得到太多信息。即使我们点击他们的Facebook个人资料，我们也会发现Facebook并不会给我们带来什么有用的内容，我们需要登录，即使登录后，也不会得到太多有用信息。真正有用的做法是，如果我们去他们的博客并查看“关于”部分；在这里，我们能找到目标人的电子邮件地址，还有他们的Twitter账号：
- en: '![](assets/9f3e8ee3-7509-40f3-bcf8-eb2d8666c352.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9f3e8ee3-7509-40f3-bcf8-eb2d8666c352.png)'
- en: This information was not included on Udemy, and now we have two really useful
    pieces of information. In the next section, we'll see how we can use this information
    to gather even more info about our target, and hopefully be able to build up an
    attack strategy.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息并未出现在Udemy上，现在我们有了两条非常有用的信息。在接下来的部分中，我们将看到如何利用这些信息收集更多关于目标的资料，并希望能够制定出攻击策略。
- en: Social engineering – Twitter
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社会工程学 – Twitter
- en: So now we have the email address of our target person and their Twitter account.
    Let's start with Twitter and see what we can get from that. Open the Twitter account
    for the target person, copy the link, and we're going to come to our workspace,
    Maltego to add a Twitter entity. We're going to add a Twitter entity from the
    Social Network category. Maltego has an entity for Twitter, it's just not being
    shown so, let's see how to access these settings.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经得到了目标人的电子邮件地址和Twitter账号。让我们从Twitter开始，看看我们能从中获取到什么。打开目标人的Twitter账号，复制链接，然后返回到我们的工作区——Maltego，添加一个Twitter实体。我们将从社交网络类别中添加一个Twitter实体。Maltego有一个Twitter实体，只是目前没有显示出来，让我们来看看如何访问这些设置。
- en: 'Go to Entities | Manage Entities, and we can see a list of entities that we
    can add:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 前往实体 | 管理实体，我们可以看到一份可以添加的实体列表：
- en: '![](assets/56963fa7-879e-44b1-b1d3-95bb8ca5dbba.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/56963fa7-879e-44b1-b1d3-95bb8ca5dbba.png)'
- en: Entity list
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 实体列表
- en: All of these entities are not added to the Entity Palette; the one we are interested
    in right now is Affiliation – Twitter, the membership of the Twitter social network.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些实体都没有添加到实体面板；我们现在感兴趣的是“隶属 - Twitter”，即 Twitter 社交网络的成员资格。
- en: 'Now, click on the three little dots that appear on the right, it will open
    a window, as seen in the following screenshot. We are going to go to Advanced
    Settings, check the box that says Palette item, click on OK, and close the window:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，点击右侧出现的三个小点，将会打开一个窗口，如下面的截图所示。我们将转到“高级设置”，选中“调色板项”复选框，点击“确定”，然后关闭窗口：
- en: '![](assets/3bc03c7f-e473-402f-8914-fdf2435ec5c7.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3bc03c7f-e473-402f-8914-fdf2435ec5c7.png)'
- en: Edit Entity
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑实体
- en: 'Now, the Twitter entity should be showing up in the Entity Palette. So again,
    we are going to use this as a normal entity. Just drag and drop it, we are going
    to set the name of it in the Properties section, which is going to be `Zaid`,
    we''re going to put the URL in the Profile URL tab, and our user ID is `Zaid_alq`:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Twitter 实体应该显示在实体面板中。因此，我们将其作为普通实体使用。只需拖放它，我们将在属性部分设置其名称，即`Zaid`，我们将在个人资料网址选项卡中放入网址，并且我们的用户ID是`Zaid_alq`：
- en: '![](assets/f8810e64-a22d-4958-8bbc-01f7d8b3b720.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f8810e64-a22d-4958-8bbc-01f7d8b3b720.png)'
- en: Entity Palette
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 实体面板
- en: 'Now, we can gather information about the target person based on their Twitter
    account. Right-click the entity and let''s see what we can get:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以根据他们的 Twitter 帐户收集有关目标人员的信息。右键单击实体，看看我们能获取什么：
- en: '![](assets/46677b86-fde0-4e54-8deb-dae55fa153ee.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/46677b86-fde0-4e54-8deb-dae55fa153ee.png)'
- en: Information about the target
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 关于目标的信息
- en: So we can get their tweets, we can see the tweets that they sent to people,
    we can transfer this, we can get more details, and we can get their followers.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以获取他们的推文，可以看到他们发送给人们的推文，我们可以转移这些内容，获取更多详细信息，还可以获取他们的粉丝。
- en: 'What we really want to get is their friends so that we can actually target
    them through their friends. So again, click on the Run button in front of the
    To Twitter friends option. This particular transformer requires us to log into
    Twitter. As we can see in the following screenshot, Maltego is telling that us
    we have to log into Twitter to be able to gather information about the target
    person:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们真正想要的是他们的朋友，这样我们可以通过他们的朋友实际定位他们。因此，再次点击“运行”按钮，在“到 Twitter 朋友”选项前面。这个特定的转换器要求我们登录
    Twitter。正如我们在下面的截图中可以看到的，Maltego 告诉我们，我们必须登录 Twitter 才能收集有关目标人物的信息：
- en: '![](assets/4bdeb697-2222-4347-a8d0-ad670f26a8fc.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4bdeb697-2222-4347-a8d0-ad670f26a8fc.png)'
- en: Information log
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 信息日志
- en: 'In the preceding screenshot, click on Sign In, and log in with a username and
    a password. Now it''s asking us whether we want to authorize this app. We are
    going to click on Authorize app:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的截图中，点击“登录”，使用用户名和密码登录。现在它问我们是否要授权此应用程序。我们将点击“授权应用程序”：
- en: '![](assets/b85d60af-f999-4e01-ba20-827670905be6.png)Authorize App'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/b85d60af-f999-4e01-ba20-827670905be6.png)授权应用程序'
- en: 'Now, we should be logged into Maltego, go back to Maltego, and when we come
    back to the tool, close the sign-in window and it should start to look for friends
    on the target Twitter account. As we can see, we managed to get the people who
    are friends with Zaid, and we can see some really interesting information:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们应该已经登录了 Maltego，请返回 Maltego，当我们回到工具时，关闭登录窗口，它应该开始查找目标 Twitter 帐户的朋友。正如我们所看到的，我们成功获取了与
    Zaid 是朋友的人们，并且我们可以看到一些非常有趣的信息：
- en: '![](assets/968afd46-ef21-448f-8bbc-9269f118d660.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/968afd46-ef21-448f-8bbc-9269f118d660.png)'
- en: Victims connections on Twitter
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Twitter 上的受害者联系人
- en: 'Websites are not very useful. We can pretend to be a person from one of these
    websites and there is a high chance that Zaid will respond to it, but it''s not
    as good as using their contacts. So delete these websites, and now we can see
    that Zaid has three friends, and we can use all of them. Right-click on them to
    ascertain more information about them:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 网站并不是非常有用。我们可以假装是这些网站中的一个人，有很高的机会 Zaid 会回复，但不如使用他们的联系人那样好。因此，删除这些网站，现在我们可以看到
    Zaid 有三个朋友，我们可以利用所有这些信息。右键单击他们以获取更多信息：
- en: '![](assets/5d4cab0a-d301-43d4-80e0-b2efd86dbee3.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5d4cab0a-d301-43d4-80e0-b2efd86dbee3.png)'
- en: Detail information about the connections
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 关于连接的详细信息
- en: In the next section, we'll go back to where we were. So, we have gathered information
    about the Twitter account and now we'll see how to gather information about the
    email of the same Twitter person.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将回到之前的位置。因此，我们已经收集了有关 Twitter 帐户的信息，现在我们将看到如何收集相同 Twitter 人员的电子邮件信息。
- en: Social engineering – emails
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社会工程学 – 电子邮件
- en: 'OK, now let''s see what can we get using the email of the target person, which
    is `zaid@isecur1ty.org`. In Maltego (and we are going to add a new entity of an
    email address), go to Personal | Email Address, drag and drop it into the graph,
    and set Email Address to `zaid@isecur1ty.org` from Properties, as can be seen
    in the following screenshot:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在让我们看看可以使用目标人物的电子邮件`zaid@isecur1ty.org`获得什么。在 Maltego 中（我们将添加一个新的电子邮件地址实体），前往“个人
    | 电子邮件地址”，将其拖放到图表中，并在“属性”中将电子邮件地址设置为`zaid@isecur1ty.org`，如以下截图所示：
- en: '![](assets/ec85c571-b59e-4735-9b24-481327b6bfad.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ec85c571-b59e-4735-9b24-481327b6bfad.png)'
- en: Properties
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: We managed to get an email address from the target's blog. Using the email,
    we're now going to see what information we can get.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功地从目标的博客获取了一个电子邮件地址。使用该电子邮件，我们现在将看看能获取哪些信息。
- en: 'Right-click the entity as usual and we will see a list of Run Transform(s).
    For our example, click on To Domain [DNS] and click the Run button:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样右键点击实体，我们将看到“运行转换”列表。以我们的示例为例，点击“到域名 [DNS]”并点击“运行”按钮：
- en: '![](assets/5812371c-d837-48e8-bad4-8fdf538469b7.png)Run Transforms list'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/5812371c-d837-48e8-bad4-8fdf538469b7.png) 运行转换列表'
- en: 'We can see that we got a domain name, which is `isecur1ty.org`. From the following
    website, we are going to try to get the email addresses associated with the website:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到我们获得了一个域名，即`isecur1ty.org`。接下来我们将尝试从以下网站获取与该网站关联的电子邮件地址：
- en: '![](assets/3460298b-a760-45f8-92ea-32194a655aeb.png)Domain name'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/3460298b-a760-45f8-92ea-32194a655aeb.png) 域名'
- en: 'Right-click on the website, click on Email addresses from domain, and click
    on the Run All button to run all the transformers that will get the email addresses
    associated with the domain:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 右键点击网站，点击“来自域名的电子邮件地址”，然后点击“运行所有”按钮，以运行所有获取与该域名关联的电子邮件地址的转换器：
- en: '![](assets/98d1ea83-5ec8-420a-969c-ade3a3e247d7.png)Run Transforms'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/98d1ea83-5ec8-420a-969c-ade3a3e247d7.png) 运行转换'
- en: 'We have `m.askar@isecur1ty.org`, which is the same person we found on the target''s
    Twitter account:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了`m.askar@isecur1ty.org`，这是我们在目标的 Twitter 账户上找到的同一个人：
- en: '![](assets/d58cd76f-04be-4ec3-b4cb-7b00d083cb1d.png)Connections on twitter'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/d58cd76f-04be-4ec3-b4cb-7b00d083cb1d.png) Twitter 上的连接'
- en: 'Another thing that we can do from the domain is transfer to a website, right-click
    on the website, and click on To Website [Quick lookup]:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以从域名进行转移，右键点击网站，点击“到网站 [快速查找]”：
- en: '![](assets/46892c9b-9719-4746-8d62-48a318e40278.png)Transfer to website option'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/46892c9b-9719-4746-8d62-48a318e40278.png) 转移到网站选项'
- en: 'The following is the website:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该网站：
- en: '![](assets/6f1424fd-cc6f-4948-acd0-ade2a9892048.png)Websites associated with
    the target'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/6f1424fd-cc6f-4948-acd0-ade2a9892048.png) 与目标相关的网站'
- en: 'From the website, we''re going to look for email addresses associated with
    it, right-click on the website, click on Mirror: Email addresses found, and then
    click Run:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 从网站上，我们将寻找与之关联的电子邮件地址，右键点击网站，点击“镜像：找到的电子邮件地址”，然后点击“运行”：
- en: '![](assets/62ac7c1c-2639-4570-83ba-afc6df663362.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/62ac7c1c-2639-4570-83ba-afc6df663362.png)'
- en: Extracting Email-ids of connections
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 提取连接的电子邮件地址
- en: 'Once complete, we get two useless emails, so we are going to delete these two,
    leaving us with two good ones:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，我们得到两个无用的电子邮件，因此我们将删除这两个，剩下两个有效的电子邮件：
- en: '![](assets/962cd565-f62f-49ea-b7cd-678a520dc5b9.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/962cd565-f62f-49ea-b7cd-678a520dc5b9.png)'
- en: Email-ids of connections
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 连接的电子邮件地址
- en: So we have `mustafa@albazy.com`, which is the same person that we found on Twitter,
    and we have `info@isecur1ty.org`. Now again, we can just keep gathering more information
    about our target. We have enough information to start building up an attack strategy
    on the target person. In the next section, we'll discuss all the info that we
    gathered and we'll come up with ideas on how we can attack this person and hack
    into their system or into their accounts.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了`mustafa@albazy.com`，这与我们在 Twitter 上找到的同一人，并且我们还得到了`info@isecur1ty.org`。现在，我们可以继续收集更多有关目标的信息。我们已经有足够的信息来开始制定针对目标人物的攻击策略。在下一节中，我们将讨论我们收集到的所有信息，并提出如何攻击此人以及如何入侵他们的系统或账户的想法。
- en: Social engineering – summary
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社会工程学 – 总结
- en: In this section, let's see how we can build up an attack strategy against our
    target, which is a person named Zaid. Before we move ahead, we will organize the
    workspace so that we can come up with ideas. For our example, we are going to
    keep only the useful information such as Udemy. We are going to put Zaid, who
    is our main entity, at the top, and then just click and drag an arrow from the
    email address so that we know that Zaid is associated with the `zaid@isecur1ty.org` address.
    Zaid is associated with the `zaid@isecur1ty.org` email, which led us to `isecur1ty.org`.
    And then we're going to add another arrow from Zaid to his Twitter account, so
    that we know that this Twitter account is associated with this person, and we
    have an entity here of Udemy. We also know that Mohammed Askar's email is `m.askar@isecur1ty.org`,
    and this email is associated with Mohammed.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将探讨如何针对我们的目标——一个名叫Zaid的人，制定攻击策略。在继续之前，我们将整理工作区，以便我们能够提出一些想法。以我们的例子为例，我们将只保留一些有用的信息，比如Udemy。我们将把Zaid这个主实体放在最上面，然后点击并拖动箭头从电子邮件地址开始，以便我们知道Zaid与`zaid@isecur1ty.org`这个地址有关。Zaid与`zaid@isecur1ty.org`电子邮件相关联，这也让我们找到了`isecur1ty.org`。接下来，我们将从Zaid的Twitter账户添加另一条箭头，标明这个Twitter账户与此人相关联，同时我们这里也有Udemy这个实体。我们还知道Mohammed
    Askar的电子邮件是`m.askar@isecur1ty.org`，这个电子邮件与Mohammed相关联。
- en: 'Also, if the email is `@isecur1ty.org`, then this person is probably is associated
    with `isecur1ty.org` as well. If we do a Google search, we will see that Askar
    is the admin of `isecur1ty.org`. So again, we''re going to include an arrow from
    isecur1ty to Mohammad. We are going to do the same with the Mustafa entity because
    we can see we have his email, `mustafa@albazy.com`, and we''ll also associate
    isecur1ty with this person. So now, as can be seen in the following screenshot,
    our target is Zaid, and we know Zaid uses Udemy and teaches courses there. We
    were also able to find Zaid''s blog, and we were able to see his YouTube and LinkedIn
    profiles:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，如果电子邮件是`@isecur1ty.org`，那么这个人很可能与`isecur1ty.org`有关。如果我们进行谷歌搜索，我们会发现Askar是`isecur1ty.org`的管理员。所以，我们将再次从isecur1ty指向Mohammed添加一条箭头。对于Mustafa这个实体，我们也会做同样的事情，因为我们能看到他的电子邮件是`mustafa@albazy.com`，我们将isecur1ty与此人关联。所以现在，如下截图所示，我们的目标是Zaid，我们知道Zaid使用Udemy并在那里教授课程。我们还找到了Zaid的博客，且能看到他的YouTube和LinkedIn个人资料：
- en: '![](assets/842ca458-19a4-4a54-bfc4-f6dd8bc54c4b.png)Connections associated
    to the target.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![](assets/842ca458-19a4-4a54-bfc4-f6dd8bc54c4b.png)与目标相关的连接。'
- en: This arrangement can make us think of so many ways to attack Zaid; we can look
    at how active he is on Udemy and pretend to be a person from Udemy. We can pretend
    to be an admin from Udemy and send him a program, for example, and tell him this
    is our new beta program that we're only giving to special instructors. This way,
    Zaid will feel privileged because he's getting something that other instructors
    are not getting, and he'll run that file. And once he runs that file, which is
    a Trojan, it will create a backdoor, a keylogger, or a program that will steal
    his passwords, or allow us to do anything we want on the target computer. As mentioned
    earlier, we're not going to be studying technical things in this section; we'll
    look at that in upcoming sections, so we'll know how to do it. When we say we'll
    send him a file that looks like a normal file, we'll actually be able to do that,
    and this normal file will be a normal program, but, in the background, it will
    do what we tell it to. We can also pretend to be from YouTube, from WordPress,
    or from Udemy, and ask Zaid to reset his password and give him a link that has
    a login page exactly the same as the login page of Udemy or YouTube. Once he puts
    in their password, we'll actually get that password. So the possibilities are
    endless here, and we'll talk about ways of doing all of that later on.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这种布局可以让我们想到许多攻击Zaid的方法；我们可以查看他在Udemy上的活跃程度，并假装是Udemy的工作人员。例如，我们可以假装是Udemy的管理员，给他发送一个程序，并告诉他这是我们新的Beta项目，只会给特殊的讲师。这样，Zaid会感到自己很特殊，因为他获得了其他讲师没有的东西，并且他会运行那个文件。一旦他运行了那个文件，它实际上是一个特洛伊木马，它会创建一个后门，一个键盘记录器，或者一个会窃取他密码的程序，或者允许我们在目标计算机上做任何想做的事。如前所述，在这一部分我们不会研究技术细节，后续部分我们会讲解具体如何操作。所以，当我们说我们会给他发送一个看起来像普通文件的文件时，我们实际上是能够做到的，而这个普通文件本质上是一个普通程序，但在后台它会执行我们告诉它做的事情。我们还可以假装是来自YouTube、WordPress或Udemy的人员，要求Zaid重置密码，并给他一个链接，链接上的登录页面与Udemy或YouTube的登录页面一模一样。一旦他输入密码，我们就能得到这个密码。所以这里的可能性是无穷无尽的，我们稍后会讨论如何实现这些方法。
- en: Looking at the connections that we can see with isecur1ty, we can see that this
    person has a lot of connections with the isecur1ty company. We can see that he
    has an `@isecur1ty.org` email. Again, this email is really useful because this
    is how we're going to be communicating with Zaid. We can also communicate with
    him through Udemy by sending him messages, but it is obvious that his friends
    don't really communicate with him over Udemy. So we should target Zaid using his
    email. And we have his friends, such as Mohammed, and we can see that there are
    many connections between him and Zaid. They're both friends on Twitter, they're
    both active on isecur1ty, and they both have `@isecur1ty.org` emails. So this
    makes us think they're not only work colleagues, but that they're probably friends
    as well. By exploiting this friendship, we can send stuff to Zaid asking him about
    anything really; we can show him pictures of a car that we want to buy, or we
    can send him PDFs, because we know that both of these guys are interested in computer
    security – they're running a security website. If we send him a PDF, when he opens
    the PDF, it'll run the file that we want it to run on the system, which will give
    us access to Zaid's system.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 看看我们能看到的与isecur1ty的连接，我们可以看到这个人与isecur1ty公司有很多联系。我们可以看到他有一个`@isecur1ty.org`的邮箱。再一次，这个邮箱非常有用，因为我们将通过它与扎伊德沟通。我们也可以通过Udemy与他沟通，发送消息，但显然他的朋友们并不通过Udemy与他沟通。所以我们应该通过他的电子邮件来针对扎伊德。我们还有他的朋友们，比如穆罕默德，我们可以看到他和扎伊德之间有很多联系。他们在Twitter上是朋友，他们都活跃在isecur1ty上，并且都有`@isecur1ty.org`的邮箱。这让我们觉得他们不仅是工作上的同事，可能还是朋友。通过利用这种友谊，我们可以向扎伊德发送任何东西，问他任何问题；我们可以向他展示我们想买的汽车的图片，或者发送PDF文件，因为我们知道这两个家伙都对计算机安全感兴趣——他们经营着一个安全网站。如果我们发送给他一个PDF文件，当他打开这个PDF时，它将运行我们希望在系统上运行的文件，这将使我们能够访问扎伊德的系统。
- en: When we send an email, we will be able to send an email that looks exactly as
    if it's coming from Mohammed, and we can do the same with Mustafa. So we can send
    stuff to Zaid, we can send him things that they're both interested in, we can
    send him pictures, or links asking him to log in and do something; the possibilities
    are endless when it comes to social engineering. Not only that, let's say we tried
    everything and we couldn't hack into Zaid's system. We pretended to be all of
    these people and tried everything that we could think of, and we still couldn't
    reach Zaid's system. This is not the end of the world; instead, we could try to
    hack into one of his friend's computers. So we can try to hack into Mohammed's
    computer or Mustafa's computer. From there, we'd try to get into their Facebook
    and then communicate with Zaid via Facebook, because we can't really send a message
    that looks like it's coming from Mohammed on Facebook, we can only do that with
    emails, but again, we can hack into these guys' Facebook accounts and then try
    to hack into Zaid's. Why not hack into their isecur1ty accounts? We know these
    people are admins; they have `@isecur1ty.org` emails. We could hack into their
    computers and hack into `isecur1ty.org`. Zaid definitely browses isecur1ty, so
    embed a backdoor in there or change one of the files that's hosted on isecur1ty
    into a backdoor, and then once Zaid downloads it or uses it, we will be able to
    hack into his computer.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们发送一封电子邮件时，我们可以发送看起来像是来自穆罕默德的邮件，我们也可以对穆斯塔法做同样的事情。所以我们可以向扎伊德发送内容，发送他们都感兴趣的东西，或者发送图片，或者发送要求他登录并做某事的链接；在社会工程学方面，可能性是无穷无尽的。不仅如此，假设我们尝试了所有方法，仍然无法黑入扎伊德的系统。我们假装成所有这些人，并尝试了我们能想到的所有方法，但仍然无法进入扎伊德的系统。这并不是世界末日；相反，我们可以尝试黑入他某个朋友的电脑。所以我们可以尝试黑入穆罕默德的电脑或者穆斯塔法的电脑。从那里，我们会尝试进入他们的Facebook账户，然后通过Facebook与扎伊德沟通，因为我们无法在Facebook上发送看起来像是来自穆罕默德的消息，我们只能通过电子邮件做到这一点，但同样，我们可以黑入这些人的Facebook账户，然后尝试黑入扎伊德的账户。为什么不黑入他们的isecur1ty账户呢？我们知道这些人是管理员，他们有`@isecur1ty.org`的邮箱。我们可以黑入他们的电脑，再黑入`isecur1ty.org`。扎伊德肯定浏览过isecur1ty，所以我们可以在里面埋下一个后门，或者将托管在isecur1ty上的某个文件改成后门，然后一旦扎伊德下载或使用它，我们就能黑入他的电脑。
- en: In the next section, we will learn how to send these fake emails, create these
    backdoors, create these keyloggers, and all that cool stuff. For now, I just wanted
    to show how powerful Maltego is and how we can use it to gather information about
    anything. We started with nothing but a name, Zaid Sabih, and we were able to
    gather information about his websites, his blog, his YouTube, friends, and emails.
    Again, this person is a techie, a person who is interested in information technology,
    so he's very careful about what he shares, but we were still able to gather enough
    information to build up an attack strategy. If we do this with a normal person,
    we will be surprised by the amount of information we can gather about them.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习如何发送这些假邮件、创建这些后门、制作这些键盘记录器，以及所有那些酷炫的东西。现在，我只是想展示 Maltego 的强大功能，以及我们如何利用它收集关于任何事物的信息。我们从一个名字——Zaid
    Sabih 开始，能够收集到关于他的网站、博客、YouTube 频道、朋友和邮件的信息。再次强调，这个人是一个技术爱好者，热衷于信息技术，所以他在分享个人信息时非常小心，但我们仍然能够收集到足够的信息来制定攻击策略。如果我们对一个普通人做这些事情，我们会惊讶于能收集到多少信息。
- en: Downloading and executing AutoIt
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载并执行 AutoIt
- en: 'In this section, we will learn how to combine the backdoor that we created
    with any other file type, so that when executed, it will display an image, a PDF,
    a song, or something that the target person is interested in. This way, we will
    be able to social engineer them to run our backdoor and they will see something
    that they trust, but our backdoor will be running in the background. We''re going
    to do this using a download and execute script that will basically download the
    backdoor, download the file that the person expects, run the files that the person
    expects, and run the backdoor in the background. The download and execute script
    is included in the resources, which is available at the book''s GitHub repository.
    After downloading the file, open the file and we can see the code used inside
    the script:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何将我们创建的后门与任何其他文件类型结合，使其在执行时显示一张图片、一个 PDF 文件、一首歌曲或其他目标人物感兴趣的内容。通过这种方式，我们将能够利用社会工程学让他们运行我们的后门，而他们看到的将是他们信任的内容，但我们的后门将会在后台运行。我们将通过一个下载并执行脚本来实现这一点，该脚本基本上会下载后门，下载目标人物期望的文件，执行目标人物期望的文件，并在后台运行后门。下载并执行脚本包含在资源中，可以在本书的
    GitHub 仓库中找到。下载文件后，打开文件，我们可以看到脚本中使用的代码：
- en: '[PRE0]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The script is programmed so that we can use it to download and execute anything,
    and any number of files. So, all we have to do is enter the links or the URLs
    for the files in the `Local $urls` parameter, and separate the links by a comma.
    So we can enter URL, and keep going. We can use this script to download and execute
    two executables, three executables, or any number of files we want. Now, we are
    going to put in the file that we want the target person to see. This file needs
    to be available online and uploaded on a direct link so that it can be downloaded
    from that link. For this example, we are going to use an image, but we can use
    any other file types, even get them to open a PDF, or anything else that we want.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本被编程为我们可以用它下载和执行任何东西，任何数量的文件。因此，我们只需在 `Local $urls` 参数中输入文件的链接或 URL，并用逗号分隔这些链接。这样我们就可以输入
    URL 并继续下去。我们可以使用这个脚本来下载和执行两个可执行文件、三个可执行文件，或者我们想要的任何数量的文件。现在，我们将输入我们希望目标人物看到的文件。这个文件需要能够在线获取，并上传到一个直接链接，以便从该链接下载。为了这个示例，我们将使用一张图片，但我们可以使用任何其他文件类型，甚至让他们打开一个
    PDF 文件，或者任何其他我们想要的内容。
- en: 'Therefore browse Google Images and look for an image. Click and open the image,
    right-click on the image, and click on Copy image address:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，浏览 Google 图片并寻找一张图片。点击并打开图片，右键单击图片，然后点击“复制图片地址”：
- en: '![](assets/9e134fce-89db-4165-905d-0032b0604e21.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9e134fce-89db-4165-905d-0032b0604e21.png)'
- en: 'Notice that when we do this, we get the image itself through a direct URL on
    the address bar, so we can see that the end of the URL is `.jpg`. When we access
    the image, there will be no ads around it; all we can see is the file itself.
    The files included in our script all need to have a direct URL. Paste the URL
    into the script as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当我们这样做时，我们会通过地址栏上的直接 URL 获取到图片本身，因此我们可以看到 URL 的结尾是 `.jpg`。当我们访问图片时，周围不会有广告；我们只能看到图片本身。我们脚本中包含的所有文件都需要有一个直接的
    URL。将 URL 粘贴到脚本中，如下所示：
- en: '[PRE1]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The next file that we wanted to be downloaded and executed is our backdoor.
    We are going to insert a comma and then we are going to put in a direct URL for
    our backdoor. For our example, that URL is stored at `http://10.20.14.213/evil-files/rev_https_8080.exe`.
    If we just paste that URL, we can access the file and download it directly. This
    is very, very important; the script will not work if we don''t use direct URLs.
    As we can see, the script is very simple, all we have to do is insert the URL
    for the first file and then we put in a comma, which is important again. We have
    to separate the URLs by a comma, and then we put in the URL for the second file.
    As mentioned earlier, if we want to download more files, or download more backdoors
    or more evil files, all we have to do is insert another comma and put in the next
    URL. The `Local $urls` parameter should now contain the following parameters:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们想要下载并执行的文件是我们的后门。我们将插入一个逗号，然后输入后门的直接URL。对于我们的示例，该URL存储在`http://10.20.14.213/evil-files/rev_https_8080.exe`。如果我们直接粘贴该URL，就可以访问该文件并直接下载。这一点非常重要；如果不使用直接的URL，脚本将无法正常工作。正如我们所看到的，这个脚本非常简单，唯一需要做的就是插入第一个文件的URL，然后再插入一个逗号，这一点很重要。我们必须用逗号分隔URL，然后再输入第二个文件的URL。如前所述，如果我们想下载更多文件，或者下载更多后门或恶意文件，我们只需要再插入一个逗号，并输入下一个URL。`Local
    $urls`参数现在应该包含以下参数：
- en: '[PRE2]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, all we have to do is compile the script to an executable, and we are going
    to learn how to do that in the next section.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们所需要做的就是将脚本编译成可执行文件，接下来我们将在下一节中学习如何做到这一点。
- en: Changing the icon and compiling the payload
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改图标并编译有效载荷
- en: 'In the previous section, we worked on our script. In this section, we are going
    to learn how to compile it to an executable and how to change its icon. The script
    is written in a scripting language called AutoIt. AutoIt doesn''t come preinstalled
    in Kali, but it gets installed when we install Veil. Since we''re using a Veil
    backdoor, there''s no way we could have gotten to this point without having installed
    Veil. That''s why we are not going to cover how to install AutoIt; we can just
    download it and run the installer using Wine. So, AutoIt should be already installed
    for us by now, and all we have to do is rename the `.txt` file and change the
    extension from `.txt` to `.au3`. Then, search for the program in Kali by typing
    `compile` and we will see that we have the application that will compile AutoIt
    scripts for us, as shown in the following screenshot:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们编写了我们的脚本。在这一节中，我们将学习如何将其编译为可执行文件，并且如何更改它的图标。该脚本是用一种名为AutoIt的脚本语言编写的。AutoIt并没有预安装在Kali中，但在我们安装Veil时，它会被安装上。由于我们使用的是Veil后门，没有安装Veil我们是无法到达这一步的。因此，我们不会讲解如何安装AutoIt；我们可以直接下载并使用Wine运行安装程序。所以，AutoIt应该已经为我们安装好了，接下来我们只需要将`.txt`文件重命名，并将扩展名从`.txt`改为`.au3`。然后，在Kali中搜索`compile`，我们就可以看到一个可以编译AutoIt脚本的应用程序，如下图所示：
- en: '![](assets/395ed547-22a8-4d92-bf6b-e0230866e930.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/395ed547-22a8-4d92-bf6b-e0230866e930.png)'
- en: 'The first thing it asks us for is the source AutoIt script, and that''s the
    file that we made. So we are going to click on Browse, navigate to the `.au3`
    file, and click on Open. We can also set where it''s going to be stored, but we''re
    just going to keep storing it in Downloads, as shown in the following screenshot:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 它首先要求我们提供源AutoIt脚本，就是我们创建的那个文件。所以我们要点击“浏览”，找到`.au3`文件，然后点击“打开”。我们还可以设置文件保存的位置，但我们就按如下截图所示，将其保存在下载文件夹中：
- en: '![](assets/b1200156-93a0-4eb3-80ed-62524522dd1f.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b1200156-93a0-4eb3-80ed-62524522dd1f.png)'
- en: As we can see, we can change the icon and use a custom icon by uploading a `.ico`
    file under Options. To do this, we'll have to first download an icon that represents
    our file.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们可以更改图标，并通过在选项中上传`.ico`文件来使用自定义图标。为此，我们首先需要下载一个代表我们文件的图标。
- en: 'If our file was a PDF file, then just visit the Icon Archive website ([http://www.iconarchive.com](http://www.iconarchive.com)),
    and search for and download a PDF icon from the site. However, in our example,
    we are trying to use an image as the file that the person sees. Windows usually
    shows a preview of the image; it doesn''t really show a specific icon for images.
    So we want to convert the image to an icon, and to do that, we go to the RealWorld
    Designer site ([http://www.rw-designer.com/image-to-icon](http://www.rw-designer.com/image-to-icon)).
    Download the image that we want to make an icon of, upload it to the site by clicking
    Browse, convert it from the site, and save it in the `Downloads` directory. The
    following are the details required for Online Icon Creator:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的文件是PDF文件，那么只需访问Icon Archive网站（[http://www.iconarchive.com](http://www.iconarchive.com)），并在网站上搜索并下载一个PDF图标。然而，在我们的示例中，我们试图使用图像作为目标文件。Windows通常会显示图像的预览，而不会为图像显示特定的图标。所以我们需要将图像转换为图标，为此，我们需要访问RealWorld
    Designer网站（[http://www.rw-designer.com/image-to-icon](http://www.rw-designer.com/image-to-icon)）。下载我们想要制作成图标的图像，点击浏览上传到该网站，进行转换后保存到`Downloads`目录。以下是在线图标创建器所需的详细信息：
- en: '![](assets/421db235-27f6-46ba-b465-e021ba50c889.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/421db235-27f6-46ba-b465-e021ba50c889.png)'
- en: 'Now, go back to the compiler and set the options—the icon—(we are going to
    click on Browse), and select the icon that we just downloaded:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，回到编译器并设置选项——图标——（我们将点击浏览），然后选择我们刚刚下载的图标：
- en: '![](assets/5bf34b7e-98f1-4619-948b-254587a73f1d.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5bf34b7e-98f1-4619-948b-254587a73f1d.png)'
- en: 'All the options are set. All we have to do is click on Convert, and the file
    will be generated:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 所有选项都已设置好。我们要做的就是点击“转换”，文件就会生成：
- en: '![](assets/0cb06aa4-7d25-43bc-8bb5-287f4c53f659.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0cb06aa4-7d25-43bc-8bb5-287f4c53f659.png)'
- en: 'Click on OK, and close everything. Now we have the executable in `.exe`:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“确定”，并关闭所有窗口。现在我们已经得到了`.exe`可执行文件：
- en: '![](assets/e091bb5d-a53f-4f5d-88bd-55a8969cd662.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e091bb5d-a53f-4f5d-88bd-55a8969cd662.png)'
- en: So, when we are sending it to the target, we want to be sending `.exe`, the
    executable, as we can see in the preceding screenshot. Now, copy the executable
    into the web server at the `/var/www/html/evil-files` directory.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，当我们将其发送给目标时，我们希望发送的是`.exe`，即可执行文件，如前面的截图所示。现在，将可执行文件复制到Web服务器的`/var/www/html/evil-files`目录下。
- en: 'Before downloading the file to the target computer, we want to listen for incoming
    connections from Metasploit. We learned how to do that in [Chapter 10](e8d786b6-f25c-4005-932d-42b7c2948972.xhtml),
    *Gaining Access to Computer Devices*. For now, we are only going to run `exploit`
    to wait for incoming connections. Now that everything is ready, go to the Windows
    machine and download the file. The file is going to be available at `http://10.0.2.15/evil-files/autoit-download-and-execute.exe`.
    Visit the link and save the file:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在将文件下载到目标计算机之前，我们希望监听Metasploit的传入连接。我们在[第10章](e8d786b6-f25c-4005-932d-42b7c2948972.xhtml)，*获取计算机设备的访问权限*中学到了如何操作。现在，我们只需运行`exploit`来等待传入连接。一切准备好后，去Windows计算机下载文件。文件将在`http://10.0.2.15/evil-files/autoit-download-and-execute.exe`位置提供。访问该链接并保存文件：
- en: '![](assets/b9696310-49e0-42dc-a884-c11d6f10821a.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b9696310-49e0-42dc-a884-c11d6f10821a.png)'
- en: 'As we can see in the following screenshot, we have a file that has an icon,
    which has a preview of the image, so it''s very representative. If we double-click
    this file and run it, we see that we get an image that corresponds to the icon:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，我们有一个带图标的文件，该图标显示了图像的预览，非常具有代表性。如果我们双击该文件并运行它，我们会看到对应图标的图像：
- en: '![](assets/136b42f0-aea4-4785-803e-5c9497f87df8.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/136b42f0-aea4-4785-803e-5c9497f87df8.png)'
- en: 'If we go to the Kali machine, we will see that we encountered a Meterpreter
    session and, basically, now we''ve hacked into the target computer and can do
    anything that we want to the target. So, just to confirm, we are going to run
    the `sysinfo` command and, as we can see in the following screenshot, now we''re
    inside the target computer, and we have full access to it:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们去Kali机器，我们会看到我们已经遇到了一个Meterpreter会话，基本上现在我们已经入侵了目标计算机，能够对其进行任何操作。所以，为了确认，我们将运行`sysinfo`命令，正如下图所示，现在我们已经进入了目标计算机，并且可以完全访问它：
- en: '![](assets/8cc80e23-77de-4341-825d-9595d17ffd9f.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8cc80e23-77de-4341-825d-9595d17ffd9f.png)'
- en: We managed to do this with a file that has an icon of an image and actually
    displayed an image pertaining to the target person. As mentioned previously, this
    method can be used to combine our backdoor with an image, with a PDF, with a song,
    or anything that the target person is interested in.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功地做到这一点，通过一个具有图标的文件，实际上显示了一个与目标人物相关的图像。如前所述，这种方法可以用于将我们的后门与图像、PDF、歌曲或任何目标人物感兴趣的内容结合起来。
- en: Changing extensions
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改扩展名
- en: If we look at the backdoor, or the Trojan that we've generated so far, all it
    has is an icon that represents a file that the target person is interested in.
    When it's executed, it shows a normal file. And, at the same time, it's going
    to execute our code in the background, which will allow us to hack the target
    computer, or do whatever we want. The only problem with this file is that if we
    look at the end of the file, we can see that it has a `.exe` extension. In most
    cases, the target probably won't see the `.exe` extension because Windows is configured
    to hide it, but if it's not hiding it, then it's obvious that this file is an
    executable because it ends with a `.exe` extension. In this section, we are going
    to focus on how to spoof our Trojan and change it to something that corresponds
    to the file. If we're trying to make our backdoor look like a PDF, we can make
    it look like it has a `.pdf` extension; if we're trying to make the file look
    like an image, we want to make its extension look like a `.jpg`, a `.png`, or
    an extension that represents the image.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看到目前为止生成的后门或木马，它只有一个图标，代表目标人物感兴趣的文件。当它被执行时，它会显示一个正常的文件。同时，它也会在后台执行我们的代码，从而允许我们黑入目标计算机，或者做我们想做的任何事。这个文件唯一的问题是，如果我们看文件的结尾，可以看到它有一个
    `.exe` 扩展名。在大多数情况下，目标可能看不到 `.exe` 扩展名，因为 Windows 配置为隐藏它，但如果它没有隐藏，那就很明显这个文件是一个可执行文件，因为它以
    `.exe` 扩展名结尾。在本节中，我们将专注于如何伪装我们的木马并将其更改为与文件相对应的扩展名。如果我们想让我们的后门看起来像一个 PDF 文件，我们可以让它看起来像一个
    `.pdf` 扩展名；如果我们想让文件看起来像一张图像，我们希望它的扩展名像 `.jpg`、`.png`，或代表图像的扩展名。
- en: 'In our case, we''re trying to make it look like an image, which means it should
    have a `.jpg` extension. To do that, we''re going to use a right-to-left override
    character. We are just going to copy and paste it into our text editor so that
    when we are modifying things, it''s clear to us what we are doing:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们希望它看起来像一张图像，这意味着它应该有一个 `.jpg` 扩展名。为此，我们将使用一个从右到左的覆盖字符。我们只需将其复制并粘贴到文本编辑器中，这样在修改时，我们就能清楚地知道我们在做什么：
- en: '![](assets/c4689cda-6f7e-4aeb-b443-ddc3c3195be1.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c4689cda-6f7e-4aeb-b443-ddc3c3195be1.png)'
- en: In the preceding screenshot, we can see the new filename that we want to use,
    which is `Image`, and this is going to have a `.exe` extension. Now, instead of
    `.exe`, we actually want to have `.jpg`, but that's not possible because if we
    do that, the file is not going to be an executable. To change the extension, we
    are going to try to get the text to be read from right to left, using a right-to-left
    override character. Because the text is going to be read from right to left, we're
    going to type `gpj` after the `Image` filename, but we're going to spell it from
    right to left. Again, this is just the extension that we want to use, but we're
    spelling it from right to left, so we're spelling it gpj instead of `jpg`.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到我们希望使用的新文件名，它是 `Image`，并且它将有一个 `.exe` 扩展名。现在，我们实际上希望它有 `.jpg`
    扩展名，而不是 `.exe`，但这不可能，因为如果我们这么做，文件就不能成为可执行文件。为了更改扩展名，我们将尝试使用一个从右到左的覆盖字符，让文本从右到左读取。因为文本将从右到左读取，所以我们将在
    `Image` 文件名后输入 `gpj`，但我们将其从右到左拼写。再说一遍，这只是我们想使用的扩展名，但我们将其从右到左拼写，所以我们拼写的是 gpj，而不是
    `jpg`。
- en: 'Now, we want to put in a right-to-left character. When we put that character
    in the text, anything that comes in after that character will be read from right
    to left, so all this is going to be flipped and the `Imagegpj.exe` filename is
    going to be called `Imageexe`, and `gpj` is going to be read from right to left,
    so it''s going to be `.jpg`. Let''s perform it and we''ll see what we mean by
    reading from right to left. To get that character, we''re going to search for
    `Characters` in Kali and open the program:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们要插入一个从右到左的字符。当我们在文本中插入该字符时，之后的内容将会从右到左读取，因此所有内容都会被翻转，`Imagegpj.exe` 文件名将变成
    `Imageexe`，而 `gpj` 将从右到左读取，因此它会变成 `.jpg`。让我们执行一下，你将明白从右到左读取的意思。为了获得那个字符，我们将在 Kali
    中搜索 `Characters` 并打开程序：
- en: '![](assets/f4aee29f-1092-40ab-80b3-b40480a8f3ce.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f4aee29f-1092-40ab-80b3-b40480a8f3ce.png)'
- en: 'Click on the Search icon and search for the right-to-left override:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 点击搜索图标，搜索右到左覆盖：
- en: '![](assets/c450333a-fb11-4d82-a598-bbd2d3fe9e91.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c450333a-fb11-4d82-a598-bbd2d3fe9e91.png)'
- en: 'If we click on it, we will see a button that will allow us to copy that character:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击它，我们将看到一个按钮，允许我们复制该字符：
- en: '![](assets/b2f081e6-ee6e-4527-b325-f8bbd9e0d389.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b2f081e6-ee6e-4527-b325-f8bbd9e0d389.png)'
- en: 'Click on Copy Character and that will copy the character for this example.
    Now, go back to editor and paste the copied character in front of `gpj.exe`:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 点击复制字符，它将复制这个示例的字符。现在，返回编辑器，将复制的字符粘贴到`gpj.exe`前面：
- en: '![](assets/f28e3d56-1d82-4c41-b270-cb351be5db0f.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f28e3d56-1d82-4c41-b270-cb351be5db0f.png)'
- en: 'As seen in the preceding screenshot, if we paste it, everything is being read
    from right to left and the filename is going to be called `Imageexe.jpg`. If we
    are using this as a book or as something else, we want to think of a name that
    ends with "ex". Anything that ends with "ex" will be a good name to use. So, we
    have our name now and we are just going to copy the new name from the text editor,
    and then we are going to rename the backdoor file and we will have a file called `Imageexe.jpg`,
    as shown in the following screenshot:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，如果我们粘贴它，一切都将从右到左读取，并且文件名将被称为`Imageexe.jpg`。如果我们将其作为一本书或其他东西使用，我们想要考虑一个以“ex”结尾的名字。任何以“ex”结尾的名称都将是一个好的选择。所以，我们现在有了名字，我们只需要从文本编辑器中复制新名称，然后重命名后门文件，我们将拥有一个名为`Imageexe.jpg`的文件，如下图所示：
- en: '![](assets/78f49aea-2770-486c-ac6d-e87b2f05c383.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/78f49aea-2770-486c-ac6d-e87b2f05c383.png)'
- en: 'Now, we can send the new file to the target, but we don''t want to send it
    like this because some recent browsers are removing the right-to-left override
    when downloading the file, so what we are going to do is compress the file to `Imagejpg.zip`:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将新文件发送到目标，但我们不想直接发送它，因为一些最近的浏览器在下载文件时会移除右到左的覆盖，所以我们要做的是将文件压缩为`Imagejpg.zip`：
- en: '![](assets/978eaa2d-db4d-4a5a-85cc-565106127bad.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/978eaa2d-db4d-4a5a-85cc-565106127bad.png)'
- en: This way, when the file is downloaded by the browser, it will not replace the
    right-to-left override. Copy the content, paste it into the `evil-files` folder,
    and then we're going to download it from the Windows machine.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，当文件被浏览器下载时，它不会替换从右到左的覆盖。复制内容，粘贴到`evil-files`文件夹中，然后我们将从Windows机器下载它。
- en: 'Now, we will listen for incoming connections (we have already done this, so
    if a refresher is needed, go back to [Chapter 10](e8d786b6-f25c-4005-932d-42b7c2948972.xhtml),
    *Gaining Access to Computer Devices*). Go to the Windows machine and download
    the file, which is located at `http://10.0.2.15/Imagejpg.zip`:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将监听传入的连接（我们已经做过这个，所以如果需要复习，请返回到[第10章](e8d786b6-f25c-4005-932d-42b7c2948972.xhtml)，*获取计算机设备的访问权限*）。去Windows机器并下载位于`http://10.0.2.15/Imagejpg.zip`的文件：
- en: '![](assets/b6af4061-3a6b-4866-907a-3eb251da6cdc.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b6af4061-3a6b-4866-907a-3eb251da6cdc.png)'
- en: 'Uncompress the downloaded file and, as we can see in the following screenshot,
    the file has a `.jpg` extension. It has an image icon and, if we double-click
    it, it will actually show us an image, but, at the same time, it''s going to execute
    our backdoor in the background:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 解压下载的文件，正如我们在下图中看到的，文件具有`.jpg`扩展名。它有一个图片图标，如果我们双击它，它实际上会展示一张图片，但与此同时，它将在后台执行我们的后门：
- en: '![](assets/94eaea37-8136-44d7-8610-7d3b54513cb3.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/94eaea37-8136-44d7-8610-7d3b54513cb3.png)'
- en: 'So, if we go to the Kali machine, we will get a session from that computer,
    and, just to confirm this, we are going to run `sysinfo`. As we can see in the
    following screenshot, we are now inside that computer and we have full control
    over it:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果我们去Kali机器，我们将从那台计算机获取一个会话，为了确认这一点，我们将运行`sysinfo`。正如我们在下图中看到的，我们现在进入了那台计算机，并且对它拥有完全的控制权：
- en: '![](assets/e51ee35f-b074-4bae-8ae0-2a8df9095655.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e51ee35f-b074-4bae-8ae0-2a8df9095655.png)'
- en: We managed to do this using a file that looks and functions exactly like an
    image. This method can be used to make the file look like any other file type,
    so we don't have to make it look like an image; we can use this method to make
    it look like a PDF, a song, a video, or anything that we want. We can use the
    download-and-execute payload to combine the backdoor with any file, and then use
    this method to change the file extension to any file extension we want.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过使用一个看起来和功能完全像图像的文件成功实现了这一点。这种方法可以用来让文件看起来像任何其他文件类型，所以我们不必让它看起来像图像；我们可以用这种方法让它看起来像PDF、歌曲、视频或任何我们想要的东西。我们可以使用下载并执行的负载将后门与任何文件结合，然后使用这种方法将文件扩展名更改为我们想要的任何文件扩展名。
- en: Client-side attacks – TDM email spoofing
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端攻击 – TDM电子邮件欺骗
- en: We've seen how we can backdoor any file and make it look like a document, a
    song, a program, or an image. Our example was an image, but we can do it on any
    file. So, we should be gathering information using Maltego and then target the
    person based on the information gathered. For example, we can pretend to be tech
    support and ask the target person to install an update and combine our backdoor
    within an executable, or we can just pretend to be a friend or a colleague and
    ask the target person to run a certain document or a PDF; the possibilities are
    endless. In this example, we are going to pretend to be a friend and we are going
    to ask the target to open a picture of an image, telling them that we are thinking
    of buying that car. We are going to use the backdoor that we created in the *Changing
    extensions* section and use an image of a car instead, and then we are going to
    contact our target asking them what they think of this car.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何将任何文件变成后门，并让它看起来像文档、歌曲、程序或图像。我们的例子是图像，但我们可以对任何文件进行操作。所以，我们应该使用Maltego收集信息，然后根据收集到的信息定位目标。例如，我们可以假装是技术支持，要求目标安装更新，并将我们的后门嵌入到可执行文件中，或者我们也可以假装是朋友或同事，要求目标运行某个文档或PDF；可能性是无穷的。在这个例子中，我们将假装是朋友，要求目标打开一张汽车的图片，告诉他们我们在考虑购买那辆车。我们将使用在*更改扩展名*部分创建的后门，并使用一张汽车的图像，然后联系目标，询问他们对这辆车的看法。
- en: 'Let''s go back to the graph that we created with Maltego and look at the screenshot
    from the *SE summary* section where the information is displayed. By browsing
    his Twitter, we managed to see that our target has a friend called Mohammed, and
    when we went on his email, we saw that the same person has an email address of
    `m.askar@isecur1ty.org`. So, this person came up twice, on the email address and
    on Twitter, so our target probably has a good relationship with this person and
    there''s a high chance that Zaid will open something from them. So we can contact
    our target on Twitter pretending to be someone who knows Mohammed, or we can contact
    them by email. Contacting them by email has a huge advantage because we can pretend
    to be `m.askar@isecur1ty.org`, and we can send an email that would look exactly
    as if it came from Mohammed Askar:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们使用Maltego创建的图表，查看*SE总结*部分的截图，信息就显示在那里。通过浏览他的Twitter，我们发现目标有一个叫Mohammed的朋友，当我们查看他的电子邮件时，我们看到这个人有一个电子邮件地址`m.askar@isecur1ty.org`。因此，这个人在电子邮件地址和Twitter上都出现过两次，这意味着目标和这个人可能关系很好，Zaid打开他们发送的邮件的可能性很高。所以我们可以通过Twitter联系目标，假装是认识Mohammed的人，或者通过电子邮件联系他们。通过电子邮件联系有一个巨大优势，因为我们可以假装成`m.askar@isecur1ty.org`，并且我们可以发送一封看起来完全像是Mohammed
    Askar发来的邮件：
- en: '![](assets/32fdb89d-3325-4ba5-a877-9174dc1e67b2.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/32fdb89d-3325-4ba5-a877-9174dc1e67b2.png)'
- en: Image that is downloaded from the attachment sent through the mail.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 从邮件附件下载的图像。
- en: 'So, that''s what we''re doing. Let''s go to Google and search for a mailer.
    We can host our own mailers on our own web service or we can use Google to look
    for mailers. I''ve tried a few of them and could send anonymous emails with the
    most secure mailer. So we are going to use [https://anonymousemail.me/](https://anonymousemail.me/);
    it asks us to put in our name, since we are pretending to be Mohammed, so we are
    going to put it as `mohammed`, and then it will ask us for the email, that is,
    where the email will be coming from, and we''re going to set it as `m.askar@isecur1ty.org`, so
    the message we''re going to send will look as if it''s coming from this email.
    We are just going to use a test email that we set up. We can also set an option
    for where the message will go if the person replies to that message. We are going
    to leave that empty, set the subject to `Check out this car`, and then set an
    informal message, because we think that this person is a friend. The following
    screenshot shows the preceding steps:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这就是我们要做的。我们去Google搜索一个邮件发送器。我们可以在自己的网络服务上托管邮件发送器，也可以使用Google查找邮件发送器。我试过几个，并且能够通过最安全的邮件发送器发送匿名邮件。所以我们将使用[https://anonymousemail.me/](https://anonymousemail.me/)，它要求我们输入名字，因为我们假装是Mohammed，所以我们输入`mohammed`，然后它会要求我们输入邮箱，也就是邮件的发送地址，我们将其设置为`m.askar@isecur1ty.org`，这样我们发送的消息看起来就像是来自这个邮箱。我们将使用我们自己设置的测试邮箱。我们还可以设置回复地址，如果有人回复这封邮件，邮件将被发送到哪个地址。我们将此项留空，主题设置为`Check
    out this car`，然后写一个非正式的消息，因为我们认为这个人是朋友。以下截图展示了之前的步骤：
- en: '![](assets/f6447adb-1b68-495a-b017-c0b9eb981132.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f6447adb-1b68-495a-b017-c0b9eb981132.png)'
- en: 'Now we can send an attachment with the email, but, most of the time, attachments
    don''t always get sent successfully, so it''s recommend to upload the backdoor
    on Dropbox or Google Drive and then send a link to the target. Always shorten
    the shared URL to make it look shorter and more acceptable. We can do that by
    Googling a link-shortener, so we''re going to use bitly.com, a very famous service.
    All we are doing now is social engineering, just making the message look more
    acceptable. Copy the shortened link and send it in the message. And that''s it,
    we are done, so send the message:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以随邮件发送附件，但大多数情况下，附件并不总是能成功发送，所以建议将后门上传到Dropbox或Google Drive，然后将链接发送给目标。始终缩短共享链接，使其看起来更简短、更容易接受。我们可以通过Google查找链接缩短工具，我们将使用bitly.com，这是一个非常著名的服务。现在我们做的只是社会工程学，目的是让消息看起来更具接受性。复制缩短的链接并将其发送到消息中。就这样，完成了，发送邮件：
- en: '![](assets/f6be2d38-f08b-41a2-9dc0-c0717175fee7.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f6be2d38-f08b-41a2-9dc0-c0717175fee7.png)'
- en: 'We have already logged into our test account and we will see that we got an
    email from a person called Mohammed. If we hover over it, we will see that it''s
    coming from Mohammad Askar from `m.askar@isecur1ty.org`, and can even see the
    picture of the guy, even though we didn''t send the email from his email and we
    don''t know his password. We actually just sent it from an anonymous mailer, but
    it looks exactly as if it came from him, and he''s our friend, so it''s highly
    likely that we will open his message:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经登录了测试账户，并且会看到我们收到了来自一个名为Mohammed的人的邮件。如果我们将鼠标悬停在上面，我们会看到邮件是来自`m.askar@isecur1ty.org`的Mohammad
    Askar，并且甚至能看到这个人的照片，尽管我们并没有从他的邮箱发送邮件，也不知道他的密码。实际上，我们是通过一个匿名邮件服务发送的，但看起来就像是来自他的邮件，因为他是我们的朋友，所以我们很可能会打开他的邮件：
- en: '![](assets/04058657-47de-444c-bb87-e8691cc06704.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/04058657-47de-444c-bb87-e8691cc06704.png)'
- en: Spoofed email received
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 欺骗邮件已收到
- en: 'The message is just telling us that he is going buy a car, and is asking us
    to have a look at it and what we think of it. So we will probably click on the
    link. And now the picture has been downloaded, so if we just open the picture,
    called `gtrexe.jpg`, it actually has the icon for the car, hence the extension
    is still an extension for an image:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这条消息只是在告诉我们他打算买一辆车，并请求我们看看它，并告诉我们对此的看法。所以我们可能会点击这个链接。现在图片已经被下载，如果我们打开名为`gtrexe.jpg`的图片，它实际上显示的是那辆车的图标，因此扩展名仍然是图片的扩展名：
- en: '![](assets/480604f7-83f8-4bad-a055-fb01ddb0656c.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/480604f7-83f8-4bad-a055-fb01ddb0656c.png)'
- en: Backdoor with a .jpg extension
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 带有.jpg扩展名的后门
- en: If the target runs the file, we will have a Windows command shell where we can
    do anything we want on the target's system.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目标运行这个文件，我们将获得一个Windows命令行窗口，可以在目标系统上做任何我们想做的事情。
- en: Summary
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we studied how we can perform client-side attacks using social
    engineering. We used social engineering techniques to again access to the victim's
    machine by making him actively participate in actions that help us to gain control
    over his system. We studied an important tool, Maltego, which is very powerful
    and helped us to collect important information about the target's social life;
    we could stalk his all social media accounts. Using this information, we planned
    ways whereby we could attack the target. We even learned how to create customized
    icons for files to act as backdoors for us to attack his system.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学习了如何使用社交工程进行客户端攻击。我们运用社交工程技巧，通过让受害者主动参与一些有助于我们控制其系统的行为，重新获取对受害者机器的访问权限。我们学习了一种重要的工具——Maltego，它非常强大，帮助我们收集了目标的社交生活中的重要信息；我们能够监视他的所有社交媒体账户。利用这些信息，我们规划了可以攻击目标的方法。我们甚至学会了如何为文件创建定制图标，作为我们攻击其系统的后门。
- en: Employing information from Maltego, we used the email ID of a friend of the
    target to send a message that contained a backdoor that would activate once the
    victim opened the file.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Maltego提供的信息，我们通过目标朋友的电子邮件ID发送了一封包含后门的消息，一旦受害者打开文件，后门就会激活。
- en: In the next chapter, we will be studying the BeEF browser tool to attack the
    target system and detect Trojans.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将学习BeEF浏览器工具，攻击目标系统并检测木马。
