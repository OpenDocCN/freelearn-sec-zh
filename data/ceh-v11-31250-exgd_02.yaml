- en: '*Chapter 5*: Enumeration'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第五章*：枚举'
- en: Enumeration is interesting. It does something that we typically don't want to
    happen. It makes systems behave abnormally or in a way that we wouldn't expect
    them to. *Steve Wozniak*, one of Apple's founders, said that *a lot of hacking
    is playing with other people, you know, getting them to do strange things*, and
    that's exactly what enumeration does for us. Enumerating is a core part of evaluating
    any target. An enumeration can be as simple as running a reverse DNS lookup on
    an IP address, or as complex as the entire OSINT process being run on a target.
    Enumerating a target is one of the most important steps in penetration testing.
    The goal of performing enumeration on a network is to gather as much information
    about the network as possible. This process typically looks at hosts and the services
    that they provide. With this information, an ethical hacker can identify and exploit
    vulnerabilities in the network.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举非常有趣。它会导致一些我们通常不希望发生的事情。它让系统表现得异常，或者以我们无法预料的方式行为。*史蒂夫·沃兹尼亚克*，苹果的创始人之一，说过：“*很多黑客行为其实是和别人玩，你知道，让他们做一些奇怪的事情*”，这正是枚举为我们做的事情。枚举是评估任何目标的核心部分。枚举可以像对一个
    IP 地址进行反向 DNS 查找那样简单，或者像对目标进行整个 OSINT 过程那样复杂。枚举目标是渗透测试中最重要的步骤之一。对网络进行枚举的目标是尽可能多地收集关于该网络的信息。这个过程通常会查看主机及其提供的服务。有了这些信息，道德黑客可以识别并利用网络中的漏洞。
- en: Before enumerating a network, it is important to understand exactly what an
    *enumeration* is and why it's useful.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在枚举网络之前，了解*枚举*到底是什么以及为什么它有用是非常重要的。
- en: 'In this chapter, we''ll cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将涵盖以下主要内容：
- en: What is enumeration?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是枚举？
- en: Ports and services to know about
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要了解的端口和服务
- en: Enumerating via defaults
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过默认值进行枚举
- en: NetBIOS enumeration
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NetBIOS 枚举
- en: Enumerating using SNMP
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 SNMP 进行枚举
- en: Enumerating via LDAP
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 LDAP 进行枚举
- en: Network time protocol
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络时间协议
- en: Enumerating using SMTP
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 SMTP 进行枚举
- en: The golden ticket – DNS
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 黄金票证 – DNS
- en: Oh wait, there's more!
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哦，等等，还有更多！
- en: The countermeasures
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对策
- en: Let's get started!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 开始吧！
- en: What is enumeration?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是枚举？
- en: This technique is usually conducted internally. While it can be done through
    reconnaissance, it is a slightly higher risk because we need an active connection
    to the target machine, which means what we're doing could be detected by a security
    team. When a user makes a connection to a network share, they must provide credentials.
    Those credentials are associated with what we refer to as an **access control
    list** (**ACL**). This ACL contains usernames and groups that have access and
    the permissions for those who access them. So, maybe we can trick the target machine
    into giving us that information without presenting our credentials.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术通常在内部进行。虽然也可以通过侦察来完成，但风险略高，因为我们需要与目标机器建立主动连接，这意味着我们做的事情可能会被安全团队检测到。当用户连接到网络共享时，他们必须提供凭据。这些凭据与我们称之为**访问控制列表**（**ACL**）相关联。该
    ACL 包含有访问权限的用户名和组以及访问者的权限。所以，也许我们可以欺骗目标机器，获取这些信息，而无需提供我们的凭据。
- en: We'll also look at some services. If we know of a specific service from looking
    at our reconnaissance and scanning techniques, we can enumerate those services
    to give us information that is about more than just the operating system. It's
    called a **null session**. A lot of the newer operating systems have blocked this
    capability. The issue is not everybody is up to date, and there's always one little
    machine out there nobody is tracking. Also, maybe you can't afford the latest
    and greatest, so creating these null sessions is a way to make an active connection
    and then query the services and/or shares.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还会查看一些服务。如果我们通过侦察和扫描技术了解某个特定服务，我们可以枚举这些服务，以获取关于操作系统之外的更多信息。这被称为**空会话**。许多较新的操作系统已经屏蔽了这种功能。问题是并不是每个人的系统都更新到最新版本，总有一台小机器没人监控。而且，也许你无法负担最新最强的设备，因此创建这些空会话是建立主动连接的一种方式，之后可以查询服务和/或共享资源。
- en: When we hit a target, we extract information such as usernames and possible
    groups. In some cases, we also pull the groups and the users who are members of
    that group. If we can't do this yet, we should be able to pull the machine's name
    and network resources and services that may be running on that system.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们接触一个目标时，我们会提取诸如用户名和可能的用户组等信息。在某些情况下，我们还会获取属于该组的用户。如果我们现在还不能做到这一点，我们应该能够获取机器的名称，以及该系统可能正在运行的网络资源和服务。
- en: Again, some of the information we might be able to pull could also include routing
    tables – especially if it's like a switch or a router of some sort, along with
    auditing services. We will also try to expose some applications. Again, we should
    have been able to discover applications via our scanning and reconnaissance phases,
    but often, the application itself can give up a lot of data. Additionally, if
    I can get ahold of some DNS and **Simple Network Management Protocol** (**SNMP**)
    information, it can make your life a living nightmare.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 再说一遍，我们可能能够提取的一些信息还包括路由表——特别是如果是像交换机或路由器之类的设备，并且还涉及审计服务。我们还会尝试暴露一些应用程序。再一次，我们应该通过扫描和侦察阶段发现这些应用程序，但通常，应用程序本身可能会暴露大量数据。此外，如果我能获取一些DNS和**简单网络管理协议**（**SNMP**）信息，这可能会让你的生活变成一场噩梦。
- en: Now, let's discuss enumeration weak points.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们讨论一下枚举的弱点。
- en: Some of my favorite enumeration weak points
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我最喜欢的一些枚举弱点
- en: When it comes to enumeration, an attacker will typically look for what we call
    *the low-hanging fruit*. This means we'll look for the easiest weak points first.
    Here are some of the lowest fruits that attackers will target initially.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到枚举时，攻击者通常会寻找我们所说的*低悬果实*。这意味着我们会首先寻找最容易的弱点。以下是攻击者最初会瞄准的一些低悬果实。
- en: Business card
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 名片
- en: How can a business card provide a weakness? Well, think about it. What's on
    your business card? Your name, address, and company name. That doesn't seem to
    give up too much information, right? How about your email address? They might
    not spam you, but guess what? Most companies – because of the way Active Directory
    works, or any directory services – go through and create usernames (what's referred
    to as distinguished names), which would be a way of logging into the network.
    We typically think of logging in as being **domain**\**username** (**gotham**\**bwayne**).
    Most directory services technologies will also accept **bwayne@gotham.com**. It
    uses the same naming syntax that is associated with email.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 商务名片如何暴露弱点？想一想，商务名片上写的是什么？你的名字、地址和公司名称。这似乎没有透露太多信息，对吧？那么你的电子邮件地址呢？他们可能不会给你发垃圾邮件，但猜猜看？大多数公司——由于活动目录的工作方式，或者任何目录服务——会通过并创建用户名（也就是所谓的区分名），这些用户名可以用来登录到网络。我们通常认为登录就是**域名**\**用户名**（**gotham**\**bwayne**）。大多数目录服务技术也会接受**bwayne@gotham.com**。它使用的命名语法与电子邮件相关联。
- en: 'As an attacker or hacker, I need at least two pieces of information to come
    for you: a login name and a password. If you hand me a business card and you were
    able to log into your system using that same email address, I just got 50% of
    your information. I probably don''t need a business card, because I can get your
    email address off your company''s website. Scared yet?'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作为攻击者或黑客，我至少需要两条信息来针对你：一个登录名和一个密码。如果你把名片给我，而且你能使用相同的电子邮件地址登录到你的系统，那么我就得到了你50%的信息。我可能不需要名片，因为我可以从你公司的官网上获取你的电子邮件地址。现在害怕了吗？
- en: Windows groups
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows组
- en: As we mentioned previously, these groups are created and maintained by your
    IT department and have been given **security identifiers** (**SIDS**). They contain
    other objects such as the user accounts themselves, or SIDS.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，这些组是由你的IT部门创建并维护的，并且已经分配了**安全标识符**（**SIDs**）。它们包含其他对象，如用户帐户本身或SIDs。
- en: When a user tries to gain access to a resource, they present their credential.
    This credential is then looked at by the file server, which says, *Let me check
    if you're a member of a group that has access or have been given explicit access.
    In this case, let me look and see if the group "marketing folks" have access to
    this file or resource.* I can, therefore, enumerate a Windows group and say, *Okay,
    which user accounts are a member of this "marketing folks" group?* Again, I can
    end up enumerating everybody in every department at your organization.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户尝试访问某个资源时，他们会提供凭证。然后，文件服务器会检查这些凭证，询问：*让我看看你是否是有权限访问该文件或资源的组成员，或者是否已经明确授予访问权限。在这种情况下，我来看看"市场营销人员"组是否有权限访问这个文件或资源。*
    因此，我可以枚举一个Windows组，并说：*好吧，哪些用户帐户是"市场营销人员"组的成员？* 再次，我最终可以枚举你组织中每个部门的所有人。
- en: Default passwords
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 默认密码
- en: Default passwords are one of my biggest pet peeves. I get it – technology is
    moving extremely fast, and a lot of times, we just don't think things through.
    This is one of those things I wish I could get across to everyone, including home
    users. We go and purchase the latest and greatest router and, according to their
    instructions, we hit one button and it auto-configures. With one click, we're
    on the internet, and we're *safe*. Well, probably not. So many devices today come
    with default passwords. It's very easy to log into the system to enumerate it
    just by using those passwords if no one's changed them.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 默认密码是我最头痛的问题之一。我明白——技术发展非常迅速，而且很多时候我们并没有深入考虑。希望能把这一点传达给每个人，包括家庭用户。我们购买了最新最好的路由器，根据说明书，按下一个按钮就能自动配置。只需点击一下，我们就能上网，而且我们*很安全*。嗯，可能并不完全安全。如今很多设备都带有默认密码。如果没有人更改它们，那么仅凭这些密码就很容易登录系统并进行枚举。
- en: There are websites dedicated to storing default passwords. It's nothing nefarious,
    it's just very convenient, especially for an IT guy who walks in and goes, *Well,
    SMC switch, I wonder what the default admin password is on this one because I
    need to log in.*
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些网站专门存储默认密码。它们并没有什么恶意，只是非常方便，尤其是对于那些走进办公室的IT人员来说，*嗯，这个SMC交换机的默认管理员密码是什么呢？我需要登录。*
- en: Next, let's discuss the ports and services you'll need to know about.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们讨论一下你需要了解的端口和服务。
- en: Ports and services to know about
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需要了解的端口和服务
- en: 'Let''s consider the ports and services you will want to be familiar with:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下你应该熟悉的端口和服务：
- en: Most of the DNS information that goes across the network is going to be using
    port **53**.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数跨网络传输的DNS信息将使用端口**53**。
- en: '**Simple Mail Transfer Protocol** (**SMTP**) typically uses port **25**.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单邮件传输协议**（**SMTP**）通常使用端口**25**。'
- en: Microsoft RPC endpoints use TCP **135**.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软RPC端点使用TCP **135**。
- en: The global catalog service, which is a stripped-down version of Active Directory
    that users and applications take advantage of all the time, queries port **3286**.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全局目录服务，这是一个简化版的Active Directory，用户和应用程序经常利用它，它查询端口**3286**。
- en: The NetBIOS naming service, which is typically the computer name to an IP address,
    uses port **137**, both TCP and UDP.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NetBIOS命名服务，通常是将计算机名称映射到IP地址，使用端口**137**，既支持TCP也支持UDP。
- en: LDAP or LDP is the protocol used by Active Directory, Open Directory, and all
    the different directory services out there. It uses TCP and UDP port **389**.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LDAP或LDP是Active Directory、Open Directory和其他各种目录服务所使用的协议。它使用TCP和UDP端口**389**。
- en: SMB, which is our server message block over NetBIOS, is what creates shared
    resources or shared folders, and it uses TCP **139** to make connections.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SMB，即通过NetBIOS的服务器消息块，是创建共享资源或共享文件夹的协议，它使用TCP **139**进行连接。
- en: We also have SNMP, which uses UDP **161**. The other SMB technology that it
    can use is TCP, which is going to be associated with port **445** on TCP.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还有SNMP，它使用UDP **161**。另外，SMB技术也可以使用TCP，它将与TCP端口**445**相关联。
- en: Note
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: It's important to know about these services and the ports they operate on. You
    need to understand or memorize some of the ports and services that different technologies
    utilize for your exam.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 了解这些服务及其运行的端口非常重要。你需要理解或记住一些不同技术所使用的端口和服务，这对你的考试非常有帮助。
- en: All these services are utilized in day-to-day operations on the network. You
    could go through and block all these ports if you'd like, but that system isn't
    doing much online. A good analogy for this is saying, *I understand the risks
    of driving on the freeway; I have a higher chance of getting in a car accident.
    However, I accept those risks, knowing the flaws and possible situations that
    can take place. I'm going to prepare myself for that – I'm going to be more aware
    of the road around me, how fast I'm going, how far ahead the car is in front of
    me, which exits are coming up, and avoid distractions*. If you think in terms
    of normal network traffic, the issue with these ports is that you need to be monitoring
    the traffic on them. This is because anything you're not expecting is going to
    throw a flag in the air, stating that something may be going on in your network.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些服务都在日常的网络操作中被使用。如果你愿意，可以通过封锁所有这些端口，但那样的系统在线上并不会做太多事情。一个好的类比是这样说的：*我理解在高速公路上驾驶的风险；我有更高的几率发生车祸。然而，我接受这些风险，知道可能发生的缺陷和情境。我会为此做准备——我会更加注意我周围的路况、我的车速、前方车距、即将到来的出口，并避免分心*。如果你把它理解为正常的网络流量，关于这些端口的问题是，你需要监控这些端口上的流量。这是因为任何你未预料到的事情，都会引起警觉，表示可能有些事情正在发生在你的网络中。
- en: Enumerating via defaults
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过默认设置进行枚举
- en: This subject drives me bonkers; it makes me want to pull out my hair, thinking
    about how naive people are out there. In 2015, CNN released a study showing 90%
    of the credit card readers out there use the same password. It's the default one
    – it's either **166816** or **z 66816**. Now… don't rush to your bank or ATM to
    see if that password works. That's not our purpose. The point is, there are these
    types of vulnerabilities.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这个话题让我抓狂；让我想拔掉自己的头发，想到外面有那么多人是多么天真。在2015年，CNN发布了一项研究显示，90%的信用卡读卡器使用相同的密码。它是默认的密码——要么是**166816**，要么是**z
    66816**。现在…不要急着跑到银行或者ATM机前，看看这个密码是否有效。我们并不是这个目的。关键是，存在这些类型的漏洞。
- en: This is our biggest security issue because defaults exist everywhere. I love
    the phrase *complacency will be your downfall*. I know we have tons of devices
    and technology out there being thrown at us – servers, desktops, routers, tablets,
    phones, switches, Wi-Fi, and so on. The demand is always there in getting it set
    up and getting it done fast. Sometimes, we have the issue where devices get deployed
    with our default passwords or default user accounts. Every device out there has
    them because you must go through and set it up.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们最大的安全问题，因为默认设置无处不在。我喜欢这句话：*自满将是你的 downfall*。我知道我们现在有大量的设备和技术在不断涌向我们——服务器、台式机、路由器、平板电脑、手机、交换机、Wi-Fi
    等等。需求总是在，要求快速设置并完成。有时，我们会遇到设备以默认密码或默认用户账户被部署的问题。每个设备都有这些默认设置，因为你必须设置它们。
- en: Never leave the default user accounts or passwords in place! *Never!* Don't
    assume or say it's just a small device, it's just my cell phone, it's just a tablet
    my kid plays on, or it's just my home router.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 永远不要保留默认的用户账户或密码！*绝对不要！* 不要假设或说它只是一个小设备，它只是我的手机，它只是我孩子用的平板，或者只是我家的路由器。
- en: A *friend* of mine (ok, maybe it was me or maybe it wasn't) was doing a lot
    of traveling and while visiting a small town where some family lived, they went
    to the local convenience store to withdraw some cash. Once they were in front
    of the ATM, they noticed that instead of a normal ATM screen, it was asking for
    a password, and they hadn't put their debit card in yet.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*朋友*（好吧，也许是我，或者可能不是）在做很多旅行，并且在访问一个有亲戚的小镇时，他们去了当地的便利店取款。当他们站在ATM机前时，发现屏幕不是正常的ATM界面，而是要求输入密码，而他们还没有插入借记卡。
- en: They tried some known default codes, first typing in **1234**. They got an error
    and then typed in **0000** and got another error. They tried **1212** and to their
    surprise, they were presented with the administrative screen of the ATM. They
    could get into the setup and do config testing. Out of curiosity, they selected
    tests. They were presented with another menu that invited them to test a receipt,
    meaning print a receipt. They could also test a cash distribution. Yeah, that
    would have issued cash to my *friend*. Being an ethical hacker who just likes
    to see how things work, they went over to the front counter person and told them
    about it. They disconnected the plug and powered it back up, and the ATM started
    running correctly.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 他们尝试了一些已知的默认代码，首先输入了**1234**。结果出现了错误，然后他们输入了**0000**，又出现了另一个错误。他们接着尝试了**1212**，令他们吃惊的是，屏幕上显示了
    ATM 的管理界面。他们可以进入设置并进行配置测试。出于好奇，他们选择了测试。接着，他们看到另一个菜单，邀请他们测试收据，即打印收据。他们也可以测试现金分发。是的，那可能会发放现金给我的*朋友*。作为一名喜欢了解事物如何运作的道德黑客，他们走到前台告诉了工作人员这个情况。工作人员拔掉了插头并重新启动了
    ATM，ATM 开始正常运行。
- en: So, either somebody had just serviced the ATM and didn't completely exit out
    or there was a glitch. But again, think about the defaults being used here and
    the vulnerabilities that can be presented.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，要么是有人刚刚维修了 ATM 没有完全退出，要么是出现了故障。但再想想看，这里使用的默认设置以及可能带来的安全漏洞。
- en: NetBIOS enumeration
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NetBIOS 枚举
- en: What is NetBIOS? Well, let's put our memory caps on and take a trip down memory
    lane. NetBIOS has been around for some time and is often mistaken as a protocol.
    It stands for **Network Basic Input Output System**, and it's technically a program
    that allows applications on different systems to talk to each other over LAN.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是 NetBIOS？好吧，让我们带上记忆帽子，回忆一下过去的事情。NetBIOS 已经存在一段时间了，常常被误认为是一种协议。它代表的是**网络基本输入输出系统**，从技术上讲，它是一个程序，允许不同系统上的应用程序通过局域网相互通信。
- en: Warning
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Some of the things you see, especially when it comes to NetBIOS, might be a
    little outdated. We'll talk about why we still cover it, why we still talk about
    it, and why it's relevant today.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 有些你看到的内容，尤其是关于 NetBIOS 的部分，可能稍微有些过时。我们会讨论为什么我们仍然要讲解它，为什么它今天仍然有意义。
- en: It was created by IBM back in the old days. IBM kind of left it behind and Microsoft
    adopted it. Since then, NetBIOS has become an industry standard. It's used on
    Ethernet, and if you're old school, it's also used in Token Ring. If you are familiar
    with Token Ring, I'm not referencing anything about hobbits… NetBIOS is used inside
    of the options when we are inside Windows. If we go into the network settings
    for a network interface, it's under the clients for Microsoft networks. In there,
    you'll see an option that says *file and print services*, which is where we can
    turn things off and on.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 它是 IBM 在早期创建的。IBM 后来将其放弃，微软则采用了它。从那时起，NetBIOS 就成为了行业标准。它在以太网中使用，如果你是老派用户，它也在令牌环中使用。如果你熟悉令牌环，我并不是在说关于霍比特人的事……NetBIOS
    在我们使用 Windows 时会出现在选项中。如果我们进入网络接口的网络设置，它在“微软网络的客户端”下。在那里，你会看到一个选项，显示为*文件和打印服务*，我们可以在这里开启或关闭服务。
- en: Note
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Remember, not only is it important to know what applications are on your machines,
    but also what users can run from even a thumb drive.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，了解机器上有哪些应用程序以及用户能够从 U 盘上运行什么程序同样重要。
- en: Some of these things won't work on newer operating systems, such as Windows
    7 and higher. However, from my experience, there's always a system on the network
    that's not up to date, or one they had no reason to update.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 有些操作可能在较新的操作系统上无法运行，例如 Windows 7 及更高版本。然而，根据我的经验，网络上总有某个系统没有及时更新，或者是某个他们没有理由更新的系统。
- en: Some of the commands you can use to enumerate NetBIOS include using the built-in
    utility in every single Windows system, called **nbtstat.exe**, using the **nbtstat
    -A <target-ip-address>** command. This will display the services running on the
    target, as well as group memberships and domain information.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用来枚举 NetBIOS 的一些命令包括使用每个 Windows 系统中内置的实用程序，称为**nbtstat.exe**，使用**nbtstat
    -A <目标 IP 地址>** 命令。这将显示目标上运行的服务，以及组成员信息和域信息。
- en: Note
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'For the detailed functions of nbtstat, simply type **nbtstat** into Command
    Prompt:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看 nbtstat 的详细功能，只需在命令提示符中输入**nbtstat**：
- en: '![Figure 5.1 – Results of the nbtstat command'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.1 – nbtstat 命令的结果'
- en: '](Images/B17486_05_001.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17486_05_001.jpg)'
- en: Figure 5.1 – Results of the nbtstat command
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1 – nbtstat 命令的结果
- en: Next, we'll learn how to enumerate with SNMP.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何使用 SNMP 进行枚举。
- en: Enumerating using SNMP
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SNMP进行枚举
- en: What could go wrong? Well, quite a bit. Little things make big things happen.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 会出什么问题呢？嗯，很多事情。小事情会导致重大事件发生。
- en: SNMP has been around for a long time and has gone through several version changes.
    We'll go through and look at what SNMP is and why administrators enable it. While
    it makes our lives easier, any time we talk about ease of use, remember the technology
    triangle. Once we implement heavier in terms of ease of use, or from the GUI perspective,
    we lose security.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: SNMP已存在很长一段时间，并经历了几个版本的更改。我们将深入探讨SNMP是什么以及为什么管理员要启用它。虽然它让我们的生活变得更轻松，但任何时候谈到易用性时，要记住技术三角。一旦我们在易用性方面实现了更大的优势，或者说从图形用户界面的角度来看，我们就会失去安全性。
- en: 'What is **SNMP**? It stands for **Simple Network Management Protocol**. It''s
    exactly what it sounds like – a protocol that runs the application layer and allows
    us to manage different devices. Now, whether they''re routers, switches, firewalls,
    wireless access points, or even servers, they report back to a centralized location
    so that we can, as its name implies, manage devices:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是**SNMP**？它代表**Simple Network Management Protocol**。它的名字就是它的含义 – 一个在应用层运行的协议，允许我们管理不同的设备。无论是路由器、交换机、防火墙、无线接入点还是服务器，它们都向集中位置报告，以便我们可以管理设备，正如其名称所暗示的那样：
- en: '![Figure 5.2 – SNMP clients gather performance intel and report back to a centralized
    reporting point'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.2 – SNMP客户端收集性能情报并向集中报告点报告'
- en: '](Images/B17486_05_002.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17486_05_002.jpg)'
- en: Figure 5.2 – SNMP clients gather performance intel and report back to a centralized
    reporting point
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2 – SNMP客户端收集性能情报并向集中报告点报告
- en: So, again, an administrator can see what's going on. If a CPU is overloaded
    on a particular router, if server memory is being over-utilized, and so on, the
    administrator needs to be warned about these things. Besides devices, a lot of
    operating systems, including both Windows and Linux, support the SNMP protocol.
    Typically, we install an agent on these devices, and they report back to a management
    console. The Management Console, or management station, will then send out requests
    to the agents to retrieve certain information you've plugged in and are trying
    to monitor.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，管理员可以了解发生了什么。如果某个特定路由器的CPU负载过载，如果服务器内存被过度利用等等，管理员需要收到这些警告。除了设备外，许多操作系统，包括Windows和Linux，都支持SNMP协议。通常，我们在这些设备上安装了代理，并且它们向管理控制台报告。管理控制台或管理站点将向代理发送请求，检索您输入并尝试监控的某些信息。
- en: The agents we install on our components and the management software program
    are going to talk to each other, but we don't want them to just talk arbitrarily.
    There's a little bit of security that's implemented with SNMP, but not enough
    as far as the security is concerned, or the lack thereof. It all depends on the
    version of SNMP you're running. Version one is very simple, basic, and extremely
    vulnerable to SNMP enumeration. They then released version two, which was the
    same as version one, except they added some additional components and enhancements
    to it. Still, it is not very secure.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们安装在组件上的代理和管理软件程序将进行通信，但我们不希望它们随意交谈。SNMP实现了一点安全性，但对于安全性或缺乏安全性因素而言，这远远不够。这完全取决于您正在运行的SNMP版本。第一个版本非常简单，基础且极易受到SNMP枚举的攻击。然后他们发布了第二个版本，与第一个版本相同，只是添加了一些附加组件和增强。然而，它并不是非常安全的。
- en: The reason SNMP has a bad rap about not being secure is because the two communication
    channels that are used between the agent and the management software use two different
    types of passwords. One of them has read access, while the other one has read
    and write access. Now, here's where the issue comes into play. For the public,
    which has read access, meaning my software can go out and read information and
    pull CPU information and whole memory information, the default password is public.
    Now, that was slick, wasn't it? And you'll never guess what the private password
    is. Sometimes, we refer to these passwords as just community strings.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: SNMP之所以被认为不安全，是因为代理和管理软件之间使用了两种不同类型的密码进行通信。其中一种具有读取权限，而另一种具有读取和写入权限。现在，问题就出在这里。对于公共密码，即具有读取权限，意味着我的软件可以读取信息并提取CPU信息和整个内存信息，默认密码是public。现在，这很巧妙，不是吗？那你永远也猜不到私有密码是什么。有时，我们将这些密码简称为社区字符串。
- en: For most of the devices we're monitoring, IT guys have come up with an administrative
    username and password or possibly even, say, a switch, a router, or a wireless
    access point. They must link it up and say, *Only these users are allowed through,
    or these computers are allowed through,* which means information is being stored
    somewhere on that box and SNMP is designed to extrapolate that.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们正在监控的大多数设备，IT人员已经想出了一个管理用户名和密码，或者可能甚至是一个交换机、路由器或无线接入点。他们必须将其链接起来，并说，“只有这些用户允许通过，或者这些计算机允许通过”，这意味着信息被存储在那个盒子的某个地方，并且SNMP被设计来推断出那些信息。
- en: They then came out with version three, which is the latest version of the protocol.
    There's a lot of emphasis being placed on the area of authentication and privacy.
    So, we can select or specify restricted user access. We can also encrypt data
    on the fly. This does require more complexity because we must configure it to
    do these things, which is the other issue we have to kind of fight here. After
    all, some security holes can be created.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 然后他们推出了第三版，这是协议的最新版本。在认证和隐私领域，有很多强调。因此，我们可以选择或指定受限用户访问。我们还可以在传输数据时加密数据。这确实需要更复杂的配置，因为我们必须配置它来执行这些操作，这也是我们在这里必须有所抵抗的另一个问题。毕竟，这可能会产生一些安全漏洞。
- en: A very common issue I see out there is many IT guys going off and purchasing
    the device that supports SNMP. What they don't realize is that, by default, versions
    one and two have backward compatibility enabled. If you must do this, disable
    versions one and two unless you don't mind somebody pulling off information. Now,
    you may be thinking, what type of information could they pull off a device like
    this? Well, they can pull off quite a bit. They can look at enough information
    that puts your network at risk. They could very easily use it to grab the routing
    tables of routers; they can change your configurations if the defaults are in
    place because the private community string gives it the right permissions. If
    it's a host machine, they could also look at file shares, ARP tables, and traffic
    statistics.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里经常看到的一个非常常见的问题是，许多IT人员去购买支持SNMP的设备。他们没有意识到，默认情况下，版本一和版本二都启用了向后兼容性。如果你一定要这样做，除非你不介意有人获取信息，否则请禁用版本一和版本二。现在，你可能会想，这样的设备可以获取什么类型的信息呢？嗯，他们可以获取相当多的信息。他们可以查看足够的信息，这会使你的网络面临风险。如果默认情况下启用了私有社区字符串，他们很容易就能够查看路由器的路由表；他们还可以更改你的配置。如果它是一个主机机器，他们也可以查看文件共享、ARP表和流量统计信息。
- en: We can use **Management Information Base** (**MIB**) here, a virtualized database
    that provides descriptions of the network objects that can be managed through
    SNMP. It's done hierarchically and each of the objects in the MIBs is dressed
    in what they refer to as OIDs. **OID** is short for **object identifier**. It
    is a numeric name that's given to objects inside of the MIB so that it can uniquely
    identify the objects that are present within the hierarchy. It's used by SNMP
    to convert the OIDs into plain human language.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在这里使用**管理信息库**（**MIB**），这是一个虚拟化的数据库，提供了可以通过SNMP管理的网络对象的描述。它是按层次结构进行管理的，MIB中的每个对象都用OID（对象标识符）来描述。OID是指对象标识符，它是一个数值名称，用于唯一标识层次结构中存在的对象。SNMP使用它将OID转换为普通人类语言。
- en: Microsoft has a list of MIBs they include on the server platform. The most utilized
    is for DHCP. It monitors traffic between a DHCP server and the clients. There's
    one for WINS, which is being deprecated at the time of writing. There's one for
    hosts, which helps you monitor the resources, CPU, network cards, memory, and
    hard drives on host resources. We also have the LNMIB, which contains the different
    types of objects for workstation and server services.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 微软在服务器平台上包含了一个MIB列表。其中最常用的是用于DHCP的MIB。它监视DHCP服务器和客户端之间的流量。还有一个用于WINS的MIB，在撰写本文时正在被弃用。还有一个用于主机的MIB，它帮助你监视主机资源上的资源，如CPU、网络卡、内存和硬盘。我们还有LNMIB，其中包含了工作站和服务器服务的不同类型的对象。
- en: Enumerating via LDAP
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过LDAP进行枚举
- en: So, what is LDAP? The reason why it sounds familiar to us is because we use
    it as a database to store user account information and object information about
    our network. Microsoft utilizes it in Active Directory. Novell e-directory also
    utilizes it and, of course, Apple uses Open Directory. Now, this is the technology
    that contains or stores our user accounts and our computer accounts. From an Active
    Directory perspective, it contains/stores everything that's involved in our Microsoft
    platform.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，LDAP是什么呢？我们之所以感到它熟悉，是因为我们将它作为数据库来存储用户账户信息和关于网络的对象信息。微软在Active Directory中使用它，Novell的e-directory也使用它，当然，苹果使用Open
    Directory。现在，这项技术包含或存储我们的用户账户和计算机账户。从Active Directory的角度来看，它包含/存储与我们的微软平台相关的所有内容。
- en: Some people think Microsoft stole this technology from Novell, but LDAP is an
    open standard. Novell followed it first with e-directory. Microsoft then followed
    up behind them by using their implementation, called Active Directory. Because
    these are open standards, there's a lot of similarity between the names and the
    syntax being utilized.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人认为微软从Novell那里窃取了这项技术，但LDAP是一个开放标准。Novell首先用e-directory实现了它，微软随后使用他们的实现，称为Active
    Directory。由于这些是开放标准，所以它们的名称和语法有很多相似之处。
- en: Now, full disclosure here... I'm not a big fan of Apple, but Apple's Open Directory
    is also another implementation of LDAP. They're using LDAP there, which includes
    an Apple password server, and they also use Kerberos 5\. Technically, it's a form
    of what we refer to as open LDAP, an open source implementation of LDAP. It's
    platform-independent. Linux, Solaris, Microsoft, HP, HP UX, and Android use LDAP.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，完全披露...我不是很喜欢苹果，但苹果的Open Directory也是LDAP的另一种实现。它们在那里使用LDAP，包括一个苹果密码服务器，还使用Kerberos
    5。技术上来说，它是一种我们称之为开放LDAP的形式，这是LDAP的一个开源实现。它是平台独立的。Linux、Solaris、Microsoft、HP、HP
    UX和Android都使用LDAP。
- en: Understanding LDAP
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解LDAP
- en: Let's look at what's behind LDAP. There are what's referred to as **Directory
    System Attendant** (**DSA**) ports. It's what the client uses to start an LDAP
    session by connecting to an LDAP server. By default, this port is on TCP and UDP
    **389**. If by chance, they're using SSL, they are technically using LDAP, which
    is utilized on port **636**.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下LDAP背后的内容。这里有一些被称为**目录系统代理**（**DSA**）的端口。客户端通过连接到LDAP服务器，使用这些端口启动LDAP会话。默认情况下，这个端口在TCP和UDP
    **389**上。如果它们恰好使用SSL，则实际上是在使用LDAP，它是在端口**636**上运行的。
- en: There's another service called the global catalog, which is simply a smaller
    or a stripped-down version of the full database. When you open an email client
    such as Outlook and hit **I'd like to create a new email** and you hit the **To**
    box, Outlook queries – via exchange – the global catalog server and extrapolates
    some of the basic information, such as the username and email address.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个叫做全局目录的服务，它只是完整数据库的一个精简版本。当你打开电子邮件客户端（如Outlook）并点击**我想创建一封新邮件**，然后点击**收件人**框时，Outlook通过Exchange查询全局目录服务器，并推导出一些基本信息，如用户名和电子邮件地址。
- en: By default, those ports are set to communicate on TCP and UDP **3268**. Again,
    if you're using any type of encryption, it's done on port **3269**.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，这些端口设置为通过TCP和UDP **3268**进行通信。同样，如果你使用任何类型的加密，它是在端口**3269**上完成的。
- en: The structure is technically based on what's referred to as the X 500 model,
    which has been around for ages. What we mean here is that this database, since
    it's based on this model, has what's referred to as classes.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 该结构技术上是基于所谓的X 500模型，这个模型已经存在了很长时间。我们在这里的意思是，由于这个数据库基于这个模型，所以它包含了所谓的类。
- en: Classes
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类
- en: Classes are a way of looking at objects. For example, I can have a class that
    represents users, have another class that represents groups, and another class
    that represents computers. See where I'm going here? Classes represent objects.
    Each of those classes has its own set of attributes. For example, in the **user**
    class, the attributes would include first name, last name, city, state, and ZIP
    code. These classes, attributes, and objects can be found inside of an LDAP environment
    by using what we refer to as a unique identifier or distinguished name.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 类是一种查看对象的方式。例如，我可以有一个表示用户的类，再有一个表示群组的类，还有一个表示计算机的类。你明白我说的意思吗？类代表对象。每个类都有自己的一组属性。例如，在**用户**类中，属性包括名字、姓氏、城市、州和邮政编码。这些类、属性和对象可以通过使用我们称之为唯一标识符或区别名称的方式，在LDAP环境中找到。
- en: A distinguished name is very distinctive; every object must be its own entity;
    you can't have duplicating objects. So, in the case of a user whose name is **Bruce
    Wayne**, who belongs to a **Gotham.com** domain, his distinguished name or unique
    identifier would be listed as **cn=Bruce Wayne,dc=gotham,dc=com**. Within the
    distinguished name, **cn** stands for Common Name, and **dc** stands for Domain
    Component. You'll often see **ou** as well in here, which stands for **Organizational
    Unit**. So, that would be represented as **gotham.com** or Gotham City, if the
    last **dc** was equal to city. You must understand distinguished names, especially
    if you start enumerating to find out where they're located.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一个区分名非常独特；每个对象都必须是它自己的实体；你不能有重复的对象。所以，在一个名为**Bruce Wayne**的用户，属于**Gotham.com**域的情况下，他的区分名或唯一标识符会列出为**cn=Bruce
    Wayne,dc=gotham,dc=com**。在区分名中，**cn**代表常用名称，**dc**代表域组件。你也会经常看到**ou**，它代表**组织单位**。因此，如果最后一个**dc**是城市，那么它将表示为**gotham.com**或哥谭市。你必须理解区分名，尤其是在开始枚举以查找它们的位置时。
- en: What can we learn from LDAP?
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们可以从 LDAP 学到什么？
- en: There's a lot because you can mostly query an LDAP server anonymously.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 很多，因为你大部分时间都可以匿名查询 LDAP 服务器。
- en: Note
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Good IT guys ensure you can't anonymously hit the domain controller, but when
    you think about the domain controllers, they are there to ask for authentication.
    So, typically, anonymity is allowed.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 好的 IT 人员会确保你无法匿名访问域控制器，但当你考虑到域控制器时，它们是用来请求认证的。因此，通常会允许匿名访问。
- en: Some of the things we can find out would include group names. When we see these
    group names, we could extrapolate users that are a member of that group. I can
    even pull up individual users. Now, because I can pull up these names, I should
    also be able to check the account information, such as the other attributes that
    are associated with these objects, the city's state, ZIP code, login hours, and
    password reset thresholds. Again, most attributes can be looked at very easily.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以找到的一些内容包括组名称。当我们看到这些组名称时，可以推测出属于该组的用户。我甚至可以调出个别用户。现在，由于我可以调出这些名称，我还应该能够检查帐户信息，比如与这些对象相关的其他属性、城市的州、邮政编码、登录时间和密码重置阈值。再次强调，大多数属性都可以很容易查看。
- en: We can also look at system names, which is where I come back to naming your
    systems – making sure you don't give away what they are. I know I've shown you
    my environment where I have Batcave DC1; you can tell it's a domain controller.
    However, if mine was an actual production environment for a company, I would never
    do something like that. However, still enumerating through LDAP, I can easily
    determine which box is a domain controller.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以查看系统名称，这就是我回到命名系统的地方——确保你不会泄露它们是什么。我知道我已经展示了我的环境，其中有 Batcave DC1，你可以看出它是一个域控制器。然而，如果这是我公司实际的生产环境，我绝对不会做出这样的命名。然而，仍然通过
    LDAP 枚举，我可以轻松确定哪个机器是域控制器。
- en: 'With tools such as JXplore and Hyena (*Figure 5.3*), I can pull up the Active
    Directory schema (the layout, though you can think of it as an Excel spreadsheet
    that lays out attributes and classes). I should not only see the schema, but also
    the classes. Therefore, I should be able to drill into user accounts, group accounts,
    server names, and more:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 使用像 JXplore 和 Hyena（*图 5.3*）这样的工具，我可以调出 Active Directory 模式（布局，尽管你可以将其视为一个列出属性和类的
    Excel 表格）。我不仅应该能看到模式，还能看到类。因此，我应该能够深入了解用户帐户、组帐户、服务器名称等：
- en: '![Figure 5.3 – Results from Hyena regarding an Active Directory infrastructure'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.3 – 来自 Hyena 的 Active Directory 基础架构结果'
- en: '](Images/B17486_05_003.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17486_05_003.jpg)'
- en: Figure 5.3 – Results from Hyena regarding an Active Directory infrastructure
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – 来自 Hyena 的 Active Directory 基础架构结果
- en: We'll discuss Network Time Protocol next.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将讨论网络时间协议。
- en: Network Time Protocol
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络时间协议
- en: Okay; guess what? We can enumerate using time! There's a protocol out there
    that our computers use to synchronize the time between each other. It's called
    **Network Time Protocol** (**NTP**). Now, you may be thinking, Dale, you cannot
    possibly have a quote about this. Well, guess again. Cindy Lauper said, *If you're
    lost, you can look and you will find me, time after time*. When it comes to hacking,
    the things that you don't expect end up giving up information.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，猜猜看？我们可以使用时间进行枚举！有一种协议是我们的计算机用来同步彼此时间的，叫做**网络时间协议**（**NTP**）。现在，你可能在想，Dale，你不可能有关于这个的名言吧。嗯，再想想吧。Cindy
    Lauper 曾经说过，*If you're lost, you can look and you will find me, time after time*（如果你迷路了，你可以看一眼，你会一直找到我）。在黑客攻击中，你意想不到的事情最终会泄露信息。
- en: NTP is a protocol that we use for synchronizing our clocks between all the systems
    in a LAN network. This has been around for decades, having been developed in 1981
    by David Mills. In a domain, one of the most important settings will be time,
    and all the computers in the domain need to be within a certain timeframe. For
    example, in the Microsoft world, the computers or the desktops themselves can't
    be more than 5 minutes out of sync. Now, technically, domain controllers use NTP
    with what they refer to as **UTC**, which is Coordinated Universal Time.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: NTP 是我们用来同步局域网内所有系统时钟的协议。这个协议已经存在几十年，最早由 David Mills 于 1981 年开发。在域环境中，最重要的设置之一就是时间，所有计算机需要保持在一个特定的时间范围内。例如，在
    Microsoft 环境中，计算机或桌面设备之间的时间差不能超过 5 分钟。技术上讲，域控制器使用 NTP 并且采用被称为**协调世界时**（**UTC**）的时间标准。
- en: UTC is independent of time zones and enables NTP to be used anywhere in the
    world, regardless of time zone settings. That's why they're able to keep up, whether
    you're in Mountain Standard Time or Eastern Time and so on. In a typical Microsoft
    environment, there's going to be one computer that is flagged as the NTP server
    for the entire domain. It's referred to as a PDC emulator, which is also known
    as one of the most **flexible single master operations** (**FSMO**) roles. This
    is the machine that oversees time, and it gets its time from the BIOS clock, which
    is the default. A best practice of Microsoft is to get the PDC emulator server
    to synchronize with an atomic clock on the internet. Now, all this communication
    is taking place on a specific port, and that is port UDP number **123**. This
    port needs to make sure that it's open so that all the domain controllers will
    synchronize themselves with the PDC emulator and that all the domain member's
    servers and domain workstations are synchronized with one of the domain controllers.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: UTC 独立于时区，使得 NTP 可以在世界任何地方使用，无论时区设置如何。这就是为什么无论你是在山地标准时间（MST）还是东部时间（EST），它都能够跟得上。在典型的
    Microsoft 环境中，会有一台计算机被指定为整个域的 NTP 服务器，称为 PDC 模拟器，它也是最**灵活的单一主控操作**（**FSMO**）角色之一。它是负责时间同步的机器，时间来源于
    BIOS 时钟，这是默认的设置。Microsoft 的最佳实践是让 PDC 模拟器服务器与互联网中的原子钟同步。所有这些通信都发生在一个特定的端口，即 UDP
    端口**123**。这个端口必须确保是开放的，这样所有的域控制器才能与 PDC 模拟器进行同步，且所有域成员的服务器和工作站都会与某个域控制器同步。
- en: You need to ensure that port **123** on UDP is accessible. In a domain, time
    synchronization takes place when the Windows time server turns on during system
    startup and, every now and then, as the system is running. NTP itself is extremely
    accurate. And when I say extremely accurate, it depends on the network that it's
    synchronizing across. If it's a private network, it can synchronize the machines
    to be within 200 microseconds of each other. And in a public network, it does
    slow down a bit to under 10 milliseconds.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要确保 UDP 的**123**端口是可访问的。在域中，时间同步会在系统启动时由 Windows 时间服务器启动时进行，每当系统运行时也会定期同步。NTP
    本身非常准确。当我说非常准确时，这取决于它同步的网络。如果是私有网络，它可以将机器同步到彼此之间的时间误差不超过 200 微秒。而在公共网络中，速度会稍微慢一些，但仍然能保持在
    10 毫秒以内。
- en: Now, these computers, which are talking to each other to synchronize their time,
    open them up for enumeration. So, what can we learn from NTP? Well, we can do
    a lot of things, including pulling a list of hosts off an NTP server because they're
    all reporting into the NTP server to make sure they're synchronized. There will
    be some residual information listing hostnames and with those, we should also
    be able to get IP addresses listed. We may even be able to pull off system names
    and we will even see operating systems being displayed.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这些相互同步时间的计算机会暴露给我们用于枚举的接口。那么我们能从 NTP 中学到什么呢？我们可以做很多事情，包括从 NTP 服务器中拉取主机列表，因为它们都会向
    NTP 服务器报告以确保时间同步。会有一些残留信息列出主机名，通过这些信息我们也应该能够获取到 IP 地址。我们甚至可能能够提取出系统名称，甚至看到操作系统的显示信息。
- en: With basic NTP commands, we should be able to trace the chain of NTP servers,
    as well as query the NTP daemon and its current state, and monitor the NTP daemon.
    NTP attacks are primarily **Denial of Service** (**DoS**) based to wreak havoc
    on an organization.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 使用基本的 NTP 命令，我们应该能够追踪 NTP 服务器的链条，查询 NTP 守护进程及其当前状态，并监控 NTP 守护进程。NTP 攻击主要是基于**拒绝服务**（**DoS**）来对组织造成破坏。
- en: Enumerating using SMTP
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SMTP 枚举
- en: 'Who would think a simple protocol that we use in day-to-day life, such as SMTP,
    could reveal so much about a network? A famous T-shirt went around at Blackhat
    several years ago. Most people didn''t understand the meaning. It simply said
    **I read your email.**:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 谁会想到一个我们日常生活中使用的简单协议，比如SMTP，竟然能揭示出如此多关于网络的信息？几年前，在Blackhat大会上，一件著名的T恤开始流行。大多数人没有理解它的意思。它上面写着：**我读过你的邮件。**：
- en: '![Figure 5.4 – I read your email T-shirt from Blackhat'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '![图5.4 – 我在Blackhat上的“我读过你的邮件”T恤'
- en: '](Images/B17486_05_004.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17486_05_004.jpg)'
- en: Figure 5.4 – I read your email T-shirt from Blackhat
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.4 – 我在Blackhat上的“我读过你的邮件”T恤
- en: That's so true. Normally, email is transmitted in clear text, meaning that messages
    are readable. As email servers communicate with each other, they also transmit
    information via the SMTP protocol, which can be used to further enumerate your
    network.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这确实是这样。通常，电子邮件是以明文传输的，这意味着信息是可以阅读的。当电子邮件服务器相互通信时，它们还通过SMTP协议传递信息，而SMTP协议可以用来进一步枚举你的网络。
- en: The purpose of this is not necessarily to read people's emails, even though
    that could give up a lot of information. It's more about looking at what we refer
    to as the headers of the email, which is the information that gets attached to
    the beginning of the email during transit, which exposes quite a bit.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这么做的目的并不一定是为了阅读他人的电子邮件，尽管那样可以揭示出很多信息。更多的是在查看我们所说的电子邮件头部信息，这是邮件在传输过程中附加到邮件开头的内容，它暴露了不少信息。
- en: So, what is SMTP? It's simply a protocol we use for delivering emails between
    email servers and across the internet. It utilizes a process referred to as store
    and forward, which means that the SMTP protocol moves your email on and across
    the networks. It uses DNS to look up a specific type of record, called an MX record,
    to identify the server it needs to forward or store the email in. It also works
    closely with **Mail Transfer Agents** (**MTAs**) to ensure it sends the email
    to the right computer and email inbox. SMTP directs how your email moves from
    your computer's MTA to an MTA of another computer or even several computers.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，SMTP是什么？它只是我们用来在电子邮件服务器之间以及跨互联网传递电子邮件的协议。它利用一种叫做存储转发的过程，这意味着SMTP协议将你的邮件在网络中传输。它使用DNS查找一种特定类型的记录，称为MX记录，以便确定需要转发或存储邮件的服务器。它还与**邮件传输代理**（**MTA**）密切配合，确保邮件发送到正确的计算机和电子邮件收件箱。SMTP指导你的邮件如何从计算机的MTA传送到另一台计算机的MTA，甚至可能是几台计算机的MTA。
- en: I know this is a bit confusing but because all of this happens in the background,
    we don't have to worry about it. Once the email gets inside our network infrastructure,
    we typically use other types of protocols. For example, we might use POP, IMAP,
    or MAPI to deliver the emails internally. However, externally, out on the internet,
    SMTP is the big bad boy of the block. SMTP uses a couple of ports, including port
    **25** and port **587** for submission.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道这有点混乱，但由于这一切都发生在后台，我们不需要担心它。一旦邮件进入我们的网络基础设施，我们通常会使用其他类型的协议。例如，我们可能会使用POP、IMAP或MAPI在内部传递邮件。然而，在外部，即互联网上，SMTP才是“大佬”。SMTP使用几个端口，包括端口**25**和端口**587**来进行提交。
- en: Some commands take place between the servers to communicate and deliver emails.
    There is a set of codes that help simplify those communications. When you send
    an email message out, it gets converted into strings of text that are separated
    by these code words (their numbers), which identify the purpose of each of the
    sections being transmitted.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 一些命令在服务器之间进行，以便通信和传递电子邮件。有一组代码可以帮助简化这些通信。当你发送电子邮件时，邮件会被转换成由这些代码单词（及其数字）分隔的文本字符串，这些代码单词用来标识每个传输部分的目的。
- en: Typically, only other SMTP servers understand what those commands are as the
    message travels toward its destination. Sometimes, it passes through several computers,
    as well as their individual MTAs. It may also be stored briefly before moving
    on to the next computer within that path.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，只有其他SMTP服务器知道这些命令是什么，因为邮件在传输过程中朝着目的地前进。有时，邮件会经过几台计算机以及它们各自的MTA。它也可能会暂时存储，之后再传递到路径中的下一台计算机。
- en: Some of those commands include specifying the email address of the sender. This
    command also tells the SMTP server that a new email is starting and makes these
    SMTP servers reset all their states and buffers. There's also a receipt to the
    recipient of the email. There's also the command data, which starts transferring
    the email message itself. It will typically receive the attachments and the body
    text. Once the SMTP server sends the email across, it waits for a specific code
    to verify that the destination server received it. This verification is typically
    done with an acceptance code called a **250 reply** code, which means everything
    is okay. There's also a verifier, which asks the server to confirm or verify that
    a specific username or mailbox exists.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令中的一些包括指定发件人的电子邮件地址。此命令还告诉SMTP服务器一封新邮件即将开始，并使这些SMTP服务器重置所有状态和缓冲区。还有一个回执发送给邮件的收件人。还有数据命令，用于开始传输邮件本身。它通常会接收附件和正文文本。一旦SMTP服务器发送邮件，它会等待一个特定的代码来验证目标服务器是否收到了邮件。此验证通常通过一个叫做**250回复**代码来完成，表示一切正常。还有一个验证命令，它要求服务器确认或验证某个特定的用户名或邮箱是否存在。
- en: If you're starting to think like I've been trying to teach you to think, think
    about how that command can be useful to you. One of these commands can be used
    to probe for login names on servers, as well as possible groups.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你开始像我教你思考那样思考，想想看那个命令对你有何帮助。你可以使用这些命令来探测服务器上的登录名以及可能的用户组。
- en: Servers that ignore the **verify** command will usually send some type of reply,
    but they will not send information the client is looking or asking for. The fact
    remains that either a yes or a no gives me quite a bit of data.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 忽略**verify**命令的服务器通常会发送某种类型的回复，但不会发送客户端所请求的信息。然而，事实是，不论是“是”还是“否”，都能提供相当多的数据。
- en: We also have the **expanded** command, which is like the **verify** command,
    except for in the case of a mailing list, it shows the members of that mailing
    list. The SMTP **expand** command causes a sent mail to expand to all the recipients
    and makes sure each of those recipients gets one of those email messages that
    were initially in the data section.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有**expanded**命令，它与**verify**命令类似，但在邮件列表的情况下，它显示该邮件列表的所有成员。SMTP的**expand**命令使已发送的邮件扩展到所有收件人，并确保每个收件人都能收到那些最初在数据部分中的邮件信息。
- en: Knowing that, what could we possibly learn from SMTP? Well, we can download
    a list of names off the internet. This list could have been utilized to verify
    what users are valid within the network and which ones are not. This is how a
    lot of spammers clean up their spam lists. It can also help me expose a possible
    target, making sure that it's a valid login name.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 知道这些，SMTP能告诉我们什么呢？嗯，我们可以从互联网上下载一份名称列表。这份列表可能用于验证网络中哪些用户是有效的，哪些不是。这也是许多垃圾邮件发送者清理其垃圾邮件列表的方式。它还可以帮助我暴露一个可能的目标，确保它是一个有效的登录名。
- en: Next, we'll discuss DNS enumeration.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论DNS枚举。
- en: The golden ticket – DNS
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 黄金票据 – DNS
- en: When it comes to enumeration, one of the most revealing things you can do is
    get a hold of all the computer names and IP addresses on the network in one shot.
    We can do that with DNS enumeration. DNS is responsible for turning names into
    IP addresses. *What's in a name?*, William Shakespeare would ask. Well, in this
    case, everything, because what DNS holds for me can reveal a ton of information.
    I can see server names, what services are being offered up, and I can identify
    domain controllers if I need to, as well as websites or SQL servers.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在枚举方面，你能做的一件最有启发性的事情就是一次性获取网络上所有计算机的名称和IP地址。我们可以通过DNS枚举来做到这一点。DNS负责将名称转换为IP地址。*名字代表什么？*
    威廉·莎士比亚会问。好吧，在这个情况下，名字代表了一切，因为DNS为我提供的信息可以揭示大量内容。我可以看到服务器名称、提供的服务，必要时还可以识别域控制器，以及网站或SQL服务器。
- en: 'Most of the network connectivity that takes place there, as far as computers
    figuring out where things are located goes, is handled by DNS. If I can enumerate
    that, I can pull a plethora of information:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机在确定事物位置时，大部分网络连接是通过DNS来处理的。如果我能列举出这些内容，我就能获取大量信息：
- en: '![Figure 5.5 – DNS records associated with the services that are installed](Images/B17486_05_005.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.5 – 与已安装服务相关的DNS记录](Images/B17486_05_005.jpg)'
- en: Figure 5.5 – DNS records associated with the services that are installed
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5 – 与已安装服务相关的DNS记录
- en: As you can see, we have **192.168.0.1**, which is resolved to the computer name
    of **NYC-DC1**. It happens to be running LDAP. What that tells me is that when
    I'm trying to log into a domain environment, I need to find an LDAP server. It
    also tells me that the LDAP server is equal to **NY-DC1**, which is equal to an
    IP address, and I can make the connection. In the case of the bottom entry, **192.168.0.2**,
    this tells me that's a server whose name is **NY-DNS1**, which is my **Start of
    Authority** (**SoA**).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们有**192.168.0.1**，它解析到计算机名称**NYC-DC1**。它恰好在运行LDAP。通过这个信息，我可以知道，当我尝试登录到域环境时，我需要找到一个LDAP服务器。它还告诉我LDAP服务器等于**NY-DC1**，而**NY-DC1**又等于一个IP地址，我可以与它建立连接。在底部条目中，**192.168.0.2**，它告诉我这是一个名为**NY-DNS1**的服务器，它是我的**授权起始**（**SoA**）服务器。
- en: With enumeration, we can go through and look up the records and identify what
    records are registered with which computers. We can also do something called **cache
    snooping**. Cache snooping is where the DNS server resolves names to IP addresses
    for client machines. For example, if I say I'd like to go to **www.yahoo.com**,
    I can submit that entry to my DNS server and it will go and resolve that, get
    an IP address, and submit it back to me. That information is stored inside the
    cache memory of my computer. If I can snoop that cache, especially for an internal
    DNS server, I can see what computer names have been resolved by this box. We can
    also use a Google lookup. If I can enumerate via Google's DNS servers, I might
    be able to find out a lot about your infrastructure, especially if you have subdomains.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 通过枚举，我们可以浏览并查找记录，识别哪些记录与哪些计算机注册。我们还可以做一种叫做**缓存嗅探**的操作。缓存嗅探是指DNS服务器为客户端计算机解析名称到IP地址的过程。例如，如果我说我想访问**www.yahoo.com**，我可以将该条目提交给DNS服务器，它将解析并获取IP地址，再将结果返回给我。这些信息会存储在我计算机的缓存内。如果我能嗅探到这个缓存，尤其是针对内部DNS服务器，我就能看到哪些计算机名称已经被该服务器解析。我们还可以使用Google查询。如果我能够通过Google的DNS服务器进行枚举，可能会发现很多关于您的基础设施的信息，特别是如果您有子域名的话。
- en: Reverse lookups
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 反向查找
- en: We also have reverse lookup capabilities. When normal name resolution takes
    place, we have a name. I'm trying to go to **yahoo.com**, and in return, I get
    an IP address from the DNS server. Reverse lookup is the opposite, where we have
    an IP and I want to know what name is associated with that IP address. I have
    an IP address of **192.168.0.1**, but I have no idea what the computer name is.
    This reverse lookup is done with what's referred to as a pointer record, and we
    can do this against either IPv4 or IPv6 addresses. We can also do zone walking.
    Zone walking isn't difficult to understand. This is a technique that helps us
    reveal internal records if the zone is not properly configured. We can ask, what
    subdomains do you have behind you? This can help us map network hosts by enumerating
    the contents of the zone.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还具备反向查找功能。当进行正常的域名解析时，我们有一个域名。例如，我尝试访问**yahoo.com**，然后从DNS服务器获得一个IP地址。反向查找则是相反的过程，我们拥有一个IP地址，想要知道与该IP地址关联的域名。我有一个IP地址**192.168.0.1**，但我不知道它对应的计算机名称是什么。这个反向查找是通过所谓的指针记录来完成的，我们可以对IPv4或IPv6地址进行反向查找。我们还可以进行区域传送。区域传送并不难理解。这是一种技术，帮助我们揭示内部记录，前提是该区域没有被正确配置。我们可以询问，您背后有哪些子域名？这可以通过列举区域内容帮助我们绘制网络主机映射。
- en: Zone transfers
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 区域传送
- en: This is the big bad boy. If I can do this with your DNS servers, look out –
    I'm going to be in heaven. When I teach the Microsoft Server platform, I talk
    about how to set up a DNS server. One of the things that we do is set up the one
    DNS server to replicate only with a secondary DNS server. We want to make sure
    that it only replicates with *that* second DNS server. The reason behind this
    is that, if it's not set up correctly, an attacker will attempt to contact your
    DNS server and say, *Hey, would you please replicate with me and tell me who you've
    got because I don't have anybody in my database?* Now, I have a complete record
    and map of your environment, including MX records, hostnames, and all kinds of
    other records. This can help me do something later called **DNS poisoning**, where
    I'm going to put invalid records into your DNS zone.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是大坏蛋。如果我能控制你的DNS服务器，注意了——我将会乐得不行。当我教授微软服务器平台时，我会讲解如何设置DNS服务器。我们所做的一件事是设置一个DNS服务器，只与另一个次级DNS服务器进行复制。我们要确保它只与*那个*次级DNS服务器进行复制。这样做的原因是，如果设置不正确，攻击者会试图联系你的DNS服务器，要求说，*嘿，你能和我复制一下并告诉我你有哪些记录吗？因为我的数据库里没有任何记录*。现在，我就能完整地掌握你的环境记录，包括MX记录、主机名和其他各种记录。这可以帮助我做一件事，叫做**DNS污染**，就是将无效的记录插入你的DNS区域。
- en: DNS records
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DNS记录
- en: So, what's behind DNS? Well, we know that it's a database itself that contains
    computer names and their IP addresses. It operates on port UDP **53**, as well
    as TCP **53**. Typically, we use UDP port **53** for doing standard lookups such
    as *Hey, I need yahoo.com's IP address*, where zone transfers are typically done
    through TCP port **53**. The reason why we use UDP is because it's a much faster
    resolution. We'll look at some of the records in detail next.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，DNS背后是什么呢？我们知道，它本身是一个包含计算机名称及其IP地址的数据库。它通过UDP **53**端口和TCP **53**端口运行。通常，我们使用UDP端口**53**来执行标准查询，比如*嘿，我需要获取yahoo.com的IP地址*，而区域传输通常通过TCP端口**53**完成。我们使用UDP的原因是它具有更快的解析速度。接下来，我们将详细查看一些记录。
- en: A records
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: A记录
- en: So far, we have mentioned that the database itself consists of multiple records
    that point to IP addresses, the names these records help identify, and, in some
    cases, the services that are running. One of those records is an **A** record,
    or as the Canadians would say, *a record, eh?* This is simply just a hostname
    being resolved to an IP address.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们提到的数据库本身由多个记录组成，这些记录指向IP地址，帮助识别这些名称，且在某些情况下，还包括正在运行的服务。其中一项记录是**A**记录，或者正如加拿大人所说的，*a
    record, eh?* 它就是将主机名解析为IP地址。
- en: AAAA records
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AAAA记录
- en: These are the same things as **A** records, except instead of pointing to IPv4
    addresses, they point to IPv6 records.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这些与**A**记录是一样的，只不过它们指向的是IPv6记录，而不是IPv4地址。
- en: Side Note
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 旁注
- en: The Fonz is a big fan of **AAAA** records. AAAAAAAY! Okay, for you young ones
    out there, if you don't know what that reference was, go Google it – Happy Days,
    The Fonz.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Fonz是**AAAA**记录的超级粉丝。AAAAAAY！好了，对于年轻的朋友们，如果你们不知道这个梗是什么，赶快去Google一下——《快乐时光》，The
    Fonz。
- en: CNAME records
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CNAME记录
- en: A **CNAME** record is an alias that points to another **A** record. So, for
    example, my **A** record or **AAAA** record could be **batcave** and pointing
    to an IP address, but maybe I have another name for that same computer, which
    I'm going to call **www**. So, whether somebody types in **www** or **batcave**,
    they will go to the same IP address/location. So, a **CNAME** record points to
    the **A** record reference.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '**CNAME**记录是指向另一个**A**记录的别名。例如，我的**A**记录或**AAAA**记录可能是**batcave**，并指向一个IP地址，但也许我有一个不同的名字，指向同一台计算机，我叫它**www**。因此，无论是输入**www**还是**batcave**，它们都会指向同一个IP地址/位置。所以，**CNAME**记录指向的是**A**记录的引用。'
- en: MX records
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MX记录
- en: Then, we have **MX** records. No, not motocross. These are mail exchange records.
    This helps us identify the server/servers that oversee sending and receiving emails.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有**MX**记录。不是指摩托越野，而是邮件交换记录。它帮助我们识别负责发送和接收电子邮件的服务器。
- en: NS records
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NS记录
- en: We also have **NS**, which are name servers. Hey, name servers! If an attacker
    can find those records, they would be the IPs of the DNS servers that I'd want
    to try to enumerate with. This is a major score here.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有**NS**，即名称服务器。嘿，名称服务器！如果攻击者能找到这些记录，那就是我想要枚举的DNS服务器的IP地址。这是一次重要的收获。
- en: SOA records
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SOA记录
- en: We also have **SOA**, which is the primary DNS server. This would be another
    record I would want to get a hold of and see if I could do a zone transfer with.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有**SOA**记录，这是主DNS服务器。这是我也想获得并查看是否能进行区域传输的另一个记录。
- en: PTR records
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PTR 记录
- en: We also have **PTR** records, also known as pointer records. Again, this is
    the reverse lookup, so if we only have an IP address and we don't know the computer
    name, or we don't know what the hostname is, if I can do a reverse lookup, I'll
    be able to extrapolate that information.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有**PTR**记录，也叫做指针记录。同样，这是反向查找，所以如果我们只有一个 IP 地址，而不知道计算机名，或者不知道主机名是什么，如果我能进行反向查找，我就能推断出这些信息。
- en: SRV records
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SRV 记录
- en: 'Then, we have something called **SRV** records, or service records. These service
    records record what services are running on which machines. For example, in a
    Microsoft Exchange environment, if I open Outlook, create a new email, and hit
    my little **To** button, I will see the big list of email addresses for my company:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们有一个叫做**SRV**记录的东西，或者叫服务记录。这些服务记录记录了哪些服务正在某台机器上运行。例如，在一个微软 Exchange 环境中，如果我打开
    Outlook，创建一封新邮件，然后点击我那个小小的**收件人**按钮，我会看到我公司所有电子邮件地址的长长列表：
- en: '![Figure 5.6 – Global Address Book populated by a Global Catalog Server'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.6 – 由全局目录服务器填充的全球通讯录'
- en: '](Images/B17486_05_006.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '](Images/B17486_05_006.jpg)'
- en: Figure 5.6 – Global Address Book populated by a Global Catalog Server
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6 – 由全局目录服务器填充的全球通讯录
- en: Well, what happened is that my computer went and looked at the DNS to find a
    computer on the network that offers the global catalog service. It identifies,
    contacts, resolves, and gives me back email address information.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 其实发生的事情是，我的计算机去查看了 DNS，找到网络中提供全局目录服务的计算机。它识别、联系、解析，并将电子邮件地址信息返回给我。
- en: Sum it up
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结一下
- en: So, what can we learn from DNS? Folks, it's the mother lode – it's the secret
    treasure of enumeration. This is because, in one fell swoop, I can find out every
    single computer name on your network, their IP addresses, and the services they're
    running, which all help me determine which vulnerabilities might be out there
    that I could use as a point of entry. Now, we can also pick up, as I mentioned
    previously, the server names and workstations. Believe it or not, sometimes, IT
    guys use their workstations to, for example, monitor network traffic. I want to
    know what that box is, hopefully so that I can avoid it. I should also be able
    to see which services are running on which servers. Again, I can find an LDAP
    server, which would be my domain controller, so I can find a global catalog server
    or a Kerberos server. Once I have a list of all your domain controllers, I'm going
    to go back (remember when we talked about doing NetBIOS enumeration?), where maybe
    I can discover what OS is being used. If it's a 2012 server, I'm going to get
    giddy inside because that's an older OS that's probably not patched or Microsoft
    stopped supporting it.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们能从 DNS 中学到什么呢？各位，这可是藏宝图——它是枚举的秘密宝藏。因为，一次性，我可以找出你网络中每一台计算机的名称、它们的 IP 地址和它们运行的服务，这些都帮助我确定可能存在的漏洞，作为攻击点。现在，我们也可以获取，如我之前提到的，服务器名称和工作站。信不信由你，有时候，IT
    人员会用工作站来，例如，监控网络流量。我想知道那台设备是什么，最好是为了避免它。我还应该能看到哪些服务在什么服务器上运行。同样，我可以找到一个 LDAP 服务器，它将是我的域控制器，这样我就能找到全局目录服务器或
    Kerberos 服务器。一旦我列出了你所有的域控制器，我就会回到之前说过的（记得我们谈过 NetBIOS 枚举吗？），看看是否能发现使用的操作系统。如果是
    2012 服务器，我会内心兴奋，因为那是一个较旧的操作系统，可能没有打补丁，或者微软已经停止支持它了。
- en: Oh wait, there's more!
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哦等等，还有更多！
- en: There are more ways we can enumerate; it's not limited to just the Windows platform.
    They work on almost all devices; none are safe. It cracks me up when friends and
    family members tell me how they feel safe because they don't run Windows, and
    that they're running Linux or a version of Unix. But here's the dirty secret;
    if it deals with a protocol, you are not secure! You are dead wrong if you think
    any operating system or device is safe. There are different ways to attack all
    types of boxes, whether it's a Linux box, a Unix box, a Cisco router, and so on.
    In one of their old marketing campaigns, Apple bragged that they were virus-free—they
    don't get malware. Today, they know better. In Golden Eye, a 1995 spy film, a
    hacker named Boris Grishenko would scream, *I'm invincible!* whenever he was onto
    something. Toward the end of the movie – spoiler alert – something unpleasant
    happens to him. The same applies to some of these operating systems today, giving
    us a sense of invincibility.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过更多方式进行枚举；它不限于 Windows 平台，几乎适用于所有设备，没一个是安全的。当朋友和家人告诉我他们感觉很安全，因为他们不使用 Windows，而是使用
    Linux 或某个版本的 Unix 时，我总是忍不住笑出声。但这里有个不为人知的秘密：如果涉及到某个协议，你就不安全！如果你认为某个操作系统或设备是安全的，那你就大错特错。各种类型的设备都可以遭遇攻击，无论是
    Linux 主机、Unix 主机、Cisco 路由器等等。在他们某个旧的营销活动中，苹果曾吹嘘自己没有病毒——不会感染恶意软件。今天，他们知道得更清楚了。在1995年的间谍电影《黄金眼》中，一个叫
    Boris Grishenko 的黑客每当发现新线索时都会喊：“*我无敌!*”电影接近尾声时——剧透警告——他遭遇了一些不愉快的事情。今天，一些操作系统也是如此，让我们有种“无敌”的错觉。
- en: IPsec
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IPsec
- en: IPsec is a commonly implemented technology for gateway-to-gateway, LAN-to-LAN,
    and even VPN-based enterprises. Most of the IPsec-based VPNs use the **Internet
    Security Association Key Management Protocol** (**ISAKMP**). It's used to establish,
    negotiate, modify, and delete SAs, as well as the cryptographic keys in a VPN
    environment.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: IPsec 是一种常见的技术，广泛应用于网关到网关、局域网到局域网，甚至基于 VPN 的企业环境。大多数基于 IPsec 的 VPN 使用 **Internet
    Security Association Key Management Protocol**（**ISAKMP**）。它用于建立、协商、修改和删除 SA 以及
    VPN 环境中的加密密钥。
- en: So, what does it need from a hacking perspective? Well, this is simple. An attacker
    can perform a simple direct scan for the ISAKMP protocol, which uses UDP port
    **500**. We could use tools such as Nmap here.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，从黑客的角度来看，这需要什么呢？其实很简单。攻击者可以执行一个简单的直接扫描，寻找使用 UDP 端口 **500** 的 ISAKMP 协议。我们可以在这里使用像
    Nmap 这样的工具。
- en: VoIP enumeration
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VoIP 枚举
- en: This is an interesting enumeration. VoIP is replacing most of the traditional
    telephone services in both corporate and home environments. The overall concept
    here is that VoIP is utilizing your network or internet access, and it does so
    through **Session Initiation Protocol** (**SIP**), one of the protocols that VoIP
    uses to perform voice calls, video calls, and so on.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个有趣的枚举。VoIP 正在替代企业和家庭环境中的大部分传统电话服务。整体概念是 VoIP 利用你的网络或互联网接入，并通过 **Session
    Initiation Protocol**（**SIP**）执行语音通话、视频通话等操作。
- en: SIP uses UDP or TCP ports **2000**, **2001**, **5050**, and **5061**. There
    are several tools out there that you can use to enumerate VoIP. Metasploit has
    some built-in tools. There are also tools such as SIPvicious, an auditing tool
    that can be used to scan phone systems by performing an invite scan. And, of course,
    the attacker could then combine this *invite scan* with a *call command* to determine
    the weak passwords that are used to connect to a particular phone host or a PBX
    network. Another popular tool out there is svmap, a free, open source scanner
    we use to identify different SIP devices and PBX servers on a particular network.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: SIP 使用 UDP 或 TCP 端口 **2000**、**2001**、**5050** 和 **5061**。有一些工具可以用来枚举 VoIP。Metasploit
    自带一些工具，也有像 SIPvicious 这样的工具，它是一个审计工具，可以通过执行邀请扫描来扫描电话系统。当然，攻击者可以将这个 *邀请扫描* 与 *通话命令*
    结合起来，找出连接到特定电话主机或 PBX 网络时使用的弱密码。另一个流行的工具是 svmap，它是一个免费的开源扫描工具，我们用它来识别特定网络上的不同
    SIP 设备和 PBX 服务器。
- en: If you think outside the box and think about these different VoIP solutions
    and the information they may communicate across the internet, you might look at
    doing some Google hacking.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你跳出框框思考，考虑这些不同的 VoIP 解决方案以及它们可能通过互联网传输的信息，你可能会开始考虑进行一些 Google 黑客攻击。
- en: Enumerating with Remote Procedure Call (RPC)
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用远程过程调用（RPC）进行枚举
- en: RPC is a technology we use to create distributed client-server programs. It
    allows the client and the server to communicate via these programs.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: RPC 是我们用来创建分布式客户端-服务器程序的技术。它允许客户端和服务器通过这些程序进行通信。
- en: You can fire up Kali if you want and use Nmap. The command that you would use
    would be **nmap -p 135**. Then, you would specify the target machine. In our case,
    it would be **192.168.01-254**. If you suspect a particular target machine, you
    could just type in the full IP address of the target machine.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意，可以启动 Kali 并使用 Nmap。你使用的命令是**nmap -p 135**。然后，你需要指定目标机器。在我们的例子中，它将是**192.168.01-254**。如果你怀疑某一台特定的目标机器，可以直接输入目标机器的完整
    IP 地址。
- en: The countermeasures
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对策
- en: Countermeasures are designed to protect a network or system from an attack by
    either preventing the attack from happening or detecting when it has happened.
    This enables security professionals to take corrective action to ensure their
    systems remain secure. Countermeasures must be taken seriously because once an
    attacker has enumerated a network, penetrating the system becomes significantly
    easier.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 对策旨在通过防止攻击发生或在攻击发生时检测出来，从而保护网络或系统免受攻击。这使得安全专业人员能够采取纠正措施，确保他们的系统保持安全。对策必须引起重视，因为一旦攻击者枚举了网络，渗透系统就变得容易得多。
- en: Defaults and NetBIOS
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 默认设置和 NetBIOS
- en: 'When it comes to defaults, we''re talking about default settings – whether
    it''s the default settings for NetBIOS, your wireless access point, or SQL database
    defaults. The rule is: do not create a security hole by leaving default username
    and passwords or default settings in place. Change them. For example, I get into
    my servers via remote desktop all the time, but I don''t use the default ports.
    I''ve changed them up. Likewise, be aware of your ports. Of course, you can''t
    change some of them. I can''t change the DNS port unless I implement something
    such as a socket pool, a feature of the Windows Server platform that randomizes
    the ports, but that''s another book.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 关于默认设置，我们指的是默认配置——无论是 NetBIOS 的默认设置，还是无线接入点的默认设置，或是 SQL 数据库的默认设置。规则是：不要通过保留默认的用户名、密码或设置而制造安全漏洞。更改它们。例如，我经常通过远程桌面进入我的服务器，但我不使用默认端口。我已经更改了端口。同样，要注意你的端口。当然，有些端口是无法更改的。比如
    DNS 端口，除非我实现像 Windows Server 平台上的套接字池这种功能，它能够随机化端口，但那是另一本书的内容。
- en: Also, if you don't want shares to be accessible to users on a particular box,
    then turn off your **Server Message Block** (**SMB**). Now, you wouldn't want
    to do that to a file server.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，如果你不希望某台机器上的共享对用户可访问，那就关闭**服务器消息块（SMB）**。不过，你不会想对文件服务器执行此操作。
- en: SNMP
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SNMP
- en: As far as countermeasures go for SNMP, remember that this is the protocol that
    allows us to monitor and manage network devices as well as servers. If you don't
    need it, turn it off. If you're going to have it turned on, make sure that you
    at least start using version 3 because it has better security associated with
    it.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 就 SNMP 的对策而言，记住这是一个允许我们监控和管理网络设备及服务器的协议。如果你不需要它，就关闭它。如果你打算启用它，至少确保使用版本 3，因为它具有更好的安全性。
- en: Another thing you can do from the Windows Server platform is use a group policy,
    which allows us to control settings on servers. I would also look at the additional
    restrictions for anonymous connections. If you have any older servers, have them
    locked down (for the love of Pete, update them). Also, block port **161**, both
    TCP and UDP.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个你可以在 Windows Server 平台上执行的操作是使用组策略，这可以让我们控制服务器上的设置。我还建议查看匿名连接的附加限制。如果你有任何旧的服务器，应该将它们锁定（求求你，赶紧更新它们）。同时，阻止**161端口**，包括
    TCP 和 UDP。
- en: Alternatively, if you still need to use SNMP, go to your firewall rules and
    allow **161** to be opened, but only to specific machines, which would maybe be
    your monitoring server. This also goes back to the aspect of when it comes to
    SNMP, don't install the agent on a device you will not use it on. You don't necessarily
    need to monitor every single device. If you are going to turn it on, one of the
    things you may want to look at is implementing IPsec filtering, which encrypts
    the traffic going back and forth between the agent and the server monitor. And
    of course, be very careful about any quick-fix solutions by vendors saying that
    you need to open a null session because null sessions can be extremely dangerous.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果你仍然需要使用 SNMP，可以进入你的防火墙规则并允许**161端口**开放，但仅限于特定的机器，这可能是你的监控服务器。这也回到了关于 SNMP
    的问题——不要在你不会使用它的设备上安装代理。你不必监控每一台设备。如果你打算启用它，可能需要关注的一个方面是实施 IPsec 过滤，这样就能加密代理和服务器监控器之间的通信。当然，要非常小心那些厂商提出的快速修复方案，告诉你需要开放空会话，因为空会话可能非常危险。
- en: LDAP
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LDAP
- en: LDAP is the protocol that we use to authenticate users and store user accounts
    and objects in Active Directory, at least from Microsoft's perspective. Other
    LDAP services include open LDAP and several others, but they all use the same
    protocol.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP是我们用来认证用户、存储用户帐户和对象的协议，至少从微软的角度来看是这样。其他LDAP服务包括Open LDAP和其他一些，但它们都使用相同的协议。
- en: One of the things you want to do is separate the email address from login names.
    While you're at it, don't use the default, which is typically the login name,
    which is their email address. Why? Because, as an attacker, I will go to your
    website and see if you list email addresses for some of your company officers
    or employees. I will then go through and try those as login names within your
    network. It's shocking how many companies still use an email address schema for
    logins.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要做的一件事是将电子邮件地址与登录名分开使用。顺便提一下，不要使用默认值，通常默认值是登录名，而登录名就是他们的电子邮件地址。为什么呢？因为作为攻击者，我会访问你的网站，查看是否列出了你公司高管或员工的电子邮件地址。然后我会逐一尝试这些作为网络中的登录名。让人吃惊的是，仍然有很多公司使用电子邮件地址模式作为登录名。
- en: Note
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you're not sure about this one, throw your three-finger salute on your computer
    (*Ctrl* + *Alt* + *Delete*) and log off. Now, if my login name is normally **Bwayne**
    and my domain is **gotham.com**, odds are that if I use **bwayne@gotham.com**
    instead for my login in and it works, you might want to rethink your Active Directory
    environment!
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不确定这一点，可以对着你的电脑做个三指敬礼（*Ctrl* + *Alt* + *Delete*）然后注销。现在，如果我的登录名通常是**Bwayne**，我的域名是**gotham.com**，那么如果我用**bwayne@gotham.com**作为登录名并且能够正常工作，你可能需要重新考虑你的活动目录环境！
- en: 'Now, you may also need to remember that LDAP traffic is unsecured when it goes
    across the wire. So, we may want to look at using SSL to encrypt our traffic.
    Another thing that I''m a big fan of is encrypted drives that store the LDAP database
    using BitLocker, which is a great solution. Full disk encryption, or another drive
    encryption technology, is a great idea to ensure that if somebody does get physical
    access to it, they cannot access the information. And hey, BitLocker is free!
    #BonusPoints.'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可能还需要记住，LDAP流量在网络上传输时是不加密的。因此，我们可能需要考虑使用SSL来加密我们的流量。另一个我非常推荐的做法是使用加密硬盘存储LDAP数据库，采用BitLocker，这是一个很好的解决方案。全盘加密或其他硬盘加密技术是确保如果有人物理接触到它，他们无法访问其中信息的好方法。而且，嘿，BitLocker是免费的！#加分项。
- en: Network Time Protocol (NTP)
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络时间协议（NTP）
- en: All the computers on the network get their time from a centralized location.
    This depends on whether you're using a Windows product or possibly a Cisco router
    as your NTP server or Juniper device because Windows doesn't use the NTP protocol.
    This means it's not susceptible to the NTP vulnerabilities that are out there,
    but it has its own problems.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 网络上的所有计算机都从一个集中位置获取时间。这取决于你使用的是Windows产品，还是可能使用Cisco路由器作为你的NTP服务器，或者Juniper设备，因为Windows不使用NTP协议。这意味着它不会受到现有的NTP漏洞的影响，但它也有自己的问题。
- en: When it comes to NTP, make sure you watch your ports. Remember that the default
    port is **123**, which is easy to remember. You also need to understand what software
    is installed or what patches have been applied, especially to these hardware devices.
    Sometimes, we install software, and it opens ports without our knowledge because
    maybe they need to use an NTP protocol. And of course, use those commands that
    we talked about to check your own NTP Master so that you understand what information
    is being exposed.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 关于NTP，确保你监控好你的端口。记住，默认端口是**123**，很容易记住。你还需要了解安装了什么软件，或者有哪些补丁被应用，尤其是对于这些硬件设备。有时候，我们安装软件时，它会在我们不知情的情况下打开端口，因为它们可能需要使用NTP协议。当然，使用我们之前谈到的命令检查你自己的NTP主机，以便了解正在暴露哪些信息。
- en: Simple Mail Transfer Protocol (SMTP)
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单邮件传输协议（SMTP）
- en: One of the things we want to do is ensure we have disabled open relays. For
    most of the email servers out there, the open relays are already turned off. It's
    kind of funny because back in the old days, they were turned on, to make it easy
    for you. But if you are familiar with the technology triangle, when we make things
    easier, we end up opening more security holes. Also, drop unknown recipients.
    Again, most of the products out there that handle email will do reverse lookups.
    They will look at the header of the email, which always states the IP address
    of where it came from, and it'll do a reverse lookup to DNS. And if it doesn't
    match up, it'll drop it out of there.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想做的一件事是确保已禁用开放中继。对于大多数邮件服务器，开放中继通常已经关闭。其实很有意思，因为在过去，它们是开启的，以方便用户。但如果你了解技术三角形的原理，你会发现当我们让事情变得更简单时，往往也会打开更多的安全漏洞。此外，要丢弃未知的收件人。同样，大多数处理电子邮件的产品会进行反向查找。它们会查看电子邮件的头部，那里总是会显示邮件来源的
    IP 地址，然后它会进行 DNS 反向查找。如果没有匹配项，它会将其丢弃。
- en: DNS
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DNS
- en: DNS is our name server – it's what resolves a computer name to an IP address.
    So, first, we want to configure DNS zone transfers to be sent to specific or explicit
    servers. Also, make sure the hostnames of computers you don't want to be visible
    to the outside world are not referenced to an IP address in your DNS zone files.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: DNS 是我们的名称服务器——它负责将计算机名称解析为 IP 地址。因此，首先，我们需要将 DNS 区域传输配置为发送到特定或明确的服务器。同时，请确保您不希望向外界公开的计算机主机名，在您的
    DNS 区域文件中没有被引用到 IP 地址。
- en: When you check the DNS zone files – that is, you know what names are listed
    within the database – make sure that you check both internal and external DNS
    servers. I've seen situations where IT guys have taken the internal database and
    just simply copied it into the external DNS server to make things easy for themselves.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当你检查 DNS 区域文件时——也就是说，你知道数据库中列出了哪些名称——请确保检查内部和外部 DNS 服务器。我见过一些情况，IT 人员将内部数据库直接复制到外部
    DNS 服务器，只是为了方便自己。
- en: For the love of Pete, there's a DNS record out there called a **HINFO** record
    that specifies the server's type of CPU and operating system. It was designed
    initially so that applications such as FTP could use special processes when they
    were communicating with the servers of a known CPU or operating system. But think
    about that one for a second. If it's a file that's accessible from the outside
    telling you the server's name and operating system, you're not going to have a
    very good day.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 看在上帝的份上，有一种叫做 **HINFO** 的 DNS 记录，它指定了服务器的 CPU 类型和操作系统。最初它是为了让像 FTP 这样的应用程序在与已知
    CPU 或操作系统的服务器通信时使用特定进程而设计的。但是想一想，如果这是一个可以从外部访问的文件，告诉你服务器的名称和操作系统，那么你今天就不太可能有个好日子。
- en: Summary
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we covered a lot of ways to enumerate a targeted network.
    Some of these methods are caused just by the way networks and the internet are
    designed to work. From protocols such as LDAP and NTP to services such as NetBIOS
    and DNS, there''s a lot to watch out for. Again, remember what I taught you earlier:
    you can''t stop attackers – you can only slow them down. Don''t get discouraged
    by not being able to stop some of these issues. Instead, be aware of them and
    monitor them closely.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了许多枚举目标网络的方法。这些方法中的一些，实际上是由于网络和互联网设计时的工作方式造成的。从像 LDAP 和 NTP 这样的协议，到像
    NetBIOS 和 DNS 这样的服务，存在很多需要注意的事项。再说一次，记住我之前教给你们的：你不能阻止攻击者——你只能拖慢他们的速度。不要因为不能解决其中的一些问题而气馁。相反，要意识到它们的存在，并密切监控。
- en: In the next chapter, we'll look at how attackers find vulnerabilities on our
    infrastructure and how we can be one step ahead of them by using the same techniques
    to keep our systems up and secure.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨攻击者如何在我们的基础设施中发现漏洞，以及我们如何通过使用相同的技术，提前一步保护我们的系统安全。
- en: Questions
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter''s material. You will find the answers in the *Assessments*
    section of the *Appendix*:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 总结时，这里有一些问题供你测试自己对本章内容的掌握情况。你可以在 *附录* 中的 *评估* 部分找到答案：
- en: Which of the following best describes enumeration?
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项最能描述枚举？
- en: User and machine name identification
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户和机器名称识别
- en: Cracking passwords
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 破解密码
- en: Recognizing routers and firewalls
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 路由器和防火墙识别
- en: Active network system recognition
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 活跃网络系统识别
- en: Which function is performed by SMTP?
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SMTP 执行的是哪项功能？
- en: Transmitting status information
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 传输状态信息
- en: Network equipment monitoring
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络设备监控
- en: File transfer
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件传输
- en: Sending email messages
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送电子邮件消息
- en: To view NetBIOS information, what command should you use?
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看 NetBIOS 信息，应该使用什么命令？
- en: Nmap
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nmap
- en: netstat
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: netstat
- en: nbtstat
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: nbtstat
- en: telnet
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: telnet
- en: __________ is used to synchronize clocks on a network.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: __________ 用于同步网络中的时钟。
- en: SAM
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SAM
- en: NTP
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: NTP
- en: NetBIOS
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: NetBIOS
- en: FTP
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: FTP
