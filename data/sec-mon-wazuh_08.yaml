- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Appendix
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录
- en: 'We have now reached the *Appendix* chapter. Here, we will cover several custom
    Wazuh rules. Wazuh has already built thousands of rules to enhance its detection
    capabilities. However, we will write some important custom Wazuh rules to detect
    PowerShell, Linux Auditd, Kaspersky, and Symon-related alerts. This chapter covers
    the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经进入了*附录*章节。在这里，我们将介绍几个自定义 Wazuh 规则。Wazuh 已经构建了数千条规则以增强其检测能力。然而，我们将编写一些重要的自定义
    Wazuh 规则，以检测 PowerShell、Linux Auditd、Kaspersky 和 Sysmon 相关的警报。本章节涵盖以下主题：
- en: Custom PowerShell rules
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 PowerShell 规则
- en: Custom Auditd rules
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 Auditd 规则
- en: Custom Kaspersky Endpoint Security rules
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 Kaspersky Endpoint Security 规则
- en: Custom Sysmon rules
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 Sysmon 规则
- en: Custom PowerShell rules
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义 PowerShell 规则
- en: 'To enhance the Wazuh detection capabilities for Windows machines, we need to
    integrate some custom PowerShell Wazuh rules. Each rule can be created with specific
    conditions, severity levels, and other optional configurations. We will cover
    the following types of rules in this section:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增强 Wazuh 对 Windows 机器的检测能力，我们需要集成一些自定义 PowerShell Wazuh 规则。每个规则可以根据特定条件、严重性级别和其他可选配置进行创建。在本节中，我们将涵盖以下几种类型的规则：
- en: PowerShell event information
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 事件信息
- en: PowerShell error logs
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 错误日志
- en: PowerShell warning logs
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 警告日志
- en: PowerShell critical logs
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell 关键日志
- en: PowerShell event information
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PowerShell 事件信息
- en: 'We can create a custom PowerShell rule to get event information, as shown in
    the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个自定义 PowerShell 规则来获取事件信息，如下所示：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here, we have the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<if_sid>60009</if_sid>`: This represents the list of rule IDs. It will match
    when a rule ID on the list has previously matched. Rule ID `60009` is a pre-built
    Wazuh rule for Windows informational events.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>60009</if_sid>`：这表示规则 ID 列表。当列表中的某个规则 ID 与之匹配时，它将触发。规则 ID `60009`
    是一个用于 Windows 信息性事件的预构建 Wazuh 规则。'
- en: '`<field name="win.system.providerName">^PowerShell$</field>`: The `<field>`
    tag is used as a requisite to trigger the rule. It will check for a match in the
    content of a field extracted by the decoder. In this case, it will check whether
    the `win.system.providerName` log field has the `PowerShell` keyword.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.system.providerName">^PowerShell$</field>`：`<field>` 标签用作触发规则的必要条件。它将检查解码器提取的字段内容是否匹配。在这种情况下，它将检查
    `win.system.providerName` 日志字段是否包含 `PowerShell` 关键字。'
- en: '`<group>windows_powershell,</group>`: This enforces that the alert will be
    categorized under a specific group. In this case, it is `windows_powershell`.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<group>windows_powershell,</group>`：这强制将警报分类到特定组中。在这种情况下，它是 `windows_powershell`。'
- en: PowerShell error logs
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PowerShell 错误日志
- en: 'PowerShell error logs typically contain information related to errors, warnings,
    and other events. To detect such PowerShell error logs, we can create custom Wazuh
    rules, as shown here:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 错误日志通常包含与错误、警告和其他事件相关的信息。为了检测这些 PowerShell 错误日志，我们可以创建自定义 Wazuh 规则，如下所示：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here, we have the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<if_sid>60011</if_sid>`: This represents the list of rule IDs. It will match
    when a rule ID on the list has previously matched. Rule ID `60011` is a pre-built
    Wazuh rule for Windows error events.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>60011</if_sid>`：这表示规则 ID 列表。当列表中的某个规则 ID 与之匹配时，它将触发。规则 ID `60011`
    是一个用于 Windows 错误事件的预构建 Wazuh 规则。'
- en: '`<field name="win.system.providerName">^Microsoft-Windows-PowerShell$</field>`:
    The `<field>` tag is used as a requisite to trigger the rule. It will check for
    a match in the content of a field extracted by the decoder. In this case, it will
    check whether the `win.system.providerName` log field has the `Microsoft-Windows-PowerShell`
    keyword.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.system.providerName">^Microsoft-Windows-PowerShell$</field>`：`<field>`
    标签用作触发规则的必要条件。它将检查解码器提取的字段内容是否匹配。在这种情况下，它将检查 `win.system.providerName` 日志字段是否包含
    `Microsoft-Windows-PowerShell` 关键字。'
- en: '`<group>windows_powershell,</group>`: This enforces that the alert will be
    categorized under a specific group. In this case, it is `windows_powershell`.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<group>windows_powershell,</group>`：这强制将警报分类到特定组中。在这种情况下，它是 `windows_powershell`。'
- en: PowerShell warning logs
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PowerShell 警告日志
- en: 'PowerShell also generates non-critical alerts during script execution. This
    is helpful for security investigation. To detect such alerts on the Wazuh manager,
    we can create custom Wazuh rules, as shown here:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 在脚本执行期间还会生成非关键警报。这对于安全调查很有帮助。为了在 Wazuh 管理器上检测这些警报，我们可以创建自定义 Wazuh
    规则，如下所示：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here, we have the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<field name="win.system.providerName">^Microsoft-Windows-PowerShell$</field>`:
    The `<field>` tag is used as a requisite to trigger the rule. It will check for
    a match in the content of a field extracted by the decoder. In this case, it will
    check whether the `win.system.providerName` log field has the `Microsoft-Windows-PowerShell`
    keyword.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.system.providerName">^Microsoft-Windows-PowerShell$</field>`:
    `<field>`标签用作触发规则的必要条件。它将检查解码器提取的字段内容是否匹配。在这种情况下，它将检查`win.system.providerName`日志字段是否包含`Microsoft-Windows-PowerShell`关键字。'
- en: '`<field name="win.system.severityValue">^WARNING$</field>`: It will check whether
    the `win.system.severityValue` log field has the `WARNING` keyword.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.system.severityValue">^WARNING$</field>`: 它将检查`win.system.severityValue`日志字段是否包含`WARNING`关键字。'
- en: '`<group>windows_powershell,</group>`: This enforces that the alert will be
    categorized under a specific group. In this case, it is `windows_powershell`.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<group>windows_powershell,</group>`: 这将强制警报被分类到一个特定的组中。在这种情况下，它是`windows_powershell`。'
- en: PowerShell critical logs
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PowerShell关键日志
- en: 'PowerShell generates critical alerts where there are some severe errors during
    execution. To detect such alerts, we can create custom Wazuh rules, as shown here:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell生成关键警报，当执行过程中出现严重错误时。为了检测此类警报，我们可以创建自定义Wazuh规则，如下所示：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here, we have the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有如下内容：
- en: '`<field name="win.system.severityValue">^WARNING$</field>`: It will check whether
    the `win.system.severityValue` log field has the `WARNING` keyword.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.system.severityValue">^WARNING$</field>`: 它将检查`win.system.severityValue`日志字段是否包含`WARNING`关键字。'
- en: '`<group>windows_powershell,</group>`: This enforces that the alert will be
    categorized under a specific group. In this case, it is `windows_powershell`.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<group>windows_powershell,</group>`: 这将强制警报被分类到一个特定的组中。在这种情况下，它是`windows_powershell`。'
- en: This completes some of the important custom PowerShell rules. In the next section,
    we will cover Wazuh rules for Linux Auditd modules.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了一些重要的自定义PowerShell规则。在下一部分，我们将介绍Linux Auditd模块的Wazuh规则。
- en: Custom Wazuh rules for Auditd
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 针对Auditd的自定义Wazuh规则
- en: Custom Wazuh rules for Auditd provide a tailored method to enhance Wazuh’s capabilities
    to detect Linux command executions. This will also help the security team to detect
    critical security events, track user activities, and ensure regulatory compliance.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 针对Auditd的自定义Wazuh规则提供了一种增强Wazuh检测Linux命令执行能力的定制方法。这也将帮助安全团队检测关键的安全事件，追踪用户活动，并确保合规性。
- en: Auditd syscall rule
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Auditd系统调用规则
- en: 'We can create a Wazuh rule to detect any system call (syscall) events, as written
    here:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个Wazuh规则来检测任何系统调用（syscall）事件，如下所示：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Here, we have the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有如下内容：
- en: '`<decoded_as>auditd-syscall</decoded_as>`: This represents a requisite to trigger
    the rule. It will be triggered only if the event has been decoded by a specific
    `decoder`. In this case, it is `auditd-syscall`.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<decoded_as>auditd-syscall</decoded_as>`: 这是触发规则的必要条件。只有当事件被特定的`decoder`解码时，它才会被触发。在这种情况下，它是`auditd-syscall`。'
- en: Auditd path
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Auditd路径
- en: 'Linux Auditd generates an event for every path record. We will create a Wazuh
    rule to capture the event for Auditd path messages, as shown:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Linux Auditd会为每个路径记录生成一个事件。我们将创建一个Wazuh规则来捕获Auditd路径消息事件，如下所示：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here, we have the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有如下内容：
- en: '`<decoded_as>auditd-syscall</decoded_as>`: This represents a requisite to trigger
    the rule. It will be triggered only if the event has been decoded by a specific
    `decoder`. In this case, it is `auditd-path`.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<decoded_as>auditd-syscall</decoded_as>`: 这是触发规则的必要条件。只有当事件被特定的`decoder`解码时，它才会被触发。在这种情况下，它是`auditd-path`。'
- en: Detecting a change in the user environment
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检测用户环境中的变化
- en: 'To detect any changes in the user environment, we can create a custom Wazuh
    rule to detect changes in `bash_profile`, as written here:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检测用户环境中的任何变化，我们可以创建一个自定义Wazuh规则来检测`bash_profile`的变化，如下所示：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here, we have the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有如下内容：
- en: '`<list field="audit.directory.name" lookup="address_match_key">etc/lists/bash_profile</list>`:
    The `<list>` tag performs a CDB lookup, and the `field` attribute is used as a
    key in the CBD list. In this case, the CDB list `audit.directory.name` is used
    and `address_match_key` is used to search for the IP address and key.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<list field="audit.directory.name" lookup="address_match_key">etc/lists/bash_profile</list>`:
    `<list>`标签执行CDB查找，`field`属性用作CBD列表中的关键字。在这种情况下，使用CDB列表`audit.directory.name`，并使用`address_match_key`来查找IP地址和关键字。'
- en: We’ve learned how to build custom Wazuh rules for Linux Auditd modules. In the
    next section, we will build Wazuh rules for Kaspersky Endpoint Security solutions.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何为 Linux Auditd 模块构建自定义的 Wazuh 规则。在下一节中，我们将为卡巴斯基终端安全解决方案构建 Wazuh 规则。
- en: Custom Wazuh rules for Kaspersky Endpoint Security
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卡巴斯基终端安全的自定义 Wazuh 规则
- en: '**Kaspersky Endpoint Security** is a leading security provider, delivering
    cloud security, embedded security, threat management, and industrial security.
    To enhance Wazuh’s capability to detect Kaspersky endpoint alerts, we need to
    create custom Wazuh rules. In this section, we will cover the following topics:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**卡巴斯基终端安全** 是一家领先的安全提供商，提供云安全、嵌入式安全、威胁管理和工业安全。为了增强 Wazuh 检测卡巴斯基终端警报的能力，我们需要创建自定义的
    Wazuh 规则。在本节中，我们将涵盖以下主题：'
- en: Kaspersky’s general rules
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卡巴斯基的通用规则
- en: Rules to detect events when a Kaspersky agent restarts
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测卡巴斯基代理重新启动的规则
- en: Rules for quarantine alerts
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隔离警报的规则
- en: Kaspersky’s general rules
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 卡巴斯基的通用规则
- en: 'Kaspersky Endpoint Security generates some general alerts. To detect those
    alerts, the following Wazuh rule needs to be created:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 卡巴斯基终端安全会生成一些常规警报。要检测这些警报，需要创建以下 Wazuh 规则：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here, we have the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<field name="win.system.channel">^Kaspersky Event Log$</field>`: It will check
    whether the `win.system.channel` log field has the `Kaspersky Event` `Log` keyword'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.system.channel">^Kaspersky Event Log$</field>`：它将检查 `win.system.channel`
    日志字段是否包含 `Kaspersky Event` `Log` 关键字'
- en: Rules to detect events when the Kaspersky agent restarts
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用于检测卡巴斯基代理重新启动事件的规则
- en: 'To detect events when the Kaspersky agent restarts, a custom Wazuh rule needs
    to be created, as shown here:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要检测卡巴斯基代理重新启动的事件，需要创建自定义的 Wazuh 规则，如下所示：
- en: '[PRE8]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here, we have the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<field name="win.system.providerName">klnagent</field>`: It will check whether
    the `win.system.providerName` log field has the `klnagent<field name="win.system.eventID">1</field>`
    keyword. This represents another field within the Windows event log. This rule
    triggers if the value of `eventID` is `1`. In Windows event logging, `eventID`
    1 often represents system startup or the start of a logging session or a restart
    of the Windows Time service.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.system.providerName">klnagent</field>`：它将检查 `win.system.providerName`
    日志字段是否包含 `klnagent<field name="win.system.eventID">1</field>` 关键字。这表示 Windows
    事件日志中的另一个字段。此规则将在 `eventID` 值为 `1` 时触发。在 Windows 事件日志中，`eventID` 1 通常表示系统启动或日志会话的开始，或者
    Windows 时间服务的重新启动。'
- en: Rules for quarantine alert
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 隔离警报的规则
- en: 'To detect whether a suspicious file has been quarantined, we can a custom Wazuh
    rule to trigger the alert, as shown here:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要检测可疑文件是否已被隔离，我们可以创建自定义的 Wazuh 规则来触发警报，如下所示：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here, we have the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<field name="win.system.message" type="pcre2">(?i)^"Quarantine</field>`: It
    will check whether the `win.system.message` log field has the `Quarantine.<field
    name="win.system.message" type="pcre2">(?i)^"Quarantine</field>` keyword. This
    specifies another field within the Windows event log; this time it is the `message`
    field. This rule triggers if the message contains the `Quarantine` keyword. This
    is done by using a regular expression library called **Perl Compatible Regular**
    **Expressions** (**PCRE2**).'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.system.message" type="pcre2">(?i)^"Quarantine</field>`：它将检查
    `win.system.message` 日志字段是否包含 `Quarantine.<field name="win.system.message" type="pcre2">(?i)^"Quarantine</field>`
    关键字。这指定 Windows 事件日志中的另一个字段；这次是 `message` 字段。此规则将在消息中包含 `Quarantine` 关键字时触发。这是通过使用称为
    **Perl Compatible Regular Expressions**（**PCRE2**）的正则表达式库完成的。'
- en: We have learned how to build custom Wazuh rules to detect Kaspersky Endpoint
    Security events. In the next section, we will build custom rules to detect Sysmon
    events.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何构建自定义的 Wazuh 规则来检测卡巴斯基终端安全事件。在下一节中，我们将构建用于检测 Sysmon 事件的自定义规则。
- en: Custom Wazuh rules for Sysmon
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sysmon 的自定义 Wazuh 规则
- en: '**Sysmon** – a Windows Sysinternals tool – provides an in-depth view into system-related
    activities. Sysmon helps us detect a wide range of activities, such as process
    creation, file creation and modification, registry changes, driver loading, DLL
    loading, named pipe creation, process access, and DNS query logging. In order
    to expand Wazuh’s detection capability, we need to build a custom Wazuh rule to
    generate alerts. There is a total of 30 Sysmon events, as explained on the official
    Microsoft website ([https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon](https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon)).
    However, we will cover the most important Sysmon events that are mapped with some
    specific MITRE ATT&CK techniques. These rules are developed by taking reference
    from the official GitHub account of SOCFortress – a SaaS-based cybersecurity platform.
    You can also refer to the list of all the Wazuh rules mapped with MITRE techn[iques
    against Sysmon events here: https://github.com/socfortress/Wa](https://github.com/socfortress/Wazuh-Rules/tree/main/Windows_Sysmon)zuh-Rules/tree/main/Windows_Sysmon.
    In this section, we will cover some of the important Sysmon events, as mentioned
    here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sysmon** – 一款 Windows Sysinternals 工具 – 提供了系统相关活动的深入视图。Sysmon 帮助我们检测广泛的活动，如进程创建、文件创建与修改、注册表更改、驱动加载、DLL
    加载、命名管道创建、进程访问和 DNS 查询日志记录。为了扩展 Wazuh 的检测能力，我们需要构建一个自定义 Wazuh 规则来生成警报。总共有 30 个
    Sysmon 事件，如微软官网所述（[https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon](https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon)）。不过，我们将涵盖与一些特定
    MITRE ATT&CK 技术关联的最重要的 Sysmon 事件。这些规则参考了 SOCFortress 官方 GitHub 账户 – 一个基于 SaaS
    的网络安全平台。你也可以参考以下链接，查看所有与 MITRE 技术关联的 Wazuh 规则列表：[https://github.com/socfortress/Wazuh-Rules/tree/main/Windows_Sysmon](https://github.com/socfortress/Wazuh-Rules/tree/main/Windows_Sysmon)。在本节中，我们将介绍一些重要的
    Sysmon 事件，如下所示：'
- en: 'Sysmon Event 1: Process Creation'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 1：进程创建
- en: 'Sysmon Event 2: Process changed a File Creation Time'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 2：进程更改了文件创建时间
- en: 'Sysmon Event 3: Network Connection'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 3：网络连接
- en: 'Sysmon Event 7: Image loaded'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 7：加载的映像
- en: 'Sysmon Event 10: Process Access'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 10：进程访问
- en: 'Sysmon Event 11: File Creation'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 11：文件创建
- en: 'Sysmon Event 12: Registry Event (Object create and delete)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 12：注册表事件（对象创建与删除）
- en: 'Sysmon Event 13: Registry Event (Value Set)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 13：注册表事件（值设置）
- en: 'Sysmon Event 14: Registry Event (Key and Value Rename)'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 14：注册表事件（键和值重命名）
- en: 'Sysmon Event 15: File Creation StreamHash'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 15：文件创建 StreamHash
- en: 'Sysmon Event 17: Pipe Creation'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 17：管道创建
- en: 'Sysmon Event 18: Pipe Event'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 18：管道事件
- en: 'Sysmon Event 22: DNS Request'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sysmon 事件 22：DNS 请求
- en: 'Sysmon Event 1: Process Creation'
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 1：进程创建
- en: 'A Wazuh rule for the detection of a *Process Creation* event allows the security
    team to monitor suspicious unauthorized processes being executed and is written
    as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Wazuh 规则用于检测 *进程创建* 事件，帮助安全团队监控可疑的未经授权的进程执行，其写法如下：
- en: '[PRE10]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here, we have the following:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<if_sid>61603</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200401` will be triggered only when the parent rule
    `61603` matches. Rule ID `61603` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61603</if_sid>`：`<if_sid>` 标签作为触发规则的前提条件。在这种情况下，规则 `200401` 仅在父规则
    `61603` 匹配时触发。规则 ID `61603` 已在 Wazuh 管理器中的文件 `0595-win-sysmon_rules.xml` 下创建。'
- en: 'Sysmon Event 2: Process changed a File Creation Time'
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 2：进程更改了文件创建时间
- en: 'The File Creation event of the Sysmon module detects the creation of potentially
    infected files or unexpected file changes, providing insights into file-based
    malware threats. The custom Wazuh rule for Sysmon Event 2 can be created as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 模块的文件创建事件检测潜在感染的文件或意外的文件更改，提供有关基于文件的恶意软件威胁的见解。Sysmon 事件 2 的自定义 Wazuh
    规则可以如下创建：
- en: '[PRE11]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Here, we have the following:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<if_sid>61604</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200402` will be triggered only when the parent rule
    `61604` matches. Rule ID `61604` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61604</if_sid>`：`<if_sid>` 标签作为触发规则的前提条件。在这种情况下，规则 `200402` 仅在父规则
    `61604` 匹配时触发。规则 ID `61604` 已在 Wazuh 管理器中的文件 `0595-win-sysmon_rules.xml` 下创建。'
- en: 'Sysmon Event 3: Network Connection'
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 3：网络连接
- en: 'Sysmon Event 3 is generated when it detects any unusual or unauthorized network
    connections. To detect such a network connection, we can create a custom Wazuh
    rule, as shown here:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 事件 3 在检测到任何异常或未经授权的网络连接时生成。 要检测此类网络连接，我们可以创建一个自定义的 Wazuh 规则，如下所示：
- en: '[PRE12]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here, we have the following:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<if_sid>61605</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200403` will be triggered only when the parent rule
    `61605` matches. Rule ID `61605` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61605</if_sid>`：`<if_sid>` 标签用作触发规则的先决条件。 在本例中，仅当父规则 `61605` 匹配时，规则
    `200403` 才会被触发。 规则 ID `61605` 已经在 Wazuh 管理器中的文件名 `0595-win-sysmon_rules.xml` 下创建。'
- en: 'Sysmon Event 7: Image loaded'
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 7：图像加载
- en: 'The Image Loaded event is generated when malicious code is injected into a
    normal process. The Wazuh rule to detect such events is shown here:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当恶意代码注入到正常进程中时，将生成图像加载事件。 Wazuh 规则用于检测此类事件如下：
- en: '[PRE13]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here, we have the following:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<if_sid>61609</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200404` will be triggered only when the parent rule
    `61609` matches. Rule ID `61609` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61609</if_sid>`：`<if_sid>` 标签用作触发规则的先决条件。 在本例中，仅当父规则 `61609` 匹配时，规则
    `200404` 才会被触发。 规则 ID `61609` 已经在 Wazuh 管理器中的文件名 `0595-win-sysmon_rules.xml` 下创建。'
- en: 'Sysmon Event 10: Process Access'
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 10：进程访问
- en: 'The Process Access event helps the security team to detect suspicious activities
    such as process memory modification or injection, often linked to an advanced
    attack chain. To visualize such events, the following Wazuh rule needs to be created:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 进程访问事件帮助安全团队检测可疑活动，如进程内存修改或注入，通常与高级攻击链相关。 要可视化此类事件，需要创建以下 Wazuh 规则：
- en: '[PRE14]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here, we have the following:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<if_sid>61612</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200405` will be triggered only when the parent rule
    `61612` matches. Rule ID `61612` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61612</if_sid>`：`<if_sid>` 标签用作触发规则的先决条件。 在本例中，仅当父规则 `61612` 匹配时，规则
    `200405` 才会被触发。 规则 ID `61612` 已经在 Wazuh 管理器中的文件名 `0595-win-sysmon_rules.xml` 下创建。'
- en: 'Sysmon Event 11: File Creation'
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 11：文件创建
- en: 'The File Creation event provides redundancy for file creation monitoring and
    helps provide maximum coverage for file-based malware threats. A Wazuh rule to
    detect such events can be created, as shown here:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 文件创建事件为文件创建监控提供了冗余，并帮助提供了面向基于文件的恶意软件威胁的最大覆盖范围。 可以创建一个 Wazuh 规则来检测此类事件，如下所示：
- en: '[PRE15]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Here, we have the following:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容：
- en: '`<if_sid>61613</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200406` will be triggered only when the parent rule
    `61613` matches. Rule ID `61609` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61613</if_sid>`：`<if_sid>` 标签用作触发规则的先决条件。 在本例中，仅当父规则 `61613` 匹配时，规则
    `200406` 才会被触发。 规则 ID `61609` 已经在 Wazuh 管理器中的文件名 `0595-win-sysmon_rules.xml` 下创建。'
- en: 'Sysmon Event 12: Registry Event (Object create and delete)'
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 12：注册表事件（对象创建和删除）
- en: 'Sysmon Event 12 captures logs when a new registry key or subkey is created
    or an existing one is deleted. This is useful for detecting unauthorized changes
    to the registry, which may indicate the presence of file-less malware. A Wazuh
    rule can be created to detect such events, as shown here:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 事件 12 在创建新的注册表键或子键或删除现有键时捕获日志。 这对于检测未经授权的注册表更改非常有用，这可能表明存在无文件恶意软件。 可以创建一个
    Wazuh 规则来检测此类事件，如下所示：
- en: '[PRE16]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Here, we have the following
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有以下内容
- en: '`<if_sid>61614</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200407` will be triggered only when the parent rule
    `61614` matches. Rule ID `61614` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61614</if_sid>`：`<if_sid>` 标签用作触发规则的先决条件。 在本例中，仅当父规则 `61614` 匹配时，规则
    `200407` 才会被触发。 规则 ID `61614` 已经在 Wazuh 管理器中的文件名 `0595-win-sysmon_rules.xml` 下创建。'
- en: 'Sysmon Event 13: Registry Event(Value Set)'
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 13：注册表事件（值设置）
- en: 'Sysmon Event 13 is triggered when a new value is set, or an existing value
    is modified within a registry key. This event is important to detect changes related
    to malware persistence or privilege escalation techniques. A Wazuh rule can be
    created to detect such an event, as shown here:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 事件 13 在设置新值或修改现有值时触发，发生在注册表键内。这一事件对于检测与恶意软件持久性或权限升级技术相关的变化至关重要。可以创建 Wazuh
    规则来检测此类事件，如下所示：
- en: '[PRE17]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Here, we have the following:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<if_sid>61615</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200408` will be triggered only when the parent rule
    `61615` matches. Rule ID `61615` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61615</if_sid>`：`<if_sid>` 标签用于触发规则的必要条件。在这种情况下，规则 `200408` 只有在父规则
    `61615` 匹配时才会触发。规则 ID `61615` 已在 Wazuh 管理器中创建，文件名为 `0595-win-sysmon_rules.xml`。'
- en: '`<field name="win.eventdata.RuleName">^technique_id=T1546.011,technique_name=Application
    Shimming$</field>`: The `<field>` tag is used as a requisite to trigger the rule.
    It will check for a match in the content of a field extracted by the decoder.
    In this case, it will check whether the `win.eventdata.RuleName` log field has
    the `technique_id=T1546.011,technique_name=Application Shimming` `l` keywords.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.eventdata.RuleName">^technique_id=T1546.011,technique_name=Application
    Shimming$</field>`：`<field>` 标签用于触发规则的必要条件。它将检查由解码器提取的字段内容是否匹配。在这种情况下，它将检查 `win.eventdata.RuleName`
    日志字段是否包含 `technique_id=T1546.011,technique_name=Application Shimming` `l` 关键字。'
- en: 'Sysmon Event 14: Registry Event(Key and Value Rename)'
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 14：注册表事件（键和值重命名）
- en: 'Sysmon Event 14 is triggered when a registry key or value is renamed. These
    techniques can be used by advanced attackers to evade anti-malware detection or
    disrupt the system. A Wazuh rule can be created to detect such events, as written
    here:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 事件 14 在注册表键或值重命名时触发。这些技术可以被高级攻击者用来逃避反恶意软件检测或破坏系统。可以创建 Wazuh 规则来检测此类事件，如此处所写：
- en: '[PRE18]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here, we have the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<if_sid>61616</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200409` will be triggered only when the parent rule
    `61615` matches. Rule ID `61615` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61616</if_sid>`：`<if_sid>` 标签用于触发规则的必要条件。在这种情况下，规则 `200409` 只有在父规则
    `61615` 匹配时才会触发。规则 ID `61615` 已在 Wazuh 管理器中创建，文件名为 `0595-win-sysmon_rules.xml`。'
- en: '`<field name="win.eventdata.RuleName">^technique_id=T1546.011,technique_name=Application
    Shimming$</field>`: The `<field>` tag is used as a requisite to trigger the rule.
    It will check for a match in the content of a field extracted by the decoder.
    In this case, it will check whether the `win.eventdata.RuleName` log field has
    the `technique_id=T1546.011,technique_name=Application Shimming` `l` keyword.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.eventdata.RuleName">^technique_id=T1546.011,technique_name=Application
    Shimming$</field>`：`<field>` 标签用于触发规则的必要条件。它将检查由解码器提取的字段内容是否匹配。在这种情况下，它将检查 `win.eventdata.RuleName`
    日志字段是否包含 `technique_id=T1546.011,technique_name=Application Shimming` `l` 关键字。'
- en: 'Sysmon Event 15: File Creation StreamHash'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 15：文件创建 StreamHash
- en: 'Sysmon Event 15 captures the file creation activities with the hash of the
    file. To create a Wazuh rule to detect such events, we can create a custom rule,
    as shown here:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 事件 15 捕获带有文件哈希的文件创建活动。要创建 Wazuh 规则以检测此类事件，我们可以创建一个自定义规则，如下所示：
- en: '[PRE19]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here, we have the following:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<if_sid>61617</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200410` will be triggered only when the parent rule
    `61617` matches. Rule ID `61617` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61617</if_sid>`：`<if_sid>` 标签用于触发规则的必要条件。在这种情况下，规则 `200410` 只有在父规则
    `61617` 匹配时才会触发。规则 ID `61617` 已在 Wazuh 管理器中创建，文件名为 `0595-win-sysmon_rules.xml`。'
- en: '`<field name="win.eventdata.RuleName">^technique_id=T1089,technique_name=Drive-by
    Compromise$</field>`: The `<field>` tag is used as a requisite to trigger the
    rule. It will check for a match in the content of a field extracted by the decoder.
    In this case, it will check whether the `win.eventdata.RuleName` log field has
    the `technique_id=T1089,technique_name=Drive-by Compromise` `l` keyword.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.eventdata.RuleName">^technique_id=T1089,technique_name=Drive-by
    Compromise$</field>`：`<field>` 标签用于触发规则的必要条件。它将检查由解码器提取的字段内容是否匹配。在这种情况下，它将检查 `win.eventdata.RuleName`
    日志字段是否包含 `technique_id=T1089,technique_name=Drive-by Compromise` `l` 关键字。'
- en: 'Sysmon Event 17: Pipe Creation'
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 17：管道创建
- en: 'Sysmon Event 17 records the creation of named pipes, which allows for inter-process
    communication on a system. This helps to identify any suspicious activities related
    to the setting up of named pipes. A custom Wazuh rule can be built to detect such
    events, as shown here:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 事件 17 记录命名管道的创建，这允许在系统中进行进程间通信。这有助于识别与设置命名管道相关的可疑活动。可以创建自定义 Wazuh 规则来检测此类事件，如下所示：
- en: '[PRE20]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here, we have the following:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<if_sid>61646</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200411` will be triggered only when the parent rule
    `61646` matches. Rule ID `61646` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61646</if_sid>`：`<if_sid>` 标签作为触发规则的必要条件。在这种情况下，只有当父规则 `61646` 匹配时，规则
    `200411` 才会被触发。规则 ID `61646` 已在 Wazuh 管理器中创建，文件名为 `0595-win-sysmon_rules.xml`。'
- en: '`<field name="win.eventdata.RuleName">^technique_id=T1021.002,technique_name=SMB/Windows
    Admin Shares$</field>`: The `<field>` tag is used as a requisite to trigger the
    rule. It will check for a match in the content of a field extracted by the decoder.
    In this case, it will check whether the `win.eventdata.RuleName` log field has
    the `"technique_id=T1021.002,technique_name=SMB/Windows Admin` `Shares` keyword.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.eventdata.RuleName">^technique_id=T1021.002,technique_name=SMB/Windows
    Admin Shares$</field>`：`<field>` 标签作为触发规则的必要条件。它将检查解码器提取的字段内容是否匹配。在这种情况下，它将检查
    `win.eventdata.RuleName` 日志字段是否包含 `"technique_id=T1021.002,technique_name=SMB/Windows
    Admin` `Shares` 关键字。'
- en: 'Sysmon Event 18: Pipe Event'
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 18：管道事件
- en: 'Sysmon Event 18 captures additional information about pipes, such as opening,
    closing, or reading to named pipes, and helps in detecting anomalous behavior
    in the system. A Wazuh rule can be created to detect such events, as written here:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 事件 18 捕获有关管道的额外信息，例如打开、关闭或读取命名管道，有助于检测系统中的异常行为。可以创建 Wazuh 规则来检测此类事件，如下所示：
- en: '[PRE21]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Here, we have the following
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容
- en: '`<if_sid>61647</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200412` will be triggered only when the parent rule
    `61647` matches. Rule ID `61646` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61647</if_sid>`：`<if_sid>` 标签作为触发规则的必要条件。在这种情况下，只有当父规则 `61647` 匹配时，规则
    `200412` 才会被触发。规则 ID `61646` 已在 Wazuh 管理器中创建，文件名为 `0595-win-sysmon_rules.xml`。'
- en: '`<field name="win.eventdata.RuleName">^technique_id=T1021.002,technique_name=SMB/Windows
    Admin Shares$</field>`: The `<field>` tag is used as a requisite to trigger the
    rule. It will check for a match in the content of a field extracted by the decoder.
    In this case, it will check whether the `win.eventdata.RuleName` log field has
    the `technique_id=T1021.002,technique_name=SMB/Windows Admin` `Shares` keyword.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field name="win.eventdata.RuleName">^technique_id=T1021.002,technique_name=SMB/Windows
    Admin Shares$</field>`：`<field>` 标签作为触发规则的必要条件。它将检查解码器提取的字段内容是否匹配。在这种情况下，它将检查
    `win.eventdata.RuleName` 日志字段是否包含 `technique_id=T1021.002,technique_name=SMB/Windows
    Admin` `Shares` 关键字。'
- en: 'Sysmon Event 22: DNS Request'
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sysmon 事件 22：DNS 请求
- en: 'Sysmon Event 22 records DNS requests initiated by processes on the machine.
    This helps us to monitor requests to potentially malicious servers or commands
    and control centers. A Wazuh rule to detect such DNS requests can created, as
    shown:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Sysmon 事件 22 记录由机器上的进程发起的 DNS 请求。这有助于我们监控可能指向恶意服务器或指挥控制中心的请求。可以创建 Wazuh 规则来检测此类
    DNS 请求，如下所示：
- en: '[PRE22]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Here, we have the following:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下内容：
- en: '`<if_sid>61644</if_sid>`: The `<if_sid>` tag is used as a requisite to trigger
    the rule. In this case, rule `200412` will be triggered only when the parent rule
    `61644` matches. Rule ID `61644` is already created in the Wazuh manager under
    the filename `0595-win-sysmon_rules.xml`.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<if_sid>61644</if_sid>`：`<if_sid>` 标签作为触发规则的必要条件。在这种情况下，只有当父规则 `61644` 匹配时，规则
    `200412` 才会被触发。规则 ID `61644` 已在 Wazuh 管理器中创建，文件名为 `0595-win-sysmon_rules.xml`。'
- en: 'We’ve learned how to create custom Sysmon rules for Wazuh. We can create multiple
    granular rules under each category of Sysmon events. To explore a list of all
    the custom Sysmon rules for Wazuh, you can visit the official SOCFotress GitHub
    repository here: [https://github.com/socfortress/Wazuh-Rules/tree/main/Windows_Sysmon](https://github.com/socfortress/Wazuh-Rules/tree/main/Windows_Sysmon).'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何为 Wazuh 创建自定义 Sysmon 规则。我们可以在每个 Sysmon 事件类别下创建多个粒度化的规则。要查看所有 Wazuh
    自定义 Sysmon 规则的列表，您可以访问官方的 SOCFortress GitHub 仓库：[https://github.com/socfortress/Wazuh-Rules/tree/main/Windows_Sysmon](https://github.com/socfortress/Wazuh-Rules/tree/main/Windows_Sysmon)。
- en: Summary
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have covered some of the important custom Wazuh rules for
    different types of events, such as PowerShell events, Linux Auditd events, Kaspersky
    endpoint protection events, and Sysmon events. In the next chapter, we will cover
    a list of important terms related to the Wazuh platform.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了一些重要的自定义Wazuh规则，涵盖了不同类型的事件，如PowerShell事件、Linux Auditd事件、卡巴斯基端点保护事件和Sysmon事件。在下一章中，我们将介绍与Wazuh平台相关的一些重要术语。
