- en: Chapter 9. Post Exploitation – Cleaning Up Traces
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章 后渗透 - 清除痕迹
- en: We covered the privilege escalation techniques using Metasploit in the previous
    chapter. Next, we move on to the next phase of post exploitation, which is cleaning
    tracks and traces through log deletion and staying undetected by disabling the
    firewall and antivirus systems. In this chapter we will learn how to evade firewall
    and antivirus system alerts once a system is compromised. Another important matter
    for a hacker is how invisibly he performs his work. This is known as cleaning
    tracks and traces; here, a malicious hacker clears logs and any alerts that may
    have been created because of his intrusion.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在上一章中介绍了使用Metasploit进行权限提升的技术。接下来，我们将进入后渗透的下一个阶段，即通过删除日志和禁用防火墙和防病毒系统来清除痕迹和追踪。在本章中，我们将学习在系统被入侵后如何规避防火墙和防病毒系统的警报。对于黑客来说，另一个重要的问题是他的工作有多隐蔽。这就是所谓的清除痕迹和追踪；在这里，一个恶意黑客清除日志和任何可能因他的入侵而创建的警报。
- en: Disabling firewalls and other network defenses
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 禁用防火墙和其他网络防御
- en: Why is a firewall important? A firewall is basically software or hardware that
    blocks unauthorized entry to a system or network. A firewall also keeps track
    of intrusions and security breaches. If the firewall is well-configured, each
    unauthorized entry is blocked and logged in the security logs. It controls the
    incoming and outgoing network traffic and analyzes the data packets; based on
    this, it decides whether it should allow the packet through the firewall or not.
    So if a malicious user is able to exploit a system remotely, the first step should
    be to disable the firewall so that no further alerts can be logged by the firewall,
    which could show evidence of the intrusion.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么防火墙很重要？防火墙基本上是阻止未经授权进入系统或网络的软件或硬件。防火墙还会跟踪入侵和安全漏洞。如果防火墙配置良好，每次未经授权的进入都会被阻止并记录在安全日志中。它控制着进出的网络流量并分析数据包；基于此，它决定是否应该允许数据包通过防火墙。因此，如果恶意用户能够远程利用系统，第一步应该是禁用防火墙，以便防火墙不再记录任何进入的警报，这可能显示入侵的证据。
- en: '![Disabling firewalls and other network defenses](img/3589_09_01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![禁用防火墙和其他网络防御](img/3589_09_01.jpg)'
- en: 'A firewall is classified into three different types:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙分为三种不同类型：
- en: '**Packet Filter Firewall**: These types of firewalls are associated with the
    first three layers of the OSI Model with a little help from the transport layer
    as well, for the source and destination port numbers. When a packet travels towards
    the packet filter firewall, it is analyzed with the help of set rules to match
    against. If the packet passes through the filters of the firewall, it is allowed
    to enter the network, otherwise it is blocked.'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据包过滤防火墙**：这些类型的防火墙与OSI模型的前三层有关，同时也在传输层上有一些帮助，用于源和目的端口号。当数据包朝向数据包过滤防火墙传输时，它会根据设定的规则进行分析匹配。如果数据包通过了防火墙的过滤器，就允许其进入网络，否则就会被阻止。'
- en: '**Stateful Firewall**: These are also called second-generation firewalls. As
    the name suggests, these firewalls work on the states of a network connection.
    Throughout the state, it determines whether to allow the packet into the network
    or not.'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**有状态防火墙**：这些也被称为第二代防火墙。顾名思义，这些防火墙根据网络连接的状态工作。在整个状态期间，它确定是否允许数据包进入网络。'
- en: '**Application Firewall**: These are known as third-generation firewalls. Application
    firewalls work on applications and protocols like HTTP, SMTP, and SSH. They also
    help in detecting if an unwanted protocol is trying to bypass the firewall on
    an allowed port.'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应用防火墙**：这些被称为第三代防火墙。应用防火墙适用于诸如HTTP、SMTP和SSH之类的应用程序和协议。它们还有助于检测不受欢迎的协议是否试图绕过允许端口上的防火墙。'
- en: A firewall is one of the greatest enemies of a malicious user. It stops a malicious
    user from using post-exploitation scripts and creating backdoors to compromised
    systems. Hence an attacker's first objective should be to disable the firewall
    once he compromises the system. In this chapter we will see how we can actually
    disable the firewall through Metasploit and then work on unauthorized zones.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙是恶意用户的最大敌人之一。它阻止恶意用户使用后渗透脚本并在受损系统上创建后门。因此，攻击者的第一个目标应该是在成功入侵系统后禁用防火墙。在本章中，我们将看到如何通过Metasploit实际禁用防火墙，然后处理未经授权的区域。
- en: In this section, we will show you how to disable the firewall in the victim's
    system. Before doing this, we will check the status of the firewall in the victim's
    system; that is, is it enabled or disabled. To do this, we will use a post-exploitation
    script. So type in `run getcountermeasure`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将向您展示如何在受害者系统中禁用防火墙。在这之前，我们将检查受害者系统中防火墙的状态；也就是说，它是启用还是禁用的。为此，我们将使用一个后渗透脚本。因此输入`run
    getcountermeasure`。
- en: '![Disabling firewalls and other network defenses](img/3589_09_02.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![禁用防火墙和其他网络防御](img/3589_09_02.jpg)'
- en: We can see in the preceding screenshot that the firewall is enabled in the victim's
    system. There is another way to check the firewall settings in the victim's system
    – by accessing his/her command prompt. For this, we have to open the victim's
    shell from Meterpreter. The technique to open the shell from Meterpreter has already
    been covered in previous chapters. We access the command prompt and type in `netsh
    firewall show opmode`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在上述截图中看到受害者系统中的防火墙已启用。还有另一种方法可以检查受害者系统中的防火墙设置 - 通过访问他/她的命令提示符。为此，我们必须从Meterpreter中打开受害者的shell。从Meterpreter中打开shell的技术已经在之前的章节中介绍过。我们访问命令提示符并输入`netsh
    firewall show opmode`。
- en: '![Disabling firewalls and other network defenses](img/3589_09_03.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![禁用防火墙和其他网络防御](img/3589_09_03.jpg)'
- en: Now we can check the firewall settings of the system firewall. Let us verify
    it by checking the victim's system to see if the firewall is enabled or not.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以检查系统防火墙的设置。让我们通过检查受害者系统来验证一下，看看防火墙是否已启用。
- en: '![Disabling firewalls and other network defenses](img/3589_09_04.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![禁用防火墙和其他网络防御](img/3589_09_04.jpg)'
- en: We can clearly see that the firewall is in the active state. So now we need
    to disable it. Type in `netsh firewall show opmode mode=disable`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以清楚地看到防火墙处于活动状态。现在我们需要将其禁用。输入`netsh firewall show opmode mode=disable`。
- en: '![Disabling firewalls and other network defenses](img/3589_09_05.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![禁用防火墙和其他网络防御](img/3589_09_05.jpg)'
- en: After executing the previous command, the command will disable the firewall
    permanently. Let us now check the firewall status in the victim's system.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上一个命令后，该命令将永久禁用防火墙。现在让我们检查受害者系统中防火墙的状态。
- en: '![Disabling firewalls and other network defenses](img/3589_09_06.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![禁用防火墙和其他网络防御](img/3589_09_06.jpg)'
- en: Disabling firewalls through VBScript
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过VBScript禁用防火墙
- en: There is another way to disable the firewall, that is, by executing a small
    Visual Basic Script on the victim's system. Firstly, we have to write three lines
    of code in a text file.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一种禁用防火墙的方法，即在受害者系统上执行一个小的Visual Basic脚本。首先，我们必须在文本文件中编写三行代码。
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now save this code with a `.vbs` extension. For example, here we have named
    it as `disable.vbs`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将此代码保存为`.vbs`扩展名。例如，在这里我们将其命名为`disable.vbs`。
- en: '![Disabling firewalls through VBScript](img/3589_09_07.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![通过VBScript禁用防火墙](img/3589_09_07.jpg)'
- en: Our script is ready; now we have to upload this script into the victim's system.
    For uploading, we will use the Meterpreter upload command. Type in `upload <source
    file path> <destination file path>`; for example, in our case, we type in `upload
    root/Desktop/disable.vbs C:\`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的脚本已准备就绪；现在我们必须将此脚本上传到受害者的系统中。要上传，我们将使用Meterpreter上传命令。例如，在我们的案例中，我们输入`upload
    root/Desktop/disable.vbs C:\`。
- en: '![Disabling firewalls through VBScript](img/3589_09_08.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![通过VBScript禁用防火墙](img/3589_09_08.jpg)'
- en: Thus, we have uploaded our `disable.vbs` script into the victim's `C:` drive.
    Let us check in the victim's `C:` drive to see if the script is uploaded or not.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已将我们的`disable.vbs`脚本上传到受害者的`C:`驱动器中。让我们在受害者的`C:`驱动器中检查脚本是否已上传。
- en: '![Disabling firewalls through VBScript](img/3589_09_09.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![通过VBScript禁用防火墙](img/3589_09_09.jpg)'
- en: We can see our `disable.vbs` file in the victim's `C:` drive. We can now execute
    this script remotely. To execute this script, we have to go to this drive by typing
    in `cd C:\`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在受害者的`C:`驱动器中看到我们的`disable.vbs`文件。现在我们可以远程执行此脚本。要执行此脚本，我们必须输入`cd C:\`以进入此驱动器。
- en: '![Disabling firewalls through VBScript](img/3589_09_10.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![通过VBScript禁用防火墙](img/3589_09_10.jpg)'
- en: We are in the victim's `C:` drive now and we can execute the script. So type
    in `disable.vbs` and it will be executed in the victim's system.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在在受害者的`C:`驱动器中，可以执行脚本。因此输入`disable.vbs`，它将在受害者的系统中执行。
- en: '![Disabling firewalls through VBScript](img/3589_09_11.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![通过VBScript禁用防火墙](img/3589_09_11.jpg)'
- en: Let us check if the victim's system firewall has been disabled or not by our
    script.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查受害者系统的防火墙是否已被我们的脚本禁用。
- en: '![Disabling firewalls through VBScript](img/3589_09_12.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![通过VBScript禁用防火墙](img/3589_09_12.jpg)'
- en: Yes, the firewall has been disabled successfully by our VBScript code.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我们的VBScript代码成功禁用了防火墙。
- en: Antivirus killing and log deletion
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 杀毒软件关闭和日志删除
- en: Let us take a look at some of the exploitation issues in an antivirus program.
    There are various things that an attacker needs to take care of after exploiting
    a system. This is important if he wants to play safe and stay undetected. Antivirus
    software is one of the main defense systems for a legitimate user, and if an attacker
    is able to disable it, he has successfully gained full control over the system
    and can stay undetected. Hence it is very important for an attacker to disable
    the antivirus system as a precautionary measure to hide his/her existence. In
    this chapter, we will learn how to disable and kill different antivirus programs
    through Meterpreter post-exploitation scripts.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看杀毒软件中的一些利用问题。攻击者在利用系统后需要注意各种事项。如果他想玩得安全并且不被发现，这一点非常重要。杀毒软件是合法用户的主要防御系统之一，如果攻击者能够禁用它，他就成功地完全控制了系统并且可以不被发现。因此，对于攻击者来说，禁用杀毒软件作为一种预防措施来隐藏自己的存在非常重要。在本章中，我们将学习如何通过Meterpreter后利用脚本禁用和终止不同的杀毒软件。
- en: '![Antivirus killing and log deletion](img/3589_09_13.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件关闭和日志删除](img/3589_09_13.jpg)'
- en: In this section we will see how to stop antiviruses by killing their processes.
    For this purpose, we will use a post-exploitation Meterpreter script known as
    killav. We will show you the source code of the killav script and see how this
    script is able to kill processes of the antivirus program.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到如何通过终止其进程来停止杀毒软件。为此，我们将使用一个名为killav的后利用Meterpreter脚本。我们将展示killav脚本的源代码，并看看该脚本如何能够终止杀毒软件的进程。
- en: Open the `killav.rb` script with a text editor, which is located at `opt/framework/msf3/scripts/killav.rb`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用文本编辑器打开位于`opt/framework/msf3/scripts/killav.rb`的`killav.rb`脚本。
- en: '![Antivirus killing and log deletion](img/3589_09_14.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件关闭和日志删除](img/3589_09_14.jpg)'
- en: We can see a list of the names of processes of well-known antiviruses that are
    included in the killav script. When we run this script, it looks for the process
    name in the victim's system, which should also be included in this script, and
    then kills the process.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到killav脚本中包含的知名杀毒软件的进程名称列表。当我们运行此脚本时，它会在受害者的系统中查找进程名称，该名称也应包含在此脚本中，然后终止该进程。
- en: In our case, the victim is using AVG 2012 Antivirus. So first of all we will
    check the process name for the AVG antivirus from the victim's task manager.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，受害者使用的是AVG 2012杀毒软件。因此，我们首先将从受害者的任务管理器中检查AVG杀毒软件的进程名称。
- en: '![Antivirus killing and log deletion](img/3589_09_15.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件关闭和日志删除](img/3589_09_15.jpg)'
- en: We can see that the process name `avgrsx.exe` is running for the AVG antivirus
    program. Let us check if the process name is included in the `killav.rb` script.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到AVG杀毒软件的进程名称`avgrsx.exe`正在运行。让我们检查进程名称是否包含在`killav.rb`脚本中。
- en: '![Antivirus killing and log deletion](img/3589_09_16.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件关闭和日志删除](img/3589_09_16.jpg)'
- en: We can see that the process name is already included, so the script will work
    successfully. Type in `run killav`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到进程名已经包含在内，所以脚本将成功运行。输入`run killav`。
- en: '![Antivirus killing and log deletion](img/3589_09_17.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_17.jpg)'
- en: We can see from the result in the preceding screenshot that the process has
    been killed. Now we will access the victim's command prompt and type in `tasklist`
    for checking all the processes that are running in the victim's system.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从前面截图的结果中看到，该进程已被终止。现在我们将访问受害者的命令提示符，输入`tasklist`来检查受害者系统中正在运行的所有进程。
- en: '![Antivirus killing and log deletion](img/3589_09_18.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_18.jpg)'
- en: We can also see a lot of processes running in the victim's system; we are now
    going to categorize the processes to see which group they belong to. Type in `tasklist
    /svc`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到受害者系统中运行了很多进程；我们现在要对这些进程进行分类，看它们属于哪个组。输入`tasklist /svc`。
- en: '![Antivirus killing and log deletion](img/3589_09_19.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_19.jpg)'
- en: We are interested only in the AVG Antivirus services and not in the other services
    that are being shown in the task list. So we will refine our search by typing
    in `tasklist /svc | find /I "avg"`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只对AVG杀毒软件服务感兴趣，而不关心任务列表中显示的其他服务。因此，我们将通过输入`tasklist /svc | find /I "avg"`来精确搜索。
- en: '![Antivirus killing and log deletion](img/3589_09_20.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_20.jpg)'
- en: After executing the command as shown in the preceding screenshot, we can see
    that only the AVG-related processes are being shown. We have to kill all the processes,
    but the two processes `avgwdsvc.exe` and `AVGIDSAgent.exe` will cause trouble
    at the time of killing. The reason for this trouble is that these are not stoppable
    as seen in the following screenshot. Here, we see the properties of `avgwd` by
    typing in `sc queryex avgwd`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 执行前面截图中显示的命令后，我们可以看到只有与AVG相关的进程被显示出来。我们必须终止所有进程，但两个进程`avgwdsvc.exe`和`AVGIDSAgent.exe`在终止时会引起麻烦。这个麻烦的原因是它们是无法停止的，如下一截图所示。在这里，我们通过输入`sc
    queryex avgwd`来查看`avgwd`的属性。
- en: '![Antivirus killing and log deletion](img/3589_09_21.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_21.jpg)'
- en: You may notice in the state section in the preceding screenshot that this service
    is not stoppable and cannot be paused either. But we can disable this service
    to get rid of our problem.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会注意到前面截图中的状态部分显示，该服务无法停止，也无法暂停。但我们可以禁用此服务来摆脱问题。
- en: Let us check the properties of another process, `AVGIDSAgent`. Type in `sc queryex
    AVGIDSAgent`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查另一个进程`AVGIDSAgent`的属性。输入`sc queryex AVGIDSAgent`。
- en: '![Antivirus killing and log deletion](img/3589_09_22.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_22.jpg)'
- en: We can see the same result here – the service is not stoppable and cannot be
    paused.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里看到相同的结果-该服务无法停止，也无法暂停。
- en: Now we are going to disable the `avgwd` process. Type in `sc config avgwd start=
    disabled`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们要禁用`avgwd`进程。输入`sc config avgwd start= disabled`。
- en: '![Antivirus killing and log deletion](img/3589_09_23.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_23.jpg)'
- en: The `avgwd` service has been disabled as we can see in the preceding screenshot.
    Now let us disable another process, `AVGIDSAgent`. Type in `sc config AVGIDSAgent
    start= disabled`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，`avgwd`服务已被禁用。现在让我们禁用另一个进程`AVGIDSAgent`。输入`sc config AVGIDSAgent start=
    disabled`。
- en: '![Antivirus killing and log deletion](img/3589_09_24.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_24.jpg)'
- en: Now we exit the victim's command prompt and reboot the victim's system by typing
    the `reboot` command in the Meterpreter session.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们退出受害者的命令提示符，并通过在Meterpreter会话中输入`reboot`命令来重启受害者的系统。
- en: '![Antivirus killing and log deletion](img/3589_09_25.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_25.jpg)'
- en: After a successful reboot, we again enter a Meterpreter session in the victim's
    system. Now what we have to do is search for all the AVG processes from the victim's
    tasklist and verify whether the two processes that we had disabled are still running.
    We open the shell and type in `tasklist /svc | find /I "avg"`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 成功重启后，我们再次进入受害者系统的Meterpreter会话。现在我们要做的是搜索受害者的任务列表中的所有AVG进程，并验证我们禁用的这两个进程是否仍在运行。我们打开shell，输入`tasklist
    /svc | find /I "avg"`。
- en: '![Antivirus killing and log deletion](img/3589_09_26.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_26.jpg)'
- en: We can see that the two processes, `avgwd` and `AVGIDSAgent`, are not showing
    up in the preceding screenshot. This means that the processes have been successfully
    disabled. We can easily terminate the other AVG processes. For terminating a process,
    type in `taskkill /F /IM "avg*"`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，`avgwd`和`AVGIDSAgent`这两个进程在前面的截图中没有显示出来。这意味着这些进程已成功被禁用。我们可以轻松终止其他AVG进程。要终止一个进程，输入`taskkill
    /F /IM "avg*"`。
- en: '![Antivirus killing and log deletion](img/3589_09_27.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_27.jpg)'
- en: After executing the command, we can see that all the processes are successfully
    terminated.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 执行命令后，我们可以看到所有进程都已成功终止。
- en: The next phase of clearing tracks will be to clear the system logs. System and
    application logs are events that are logged by the operating system and the applications
    running on it. These have utmost importance from the forensics perspective, as
    they show the state of changes or events that occurred in the system. Any suspicious
    activity is also logged; hence it becomes important for an attacker to clear these
    logs to remain hidden.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 清除痕迹的下一个阶段将是清除系统日志。系统和应用程序日志是由操作系统和运行在其上的应用程序记录的事件。从取证的角度来看，这些事件非常重要，因为它们显示了系统中发生的变化或事件的状态。任何可疑活动也会被记录；因此，对于攻击者来说，清除这些日志以保持隐藏是非常重要的。
- en: '![Antivirus killing and log deletion](img/3589_09_28.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_28.jpg)'
- en: Image taken from [https://paddle-static.s3.amazonaws.com/HR/CleanMyPC-BDJ/CleanMyPC-icon.png](https://paddle-static.s3.amazonaws.com/HR/CleanMyPC-BDJ/CleanMyPC-icon.png)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[https://paddle-static.s3.amazonaws.com/HR/CleanMyPC-BDJ/CleanMyPC-icon.png](https://paddle-static.s3.amazonaws.com/HR/CleanMyPC-BDJ/CleanMyPC-icon.png)
- en: After successfully disabling the firewall and the antivirus, the last thing
    we have to do that is to clean all evidence such as logs in the computer system.
    First we will check in the victim's system using the Event Viewer to see if any
    logs were created or not.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 成功禁用防火墙和杀毒软件后，我们要做的最后一件事就是清理计算机系统中的所有日志等证据。首先，我们将使用事件查看器在受害者系统中检查是否创建了任何日志。
- en: '![Antivirus killing and log deletion](img/3589_09_29.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_29.jpg)'
- en: We can see in the preceding screenshot that there are three logs, classified
    as **Application**, **Security**, and **System**. In the **Application** section,
    we can see that there are 118 events being created. Now we have to clear all these
    logs. For cleaning the logs, we will use the Meterpreter command `clearev`, which
    will wipe all the logs from the victim's system. So type in `clearev`.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在上一个截图中看到有三个日志，分为**应用程序**，**安全**和**系统**。在**应用程序**部分，我们可以看到有118个事件被创建。现在我们必须清除所有这些日志。为了清理日志，我们将使用Meterpreter命令`clearev`，它将从受害者系统中清除所有日志。因此输入`clearev`。
- en: '![Antivirus killing and log deletion](img/3589_09_30.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_30.jpg)'
- en: After executing the command, we may see the result in the preceding screenshot
    – 118 application records and 467 system records have been wiped off. Let us confirm
    this using Event Viewer in the victim's system.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 执行命令后，我们可以在上一个截图中看到结果-已删除了118个应用程序记录和467个系统记录。让我们在受害者系统中使用事件查看器确认一下。
- en: '![Antivirus killing and log deletion](img/3589_09_31.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![杀毒软件杀死和日志删除](img/3589_09_31.jpg)'
- en: We can see that all logs have been successfully deleted from the victim's system.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到所有日志已成功从受害者系统中删除。
- en: Summary
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned the strategies for clearing our tracks and avoiding
    getting caught by the administrator by the use of simple Meterpreter scripts.
    Since firewalls and antiviruses are the main defenses against the attack vectors
    of an attacker, it becomes extremely important for an attacker to pay heed to
    these things. We also came across multiple techniques for disabling a system firewall
    and hence the victim's defenses. We followed the approach of an attacker and were
    able to hack safely into the system by clearing our traces. So, until now, we
    have covered the second phase of post-exploitation, which is one of the most important
    phases in the exploitation process. In the next chapter we will cover the techniques
    of working with backdoors and setting them up on the victim's system for retaining
    permanent access.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了使用简单的Meterpreter脚本清除我们的痕迹并避免被管理员抓住的策略。由于防火墙和杀毒软件是对抗攻击者攻击向量的主要防御手段，攻击者非常重视这些事情。我们还学习了多种禁用系统防火墙和受害者防御的技术。我们按照攻击者的方式，并且成功地清除了我们的痕迹，安全地侵入了系统。因此，到目前为止，我们已经涵盖了渗透测试的第二阶段，这是渗透过程中最重要的阶段之一。在下一章中，我们将介绍与后门合作的技术，并在受害者系统上设置后门以保持永久访问。
- en: References
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'The following are some helpful references that shed further light on some of
    the topics covered in this chapter:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些有用的参考资料，进一步阐明了本章涉及的一些主题：
- en: '[http://en.wikipedia.org/wiki/Firewall_(computing)](http://en.wikipedia.org/wiki/Firewall_(computing))'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/Firewall_(computing)](http://en.wikipedia.org/wiki/Firewall_(computing))'
- en: '[http://pentestlab.wordpress.com/2012/04/06/post-exploitation-disable-firewall-and-kill-antivirus/](http://pentestlab.wordpress.com/2012/04/06/post-exploitation-disable-firewall-and-kill-antivirus/)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://pentestlab.wordpress.com/2012/04/06/post-exploitation-disable-firewall-and-kill-antivirus/](http://pentestlab.wordpress.com/2012/04/06/post-exploitation-disable-firewall-and-kill-antivirus/)'
- en: '[http://www.securitytube.net/video/2666](http://www.securitytube.net/video/2666)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.securitytube.net/video/2666](http://www.securitytube.net/video/2666)'
