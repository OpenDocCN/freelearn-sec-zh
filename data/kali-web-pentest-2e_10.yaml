- en: Mitigation of OWASP Top 10 Vulnerabilities
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OWASP Top 10 漏洞缓解
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍以下配方：
- en: A1 – Preventing injection attacks
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A1 – 防止注入攻击
- en: A2 – Building proper authentication and session management
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A2 – 构建适当的认证和会话管理
- en: A3 – Protecting sensitive data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A3 – 保护敏感数据
- en: A4 – Using XML external entities securely
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A4 – 安全使用 XML 外部实体
- en: A5 – Securing access control
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A5 – 确保访问控制安全
- en: A6 – Basic security configuration guide
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A6 – 基本安全配置指南
- en: A7 – Preventing Cross-Site Scripting
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A7 – 防止跨站脚本攻击（XSS）
- en: A8 – Implementing object serialization and deserialization
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A8 – 实现对象序列化与反序列化
- en: A9 – Where to look for known vulnerabilities on third-party components
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A9 – 在第三方组件中查找已知的漏洞
- en: A10 – Logging and monitoring for web applications' security
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A10 – Web 应用安全的日志记录与监控
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: The goal of every penetration test is to identify the possible weak spots in
    applications, servers, or networks; weak spots that could be an opportunity to
    gain sensitive information or privileged access for an attacker. The reason to
    detect such vulnerabilities is not only to know that they exist and calculate
    the risk attached to them, but also to make an effort to mitigate them or reduce
    them to the minimum risk level.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 每次渗透测试的目标都是识别应用程序、服务器或网络中的潜在薄弱点；这些薄弱点可能是攻击者获取敏感信息或特权访问的机会。检测这些漏洞的原因不仅是为了知道它们的存在并计算与之相关的风险，还要努力减轻这些风险或将其降低到最低风险水平。
- en: In this chapter, we will take a look at some examples and recommendations as
    to how to mitigate the most critical web application vulnerabilities according
    to OWASP as listed at [https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将查看一些示例和建议，了解如何缓解 OWASP 列出的最关键 Web 应用程序漏洞，具体内容可以参考 [https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project)。
- en: A1 – Preventing injection attacks
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A1 – 防止注入攻击
- en: According to OWASP, the most critical type of vulnerability found in web applications
    is the injection of some type of code, such as SQL injection, OS command injection,
    and HTML injection.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 OWASP，Web 应用程序中最严重的漏洞类型是某种类型的代码注入，如 SQL 注入、操作系统命令注入和 HTML 注入。
- en: These vulnerabilities are usually caused by a poor input validation by the application.
    In this recipe, we will cover some of the best practices to use when processing
    user inputs and constructing queries that make use of them.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这些漏洞通常是由于应用程序未进行良好的输入验证引起的。在本配方中，我们将介绍一些在处理用户输入和构建使用这些输入的查询时的最佳实践。
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The first thing to do in order to prevent injection attacks is to properly
    validate inputs. On the server side, this can be done by writing your own validation
    routines, although the best option is using the language''s own validation routines,
    as they are more widely used and tested. A good example is `filter_var` in PHP
    or the validation helper in ASP.NET. For example, an email validation in PHP would
    look similar to this:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 防止注入攻击的第一步是正确验证输入。在服务器端，可以通过编写自定义验证程序来实现，尽管最好的选择是使用语言自带的验证程序，因为它们被广泛使用和测试。一个好的例子是
    PHP 中的 `filter_var` 或 ASP.NET 中的验证助手。例如，PHP 中的邮箱验证类似如下：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'On the client side, validation can be achieved by creating JavaScript validation
    functions, using regular expressions. For example, an email validation routine
    would be as follows:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在客户端，通过创建 JavaScript 验证函数并使用正则表达式来实现验证。例如，邮箱验证程序如下：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For SQL Injection, it is also useful to avoid concatenating input values to
    queries. Instead, you should use parameterized queries, also called prepared statements.
    Each programming language has its own version:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 SQL 注入，避免将输入值与查询拼接也是非常有用的。相反，应该使用参数化查询，也叫准备语句。每种编程语言都有其自己的版本：
- en: 'PHP with MySQLi:'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP 与 MySQLi：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'C#:'
  id: totrans-26
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'C#:'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Java:'
  id: totrans-28
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Following a Defense in Depth approach, it is also useful to restrict the amount
    of damage that can be done in case an injection is successful. To do this, use
    a low-privileged system user to run the database and web servers. Make sure that
    the user that the applications allow to connect to the database server is not
    a database administrator.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遵循深度防御方法，在注入成功的情况下，限制可能造成的损害也是非常有用的。为此，使用低权限的系统用户来运行数据库和 Web 服务器。确保允许应用程序连接到数据库服务器的用户不是数据库管理员。
- en: Disable or delete the stored procedures and commands that allow an attacker
    to execute system commands or escalate privileges, such as `xp_cmdshell` in MS
    SQL Server.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁用或删除允许攻击者执行系统命令或提升权限的存储过程和命令，例如 MS SQL Server 中的`xp_cmdshell`。
- en: How it works...
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The main part of preventing any kind of code injection attack is always a proper
    input validation, both on the client side and the server side.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 防止任何类型代码注入攻击的关键部分始终是正确的输入验证，包括客户端和服务器端的验证。
- en: For SQL Injection, always use parameterized or prepared queries instead of concatenating
    SQL sentences and inputs. Parameterized queries insert function parameters in
    specified places of an SQL sentence, eliminating the need for programmers to construct
    the query themselves by concatenation.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 SQL 注入，始终使用参数化查询或预处理查询，而不是将 SQL 语句与输入拼接在一起。参数化查询将函数参数插入 SQL 语句的指定位置，消除了程序员通过拼接构建查询的需要。
- en: In this recipe, we have used and recommended the language's built-in validation
    functions, but you can create your own if you need to validate a special type
    of input using regular expressions.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们使用并推荐了语言内置的验证函数，但如果需要使用正则表达式验证特殊类型的输入，您也可以创建自己的验证函数。
- en: Apart from performing a correct validation, we also need to reduce the impact
    of the compromise in case somebody manages to inject some code. This is done by
    properly configuring a user's privileges in the context of an operating system
    for a web server and for both the database and OS in the context of a database
    server.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 除了执行正确的验证外，我们还需要在有人成功注入代码的情况下减少影响。这可以通过在操作系统中为 web 服务器、以及在数据库服务器的数据库和操作系统中，正确配置用户权限来实现。
- en: See also
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: 'The most useful tool when it comes to data validation is regular expressions.
    They also make the life of a penetration tester much easier when it comes to processing
    and filtering large amounts of information, so it is very convenient to have a
    good knowledge of them. I would recommend taking a look at the following sites:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据验证方面，最有用的工具是正则表达式。它们还使渗透测试人员在处理和过滤大量信息时的工作变得更加轻松，因此掌握它们非常方便。我建议您查看以下网站：
- en: '[http://www.regexr.com/](http://www.regexr.com/): This is a really good site
    where we can get examples and references and test our own expressions to check
    whether a string matches or not.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.regexr.com/](http://www.regexr.com/): 这是一个非常好的网站，我们可以在这里获取示例和参考资料，测试自己的表达式，以检查字符串是否匹配。'
- en: '[http://www.regular-expressions.info](http://www.regular-expressions.info):
    This site contains tutorials and examples to learn how to use regular expressions.
    It also has a useful reference on the particular implementations of the most popular
    languages and tools.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.regular-expressions.info](http://www.regular-expressions.info)：该网站包含教程和示例，教您如何使用正则表达式。它还提供了有关最流行编程语言和工具的具体实现的有用参考。'
- en: '[http://www.princeton.edu/~mlovett/reference/Regular-Expressions.pdf](http://www.princeton.edu/~mlovett/reference/Regular-Expressions.pdf) (Regular
    Expressions The Complete Tutorial) by Jan Goyvaerts: As its title states, this
    is a very complete tutorial on RegEx, including examples in many languages.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.princeton.edu/~mlovett/reference/Regular-Expressions.pdf](http://www.princeton.edu/~mlovett/reference/Regular-Expressions.pdf)（正则表达式
    完整教程）由 Jan Goyvaerts 编写：正如标题所示，这是一本非常完整的正则表达式教程，包括多种编程语言的示例。'
- en: A2 – Building proper authentication and session management
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A2 – 构建正确的认证和会话管理
- en: Flawed authentication and session management is the second most critical vulnerability
    in web applications nowadays.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 错误的认证和会话管理是如今 web 应用程序中第二大关键漏洞。
- en: Authentication is the process whereby users prove that they are who they say
    they are; this is usually done through usernames and passwords. Some common flaws
    in this area are permissive password policies and security through obscurity (lack
    of authentication in supposedly hidden resources).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 认证是用户证明其身份的过程；通常通过用户名和密码完成。该领域中的一些常见缺陷包括宽松的密码策略和通过模糊化手段的安全性（在所谓隐藏的资源中缺乏认证）。
- en: Session management is the handling of session identifiers of logged in users;
    in web servers, this is done by implementing session cookies and tokens. These
    identifiers can be implanted, stolen, or hijacked by attackers using social engineering,
    Cross-Site Scripting, CSRF, and so on. Hence, a developer must pay special attention
    to how this information is managed.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 会话管理是处理已登录用户会话标识符的过程；在Web服务器中，通常通过实现会话cookie和令牌来完成。攻击者可以使用社交工程、跨站脚本、CSRF等手段植入、窃取或劫持这些标识符。因此，开发者必须特别注意这些信息的管理方式。
- en: In this recipe, we will cover some of the best practices when implementing username/password
    authentication and managing the session identifiers of logged in users.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将介绍在实施用户名/密码认证和管理已登录用户的会话标识符时的一些最佳实践。
- en: How to do it...
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到……
- en: If there is a page, form, or any piece of information in the application that
    should be viewed only by authorized users, make sure that a proper authentication
    is performed before showing it.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果应用程序中有一个页面、表单或任何仅应由授权用户查看的信息，确保在显示之前进行适当的身份验证。
- en: Make sure that usernames, IDs, passwords, and all other authentication data
    are
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保用户名、ID、密码和所有其他认证数据是
- en: case sensitive and unique for each user.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 区分大小写且对每个用户唯一。
- en: 'Establish a strong password policy that forces the users to create passwords
    that fulfill, at minimum, the following requirements:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建立强密码策略，强制用户创建符合以下最基本要求的密码：
- en: Access denied
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问被拒绝
- en: More than 8 characters, preferably 10
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超过8个字符，最好为10个字符
- en: Use of upper-case and lower-case letters
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用大小写字母
- en: Use of at least one numeric character (0-9)
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用至少一个数字字符（0-9）
- en: 'Use of at least one special character (space, !, &, #, %, and so on)'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用至少一个特殊字符（空格、！、&、#、%、等等）
- en: Prefer long, easy-to-remember phrases over short, complex, and unrelated series
    of characters, for example, `This Is an Acceptable Password!` is much stronger
    than `aJk5&$12!`
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优选长且易记的短语，而不是短小、复杂和不相关的字符组合。例如，`This Is an Acceptable Password!` 比 `aJk5&$12!`
    要强得多。
- en: Forbid the username, site name, company name, or their variations (changed case,
    l33t, fragments of them) to be used as passwords.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁止将用户名、站点名称、公司名称或它们的变体（大小写变化、l33t、它们的片段）用作密码。
- en: Forbid the use of passwords available in the *Most common passwords* list at [https://www.teamsid.com/worst-passwords-2017/](https://s13639.pcdn.co/wp-content/uploads/2017/12/Top-100-Worst-Passwords-of-2017a.pdf).
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁止使用[https://www.teamsid.com/worst-passwords-2017/](https://s13639.pcdn.co/wp-content/uploads/2017/12/Top-100-Worst-Passwords-of-2017a.pdf)中的*最常见密码*列表中的密码。
- en: 'Never specify in an error message whether a user exists or not or whether the
    information has the correct format. Use the same generic message for incorrect
    login attempts, non-existent users, names or passwords not matching the pattern,
    and all other possible login errors. Such a message could be as follows:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 永远不要在错误信息中指出用户是否存在，或者信息是否符合正确的格式。对于错误的登录尝试、不存在的用户、用户名或密码不符合模式，以及所有其他可能的登录错误，使用相同的通用消息。这样的消息可以是：
- en: Login information is incorrect
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录信息不正确
- en: Invalid username or password
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无效的用户名或密码
- en: Access denied
  id: totrans-63
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问被拒绝
- en: Passwords must not be stored in clear text format in the database; use a strong
    hashing algorithm, such as SHA-2, scrypt, or bcrypt, which is especially made
    to be hard to crack with GPUs.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 密码不能以明文格式存储在数据库中；应使用强哈希算法，如SHA-2、scrypt或bcrypt，这些算法特别设计用于抵御GPU破解。
- en: When comparing a user input against the password for login, hash the user input
    and then compare both hashing strings. Never decrypt the passwords for comparison
    with a clear text user input.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在将用户输入与密码进行比较时，应先对用户输入进行哈希处理，然后比较两个哈希值。绝不应解密密码与明文用户输入进行比较。
- en: Avoid basic HTML authentication.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 避免使用基本的HTML身份验证。
- en: 'When possible, use multi-factor authentication (MFA), which means using more
    than one authentication factor to log in:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果可能，使用多因素认证（MFA），即使用多个认证因素进行登录：
- en: Something you know (account details or passwords)
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你知道的东西（账户详情或密码）
- en: Something you have (tokens or mobile phones)
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你拥有的东西（令牌或手机）
- en: Something you are (biometrics)
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是的东西（生物识别）
- en: Implement the use of certificates, pre-shared keys, or other password-less authentication
    protocols (OAuth2, OpenID, SAML, or FIDO) when possible.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在可能的情况下，实施证书、预共享密钥或其他无密码认证协议（如OAuth2、OpenID、SAML或FIDO）。
- en: When it comes to session management, it is recommended that you use the language's
    built-in session management system, Java, ASP.NET, and PHP. They are not perfect,
    but definitely provide a well-designed and widely tested mechanism, and they are
    easier to implement than any homemade version that a development team, worried
    by release dates, could make.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在会话管理方面，建议使用语言内建的会话管理系统，如 Java、ASP.NET 和 PHP。它们并不完美，但肯定提供了设计良好且经过广泛测试的机制，并且比任何由开发团队为满足发布日期要求而自制的版本更容易实现。
- en: Always use HTTPS for login and logged in pages—obviously, by avoiding the use
    of SSL and only accepting TLS v1.1, or later, connections.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录和登录后的页面必须始终使用 HTTPS——显然，应该避免使用 SSL，只接受 TLS v1.1 或更高版本的连接。
- en: To ensure the use of HTTPS, **HTTP Strict Transport Security** (**HSTS**) can
    be used. It is an opt-in security feature specified by the web application through
    the use of the Strict-Transport-Security header; it redirects you to the secure
    option when `http://` is used in the URL, and prevents the overriding of the *invalid
    certificate* message, the one that shows when using Burp Suite, for example, [https://www.owasp.org/index.php/HTTP_Strict_Transport_Security](https://www.owasp.org/index.php/HTTP_Strict_Transport_Security).
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为确保使用 HTTPS，可以使用 **HTTP 严格传输安全（HSTS）**。它是一种由 Web 应用程序通过使用 Strict-Transport-Security
    头部指定的自愿启用的安全功能；当 URL 使用 `http://` 时，它会将你重定向到安全选项，并防止覆盖 *无效证书* 消息（例如在使用 Burp Suite
    时显示的那种），[https://www.owasp.org/index.php/HTTP_Strict_Transport_Security](https://www.owasp.org/index.php/HTTP_Strict_Transport_Security)。
- en: Always set HTTPOnly and Secure cookies' attributes.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 始终设置 HTTPOnly 和 Secure cookies 属性。
- en: Set reduced, but realistic, session expiration times—not so long that an attacker
    may be able to reuse a session when the legitimate user leaves, and not so short
    that the user doesn't have the opportunity to perform the tasks that the application
    is intended to perform. Between 15 and 30 minutes is a reasonable expiration time.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置合理但较短的会话过期时间——既不能过长，以至于攻击者能够在合法用户离开后重新使用会话，也不能过短，以至于用户没有机会执行应用程序预期的任务。15 到
    30 分钟之间是一个合理的过期时间。
- en: How it works...
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Authentication mechanisms in web applications are very often reduced to a username/password
    login page. Although not the most secure option, it is the easiest for users and
    developers; when dealing with passwords, their most important aspect is their
    strength.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Web 应用程序中的身份验证机制通常简化为用户名/密码登录页面。虽然这不是最安全的选择，但对于用户和开发人员来说是最简单的；在处理密码时，其最重要的方面是密码的强度。
- en: As we have seen throughout this book, the strength of a password is given by
    how hard it is to break, be it by brute force, dictionary, or guessing. The first
    tips in this recipe are meant to make passwords harder to brute-force by establishing
    a minimum length, and using mixed character sets harder to guess by eliminating
    the more intuitive choices (username, most common passwords, and company name),
    and harder to break if leaked by using strong hashing or encryption when storing
    them.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本书中看到的，密码的强度取决于其破解的难度，无论是通过暴力破解、字典攻击还是猜测。这个小技巧的第一步是通过设定最小长度来增加密码的暴力破解难度，通过使用混合字符集来增加猜测难度，避免使用更直观的选择（如用户名、常见密码和公司名称），以及通过在存储密码时使用强加密或哈希算法来增强密码被泄露后的破解难度。
- en: As for session management, the expiration time, uniqueness, strength of session
    ID (already implemented in the language's in-built mechanisms), and security in
    the cookie settings are the key considerations.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 关于会话管理，过期时间、会话 ID 的唯一性、强度（已在语言内建机制中实现）以及 cookie 设置中的安全性是关键考虑因素。
- en: Probably the most important aspect when talking about authentication security
    probably is that no security configuration or control or strong password is secure
    enough if it can be intercepted and read through a man in the middle attack, so
    the use of a properly configured encrypted communication channel, such as TLS,
    is vital to keep our users' authentication data secure.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论身份验证安全时，可能最重要的一点是，如果安全配置、控制或强密码可以通过中间人攻击被拦截和读取，那么它们都不够安全。因此，使用正确配置的加密通信通道（如
    TLS）对于保持用户的身份验证数据安全至关重要。
- en: See also
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: 'OWASP has a couple of really good pages on authentication and session management,
    as shown in the following list. I absolutely recommend reading and taking them
    into consideration when building and configuring a web application:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP 在身份验证和会话管理方面有几个非常好的页面，以下是相关列表。我强烈推荐在构建和配置 Web 应用程序时阅读并考虑这些页面：
- en: '[https://www.owasp.org/index.php/Authentication_Cheat_Sheet](https://www.owasp.org/index.php/Authentication_Cheat_Sheet)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.owasp.org/index.php/Authentication_Cheat_Sheet](https://www.owasp.org/index.php/Authentication_Cheat_Sheet)'
- en: '[https://www.owasp.org/index.php/Session_Management_Cheat_Sheet](https://www.owasp.org/index.php/Session_Management_Cheat_Sheet)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.owasp.org/index.php/Session_Management_Cheat_Sheet](https://www.owasp.org/index.php/Session_Management_Cheat_Sheet)'
- en: A3 – Protecting sensitive data
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A3 – 保护敏感数据
- en: When an application stores or uses information that is sensitive in some way
    (credit card numbers, social security numbers, health records, passwords, and
    so on), special measures should be taken to protect it, as if it can be compromised,
    it could result in severe reputation, economic, or even legal damage to the organization
    that is responsible for its protection.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当应用程序存储或使用某种敏感信息（如信用卡号码、社会保障号码、健康记录、密码等）时，应该采取特别措施来保护它，因为如果这些信息被泄露，可能会给负责保护这些信息的组织带来严重的声誉、经济甚至法律损害。
- en: The sixth place in the OWASP Top 10 vulnerabilities is sensitive data exposure,
    and it happens when data that should be especially protected is exposed in clear
    text or is protected with weak security measures.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP十大漏洞中的第六位是敏感数据泄露，它发生在应特别保护的数据以明文形式暴露或使用弱安全措施保护时。
- en: In this recipe, we will cover some of the best practices when handling, communicating,
    and storing this type of data.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将涵盖处理、传输和存储此类数据时的一些最佳实践。
- en: How to do it...
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到……
- en: If the sensitive data you use can be deleted after use, do it. It is much better
    to ask users every time for their credit card information than to have it stolen
    in a breach.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您使用的敏感数据在使用后可以删除，请务必删除。每次向用户请求信用卡信息总比在数据泄露时被盗要好得多。
- en: When processing payments, always prefer the use of a payment gateway instead
    of storing such data in your servers. Check [http://ecommerce-platforms.com/ecommerce-selling-advice/choose-payment-gateway-ecommerce-store](http://ecommerce-platforms.com/ecommerce-selling-advice/choose-payment-gateway-ecommerce-store)
    for a review of the top providers.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理支付时，始终优先使用支付网关，而不是将此类数据存储在您的服务器中。请查看[http://ecommerce-platforms.com/ecommerce-selling-advice/choose-payment-gateway-ecommerce-store](http://ecommerce-platforms.com/ecommerce-selling-advice/choose-payment-gateway-ecommerce-store)以获取顶级服务提供商的评测。
- en: If we have the need to store sensitive information, the first protection we
    must
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们需要存储敏感信息，必须首先采取保护措施。
- en: give to it is to encrypt it using a strong encryption algorithm with the corresponding
    strong keys adequately stored. Some recommended algorithms are Twofish, AES, and
    RSA.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给它的最佳方法是使用强加密算法进行加密，并妥善存储相应的强密钥。一些推荐的算法包括Twofish、AES和RSA。
- en: Passwords should be stored in database hashes using one-way hashing functions,
    such as bcrypt, scrypt, or SHA-2.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 密码应以数据库哈希的形式存储，使用单向哈希函数，如bcrypt、scrypt或SHA-2。
- en: 'Ensure that all sensitive documents are only accessible by authorized users;
    don''t store them in the web server''s document root, but in an external directory,
    and access them through programming. If, for some reason, it is necessary to have
    sensitive documents inside the server''s document root, use a `.htaccess` file
    to prevent direct access:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保所有敏感文档仅供授权用户访问；不要将它们存储在Web服务器的文档根目录中，而是存储在外部目录，并通过编程访问它们。如果由于某些原因必须将敏感文档存储在服务器的文档根目录中，请使用`.htaccess`文件防止直接访问：
- en: '[PRE5]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Disable the caching of pages that contain sensitive data. For example, in Apache,
    we can disable the caching of PDF and PNG files by using the following settings
    in `httpd.conf`:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁用缓存包含敏感数据的页面。例如，在Apache中，我们可以通过在`httpd.conf`中使用以下设置来禁用PDF和PNG文件的缓存：
- en: '[PRE6]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Always use secure communication channels to transfer sensitive information,
    namely HTTPS with TLS or FTPS (FTP over SSH) if you allow the uploading of files.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 始终使用安全的通信渠道传输敏感信息，具体来说，如果允许上传文件，应使用HTTPS与TLS或FTPS（FTP over SSH）。
- en: How it works...
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: When it comes to protecting sensitive data, we need to minimize the risk of
    that data being leaked or traded; that's why, correctly encrypting the stored
    information and protecting the encryption keys is the first thing to do. If there
    is no possibility of not storing such data, it is the ideal option.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在保护敏感数据时，我们需要最大限度地减少数据泄露或交易的风险；因此，正确地加密存储的信息并保护加密密钥是首要任务。如果没有不存储此类数据的可能性，这是理想选择。
- en: Passwords should be hashed with a one-way hashing algorithm before storing them
    in the database. This way, if they are stolen, the attacker won't be able to use
    them immediately, and if the passwords are strong and hashed with strong algorithms,
    they won't be able to break them in a realistic time.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 密码在存储到数据库之前应使用单向哈希算法进行哈希处理。这样，如果密码被盗，攻击者将无法立即使用它们；如果密码足够强大，并且使用强哈希算法进行加密，它们也无法在现实时间内被破解。
- en: If we store sensitive documents or sensitive data in the document root of our
    server (`/var/www/html`/ in Apache, for example), we expose such information to
    be downloaded by its URL. So it's better to store it somewhere else and make special
    server-side code to retrieve it when necessary and with a previous authorization
    check.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将敏感文档或敏感数据存储在服务器的文档根目录中（例如在Apache中是`/var/www/html/`），我们就暴露了这些信息，可以通过其URL下载。因此，最好将它们存储在其他位置，并在需要时通过特别的服务器端代码检索，并进行预先授权检查。
- en: Also, pages such as [https://archive.org/](https://archive.org/), WayBackMachine,
    or the Google cache may pose a security problem when the cached files contain
    sensitive information and were not adequately protected in previous versions of
    the application. So it is important to not allow the caching of those kinds of
    documents.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，像[https://archive.org/](https://archive.org/)、WayBackMachine或Google缓存这样的页面，可能会在缓存文件包含敏感信息且在应用程序的早期版本中未得到适当保护时，造成安全问题。因此，重要的是不要允许缓存这些类型的文档。
- en: A4 – Using XML external entities securely
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A4 – 安全使用XML外部实体
- en: '**XML external entity** (**XXE**) attacks have gained popularity in the last
    few years, so that they now appear in the fourth position of the OWASP Top 10
    2017\. XML entity-related vulnerabilities are used by attackers mainly to retrieve
    information from the target system and remotely execute code or system commands
    (XXE Injection), or to cause the interruption of services (XXE Expansion).'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**XML外部实体**（**XXE**）攻击在过去几年里逐渐流行，现已在OWASP 2017年十大漏洞榜单中位列第四。与XML实体相关的漏洞主要被攻击者用来从目标系统中获取信息并远程执行代码或系统命令（XXE注入），或导致服务中断（XXE扩展）。'
- en: In this recipe, we will provide some suggestions on what to do when building
    a web application to prevent including vulnerabilities in the processing of XML
    external entities.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在本方案中，我们将提供一些建议，指导在构建Web应用程序时，如何避免在处理XML外部实体时包含漏洞。
- en: How to do it...
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: If possible, avoid the use of XML and prefer less complex formats, such as JSON.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果可能，避免使用XML，优先考虑使用更简单的格式，例如JSON。
- en: If XML use is mandatory, disable the use of external entities in all parsers
    used by the application.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果XML的使用是强制性的，请在应用程序使用的所有解析器中禁用外部实体的使用。
- en: If a certain functionality requires the use of external entities to load files
    or access remote resources, consider reimplementing the functionality using other
    technologies.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果某个功能需要使用外部实体加载文件或访问远程资源，考虑使用其他技术重新实现该功能。
- en: Always validate data provided by users and third parties on both client and
    server sides. For data in XML format, using a white list of allowed words/elements
    and characters is a good option.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 始终在客户端和服务器端验证用户和第三方提供的数据。对于XML格式的数据，使用允许的单词/元素和字符的白名单是一个不错的选择。
- en: Keep the XML interpreter (usually integrated into the development tools) adequately
    patched and updated to prevent and fix common vulnerabilities.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持XML解释器（通常集成在开发工具中）得到适当的修补和更新，以防止和修复常见的漏洞。
- en: How it works...
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Although XML can be an extremely useful tool for developers when performing
    some tasks, it is not the best format for information exchange in web applications
    these days. This is because of its many features, external entities among them,
    and its extensible nature, which allows for the easy incorporation of objects
    or elements that may include system files and commands.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管XML在开发者执行某些任务时可能是一个非常有用的工具，但如今它不是Web应用程序中信息交换的最佳格式。这是因为XML有许多特性，其中包括外部实体以及其可扩展的特性，这些特性使得它容易包含可能包括系统文件和命令的对象或元素。
- en: XML Parsers allow external entities and other features that may pose a security
    problem, such as Document Type Definitions (DTDs), to be disabled. Check the documentation
    of the parsing engine of your choice for more information on how to do this.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: XML解析器允许禁用外部实体以及其他可能导致安全问题的特性，如文档类型定义（DTD）。请查阅所选解析引擎的文档，了解如何执行此操作。
- en: Being injection attacks, XML-related attacks can be prevented to a great extent
    by performing proper input validation, and as the expected structure is already
    known by the developers, it is possible to implement a whitelisting validation
    scheme that allows only the expected elements and rejects everything else.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 作为注入攻击的一种，XML 相关的攻击可以通过适当的输入验证在很大程度上得到预防，并且由于开发人员已知预期的结构，可以实施一种白名单验证方案，只允许预期的元素并拒绝所有其他内容。
- en: Last in this recipe, XML parsers are often integrated to programming frameworks
    and languages. Ensure that the one that is used doesn't have any published vulnerability
    that could compromise the security of the application.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱的最后，XML 解析器通常会集成到编程框架和语言中。确保所使用的解析器没有任何已公布的漏洞，否则可能会危及应用程序的安全性。
- en: A5 – Securing access control
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A5 – 保护访问控制
- en: In the OWASP Top 10 2013, the A7 vulnerability was *Missing Function Level Access
    Control*. For the new 2017 edition, that vulnerability is integrated into the
    broader *Broken Access Control,* and is ranked in fifth position. This new category
    covers vulnerabilities where an unauthenticated or unauthorized user can access
    restricted information by directly browsing it, or when a low privilege user is
    able to escalate privileges and even improper configurations of CORS policies.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OWASP Top 10 2013 中，A7 漏洞是 *缺失的功能级别访问控制*。在 2017 年的新版本中，该漏洞被整合到更广泛的 *访问控制失效*
    类别中，并排在第五位。这个新类别涵盖了未经认证或未授权的用户可以通过直接浏览访问受限信息，或低权限用户能够提升权限，甚至是 CORS 策略的配置不当等漏洞。
- en: In this recipe, we will take a look at some recommendations to improve the access
    control of our applications.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将了解一些改进应用程序访问控制的建议。
- en: How to do it...
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Assign to users/clients only those privileges that are strictly necessary for
    them to perform their duties and block access to everything else (the principle
    of least privilege).
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅将用户/客户端执行其职责所必需的权限分配给他们，并阻止访问其他一切（最小权限原则）。
- en: Ensure that the workflow's privileges are correctly checked and enforced at
    every step.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在每一步中都正确检查并强制执行工作流的权限。
- en: Deny all access by default and then allow users to perform tasks/access information
    after an explicit verification of authorization.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认拒绝所有访问，然后在明确验证授权后允许用户执行任务/访问信息。
- en: Users, roles, and authorizations should be stored in a flexible media, such
    as a database or a configuration file, so that they can be added, deleted, or
    updated. Do not hardcode them.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户、角色和授权应该存储在灵活的介质中，例如数据库或配置文件，以便它们可以被添加、删除或更新。不要将它们硬编码。
- en: Again, *security through obscurity* is not a good posture to take.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次提醒，*安全通过模糊化*不是一种好的安全策略。
- en: How it works...
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: It is not uncommon for the developers to check for authorization only at the
    beginning of a workflow and assume that the following tasks will be authorized
    for the user. An attacker may try to call a function, URL, or resource that is
    an intermediate step of the flow and achieve it because of a lack of control.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员常常只在工作流的开始时检查授权，并假设后续任务会自动获得用户的授权。攻击者可能会尝试调用工作流中的一个中间步骤的函数、URL 或资源，并且由于缺乏控制，成功地绕过了授权检查。
- en: Concerning privileges, denying all by default is a best practice. If we don't
    know whether certain users are allowed to execute a function, then they are not
    allowed. Turn your privilege tables into grant tables. If there is no explicit
    grant for a user on a function, deny any access.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 关于权限，默认拒绝所有访问是最佳实践。如果我们不确定某些用户是否被允许执行某个功能，那么他们就不应该被允许。将权限表转换为授权表。如果某个用户在某个功能上没有明确的授权，那么就拒绝任何访问。
- en: When assigning permissions to users and/or designing user roles, always follow
    the principle of least privilege ([https://en.wikipedia.org/wiki/Principle_of_least_privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege)).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在为用户分配权限和/或设计用户角色时，始终遵循最小权限原则（[https://en.wikipedia.org/wiki/Principle_of_least_privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege)）。
- en: When building or implementing an access control mechanism for your application's
    functions, store all the grants in a database or in a configuration file (a database
    is a better choice).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在为应用程序的功能构建或实现访问控制机制时，将所有授权存储在数据库或配置文件中（数据库是更好的选择）。
- en: If user roles and privileges are hardcoded, they become harder to maintain and
    to change
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户角色和权限是硬编码的，它们会变得更加难以维护和修改。
- en: or update.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 或更新。
- en: A6 – Basic security configuration guide
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A6 – 基本安全配置指南
- en: Default configurations of systems, including operating systems and web servers,
    are mostly created to demonstrate and highlight their basic or most relevant features,
    not to be secure
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的默认配置，包括操作系统和Web服务器，通常是为了展示和突出其基本或最相关的功能，而非为了保证安全性。
- en: or protect them from attacks.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 或者保护它们免受攻击。
- en: Some common default configurations that may compromise the security are the
    default administrator accounts that are created when the database, web server,
    or CMS was installed and the default administration pages and error messages with
    stack traces, among many others.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一些可能会危及安全的常见默认配置包括数据库、Web服务器或CMS安装时创建的默认管理员账户，以及默认的管理页面和包含堆栈跟踪的错误信息，等等。
- en: 'In this recipe, we will cover the fifth most critical vulnerability in the
    OWASP top 10:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本篇中，我们将讨论OWASP前十大最严重漏洞中的第五大漏洞：
- en: Security Misconfiguration.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 安全配置错误。
- en: How to do it...
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: If possible, delete all the administrative applications, such as Joomla's admin,
    WordPress' admin, phpMyAdmin, or Tomcat Manager. If that is not possible, make
    them accessible from the local network only; for example, to deny access from
    outside networks to phpMyAdmin in an Apache server, modify the `httpd.conf`
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果可能，删除所有管理应用程序，例如Joomla的管理员、WordPress的管理员、phpMyAdmin或Tomcat Manager。如果不可能，限制它们仅能从本地网络访问；例如，要拒绝外部网络访问Apache服务器中的phpMyAdmin，可以修改`httpd.conf`
- en: 'file (or the corresponding site configuration file):'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文件（或相应的站点配置文件）：
- en: '[PRE7]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will first deny access from all addresses to the `phpmyadmin` directory,
    and second, it will allow any request from the localhost and addresses beginning
    with `192.168`, which are local network addresses.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这将首先拒绝来自所有地址访问`phpmyadmin`目录，其次，它将允许来自本地主机和以`192.168`开头的地址的请求，这些是本地网络地址。
- en: Change all administrators' passwords for all CMSs, applications, databases,
    servers, and frameworks with others that are strong enough. Some examples of
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改所有管理员账户的密码，包括所有CMS、应用程序、数据库、服务器和框架，使用其他足够强大的密码。举例如下：
- en: 'such applications are as follows:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此类应用程序如下：
- en: Cpanel
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cpanel
- en: Joomla
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joomla
- en: WordPress
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: WordPress
- en: PhpMyAdmin
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: PhpMyAdmin
- en: Tomcat manager
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tomcat管理器
- en: Disable all unnecessary or unused server and application features. On a daily
    or weekly basis, new vulnerabilities are appearing on CMSs' optional modules and
    plugins. If your application doesn't require them, there is no need to have them
    active.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 禁用所有不必要或未使用的服务器和应用功能。每天或每周，CMS的可选模块和插件都会出现新的漏洞。如果应用程序不需要它们，就没有必要将其保持启用状态。
- en: Always have the latest security patches and updates. In production environments,
    it may be necessary to set up test environments to prevent leaving the site inoperative
    because of updating an incompatible version.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 始终保持最新的安全补丁和更新。在生产环境中，可能需要设置测试环境，以防止由于更新不兼容的版本而导致网站无法正常工作。
- en: Set up custom error pages that don't reveal tracing information, software versions,
    programming component names, or any other debugging information. If developers
    need to keep a record of errors, or if an identifier is necessary for technical
    support, create an index with a simple ID and the error's description and show
    only the ID to the user. So when the error is reported to a support personnel,
    they will check the index and will know what type of error it was.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置自定义错误页面，不暴露跟踪信息、软件版本、编程组件名称或任何其他调试信息。如果开发人员需要记录错误，或者需要一个标识符来获取技术支持，可以创建一个带有简单ID和错误描述的索引，只向用户显示ID。当错误被报告给支持人员时，他们可以查阅索引，了解错误类型。
- en: Adopt the principle of least privilege. Every user at every level (operating
    system, database, or application), should only be able to access the information
    that is strictly required for a correct operation, never more.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 采用最小特权原则。每个级别的每个用户（操作系统、数据库或应用程序）应该只能访问正常操作所严格要求的信息，绝不能更多。
- en: Taking into account the previous points, build a security configuration baseline
    and apply it to every new implementation, update, or release, and to current systems.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑到以上几点，建立一个安全配置基线，并将其应用于每一个新的实现、更新或发布，以及当前系统。
- en: Enforce periodic security testing or auditing to help detect misconfigurations
    or missing patches.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 强制进行定期的安全测试或审计，以帮助检测配置错误或缺失的补丁。
- en: How it works...
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Talking about security and configuration issues, we are correct if we say *the
    devil is in the detail*. The configuration of a web server, a database server,
    a CMS, or an application should find the point of equilibrium between being completely
    usable and useful and being secure for both users and owners.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 谈到安全性和配置问题时，我们可以说*细节决定成败*。Web服务器、数据库服务器、CMS或应用程序的配置应在完全可用、有效且对用户和所有者都安全之间找到平衡点。
- en: One of the most common misconfigurations in a web application is that it contains
    some kind of a web administration site that is accessible to all of the internet;
    this may not seem to be such a big issue, but if we think that an administrator
    login page is much more attractive to crooks that any contact us form as the former
    gives access to a much higher privilege level, and there are lists of known, common,
    and default passwords for almost every CMS, database, or site administration tool
    we can think of. So our first recommendations focus on not exposing these administrative
    sites to the world, and removing them if possible.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 网络应用程序中最常见的配置错误之一是，它包含某种类型的web管理站点，并且该站点可以被全网访问；这看起来似乎不是一个大问题，但如果我们考虑到管理员登录页面对黑客的吸引力远大于任何“联系我们”表单，因为前者提供了更高的权限级别，并且几乎每种CMS、数据库或站点管理工具都有已知的、常见的、默认的密码列表。那么，我们的首要建议是不要将这些管理站点暴露给外界，并尽可能将其移除。
- en: Also, the use of a strong password and changing those that are installed by
    default (even if they are strong) should be mandatory when publishing an application
    to the internal company's network, and should be much more strenuously enforced
    when publishing to the internet. Nowadays, when we expose a server to the world,
    the first traffic it receives is port scans, login page requests, and login attempts,
    even before the first user knows that the application is active.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在发布应用程序到公司内部网络时，强密码的使用以及更改默认安装的密码（即使它们很强）应当是强制性的，而在发布到互联网上时，应当更加严格地执行此项措施。如今，当我们将服务器暴露给外界时，它接收到的第一波流量通常是端口扫描、登录页面请求和登录尝试，甚至在第一个用户意识到应用程序已经激活之前。
- en: The use of custom error pages helps the security stance because default error
    messages in web servers and web applications show too much information (from an
    attacker's point of view) about the error, the programming languages used, the
    stack trace, the database used, the operating systems, and so on. This information
    should not be exposed because it helps us understand how the application is made
    and gives the names and versions of the software used. With that information,
    an attacker can search for known vulnerabilities and craft a more efficient attack
    process.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 使用自定义错误页面有助于增强安全性，因为web服务器和web应用程序的默认错误信息暴露了过多的信息（从攻击者的角度来看），例如错误内容、使用的编程语言、堆栈跟踪、使用的数据库、操作系统等。这些信息不应被暴露，因为它有助于攻击者理解应用程序的构建方式，并提供所用软件的名称和版本。凭借这些信息，攻击者可以搜索已知的漏洞，制定更高效的攻击策略。
- en: Once we have a server with its resident applications and all services correctly
    configured, we can make a security baseline and apply it to all new servers to
    be configured or updated, as well as to the servers that are currently productive,
    with the proper planning and change management process.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了配置正确的服务器及其常驻应用程序和所有服务，我们可以制定安全基线，并将其应用到所有需要配置或更新的新服务器以及目前在生产环境中的服务器，前提是有适当的规划和变更管理流程。
- en: This configuration baseline needs to be continually tested in order to consistently
    keep improving it and keep it protected from newly discovered vulnerabilities.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 该配置基线需要持续测试，以便不断改进并保护其免受新发现的漏洞威胁。
- en: A7 – Preventing Cross-Site Scripting
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A7 – 防止跨站脚本攻击
- en: Cross-Site Scripting, as seen previously, happens when the data shown to the
    user is not correctly encoded and the browser interprets it as script code and
    executes it. This also has an input validation factor, as a malicious code is
    usually inserted through input variables.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 跨站脚本攻击（Cross-Site Scripting，简称XSS）如前所述，发生在显示给用户的数据没有正确编码，浏览器将其解释为脚本代码并执行时。这也涉及输入验证因素，因为恶意代码通常是通过输入变量插入的。
- en: In this recipe, we will cover the input validation and output encoding required
    for developers to prevent XSS vulnerabilities in their applications.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在本篇教程中，我们将讨论开发者如何进行输入验证和输出编码，以防止应用程序中的XSS漏洞。
- en: How to do it...
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何实现……
- en: The first sign of an application being vulnerable to XSS is that, in the page,
    it reflects the exact input given by the user. So try not to use user-given information
    to build output text.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序容易受到 XSS 攻击的第一个迹象是，页面会直接反映用户输入的内容。所以尽量避免使用用户提供的信息来构建输出文本。
- en: When you need to put user-provided data in the output page, validate such data
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当需要将用户提供的数据放入输出页面时，务必验证这些数据。
- en: to prevent the insertion of any type of code. We already saw how to do that
    in the
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 防止任何类型代码插入。我们已经在 *A1 - 防止注入攻击* 部分看到了如何操作。
- en: '*A1 - Preventing injection attacks* section.'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*A1 - 防止注入攻击* 部分。'
- en: If, for some reason, the user is allowed to input special characters or code
    fragments, sanitize or properly encode the text before inserting it in the output.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果出于某种原因，允许用户输入特殊字符或代码片段，在插入输出之前，需要进行净化或正确编码。
- en: 'For sanitization, `filter_var` can be used in PHP; for example, if you want
    to have only email valid characters in the following string:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于数据净化，PHP 中可以使用`filter_var`；例如，如果你想确保以下字符串只包含有效的电子邮件字符：
- en: '[PRE8]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'For encoding, you can use `htmlspecialchars` in PHP:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 对于编码，可以在 PHP 中使用 `htmlspecialchars`：
- en: '[PRE9]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In .NET, for 4.5 and later implementations, the `System.Web.Security.AntiXss`
    namespace provides the necessary tools. For .NET Framework 4 and earlier,
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 .NET 中，对于 4.5 及更高版本的实现，`System.Web.Security.AntiXss` 命名空间提供了必要的工具。对于 .NET
    Framework 4 及以前的版本，
- en: we can use the Web Protection library at [https://archive.codeplex.com/?p=wpl](https://archive.codeplex.com/?p=wpl).
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们可以使用 Web Protection 库，地址是 [https://archive.codeplex.com/?p=wpl](https://archive.codeplex.com/?p=wpl)。
- en: Also, to prevent stored XSS, encode or sanitize every piece of information before
    storing it and retrieving it from the database.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，为了防止存储型 XSS，在存储和从数据库检索数据之前，必须对每一条信息进行编码或净化。
- en: Don't overlook headers, titles, CSS, and script sections of the page, as they
    are susceptible to being exploited too.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要忽视页面的头部、标题、CSS 和脚本部分，因为它们也容易被利用。
- en: How it works...
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Apart from a proper input validation and not using user inputs as output information,
    sanitization and encoding are key aspects in preventing XSS.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 除了适当的输入验证和不使用用户输入作为输出信息外，数据净化和编码是防止 XSS 攻击的关键方面。
- en: Sanitization means removing the characters that are not allowed from the string;
    this is useful when no special characters should exist in input strings.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 数据净化意味着从字符串中移除不允许的字符；当输入字符串中不应出现特殊字符时，这非常有用。
- en: Encoding converts special characters to their HTML code representations, for
    example, "*&"* to "*&amp;"* or "*<"* to "*&lt;"*. Some applications allow the
    use of special characters in input strings; for them, sanitization is not an option,
    so they should encode the inputs before inserting them into the page and storing
    them in the database.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 编码将特殊字符转换为其 HTML 代码表示，例如，将 "*&*" 转换为 "*&amp;*" 或将 "*<*" 转换为 "*&lt;*"。某些应用允许在输入字符串中使用特殊字符；对于这些应用，净化并不是一个选择，因此在将其插入页面或存储到数据库之前，应对输入进行编码。
- en: See also
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: OWASP has an XSS prevention cheat sheet that is worth reading, which can be
    found at [https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet](https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP 提供了一个 XSS 防护备忘单，值得阅读，网址是 [https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet](https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet)。
- en: A8 – Implementing object serialization and deserialization
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A8 – 实现对象序列化和反序列化
- en: Serialization is the process of transforming a data structure or object into
    a format that can be transmitted, in our case, within an HTTP request or response.
    Deserialization is the opposite process.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 序列化是将数据结构或对象转化为可以传输的格式的过程，在我们的例子中，是通过 HTTP 请求或响应传输。反序列化是相反的过程。
- en: When an object is serialized, let's say, to a JSON string, and sent from a server
    to a client or vice versa, an attacker can see and understand the contents of
    the object and change them so that when the other end receives the serialized
    object and deserializes it to put it back into an object format, it interprets
    the changed content as executable code and executes it. This is the most common
    scenario of a deserialization attack.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个对象被序列化，例如，转换为 JSON 字符串，并从服务器传送到客户端或反向传输时，攻击者可以查看并理解对象的内容，并进行修改，以便当另一端接收到序列化对象并反序列化时，将其还原为对象格式时，它会将更改后的内容解释为可执行代码并执行。这是反序列化攻击中最常见的场景。
- en: In this recipe, we will see the measures that developers should take in order
    to make their applications more secure when implementing a serialization/deserialization
    mechanism.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们将看到开发人员在实现序列化/反序列化机制时应采取的措施，以提高其应用程序的安全性。
- en: How to do it...
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: If possible, you should prefer not to use serialization/deserialization.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果可能，应该尽量避免使用序列化/反序列化。
- en: Implement integrity checks such as digital signatures (MD5, SHA-2) on all serialized
    objects received on both the client and server sides so that if any object has
    been tampered with, it is rejected by the application before any processing or
    deserialization happens.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实施完整性检查，如数字签名（MD5，SHA-2），对客户端和服务器端接收的所有序列化对象进行检查，以便在任何对象被篡改时，应用程序在处理或反序列化之前拒绝该对象。
- en: Run deserialization code for low-privilege users.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以低权限用户运行反序列化代码。
- en: Log and monitor serialization and deserialization processes and all of their
    errors and warnings. Use the monitoring system as an input to the security monitoring
    process in order to generate the appropriate alerts.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记录并监控序列化和反序列化过程及其所有错误和警告。将监控系统作为安全监控过程的输入，以便生成适当的警报。
- en: How it works...
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: As with many other cases that use of a complex technology, if it is not properly
    configured and implemented, it may lead to the weakening of the security posture
    of an application. Evaluate whether such a technology is strictly necessary or
    the best choice available, and if it is not, do not use it.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多使用复杂技术的情况一样，如果没有正确配置和实施，它可能会导致应用程序安全态势的削弱。评估这种技术是否严格必要或是最佳选择，如果不是，请不要使用它。
- en: By hashing or generating a checksum of the outgoing object and checking that
    value when an object is received, the application will be able to identify when
    an object has been modified by the user or some entity in the middle and then
    discard it to prevent security risks.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对传出的对象进行哈希或生成校验和，并在接收对象时检查该值，应用程序将能够识别出用户或中间某个实体是否修改了对象，从而丢弃该对象以防止安全风险。
- en: Following the Security in Depth philosophy, if a serialization attack is successful
    and the attacker gains command execution on our server, the user under which the
    malicious commands are executed should have the lower possible privilege level
    so that no extra damage is made.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循深度安全的哲学，如果序列化攻击成功，并且攻击者在我们的服务器上获得了命令执行权限，则执行恶意命令的用户应具有最低权限级别，以避免造成额外的损害。
- en: In case of a security incident, it is of vital importance that the application
    holds logs of the serialization and deserialization processes so that professionals
    investigating the incident can use them to figure out the attack vectors used
    and further propose ways to prevent a similar incident from happening again.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在发生安全事件时，应用程序必须保存序列化和反序列化过程的日志，以便调查该事件的专业人员可以利用这些日志找出使用的攻击路径，并进一步提出防止类似事件再次发生的措施。
- en: A9 – Where to look for known vulnerabilities on third-party components
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A9 – 在第三方组件中寻找已知漏洞的位置
- en: Today's web applications are no longer the work of a single developer nor of
    a single development team; nowadays, developing a functional, user-friendly, attractive-looking
    web application implies the use of third-party components, such as programming
    libraries, APIs to external services (Facebook, Google, and Twitter), development
    frameworks, and many other components in which programming, testing, and patching
    have very little or no relevance.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 当今的 Web 应用程序不再是单个开发者或单个开发团队的工作；如今，开发一个功能完善、用户友好、外观吸引人的 Web 应用程序意味着使用第三方组件，如编程库、外部服务的
    API（如 Facebook、Google 和 Twitter）、开发框架以及许多其他在编程、测试和修复方面相关性较小或没有相关性的组件。
- en: Sometimes, these third-party components are found vulnerable to attacks and
    they transfer those vulnerabilities to our applications. Many of the applications
    that implement vulnerable components take a long time to be patched, representing
    a weak spot in an entire organization's security. That's why, OWASP classifies
    the use of third-party components with known vulnerabilities as the ninth most
    critical threat to a Web application's security.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，这些第三方组件容易受到攻击，并将这些漏洞传递给我们的应用程序。许多实现了易受攻击组件的应用程序需要较长时间才能进行修复，成为整个组织安全的薄弱环节。这就是为什么
    OWASP 将使用已知漏洞的第三方组件列为 Web 应用程序安全的第九大关键威胁。
- en: In this recipe, we will take a look at where to search to figure out whether
    some component that we are using has known vulnerabilities and we will look at
    some examples of such vulnerable components.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨在哪里搜索，以确定我们使用的某个组件是否存在已知漏洞，并查看一些此类漏洞组件的例子。
- en: How to do it...
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: As a first suggestion, always prefer a known software, which is supported and
    widely used.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个建议是，总是优先选择已知的软件，这些软件得到支持并且被广泛使用。
- en: Stay updated about security updates and patches released for the third-party
    components your application uses.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持更新，了解第三方组件发布的安全更新和补丁。
- en: A good place to start the search for vulnerabilities in some specific component
    is the manufacturer's website; they usually have a *Release Notes* section where
    they publish which bug or vulnerabilities each version corrects. Here, we can
    look for the version we are using (or newer ones) and check whether there is some
    known issue patched or left unpatched.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 寻找某个特定组件漏洞的一个好地方是厂商的网站；它们通常有一个*发行说明*部分，在这里发布每个版本修复了哪些漏洞或缺陷。在这里，我们可以查找我们正在使用的版本（或更新版本），并检查是否有已知问题被修复或仍未修复。
- en: Also, manufacturers often have security advisory sites, such as Microsoft ([https://technet.microsoft.com/library/security/](https://technet.microsoft.com/library/security/)),
    Joomla ([https://developer.joomla.org/security-centre.html](https://developer.joomla.org/security-centre.html)),
    and Oracle ([http://www.oracle.com/technetwork/topics/security/alerts-086861.html](http://www.oracle.com/technetwork/topics/security/alerts-086861.html)).
    We can use these to stay updated about the software we are using in our application.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，厂商通常会有安全咨询网站，例如微软([https://technet.microsoft.com/library/security/](https://technet.microsoft.com/library/security/))，Joomla
    ([https://developer.joomla.org/security-centre.html](https://developer.joomla.org/security-centre.html))，以及Oracle
    ([http://www.oracle.com/technetwork/topics/security/alerts-086861.html](http://www.oracle.com/technetwork/topics/security/alerts-086861.html))。我们可以利用这些网站，随时更新我们在应用程序中使用的软件的安全信息。
- en: There are also vendor-independent sites that are devoted to informing us about
    vulnerabilities and security problems. A very good one, which centralizes information
    from various sources, is CVE Details ([http://www.cvedetails.com/](http://www.cvedetails.com/)).
    Here we can search for almost any vendor or product and list all its known vulnerabilities
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还有一些不依赖于厂商的站点，专门用于告知我们有关漏洞和安全问题的信息。一个非常好的站点是CVE Details ([http://www.cvedetails.com/](http://www.cvedetails.com/))，它汇集了来自不同来源的信息。在这里，我们可以搜索几乎任何厂商或产品，列出其所有已知的漏洞。
- en: (or at least the ones that made it to a CVE number) and results by year, version,
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （或者至少是那些有CV号的）并按年份、版本进行结果排序，
- en: and CVSS score.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 和 CVSS 分数。
- en: Also, sites where hackers publish their exploits and findings are a good place
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，黑客发布其利用代码和发现的地方也是一个不错的选择。
- en: to be informed about vulnerabilities in the software we use. The most popular
    are Exploit DB ([https://www.exploit-db.com/](https://www.exploit-db.com/)), Full
    disclosure mailing list ([http://seclists.org/fulldisclosure/](http://seclists.org/fulldisclosure/)),
    and the files section on Packet Storm ([https://packetstormsecurity.com/files/](https://packetstormsecurity.com/files/)).
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 获取我们使用的软件中的漏洞信息。最流行的网站包括Exploit DB ([https://www.exploit-db.com/](https://www.exploit-db.com/))，完整披露邮件列表([http://seclists.org/fulldisclosure/](http://seclists.org/fulldisclosure/))，以及Packet
    Storm的文件部分([https://packetstormsecurity.com/files/](https://packetstormsecurity.com/files/))。
- en: Once we have found a vulnerability in some of our software components, we must
    evaluate if it is really necessary for our application or can be removed. If it
    can't, we need to plan a patching process, as soon as possible. If there is no
    patch or workaround available and the vulnerability is one of high impact, we
    must start to look for a replacement to that component.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们在某个软件组件中发现漏洞，我们必须评估它是否对我们的应用程序至关重要，或者是否可以删除。如果不能删除，我们需要尽早计划修补过程。如果没有可用的修补程序或替代方案，而且漏洞的影响较大，我们必须开始寻找该组件的替代品。
- en: How it works...
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Before considering the use of a third-party software component in our application,
    we must look for its security information and check whether there is a more stable
    or secure version or alternative to the one we intend to use.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑在我们的应用程序中使用第三方软件组件之前，我们必须查找其安全信息，并检查是否有比我们打算使用的版本更稳定或更安全的版本或替代方案。
- en: Once we have chosen one and have included it in our application, we need to
    keep it updated. Sometimes, it may involve version changes and no backward compatibility,
    but that is a price we have to pay if we want to stay secure, or it may involve
    the implementation of a **Web Application Firewall** (**WAF**) or an **Intrusion
    Prevention System** (**IPS**) to protect against attacks if we cannot update or
    patch a high-impact vulnerability.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们选择并将其集成到应用程序中，我们需要保持其更新。有时，这可能涉及版本变化和不兼容的情况，但如果我们想保持安全，这就是我们必须支付的代价，或者可能涉及实施**Web应用程序防火墙**（**WAF**）或**入侵防御系统**（**IPS**）来防止攻击，如果我们无法更新或修补高影响漏洞的话。
- en: Apart from being useful when performing penetration testing, the exploit download
    and vulnerability disclosure sites can be taken advantage of by a systems administrator
    to know what attacks to expect, how will they be, and how to protect the applications
    from them.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在执行渗透测试时有用外，漏洞下载和漏洞披露网站还可以被系统管理员利用，了解预期会遭遇哪些攻击，攻击方式以及如何保护应用程序免受这些攻击。
- en: A10 – Logging and monitoring for web applications' security
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A10 – 网页应用程序安全的日志记录与监控
- en: Keeping activity logs for applications' analytics or keeping error logs for
    debugging purposes are very different to when the aim is to improve the security
    of the information and the privacy of the users, as Incident Response teams should
    be able to rebuild the path followed by an attacker that manages to breach the
    application's security, and the security monitoring equipment should be able to
    interpret and process logged information so that it is able to generate alerts
    of possible security issues in nearly real time; all of this needs to be done
    while protecting the users' privacy by not storing any sensitive or personally
    identifiable information about them.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 记录应用程序活动日志用于分析或记录错误日志用于调试与为了提高信息安全和用户隐私的目标完全不同，因为事件响应团队应该能够重建攻击者突破应用程序安全的路径，而安全监控设备应该能够解读和处理记录的信息，以便在接近实时的情况下生成潜在安全问题的警报；所有这些都需要在保护用户隐私的同时进行，不记录任何敏感或可识别个人身份的信息。
- en: In this recipe, we will cover the key aspects to consider when designing and
    implementing the logging mechanisms of a web application and its monitoring.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇教程中，我们将涵盖设计和实施网页应用程序日志机制及其监控时需要考虑的关键方面。
- en: How to do it...
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: .Ensure that no sensitive or personally identifiable information of users or
    the company (real names, addresses, passwords, credit card information, phone
    numbers, and so on ) is logged.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保不会记录任何用户或公司敏感或可识别个人身份的信息（如真实姓名、地址、密码、信用卡信息、电话号码等）。
- en: Additional to application-specific operations and events, log all operations
    related to user and account management, for example, creation and deletion of
    users, password change, change of privilege level, login attempts, and logouts.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了应用程序特定的操作和事件外，还需记录所有与用户和账户管理相关的操作，例如用户创建和删除、密码更改、权限级别更改、登录尝试和登出。
- en: Ensure that all logs contain enough context of the event, date and time up to
    milliseconds, user generating the event, system environment conditions relevant
    to the event, and entities involved, such as database records, modules, other
    users, and client used.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保所有日志都包含足够的事件上下文，包括事件的日期和时间（精确到毫秒）、生成事件的用户、与事件相关的系统环境条件，以及涉及的实体，如数据库记录、模块、其他用户和使用的客户端。
- en: Implement a centralized system for gathering, processing, and analyzing logs
    and generating security alerts based on that analysis (**Security Information
    and Event Management** (**SIEM**)).
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现一个集中式系统，用于收集、处理和分析日志，并根据分析结果生成安全警报（**安全信息与事件管理**（**SIEM**））。
- en: Have a team dedicated to monitor and respond to security incidents.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配备专门的团队来监控和应对安全事件。
- en: Implement incident response and incident recovery plans so that when an attack
    is detected or a security breach occurs, you have a standardized procedure to
    follow in order to recover as fast as possible.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实施事件响应和事件恢复计划，以便在检测到攻击或发生安全漏洞时，能够遵循标准化的流程，尽快恢复。
- en: How it works...
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Most of the time, in organizations, logs are not as protected as databases are,
    and when a breach occurs, such logs may contain impressive amounts of sensitive
    information that may allow the attackers to access other systems in the network
    because the log contained usernames and passwords or maybe collect emails and
    use them to execute a phishing campaign, or worst, those logs may contain names,
    addresses, and phone numbers of the application's users. It is very important
    for developers and security architects to keep all information like the one previously
    mentioned out of any logging and monitoring mechanism.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，在组织中，日志的保护程度不如数据库，且当发生泄露时，这些日志可能包含大量敏感信息，这些信息可能允许攻击者访问网络中的其他系统，因为日志中包含了用户名和密码，或者可能收集电子邮件并用于执行钓鱼攻击，最糟糕的是，这些日志可能包含应用程序用户的姓名、地址和电话号码。因此，开发人员和安全架构师必须确保所有类似的信息都不应出现在任何日志和监控机制中。
- en: By logging the appropriate set of events, an application may generate enough
    information for the team monitoring it to identify anomalous behaviors and stop
    an attack at the very moment it is happening. For this to happen, it is also required
    that the logs should contain enough context information, and, more important,
    that there exists a team dedicated to monitor in real time the network activity,
    event logs, security devices such as IDS and firewalls, and software such as antivirus
    and data leak protection agents. Also, such a team should have a well-established
    set of policies and procedures for security incident detection, response, and
    recovery.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 通过记录适当的一组事件，应用程序可以生成足够的信息，使得监控团队能够识别异常行为，并在攻击发生的瞬间将其阻止。为了实现这一点，日志中还必须包含足够的上下文信息，更重要的是，必须有一个专门的团队实时监控网络活动、事件日志、安全设备（如IDS和防火墙）以及软件（如杀毒软件和数据泄漏防护代理）。此外，这样的团队应该有一套完善的安全事件检测、响应和恢复的政策和程序。
