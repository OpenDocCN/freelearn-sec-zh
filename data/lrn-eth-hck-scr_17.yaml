- en: Website Penetration Testing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网站渗透测试
- en: This chapter focuses on the basics that we need to know before we start with
    web application penetration testing. We will start by learning what a website
    actually is, as well as giving an overview of the processing that happens on the
    backend when we request access to a website. Later, we will discuss ways to attack
    a website, and look at a few tools.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍我们在开始进行网站应用渗透测试之前需要了解的基础知识。我们将从了解网站到底是什么开始，并概述当我们请求访问网站时，后台发生的处理过程。随后，我们将讨论攻击网站的方法，并介绍一些工具。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: What is a website?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是网站？
- en: Attacking a website
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击网站
- en: What is a website?
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是网站？
- en: 'Before we can start website penetration testing, we need to understand what
    a website really is. A website is just an application that is installed on a computer.
    The computer might have better specifications than our computer, but fundamentally,
    it works just like any other computer, which means that it has an operating system,
    as well as a number of applications that allow it to act as a web server. The
    two main applications that it has are a web server (for example, Apache), and
    a database (for example, MySQL):'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始网站渗透测试之前，我们需要了解网站究竟是什么。网站只是安装在计算机上的一个应用程序。计算机可能比我们的计算机配置更高，但从根本上讲，它的工作方式和其他计算机一样，这意味着它有操作系统，并且有多个应用程序使它能够作为
    Web 服务器运行。它的两个主要应用程序是 Web 服务器（例如 Apache）和数据库（例如 MySQL）：
- en: The **web server** basically understands and executes the web application. Our
    web application can be written in PHP, Python, or any other programming language.
    The only restriction is that the web server needs to be able to understand and
    execute the web application.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web 服务器** 基本上理解并执行 Web 应用程序。我们的 Web 应用程序可以用 PHP、Python 或任何其他编程语言编写。唯一的限制是
    Web 服务器需要能够理解并执行 Web 应用程序。'
- en: The **database** contains the data that is used by the web application. All
    of this is stored on a computer called the server. The server is connected to
    the internet and has an IP address; anybody can access or ping it.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库** 存储着 Web 应用程序使用的数据。所有这些数据都存储在一台叫做服务器的计算机上。服务器连接到互联网，并具有 IP 地址；任何人都可以访问或
    ping 它。'
- en: 'The web application is executed either by the web server—which is installed
    on our server—or on the target; therefore, any time we request a page or run a
    web application, it''s actually executed on the web server and not on the client''s
    computer. Once it is executed on the web server, the web server sends an HTML
    page—which is ready to read—to the target person or client, as shown in the following
    figure:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Web 应用程序要么由 Web 服务器执行——它安装在我们的服务器上——要么在目标上执行；因此，每当我们请求一个页面或运行一个 Web 应用程序时，它实际上是在
    Web 服务器上执行，而不是在客户端计算机上执行。一旦它在 Web 服务器上执行，Web 服务器就会将准备好的 HTML 页面发送给目标用户或客户端，如下图所示：
- en: '![](assets/fd38b878-27d6-4a50-b16c-9fce0cede976.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fd38b878-27d6-4a50-b16c-9fce0cede976.png)'
- en: Let's say, for example, that we are using a phone or a computer and we want
    to access facebook.com. If we type facebook.com into our URL, it will be translated
    to an IP address using a DNS server. A DNS is a server that translates every name,
    `.com`, `.edu`, or any website with a name or a domain name to its relevant IP
    address. If we request facebook.com, the request goes to a DNS server that then
    translates facebook.com to the IP where Facebook is stored, and then the DNS server
    will go to the IP address of Facebook, execute the page that we wanted using all
    of the applications that we have spoken about, and then just give us a ready HTML
    page.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 比如说，我们正在使用手机或计算机，想要访问 facebook.com。如果我们在 URL 中输入 facebook.com，它将通过 DNS 服务器转换为
    IP 地址。DNS 是一个服务器，它将每个名称（例如 `.com`、`.edu` 或任何带有名称或域名的网站）转换为相关的 IP 地址。如果我们请求 facebook.com，请求会发送到
    DNS 服务器，DNS 服务器将 facebook.com 转换为 Facebook 存储所在的 IP 地址，然后 DNS 服务器会访问 Facebook
    的 IP 地址，使用我们所说的所有应用程序执行所需的页面，然后只给我们一个准备好的 HTML 页面。
- en: Now, what we get back is just a markup written in HTML—which is a markup language—of
    the result of executing the program; the program gets executed on the server,
    and we just get the result. This is very important, because in the future, if
    we wanted to get anything executed on the web server, such as a shell, or a virus
    to be executed on the target computer, then we need to send it in a language that
    the web server understands (for example, PHP), and once we execute it inside the
    server, it will be executed on the target computer.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们得到的只是用HTML编写的标记——它是一种标记语言——是执行程序结果的标记；程序在服务器上执行，我们只是得到了结果。这非常重要，因为将来如果我们想在Web服务器上执行任何东西，例如Shell，或者让病毒在目标计算机上执行，那么我们需要以Web服务器能够理解的语言发送它（例如PHP），一旦我们在服务器内部执行它，它将在目标计算机上执行。
- en: This means that, regardless of the person that accesses the page, the web shell
    that we are going to send (if it is written in PHP or in a language that the server
    understands) will be executed on the server and not on our computer. Therefore,
    it will give us access to the server and not to the person who accessed that server.
    On the other hand, some websites use JavaScript, which is a client-side language.
    If we manage to find a website that allows you to run JavaScript code, then the
    code will be executed by the clients. Even though the code might be injected into
    the web server, it will be executed on the client side, and it will allow us to
    perform attacks on the client computer and not on the server. Hence, it's very
    important to distinguish between a client-side language and a server-side language.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，无论是谁访问页面，我们要发送的Web Shell（如果是用PHP或服务器理解的语言编写的）将在服务器上执行，而不是在我们的计算机上执行。因此，它将让我们访问服务器，而不是访问那个访问了服务器的人。另一方面，一些网站使用JavaScript，这是一种客户端语言。如果我们设法找到一个允许运行JavaScript代码的网站，那么该代码将由客户端执行。即使代码可能被注入到Web服务器中，它也将在客户端执行，并允许我们对客户端计算机进行攻击，而不是对服务器进行攻击。因此，区分客户端语言和服务器端语言是非常重要的。
- en: Attacking a website
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击网站
- en: 'In this section, we will discuss attacking a website. We have two approaches
    for attacking websites:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们将讨论如何攻击一个网站。我们有两种攻击网站的方法：
- en: We can use the methods that we've learned so far about attacking a website.
    Because we know a website is installed on a computer, we can try to attack and
    hack it just like any another computer. We can also try to use server-side attacks
    to see which web server, operating system, or other applications are installed,
    and, if we find any vulnerabilities, to see if we can use any of them to gain
    access to the computer.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以使用迄今为止学到的攻击网站的方法。因为我们知道网站是安装在计算机上的，我们可以像攻击其他计算机一样尝试攻击并入侵它。我们还可以尝试使用服务器端攻击，看看安装了哪些Web服务器、操作系统或其他应用程序，如果我们发现任何漏洞，看看是否可以利用其中的漏洞访问该计算机。
- en: Another way to attack is to use client-side attacks. Because websites are managed
    by humans, there must be humans managing and maintaining these websites. This
    means that, if we manage to hack any of the site's administrators, we will probably
    be able to get their username and password, and from there log in to their admin
    panel or to the **Secure Socket Shell** (**SSH**). Then we will be able to access
    any of the services that they use to manage the website.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一种攻击方式是使用客户端攻击。因为网站是由人类管理的，所以一定有人在管理和维护这些网站。这意味着，如果我们设法黑入网站的任何管理员，我们可能会得到他们的用户名和密码，然后从那里登录他们的管理面板或**安全套接字外壳**（**SSH**）。然后我们将能够访问他们用来管理网站的任何服务。
- en: If both of these methods fail, we can try to test the web application, because
    it is just an application installed on that website. Therefore, our target might
    not actually be the web application—maybe our target is just a person using that
    website, but whose computer is inaccessible. Instead, we can go to the website,
    hack into the website, and from there go to our target person.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这两种方法都失败了，我们可以尝试测试网页应用程序，因为它只是在该网站上安装的一个应用程序。因此，我们的目标可能实际上不是网页应用程序——也许我们的目标仅仅是使用该网站的一个人，但他的计算机是无法访问的。相反，我们可以访问该网站，黑入该网站，然后从那里找到我们的目标人物。
- en: All of these applications and devices are interconnected, and we can use one
    of them to our advantage and then make our way to another place or to another
    computer. In this section, we won't be focusing on server and client-side attacks
    any further. Instead, we'll be learning about testing the security of the web
    application itself.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些应用程序和设备都是相互连接的，我们可以利用其中之一，并通过它进入其他地方或其他计算机。在本节中，我们不会再关注服务器和客户端的攻击，而是将学习如何测试web应用程序本身的安全性。
- en: 'Our target will be a Metasploitable machine, and if we run the `ifconfig` command
    on Metasploitable, we will see that its IP is `10.0.2.4`, as shown in the following
    screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标将是一个Metasploitable机器，如果我们在Metasploitable上运行`ifconfig`命令，我们将看到其IP地址是`10.0.2.4`，如下图所示：
- en: '![](assets/7a4d896c-c851-49ce-8945-3df1a7490e93.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7a4d896c-c851-49ce-8945-3df1a7490e93.png)'
- en: 'If we look inside the `/var/www` folder, we''ll see all the website files stored,
    as shown in the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看`/var/www`文件夹，我们将看到所有网站文件存储在其中，如下图所示：
- en: '![](assets/ee8dcb5c-62db-4194-87b4-22912d93e0e9.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ee8dcb5c-62db-4194-87b4-22912d93e0e9.png)'
- en: 'In the preceding screenshot, we can see that we have our `phpinfo.php` page,
    and we have `mutillidae`, `dvwa`, and `phpMyAdmin`. If we go to the Kali machine,
    or to any machine on the same network, and try to open the browser and go to `10.0.2.4`,
    we will see that we have a website made for Metasploitable, as shown in the following
    screenshot. A website is just an application installed on the web browser, and
    we can access any of the Metasploitable websites and use them to test their security:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的截图中，我们可以看到`phpinfo.php`页面，并且我们有`mutillidae`、`dvwa`和`phpMyAdmin`。如果我们进入Kali机器，或者进入同一网络中的任何机器，尝试打开浏览器并访问`10.0.2.4`，我们将看到为Metasploitable制作的网站，如下图所示。网站只不过是安装在网页浏览器上的一个应用程序，我们可以访问任何Metasploitable网站并用它们来测试其安全性：
- en: '![](assets/52415726-1777-4728-8418-d64ef9d1534f.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/52415726-1777-4728-8418-d64ef9d1534f.png)'
- en: 'Another thing to look at is the DVWA page. It requires a username and a password
    to log in; the Username is `admin` and the Password is `password`. Once we enter
    these credentials, we can log in to it, as shown in the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要查看的是DVWA页面。它需要用户名和密码进行登录；用户名是`admin`，密码是`password`。输入这些凭据后，我们可以登录，如下图所示：
- en: '![](assets/9b97dd53-8723-48d0-a66a-ecb29ee9016f.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9b97dd53-8723-48d0-a66a-ecb29ee9016f.png)'
- en: 'Once logged in, we can modify the security settings by using the DVWA Security
    tab:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，我们可以通过使用DVWA安全选项卡来修改安全设置：
- en: '![](assets/e0d12b51-5e30-4cb9-9d37-868aa758dd78.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e0d12b51-5e30-4cb9-9d37-868aa758dd78.png)'
- en: 'Under the DVWA Security tab, we will set Script Security to low and click on
    Submit:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在DVWA安全选项卡下，我们将Script Security设置为低，并点击提交：
- en: '![](assets/383289f0-6505-4687-98b9-4a74755b9d44.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/383289f0-6505-4687-98b9-4a74755b9d44.png)'
- en: We will keep it set to low in the upcoming sections. Because this is just an
    introductory course, we'll only be talking about the basic ways of discovering
    web application vulnerabilities in both DVWA and the Mutillidae web application.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将保持此设置为低。因为这只是一个入门课程，我们只讨论如何发现DVWA和Mutillidae web应用程序中的基本漏洞。
- en: 'If we go to the Mutillidae web application in the same way that we accessed
    the DVWA web application, we should make sure that our Security Level is set to
    0, as shown in the following screenshot:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们以与访问DVWA web应用程序相同的方式访问Mutillidae web应用程序，我们应该确保将安全级别设置为0，如下图所示：
- en: '![](assets/ab3a3abc-3c90-416d-a1c8-d334b6c6a964.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ab3a3abc-3c90-416d-a1c8-d334b6c6a964.png)'
- en: 'We can toggle Security Level by clicking the Toggle Security option on the
    page:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过点击页面上的切换安全选项来切换安全级别：
- en: '![](assets/36d51b4a-0d61-45ad-8a02-f3787e0cd8ac.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/36d51b4a-0d61-45ad-8a02-f3787e0cd8ac.png)'
- en: Summary
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the concepts and methods that are necessary
    to perform website penetration testing. We began by learning about what a website
    is, and we gave a brief overview of how backend processing takes place when we
    request a particular website on our devices. Then we discussed the techniques
    that are used to attack a website, as well as tools such as Metasploitable and
    DVWA.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了执行网站渗透测试所需的概念和方法。我们首先了解了什么是网站，并简要概述了当我们在设备上请求特定网站时，后端处理的过程。然后，我们讨论了攻击网站的技术以及Metasploitable和DVWA等工具。
- en: In the next chapter, we will be focusing on information gathering and analysis,
    and also how to use this information to exploit the target system.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将重点讲解信息收集与分析，并且如何利用这些信息来攻击目标系统。
