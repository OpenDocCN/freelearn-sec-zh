- en: 'Chapter 3: Designing Secure Information Systems'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章：设计安全信息系统
- en: 'In the previous chapter, we talked about how to protect assets with controls
    that have been applied based on risk, but there is so much more that can be done.
    *What more can be done?*, you ask, bursting from sheer excitement. *Well…*, I
    reply, and softly smile to myself: *What if we just designed the systems with
    security in mind from the beginning?* Your face lights up, and the stars create
    tracers as the world whirls around us.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章，我们讨论了如何通过基于风险应用的控制来保护资产，但还有更多可以做的事情。*还能做些什么呢？*你问道，满怀激动。*好吧……*我回答，轻轻地对自己微笑：*如果我们从一开始就考虑安全性来设计系统会怎么样？*你的脸上顿时闪烁着光芒，星星在空中留下轨迹，世界在我们周围旋转。
- en: No—but seriously, we should be designing our systems with security in mind from
    the beginning. That's what this chapter is about. By the way, I don't mean *design*
    the same way a man (who is still standing on a Segway scooter inside the elevator
    of your building with you) says that he *designed it himself*, his sunglasses
    still on even though you're indoors, thinking he's extremely cool. Yes, it's happened
    to me. I mean it in a way where we plan and **threat-model** the implementation
    and ensure that it is fit for purpose.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 不——但说真的，我们应该从一开始就考虑安全性来设计我们的系统。这就是本章的主题。顺便说一下，我并不是指像一个男人（他和你一起站在电梯里，仍然骑着赛格威滑板车）所说的“我自己设计的”，尽管他明明在室内还戴着太阳镜，一副非常酷的样子。是的，这事儿曾经发生在我身上。我指的是我们应该以一种方式来规划和**威胁建模**实施，确保它符合目的。
- en: Luckily, as you may already know from studying for your fancy cybersecurity
    certifications, that there are certain **secure design principles** that exist,
    allowing for us to utilize collective knowledge in order to improve the overall
    security posture of the system, without causing additional overhead. By the end
    of this chapter, you should be able to utilize these principles and select the
    appropriate controls to effectively manage secure information systems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，正如你从准备高级网络安全认证时可能已经知道的那样，存在一些**安全设计原则**，这些原则允许我们利用集体的知识来改善系统的整体安全态势，而不会带来额外的开销。到本章结束时，你应该能够运用这些原则，并选择适当的控制措施，有效管理安全信息系统。
- en: Additionally, there are **architectural vulnerabilities** that can be avoided
    or mitigated against with controls, and so we will need to go over the best methods
    for that as well. My goal is for you to be comfortable in determining a system's
    security requirements in order to apply the appropriate controls. Beyond that,
    you will be aware of the available security capabilities for the particular information
    systems you are working with.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还存在**架构漏洞**，可以通过控制来避免或减轻，因此我们也需要讨论这些最佳方法。我的目标是让你能够在确定系统的安全需求时感到舒适，从而应用适当的控制措施。除此之外，你将了解你所使用的特定信息系统的可用安全功能。
- en: Furthermore, there is the practice of selecting the appropriate controls. We
    briefly touched on this topic in [*Chapter 2*](B16611_02_Final_JM_ePub.xhtml#_idTextAnchor037),
    *Protecting Security of Assets*, where I talked about **defense in depth** for
    various aspects of developing and running a web app, but I'll expand and try to
    help you be more comfortable with selecting and implementing controls to manage
    and mitigate against vulnerabilities in web-based systems, mobile systems, and
    embedded devices.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有选择适当控制的实践。在[*第二章*](B16611_02_Final_JM_ePub.xhtml#_idTextAnchor037)中，我们简要提到了这个话题，*资产安全保护*，我谈到了针对开发和运行Web应用程序的各个方面的**深度防御**，但我将进一步扩展，并尽力帮助你更舒适地选择和实施控制措施，以管理和减轻Web系统、移动系统以及嵌入式设备中的漏洞。
- en: 'So, to summarize, in this chapter, we are looking at the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，在本章中，我们将讨论以下主题：
- en: Understanding the risks your organization faces
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解你的组织所面临的风险
- en: Best practices in assessing and mitigating vulnerabilities
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估和缓解漏洞的最佳实践
- en: Best practices in designing secure information systems
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计安全信息系统的最佳实践
- en: 'All right—now that we''ve got our bulleted list in the introduction, I ask:
    *Are we ready to start?* Yes, we are ready to start. Let''s begin where we should
    always begin, by trying to understand the risks.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 好了——既然我们在引言中列出了要点，我问：*我们准备好开始了吗？*是的，我们准备好开始了。让我们从我们应该总是开始的地方开始——尝试理解风险。
- en: Understanding the risks your organization faces
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解你的组织所面临的风险
- en: In this section, we will focus our efforts on getting our heads around key concepts
    in the **threats**, **vulnerabilities**, and **methods** of exploiting **information
    systems**. This includes the types of systems we'll be dealing with, the threats
    that **information security professionals** are hired to protect those systems
    against, and the ways those threats exploit vulnerabilities in those systems.
    Only after we understand these key points can we move on to the protection section
    (that sounds like a *Schoolhouse Rock!* song, but do not worry—I'll keep this
    largely nonmusical).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将重点关注理解**威胁**、**漏洞**以及如何利用**信息系统**的**方法**的关键概念。这包括我们将要处理的系统类型、**信息安全专业人员**受雇保护这些系统免受的威胁，以及这些威胁如何利用系统中的漏洞。只有在理解了这些关键点后，我们才能进入保护部分（这听起来像是*Schoolhouse
    Rock!*的歌曲，但别担心——我会保持大体上不涉及音乐的）。
- en: Something I would like to stress is that when we are designing a new system—whether
    this is web-based, mobile, embedded, or what have you—there are processes in place
    that ensure the security of our systems by design, and then there are mitigation
    controls that provide defense-in-depth in the event of the failure of those processes.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我想强调的是，当我们设计一个新系统时——无论是基于网络的、移动的、嵌入式的，还是其他类型——都有一些流程来确保我们的系统从设计上就具备安全性，并且在这些流程失败时，还会有缓解控制措施提供深度防御。
- en: First things first, let's talk about some key concepts around *threats* that
    exist. By understanding the threats that we are facing, we can start to apply
    that knowledge to understand the key concepts in the **security models**. So,
    *"Let's Talk About Threats, Baby"*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们讨论一下关于*威胁*的一些关键概念。通过理解我们所面临的威胁，我们可以开始将这些知识应用于理解**安全模型**中的关键概念。那么，*“让我们来谈谈威胁吧，宝贝”*。
- en: Hey—I said *largely nonmusical*, not *entirely nonmusical*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 嘿——我说的是*大体上不涉及音乐的*，而不是*完全不涉及音乐的*。
- en: Threats, threat actors, and motivations
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 威胁、威胁行为者和动机
- en: The **threats** against your organization can be varied, and understanding these
    is an extremely interesting topic to study. Most importantly, they are crucial
    to understand in order to fully and effectively protect your organization. Remember,
    we can't have a risk without a **threat** and **threat actor**, along with an
    asset and a vulnerability.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对你组织的**威胁**可以是多种多样的，理解这些威胁是一个非常有趣的研究课题。最重要的是，了解这些威胁对于全面有效地保护组织至关重要。记住，我们不能在没有**威胁**和**威胁行为者**，以及资产和漏洞的情况下谈论风险。
- en: As the world is changing to be more and more based in the digital realm, many
    threats to your organization will surface in the form of **cybercrimes**. Cybercrimes
    are no different from non-cyber crimes, in that there are various motivations
    that then lead to acts of crime (providing the threat actor has the capacity to
    have a motivation). The reason I use that stipulation is because there are threats
    that are environmental. No storm has ever had a motivation to destroy a server—that
    I'm fairly certain of.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 随着世界越来越多地转向数字化领域，许多对组织的威胁将以**网络犯罪**的形式浮出水面。网络犯罪与非网络犯罪没有区别，它们都有各种动机，进而导致犯罪行为（前提是威胁行为者有足够的动机）。我使用这一限定词的原因是因为有些威胁是环境性的。没有风暴会有动机去摧毁服务器——这一点我可以非常确定。
- en: Now, these human motivations can vary from instance to instance and sometimes
    require some creative thinking and brainstorming to dream up. What I would like
    to do in this section is to stimulate that part of your brain, and get you thinking
    like a malicious actor. I want you to start to imagine how you would exploit your
    organization if you were to target it. What can you imagine people would want
    from it? What could people stand to gain, and who are those people? Which groups
    don't like your organization, and why is that? Maybe you work at the most benevolent
    organization that has ever existed, and nobody in their right mind would ever
    have any motivation to act against it. In that case, you still need to consider
    the insider risks of somebody accidently clicking a link or deleting a database.
    Not malicious, but still a threat actor, and still a threat that already has a
    certain level of access to your estate. **Insider risks** should always be considered
    when threat-modeling your organization, malicious and non-malicious.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这些人类动机因情况而异，有时需要一些创造性的思维和头脑风暴来激发。我要做的，是在这一部分刺激你大脑的思维方式，让你像恶意行为者一样思考。我希望你开始设想，如果你是目标对象，如何会利用你的组织。你能想象人们会从中获得什么吗？人们可能会获得什么利益，又有哪些人会这么做？哪些群体不喜欢你的组织，为什么？也许你在世界上最仁慈的组织工作，且任何理智的人都不会有动机对其进行攻击。在这种情况下，你仍然需要考虑内鬼风险——某人可能会无意间点击一个链接或删除数据库。虽然不是恶意的，但仍然是一个威胁行为者，且该行为者已经具有一定的访问权限。**内鬼风险**在威胁建模时应该始终考虑，无论是恶意的还是非恶意的。
- en: As you might imagine, I can't really go into every possible motivation we might
    possibly see, but with that said, I can also throw some ideas your way.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能想象的那样，我无法详细讨论所有可能的动机，但我可以为你提供一些想法。
- en: One "group" of motivations your organization may face comprises those that are
    not financial or political in nature. They could include, for example, *thrill-seeking*,
    *joy*, *data hoarding*, or *mastery*. These motivations are essentially based
    on the idea that the malicious actor enjoys the act of hacking, or the "paydirt"
    of the hack itself. Some individuals are more interested in if they can get in,
    or seeing what's inside, rather than how much they can earn by doing so. Maybe
    there are images or videos on a device or server that an attacker has an interest
    in seeing. Maybe your organization has a major security spokesperson with a million
    followers on Twitter who claims your product, a hardware Bitcoin wallet, is "unhackable".
    Researchers around the world are extremely interested in hacking things just to
    hack them, and especially if a major talking head makes a claim such as that.
    They might find your product doesn't wipe the **random-access memory** (**RAM**)
    clear after being rooted, meaning the secret phrase and salt are left in the RAM
    for extraction, and they might post it on Twitter. It brings them joy; it hones
    their craft; it helps them show their mastery while proving that talking head
    wrong.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你的组织可能面临的一种动机“群体”是那些非财务性或非政治性动机的行为者。它们可能包括*寻求刺激*、*快乐*、*数据囤积*或*精通技术*等。这些动机本质上是基于恶意行为者享受黑客行为本身，或享受黑客攻击的“收获”。有些人更关心的是是否能够成功入侵，或者想看看里面是什么，而不是关注入侵能赚多少钱。也许某个设备或服务器上有图像或视频，攻击者想要查看。也许你的组织有一位在Twitter上有百万粉丝的安全发言人，声称你的产品——一款硬件比特币钱包——是“无法破解”的。全球的研究人员非常有兴趣仅仅为了黑客技术本身而进行攻击，尤其是当某个大人物做出类似声明时。他们可能会发现，在被植入root后，你的产品并没有清除**随机存取存储器**（**RAM**），这意味着秘密短语和盐值仍然保留在RAM中，可以被提取出来，他们可能会在Twitter上发布这些信息。这给他们带来了快乐；它磨砺了他们的技艺；它帮助他们展示自己的技术，并证明那个发言人的说法是错的。
- en: Additionally, there are thrill-seekers who just love the chase. It might seem
    strange, but a survey performed by *Thycotic Software* at *BlackHat USA* in 2014
    found that 51% of the hackers surveyed said they were mostly motivated by fun
    or thrill-seeking. They could focus on your organization, just for the thrill
    of it, and the best you can do is to adequately protect your most important assets
    to the level of risk they pose.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一些寻求刺激的人，他们热衷于追逐挑战。虽然这可能看起来很奇怪，但*Thycotic Software*在2014年于*BlackHat USA*上进行的一项调查发现，51%的受访黑客表示，他们的主要动机是为了乐趣或寻求刺激。他们可能会专注于攻击你的组织，仅仅是为了刺激，而你能做的最好的事情，就是根据其风险级别，充分保护你最重要的资产。
- en: Another group of motivations worth discussing centers on politics and **cyberwarfare**,
    such as *hacktivism*, *propaganda*, and *sabotage*. In an era of online political
    discourse going mainstream, with major issues in current events, including a global
    pandemic, US election, and the UK exiting the EU (and those are just in the final
    couple months of 2020), we're facing a skyrocketing level of this type of motivation.
    *Hacktivism* and *sabotage* can be motivations for individuals or groups, all
    the way up to the **state-sponsored actor** level gaining access to (or destroying)
    accounts, systems, and assets they are at odds with. We've also got *propaganda*
    as a motivation, which can yet again be distributed by **sole actors** or groups,
    all the way to the largest imaginable force, which aims to gain control of legitimate
    channels to either filter or promote certain messages.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个值得讨论的动机群体集中在政治和**网络战争**上，例如 *黑客行动*、*宣传* 和 *破坏*。在在线政治话语成为主流的时代，随着当前事件中的重大问题，包括全球大流行、美国大选以及英国脱欧（这些仅仅是在
    2020 年最后几个月的事件），我们正面临这种动机类型的迅速增长。*黑客行动* 和 *破坏* 可以是个人或团体的动机，甚至到**国家支持的行为者**级别，获取（或摧毁）与其对立的账户、系统和资产。我们还有
    *宣传* 作为动机，它可以由**单独行为者**或团体发布，甚至是最大的力量，旨在控制合法渠道，以便过滤或推动特定的信息。
- en: 'Going further into the political sphere, looking at attacks at critical infrastructure
    by outside forces, we can interpret that the motivation for *destruction*, *control*,
    or *intimidation* exists. I am always reminded of the time the Ukrainian government,
    in the midst of a significant cyberattack, tweeted a "this is fine" meme in response,
    as seen here:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步进入政治领域，观察外部力量对关键基础设施的攻击时，我们可以解读出*破坏*、*控制*或*威胁*的动机存在。我总是想起乌克兰政府在遭遇重大网络攻击时，回应时发布的
    "this is fine" 模因，如下所示：
- en: '[https://twitter.com/Ukraine/status/879706437169147906](https://twitter.com/Ukraine/status/879706437169147906)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://twitter.com/Ukraine/status/879706437169147906](https://twitter.com/Ukraine/status/879706437169147906)'
- en: 'This is a screenshot of the tweet from Ukraine''s government:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这是乌克兰政府推文的截图：
- en: '![Figure 3.1 – "This Is Fine" tweet from Ukraine''s government'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.1 – 乌克兰政府的 "This Is Fine" 推文'
- en: '](img/B16611_03_001.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16611_03_001.jpg)'
- en: Figure 3.1 – "This Is Fine" tweet from Ukraine's government
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – 乌克兰政府的 "This Is Fine" 推文
- en: Why were several governmental agencies and private firms in Ukraine targeted?
    I can't be as confident as others have been to say *who* was targeting them, but
    the nature of the attacks implies the attacks fit into the destruction, control,
    or intimidation motivation group, or the hacktivism, propaganda, and sabotage
    motivation group, and was likely an act of cyberwar.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么乌克兰的多个政府机构和私人公司成为攻击目标？我不能像其他人那样自信地说出*谁*在攻击他们，但攻击的性质表明这些攻击符合破坏、控制或威胁动机群体，或者是黑客行动、宣传和破坏动机群体，很可能是一次网络战争行为。
- en: 'Then, finally, we can look toward a motivation rooted in *monetary gain*. This
    could range from an individual finding a way to pilfer funds from a cryptocurrency
    exchange, or a mercenary hacking group spending time and effort in a heist situation,
    like an episode of *Mission: Impossible*. Furthermore, you have **corporate espionage**,
    such as what *The Ketchup Company* was starting to threat-model in [*Chapter 1*](B16611_01_Final_JM_ePub.xhtml#_idTextAnchor013),
    *InfoSec and Risk Management*, where a competitor tries to gain access to precious
    **intellectual property** your organization possesses.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以考虑一个以*金钱利益*为基础的动机。这可以从个人找到方法从加密货币交易所盗取资金，或者一群雇佣黑客在抢劫情境中花费时间和精力，就像*碟中谍*中的一集一样。此外，你还会遇到**企业间谍**，例如*番茄酱公司*在
    [*第一章*](B16611_01_Final_JM_ePub.xhtml#_idTextAnchor013) 中开始进行的威胁建模，*信息安全和风险管理*，其中竞争对手试图获得你公司拥有的宝贵**知识产权**。
- en: There are other competition-based motivations that could be considered, such
    as attempting to gain research information from nonprofits, for example. Honestly,
    the list could just keep going, but as I previously said, that's not the point
    of this section. My goal was to get your mind reeling and to get you to focus
    on who might target your organization, and why they might do so. In that, I can
    almost feel the gears in your head turning, so I think we're done here.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他一些基于竞争的动机也可能会被考虑，例如试图从非营利组织获取研究信息等。老实说，这个清单可能会继续下去，但正如我之前所说，这不是本节的重点。我的目标是让你思考，谁可能成为你组织的目标，为什么他们会这么做。在这个过程中，我几乎能感受到你脑海中的齿轮转动，所以我觉得我们差不多可以结束了。
- en: 'Something you might hear about a lot lately is **advanced persistent threats**,
    or **APTs**. According to *NIST SP 800-39*, an APT is a threat actor that is both
    highly capable and highly motivated, with significant amounts of resources. This
    threat gains and maintains access within an organization''s estate in order to
    exfiltrate information or manipulate operations for an extended period of time.
    The **National Institute of Standards and Technology** (**NIST**) says that they
    adapt to changes that are meant to mitigate against it. My point of view on APTs
    is pretty basic, in comparison to some of the things I''ve read on the topic.
    Most organizations are currently having difficulty protecting their assets against
    a sole 12-year-old who has watched some YouTube videos with titles along the lines
    of "*how to hack*", and even in those videos, the instructor will teach the viewer
    how to do the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最近你可能经常听到的是**高级持续性威胁**，或称**APT**。根据*NIST SP 800-39*，APT是一种威胁行为者，既具有高度的能力，又具有强烈的动机，并拥有大量资源。这种威胁行为者会在组织的环境中获得并保持访问权限，以便在长时间内窃取信息或操控操作。**国家标准与技术研究院**（**NIST**）表示，他们会适应为缓解这些威胁所做的改变。我对APT的看法相对简单，和我读过的某些资料相比算得上是基础。大多数组织目前在保护资产方面正面临困难，尤其是应对那些仅仅是看过一些带有“*如何黑客攻击*”标题的YouTube视频的12岁小孩，即便在这些视频中，讲解员也会教观众如何做以下事情：
- en: Gain access.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取访问权限。
- en: Elevate privileges.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升权限。
- en: Maintain access
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持访问权限。
- en: Exfiltrate information or manipulate operations.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 窃取信息或操控操作。
- en: Remain undetected.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持不被发现。
- en: The only difference here from the YouTube *script-kiddie* and the APT is expertise,
    and funding. All of the other words NIST have used are just the basic steps any
    malicious outsider would take. I prefer to look at threats in the way we did in
    [*Chapter 1*](B16611_01_Final_JM_ePub.xhtml#_idTextAnchor013), *InfoSec and Risk
    Management*. In the case of APTs, we have malicious outsiders that are either
    **group actors** or **state-sponsored actors**, which means we need to consider
    that their ability to gain access and remain undetected is more sophisticated.
    Depending on your organization and its assets, this means that you might have
    a different level of risk that you will need to mitigate.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这里与YouTube上的*脚本小子*和APT的唯一区别是专业知识和资金。NIST使用的其他词语只是任何恶意外部人员所采取的基本步骤。我更喜欢以我们在[*第1章*](B16611_01_Final_JM_ePub.xhtml#_idTextAnchor013)、*信息安全与风险管理*中讨论的方式来看待威胁。在APT的情况下，我们有的是恶意外部人员，可能是**团体行为者**或**国家支持的行为者**，这意味着我们需要考虑他们获得访问权限并保持不被发现的能力更为复杂。根据你的组织和其资产的不同，这意味着你可能需要缓解不同层次的风险。
- en: 'One final remark that I would like to make is this: *Please* keep your *risk
    register* up to date with the appropriate threats and motivations! This isn''t
    only for fun; this is to appropriately protect your organization.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我想做的最后一个备注是：*请*确保你的*风险登记册*与适当的威胁和动机保持更新！这不仅仅是为了娱乐；这是为了有效地保护你的组织。
- en: Vulnerabilities
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 漏洞
- en: Looking over what we've covered in [*Chapter 1*](B16611_01_Final_JM_ePub.xhtml#_idTextAnchor013),
    *InfoSec and Risk Management*, [*Chapter 2*](B16611_02_Final_JM_ePub.xhtml#_idTextAnchor037),
    *Protecting the Security of Assets*, and so far in this chapter, we can say that
    I keep harping on about how "*You can't have a risk without an asset, a threat
    and threat actor, and a vulnerability*". What *is* a vulnerability, though? Have
    we gone into that? Have I taken for granted that you're a walking encyclopedia
    of InfoSec, a fountain of knowledge on every topic?
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾我们在[*第1章*](B16611_01_Final_JM_ePub.xhtml#_idTextAnchor013)、*信息安全与风险管理*、[*第2章*](B16611_02_Final_JM_ePub.xhtml#_idTextAnchor037)、*资产安全保护*中所讨论的内容，以及到目前为止在本章中的内容，我们可以说我一直在重复强调“*没有资产、威胁、威胁行为者和漏洞就没有风险*”。那么，*什么是*漏洞呢？我们有详细讨论过吗？我是不是理所当然地认为你是一个信息安全百科全书，什么话题都知道？
- en: The thing is that the list grows and grows when it comes to "types" of vulnerabilities
    if you get down to a granular level. *Meltdown*, *Thunderclap*, and *Spoiler*
    are some examples of recently discovered hardware security vulnerabilities, but
    explaining how those work will eat up my page count on this chapter, and there
    is simply far too much to cover already. Instead, let's take a couple steps up
    the ladder to view vulnerabilities from a higher level. *ISO/IEC 27005* guides
    us to classify vulnerabilities according to the asset class they are related to.
    This asset class could include *hardware, software, network, personnel, physical,
    and organizational* vulnerabilities, or maybe you have a different vision! Don't
    let me or the **International Organization for Standardization** (**ISO**) pigeonhole
    you with their strict Swiss guidelines—go on and fly! With that said, it *is*
    easier to just use their strict Swiss guidelines.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，如果深入到细节层面，关于“类型”的漏洞列表会越来越长。*Meltdown*、*Thunderclap* 和 *Spoiler* 是一些最近发现的硬件安全漏洞，但解释它们的工作原理会占据本章太多篇幅，而这些内容实在太多了。相反，我们不妨退后几步，从更高的层次来看待漏洞。*ISO/IEC
    27005* 指导我们根据漏洞所涉及的资产类别进行分类。这个资产类别可以包括 *硬件、软件、网络、人员、物理和组织* 漏洞，或者你有不同的见解！不要让我或**国际标准化组织**（**ISO**）的严格瑞士标准限制了你的思维——大胆去飞吧！话虽如此，按照他们严格的瑞士标准来做确实更容易。
- en: You might be totally drawing a blank. "*What kind of vulnerabilities exist for
    each of these, Joseph?*", you might be asking. The problem is, it's such a tremendous
    topic, and part of the reason I am trying to encourage you to brainstorm and consider
    the possibilities yourself is due to the sheer volume of known vulnerabilities
    in the wild. If I go down the road of listing off vulnerabilities and explaining
    them, this book will end up being 1,500 pages long and less entertaining that
    it already is, which I would never want to inflict on anybody, especially somebody
    who is taking their time to read my ramblings.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能完全没有头绪。你可能会问：“**Joseph**，这些每一种漏洞有什么样的存在形式？”问题在于，这是一个庞大的话题，而我之所以鼓励你自己动脑筋并考虑各种可能性，部分原因在于已经存在的漏洞数量庞大。如果我开始列出漏洞并加以解释，这本书将会变成1500页，且比现在更无趣，我可不想让任何人，尤其是那些花时间阅读我这些胡乱说法的人，受到这样的折磨。
- en: With that said, I *suppose* I could delve into a few examples of vulnerabilities
    and how to mitigate them. "*Vulnerabilities*" *is* the title of this section,
    after all.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，我*想*我可以深入探讨一些漏洞的示例以及如何减轻它们。毕竟，“漏洞”*是*本节的标题。
- en: 'If we''re looking at *hardware* assets, as an example, we can try to consider
    the various vulnerabilities that may exist, including the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们以*硬件*资产为例，可以尝试考虑可能存在的各种漏洞，包括以下几种：
- en: '**Physical threats** such as humidity or dust; wear and tear causing failure;
    or over-heating all exist. A lack of controls such as ventilation, humidity control,
    cooling, lubrication, or quality control are all vulnerabilities that could all
    be exploited by a threat actor to cause a loss of availability by destroying,
    shutting down, or forcing the powering off of hardware.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**物理威胁**，比如湿气或灰尘；由于磨损导致的故障；或者过热，都是存在的。缺乏通风、湿度控制、冷却、润滑或质量控制等措施，都是可能被威胁行为者利用的漏洞，进而通过破坏、关闭或强制关闭硬件，造成可用性的丧失。'
- en: Remember—threat actors don't need to be malicious humans; they can be environmental,
    such as "friction". The effective implementation of the "lubrication" or "cooling"
    controls (combined with testing after implementation to ensure the control is
    effective) would lead to the mitigation of these vulnerabilities.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 记住——威胁行为者不一定是恶意的人类；它们也可以是环境因素，比如“摩擦”。有效实施“润滑”或“冷却”控制措施（并在实施后进行测试以确保控制措施有效）将有助于减轻这些漏洞。
- en: When it comes to threats attempting to access storage—either hard drives or
    memory—you're faced with a few options. The lack of *encryption* when it comes
    to hard-drive storage could lead to a threat actor managing to access information
    by gaining physical access to a hard drive. By encrypting the hard drive, you're
    ensuring a level of defense-in-depth by ensuring that even if physical access
    were obtained, further exploitation would be required in order to gain access.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在涉及尝试访问存储——无论是硬盘还是内存——时，你面临着几种选择。在硬盘存储中缺乏*加密*可能导致攻击者通过物理访问硬盘来获取信息。通过加密硬盘，你能确保一种防御深度，确保即使获得了物理访问，攻击者仍需进一步的利用才能获得访问权限。
- en: By not protecting a system's memory from being both read and written to, you're
    looking at a risk of loss of confidentiality, integrity, or availability. It's
    a highly utilized attack method, and as a result there are memory-protection controls
    in many modern architectures and operating systems that are occasionally broken
    and need to be mitigated through changes and updates to either the *kernel* or
    the *operating system*.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不保护系统内存不被读取或写入，你面临的风险包括机密性、完整性或可用性的丧失。这是一种被广泛利用的攻击方法，因此，许多现代架构和操作系统中都有内存保护控制，但这些控制有时会被攻破，需要通过对*内核*或*操作系统*的更新和修改来进行缓解。
- en: Threats may attempt to read electrical signals for reverse-engineering or eavesdropping
    purposes. This could lead to a loss of confidentiality or integrity if they manage
    to gain access to protected resources through doing so. When we talk about vulnerabilities
    leading to the eavesdropping of electrical signals, we're starting to get pretty
    intense, and we should consider the likelihood of this type of attack. Which level
    of threat actors is likely to perform these types of attacks? The likelihood may
    be higher with more sophisticated threat actors, such as state-sponsored actors.
    With that said, there are mitigations against leaking emanations, such as shielding
    magnetic fields, filtering conducted signals, and masking space-radiated signals.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可能会试图读取电信号以进行逆向工程或窃听目的。如果他们通过此方法获得访问受保护资源的权限，可能会导致机密性或完整性的丧失。谈到导致窃听电信号的漏洞时，我们已经进入了一个相对复杂的领域，我们应考虑这种类型的攻击的可能性。哪些层级的威胁行为者可能会执行这些攻击？对于更为复杂的威胁行为者，如国家支持的行为者，这种攻击的可能性可能更高。话虽如此，仍然存在对泄漏辐射的缓解措施，如屏蔽磁场、过滤传导信号和掩蔽空间辐射信号。
- en: Sometimes, vulnerabilities exist due to the basic function of the hardware and
    must be mitigate, for example, by preventing the possibility of physical access
    to the hardware through a **security perimeter**, although that is admittedly
    lacking defense-in-depth controls.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，漏洞是由于硬件的基本功能所致，必须通过措施来减轻风险，例如通过防止物理访问硬件的可能性来实现**安全边界**，尽管这显然缺乏深度防御控制。
- en: '*Software* can have vulnerabilities exploited by a threat actor that does the
    following:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*软件*可能会存在漏洞，攻击者可以利用这些漏洞，执行以下操作：'
- en: Finds a way to access more information than they should have access to, either
    through insecure code or a design flaw
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到一种方式访问本不该访问的更多信息，可能是通过不安全的代码或设计缺陷。
- en: Is able to use your software as a delivery mechanism for their malware, such
    as the *2020 SolarWinds hack*
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够将你的软件用作其恶意软件的传播机制，例如*2020年SolarWinds黑客攻击*
- en: Exploits the lack of an audit trail in your systems
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用系统中缺乏审计追踪的漏洞
- en: A lack of input sanitation can lead to information disclosure or your software
    being used to deliver malware through an **injection attack**. Mitigating this
    vulnerability is generally done through both static and dynamic code analysis,
    as well as automatically fuzzing your software with input that might lead to an
    injection, and also *penetration testing* of your software on a regular basis
    and upon significant change.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 缺乏输入清洗可能导致信息泄露，或者你的软件被用来通过**注入攻击**传播恶意软件。通常通过静态和动态代码分析，以及自动模糊测试你的软件输入来缓解此漏洞，这些输入可能导致注入攻击，同时还需要定期对你的软件进行*渗透测试*，尤其是在发生重大更改时。
- en: The lack of logging in your estate could mean that a threat actor is able to
    maintain access, make changes, and exfiltrate data from your organization without
    being detected. Mitigating this with logging is mostly a *detective control*,
    but with the appropriate **Security Information and Event Management** (**SIEM**)
    configuration, and capable analysts in your **Security Operations Center** (**SOC**),
    you may be able to detect an ongoing attack and react to it in real time. Even
    better is adding automated responses into the mix, which isn't as far-fetched
    and difficult as it sounds, but does require quite a lot of understanding of your
    existing "normal" operation.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的资产缺少日志记录，可能意味着威胁行为者能够维持访问、进行更改，并从你的组织中窃取数据而不被发现。通过日志记录来缓解这个问题大多是一种*侦测控制*，但通过适当的**安全信息和事件管理**（**SIEM**）配置，以及在**安全运营中心**（**SOC**）中的有能力的分析师，你可能能够实时检测到正在进行的攻击并作出反应。更好的做法是将自动化响应融入其中，这并不像听起来那么难以实现，但确实需要对现有的“正常”操作有相当深入的理解。
- en: '*Networks* can have vulnerabilities exploited by a threat actor that does the
    following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*网络* 可能会被威胁行为者利用漏洞，进行以下操作：'
- en: Eavesdrops on insufficiently protected communication
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监听保护不足的通信
- en: Gains access through an insecure network architecture
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过不安全的网络架构获得访问权限
- en: Causes a loss of availability through a **Single Point of Failure** (**SPF**)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过**单点故障**（**SPF**）导致可用性丧失
- en: From a high-level view, *network security* is focused on ensuring the availability
    of network-accessible resources, along with the prevention of non-approved entities
    from access, and monitoring all network activity to ensure any infraction is dealt
    with appropriately. It's a deep topic that will require quite a bit more investigation
    than we currently have here, so I'm going to continue on with that topic in [*Chapter
    4*](B16611_04_Final_JM_ePub.xhtml#_idTextAnchor075), *Designing and Protecting
    Network Security*.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 从高层次来看，*网络安全*关注的是确保网络可访问资源的可用性，防止未经授权的实体访问，并监控所有网络活动，确保任何违规行为都能得到妥善处理。这是一个需要深入研究的主题，比我们目前讨论的内容要复杂得多，因此我将继续在[*第4章*](B16611_04_Final_JM_ePub.xhtml#_idTextAnchor075)中讨论该话题，*设计和保护网络安全*。
- en: '*Physical* sites are subject to vulnerabilities exploited by a threat actor
    that does the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*物理*站点容易受到威胁行为者利用漏洞进行以下操作：'
- en: Interrupts access, causing a loss of availability for your staff or systems
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中断访问，导致你的员工或系统无法访问
- en: Circumvents access control and gains unauthorized access to your physical estate
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绕过访问控制，非法访问你的物理资产
- en: While you are looking at physical sites and contemplating site security, aside
    from considering access control, turnstiles, mantraps, and biometrics, you should
    also consider the effects of faults in devices or controls. Also, what occurs
    in the event of a power blackout or power sag (as well as brownouts and spikes)?
    Consider the complexity that excessive noise may bring, and ensure you think about
    the requirements around heating, ventilation, humidity control, and cooling. As
    we mentioned in the first chapter, servers and water sources don't mix, but at
    the same time, you might need adequate fire protection.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在你查看物理站点并考虑站点安全时，除了考虑访问控制、旋转门、闯入防护门和生物识别技术外，还应该考虑设备或控制的故障所带来的影响。另外，在发生停电或电压下降（包括低电压和电压尖峰）时会发生什么？考虑过度噪音可能带来的复杂性，确保考虑到供暖、通风、湿度控制和冷却方面的要求。正如我们在第一章中提到的，服务器与水源不兼容，但同时，你可能需要适当的防火保护。
- en: 'According to *NIST SP 800-30*, *organizational vulnerabilities* exist in the
    following forms:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 根据*NIST SP 800-30*，*组织漏洞*存在以下几种形式：
- en: Governance structures
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 治理结构
- en: Business processes
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商业流程
- en: Enterprise architecture
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业架构
- en: Information security architecture
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信息安全架构
- en: Facilities
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设施
- en: Equipment
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备
- en: Software development life-cycle processes
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件开发生命周期过程
- en: Supply chain activities
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 供应链活动
- en: External service providers
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部服务提供商
- en: Essentially, threats may see a logical flaw in the way your organization runs
    things. They might notice that you don't properly *background check* your job
    applicants, or that you use external service providers but don't perform *due
    diligence* on them, and so the threat actors manage to exploit that to become
    embedded as an insider threat themselves.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，威胁者可能会发现您组织运作中的逻辑缺陷。他们可能会注意到，您并没有对求职申请者进行适当的*背景调查*，或者您使用外部服务提供商却没有对它们进行*尽职调查*，因此威胁行为者设法利用这一点，将自己置于内部威胁的位置。
- en: Furthermore, and by far the most likely threat in this section, threats may
    see a vulnerability in the lack of *security awareness* at your organization and,
    through manipulating or tricking personnel, manage to either gain access to your
    estate or have the personnel change or delete information for them, or disclose
    it to them.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在本节中，可能的威胁最大的是，威胁者可能会看到您组织在安全意识方面的缺陷，并通过操纵或欺骗人员，成功地获取对您机构的访问权限，或者让人员为其更改或删除信息，或者向他们披露信息。
- en: 'I''m sorry to mention it again, but *Mission: Impossible* is just way too relevant
    to not bring up twice: all of these generic examples I''ve given are fine, but
    I want to encourage you to think outside the box. Pretend you''re a member of
    Ethan Hunt''s *Impossible Missions Force*, and consider what you would look to
    exploit in order to gain access to your own estate, and how you may read or write
    information to achieve your ultimate goal of saving the world. If you haven''t
    seen the films, I have no sympathy for you not getting this reference whatsoever;
    they''re all brilliant (apart from the second one).'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对不起，我不得不再次提到*碟中谍*，因为它实在太相关了，不提两次实在对不起自己：我所举的这些通用例子都不错，但我希望您能打破常规。假设自己是伊桑·亨特的*不可能任务特遣队*的成员，并考虑您将要利用的漏洞，以获取对自己机构的访问权限，以及您如何阅读或写入信息以实现您拯救世界的终极目标。如果您还没有看过这些电影，我对您无法理解这个参考的事实毫不感到同情；它们都很精彩（第二部除外）。
- en: 'To wrap up this section, I would like to say that it''s important to consider
    every aspect of your business, and speak with relevant people who know the recorded
    processes and how real life differs from the documentation. A key question for
    yourself, moving forward, is: "*Do personnel do what they say, and say what they
    do?*". Policies and documented processes are only documentation, and if that documentation
    only exists to please auditors and security staff, then you are facing a huge
    gap between your *perceived security* and *actual security*.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 总结这一部分，我想说，重要的是要考虑您业务的每个方面，并与了解记录过程及其与实际生活差异的相关人员进行交流。对您自己而言，前进的关键问题是：“*人员是否言行一致？*”。政策和记录的过程仅仅是文档，如果那些文档只是为了取悦审计人员和安全人员而存在，那么您面临的是您的*感知安全性*与*实际安全性*之间的巨大鸿沟。
- en: The brilliant thing is, if you handle things right and show yourself as approachable
    and able to make a positive change, you will encourage an open, transparent, and
    honest working environment where people aim to involve you to ensure they have
    an easy way to follow the rules, and let you know when it's not possible to do
    so. That is an information security professional's dream scenario right there.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 精彩的是，如果您处理得当并表现得平易近人并且能够进行积极的改变，您将鼓励一种开放、透明和诚实的工作环境，在这种环境中，人们致力于让您参与以确保他们有一个遵循规则的简便途径，并在无法这样做时告知您。这是信息安全专业人员梦寐以求的情景。
- en: System exploitation methods
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 系统利用方法
- en: I'd like to look at some of the methods threat actors will use to exploit vulnerabilities
    in your estate. Yet again, there is a long list if we go deep and start picking
    out specific **keyloggers**, for example, so instead I'll go into the "category"
    for each exploitation method, and talk about each of them a little bit.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望能够查看威胁行为者利用您机构中的漏洞进行攻击的一些方法。如果我们深入挖掘并挑选出特定的**键盘记录器**，那么列表会很长，因此我将依次介绍每种攻击方法的“类别”，并简要讨论每种方法。
- en: First, since I just mentioned keyloggers, I'd like to look at types of **malware**.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，由于我刚提到键盘记录器，我想看看各种**恶意软件**的类型。
- en: 'Malware is software used for nefarious purposes. It can include a wealth of
    different types of software, many of which have quite a lot to learn about individually,
    so I will split the malware section up. Something to keep in mind is that malware
    isn''t always taking advantage of security vulnerabilities to be secretly installed
    on your endpoints or in your estate, which is what many definitions I''ve read
    have stated. In the late 1990s or early 2000s, I installed *BonzaiBuddy* by choice,
    which was a little purple gorilla in the bottom right of your screen that would
    sing you a song or search for things on the web. It was a marginally less lame
    version of Microsoft Clippy. It was later labeled by *Consumer Reports Web Watch*
    as `bonzi.com` without permission, which admittedly isn''t very cool, and also
    tracked various information about the user, using that information to serve advertisements.
    All I can really say about that is: they were innovators! Now, almost every software
    does that, and it''s seen as normal.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 恶意软件是用于邪恶目的的软件。它可以包括各种不同类型的软件，其中许多单独学习起来有相当多的内容，因此我会将恶意软件部分拆开。需要记住的一点是，恶意软件并不总是利用安全漏洞秘密安装在你的终端或区域中，这是我读到的许多定义所描述的。在1990年代末或2000年代初，我自愿安装了*BonzaiBuddy*，它是一个在屏幕右下角的小紫色猩猩，会唱歌或者在网上搜索东西。它是微软Clippy的一个稍微不那么烂的版本。后来，*消费者报告网络监控*将其标记为`bonzi.com`，未经许可，显然这并不是很酷，而且还跟踪用户的各种信息，用这些信息来投放广告。我对此只能说：他们是创新者！现在，几乎每个软件都会这样做，而且这被视为正常。
- en: Breaking down the malware category into subcategories, we can start to understand
    how they work and what a threat actor might use them for.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 将恶意软件类别分解为子类别，我们可以开始理解它们是如何工作的，以及威胁行为者可能如何使用它们。
- en: '**Viruses** are an interesting concept in terms of cybersecurity. What is a
    virus? Can you name one? Looking through *Wikipedia*, you might see that the page
    for *Computer virus* claims that a virus self-replicates. You might think: "*I
    thought that was a* *worm*." On the *Wikipedia* page for *Malware*, it''s stated
    that viruses are usually "*hidden within another seemingly innocuous program*",
    to which you might ask: "*Isn''t that a* *Trojan Horse?*"'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**病毒**在网络安全方面是一个有趣的概念。什么是病毒？你能举出一个例子吗？查看*维基百科*，你可能会看到*计算机病毒*的页面声称病毒是自我复制的。你可能会想：“*我以为那是*
    *蠕虫*。”在*恶意软件*的*维基百科*页面上，它指出病毒通常是“*隐藏在另一个看似无害的程序中*”，这时你可能会问：“*那不是* *木马* 吗？”'
- en: What on earth is a virus, then? It seems like the community can't fully agree,
    but *Malwarebytes Labs* has attempted to define a computer virus once and for
    all as *"malware attached to another program (such as a document), which can replicate
    and spread after an initial execution on a target system where human interaction
    is required. Many viruses are harmful and can destroy data, slow down system resources,
    and log keystrokes."*
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，到底什么是病毒呢？似乎社区无法完全达成一致，但*Malwarebytes Labs*试图最终定义计算机病毒为*“附加在另一个程序（例如文档）上的恶意软件，在目标系统上首次执行后可以自我复制并传播，并且需要人类的互动。许多病毒是有害的，可以破坏数据、减缓系统资源、记录按键。”*
- en: Now, *that* makes sense. A virus requires human interaction and a host program,
    and attaches itself to other files (or replaces files fully with copies of itself).
    A *Trojan Horse* (or *Trojan*) can be a virus; *ransomware* can be a virus; but
    *worms* aren't viruses.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，*这*很有道理。病毒需要与人类互动和宿主程序，并附着在其他文件上（或完全用自己的副本替代文件）。*木马*（或*特洛伊木马*）可以是病毒；*勒索软件*可以是病毒；但*蠕虫*不是病毒。
- en: '**Worms** aren''t that different from viruses, but just as I projected that
    you thought to yourself while reading the *Wikipedia* article for *Computer virus*,
    what differentiates a worm from a virus is that a worm does not require human
    interaction to spread across a system, network, estate, and so on. A worm *self-replicates*.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**蠕虫**与病毒并没有太大区别，但正如我预测的那样，当你在阅读*计算机病毒*的*维基百科*文章时，可能会想到，蠕虫与病毒的区别在于蠕虫不需要人类的互动就能在系统、网络、区域等中传播。蠕虫是*自我复制*的。'
- en: 'The name *Trojan* is a reference to *The Aeneid*, by Virgil. In the poem, Odysseus
    the Greek thinks of a way to get his troops inside Troy, a highly secure walled
    city of the enemy. He says: "*My dudes, let''s construct a gigantic horse sculpture
    out of wood, hide inside it, and leave it at their gate as an indication of surrender.*"
    At no point do any of the other Greeks call him out on it, which makes me feel
    like they were just afraid of what his reaction might be. What I''m saying is:
    I think Odysseus was a bit of a prima donna. Anyway, the Trojans find the sculpture
    at their gate and wheel it into their city, figuring "*Yeah, we could use a gigantic
    wooden horse, and this doesn''t seem suspicious in any way whatsoever.*" It might
    shock you to hear, but that night, Odysseus''s men jumped out from inside the
    horse, overthrowing the entire city.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*特洛伊木马*这个名称来源于维吉尔的《埃涅阿斯纪》。在诗中，希腊人奥德修斯想出了一种方法，将他的军队带进特洛伊，一个敌人严密防守的城市。他说：“*兄弟们，我们做一个巨大的木马雕像，把我们藏在里面，放在他们的城门旁作为投降的信号。*”在这一过程中，没有其他的希腊人指出这个计划的问题，这让我感觉他们可能只是害怕奥德修斯的反应。我想说的是：我觉得奥德修斯可能有点儿自恋。不过，特洛伊人发现了这座雕像并将其推进城市，他们心想：“*这座巨大的木马挺不错的，看起来也没什么可疑的地方。*”可能会让你感到震惊，但那天晚上，奥德修斯的士兵从木马上跳出来，推翻了整个城市。'
- en: I'm sure you're glad that I went into the entire classical backstory for the
    term *Trojan*, because now you can very clearly understand that Trojans are just
    a way of getting malware into the walled city that is your organization's estate.
    When folks get the torrented, cracked version of the latest PC game, and the README
    tells them to turn off their antivirus when running the *keygen*, because it sets
    off *false positives*, and they do it? They might have just got Trojaned. The
    problem with knowing if the `keygen.exe` is an actual Trojan or just a false positive
    is difficult, because both use obfuscation to hide their algorithm and both will
    probably make some changes to your system, which automatically sets off antivirus
    software.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信你会很高兴我详细介绍了“*特洛伊木马*”这个术语的整个经典背景故事，因为现在你可以非常清楚地理解，特洛伊木马只是将恶意软件带入你组织的“围城”的一种方式。当人们下载到最新的PC游戏的盗版破解版，并且README文件告诉他们在运行*keygen*时关闭杀毒软件，因为它会触发*误报*，而他们照做了？他们可能刚刚中了特洛伊木马。判断`keygen.exe`到底是一个真正的特洛伊木马，还是仅仅一个误报，确实很难，因为两者都使用混淆技术来隐藏它们的算法，并且都可能对系统做出一些更改，从而自动触发杀毒软件。
- en: Very similar in nature to the term *Trojan* is the term *backdoor*. Backdoors
    are deliberate (likely undocumented) points of entry into systems. These backdoors
    may allow for the delivery of malware, or other malicious activity by threat actors.
    The thing about backdoors is that they could be implemented into software or hardware
    by the manufacturer or any of their partners or suppliers that have had a part
    of the design and development stages. Potentially, intelligence agencies could
    request that manufacturers implement backdoors to allow for easy investigations
    on their part. Additionally, these backdoors can be created by other types of
    malware, and delivered via a Trojan. Are you still with me? If this section is
    pretty heavy, it's worth it—keep holding on.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 和“*特洛伊木马*”这个术语性质非常相似的是“*后门*”这个术语。后门是指系统中故意（可能是未记录的）入口点。这些后门可能允许恶意软件的投放，或者其他威胁行为者进行恶意活动。后门的问题在于，它们可能是由制造商或任何参与设计和开发阶段的合作伙伴或供应商在软件或硬件中实施的。潜在地，情报机构可能会要求制造商实施后门，以便他们能够方便地进行调查。此外，这些后门还可能由其他类型的恶意软件创建，并通过特洛伊木马传播。你还在跟得上吗？如果这部分内容有些沉重，值得坚持——继续加油。
- en: Another section of the overarching malware group is **adware**. Adware is often
    packaged with other software you install, but don't mistake it for a Trojan. It's
    not usually hiding; it could potentially show you a dialog in the installation
    process, which you haphazardly skip through like you have absolutely no time to
    do any reading whatsoever.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个属于广义恶意软件范畴的部分是**广告软件**。广告软件通常会与其他你安装的软件一起捆绑，但不要把它误认为是特洛伊木马。它通常并不隐藏起来；它可能会在安装过程中显示一个对话框，你可能草草跳过，仿佛你根本没有时间阅读任何内容。
- en: 'Here''s an example of the **Search App by Ask** being bundled with Java:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个**Search App by Ask**与Java捆绑的例子：
- en: '![Figure 3.2 – Search App by Ask adware installation dialog'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.2 – Ask广告软件的搜索应用安装对话框'
- en: '](img/B16611_03_002.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16611_03_002.jpg)'
- en: Figure 3.2 – Search App by Ask adware installation dialog
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – Ask广告软件的搜索应用安装对话框
- en: It seems like it's just another innocuous page that you accept, because you
    want to get it over with and install Java already, but it's actually a `Ask.com`.
    The creators make money by serving you ads and gathering marketing data.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来这只是一个无害的页面，你接受它，因为你想尽快完成并安装Java，但它其实是`Ask.com`。创作者通过向你展示广告和收集营销数据来赚钱。
- en: OK—fine; your search engine has been changed in your browser—big deal. "*Why
    are we even worried about malware*?", people might ask. I would say the next few
    might change their tune.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧——算了，你的浏览器中的搜索引擎被更改了——没什么大不了的。人们可能会问：“*我们为什么要担心恶意软件*？”我想接下来的一些内容可能会改变他们的看法。
- en: '**Ransomware** is a type of malware that prevents access to systems or files.
    It''s an availability attack, usually through cryptography, and often acts as
    a worm, spreading through every compatible device on your network. Organizations
    affected by ransomware usually receive the **payload** in the form of a malicious
    link or an email with a malicious attachment.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**勒索软件**是一种恶意软件，它会阻止访问系统或文件。这是一种可用性攻击，通常通过加密技术进行，并且常常像蠕虫一样，通过网络中每个兼容设备传播。受勒索软件影响的组织通常会收到以恶意链接或带有恶意附件的电子邮件形式的**负载**。'
- en: Once infected, a dialog will be shown on the affected computers that attempts
    to shake down the victims. "*We'll give you the decryption key if you send X Bitcoin
    to this address…*", or similar.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦感染，受影响的计算机将显示一个对话框，试图勒索受害者。“*如果你将X比特币发送到这个地址，我们就会给你解密密钥…*”，类似的内容。
- en: 'Here''s a screenshot of the Cryptolocker Bitcoin payment dialog:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Cryptolocker比特币支付对话框的截图：
- en: '![Figure 3.3 – CryptoLocker ransomware with Bitcoin payment option'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.3 – CryptoLocker勒索软件与比特币支付选项'
- en: '](img/B16611_03_003.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B16611_03_003.jpg)'
- en: Figure 3.3 – CryptoLocker ransomware with Bitcoin payment option
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 – CryptoLocker勒索软件与比特币支付选项
- en: The **Federal Bureau of Investigation** (**FBI**) advises people to never pay
    a ransom, but as with everything in InfoSec, I would say that *it depends on the
    risk*. If you stand to lose more than the equivalent of the ransom value by not
    paying the ransom, then you might be compelled to pay it. The reason the FBI has
    taken that position is because it creates a market, and you can't be sure that
    the assailant will actually give you a decryption key.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**联邦调查局**（**FBI**）建议人们永远不要支付赎金，但像信息安全领域的所有问题一样，我认为*这取决于风险*。如果不支付赎金会造成比赎金本身还要严重的损失，那么你可能会被迫支付赎金。FBI之所以持这种立场，是因为支付赎金会创造一个市场，而且你不能确定袭击者是否真的会给你解密密钥。'
- en: With that said, if word got out to other victims that even after payment no
    decryption occurs, it would ruin the revenue model of the campaign because other
    victims wouldn't be as likely to send the cryptocurrency to the perpetrator's
    addresses. As a result, it's in their best interest to decrypt your files when
    their victims pay, and we all know that business is booming. The *Cyber Threat
    Alliance* showed evidence in 2015 that the perpetrators behind a *CryptoWall 3.0*
    ransomware campaign had "*hundreds of thousands of dollars*" worth of Bitcoin
    received into their addresses, and things have only become more serious in the
    years since then. A cybercrime research organization called *Cybersecurity Ventures*
    has predicted that a ransomware attack is expected to affect a business every
    11 seconds by the end of 2021, and that the annual damage will total 20 billion
    dollars.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，如果其他受害者得知即使支付了赎金也没有解密发生，这将破坏该活动的收入模式，因为其他受害者就不太可能将加密货币发送到攻击者的地址。因此，攻击者的最佳利益是当他们的受害者支付赎金时解密他们的文件，我们都知道，生意兴隆。*网络威胁联盟*在2015年提供了证据，显示*CryptoWall
    3.0*勒索软件活动背后的犯罪分子已经收到了价值“*数十万美元*”的比特币，并且这些情况从那时起变得越来越严重。一个名为*网络安全风险*的网络犯罪研究组织预测，到2021年底，勒索软件攻击将每11秒影响一家企业，年损失将达到200亿美元。
- en: Ransomware is scary, but **spyware** is creepy. Spyware is essentially a way
    for malicious actors to monitor your computer usage, harvest your passwords or
    payment information, and track what you visit online or the files you download.
    It can lead to identity theft or blackmail, and could have its own book dedicated
    to it.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 勒索软件令人害怕，但**间谍软件**更让人毛骨悚然。间谍软件本质上是一种让恶意行为者监控你计算机使用情况、窃取你的密码或支付信息、追踪你在线访问的内容或下载的文件的手段。它可能导致身份盗用或敲诈，甚至可以专门为此写本书。
- en: Generally, spyware will end up embedding itself to your operating system and
    might arrive as a Trojan, or even as something you agreed to install, similar
    to what we saw with adware. There's generally not going to be an "uninstall" program
    for spyware, and you likely won't know that it exists on your PC. It may be a
    **keylogger**, which is a system-monitoring solution that can log keystrokes,
    system credentials, and pretty much any other computer activity. Keyloggers can
    grab screenshots and transmit the information to a remote server through a covert
    channel.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，间谍软件最终会嵌入到操作系统中，可能以木马的形式到达，甚至是你同意安装的东西，类似于我们看到的广告软件。间谍软件通常不会有“卸载”程序，并且你可能不会知道它存在于你的电脑上。它可能是一个**键盘记录器**，这是一种系统监控工具，可以记录按键、系统凭证以及几乎所有其他计算机活动。键盘记录器能够抓取屏幕截图，并通过隐蔽通道将信息传输到远程服务器。
- en: These types of malware generally *exploit* **vulnerabilities** in your device's
    software or hardware in order to get **elevated privileges**. New vulnerabilities
    for software and operating systems are found daily, and researchers might reach
    out to the creators of the software or hardware to *responsibly disclose* the
    vulnerability to them, in order to give them time to work on fixing the flaw and
    releasing a **patch** for the users currently affected by the flaw. Sometimes,
    the creator won't do anything or will legally threaten the researcher for that
    disclosure, and as a result the researcher may decide to release the information
    publicly, in order to try to force the hand of the creators. By drawing attention
    to an active vulnerability, and even providing a **Proof of Concept** (**POC**)
    for an **exploit**, it increases the likelihood that the vulnerability will be
    exploited and could result in bad press for the creators or a negative consumer
    response from the users.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类型的恶意软件通常会*利用*设备软件或硬件中的**漏洞**，以获得**提升的权限**。每天都有新的软件和操作系统漏洞被发现，研究人员可能会联系软件或硬件的创作者，*负责任地披露*这些漏洞，以便给他们时间修复缺陷并发布**补丁**，以帮助目前受到影响的用户。有时候，创作者不会采取任何行动，或者会对披露者进行法律威胁，结果研究人员可能决定公开这些信息，试图迫使创作者采取行动。通过引起对一个活动漏洞的关注，甚至提供**概念验证**（**POC**）来展示**利用**漏洞的方式，增加了漏洞被恶意利用的可能性，并可能导致创作者的负面报道或用户的负面反馈。
- en: The other side of that story is that a researcher might find a new vulnerability
    or explore an existing vulnerability, and craft an exploit that they then sell
    to malicious actors, maybe as a suite of software called an **exploit kit**, which
    allows nontechnical malicious actors to perform their attack and spread malware
    or gain access.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这个故事的另一面是，研究人员可能会发现一个新的漏洞或探索一个现有的漏洞，并制作一个**利用**工具，然后将其出售给恶意行为者，也许作为一个名为**利用工具包**的软件套件，这使得技术不熟练的恶意行为者能够执行攻击，传播恶意软件或获得访问权限。
- en: You may have heard of **rootkits**—or, similarly, **bootkits**—which are fancy
    names for malware that either escalates the privilege of an unauthorized user
    (potentially all the way up to that of an *admin* (or "*root*") account) or hides
    the activities of another malware from detection, embedding themselves into the
    operating system of your device. These can help a malicious actor gain full access
    to a computer, allowing for attacks on confidentiality, integrity, and availability,
    or to utilize the compromised computer to perform attacks on other networks, computers,
    systems, and so on.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能听说过**rootkit**，或者类似的**bootkit**——这些都是恶意软件的花哨名称，能够提升未经授权用户的权限（可能达到*管理员*（或“*root*”）账户的级别），或者隐藏其他恶意软件的活动，防止被检测，嵌入到设备的操作系统中。这些可以帮助恶意行为者获得计算机的完全访问权限，进行机密性、完整性和可用性方面的攻击，或利用被攻破的计算机对其他网络、计算机、系统等进行攻击。
- en: A computer that is being used this way is called a **zombie**, and oftentimes
    you may find that this zombie is just one part of a much larger **botnet**, or
    collection of internet-connected devices that perform a synchronized attack. These
    botnets are especially useful in **DDoS (Distributed Denial of Service)** attacks,
    where the DoS sources are coming from a wealth of normally harmless **Internet
    Protocol** (**IP**) addresses with no pattern. As a result of their distributed
    nature, these attacks are difficult to create firewall rules for.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式使用的计算机被称为**僵尸**，而且你可能会发现，这个僵尸只是一个更大**僵尸网络**的一部分，僵尸网络是由一组连接互联网的设备组成，它们会执行同步攻击。这些僵尸网络在**DDoS（分布式拒绝服务）**攻击中特别有用，在这种攻击中，DoS来源来自大量通常无害的**互联网协议**（**IP**）地址，且没有任何规律。因此，由于这些攻击的分布性，它们很难创建防火墙规则来应对。
- en: '**Logic bombs** are a delivery mechanism that sets off malware activity once
    a set of conditions are met. Imagine, in a typical example, a systems administrator
    sets a *CronJob* that executes daily and asks them to enter a passphrase. Imagine
    the CronJob is set to encrypt all of the files in the network in the event that
    they are not performing their daily passphrase entry for 30 consecutive days,
    implying that they have been removed from the company. There are many other types
    of logic bombs, such as something as simple as: "*If this running process is closed,
    do this.*"'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**逻辑炸弹**是一种交付机制，它会在满足一定条件时触发恶意软件活动。举个典型的例子，系统管理员设置了一个每天执行的*CronJob*，要求他们输入一个密码短语。假设这个CronJob被设置为在网络中的所有文件加密，前提是他们在连续30天内没有输入密码短语，暗示他们已经被从公司移除。还有许多其他类型的逻辑炸弹，简单的例子是："*如果这个正在运行的进程被关闭，执行这个操作。*"'
- en: Something you've definitely read about in the news are **zero days**. These
    are simply vulnerabilities that were completely unknown to all aside from the
    malicious actor who is now exploiting that vulnerability. The term "*zero day*"
    is related to the fact that the vulnerability is being exploited with zero days
    for the developer to react and create a patch.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 你肯定在新闻中读到过**零日漏洞**。这些漏洞是指除了恶意行为者之外，所有人都完全不知道的漏洞，恶意行为者正在利用这些漏洞。术语"*零日*"与漏洞被利用时开发者没有时间响应和创建补丁的事实有关，即开发者没有**零天**的时间来应对漏洞。
- en: 'So, in theory, we could say the following:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，从理论上讲，我们可以说：
- en: '"There''s this new virus called "*TokTik*" that is very interesting. It is
    bundled with the latest version of `EssentialProgram` as a **Trojan**, initially
    just as **browser-hijacking** **adware**, but then as **malware** in the form
    of a **keylogger** **spyware** **rootkit** that spreads and executes a **privilege
    escalation** **exploit** to all the other devices on your network like a **worm**,
    adding each device as a **zombie** to their **botnet**, and performing **DDoS**
    attacks on businesses. If the rogue process is closed, another encrypts the hard
    drive and shows a dialog explaining the **ransomware** decryption process. **Patches**
    for operating systems are currently being developed, but many of the exploits
    were unknown and the **vulnerabilities** were never discovered until now, also
    known as **zero days**.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种新的病毒叫做"*TokTik*"，非常有趣。它与最新版的`EssentialProgram`捆绑在一起，最初作为**木马**，仅仅是**浏览器劫持**的**广告软件**，但后来变成了**恶意软件**，以**键盘记录器**、**间谍软件**、**rootkit**的形式传播，并执行**权限提升**的**漏洞利用**，将你的网络中所有其他设备像**蠕虫**一样感染，将每个设备加入到他们的**僵尸网络**中，执行对企业的**DDoS**攻击。如果恶意进程被关闭，另一个进程会加密硬盘，并显示一个对话框解释**勒索软件**解密过程。目前，操作系统的**补丁**正在开发中，但许多漏洞此前是未知的，这些**漏洞**直到现在才被发现，也被称为**零日漏洞**。
- en: However, if you *were* to say that, people might not talk to you anymore because
    that would be incredibly odd to hear.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你*说*这些话，人们可能再也不会和你说话了，因为那听起来实在太奇怪了。
- en: Beyond exploitation that occurs on your devices through viruses such as the
    previously mentioned malware examples, there exist other types of exploitation,
    such as the exploitation of organizational vulnerabilities (such as a lack of
    security consciousness), or exploiting software and web application vulnerabilities.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 除了通过病毒（如之前提到的恶意软件例子）在你的设备上发生的漏洞利用之外，还有其他类型的漏洞利用，比如组织漏洞的利用（例如缺乏安全意识），或者软件和网络应用程序漏洞的利用。
- en: What would this section be without discussing **phishing**? As a reminder, phishing
    is a method of exploitation through electronic communication whereby a malicious
    actor is disguised as a trusted party and *socially engineers* a user to help
    them in their goal by clicking a link, opening an attachment, or handing over
    information and secrets. It's the chosen exploitation mechanism for many threat
    actors because of the fact it doesn't require a technical vulnerability to be
    successful, but rather an organizational vulnerability.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不提到**网络钓鱼**，这一部分就不完整了。提醒一下，网络钓鱼是一种通过电子通信进行的恶意利用方式，攻击者伪装成受信任的一方，通过*社会工程学*引导用户点击链接、打开附件或交出信息与秘密，帮助他们达成目标。它是许多威胁行为者选择的利用机制，因为它不需要技术漏洞才能成功，而是依赖于组织的脆弱性。
- en: By emailing somebody in the company who might not be as *security-conscious*
    as a member of the InfoSec team, creating a little bit of *drama and urgency*,
    and guiding them toward executing a payload, the malicious actor is able to compromise
    your organization's system with ransomware or spyware, or initiate a bank transfer,
    all from their email app. It's cheap, it's fast, and it's effective.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向公司中可能不如信息安全团队成员那样*注重安全*的人发送电子邮件，制造一些*紧急感和戏剧性*，并引导他们执行恶意负载，攻击者能够通过他们的电子邮件应用轻松渗透你的组织系统，使用勒索软件或间谍软件，或者发起银行转账。这既便宜、又快速，且效果显著。
- en: Additionally, something worth considering is the evolving landscape of our IT
    systems. For example, understanding cloud service types and deployment models,
    or web application security, are both extremely relevant for the current time.
    You see, as we have moved from on-premises servers and installing programs onto
    endpoints toward the **cloud services** model, software (and our overall estate)
    is increasingly accessed via a **thin client** (which usually means they're run
    in our preferred browsers), transitioning into what are known as **web apps**,
    delivered to users as a **Software-as-a-Service** (**SaaS**). **SaaS** applications
    usually have a monthly fee associated with them—that is, once the users require
    features that are offered beyond the barebones *free* tier.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，值得考虑的是我们 IT 系统不断变化的格局。例如，理解云服务类型和部署模型，或者网页应用安全性，在当前的环境下都非常相关。你看，随着我们从本地服务器和在终端设备上安装程序转向**云服务**模式，软件（以及我们的整体资产）越来越多地通过**瘦客户端**访问（这通常意味着它们在我们偏好的浏览器中运行），并转变为我们所说的**网页应用**，作为**软件即服务**（**SaaS**）提供给用户。**SaaS**
    应用通常需要支付月费——也就是说，一旦用户需要的功能超出了基本的*免费*层级，就会产生费用。
- en: '**Cloud service providers**, such as **Amazon Web Services** (**AWS**) or Microsoft
    Azure, offer **Platform-as-a-Service** (**PaaS**) and **Infrastructure-as-a-Service**
    (**IaaS**) in a similar way, allowing for the metered usage of cloud computing
    power for a monthly fee. As time goes on, more and more of our estate is being
    outsourced and moved toward the cloud, either in the form of PaaS or IaaS. PaaS
    is usually offered as a simplified way to install and run an application without
    further configuration, allowing users to *outsource the responsibilities* of maintaining
    infrastructure and regular updates. IaaS, on the other hand, is a part of a server
    that exists in a data center in the region of your choice and, aside from the
    lack of physical interaction, the *responsibilities* for maintenance and updates
    to the system generally remain in the hands of the customer.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**云服务提供商**，如**亚马逊 Web 服务**（**AWS**）或微软 Azure，提供类似的**平台即服务**（**PaaS**）和**基础设施即服务**（**IaaS**），允许按月付费使用云计算能力。随着时间的推移，我们越来越多的资产被外包并转向云端，无论是以
    PaaS 还是 IaaS 形式。PaaS 通常作为一种简化方式提供，允许用户安装和运行应用而无需进一步配置，从而*外包了维护基础设施和定期更新的责任*。而
    IaaS 则是存在于你选择的地区数据中心中的一部分服务器，除了缺乏物理交互，系统的维护和更新*责任*通常仍由客户承担。'
- en: The concept is referred to as the **shared responsibility model**, showing the
    differences in the various cloud solutions, and where separate responsibilities
    lie.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这一概念被称为**共享责任模型**，它展示了不同云解决方案之间的差异以及各自的责任划分。
- en: Now, regardless of if you deploy your web app from your own *on-prem* servers,
    or on PaaS or IaaS, what we can see in web apps are certain types of vulnerabilities
    that allow malicious actors to compromise the confidentiality, integrity, or availability
    of your app. The **Open Web Application Security Project Top 10** (**OWASP Top
    10**) is a regularly updated list of the top 10 web application security risks,
    and it does a great job of explaining how each of the risks can be mitigated.
    In order to give **application security** the amount of attention it deserves,
    I will revisit it in [*Chapter 8*](B16611_08_Final_JM_ePub.xhtml#_idTextAnchor150),
    *Improving the Security of Software*. Furthermore, the design, governance, and
    secure operation of your network and assets remain your responsibility, regardless
    of where the servers and computers currently physically "sit". We will explore
    network security in [*Chapter 4*](B16611_04_Final_JM_ePub.xhtml#_idTextAnchor075),
    *Designing and Protecting Network Security*, and continue until [*Chapter 7*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123),
    *Owning Security Operations*.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，无论你是从自己的*本地*服务器，还是在PaaS或IaaS上部署你的Web应用程序，我们可以看到Web应用程序中存在一些漏洞类型，这些漏洞允许恶意行为者危及应用程序的机密性、完整性或可用性。**开放Web应用程序安全项目十大**（**OWASP
    Top 10**）是一个定期更新的Web应用程序安全风险排行榜，它很好地解释了每个风险如何被缓解。为了给**应用程序安全**应有的关注，我将在[*第8章*](B16611_08_Final_JM_ePub.xhtml#_idTextAnchor150)，*提高软件安全性*中进一步讨论。此外，不论服务器和计算机目前物理上“位于”何处，网络和资产的设计、治理以及安全运行仍然是你的责任。我们将在[*第4章*](B16611_04_Final_JM_ePub.xhtml#_idTextAnchor075)，*设计和保护网络安全*中探讨网络安全，并在[*第7章*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123)，*管理安全运营*中继续讨论。
- en: This moves us on to the next step, where we'll look at best practices in assessing
    and mitigating vulnerabilities.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这将引导我们进入下一步，讨论评估和缓解漏洞的最佳实践。
- en: Best practices in assessing and mitigating vulnerabilities
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估和缓解漏洞的最佳实践
- en: For some of the vulnerability concepts we've gone through earlier in this chapter,
    I've included ways to mitigate against those vulnerabilities. None of those mitigations
    takes into consideration your own organization, its threats, the value of the
    assets, or the likelihood of exploitation. I've just essentially listed off ways
    you might have seen other organizations mitigate against those risks, and potentially
    a few good ideas came to you that way.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们在本章前面讨论的一些漏洞概念，我已经列出了应对这些漏洞的缓解措施。所有这些缓解措施都没有考虑到你自己的组织、其面临的威胁、资产的价值或利用的可能性。我基本上只是列出了你可能看到的其他组织应对这些风险的方式，也许这样能给你一些启发。
- en: In this section, I would like to continue in that fashion, but I first want
    to stress how important it is to apply the necessary amount of mitigations in
    order to reduce down to an *acceptable level*. That's the name of the game here!
    Save yourself the money and headaches involved with making a system completely
    risk-proof when it doesn't face any threats or isn't valuable to you or a threat
    actor.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我希望以这种方式继续讨论，但首先我想强调一点，那就是在降低风险到*可接受的水平*时，应用必要的缓解措施是多么重要。这才是关键！避免在系统并未面临任何威胁，或者对你或威胁行为者并不重要的情况下，花费过多的资金和精力去使系统达到“完全无风险”的状态。
- en: With that said, I can get back into how we can secure our systems and choose
    appropriate controls.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，我现在可以回到如何确保我们的系统安全，并选择适当的控制措施的讨论。
- en: We've already gone into how to protect the different classes of ISO-defined
    information assets, which were hardware, software, networks, physical, and organizational.
    I just want to take a second to briefly revisit each, in case there's more to
    be said.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了如何保护ISO定义的不同类别的信息资产，这些类别包括硬件、软件、网络、物理资产和组织资产。我只是想花点时间简要回顾一下每个类别，以防有更多需要讨论的内容。
- en: Hardware security
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件安全
- en: When we were reviewing hardware assets, we talked about ventilation, humidity
    control, cooling, lubrication, or quality-control as mitigations from a loss of
    availability realized through the destruction or powering off of hardware. We
    reviewed that threat actors don't need to be malicious humans; they can be environmental,
    such as "friction". Something I mentioned in that section that I would like to
    bring up again is **testing** after the implementation of a security control,
    in order to ensure the control is effective.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们回顾硬件资产时，我们讨论了通风、湿度控制、冷却、润滑或质量控制作为从硬件破坏或关闭中实现的可用性丧失的缓解措施。我们回顾了威胁行为者不一定是恶意的人类；它们也可以是环境因素，比如“摩擦”。在那一节中，我提到过一个我想再次提及的内容，那就是**在实施安全控制后进行测试**，以确保控制措施的有效性。
- en: 'Throughout your career as an InfoSec professional, you want to ensure that
    after the appropriate controls are chosen and implemented, you first "test" the
    system for vulnerabilities yourself and patch any holes you find. Then (if the
    asset is valuable enough to justify it, remember) you have an external third party
    "test" it. This is often called **penetration testing** (*pentest*) or **red teaming**,
    depending on the complexity of the assessment. You can also perform automated
    scans, but the effectiveness of those scans have yet to supersede having an actual
    *pentest*, where you pay an expert hacker to actually break into your system.
    It''s a beautiful and heartbreaking method of checking the effectiveness of your
    controls. You will end up thinking to yourself a few things. First, you will think:
    "I can''t believe I missed that!", but then, you''ll think: "Thank goodness I
    paid one of the good guys to find it first."'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在你作为信息安全专业人员的职业生涯中，你需要确保在选择和实施适当的控制措施后，你首先自己“测试”系统的漏洞，并修补你发现的漏洞。然后（如果资产足够有价值来证明这样做的必要性，请记住），你请外部第三方进行“测试”。这通常被称为**渗透测试**（*pentest*）或**红队演练**，具体取决于评估的复杂性。你还可以执行自动扫描，但这些扫描的效果还无法超越实际进行*pentest*，即支付给一位专家黑客来真正突破你的系统。这是一种既美妙又让人心碎的检查控制措施有效性的方法。你最终会自己想到几件事。首先，你会想：“我居然错过了这个！”，但接着，你会想：“幸好我请了其中一个好人先找到了它。”
- en: You'll take their report, implement the appropriate controls to mitigate against
    their findings, and ask them to retest in order to ensure your new controls are
    effective. It's an integral part of the job and provides major firepower in management-level
    or board-level presentations when you're talking about the likelihood aspect of
    your risks. You now have an example of an actual scenario where somebody broke
    into your system, and you now have the attention of the people who control the
    funds.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 你将接受他们的报告，实施适当的控制措施以减轻他们发现的问题，并要求他们重新测试，以确保你的新控制措施有效。这是工作的重要组成部分，并且在管理层或董事会层面的汇报中，当你谈论风险的可能性时，它能提供重要的支持。你现在有了一个实际的例子，展示了某人突破了你的系统，你现在也吸引了那些控制资金的人的注意。
- en: We also previously reviewed protecting access to storage, either through hard
    drives or memory. For memory, we talked about memory-protection controls in system
    architectures and operating systems, which are occasionally broken and need to
    be mitigated through changes to either the *kernel* or the *operating system*.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也之前回顾了保护存储访问，无论是通过硬盘还是内存。对于内存，我们讨论了系统架构和操作系统中的内存保护控制，这些控制偶尔会被破坏，需要通过对*内核*或*操作系统*的修改来进行缓解。
- en: '**Data execution prevention** is an operating system protection for memory
    that designates sections of memory as non-executable. Making this distinction
    prevents code from being run from those sections by giving a memory-access-violation
    exception, terminating the process, and preventing from buffer overflows.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据执行保护**是操作系统对内存的保护，它将内存的某些区域标记为不可执行的。做出这种区分可以通过给出内存访问违规异常来防止代码从这些区域运行，终止进程，并防止缓冲区溢出。'
- en: For hard drives, I briefly mentioned that by encrypting the hard drive you're
    ensuring a level of defense-in-depth, by ensuring that even if physical access
    were obtained, further exploitation would be required in order to gain access.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 关于硬盘，我简要提到过，通过加密硬盘，你确保了一定的深度防御，确保即使获得了物理访问权限，仍然需要进一步的利用才能获得访问权限。
- en: One other aspect of encryption that would be useful to mention in the hardware
    security topic of this section is a **Trusted Platform Module**, or **TPM**. TPMs
    are dedicated microcontrollers that, with integrated cryptographic keys, help
    to secure hardware. They generally include a **random number generator** (**RNG**),
    which is hardware-based; the ability to generate cryptographic keys; and the ability
    to create a **hash** of the configuration and hardware in the system for integrity
    purposes. When you use *BitLocker* to encrypt your Windows 10 laptop, the best
    way to do so is by using the laptop's TPM, which also allows for *integrity checks*
    at boot time.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个值得提及的加密方面是本节硬件安全主题中的**受信平台模块**（**TPM**）。TPM是专用的微控制器，带有集成的加密密钥，帮助保护硬件安全。它们通常包括一个**随机数生成器**（**RNG**），这是硬件基础的；生成加密密钥的能力；以及为完整性目的创建系统配置和硬件的**哈希**的能力。当你使用*BitLocker*加密Windows
    10笔记本时，最好的方法是使用笔记本的TPM，它还允许在启动时进行*完整性检查*。
- en: The concept of a **trusted computing base** or **TCB** has roots in risk management,
    where the TCB is determined as all of the system components that are high-impact
    in terms of security. If a vulnerability is found in the TCB, the risk of compromise
    to the entire system is higher. Determining your TCB may be something you do in
    the risk management process, if you determine that it's important. You can enforce
    that every system in your TCB has a TPM to verify integrity.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**受信计算基**（**TCB**）的概念源于风险管理，其中TCB被定义为在安全性方面具有高影响力的所有系统组件。如果在TCB中发现漏洞，整个系统遭受破坏的风险会更高。在风险管理过程中，你可能会确定TCB，前提是你认为它很重要。你可以强制要求TCB中的每个系统都配有TPM以验证完整性。'
- en: 'Additionally, operating systems utilize an architectural concept of a **reference
    monitor**, which enforces an access control policy over users and processes attempting
    to read and write to a system. The design paradigm utilizes an acronym of **NEAT**,
    standing for the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，操作系统利用了**参考监视器**的架构概念，后者强制执行一个访问控制策略，用于控制用户和进程尝试读取和写入系统的操作。该设计范式使用了一个首字母缩略词**NEAT**，表示以下内容：
- en: '**Non-bypassable**, which means an attacker can''t get around the reference
    monitor and read/write to a system without permission'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不可绕过**，意味着攻击者无法绕过参考监视器，未经许可读取/写入系统。'
- en: '**Evaluable**, which means the results and performance should be able to be
    analyzed'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可评估**，意味着结果和性能应该能够被分析。'
- en: '**Always invoked**, meaning the mechanism should always be available, and always
    utilized for all security-sensitive operations'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**始终调用**，意味着该机制应该始终可用，并且在所有与安全相关的操作中始终被利用。'
- en: '**Tamper-proof**, meaning the mechanism cannot be changed to circumvent the
    control'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**防篡改**，意味着该机制无法被更改以绕过控制。'
- en: All of these ideologies are very valuable in your own decisions, moving forward.
    I don't want you to look at built-in controls as something that are "handled",
    or not relevant to your role. A lot of the controls already available contain
    suggestions regarding how you could design *anything* securely, from your entire
    system down to the most minute function. We talked about evaluation earlier when
    we were talking about penetration testing. We talked about tamper proofing in
    the TPM's integrity checks. Looking at how these paradigms work from a micro and
    macro scale are important in selecting the appropriate controls for protecting
    against attacks on confidentiality, integrity, and availability.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些理念在你未来的决策中都非常有价值。我不希望你将内建的控制措施视为“已处理”或与你的角色无关。许多现有的控制措施中包含了如何安全设计*任何*东西的建议，从整个系统到最微小的功能。我们之前在讨论渗透测试时提到了评估。我们在TPM的完整性检查中讨论了防篡改问题。从微观和宏观角度看这些范式在选择合适的控制措施来防范对机密性、完整性和可用性的攻击时非常重要。
- en: We then moved on to protecting electrical signals from reverse-engineering and
    eavesdropping. We looked at mitigations against leaking emanations, such as shielding
    magnetic fields, filtering conducted signals, and masking space-radiated signals.
    We also briefly went over the restriction of physical access to the hardware,
    and also how that lacks defense-in-depth.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们讨论了如何保护电信号免受逆向工程和窃听的侵害。我们查看了防止泄漏辐射的缓解措施，如屏蔽磁场、过滤传导信号以及掩蔽空间辐射信号。我们还简要讨论了限制物理访问硬件，以及这种方法缺乏深度防御的问题。
- en: Software security
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件安全
- en: 'We then moved on to software, which can have vulnerabilities such as the following:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们讨论了软件，这些软件可能存在以下漏洞：
- en: Giving users access to more information than they should have access to, either
    through insecure code or a design flaw
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 给用户访问他们不应该拥有的信息，无论是通过不安全的代码还是设计缺陷
- en: Being able to act as a delivery mechanism for malware
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为恶意软件传输机制的能力
- en: The lack of an audit trail, leading to maintained access, exfiltrated data,
    and unseen changes
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺乏审计追踪，导致持续的访问、数据外泄以及无法察觉的变更
- en: I will cover more on these vulnerabilities in [*Chapter 8*](B16611_08_Final_JM_ePub.xhtml#_idTextAnchor150),
    *Improving the Security of Software*, but for right now we can say that mitigating
    these vulnerabilities is generally done through code reviews, separation of duties,
    static and dynamic code analysis tools, and also the *penetration testing* of
    your software on a regular basis, and upon significant change. The lack of an
    audit trail can be mitigated by implementing one! By utilizing logging solutions,
    you are able to track software and network-based activities, such as access, changes,
    and traffic leaving your organization. With SIEM combined with analysts in a SOC,
    organizations detect ongoing attacks in real time and potentially react to them
    manually or automatically. Practicing and testing this control is part of a red
    team, where the defending side acts as the **Blue Team**. Testing the Blue Team
    is highly critical for some organizations and, yet again, it's up to you to decide
    if that's in line with the level of risk your organization faces. I cover more
    on security testing in [*Chapter 6*](B16611_06_Final_JM_ePub.xhtml#_idTextAnchor112),
    *Designing and Managing Security Testing Processes*.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我将在[*第8章*](B16611_08_Final_JM_ePub.xhtml#_idTextAnchor150)《提高软件安全性》中进一步讲解这些漏洞，*改进软件安全性*，但现在我们可以说，缓解这些漏洞通常通过代码审查、职责分离、静态和动态代码分析工具以及定期进行软件渗透测试来完成，特别是在发生重大变更时。缺乏审计追踪可以通过实施审计追踪来解决！通过使用日志解决方案，您可以跟踪软件和基于网络的活动，如访问、变更和离开组织的流量。结合SIEM和SOC中的分析人员，组织能够实时检测持续的攻击，并可能对其进行手动或自动响应。实践和测试这一控制措施是红队的一部分，其中防守方作为**蓝队**进行操作。对蓝队进行测试对于某些组织至关重要，再次强调，是否进行此测试取决于您的组织所面临的风险水平。我将在[*第6章*](B16611_06_Final_JM_ePub.xhtml#_idTextAnchor112)《设计和管理安全测试过程》一章中进一步讲解安全测试。
- en: Network security
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络安全
- en: 'We then moved on and talked about how *networks* face vulnerabilities that
    are exploited by a threat actor either through eavesdropping on insufficiently
    protected communication or by gaining access through insecure network architecture,
    or by causing a loss of availability. From a very high level, to control those,
    we''re looking at the following:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们讨论了*网络*面临的漏洞，这些漏洞可能被威胁行为者利用，无论是通过窃听保护不足的通信，还是通过不安全的网络架构获取访问权限，或导致可用性丧失。从非常高的层次来看，为了控制这些漏洞，我们关注以下方面：
- en: Encryption to protect communication
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密以保护通信
- en: Access control to control who has access to what, for how long
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问控制以控制谁可以访问什么，访问多长时间
- en: Vulnerability management to find and patch vulnerabilities in all network architecture,
    along with the other devices in your estate
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 漏洞管理，用于发现并修补所有网络架构中的漏洞，以及您资产中其他设备的漏洞
- en: Redundancy to protect against a loss of availability, (hopefully) protecting
    against *single points of failure*
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 冗余性保护以防止可用性丧失，（希望）保护*单点故障*
- en: We are going to delve deeper into this topic in [*Chapter 4*](B16611_04_Final_JM_ePub.xhtml#_idTextAnchor075),
    *Designing and Protecting Network Security*, so I will save further explanation
    on how to do so for that chapter instead.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在[*第4章*](B16611_04_Final_JM_ePub.xhtml#_idTextAnchor075)《设计和保护网络安全》一章中深入探讨这个话题，所以我将把如何实施的进一步解释留到该章节中。
- en: Physical security
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理安全
- en: '*Physical* sites have vulnerabilities which can lead to either loss of availability
    for your staff or systems, or circumvention of access control. To prevent from
    unauthorized access to your physical estate, we should consider a *defense in
    depth* approach.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '*物理*场所存在漏洞，可能导致您的员工或系统的可用性丧失，或突破访问控制。为了防止未经授权访问您的物理资产，我们应该考虑采取*深度防御*的策略。'
- en: Turnstiles and mantraps are entry controls, mitigating from a threat actor *piggybacking*
    the entry credentials of another person or *tailgating* behind somebody else,
    catching the door.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 转门和人孔是入口控制，旨在防止威胁行为者*搭便车*利用他人的入场凭证，或在他人之后*尾随*进入，卡住门。
- en: 'Biometric locks, such as a fingerprint scanner, ensure the authorized person
    is in fact the authorized person, not just somebody with a key or a badge. Sometimes,
    they aren''t effective controls, either because they respond with too many **false
    negatives**, locking legitimate people out, or give out too many **false positives**,
    giving the wrong people access. These are worth considering when selecting this
    control, and questions should be asked for each use case surrounding: "Which is
    worse, the wrong person getting in, or the right person not being able to?"'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 生物识别锁，如指纹扫描仪，确保授权人确实是授权人员，而不仅仅是持有钥匙或证件的人。有时，它们并不是有效的控制措施，要么因为它们回应了太多**误报**，把合法人员锁在外面，要么因为它们给出太多**漏报**，让错误的人获得访问权限。在选择这种控制时，这些问题值得考虑，并且应该针对每种使用案例提问：“哪个更糟糕，错误的人进入，还是正确的人无法进入？”
- en: On the topic of selecting the appropriate controls for your organization and
    its systems, let's move on to the next section.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择适合您组织及其系统的控制措施时，我们接下来将讨论下一部分内容。
- en: Selecting appropriate controls/defense against the dark arts
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择适当的控制/防御措施来应对黑暗势力
- en: 'If we''re starting by discussing the time-based control category, I''m sure
    you''re aware of the difference between **preventative controls** and **detective
    controls**: they''re found in the names. The first helps to prevent attacks from
    being successful in the future, and the second helps to alert systems and personnel
    while an attack is in progress. **Corrective controls** help to restore systems
    and reduce the effects of a *breach*.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们从讨论基于时间的控制类别开始，我相信您已经知道**预防性控制**和**侦测性控制**之间的区别：它们的名字就能说明问题。前者有助于防止未来攻击的成功，后者则有助于在攻击进行时提醒系统和人员。**纠正性控制**有助于恢复系统并减少*泄露*的影响。
- en: 'When we''re talking about the type of control without time being a factor,
    we''ve already gone into some examples of each: **physical controls**, **procedural
    controls**, and **technical controls**. We mentioned guards, biometrics readers,
    turnstiles, and so on. Additionally, **closed-circuit television** (**CCTV**),
    motion sensors, fences, and so on are also considered physical controls. **Procedural
    controls** (or *administrative controls*) are pretty self-explanatory as well,
    and include processes (or administration) such as training and awareness; risk
    management processes; recruitment policies; disaster recovery plans; and so on.
    You have been given a load of technical control examples in this chapter so far,
    such as encryption, authentication, TPMs, data execution prevention, and so on.
    A couple of examples of **legal and regulatory controls** (also known as *compliance
    controls*) are the various privacy laws and information security standards that
    currently exist, sometimes carrying fines for non-compliance (such as the **General
    Data Protection Regulation** (**GDPR**)).'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论没有时间因素的控制类型时，我们已经讨论了一些每种控制的例子：**物理控制**、**程序控制**和**技术控制**。我们提到过守卫、生物识别读卡器、旋转门等等。此外，**闭路电视**（**CCTV**）、运动传感器、围栏等也被视为物理控制。**程序控制**（或*行政控制*）也比较容易理解，包含培训和意识等过程（或管理）；风险管理过程；招聘政策；灾难恢复计划等等。到目前为止，您已经了解了这一章中的一些技术控制示例，如加密、身份验证、TPM、数据执行防护等。几个**法律和监管控制**（也称为*合规控制*）的例子包括现存的各种隐私法律和信息安全标准，通常对于不遵守者会罚款（例如**通用数据保护条例**（**GDPR**））。
- en: 'The selection of controls in order to adequately defend your organization''s
    assets against the threats it faces should be based on a combination of the following
    two factors:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分保护组织的资产免受其面临的威胁，控制措施的选择应基于以下两个因素的组合：
- en: The level of risk that asset faces, based on the likelihood of a threat exploiting
    a vulnerability, and the impact of that exploitation
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资产面临的风险水平，基于威胁利用漏洞的可能性以及该利用所带来的影响
- en: Your knowledge surrounding the effective application of various controls, depending
    on the threat vectors for that asset
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您对于根据该资产的威胁向量有效应用各种控制的知识
- en: We want to apply the required controls for the required use cases, and ensure
    that we've covering all threat vectors that are relevant to that specific asset
    and threat actor, but not wasting our time on applying controls that aren't relevant.
    If there is no need for a control to exist, then it's important to remember that
    complexity is the enemy of security, and reconsider increasing levels of complexity
    for no benefit in terms of reducing the level of risk.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望应用所需的控制措施，确保我们覆盖了与特定资产和威胁行为者相关的所有威胁向量，但不浪费时间应用那些不相关的控制措施。如果没有必要存在某个控制措施，那么重要的是记住，复杂性是安全的敌人，需要重新考虑在没有减少风险水平方面获益的情况下增加复杂性。
- en: Now that we've covered how to assess and mitigate vulnerabilities in hardware,
    software, network, and physical systems, let's move on to the next topic, and
    focus on designing secure information systems.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了如何评估和减轻硬件、软件、网络和物理系统中的漏洞，让我们继续下一个主题，专注于设计安全的信息系统。
- en: Best practices in designing secure information systems
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计安全信息系统的最佳实践
- en: 'With all of this knowledge that we just merely glossed over so far in this
    chapter (and which I''m fairly certain you already had) in regard to all of the
    threats, threat actors, motivations, vulnerabilities, and the methods for system
    exploitation that exist, the clear question that remains unanswered is: *"How
    can I design secure information systems?"*'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在这一章中我们只是简单地概述了我们已经拥有的所有知识（我相信你已经掌握），关于所有的威胁、威胁行为者、动机、漏洞以及现有的系统利用方法，清晰的问题仍然没有得到回答："*我如何设计安全的信息系统？*"
- en: Finally! We're going to talk about how to design a secure information system,
    and you're going to learn all of the ins and outs of how to do that in the best
    possible way. I'm really excited, but perhaps not for the reason you might think.
    You see, in learning about the threats, the devices and assets, and the methods,
    I truly believe you've already activated many of the thought processes required
    and have asked yourself many of the questions required to design a more secure
    system.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 最后！我们要讨论如何设计安全的信息系统，您将学习如何以最佳方式做到这一点的所有细节。我真的很兴奋，但也许并不是你认为的原因。你看，通过学习威胁、设备和资产以及方法，我真的相信你已经激活了许多设计更安全系统所需的思维过程，并提出了许多必要的问题。
- en: Many guidelines exist, but since this book is (trying to) focus on the best
    practices, I'm going to go over some issues that we've covered, and simplify the
    process of designing a secure system for you.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多指南，但由于本书（试图）专注于最佳实践，我将回顾我们已经涵盖的一些问题，并简化为您设计安全系统的过程。
- en: Secure design principles
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全设计原则
- en: When we're looking at the appropriate ways to design our systems and the way
    they interact with each other, and users, we want to consider the principles of
    **least privilege** and **Zero Trust**, and the ideologies behind the **secure
    by default** and **secure by design** principles.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们考虑设计系统及其与其他系统和用户的交互适当的方式时，我们希望考虑**最小权限**和**零信任**的原则，以及**默认安全**和**安全设计**原则的思想。
- en: The **principle of least privilege** is focused on ensuring that any access
    to a system resource must only be for the intended purposes, for the shortest
    amount of time possible. If a user or asset isn't meant to perform an action then
    it shouldn't ever be given the ability to do so, and so rights can be reduced
    down to the least-possible amount.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '**最小权限原则**专注于确保对系统资源的任何访问都只能用于预期目的，且时间最短。如果用户或资产无意执行某个操作，则不应授予其执行该操作的能力，因此权限可以减少到最小可能的数量。'
- en: For an example, if you have a website being served to the internet via web server
    software that is running as the admin user, compromise of that web server could
    lead to critical or sensitive files in the network being read or deleted by a
    malicious actor. Does that web server asset need the ability to delete files?
    Does it need access to all of the sensitive files? No, so reduce the privileges
    down to the least amount possible.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您的网站通过作为管理员用户运行的Web服务器软件向互联网提供服务，那么Web服务器的ompromise可能导致网络中的关键或敏感文件被恶意行为者读取或删除。该Web服务器资产是否需要能力来删除文件？它是否需要访问所有敏感文件？不需要，因此将权限减少到最低限度。
- en: 'As another example, if a user (or process) needs to read the files in a certain
    system folder, that user (or process) should only be given read privileges, not
    write privileges. Additionally, they should only be able to access the files for
    reading purposes for the period of time in which it is required. This is aided
    by **Just-In-Time access**, a methodology that enforces the least-privilege principle
    in access to your systems. It allows for access to requested resources, by provisioning
    an ephemeral one-time-use account that is deprovisioned immediately after the
    task is complete. This is granted (or not granted) based on risk indicators, such
    as "Is this a normal activity for this user?", or "Does this user have **multi-factor
    authentication** (**MFA**) enabled?", among many other things. Gone are the days
    when users are always "admins". The reason for this is simple: by reducing down
    to least-privilege and leveraging Just-In-Time access, we diminish the impact
    of a compromised account and decrease the likelihood of compromise through elevation
    of privileges.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 作为另一个例子，如果用户（或进程）需要读取某个系统文件夹中的文件，则应只授予该用户（或进程）读取权限，而不是写入权限。此外，他们应该只在需要的时间段内才能访问文件进行读取。这通过**即时访问**方法得到了辅助，这是一种强制实施最小权限原则的系统访问方法。它通过提供一个临时的单次使用帐户来允许访问所请求的资源，并在任务完成后立即撤销该帐户。这是基于风险指示器（如“这是该用户的正常活动吗？”或“该用户是否启用了**多因素认证**（**MFA**）？”等因素）来授予（或不授予）访问权限的。曾经的“管理员”时代已经过去了。原因很简单：通过减少到最小权限并利用即时访问，我们减少了受损账户的影响，并通过权限提升降低了受到攻击的可能性。
- en: '**Zero Trust** is a modern security concept focused on a few ideologies. These
    include the following:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '**零信任**是一种现代安全概念，集中在几个思想理念上。这些理念包括以下内容：'
- en: Using the principle of least privilege across your system(s) through Just-In-Time
    and Just-Enough access, and encrypting and protecting your data at rest to prevent
    unauthorized access.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的系统中通过即时访问和恰到好处的访问原则，使用最小权限原则，并加密和保护你的静态数据，以防止未经授权的访问。
- en: Always verifying all activities, by authenticating and authorizing based on
    all of those datapoints we began to mention when we were talking about risk indicators
    for Just-In-Time access, which include geolocation, device metrics, anomaly detection,
    and so on.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终验证所有活动，通过基于我们在讨论即时访问风险指示器时提到的所有数据点进行身份验证和授权，这些数据点包括地理位置、设备指标、异常检测等。
- en: Assuming breach, the major idea behind Zero Trust. You restrict any lateral
    movements by segmenting all assets through the methods in the preceding two bullets;
    you prevent any eavesdropping by encrypting end to end; you detect active threats
    through logging and monitoring; and you continually improve by updating, patching,
    and evaluating the implementation of the system.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设存在漏洞，这是零信任背后的主要思想。通过前面两条所述的方法，限制所有资产的横向移动；通过端到端加密来防止任何窃听；通过日志记录和监控来检测主动威胁；并通过更新、修补和评估系统的实施情况来不断改进。
- en: Zero Trust sounds pretty logical at this stage, after understanding the threats,
    vulnerabilities, and methodologies currently seen in the world, but as I said,
    it's a pretty new ideology that is getting more and more traction as time goes
    on, thankfully. Further reading can be found in *NIST SP 800-207*, if you want
    to have a bunch of fun reading a NIST Special Publication.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 零信任在这一阶段听起来相当合乎逻辑，在理解当前世界中的威胁、漏洞和方法论之后，但正如我所说，它是一个相对较新的理念，随着时间的推移，越来越受到关注，幸运的是。如果你想要在阅读NIST特别出版物时找点乐子，可以参考
    *NIST SP 800-207* 进一步阅读。
- en: '**Secure by design** is very much the end goal of what we''re trying to achieve
    in all of our systems and is the main topic of this chapter. It''s the principle
    of building systems to be secure from the beginning. When creating a secure-by-design
    system, we must first consider the threats, the assets, and the vulnerabilities
    that are inherently present, and then we must consider all of the security principles
    and controls we''ve gone into, and more!'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全设计**是我们在所有系统中追求的最终目标，也是本章的主要内容。这是从一开始就构建安全系统的原则。在创建安全设计的系统时，我们必须首先考虑固有的威胁、资产和漏洞，然后考虑我们已经实施的所有安全原则和控制措施，等等！'
- en: I just want to take this moment to harp on at you that there is a ton of further
    investigation and learning to do after this. The continual improvement that we're
    going to be putting our processes and systems through will also be applied to
    you and your knowledge. As threats emerge and change and new technologies are
    developed, new vulnerabilities and mitigation controls will crop up too, and it's
    your responsibility to investigate all of them. I'm sorry that I can't go into
    all of them in this book, but what I hope I have done is help you in analyzing
    controls and ensuring you are selecting the appropriate mitigations for each of
    your risks.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我只想趁这个机会再强调一下，之后还有大量的进一步调查和学习要做。我们将要对流程和系统进行的持续改进，也会应用到你和你的知识上。随着威胁的出现和变化以及新技术的发展，新的漏洞和缓解措施也会随之出现，而你有责任去调查它们。很抱歉在这本书中不能详细讲解所有内容，但我希望我能帮助你分析控制措施，并确保你为每一个风险选择适当的缓解措施。
- en: Getting back on track, among these principles and controls, the best choices
    are selected strategically by understanding the risks implemented and enforced
    by the architecture design to ensure confidentiality, integrity, availability,
    and non-repudiation for the entire system. This is always done by avoiding **security
    through obscurity**, which will eventually fail at the hands of an insider risk
    or knowledgeable threat actor. We should be open about the design of the system
    because any knowledge of how the system is designed shouldn't compromise its security,
    because it is designed in a way that is secure and beyond any knowledge.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 回到正题，在这些原则和控制措施中，最佳选择是通过理解架构设计所实施和执行的风险来战略性地选择，以确保整个系统的机密性、完整性、可用性和不可否认性。这总是通过避免**通过模糊性来确保安全**来实现的，因为这最终会在内部风险或知识丰富的威胁者面前失败。我们应该对系统的设计保持开放，因为任何关于系统设计的知识都不应该妥协其安全性，因为它的设计本身就安全，并超越任何已知的攻击方法。
- en: 'When we''re looking at hackers, I would like to bring up a few bullet points
    I mentioned earlier when I was talking about the differences between a script-kiddie
    and an APT. I mentioned the following sequence for hacking:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们讨论黑客时，我想提到之前在谈论脚本小子和APT之间的区别时提到的几点。我提到了黑客的以下顺序：
- en: Gain access.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获得访问权限。
- en: Elevate privileges.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提升权限。
- en: Maintain access.
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持访问权限。
- en: Exfiltrate information or manipulate operations.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外泄信息或操控操作。
- en: Remain undetected.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持不被发现。
- en: When designing your system, you will want to consider how to prevent each of
    these steps from happening. How can you ensure a malicious actor isn't able to
    gain access? How do malicious actors elevate privileges or move laterally in your
    estate? How are they able to maintain access? Are you able to detect when data
    is exfiltrated or operations are manipulated? Many of the principles we've gone
    into so far are applicable here, and you can bolster your system through implementing
    a set of defense-in-depth controls for each.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计你的系统时，你需要考虑如何防止这些步骤的发生。你如何确保恶意行为者无法获得访问权限？恶意行为者如何提升权限或在你的系统中横向移动？他们如何保持访问权限？你能否检测到数据外泄或操作被篡改的情况？我们到目前为止讨论的许多原则在这里都有应用，你可以通过为每个风险实施一套深度防御控制来增强你的系统。
- en: Well-known controls and their mitigations
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 著名的控制措施及其缓解方法
- en: We should probably turn the way we are looking at this around, and start talking
    about well-known controls and which risks they might mitigate. That could help
    things click, and help us analyze our existing systems.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能需要从另一个角度来看待这个问题，开始讨论著名的控制措施以及它们可能缓解哪些风险。这可以帮助我们理解事情，并帮助我们分析现有的系统。
- en: For example, **backups** prevent availability and integrity risks. If your systems
    have been affected by ransomware, providing you have a recent backup that hasn't
    been affected, then you can always restore your systems with that data, causing
    a minimized amount of disruption and loss. Backups aren't the only control for
    **ransomware**, of course. We said that ransomware often spreads as a worm and
    uses elevated privileges to encrypt the data in your estate, so by following the
    **principle of least privilege**, you reduce the likelihood that a compromised
    account is able to modify the data. By updating your systems, you reduce the likelihood
    that a piece of **malware** is able to exploit a known vulnerability in your systems.
    By having **antivirus** or **advanced threat-protection** software installed on
    all of your compatible systems, you apply a *detective control* to prevent the
    spread of that malware, and mitigate against the loss.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，**备份**可防止可用性和完整性风险。如果你的系统受到勒索软件的影响，前提是你有一个最近的、未受影响的备份，那么你始终可以使用该数据恢复系统，最大程度地减少干扰和损失。当然，备份并不是防护**勒索软件**的唯一手段。我们之前提到勒索软件通常以蠕虫的形式传播，并利用提升的权限来加密你系统中的数据，因此通过遵循**最小权限原则**，可以降低被攻击账户修改数据的可能性。通过更新系统，你可以降低**恶意软件**利用已知漏洞的可能性。通过在所有兼容系统上安装**防病毒**或**高级威胁防护**软件，你应用了一种*侦测控制*来防止恶意软件的传播，并减轻可能造成的损失。
- en: Reducing privileges can also help protect against **logic bombs** and insider
    threats from exfiltrating data such as intellectual property.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 降低权限也有助于防止**逻辑炸弹**和内部威胁窃取数据，比如知识产权。
- en: '**Antivirus software** helps protect against known threats, usually through
    signature-based detection, and can help detect and remove the threats I mentioned
    earlier under the malware category, such as **spyware**, **adware**, **rootkits**,
    and **bootkits**.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '**防病毒软件**帮助防护已知威胁，通常通过基于签名的检测，能够帮助检测和清除我之前提到的恶意软件类别中的威胁，例如**间谍软件**、**广告软件**、**Rootkit**和**Bootkit**。'
- en: '**Vulnerability management** and **patching** can ensure that various known
    exploits aren''t able to be used in your estate, because the manufacturer of the
    product has released an update to mitigate or remove the risk of compromise. There
    are always articles and news stories about **zero days**, but in reality, most
    organizations are running outdated software with publicly available exploits.
    The "Kiss principle" is relevant here. Focus on risk, and with a high likelihood
    (such as if the exploit is currently available on GitHub) comes elevated risk.
    I will delve deeper into vulnerability management and patching in [*Chapter 7*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123),
    *Owning Security Operations*.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '**漏洞管理**和**修补**可以确保各种已知的漏洞不能在你的系统中被利用，因为产品的制造商已发布更新以缓解或消除潜在的安全风险。总会有关于**零日漏洞**的文章和新闻报道，但实际上，大多数组织仍在使用有公开漏洞的过时软件。“Kiss原则”在这里很有用。专注于风险，高概率的风险（例如如果漏洞已在GitHub上公开）会带来更大的威胁。我将在[*第7章*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123)，*掌控安全运营*中深入探讨漏洞管理和修补。'
- en: When it comes to physical security, we can mention **uninterruptable power supplies**
    (**UPS**) for availability during blackouts, brownouts, and power sag. We can
    consider **surge protection** for spikes.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理安全方面，我们可以提到**不间断电源供应**（**UPS**）用于停电、欠电压和电力波动时的可用性。我们还可以考虑**浪涌保护**，以应对电力尖峰。
- en: We already mentioned **heating**, **ventilation**, **humidity control**, and
    **cooling** as mitigation tactics from physical threats, as well as avoiding the
    combination of water sources and your information systems. **Fire protection**
    is also a topic for concern. Human life is the most important consideration (although
    from what I've seen, I'm not sure 100% of organizations agree!). Fire protection
    is a way to protect employees from harm and is potentially a compliance requirement,
    depending on your region or operations.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经提到过**供热**、**通风**、**湿度控制**和**冷却**作为物理威胁的缓解策略，以及避免水源与信息系统接触。**火灾保护**也是一个值得关注的话题。人命安全是最重要的考量（尽管从我所见的情况来看，我不确定100%的组织都认同这一点！）。火灾保护是保护员工免受伤害的手段，并且根据你的地区或运营情况，它可能是一个合规要求。
- en: The main thing I'd like to raise when considering physical security is **outsourcing**.
    Many of the physical security requirements we've covered are as a result of having
    servers and information systems in an office location, and by outsourcing as many
    of those systems possible by utilizing the cloud and **shared responsibility model**,
    you are able to transfer the risk for physical security to a company such as Microsoft
    or Amazon, who have data centers with incredible physical security controls, appropriate
    for various levels of industrial, military, and governmental activities.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我想在考虑物理安全时提出的一个主要问题是**外包**。我们提到的许多物理安全要求，都是由于服务器和信息系统位于办公室位置，而通过尽可能多地将这些系统外包，利用云服务和**共享责任模型**，你可以将物理安全风险转移给像微软或亚马逊这样的公司，他们拥有具备强大物理安全控制的数据中心，适合各种级别的工业、军事和政府活动。
- en: '**Background checks** and **due diligence** for new hires and third-party vendors
    are preventative controls that protect from threats exploiting a gap in your organizational
    processes. Furthermore, we could look at **security awareness training** and **phishing
    exercises** as mitigation against organizational threats. By training your employees
    and creating an environment of *security-consciousness*, you are able to reduce
    the risk of a successful phishing attack or negligent practices negatively affecting
    your organization''s operations.'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '**背景调查**和**尽职调查**对于新员工和第三方供应商来说，是预防性控制，可以防止威胁利用你组织流程中的漏洞进行攻击。此外，我们还可以通过**安全意识培训**和**钓鱼攻击演练**作为减少组织威胁的缓解措施。通过对员工进行培训并创造一个*安全意识*的环境，你可以降低成功的钓鱼攻击或疏忽行为对组织运营的负面影响。'
- en: By utilizing appropriate **hardware and software firewalls**, **network topologies**,
    and **cloud services**, you are able to reduce the likelihood of a DoS attack
    (or even a DDoS attack) from taking your business offline, or increasing your
    monthly cloud service bill to a point where it can't be paid for.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用适当的**硬件和软件防火墙**、**网络拓扑结构**和**云服务**，你可以减少DoS攻击（甚至是DDoS攻击）让你的业务离线，或使你的月度云服务账单增加到无法支付的程度的可能性。
- en: By performing active testing on all of your assets, including performing **web
    application testing** against your web apps, taking into consideration the **OWASP
    Top 10**, you are able to get visibility on present vulnerabilities, as well as
    prevent from new vulnerabilities being added to your existing apps and software
    solutions. By allowing a third-party **penetration test** on your environment,
    you allow for the good guys to find holes that the bad guys would have found eventually,
    ultimately a **preventative control** for your organization. Did your systems
    notice the pentest? If not, then you don't have the appropriate level of detective
    controls such as **logging** combined with **SIEM** and a **SOC**, which is another
    control that can be outsourced to specialty firms with the ability to perform
    the appropriate analysis on the activity in your estate.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对所有资产进行主动测试，包括对你的网页应用进行**网页应用测试**，并考虑**OWASP Top 10**，你能够看到当前的漏洞，同时防止新的漏洞被添加到现有的应用和软件解决方案中。通过允许第三方进行**渗透测试**，你让好人找到那些坏人最终会发现的漏洞，这最终成为你组织的**预防性控制**。你的系统注意到渗透测试了吗？如果没有，那说明你没有适当的侦测控制措施，如**日志记录**结合**SIEM**和**SOC**，这是另一个可以外包给具有相应分析能力的专业公司进行的控制。
- en: Considering alternative devices
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 考虑替代设备
- en: When it comes to alternative devices such as mobile, **Internet of Things**
    (**IoT**), or **supervisory control and data acquisition** (**SCADA**), different
    aspects will need to be considered, because of the nature of each.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在涉及到替代设备时，如移动设备、**物联网**（**IoT**）或**监控控制与数据采集系统**（**SCADA**），需要考虑不同的方面，因为每种设备的性质不同。
- en: 'Starting with **mobile**—or, specifically, *mobile phones*—let''s consider
    what we''re looking at here: We have a device that people take with them everywhere.
    These devices may store your organization''s sensitive data, or have access to
    your estate… and something that people do on occasion is forget them somewhere.
    You''ve given up **physical access**, so what is it exactly you need to do to
    ensure you''re only paying to replace the phone, and haven''t (for instance) given
    up your intellectual property to a competitor? Well, earlier in this chapter,
    we already covered the idea of encrypting your hard drives to prevent physical
    access leading to compromise, and once you encrypt your device, you probably will
    have put a lock screen on that is password-protected… but as this device moves
    around, and you might not know the last place you left it, you might want to consider
    the additional feature of the **Global Positioning System** (**GPS**) **Find My
    Phone** or **Remote** **wipe** functions. Additionally, if this device is owned
    by the user but still accesses your resources, you can have a security baseline
    that is checked before it is given access your estate. This checks if the latest
    patches have been applied, and usually requires some sort of virus-protection
    solution.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 从**移动设备**——或更具体地说是*手机*——开始，我们来看一下这里的情况：我们有一种人们随身携带的设备。这些设备可能存储着组织的敏感数据，或可以访问你的资源……而人们偶尔会把它们忘在某个地方。你已经放弃了**物理访问**，那么你究竟需要做些什么，才能确保你只是花钱更换手机，而没有（例如）把你的知识产权交给竞争对手呢？好吧，在本章之前，我们已经讨论过加密硬盘以防止物理访问导致泄露的观点，一旦你加密了设备，你可能会设置一个有密码保护的锁屏……但随着设备的移动，且你可能不知道它最后放在哪儿，你可能需要考虑额外的功能，如**全球定位系统**（**GPS**）的**查找我的手机**或**远程擦除**功能。此外，如果这个设备是用户拥有的，但仍然访问你的资源，你可以设定一个安全基线，在授予它访问权限之前进行检查。这项检查会确认是否已应用最新的补丁，并通常要求安装某种病毒防护解决方案。
- en: When we're talking about IoT or we're looking at devices that usually have access
    to the outside world through the internet, which may be created by a manufacturer
    who doesn't specialize in making hardware or software, but rather lightbulbs or
    stereo systems or vacuum cleaners or security cameras, and might not regularly
    patch reported vulnerabilities. It sounds like a bit of a nightmare for your estate,
    but don't worry—there are solutions to that. First, create an IoT network for
    all that stuff. Anything falling under the IoT device category gets put in that
    segregated sandbox, mitigating against the impact of a vulnerability that is exploitable
    over the web and allows access into the network (also known as **remote-access
    vulnerabilities**). Yes, it's happened… IoT lightbulbs have given remote access
    into corporate networks. It actually happened all the time, and it's pretty embarrassing.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论物联网或查看那些通常通过互联网访问外部世界的设备时，这些设备可能是由一个不专门制造硬件或软件的厂商生产的，而是生产灯泡、音响系统、吸尘器或监控摄像头，并且可能不会定期修补已报告的漏洞。听起来对你的网络来说有点像噩梦，但别担心——有解决办法。首先，为这些设备创建一个物联网网络。任何属于物联网设备类别的东西都被放入这个隔离的沙盒中，以减轻通过网络可利用的漏洞对网络的影响（也叫做**远程访问漏洞**）。是的，确实发生过…
    物联网灯泡曾经为公司网络提供远程访问。实际上，这种事情时常发生，真是相当尴尬。
- en: Other mitigations for defense-in-depth purposes include selecting IoT products
    that have a good track record for releasing patches, applying the latest said
    patches, restricting privileges down to the least amount possible while retaining
    functionality (the **least-privilege** principle), and changing default passwords
    that are easily guessable or (because they're the same for every device) are found
    online.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 其他深度防御的缓解措施包括选择那些有良好发布补丁记录的物联网产品，应用最新的补丁，将权限限制到最低程度，同时保留功能性（**最小权限**原则），以及更改容易猜测或（由于它们在每个设备上都是相同的）在网上可以找到的默认密码。
- en: '`Shodan.io`, the search engine for IoT. If you haven''t looked at *Shodan.io*,
    you definitely should do that (as soon as you finish the *Mission: Impossible*
    films); it''s legitimately cool. You get a world map view, with red dots on the
    map that show various internet-connected devices, their IP addresses and open
    ports, and even a screenshot of the web page that you would see if you followed
    the rabbit hole and accessed the device over the internet in your browser. Awesome,
    right? Except, sometimes, there''s a *wind turbine* or *electricity plant* that
    is exposed to the internet with no mitigations. A malicious actor could just turn
    everything off, or on, or do pretty much anything an authorized user could do!'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '`Shodan.io`，物联网的搜索引擎。如果你还没看过*Shodan.io*，你一定应该去看看（趁你还没看完*碟中谍*电影系列的时候）；它确实很酷。你可以查看世界地图，地图上有红点，显示各种互联网连接的设备、它们的IP地址和开放端口，甚至还有你如果跟踪链接并在浏览器中访问设备时看到的网页截图。很棒吧？可是，有时候，*风力涡轮机*或*电力厂*就暴露在互联网中，没有任何防护措施。恶意行为者可能会把一切都关掉，或打开，或者做任何授权用户能做的事！'
- en: In order to mitigate against the risk of high-impact functionality combined
    with outdated and insecure protocols, weak (or lack of) authentication, and ineffective
    security-through-obscurity controls, you should consider a few things. The first
    thing that you need to do is to find all of the connections and create a diagram
    of your SCADA networks. Then, if you can, **airgap** as many of these devices
    as possible. No internet access; separate network; no connection to the outside
    world. That doesn't really protect you from all of the threats, however. Strengthen
    the remaining connections in the network with authentication and authorization
    controls; install updates if they exist; disable unnecessary services that increase
    your **attack surface**; perform **penetration tests** and **red teams**; and
    make sure to always consider SCADA in your risk management processes.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少高影响功能与过时且不安全的协议、弱（或缺失）身份验证以及无效的安全通过模糊化控制的风险，你需要考虑几个方面。你需要做的第一件事是找出所有连接，并创建你的SCADA网络图。然后，如果可能的话，**空气隔离**尽可能多的设备。没有互联网访问；独立的网络；没有与外部世界的连接。然而，这并不能完全保护你免受所有威胁。加强网络中剩余连接的身份验证和授权控制；如果有更新，安装它们；禁用不必要的服务，这些服务会增加你的**攻击面**；进行**渗透测试**和**红队演练**；并确保始终将SCADA纳入你的风险管理流程中。
- en: The thing is, ideally, this is how you should be treating everything in your
    estate! Most of the best practices for securing your devices, network, and organization
    apply to any of these "alternative devices", as well as the typical devices. We
    care about risk, and we mitigate against those risks when we design and improve
    our information systems.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是，理想情况下，你应该以这种方式对待你所有的设备！大多数最佳实践适用于保护你的设备、网络和组织，也同样适用于这些“替代设备”和典型设备。我们关注的是风险，我们在设计和改进信息系统时，都会采取措施来缓解这些风险。
- en: When you read about a new control, consider what risk they are actually solving
    (and not just what the marketing material says). When you're designing new systems
    or evaluating your existing ones, consider your controls and whether there's a
    gap that could allow for exploitation, and if that gap should be filled, depending
    on if the level of risk is unacceptable according to your risk management policy.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 当你阅读有关新控制的信息时，考虑一下它们实际上解决了什么风险（而不仅仅是营销材料上所说的内容）。在设计新系统或评估现有系统时，要考虑你的控制措施以及是否存在可能被利用的漏洞，如果存在这样的漏洞，还需要根据你的风险管理政策判断是否应填补该漏洞，前提是该风险水平是否不可接受。
- en: 'One other point I would like to raise in regard to designing secure systems
    is this: in your design for your system, please ensure you are able to keep the
    system up to date with the latest updates and patches! So many of the issues we
    see today are still because systems weren''t designed in a way that allows for
    updates, be it due to legacy software not being compatible with new operating
    systems, or because of a limited access to the internet as a result of **air-gapping**.
    Design a process that allows for the updating of all of your assets, regardless
    of if they need to be air-gapped or not, and create a plan to ensure that your
    systems work on the most up-to-date versions possible. Keep track of whether your
    systems are running the latest versions through your asset register or configuration
    management tool (which I''ll talk about in [*Chapter 7*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123),
    *Owning Security Operations*), and update your risk register if a known vulnerability
    exists in an operating system or software version that is being used in your estate.
    If you''re able to preemptively anticipate this and include these plans and processes
    in your design and implementation consideration, it''s going to be a huge leap
    forward for your organization''s security in the future.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我想提到的关于设计安全系统的另一个要点是：在你设计系统时，请确保能够及时更新系统的最新更新和补丁！我们今天看到的许多问题依然是因为系统在设计时未考虑到能够进行更新，无论是因为遗留软件无法兼容新的操作系统，还是因为由于**气隙**限制了互联网访问。设计一个能够更新所有资产的过程，无论它们是否需要气隙，并制定一个计划，确保你的系统能够运行最新版本。通过你的资产登记册或配置管理工具（我将在[*第7章*](B16611_07_Final_JM_ePub.xhtml#_idTextAnchor123)，*拥有安全运营*中讨论）跟踪系统是否运行的是最新版本，并在你的风险登记册中更新，如果操作系统或软件版本存在已知漏洞。如果你能够预见到这一点，并在设计和实施时考虑到这些计划和过程，那么未来对你组织的安全将是一次巨大的进步。
- en: Summary
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we covered an incredibly vast amount of information, and I
    must reiterate like a broken record that each and every one of these key terms
    in this chapter could have an entire book (or series) devoted to a deep dive into
    them. The purpose of this book is more focused on reacquainting you with the key
    points, helping you look at each of these in the right way, and applying high-level
    principles to your knowledge to increase your effectiveness at your organization.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涉及了大量的信息，我必须像打破的唱片一样重申，本章中的每一个关键术语都可以专门用一本书（或一系列书籍）进行深入探讨。本书的目的是更多地帮助你重新熟悉这些关键点，帮助你以正确的方式看待每一个点，并将高层次的原则应用到你的知识中，以提高你在组织中的工作效率。
- en: From assets and their vulnerabilities, to threat actors and their motivations,
    to the methodologies that those threat actors use to exploit the vulnerabilities
    in our assets, we leapt across several major issues in information security, both
    from strategic and operational standpoints, in order to properly understand the
    landscape.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 从资产及其漏洞，到威胁行为者及其动机，再到这些威胁行为者利用我们资产中的漏洞的方式，我们跨越了信息安全中的几个重大问题，既从战略层面也从操作层面，以便正确理解整体局势。
- en: By understanding the landscape, we moved into applying our risk management principles
    and knowledge surrounding the impact and likelihood of a threat exploiting a vulnerability,
    to mitigate and control against various risks. After looking at how to choose
    the appropriate controls for each risk, how the controls are categorized, and
    how many of them work, we looked at how to design systems with these risks in
    mind from the beginning, to ensure a more secure design by default and see how
    we might contribute to improve our own organization's systems the next time there's
    a discussion around their design.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 通过了解整体情况，我们开始应用我们的风险管理原则和有关威胁利用漏洞的影响及可能性的知识，以减轻和控制各种风险。在考虑如何为每个风险选择合适的控制措施、如何分类这些控制措施，以及它们的有效性之后，我们开始探讨如何从一开始就考虑这些风险来设计系统，以确保设计默认更安全，并且看看我们如何在下次关于系统设计的讨论中为改善我们自己组织的系统做出贡献。
- en: Now that we're done with this chapter, let's move on to the next one, which
    I've alluded to a few times already.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经完成了这一章，接下来我们将进入我已经提到过几次的下一章。
