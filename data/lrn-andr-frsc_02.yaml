- en: Setting up the Android Forensic Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Android 取证环境
- en: 'Before starting a forensic examination, you need a workstation. A forensic
    analyst needs to be in total control of their workstation at all times. This chapter
    will take you through everything that is necessary to have an established forensic
    setup for examining Android devices. The following topics are going to be covered
    in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始取证检查之前，您需要一台工作站。取证分析师需要时刻完全掌控他们的工作站。本章将带您了解建立用于检查 Android 设备的取证环境所需的一切。以下主题将在本章中讨论：
- en: Android forensic setup
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android 取证设置
- en: Android Debug Bridge
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android 调试桥
- en: Rooting Android
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rooting Android
- en: Android forensic setup
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android 取证设置
- en: 'Setting up a sound and well-controlled forensic environment is crucial before
    the start of any investigation. Start with a fresh and forensically sterile computer.
    A forensically sterile computer is one that prevents the potential of cross-contamination
    and doesn''t introduce unwanted data. This is to ensure that the software present
    on the machine does not interfere with the current investigation. Install basic
    software, such as the ones mentioned in the following list, which are necessary
    to connect to the device and to perform analysis:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始任何调查之前，建立一个健全且受控的取证环境至关重要。首先使用一台全新且取证无污染的计算机。取证无污染的计算机是指能够防止交叉污染并且不引入不必要数据的计算机。这是为了确保计算机上的软件不会干扰当前的调查。安装一些基本软件，如下所列，它们是连接设备和进行分析所必需的：
- en: Android SDK
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android SDK
- en: Drivers for mobile devices
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动设备驱动程序
- en: Office packages
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 办公软件包
- en: Tools used for analysis
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于分析的工具
- en: Android SDK
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android SDK
- en: It's important that we begin the discussion with Android Studio and the Android
    SDK. **Android Studio** is a fully-fledged **Integrated Development Environment**
    (**IDE**), and contains everything needed to build a full app from the ground
    up. The Android **Software Development Kit** (**SDK**) is a subset of Android
    Studio, including only the tools needed to communicate with a device via the command
    line. It includes software libraries, APIs, emulator, reference material, and
    many other tools that not only help to create Android applications but also provide
    documentation and utilities that help significantly in forensic analysis of Android
    devices. Having sound knowledge of the Android SDK can help you understand the
    particulars of a device that, in turn, aid during investigation.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要从 Android Studio 和 Android SDK 开始讨论。**Android Studio** 是一个功能齐全的 **集成开发环境**（**IDE**），包含从头开始构建完整应用所需的所有工具。Android
    **软件开发工具包**（**SDK**）是 Android Studio 的一个子集，只包括通过命令行与设备通信所需的工具。它包括软件库、API、模拟器、参考资料以及许多其他工具，这些工具不仅有助于创建
    Android 应用，还提供了有助于 Android 设备取证分析的文档和实用程序。对 Android SDK 有充分的了解，可以帮助您理解设备的特性，从而在调查过程中提供帮助。
- en: During examination, the SDK helps us to connect to the device and access the
    data. The SDK is supported in Windows, Linux, and OS X and can be downloaded for
    free at [https://developer.android.com/studio](https://developer.android.com/studio).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查过程中，SDK 帮助我们连接到设备并访问数据。SDK 支持 Windows、Linux 和 OS X，可以从 [https://developer.android.com/studio](https://developer.android.com/studio)
    免费下载。
- en: For the purposes of this book, only the SDK is needed. It can be found at the
    previous link under the *Command line tools only* section.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本书仅需要 SDK。它可以在前面链接的 *仅命令行工具* 部分找到。
- en: Installing the Android SDK
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Android SDK
- en: 'The following is a step-by-step procedure to install the Android SDK on a Windows
    10 machine:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在 Windows 10 机器上安装 Android SDK 的逐步过程：
- en: Before the start of the Android SDK installation, make sure the system has the
    latest **Java Development Kit** (**JDK**) installed, as the Android SDK is dependent
    on Java SE Development Kit. JDK can be downloaded from [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
    Select the correct download based on your operating system.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开始安装 Android SDK 之前，确保系统已安装最新的**Java 开发工具包**（**JDK**），因为 Android SDK 依赖于 Java
    SE 开发工具包。可以从[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)下载
    JDK。根据您的操作系统选择正确的下载版本。
- en: Download the latest version of SDK tools package from [https://developer.android.com/studio/#command-tools](https://developer.android.com/studio/#command-tools).
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://developer.android.com/studio/#command-tools](https://developer.android.com/studio/#command-tools)
    下载最新版本的 SDK 工具包。
- en: 'Unzip the archive you have just downloaded at the location of your choice.
    That''s it: you''re ready to go.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压你刚刚下载的压缩包到你选择的位置。就是这样：你已经准备好开始使用了。
- en: 'Let''s look at the most interesting parts of the SDK tools from a forensic
    point of view:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从法医角度来看，让我们看看 SDK 工具中最有趣的部分：
- en: '`apkanalyzer`: This allows you to examine the contents of an APK file in a
    fast and efficient manner. For example, you can collect information about application ID,
    version code, and version name and analyze the contents of its manifest, the DEX
    files inside it, as well as resources, such as texts, images, and strings. You
    can find it under `\sdk\tools\bin`.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`apkanalyzer`：这个工具允许你快速有效地检查 APK 文件的内容。例如，你可以收集有关应用程序 ID、版本号和版本名称的信息，并分析其清单文件、其中的
    DEX 文件以及资源（如文本、图片和字符串）。你可以在 `\sdk\tools\bin` 目录下找到它。'
- en: '`avdmanager`: This allows you to create and manage **Android Virtual Devices**
    (**AVDs**) using the command line. Such AVDs can help you with malware analysis
    or can be used for testing if you don''t have a physical Android device, but want
    to research different applications for new forensic artifacts. You can find it
    under `\sdk\tools\bin`.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`avdmanager`：这个工具允许你通过命令行创建和管理**Android 虚拟设备**（**AVDs**）。这些 AVD 可以帮助你进行恶意软件分析，或者如果你没有物理
    Android 设备，但想研究不同的应用程序以及新的法医证据，也可以使用它。你可以在 `\sdk\tools\bin` 目录下找到它。'
- en: '`emulator`: This QEMU-based device-emulation tool that allows you to debug
    and test applications, including malicious ones, in an actual Android runtime
    environment. You can find it under `\sdk\emulator`.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`emulator`：这是一个基于 QEMU 的设备仿真工具，允许你在实际的 Android 运行时环境中调试和测试应用程序，包括恶意应用。你可以在
    `\sdk\emulator` 目录下找到它。'
- en: '`sdkmanager`: This helps you to keep your SDK tools updated. With this tool
    you can view, install, update, and uninstall packages. You can find it under `\sdk\tools\bin`.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sdkmanager`：这个工具帮助你保持 SDK 工具的更新。通过这个工具，你可以查看、安装、更新和卸载软件包。你可以在 `\sdk\tools\bin`
    目录下找到它。'
- en: '`adb` or Android Debug Bridge: This is a command-line tool that allows you
    to communicate with a device. It can be used not only for installing applications
    or copying data from a device, but also can provide a forensic examiner with a
    Unix shell. You can find it under `\sdk\platform-tools`.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adb` 或 Android 调试桥：这是一个命令行工具，允许你与设备进行通信。它不仅可以用来安装应用或从设备中复制数据，还可以为法医检查员提供一个
    Unix shell。你可以在 `\sdk\platform-tools` 目录下找到它。'
- en: '`fastboot`: This allows you to flash a device different system images. It can
    be used, for example, for flashing custom recovery images—you''ll learn about
    them later in this chapter. You can find it under `\sdk\platform-tools`.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fastboot`：这个工具允许你为设备刷入不同的系统镜像。例如，它可以用来刷入自定义的恢复镜像——你将在本章后面了解它们。你可以在 `\sdk\platform-tools`
    目录下找到它。'
- en: 'It''s important to note that so-called SDK platform tools are not included
    in SDK tools by default, and you''ll have to install it; here is how to do it:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，所谓的 SDK 平台工具默认并不包含在 SDK 工具中，你需要安装它；以下是安装方法：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you think that you don't need all of the SDK tools, but want to work only
    with platform tools, you can get it on Android Developers ([https://developer.android.com/studio/releases/platform-tools](https://developer.android.com/studio/releases/platform-tools)).
    All you need to start using these tools is to extract contents of the downloaded
    archive to a directory of your choice.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你认为不需要所有 SDK 工具，只想使用平台工具，你可以从 Android 开发者网站获取它：[https://developer.android.com/studio/releases/platform-tools](https://developer.android.com/studio/releases/platform-tools)。你只需要将下载的压缩包解压到你选择的目录，就可以开始使用这些工具了。
- en: Android Virtual Device
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android 虚拟设备
- en: With the Android SDK installed, you can create an AVD, which is an emulator
    that runs on the workstation. An emulator is often used by developers when creating
    new applications. However, an emulator is also considered helpful during forensic
    investigation as it allows the investigator to understand how certain applications
    behave and to understand how installation of an application affects the device.
    Another advantage is you can design an emulator with the desired version. This
    is especially helpful when working with devices running on older versions of Android.
    Also, AVD comes with root as default.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了 Android SDK 后，你可以创建一个 AVD，这是一个在工作站上运行的模拟器。开发者通常在创建新应用时使用模拟器。然而，模拟器在法医调查中也被认为是有用的，因为它可以帮助调查员了解某些应用的行为，以及理解应用的安装如何影响设备。另一个优点是，你可以设计一个带有所需版本的模拟器。这对于处理运行较旧版本
    Android 的设备尤其有帮助。而且，AVD 默认带有 root 权限。
- en: 'The following steps will guide you to create an AVD on the workstation:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将指导你如何在工作站上创建 AVD：
- en: 'Make sure you have the `emulator` subdirectory under `\sdk`; if not, run the
    following command to install it: `sdkmanager.bat "emulator"`.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在 `\sdk` 目录下有 `emulator` 子目录；如果没有，运行以下命令来安装它：`sdkmanager.bat "emulator"`。
- en: 'We need a system image for our virtual device, for example, `system-images;android-28;google_apis;x86`;
    you can download it this way: `sdkmanager.bat "system-images;android-28;google_apis;x86"`.'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要一个虚拟设备的系统镜像，例如 `system-images;android-28;google_apis;x86`；你可以通过以下方式下载它：`sdkmanager.bat
    "system-images;android-28;google_apis;x86"`。
- en: Now we can create an AVD using `avdmanager`: `avdmanager.bat create avd -k "system-images;android-28;google_apis;x86"
    -n test`. As you may have already guessed, the `k` switch allows you to choose
    a system image, and the `n` switch allows you to choose a name for the AVD.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以使用 `avdmanager` 创建 AVD：`avdmanager.bat create avd -k "system-images;android-28;google_apis;x86"
    -n test`。正如你可能已经猜到的，`k` 选项让你选择系统镜像，而 `n` 选项让你为 AVD 选择名称。
- en: 'It''s time to launch it! Use `emulator.exe` to do it: `emulator.exe -avd test`.
    The following is a screenshot of an AVD after a successful launch:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是时候启动它了！使用 `emulator.exe` 来启动：`emulator.exe -avd test`。以下是 AVD 启动成功后的屏幕截图：
- en: '![](img/9db01dc7-8326-4dd4-9638-608c0ecf0fd8.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9db01dc7-8326-4dd4-9638-608c0ecf0fd8.png)'
- en: Android Virtual Device (AVD) running Android 9 (Pie)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Android 9（Pie）的 Android 虚拟设备（AVD）
- en: 'An emulator can be used to configure email accounts, install applications,
    surf the internet, send text messages, and so on. Forensic analysts and security
    engineers can learn a great deal about Android and how it operates by leveraging
    the emulator and examining the network, filesystem, and data artifacts. The data
    created when working on an emulator is stored in your home directory, in a folder
    named `.android`. For instance, in our example, the details about the test AVD
    that we created earlier are stored in `C:\Users\0136\.android\avd\test.avd`. There
    are several files present under this directory and the following are some of the
    files of interest for a forensic analyst:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟器可用于配置电子邮件帐户、安装应用程序、浏览互联网、发送短信等。法医分析师和安全工程师可以通过利用模拟器，检查网络、文件系统和数据工件，了解关于 Android
    及其操作的很多信息。在模拟器上工作的过程中创建的数据会存储在你的主目录下，名为`.android`的文件夹中。例如，在我们的示例中，我们之前创建的测试 AVD
    的详细信息存储在 `C:\Users\0136\.android\avd\test.avd` 中。该目录下有几个文件，以下是一些对于法医分析师有用的文件：
- en: '`cache.img`: This is the disk image of the `/cache` partition.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache.img`：这是`/cache`分区的磁盘镜像。'
- en: '`sdcard.img`: This is the disk image of the SD card partition.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sdcard.img`：这是 SD 卡分区的磁盘镜像。'
- en: '`Userdata-qemu.img`: This is the disk image of the `/data` partition. The `/data`
    partition contains valuable information about the device user.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Userdata-qemu.img`：这是`/data`分区的磁盘镜像。`/data`分区包含有关设备用户的重要信息。'
- en: '`config.ini`: This file contains information about the system image used.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ini`：此文件包含所使用的系统镜像信息。'
- en: '`hardware-qemu.ini`: This file contains the emulator''s hardware options, such
    as architecture, RAM size, and screen type.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hardware-qemu.ini`：此文件包含模拟器的硬件选项，如架构、RAM 大小和屏幕类型。'
- en: Connecting and accessing Android devices from the workstation
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接和访问 Android 设备从工作站
- en: In order to extract information from an Android device, it first needs to be
    connected to the workstation. As mentioned earlier, care should be taken to make
    sure that the workstation is forensically sterile and used only for the purpose
    of investigation. A forensically sterile workstation is one that has a proper
    build and is free from malware. So, if you are familiar with virtual machines
    and snapshots, it may be a good idea for mobile forensics in general and Android
    forensics in particular, as you can have a perfectly clean workstation every time
    you need to examine a new device.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从 Android 设备中提取信息，首先需要将其连接到工作站。如前所述，必须确保工作站是法医上干净的，并且仅用于调查目的。法医上干净的工作站指的是具有正确配置并且没有恶意软件的工作站。因此，如果你熟悉虚拟机和快照，使用虚拟机可能是进行移动取证（尤其是
    Android 取证）的一个好主意，因为你每次需要检查新设备时，都可以拥有一个完全干净的工作站。
- en: When a device is connected to the computer, changes can be made to the device,
    and so it is crucial that the forensic examiner maintains control over the device
    at all times. In the world of mobile forensics, using write protection mechanisms
    may not be of great help as they prevent successful acquisition of the device.
    This is because during acquisition certain commands need to be pushed to the device
    to extract necessary data. What is more, sometimes even small applications need
    to be installed in order to extract more data from the device or, for example,
    to root it.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当设备连接到计算机时，可以对设备进行更改，因此法医检查员必须始终保持对设备的控制。在移动设备取证领域，使用写保护机制可能帮助不大，因为它们会阻止成功获取设备数据。这是因为在获取数据时，某些命令需要推送到设备上以提取必要的数据。而且，有时甚至需要安装小型应用程序来提取更多数据，或者例如为设备获取
    root 权限。
- en: Identifying the correct device cable
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确认正确的设备数据线
- en: 'An Android device can be connected to a workstation using the physical USB
    interface of the device. This physical USB interface allows the device to connect,
    share data, and recharge from a computer. USB interfaces may change from manufacturer
    to manufacturer, also from device to device. There are different types, such as
    micro-USB, USB-C, and some other less popular proprietary formats. The following
    is a brief description of the most widely used connector types:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓设备可以通过设备的物理 USB 接口与工作站连接。这个物理 USB 接口允许设备与计算机连接、共享数据并进行充电。USB 接口的类型可能因制造商而异，也因设备而异。常见的类型有
    micro-USB、USB-C 和一些不太流行的专有格式。以下是最广泛使用的连接器类型的简要描述：
- en: '| **Connector type** | **Description** |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **连接器类型** | **描述** |'
- en: '| Micro-USB | It is approximately 6 by 1.5 mm in size, with two corners cut
    off to form a trapezoid. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| Micro-USB | 它的大小约为 6 x 1.5 毫米，两个角被切割成梯形。 |'
- en: '| USB-C | It is 8.4 by 2.6 mm in size, in the form of a rectangle with round
    corners. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| USB-C | 它的大小为 8.4 x 2.6 毫米，呈矩形带圆角的形状。 |'
- en: Hence, the first step in acquisition is to identify what kind of device cable
    is required.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，获取数据的第一步是确定需要什么类型的设备数据线。
- en: Installing device drivers
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装设备驱动程序
- en: A mobile device can communicate with the computer only when the necessary device
    drivers are installed on it. Without the necessary drivers, the computer may not
    be able to identify and work with the connected device. Since Android is allowed
    to be modified and customized by the manufacturers, there is no single generic
    driver that would work for all Android devices. Each manufacturer has its own
    proprietary drivers and distributes them along with the phone. Hence, it is important
    to identify the specific device driver that needs to be installed. Of course,
    some of the Android forensic toolkits do come with some generic drivers or a set
    of the most frequently used drivers, but they may not work with all models of
    Android phones. Some Windows operating systems are able to auto detect and install
    the drivers once the device is plugged in but, more often than not, it fails.
    The device drivers for each manufacturer can be found on their respective websites.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 移动设备只有在计算机上安装了必要的设备驱动程序后才能与计算机进行通信。如果没有必要的驱动程序，计算机可能无法识别和与连接的设备配合使用。由于安卓系统允许制造商进行修改和定制，所以没有一个通用的驱动程序能够适用于所有安卓设备。每个制造商都有自己的专有驱动程序，并与手机一同分发。因此，确定需要安装的特定设备驱动程序非常重要。当然，一些安卓取证工具包会附带一些通用驱动程序或最常用的驱动程序集合，但它们可能无法与所有型号的安卓手机兼容。某些
    Windows 操作系统能够在设备插入后自动检测并安装驱动程序，但往往失败。每个制造商的设备驱动程序可以在其官方网站上找到。
- en: Accessing the device
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问设备
- en: After installing the necessary device drivers, connect the Android device to
    the computer directly using the USB cable in order to access it. It is important
    to use genuine, manufacturer-specific cables because universal cables may not
    work properly with certain devices and the investigator may encounter certain
    driver issues. Some of the devices may not be USB 3.0 compatible, which may lead
    to failed driver installations. In that case, it's recommended to try switching
    to USB 2.0 ports. Once the device is connected, it will appear as a new drive
    and you can access the files on the external storage. Some older Android devices
    may not be accessible unless the Connect storage to PC option (present under Settings
    | USB utilities) is enabled on the device.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 安装必要的设备驱动程序后，使用 USB 数据线将安卓设备直接连接到计算机以进行访问。使用原厂专用数据线非常重要，因为通用数据线可能与某些设备不兼容，且调查人员可能会遇到驱动程序相关的问题。有些设备可能不兼容
    USB 3.0，这可能导致驱动程序安装失败。在这种情况下，建议尝试切换到 USB 2.0 端口。一旦设备连接，它会显示为一个新驱动器，你可以访问外部存储中的文件。某些旧款安卓设备可能无法访问，除非在设备的“设置
    | USB 实用工具”中启用“连接存储到 PC”选项。
- en: 'In this case, after connecting the device through USB, the Turn on USB storage
    option needs to be selected, as shown in the following screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，连接设备通过 USB 后，需要选择“开启 USB 存储”选项，如下图所示：
- en: '![](img/e64cc8f2-d38a-4609-a75a-6cd032a4bf22.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e64cc8f2-d38a-4609-a75a-6cd032a4bf22.png)'
- en: USB mass storage connection
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: USB 大容量存储连接
- en: This is because older Android devices required USB mass storage mode for transferring
    files between computer and the device. The latest Android devices use MTP or PTP
    protocols, as there were some issues with the USB mass storage protocol. With
    USB mass storage, the drive makes itself completely available to the computer,
    just as if it were an internal drive. But the problem is that the device that
    is accessing the storage needs exclusive access to it. In other words, when the
    device drive is connected to the computer, it has to be disconnected from the
    Android operating system running on the device in order to work. So any files
    or apps stored on the SD card or USB storage would be unavailable when it was
    connected to the computer. In **Media Transfer Protocol** (**MTP**), the Android
    device doesn't expose its entire storage to Windows. Instead, when you connect
    a device to your computer, the computer queries the device and the device responds
    with a list of files and directories it offers. If the computer has to download
    a file, it sends a request to the file from the device, and the device will send
    the file over the connection. **Picture Transfer Protocol** (**PTP**) is also
    similar to MTP and is commonly used by digital cameras. In this mode, Android
    device will work with digital camera applications that support PTP but not MTP.
    On the latest devices, you can select either MTP or PTP options under Settings
    | Storage | USB computer connection.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为旧款安卓设备需要 USB 大容量存储模式来在计算机和设备之间传输文件。最新的安卓设备使用 MTP 或 PTP 协议，因为 USB 大容量存储协议存在一些问题。使用
    USB 大容量存储时，驱动器会完全向计算机开放，就像它是一个内部驱动器一样。但问题在于，访问存储的设备需要对其进行独占访问。换句话说，当设备驱动器连接到计算机时，必须与设备上的安卓操作系统断开连接才能正常工作。因此，当设备连接到计算机时，存储在
    SD 卡或 USB 存储中的文件或应用程序将无法使用。在**媒体传输协议**（**MTP**）中，安卓设备不会将其整个存储暴露给 Windows。相反，当你将设备连接到计算机时，计算机会查询设备，设备会响应一个它提供的文件和目录列表。如果计算机需要下载某个文件，它会向设备发送请求，设备将通过连接发送该文件。**图片传输协议**（**PTP**）也与
    MTP 类似，通常由数码相机使用。在这种模式下，安卓设备将与支持 PTP 但不支持 MTP 的数码相机应用程序一起工作。在最新设备上，你可以在“设置 | 存储
    | USB 计算机连接”下选择 MTP 或 PTP 选项。
- en: On some Android devices, the option to select MTP and PTP protocols is provided
    only after connecting the device to the computer. After the device is connected,
    watch the **notifications** bar at the top of your screen and you will see a USB
    symbol appear. Pull down the notifications and you will find an option to switch
    between MTP and PTP.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些安卓设备上，只有在将设备连接到计算机后，才会提供选择 MTP 和 PTP 协议的选项。连接设备后，观察屏幕顶部的**通知**栏，你会看到 USB
    图标出现。下拉通知栏，你将找到一个可以在 MTP 和 PTP 之间切换的选项。
- en: 'As shown in the following screenshot, the MTP and PTP options are shown only
    after connecting the device to a computer and pulling down the notifications bar:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，MTP 和 PTP 选项仅在连接设备到计算机并下拉通知栏后才会显示：
- en: '![](img/e6e50f20-7668-420e-9c0a-44ee3ed22455.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6e50f20-7668-420e-9c0a-44ee3ed22455.png)'
- en: Changing USB connection mode on an Android device
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 更改Android设备上的USB连接模式
- en: The default selection is Charging. When the File transfers option is selected,
    it is mounted as a disk drive. When the device is mounted as a disk drive, you
    will be able to access the SD card present on the device.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 默认选择是充电。当选择文件传输选项时，它将被挂载为磁盘驱动器。当设备作为磁盘驱动器挂载时，您将能够访问设备上的SD卡。
- en: From a forensic point of view, the SD card has a significant value as it may
    contain files that are important for an investigation. Most of the images and
    large files related to multimedia are stored in this external storage. SD cards
    are commonly formatted with the FAT32 filesystem, but you might also encounter
    some having exFAT and some other filesystems. As discussed in [Chapter 1](1e7a3a23-96c6-4085-9981-44b579bb2a7f.xhtml),
    *Introducing Android Forensics*, please note that most of the recent devices have
    emulated SD card feature that uses the devices NAND flash to create a non-removable
    SD card. Thus, all the sensitive files present on external storage can be accessed
    in this way. However, the core application data stored under `/data/data` will
    remain on the device and cannot be accessed this way.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 从法医学的角度看，SD卡具有重要的价值，因为它可能包含对调查重要的文件。大多数与多媒体相关的图像和大文件存储在这种外部存储器中。SD卡通常使用FAT32文件系统格式化，但您可能也会遇到一些使用exFAT和其他文件系统的情况。正如在[第1章](1e7a3a23-96c6-4085-9981-44b579bb2a7f.xhtml)中讨论的*介绍Android取证*，请注意，大多数最新的设备具有模拟SD卡功能，使用设备的NAND闪存创建一个非可移动的SD卡。因此，可以通过这种方式访问外部存储器上存在的所有敏感文件。但是，存储在`/data/data`下的核心应用数据将保留在设备上，不能通过这种方式访问。
- en: Android Debug Bridge
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android调试桥
- en: 'In Android forensics, **Android Debug Bridge** (**ADB**) plays a very crucial
    role. It is present under the `<sdk_path>/platform-tools` location. In order to
    work with ADB, the USB-Debugging option needs to be enabled. On most Android phones
    and tablets, you can access this under Settings | Developer Options, as shown
    in the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android取证中，**Android调试桥**（**ADB**）起着非常关键的作用。它位于`<sdk_path>/platform-tools`位置。要使用ADB，需要启用USB调试选项。在大多数Android手机和平板电脑上，您可以在设置
    | 开发者选项下找到它，如下图所示：
- en: '![](img/669f6339-782d-4787-9e4c-786321e3fe04.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/669f6339-782d-4787-9e4c-786321e3fe04.png)'
- en: USB debugging option
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: USB调试选项
- en: However, this may not be the case with all the devices, as different devices
    have different environments and configuration features. Sometimes, the examiner
    might have to use certain techniques to access the Developer Options on a few
    devices. These techniques are device-specific and need to be researched and determined
    by the forensic analyst based on the device type and model.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，并非所有设备都是如此，因为不同的设备有不同的环境和配置功能。有时，检查人员可能需要使用某些技术来访问一些设备上的开发者选项。这些技术是特定于设备的，需要由法庭分析师根据设备类型和型号进行研究和确定。
- en: On some devices, the Developer Options menu is hidden and can be turned on by
    tapping the **Build Number** field (present under Settings | System | About Phone)
    seven times.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在一些设备上，**开发者选项**菜单是隐藏的，可以通过点击**生成号码**字段（位于设置 | 系统 | 关于手机下）七次来启用。
- en: Once the USB Debugging option is selected, the device will run the ADB daemon
    (`adbd`) in the background and will continuously look for a USB connection. The
    daemon will usually run under a non-privileged shell user account and so doesn't
    provide access to internal application data. But on rooted phones `adbd` will
    run under the root account and hence provides access to all of the data. On the
    workstation (where the Android SDK is installed), `adbd` will run as a background
    process. Also, on the same workstation, a client program will run that can be
    invoked from a shell by issuing the `adb` command that we are going to see in
    the following sections. When the ADB client is started, it first checks whether
    an ADB daemon is already running. If there isn't, it initiates a new process to
    start the ADB daemon. The daemons communicate over their local host on the `5555`
    through `5585` ports. The even port communicates with the device's console, while
    the odd port is for ADB connections. The ADB client program communicates with
    the local `adbd` over the `5037` port.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择USB调试选项，设备将在后台运行ADB守护进程（`adbd`），并持续寻找USB连接。该守护进程通常在非特权shell用户账户下运行，因此无法访问内部应用数据。但在已root的手机上，`adbd`将在根账户下运行，因此可以访问所有数据。在安装了Android
    SDK的工作站上，`adbd`将作为后台进程运行。此外，在同一工作站上，将运行一个客户端程序，可以通过发出`adb`命令来调用该程序，我们将在以下部分看到。当启动ADB客户端时，它首先检查是否已运行ADB守护进程。如果没有，则启动一个新进程来启动ADB守护进程。守护进程通过它们的本地主机在`5555`到`5585`端口上进行通信。偶数端口用于与设备的控制台通信，而奇数端口用于ADB连接。ADB客户端程序通过`5037`端口与本地的`adbd`通信。
- en: Using ADB to access the device
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ADB访问设备
- en: As stated before, ADB is a powerful tool that allows you to communicate with
    the Android device. We will now look at how to use ADB and access certain parts
    of the device that cannot be accessed normally. It is important to note that the
    collection of data through ADB may or may not be accepted as evidence in court
    depending on the respective laws of the country. The following sections list some
    of the commonly used ADB commands and their meaning and usage in a logical sequence.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面所述，ADB是一个强大的工具，允许您与Android设备通信。现在我们将看看如何使用ADB访问设备的某些无法正常访问的部分。重要的是要注意，通过ADB收集数据可能会根据各国法律而被接受或不被接受作为证据。以下部分列出了一些常用的ADB命令及其在逻辑顺序中的含义和用法。
- en: Detecting a connected device
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测连接的设备
- en: 'After connecting the device to the workstation and before issuing other ADB
    commands, it is helpful to know whether the Android device is properly connected
    to the ADB server. This can be done using the ADB devices command, which lists
    out all of the devices that are connected to the computer as shown in the following
    command lines. This would also list the emulator if it is running at the time
    of issuing the command:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 将设备连接到工作站后，在发出其他ADB命令之前，了解Android设备是否正确连接到ADB服务器是很有帮助的。这可以通过ADB devices命令完成，该命令列出所有连接到计算机的设备，如下面的命令行所示。如果模拟器在发出命令时正在运行，则还会列出模拟器：
- en: '[PRE1]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Remember that, if necessary drivers are not installed, then the preceding command
    would show a blank message. If you encounter that situation, download the necessary
    drivers from the manufacturer and install them.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果未安装必要的驱动程序，则上述命令将显示空白消息。如果遇到这种情况，请从制造商处下载必要的驱动程序并安装它们。
- en: 'As seen in the preceding command lines, the output contains the serial number
    of the device followed by the connection state. The serial number is a unique
    string used by ADB to identify each Android device. The possible connection state
    values and their meaning is explained in the following lines:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的命令行所示，输出包含设备的序列号，后跟连接状态。序列号是ADB用于识别每台Android设备的唯一字符串。可能的连接状态值及其含义在以下行中解释：
- en: '**Offline**: The instance is not connected to ADB or is not responding.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**离线**: 实例未连接到ADB或未响应。'
- en: '**Device**: The instance is connected to the ADB server.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备**: 实例已连接到ADB服务器。'
- en: '**No device**: There''s no device connected.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无设备**: 没有连接的设备。'
- en: '**Unauthorized**: USB debugging isn''t authorized.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未授权**: USB调试未授权。'
- en: Directing commands to a specific device
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将命令定向到特定设备
- en: 'If more than one device is connected to the system, you must specify the target
    device while issuing the commands. For example, consider the following case:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统连接了多个设备，则在发出命令时必须指定目标设备。例如，考虑以下情况：
- en: '[PRE2]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As shown in the preceding command-line output, there are two devices attached
    to the workstation. In this case, `adb` needs to be used along with the `–s` option
    to issue commands to the device of your choice:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的命令行输出所示，工作站上连接了两台设备。在这种情况下，`adb` 需要与 `–s` 选项一起使用，以向你选择的设备发出命令：
- en: '[PRE3]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Similarly, the `d` switch can be used to direct an `adb` command to the only
    attached USB device, and the `e` switch can be used to direct an `adb` command
    to the only running emulator instance.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，`d` 开关可用于将 `adb` 命令定向到唯一连接的 USB 设备，`e` 开关可用于将 `adb` 命令定向到唯一运行的模拟器实例。
- en: Issuing shell commands
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发出 shell 命令
- en: As mentioned in [Chapter 1](1e7a3a23-96c6-4085-9981-44b579bb2a7f.xhtml), *Introducing
    Android Forensics*, Android runs on a Linux kernel and so provides a way to access
    the shell. Using `adb`, you can access a shell to run several commands on an Android
    device. For those who are not familiar with Linux environment, Linux shell refers
    to a special program that allows you to interact with it by entering certain commands
    from the keyboard; the shell will execute the commands and display its output.
    More details about how things work on Linux environment have been provided under
    the *Rooting Android device* section in this chapter.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第 1 章](1e7a3a23-96c6-4085-9981-44b579bb2a7f.xhtml)中所述，*Android 取证简介*，Android
    运行在 Linux 内核上，因此提供了访问 shell 的方式。使用 `adb`，你可以访问一个 shell 来在 Android 设备上运行多个命令。对于不熟悉
    Linux 环境的人来说，Linux shell 是一个特殊程序，允许你通过键盘输入特定命令与其交互；shell 会执行这些命令并显示其输出。有关 Linux
    环境下的工作原理的更多细节，请参见本章中的 *Rooting Android device* 部分。
- en: 'The `adb shell` command can be used to enter into a remote shell, as shown
    in the following command-line output. Once you enter the shell, you can execute
    most of the Linux commands:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`adb shell` 命令可用于进入远程 shell，如以下命令行输出所示。进入 shell 后，你可以执行大多数 Linux 命令：'
- en: '[PRE4]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After executing the command, observe that the shell prompt is displayed to
    the user where commands can be executed on the device. For instance, as shown
    in the following command line, the `ls` command can be used to view all of the
    files within a directory:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 执行命令后，用户会看到 shell 提示符，可以在设备上执行命令。例如，如以下命令行所示，`ls` 命令可用于查看目录中的所有文件：
- en: '[PRE5]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The following section explains some of the most widely used Linux commands that
    are very helpful while interacting with an Android device.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将解释一些在与 Android 设备交互时非常有用的 Linux 命令。
- en: Basic Linux commands
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本 Linux 命令
- en: 'We will now take a look at some of the Linux commands and their usage with
    respect to Android device:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将查看一些与 Android 设备相关的 Linux 命令及其用法：
- en: '`ls`: The `ls` command (with no option) lists files and directories present
    in the current directory. With the `l` switch, this command shows files and directories
    and their size, modified date and time, the owner of the file and its permission,
    and so on, as shown in the following command-line output:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ls`：`ls` 命令（无选项）列出当前目录中存在的文件和目录。使用 `l` 开关时，此命令显示文件和目录的大小、修改日期和时间、文件所有者及其权限等，如以下命令行输出所示：'
- en: '[PRE6]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Similarly, the following are a few options that can be used along with the `ls`
    command:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，以下是一些可以与 `ls` 命令一起使用的选项：
- en: '| **Option** | **Description** |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| **选项** | **描述** |'
- en: '| `a` | Lists hidden files |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `a` | 列出隐藏文件 |'
- en: '| `c` | Displays files by timestamp |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `c` | 按时间戳显示文件 |'
- en: '| `d` | Displays only directories |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `d` | 仅显示目录 |'
- en: '| `n` | Displays the long format listing, with GID and UID numbers |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| `n` | 显示长格式列表，包含 GID 和 UID 数字 |'
- en: '| `R` | Displays subdirectories as well |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| `R` | 还显示子目录 |'
- en: '| `t` | Displays files based on timestamp |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| `t` | 按时间戳显示文件 |'
- en: '| `u` | Displays the file access time |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| `u` | 显示文件访问时间 |'
- en: Depending on the requirement, one or more of these options can be used by the
    investigator to view the details.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 根据需求，调查人员可以使用一个或多个这些选项来查看详细信息。
- en: '`cat`: The `cat` command reads one or more files and prints them to standard
    output, as shown in the following command lines:'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cat`：`cat` 命令读取一个或多个文件，并将其输出到标准输出，如以下命令行所示：'
- en: '[PRE7]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `>` operator can be used to combine multiple files into one. The `>>` operator can
    be used to append to an existing file.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`>` 操作符可用于将多个文件合并为一个文件。`>>` 操作符可用于向现有文件追加内容。'
- en: '`cd`: The `cd` command is used to change from one directory to another. This
    is much used while navigating from one folder to another. The following example
    shows commands used to change to system folder:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cd`：`cd`命令用于从一个目录切换到另一个目录。在从一个文件夹导航到另一个文件夹时，这个命令非常常用。以下示例展示了用于切换到系统文件夹的命令：'
- en: '[PRE8]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`cp`: The `cp` command can be used to copy a file from one location to another.
    The syntax for this command is as follows:'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cp`：`cp`命令可用于将文件从一个位置复制到另一个位置。此命令的语法如下：'
- en: '[PRE9]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here are the main options for the command:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此命令的主要选项：
- en: '| **Option** | **Description** |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| **选项** | **描述** |'
- en: '| `s` | Creates a `symlink` function instead of a copy |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `s` | 创建一个`symlink`函数，而不是复制 |'
- en: '| `l` | Creates a hard link instead of a copy |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| `l` | 创建一个硬链接，而不是复制 |'
- en: '| `R` | Copies files in subdirectories recursively |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `R` | 递归复制子目录中的文件 |'
- en: '| `p` | Preserves timestamps, ownership, and mode |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `p` | 保留时间戳、所有权和模式 |'
- en: '`chmod`: The `chmod` command is used to change the access permissions to filesystem
    objects (files and directories). It may also alter special mode flags. The syntax
    for this command is as follows:'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chmod`：`chmod`命令用于更改文件系统对象（文件和目录）的访问权限。它还可以更改特殊的模式标志。此命令的语法如下：'
- en: '[PRE10]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: For example, `chmod 777` on a file gives permission to everyone to read, write,
    and execute.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`chmod 777`给文件赋予所有人读、写和执行的权限。
- en: '`dd`: The `dd` command is used to copy a file, converting and formatting it
    according to the operands. With Android, the `dd` command can be used to create
    a bit-by-bit image of the Android device. More details about the imaging are covered
    in [Chapter 4](b5ab11df-1911-4deb-accd-f92c74650e6d.xhtml), *Extracting Data Logically
    from Android Devices*. The following is the syntax that needs to be used with
    this command:'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dd`：`dd`命令用于复制文件，并根据操作数进行转换和格式化。在Android中，`dd`命令可以用于创建Android设备的逐位映像。有关映像的更多详细信息，请参阅[第4章](b5ab11df-1911-4deb-accd-f92c74650e6d.xhtml)，*从Android设备逻辑提取数据*。以下是与此命令一起使用的语法：'
- en: '[PRE11]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '`rm`: The `rm` command can be used to delete files or directories. The following
    is the syntax for this command:'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rm`：`rm`命令可用于删除文件或目录。以下是此命令的语法：'
- en: '[PRE12]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`grep`: The `grep` command is used to search files or output for a particular
    pattern. The following example shows how to search a `default.prop` file for `secure`:'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grep`：`grep`命令用于在文件或输出中搜索特定模式。以下示例展示了如何在`default.prop`文件中搜索`secure`：'
- en: '[PRE13]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '`pwd`: The `pwd` command displays the current working directory. For example,
    the following command-line output shows that the current working directory is
    `/data`:'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pwd`：`pwd`命令显示当前的工作目录。例如，以下命令行输出显示当前的工作目录是`/data`：'
- en: '[PRE14]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '`mkdir`: The `mkdir` command is used to create a new directory. The following
    is the syntax for this command:'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mkdir`：`mkdir`命令用于创建一个新目录。以下是此命令的语法：'
- en: '[PRE15]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Using the `p` switch, you can also create parent directory if you need it.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`p`开关，您还可以在需要时创建父目录。
- en: '`exit`: The `exit` command can be used to exit the shell you are in. Just type
    `exit` in the shell to exit from it.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exit`：`exit`命令用于退出当前的shell。只需在shell中输入`exit`即可退出。'
- en: Installing an application
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装应用程序
- en: 'During forensic analysis, there might be cases where you need to install a
    few applications on the device in order to extract some data. To do so, you can
    use the `adb install` command. Along with this command, as shown in the following
    command-line output, you need to specify the path to the `.apk` file that you
    want to install:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在取证分析过程中，可能会有需要在设备上安装一些应用程序以提取数据的情况。为此，可以使用`adb install`命令。与此命令一起，如以下命令行输出所示，需要指定要安装的`.apk`文件的路径：
- en: '[PRE16]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: However, it is important to note that installing third-party apps may not accepted
    in a court of law. Hence, a forensic investigator needs to be cautious before
    installing any third-party app on the device.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，重要的是要注意，安装第三方应用程序在法律上可能不被接受。因此，取证调查员在安装任何第三方应用程序之前需要谨慎。
- en: Pulling data from the device
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从设备提取数据
- en: 'You can use the `adb pull` command to pull the files present on the Android
    device to the local workstation. The following is the syntax for using this command:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`adb pull`命令将Android设备上的文件拉取到本地工作站。以下是使用此命令的语法：
- en: '[PRE17]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '`<remote>` refers to the path of the file on the Android device and `<local>`
    refers to the location on the local workstation where the file needs to be stored.
    For instance, the following command-line output shows a `Sample.png` file being
    pulled from the Android device to a `temp` folder on the computer:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`<remote>` 指的是文件在 Android 设备上的路径，而 `<local>` 指的是本地工作站上需要存储该文件的位置。例如，以下命令行输出显示了一个
    `Sample.png` 文件从 Android 设备被拉取到计算机上的 `temp` 文件夹：'
- en: '[PRE18]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: However, on a normal Android phone, you will not be able to download all of
    the files using the `adb pull` command because of inherent security features enforced
    by the operating system. For example, files present in the `/data/data` folder
    cannot be accessed in this manner on an Android device that is not rooted. More
    details about this topic have been covered in [Chapter 4](b5ab11df-1911-4deb-accd-f92c74650e6d.xhtml),
    *Extracting Data Logically from Android Device*.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在普通的安卓手机上，由于操作系统强制实施的固有安全特性，您无法使用 `adb pull` 命令下载所有文件。例如，在未获得 root 权限的 Android
    设备上，无法以这种方式访问 `/data/data` 文件夹中的文件。关于这个话题的更多细节已经在 [第4章](b5ab11df-1911-4deb-accd-f92c74650e6d.xhtml)
    *从 Android 设备逻辑提取数据* 中进行了解释。
- en: Pushing data to the device
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据推送到设备
- en: 'You can use the `adb push` command to copy files from the local workstation
    to the Android device. The following is the syntax for using this command:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 `adb push` 命令将文件从本地工作站复制到 Android 设备。以下是使用此命令的语法：
- en: '[PRE19]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '`<local>` refers to the location of the file on the local workstation and `<remote>`
    refers to the path on the Android device where the file needs to be stored. For
    instance, the following command-line output shows `filetest.pngcopied` from the
    computer to the `Pictures` folder of an Android device:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`<local>` 指的是文件在本地工作站上的位置，而 `<remote>` 指的是 Android 设备上需要存储该文件的路径。例如，以下命令行输出显示了
    `filetest.pngcopied` 从计算机复制到 Android 设备的 `Pictures` 文件夹：'
- en: '[PRE20]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: You can only push the files to those folders for which the user account has
    privileges.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 您只能将文件推送到用户帐户具有权限的那些文件夹。
- en: Restarting the ADB server
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重新启动 ADB 服务器
- en: In some cases, you might need to terminate the ADB server process and then restart
    it. For example, if `adb` does not respond to a command, you can terminate the
    server and restart it and that may resolve the problem.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能需要终止 ADB 服务器进程并重新启动它。例如，如果 `adb` 对某个命令没有响应，您可以终止服务器并重新启动它，这可能解决问题。
- en: To stop the ADB server, use the `kill-server` command. You can then restart
    the server by issuing any other `adb` command.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止 ADB 服务器，请使用 `kill-server` 命令。然后，您可以通过执行其他任何 `adb` 命令来重新启动服务器。
- en: Recovery and fastboot
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恢复模式与 fastboot
- en: Before dealing with the process of rooting, it is necessary to understand about
    boot loader, recovery, and fastboot modes in Android. The following sections explain
    these in detail.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理 root 过程之前，有必要先了解 Android 中的引导加载程序、恢复和 fastboot 模式。以下各节将详细解释这些内容。
- en: Recovery mode
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恢复模式
- en: 'An Android phone can be seen as a device having three main partitions: boot
    loader, Android ROM, and recovery. *Boot loader* is present in the first partition
    and is the first program that runs when the phone is powered on. The primary job
    of this boot loader is to take care of low-level hardware initialization and to
    boot into other partitions. It usually loads the Android partition, commonly referred
    to as **Android ROM**, by default. Android ROM contains all of the operating system
    files that are necessary to run the device. The *recovery* partition, commonly
    referred to as stock recovery, is the one that is used to delete all user data
    and files, or to perform system updates.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一部安卓手机可以看作是一个包含三个主要分区的设备：引导加载程序、Android ROM 和恢复分区。*引导加载程序*位于第一个分区，并且是手机开机时运行的第一个程序。这个引导加载程序的主要工作是处理低级硬件初始化，并启动其他分区。默认情况下，它通常会加载被称为**Android
    ROM**的 Android 分区。Android ROM 包含所有必要的操作系统文件，以使设备能够运行。*恢复分区*，通常称为原厂恢复，是用于删除所有用户数据和文件，或者执行系统更新的分区。
- en: Both of these operations can be started from the running Android system or by
    manually booting into the recovery mode. For example, when you do a factory reset
    on your phone, recovery is what boots up and erases the files and data. Likewise,
    with updates, the phone boots into recovery mode to install the latest updates
    that are written directly to the Android ROM partition. Hence, recovery mode is
    the screen that you see when you install any official update on the device.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个操作都可以从正在运行的Android系统启动，或者通过手动启动进入恢复模式。例如，当你在手机上执行恢复出厂设置时，恢复模式会启动并擦除文件和数据。同样，进行更新时，手机会启动进入恢复模式，以安装直接写入Android
    ROM分区的最新更新。因此，恢复模式是你在设备上安装任何官方更新时看到的屏幕。
- en: Accessing recovery mode
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进入恢复模式
- en: 'The recovery image is stored on the recovery partition and consists of a Linux
    image with a simple user interface controlled by hardware buttons. Recovery mode
    can be accessed in two ways:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复映像存储在恢复分区，并由硬件按钮控制的简单用户界面组成的Linux映像。可以通过两种方式访问恢复模式：
- en: By pressing a certain keypress combination when booting the device (usually
    by holding the Volume+, Volume-, and Power buttons during the boot up)
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在启动设备时按特定的按键组合（通常是启动时按住音量+、音量-和电源按钮）
- en: By issuing the `adb reboot recovery` command to a booted Android system
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过向已启动的Android系统发出`adb reboot recovery`命令
- en: 'The following is a screenshot of a stock recovery mode on an Android device:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Android设备上官方恢复模式的截图：
- en: '![](img/909305b1-5cc8-4650-ad92-29fe7415c076.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/909305b1-5cc8-4650-ad92-29fe7415c076.jpg)'
- en: Android stock recovery
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Android官方恢复
- en: The stock Android recovery is intentionally very limited in functionality. It
    has the options to reboot the system, apply updates from ADB and SD card, factory
    reset, and so on. However, custom recovery offers many more options.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Android的官方恢复模式故意在功能上非常有限。它提供了重新启动系统、通过ADB和SD卡应用更新、恢复出厂设置等选项。然而，定制恢复提供了更多选项。
- en: Custom recovery
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制恢复
- en: 'A custom recovery is a recovery environment created by a third party. It can
    be used to replace the default, stock recovery environment with a customized recovery
    environment on the target device. Here is a list of the most common features that
    can be found in custom recovery:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 定制恢复是由第三方创建的恢复环境。它可以用来替换目标设备上的默认官方恢复环境，提供一个定制的恢复环境。以下是定制恢复中常见的功能列表：
- en: It provides full backup and restores functionality (such as NANDroid).
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供完整的备份和恢复功能（如NANDroid）。
- en: It allow unsigned update packages or allows signed packages with custom keys.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许未签名的更新包，或者允许使用自定义密钥的签名包。
- en: It selectively mounts device partitions and SD card.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它会选择性地挂载设备分区和SD卡。
- en: It provides USB mass storage access to SD card or data partitions.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供对SD卡或数据分区的USB大容量存储访问。
- en: It provides full ADB access, with the ADB daemon running as root.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供完整的ADB访问权限，且ADB守护进程以root身份运行。
- en: There's a fully featured BusyBox binary. BusyBox is a collection of powerful
    command line tools in a single binary executable.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它包含一个功能齐全的BusyBox二进制文件。BusyBox是一个将多个强大的命令行工具集合在一个单一二进制可执行文件中的工具。
- en: 'There are several custom recovery images available in the market today, such
    as ClockworkMod recovery, TeamWin Recovery Project, and so on. The following screenshot
    shows the options available with **TeamWin Recovery Project (TWRP) 3.0.0.0**:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 市面上有多种定制恢复映像可供选择，如ClockworkMod恢复、TeamWin恢复项目等。以下截图显示了**TeamWin恢复项目 (TWRP) 3.0.0.0**的可用选项：
- en: '![](img/02a83390-48e6-468d-baf9-d696c56bb2ba.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/02a83390-48e6-468d-baf9-d696c56bb2ba.png)'
- en: TWRP recovery
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: TWRP恢复
- en: Viewing log data
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看日志数据
- en: 'In Android, the `logcat` command provides a way to view system debug output.
    Logs from various applications and portions of the system are collected in a series
    of circular buffers, which can then be viewed and filtered by using this command:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android中，`logcat`命令提供了一种查看系统调试输出的方法。来自各个应用程序和系统部分的日志被收集在一系列循环缓冲区中，然后可以使用此命令查看和过滤：
- en: '[PRE21]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The log message shown here is just a sample message and, during investigation,
    logs need to be carefully analyzed to gather information on location details,
    data/time information, application details, and so on. Each log begins with a
    message type indicator as described in the following table:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示的日志信息只是示例消息，在调查过程中，日志需要仔细分析，以收集位置信息、日期/时间信息、应用程序详细信息等。每条日志以消息类型指示符开头，如下表所示：
- en: '| **Message type** | **Description** |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| **消息类型** | **描述** |'
- en: '| V | Verbose |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| V | 详细信息 |'
- en: '| D | Debug |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| D | 调试 |'
- en: '| I | Information |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| I | 信息 |'
- en: '| W | Warning |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| W | 警告 |'
- en: '| E | Error |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| E | 错误 |'
- en: '| F | Fatal |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| F | 致命 |'
- en: '| S | Silent |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| S | 静默 |'
- en: Rooting Android
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取 Android Root 权限
- en: Rooting is a word that is very often heard with respect to Android devices.
    As a forensic examiner, it is essential to understand this in detail. This would
    help you to gain knowledge that is required to understand the internals of the
    device and gain expertise on several issues that are encountered during an investigation.
    Rooting Android phones has become a common phenomenon and very often rooted phones
    are encountered during investigations. Also, depending upon the situation and
    data to be extracted, the examiner themself has to root the device in order to
    extract certain data. The following sections cover rooting an Android device and
    other related concepts in detail.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 Root 权限是一个与 Android 设备相关的常见术语。作为一名取证专家，了解这一点至关重要。这将帮助你获得必要的知识，以理解设备的内部结构，并在调查过程中获得处理若干问题的专业知识。获取
    Android 手机的 Root 权限已成为一种常见现象，取证过程中常常会遇到已 Root 的手机。此外，根据不同的情况和需要提取的数据，取证专家本身也可能需要对设备进行
    Root 以提取某些数据。接下来的部分将详细介绍获取 Android 设备 Root 权限以及其他相关概念。
- en: What is rooting?
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是获取 Root 权限？
- en: 'To understand rooting, it is essential to understand how Unix-like systems
    work. The original Unix operating system, on which Linux and other Unix-like systems
    are based, was designed from the very beginning as a multiuser system. This is
    primarily because personal computers did not yet exist and hence it was necessary
    to have a mechanism for separating and protecting the resources of the individual
    users while allowing them to use the system simultaneously. But in order to perform
    privileged tasks such as granting and revoking powers for ordinary users and accessing
    critical system files to repair or upgrade the system, it was necessary to have
    a system administrator account that has superuser access. So, we have two types
    of accounts: normal user accounts that have fewer privileges and a superuser or
    **root account** that has all of the privileges.'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解获取 Root 权限，首先必须了解类 Unix 系统的工作原理。原始的 Unix 操作系统是 Linux 和其他类 Unix 系统的基础，它从一开始就被设计为多用户系统。之所以这样设计，主要是因为个人电脑当时尚未普及，因此需要一种机制来隔离并保护各个用户的资源，同时允许他们同时使用系统。但为了执行一些特权任务，比如授予和撤销普通用户的权限，或者访问关键的系统文件来修复或升级系统，就需要一个具有超级用户权限的系统管理员账户。因此，我们有两种类型的账户：具有较少权限的普通用户账户和具有所有权限的超级用户或**root
    账户**。
- en: Hence, *root* is the username or account that by default has access to all commands
    and files on a Linux or other Unix-like operating system. It is also referred
    to as the root account, root user, and the superuser. So, in Linux, the root user
    has the power to start/stop any system service, edit/delete any file, change the
    privileges of other users, and so on. We have learned earlier that Android uses
    the Linux kernel and hence most of the concepts present in Linux are applicable
    to Android as well. However, when you buy an Android phone, normally it does not
    let you log in as a root user. Rooting an Android phone is all about gaining this
    root access on the device to perform actions that are not normally allowed on
    the device.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，*root* 是指默认情况下具有对 Linux 或其他类 Unix 操作系统中所有命令和文件的访问权限的用户名或账户。它也被称为 root 账户、root
    用户和超级用户。所以，在 Linux 中，root 用户有权限启动/停止任何系统服务、编辑/删除任何文件、更改其他用户的权限等。我们之前了解到 Android
    使用的是 Linux 内核，因此 Linux 中的大多数概念也适用于 Android。然而，当你购买一部 Android 手机时，通常并不允许你以 root
    用户身份登录。获取 Android 手机的 Root 权限就是通过获得该设备的 root 权限，执行通常不允许在设备上进行的操作。
- en: It is also important to understand the difference between *rooting* and *jailbreaking,*
    as both are often wrongly assumed to be the same. Jailbreaking a device running
    an Apple iOS operating system allows you to remove certain restrictions and limitations
    put in place by Apple. For instance, Apple does not allow sideloading unsigned
    applications on the device. So, by jailbreaking, you can install applications
    that are not approved by Apple. In contrast, Android by functionality allows sideloading
    of applications. Jailbreaking a phone involves bypassing several security restrictions
    simultaneously. Hence, gaining root access on the device is only one of the aspects
    of jailbreaking a device.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要理解 *rooting* 和 *jailbreaking* 之间的区别，因为两者常常被误认为是相同的。对运行 Apple iOS 操作系统的设备进行越狱，可以移除
    Apple 设置的一些限制和限制。例如，Apple 不允许在设备上安装未签名的应用程序。因此，通过越狱，你可以安装未经 Apple 批准的应用程序。相反，Android
    在功能上允许侧载应用程序。越狱手机涉及同时绕过多个安全限制。因此，获取设备的 root 权限只是越狱设备的一个方面。
- en: Why root?
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要 root？
- en: Rooting is often performed by many people with the goal of overcoming limitations
    that carriers and hardware manufacturers put on Android devices. By rooting an
    Android device you can alter or replace system applications and settings, run
    specialized apps that require administrator-level permissions, or perform operations
    that are otherwise inaccessible to a normal Android user, such as uninstalling
    the default apps (especially the bloatware) that come along with the phone. Rooting
    is also done for extreme customization; for instance, new, customized ROMs could
    be downloaded and installed. However, from a forensic analysis point of view,
    the main reason for rooting is to gain access to those parts of the system that
    are normally not accessible. Most of the public root tools will result in a permanent
    root where the changes persist even after rebooting the device. In the temporary
    root, the changes are lost once the device reboots. Temporary roots should always
    be preferred in forensic cases.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 很多人 root Android 设备的目标是克服运营商和硬件制造商对 Android 设备的限制。通过 root 一个 Android 设备，你可以修改或替换系统应用程序和设置，运行需要管理员权限的专用应用程序，或者执行普通
    Android 用户无法访问的操作，例如卸载手机自带的默认应用程序（特别是那些预装的垃圾应用）。Rooting 也常用于极限定制；例如，可以下载并安装新的自定义
    ROM。然而，从取证分析的角度来看，root 的主要原因是访问那些通常无法访问的系统部分。大多数公共 root 工具会导致永久性 root，所做的修改即使设备重启后也会持续存在。而在临时
    root 中，一旦设备重启，所做的修改将丢失。在取证案件中，应该始终优先选择临时 root。
- en: 'As explained in [Chapter 1](1e7a3a23-96c6-4085-9981-44b579bb2a7f.xhtml), *Introducing
    Android Forensics*, in Linux systems, each user is assigned a unique **User ID**
    (**UID**) and users are segregated so that one user does not access the data of
    another user. Similarly, in Android each application is assigned a UID and is
    run as a separate process. App UIDs are usually assigned in the order that they
    are installed, starting from 10001\. These IDs are stored in the `packages.xml`
    file in `/data/system`. This file, in addition to storing UIDs, stores the Android
    permissions of each program as described in its manifest file. The private data
    of each application is stored in the `/data/data` location and is accessible only
    to that application. Hence, during the course of an investigation, data present
    under this location cannot be accessed. But rooting a phone would allow you to
    access the data present in any location. It is important to keep in mind that
    rooting a phone has several implications, as described in the following:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第一章](1e7a3a23-96c6-4085-9981-44b579bb2a7f.xhtml)《介绍 Android 取证》所述，在 Linux
    系统中，每个用户都会分配一个唯一的**用户 ID**（**UID**），用户之间被隔离，以防一个用户访问另一个用户的数据。类似地，在 Android 中，每个应用程序都会分配一个
    UID，并作为一个独立的进程运行。应用程序 UID 通常按照安装顺序分配，从 10001 开始。这些 ID 存储在 `/data/system` 目录下的
    `packages.xml` 文件中。除了存储 UID 之外，该文件还存储了每个程序在其清单文件中描述的 Android 权限。每个应用程序的私有数据存储在
    `/data/data` 位置，仅该应用程序可以访问。因此，在调查过程中，无法访问该位置下的数据。但通过获取 root 权限，可以访问任何位置的数据。需要注意的是，获取
    root 权限会带来一些影响，具体如下：
- en: '**Security risk**: Rooting a phone might expose the device to security risks.
    For instance, imagine a malicious app that has access to the entire operating
    system and to the data of all of the other apps installed on the device.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全风险**：root 手机可能会使设备暴露于安全风险之中。例如，想象一下一个恶意应用，它可以访问整个操作系统以及设备上所有其他应用程序的数据。'
- en: '**Bricking of your device**: If rooting is not done in the proper manner it
    might result in bricking your device. Bricking is a word commonly used with those
    phones that are dead or cannot be turned on in any way.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变砖您的设备**：如果 Root 操作不正确，可能会导致设备变砖。变砖是一个通常用于那些无法开机的手机的术语。'
- en: '**Voiding your warranty**: Depending on the manufacturer and carrier, rooting
    a device may void your warranty since it exposes the device to several threats.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**取消保修**：根据制造商和运营商的不同，对设备进行 Root 可能会取消您的保修，因为它会使设备面临多种威胁。'
- en: '**Forensic implications**: Rooting an Android device will allow an investigator
    to access a larger set of data, but it involves the alteration of certain portions
    of the device. Hence, a device should be rooted only when it is absolutely necessary.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**取证影响**：对 Android 设备进行 Root 可以让调查人员访问更多数据，但这涉及到对设备某些部分的更改。因此，只有在绝对必要时才应对设备进行
    Root。'
- en: Fastboot mode
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Fastboot 模式
- en: Fastboot is a protocol that can be used to re-flash partitions on your device.
    It is one of the tools that comes along with the Android SDK and is an alternative
    to the recovery mode for doing installations and updates and for unlocking the
    boot loader in some cases. While in fastboot, you can modify the filesystem images
    from a computer over a USB connection. Hence, it is one of the ways to install
    the recovery images and to just boot in some cases. Once the phone is booted into
    fastboot, you can flash image files to the internal memory. For example, the previously
    discussed custom recovery images such as TWRP recovery can be flashed in this
    manner.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Fastboot 是一种协议，可用于在设备上重新刷写分区。它是 Android SDK 随附的工具之一，是用于安装、更新和在某些情况下解锁启动加载器的替代方法。在
    fastboot 模式下，您可以通过 USB 连接从计算机修改文件系统映像。因此，在某些情况下，这是安装恢复映像和仅仅启动的一种方式。一旦手机进入 fastboot
    模式，您就可以向内部存储器刷写镜像文件。例如，可以以这种方式刷入之前讨论过的自定义恢复映像，如 TWRP 恢复。
- en: 'All you need is to type a few commands. First, reboot the device into bootloader/fastboot
    mode:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 您只需输入几个命令。首先，将设备重启至引导加载器/快速启动模式：
- en: '[PRE22]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then, flash TWRP using the following command:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用以下命令刷入 TWRP：
- en: '[PRE23]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now you can reboot the device using the following command:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以使用以下命令重启设备：
- en: '[PRE24]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Before flashing TWRP, make sure you've read the thread about target devices
    at the XDA Developers forum ([https://forum.xda-developers.com/](https://forum.xda-developers.com/)).
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在刷入 TWRP 之前，请确保您已阅读 XDA Developers 论坛关于目标设备的主题（[https://forum.xda-developers.com/](https://forum.xda-developers.com/)）。
- en: Locked and unlocked boot loaders
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 锁定和解锁的启动加载器
- en: Boot loaders may be locked or unlocked. Locked boot loaders don't allow you
    to perform modifications to the device's firmware by implementing restrictions
    at the boot loader level, usually done through cryptographic signature verification.
    Hence, unsigned code cannot be flashed to the device. In other words, in order
    to run any recovery image or your own operating system, the boot loader needs
    to be unlocked first. Unlocking the boot loader could result in serious security
    implications. If the device is lost or stolen, all data on it can be recovered
    by an attacker simply by uploading a custom Android boot image or flashing a custom
    recovery image. After doing so, the attacker has full access to the data contained
    on the device. Because of this reason, a factory data reset is performed on the
    phone when unlocking a locked boot loader so that all of the data is erased. Hence,
    it is important to perform this only when it is absolutely necessary. Some devices
    have ways to unlock them officially. For these devices, the boot loader can be
    unlocked by putting the device into fastboot mode and running the `fastboot oem
    unlock` command. This will unlock the boot loader and do a complete wipe of the
    Android device.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 启动加载程序可以被锁定或解锁。锁定的启动加载程序不允许您通过在启动加载器级别实施限制（通常通过加密签名验证）对设备的固件进行修改。因此，无法向设备刷入未签名代码。换句话说，要运行任何恢复映像或自己的操作系统，首先需要解锁启动加载器。解锁启动加载器可能会导致严重的安全问题。如果设备丢失或被盗，攻击者可以通过上传自定义
    Android 引导映像或刷入自定义恢复映像来恢复其中的所有数据。这样做后，攻击者就可以完全访问设备上包含的数据。因此，在解锁锁定的启动加载器时会在手机上执行出厂数据重置，以便擦除所有数据。因此，仅在绝对必要时执行此操作非常重要。某些设备有正式解锁它们的方法。对于这些设备，可以将设备置于
    fastboot 模式并运行 `fastboot oem unlock` 命令来解锁启动加载器。这将解锁启动加载器并完全擦除 Android 设备。
- en: 'Some other manufacturers provide unlocking through different means, for instance,
    through their website. The following screenshot shows the Xiaomi website providing
    support for unlocking Xiaomi devices:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 其他一些制造商通过不同的方式提供解锁功能，例如通过其官网。以下截图显示了小米官网提供的解锁支持：
- en: '![](img/c964fdcb-4938-44cc-a751-6c09d35980c6.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c964fdcb-4938-44cc-a751-6c09d35980c6.png)'
- en: Xiaomi website providing support to unlock boot loader
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 小米官网提供解锁引导加载程序的支持
- en: How to root
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何获取root权限
- en: This section is based on whether the underlying boot loader is locked or unlocked.
    Gaining root access on a device with an unlocked boot loader is very easy, while
    gaining root access on a device with a locked boot loader is not so straightforward.
    The following sections explain this in detail.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分内容基于底层引导加载程序是锁定还是解锁。对于解锁的引导加载程序设备，获取root权限非常容易，而对于锁定的引导加载程序设备，获取root权限则相对复杂。接下来的部分将详细解释这一点。
- en: Rooting an unlocked boot loader
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取root权限（针对解锁的引导加载程序）
- en: In Unix-like systems, the superuser is a special user account used for system
    administration and has privileges to access and modify all of the files in an
    operating system. The process of rooting mainly involves copying the `su` (superuser)
    binary to a location in the current process's path (`/system/xbin/su`) and granting
    it executable permissions with the `chmod` command. Hence, the first step here
    is to unlock the boot loader. As explained in the *Locked and unlocked boot loaders *section,
    depending on the device in question, unlocking a boot loader can be done either
    through fastboot mode or through following a vendor specific boot loader unlock
    procedure.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在类Unix系统中，超级用户是一个用于系统管理的特殊用户帐户，具有访问和修改操作系统中所有文件的权限。root权限的过程主要涉及将`su`（超级用户）二进制文件复制到当前进程路径中的某个位置（`/system/xbin/su`），并使用`chmod`命令授予其可执行权限。因此，第一步是解锁引导加载程序。如*引导加载程序的锁定与解锁*部分所解释，根据设备的不同，解锁引导加载程序可以通过fastboot模式或按照厂商特定的引导加载程序解锁流程完成。
- en: 'The `su` binary is usually accompanied by an Android application, such as SuperUser,
    that provides a graphical prompt each time an application requests root access,
    as shown in the following screenshot:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '`su`二进制文件通常会伴随一个Android应用程序，如SuperUser，该应用程序在每次应用程序请求root权限时提供图形提示，如下图所示：'
- en: '![](img/a3a6451e-e09a-42fc-8bc5-60b70f92c904.png)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a3a6451e-e09a-42fc-8bc5-60b70f92c904.png)'
- en: Superuser request
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 超级用户请求
- en: Once the boot loader is unlocked, you can make all of the desired changes to
    the device. Hence, copying the `su` binary and granting it executable permissions
    can be done in many ways. The most common method is to boot a custom recovery
    image. This allows copying the `su` binary into the system partition and setting
    the appropriate permissions through a custom update package.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦引导加载程序解锁，你就可以对设备进行所有想要的修改。因此，复制`su`二进制文件并授予其可执行权限的方法有很多。最常见的方法是启动自定义恢复镜像，这样可以将`su`二进制文件复制到系统分区，并通过自定义更新包设置相应的权限。
- en: 'Here is how to root a Samsung Galaxy S7 (International SM-G930F/FD/X, Korean
    SM-G930K/L/S, and Canadian SM-G930W8 Exynos models):'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是如何获取三星Galaxy S7（国际版SM-G930F/FD/X、韩国版SM-G930K/L/S和加拿大版SM-G930W8 Exynos模型）root权限的方法：
- en: Make sure **OEM unlock** is enabled in Developer options.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在开发者选项中启用**OEM解锁**。
- en: Download ODIN (available here: [https://build.nethunter.com/samsung-tools/Odin_3.12.3.zip](https://build.nethunter.com/samsung-tools/Odin_3.12.3.zip))
    and extract the contents of the archive in the directory of your choice.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载ODIN（可以从此处获取：[https://build.nethunter.com/samsung-tools/Odin_3.12.3.zip](https://build.nethunter.com/samsung-tools/Odin_3.12.3.zip)），并将压缩包中的内容解压到你选择的目录中。
- en: 'Download the TWRP image (available here: [http://teamw.in/devices/samsunggalaxys7.html](http://teamw.in/devices/samsunggalaxys7.html)).'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载TWRP镜像（可以从此处获取：[http://teamw.in/devices/samsunggalaxys7.html](http://teamw.in/devices/samsunggalaxys7.html)）。
- en: Reboot your device into Download mode. To do this, hold the [Volume Down] +
    [Home] buttons while your device reboots. Once you see the Download mode warning screen,
    press [Volume Up] to continue.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启设备进入下载模式。方法是，在设备重启时按住[音量下] + [Home]按钮。当你看到下载模式警告屏幕时，按[音量上]继续。
- en: Start Odin and put the TWRP image in the [AP] slot; don't forget to disable
    **Auto-Reboot**. Start flashing the recovery.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Odin并将TWRP镜像放入[AP]插槽；不要忘记禁用**自动重启**。开始刷入恢复。
- en: To exit Download mode, hold [Volume Down] + [Home] + [Power]; when the screen
    blanks, immediately change [Volume Down] to [Volume Up].
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要退出下载模式，按住[音量下] + [Home] + [电源]；当屏幕熄灭时，立即将[音量下]更改为[音量上]。
- en: Allow system modifications by swiping right.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过向右滑动来允许系统修改。
- en: Download **SuperSU** (available here: [https://download.chainfire.eu/supersu](https://download.chainfire.eu/supersu)).
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载**SuperSU**（可在此处下载：[https://download.chainfire.eu/supersu](https://download.chainfire.eu/supersu)）。
- en: Transfer the archive with SuperSU to the device via MTP, and install it via
    the corresponding TWRP option.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 MTP 将 SuperSU 存档传输到设备，并通过相应的 TWRP 选项进行安装。
- en: Since Android version 4.1, a new feature called sideload mode has been introduced.
    This feature allows applying an update ZIP over ADB without copying it to the
    device beforehand. To sideload an update, run the `adb sideload su-package.zip` command,
    where `su-package.zip` is the filename of the update package on your computer.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 自 Android 4.1 版本起，引入了一项名为 sideload 模式的新功能。此功能允许通过 ADB 应用更新 ZIP，而无需事先将其复制到设备。要
    sideload 更新，运行 `adb sideload su-package.zip` 命令，其中 `su-package.zip` 是你电脑上更新包的文件名。
- en: Alternately, you can also modify a factory image to add an `su` binary. This
    can be done by unpacking an ext4 formatted system image, adding a `su` binary
    and repacking it. If this image is flashed, it will contain the `su` binary and
    the device will be rooted.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你也可以修改工厂镜像以添加 `su` 二进制文件。这可以通过解压缩一个 ext4 格式的系统镜像，添加 `su` 二进制文件并重新打包来完成。如果刷入该镜像，它将包含
    `su` 二进制文件，并且设备将被 Root。
- en: Rooting is a highly device-specific process and hence forensic investigator
    needs to be cautious before applying these techniques on any Android device.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: Root 是一个高度设备特定的过程，因此法医调查员在对任何 Android 设备应用这些技术之前需要谨慎。
- en: Rooting a locked boot loader
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解锁启动引导器进行 Root
- en: When the boot loader is locked and cannot be unlocked through any available
    means, rooting the device requires finding a security flaw that can be exploited.
    But before that, it is important to identify the type of boot loader lock. It
    can vary depending on the manufacturer and software version. With some mobiles,
    fastboot access may not be allowed, but you can still flash using the manufacturer's
    proprietary flashing protocol, such as Samsung ODIN. Some devices enforce signature
    verification on selected partitions only, such as boot and recovery. Hence, it
    may not be possible to boot into custom recovery. However, you can still modify
    the factory image to include `su` binary, as explained in the previous section.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 当启动引导器被锁定并且无法通过任何可用方式解锁时，Root 设备需要找到可以利用的安全漏洞。但在此之前，首先要识别启动引导器锁的类型。它可能因制造商和软件版本而异。有些手机可能不允许通过
    fastboot 访问，但你仍然可以使用制造商专有的闪存协议进行刷机，例如三星的 ODIN。一些设备只对特定分区（如 boot 和 recovery）强制执行签名验证。因此，可能无法进入自定义恢复模式。然而，你仍然可以修改出厂镜像以包括
    `su` 二进制文件，如前一部分所述。
- en: If the boot loader cannot be unlocked through any means, then the only option
    is to find some vulnerability on the device that allows us to exploit and add
    `su` binary. The vulnerability can be in the Android kernel or in a process running
    as root or any other issue. It is device-specific and needs to be researched extensively
    before trying it on any device.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 如果启动引导器无法通过任何方式解锁，那么唯一的选择是找到设备上的某个漏洞，利用该漏洞并添加`su`二进制文件。漏洞可能存在于 Android 内核中，或者在以
    root 身份运行的进程中，或其他任何问题。这是设备特定的，必须在尝试之前进行广泛的研究。
- en: 'The following are the most popular applications for Android rooting:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是最受欢迎的 Android 根权限应用：
- en: Kingo ([https://www.kingoapp.com/](https://www.kingoapp.com/))
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kingo ([https://www.kingoapp.com/](https://www.kingoapp.com/))
- en: Root Genius ([http://www.shuame.com/en/root/](http://www.shuame.com/en/root/))
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Root Genius ([http://www.shuame.com/en/root/](http://www.shuame.com/en/root/))
- en: iRoot ([http://www.iroot.com/](http://www.iroot.com/))
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iRoot ([http://www.iroot.com/](http://www.iroot.com/))
- en: ADB on a rooted device
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Root 设备上的 ADB
- en: 'We have already seen how the ADB tool can be used to interact with the device
    and execute certain commands on the device. However, on a normal Android phone,
    certain locations such as `/data/data` cannot be accessed. For example, the following
    shows the command-line output when trying to access `/data/data` on a normal device:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何使用 ADB 工具与设备交互并在设备上执行某些命令。然而，在正常的 Android 手机上，某些位置，例如`/data/data`，是无法访问的。例如，以下是尝试访问正常设备上的`/data/data`时的命令行输出：
- en: '[PRE25]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This is because the private data of all of the applications is stored in this
    folder and so the security is enforced by the Android. Only the root user has
    access to this location. Hence, on a rooted device, you will be able to see all
    of the data under this location, as shown in the following command lines:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为所有应用程序的私人数据都存储在此文件夹中，Android会对其进行安全性保护。只有root用户才能访问此位置。因此，在root设备上，你将能够看到此位置下的所有数据，正如以下命令行所示：
- en: '[PRE26]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: As shown in the previous code, all of the application's private data can now
    be seen easily by navigating to the respective folders. Hence, the ADB tool on
    a rooted device is very powerful and allows an examiner to access all of the data
    of applications installed on the device, provided the device is not pattern or
    PIN protected or registered to the machine with an RSA key.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的代码所示，现在可以轻松地通过导航到相应的文件夹来查看所有应用程序的私人数据。因此，在root设备上，ADB工具非常强大，允许检查员访问设备上所有已安装应用程序的数据，前提是设备没有设置图案锁或PIN码保护，或没有通过RSA密钥注册到计算机。
- en: Sometimes, even on a rooted phone, you would see the permission denied message.
    In such cases, after executing the `adb shell` command, try entering SuperUser
    mode by typing `su`. If root is enabled, you will see `#` without asking for the
    password.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，即使在已获得root权限的手机上，你也会看到权限被拒绝的提示。在这种情况下，执行`adb shell`命令后，可以尝试通过输入`su`进入SuperUser模式。如果root权限已经启用，你将看到`#`，且不需要输入密码。
- en: Summary
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Setting up a proper forensic environment is crucial prior to conducting investigation
    on an Android device. The Android SDK installation is necessary to use tools such
    as ADB, which come along with it. Using ADB, an examiner can communicate with
    the device, view folders on the device, pull data, and copy data to the device.
    However, not all folders can be accessed on a normal phone in this manner, since
    the device's security enforcements prevent an examiner from viewing locations
    that contain private data. Hence, rooting a device solves this issue, as it provides
    unlimited access to all the data present on the device. Rooting a device with
    an unlocked boot loader is straightforward, while rooting a device with a locked
    boot loader involves exploiting some security bugs.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在对Android设备进行调查之前，搭建一个合适的取证环境至关重要。安装Android SDK是必要的，因为其中包含了ADB等工具。通过ADB，检查员可以与设备进行通信，查看设备上的文件夹，提取数据，并将数据复制到设备上。然而，并非所有文件夹都能在普通手机上通过这种方式访问，因为设备的安全措施会阻止检查员查看包含私人数据的位置。因此，root设备可以解决这个问题，因为它提供了对设备上所有数据的无限访问权限。解锁引导加载程序的设备root过程相对简单，而锁定引导加载程序的设备root则涉及到利用一些安全漏洞。
- en: With this knowledge on accessing the device, we will now cover how data is organized
    on an Android device and many other details in [Chapter 3](615ae74c-4301-46e6-92f2-387637bebd38.xhtml),
    *Understanding Data Storage on Android Devices.*
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在掌握了如何访问设备的知识后，我们将继续讨论[第3章](615ae74c-4301-46e6-92f2-387637bebd38.xhtml)，*理解Android设备上的数据存储*中有关数据如何组织以及其他许多细节。
