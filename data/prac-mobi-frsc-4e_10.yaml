- en: Android Forensic Setup and Pre-Data Extraction Techniques
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安卓法医设置和数据提取前的技术
- en: In the previous chapter, we covered the fundamentals of the Android architecture,
    security features, filesystems, and other capabilities. Having an established
    forensic environment before the start of an examination is important, as it ensures
    that the data is protected while you, as the examiner, maintain control of the
    workstation. This chapter will explain the process of—and what to consider when—setting
    up a digital forensic examination environment. It is paramount that you maintain
    control of the forensic environment at all times; this prevents the introduction
    of contaminants that could affect the forensic investigation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们介绍了安卓架构、安全特性、文件系统以及其他功能的基础知识。在开始检查之前，建立一个法医环境非常重要，因为这确保了数据的保护，同时你作为检查员能够控制工作站。本章将解释设置数字法医检查环境的过程，并阐述设置时需要考虑的事项。始终保持对法医环境的控制至关重要；这可以防止污染物的引入，从而影响法医调查。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Setting up a forensic environment for Android
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为安卓设置法医环境
- en: Connecting an Android device to a workstation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将安卓设备连接到工作站
- en: Screen lock bypassing techniques
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 屏幕锁绕过技术
- en: Gaining root access
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获得root权限
- en: Setting up a forensic environment for Android
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为安卓设置法医环境
- en: 'As a forensic examiner, you may encounter a wide range of mobiles over the
    course of your investigation. Therefore, it is necessary to have a basic environment
    set up on top of which you can build based on requirements. It is also very important
    that you maintain complete control over the environment at all times to avoid
    any unexpected situations. Setting up a proper lab environment is an essential
    part of the forensic process. The Android forensic setup usually involves the
    following steps:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名法医检查员，在调查过程中你可能会遇到各种类型的手机。因此，有必要在此基础上设置一个基本环境，根据需求进行扩展。同时，始终保持对环境的完全控制也非常重要，以避免任何意外情况的发生。设置一个合适的实验室环境是法医过程中的一个重要环节。安卓法医设置通常包括以下步骤：
- en: Start with a fresh or forensically sterile computer environment. This means
    that other data is either not present on the system or is contained in a manner
    that prevents it from contaminating the present investigation.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从一个全新或法医无菌的计算机环境开始。这意味着系统中不存在其他数据，或者数据以一种方式进行存储，避免污染当前的调查。
- en: Install the basic software necessary to connect to the device. Android forensic
    tools and methodologies will work on the Windows, Linux, and macOS platforms.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装连接设备所需的基本软件。安卓法医工具和方法可以在Windows、Linux和macOS平台上运行。
- en: Obtain access to the device. You must be able to enable settings or bypass them
    in order to allow the data to be extracted from the Android device.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获得对设备的访问权限。你必须能够启用设置或绕过它们，以便从安卓设备中提取数据。
- en: Issue commands to the device using the methods defined in this chapter and in
    [Chapter 9](bf232566-3a17-4914-992b-80674dd379de.xhtml), *Android Data Extraction
    Techniques*.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用本章和[第9章](bf232566-3a17-4914-992b-80674dd379de.xhtml)中定义的方法，*安卓数据提取技术*，向设备发出命令。
- en: The following sections provide guidance on setting up a basic Android forensic
    workstation.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下章节提供了设置基本安卓法医工作站的指导。
- en: Installing the software
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装软件
- en: The Android **Software Development Kit** (**SDK**) helps the development world
    to build, test, and debug applications to run on Android. The Android SDK comes
    with Android Studio, the official **integrated development environment** (**IDE**)
    for developing Android apps. Android Studio provides valuable documentation and
    other tools that can be of great help during the investigation of an Android device.
    Alternatively, you can download just the platform tools, which are components
    of the Android SDK and include tools that can interact with the Android platform,
    such as the ADB, fast boot, and so on; these will be described in more detail
    in the following sections.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓**软件开发工具包**（**SDK**）帮助开发者构建、测试和调试在安卓上运行的应用程序。安卓SDK包括安卓Studio，这是开发安卓应用的官方**集成开发环境**（**IDE**）。安卓Studio提供了有价值的文档和其他工具，在安卓设备调查过程中能提供很大的帮助。或者，你也可以仅下载平台工具，它们是安卓SDK的一部分，包含与安卓平台交互的工具，如ADB、fastboot等；这些将在以下章节中详细描述。
- en: A good understanding of the Android SDK will help you to get to grips with the
    particulars of a device and its data on the device.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 对Android SDK有良好的理解将帮助你掌握设备的细节及其数据。
- en: Android Studio consists of software libraries, APIs, tools, emulators, and other
    reference material. It can be downloaded for free from [https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html).
    The platform tools can be downloaded from [https://developer.android.com/studio/releases/platform-tools](https://developer.android.com/studio/releases/platform-tools).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio包含软件库、API、工具、模拟器和其他参考材料。你可以从[https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html)免费下载。平台工具可以从[https://developer.android.com/studio/releases/platform-tools](https://developer.android.com/studio/releases/platform-tools)下载。
- en: During a forensic investigation, having these tools helps you connect to and
    access data on Android devices. The Android SDK is updated very frequently, so
    it's important to verify that your workstation also remains up to date. The Android
    SDK can run on Windows, Linux, and macOS.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行取证调查时，拥有这些工具可以帮助你连接到Android设备并访问其中的数据。Android SDK更新非常频繁，因此确认你的工作站也保持更新非常重要。Android
    SDK可以在Windows、Linux和macOS上运行。
- en: Installing the Android platform tools
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Android平台工具
- en: A working installation of the Android SDK or Android platform tools is a must
    during the investigation of a forensic device. The Windows version of Android
    Studio is around 718 MB, and rather heavy compared to the software for the platform
    tools, which is just 20 MB.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在对取证设备进行调查时，必须安装并正确配置Android SDK或Android平台工具。Windows版的Android Studio大约是718MB，相较于仅为20MB的Android平台工具软件来说较为庞大。
- en: 'The following is the step-by-step procedure to install the Android platform
    tools on a Windows 10 machine:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在Windows 10机器上安装Android平台工具的逐步步骤：
- en: Before you install Android Studio or the platform tools, make sure that your
    system has **Java Development Kit** (JDK) installed, because the Android SDK relies
    on Java SE Development Kit.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装Android Studio或平台工具之前，请确保你的系统已安装**Java开发工具包**（JDK），因为Android SDK依赖于Java SE开发工具包。
- en: JDK can be downloaded from [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: JDK可以从[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)下载。
- en: Download the latest version of the platform tools from [https://developer.android.com/studio/releases/platform-tools](https://developer.android.com/studio/releases/platform-tools).
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://developer.android.com/studio/releases/platform-tools](https://developer.android.com/studio/releases/platform-tools)下载平台工具的最新版本。
- en: Right-click and extract the ZIP files to a folder. The installation location
    is your choice and must be remembered for future access. In this example, we will
    extract it to the `C:\ folder`.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击并将ZIP文件解压到一个文件夹。安装位置由你选择，并且必须记住以便未来访问。在本示例中，我们将其解压到`C:\ folder`。
- en: 'Open the directory (`C:\platform-tools`) and note that the following tools
    are listed:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开目录（`C:\platform-tools`），并注意到以下工具列出在其中：
- en: '![](img/54c05c40-3681-41ec-a4a0-e1cccabeda46.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/54c05c40-3681-41ec-a4a0-e1cccabeda46.png)'
- en: Android platform tools
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Android平台工具
- en: This completes the basic Android tool installation. If you're installing the
    full-blown Android Studio version, you should still see the platform tools folder
    under the newly installed Android directory.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了基础的Android工具安装。如果你安装的是完整的Android Studio版本，你仍然应该能在新安装的Android目录下看到平台工具文件夹。
- en: Creating an Android virtual device
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Android虚拟设备
- en: With Android Studio you can create an **Android virtual device** (**AVD**),
    also called an emulator, which is often used by developers when creating new applications;
    however, an emulator has significance from a forensic perspective, too. Emulators
    are useful when trying to understand how applications behave and execute on a
    device. This could be helpful in confirming certain findings that are unearthed
    during a forensic investigation.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Android Studio，你可以创建一个**Android虚拟设备**（**AVD**），也叫做模拟器，这通常在开发者创建新应用时使用；然而，从取证的角度来看，模拟器也具有重要意义。模拟器在理解应用程序如何在设备上运行和执行时非常有用。这在确认在取证调查过程中发现的某些结果时会有所帮助。
- en: 'Also, while working on a device that is running on an older platform, you can
    design an emulator for the same platform. Furthermore, before installing a forensic
    tool on a real device, the emulator can be used to find out how a forensic tool
    works and changes the content on an Android device. To create a new AVD (on the
    Windows workstation), go through the following steps:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在使用运行较旧平台的设备时，您可以为相同的平台设计仿真器。此外，在将取证工具安装到真实设备之前，可以使用仿真器来了解取证工具如何工作以及如何更改Android设备上的内容。要在Windows工作站上创建新的AVD，请按照以下步骤操作：
- en: 'Open Android Studio and navigate to Tools | AVD Manager. The Android Virtual
    Device Manager window is shown in the following screenshot:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Android Studio并导航到工具 | AVD管理器。Android虚拟设备管理器窗口如下图所示：
- en: '![](img/4257f6b5-0d95-4100-aed7-5d37f6e47317.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4257f6b5-0d95-4100-aed7-5d37f6e47317.png)'
- en: Android Virtual Device Manager
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Android虚拟设备管理器
- en: 'Click on Create Virtual Device to create a new virtual device. In the screens
    that follow, select the appropriate hardware, system image, API level, AVD name,
    and so on, and proceed further. For example, the following screenshot shows Android
    Pie being selected:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建虚拟设备”以创建新的虚拟设备。在接下来的屏幕中，选择适当的硬件、系统映像、API级别、AVD名称等，并继续操作。例如，以下截图显示选择了Android
    Pie：
- en: '![](img/a1949229-9e65-4b11-b025-4a31e41aafb9.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a1949229-9e65-4b11-b025-4a31e41aafb9.png)'
- en: Virtual device configuration
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟设备配置
- en: A confirmation message is shown once the device is successfully created. Now,
    select the AVD and click on the Play button.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设备成功创建后，会显示一个确认消息。现在，选择AVD并点击播放按钮。
- en: 'This should launch the emulator. Note that this could take a few minutes, or
    even longer, depending on the workstation''s CPU and RAM. The emulator does consume
    a significant amount of resources on the system. After a successful launch, the
    AVD will run, as shown in the following screenshot:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该会启动仿真器。请注意，这可能需要几分钟，甚至更长时间，具体取决于工作站的CPU和内存。仿真器确实会消耗系统大量资源。成功启动后，AVD将运行，如下图所示：
- en: '![](img/fd474902-3666-403e-8416-48c3af41e24c.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd474902-3666-403e-8416-48c3af41e24c.png)'
- en: The Android emulator
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Android仿真器
- en: From a forensic perspective, analysts and security researchers can leverage
    the functionality of an emulator to understand the file system, data storage,
    and so on. The data created when working on an emulator is stored in your home
    directory in a folder named `android`. For instance, in our example, the details
    about the Pixel_XL_API_28 emulator that we created earlier are stored under `C:\Users\Rohit\.android\avd\Pixel_XL_API_28.avd`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从取证的角度来看，分析师和安全研究人员可以利用仿真器的功能来了解文件系统、数据存储等。通过仿真器工作时创建的数据存储在主目录下名为`android`的文件夹中。例如，在我们的示例中，我们之前创建的Pixel_XL_API_28仿真器的详细信息存储在`C:\Users\Rohit\.android\avd\Pixel_XL_API_28.avd`下。
- en: 'Among the various files present under this directory, the following are those
    that are of interest to a forensic analyst:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在此目录下的各种文件中，以下是对取证分析师有兴趣的文件：
- en: '`cache.img`: This is the disk image of the `/cache` partition (remember that
    we discussed the `/cache` partition of an Android device in [*Chapter 7*](eb3f20e0-270d-4e7d-bb69-3bfd1e707f38.xhtml),
    *Understanding Android*).'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cache.img`：这是`/cache`分区的磁盘映像（记得我们在[*第7章*](eb3f20e0-270d-4e7d-bb69-3bfd1e707f38.xhtml)《理解Android》中讨论了Android设备的`/cache`分区）。'
- en: '`sdcard.img`: This is the disk image of the SD card partition.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sdcard.img`：这是SD卡分区的磁盘映像。'
- en: '`Userdata-qemu.img`: This is the disk image of the `/data` partition. The `/data`
    partition contains valuable information about the device user.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Userdata-qemu.img`：这是`/data`分区的磁盘映像。`/data`分区包含设备用户的宝贵信息。'
- en: Now that we have understood the steps to set up the environment, let's connect
    the Android device to a forensic workstation.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了设置环境的步骤，接下来让我们将Android设备连接到取证工作站。
- en: Connecting an Android device to a workstation
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Android设备连接到工作站
- en: Forensic acquisition of an Android device using open source tools requires you
    to connect the device to a forensic workstation. Forensic acquisition of any device
    should be conducted on a forensically sterile workstation. This means that the
    workstation is strictly used for forensics and not for personal use.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用开源工具对Android设备进行取证采集时，需要将设备连接到取证工作站。任何设备的取证采集应在取证工作站上进行。取证工作站仅限于用于取证，不能用于个人用途。
- en: Note that any time a device is plugged into a computer, changes can be made
    to the device; you must have full control of all interactions with the Android
    device at all times.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，每当设备插入计算机时，可能会对设备进行更改；你必须始终完全控制与Android设备的所有交互。
- en: The following steps should be performed by you in order to successfully connect
    the device to a workstation. Note that write protection may prevent the successful
    acquisition of the device, since commands may need to be pushed to the device
    in order to pull information. All the following steps should be validated on a
    test device prior to attempting them on real evidence.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成功将设备连接到工作站，您需要执行以下步骤。请注意，写保护可能会阻止设备成功获取数据，因为可能需要向设备发送命令以提取信息。所有以下步骤应在测试设备上验证后，再尝试在真实证据上执行。
- en: Identifying the device cable
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别设备数据线
- en: The physical USB interface of an Android device allows it to connect to a computer
    to share data, such as songs, videos, and photos. This USB interface might change
    from manufacturer to manufacturer and also from device to device. For example,
    some devices use mini-USB while some others use micro-USB and USB Type C. Apart
    from this, some manufacturers use their own proprietary formats, such as EXT-USB,
    EXT micro-USB, and so on. The first step in acquiring an Android device is to
    determine what kind of device cable is required.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Android设备的物理USB接口允许它连接到计算机以共享数据，如歌曲、视频和照片。此USB接口可能因制造商和设备型号不同而有所变化。例如，一些设备使用mini-USB，而另一些则使用micro-USB和USB
    Type C。此外，一些制造商使用自己的专有格式，如EXT-USB、EXT micro-USB等。在获取Android设备的第一步是确定所需的设备数据线类型。
- en: 'There are different types, such as mini-USB, micro-USB, and other proprietary
    formats. The following is a brief description of the most widely used connector
    types:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同类型，如mini-USB、micro-USB以及其他专有格式。以下是最常用连接器类型的简要描述：
- en: '| **Connector type** | **Description** |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| **连接器类型** | **描述** |'
- en: '| Mini - A USB | It is approximately 7 x 3 mm in size, with two of the corners
    on one long side lifted out. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| Mini - A USB | 它的大小大约为7 x 3毫米，长边的两个角被抬起。 |'
- en: '| Micro - B USB | It is approximately 6 x 1.5 mm in size, with two corners
    cut off to form a trapezoid. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| Micro - B USB | 它的大小大约为6 x 1.5毫米，两个角被切掉形成一个梯形。 |'
- en: '| Co-axial | It has a circular hole with a pin sticking up in the middle. There
    are different sizes in this category, varying from 2 to 5 mm in diameter. Widely
    used with Nokia models. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 同轴连接器 | 它有一个圆形孔，中间插着一个针。此类别有不同的尺寸，直径从2毫米到5毫米不等。广泛应用于诺基亚型号。 |'
- en: '| D Sub-miniature | It has the shape of a rectangle with two rounded corners.
    The length of the rectangle varies, but the height is always 1.5 to 2 mm. Used
    mostly by Samsung and LG devices. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| D Sub-miniature | 它的形状为矩形，具有两个圆角。矩形的长度不同，但高度始终为1.5到2毫米。主要用于三星和LG设备。 |'
- en: Next, let's have a quick look at how to install device drivers.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来快速了解一下如何安装设备驱动程序。
- en: Installing device drivers
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装设备驱动程序
- en: In order to identify the device properly, the computer may need certain drivers
    to be installed. Without the necessary drivers, the computer may not identify
    and work with the connected device. The issue is that, since Android is allowed
    to be modified and customized by manufacturers, there is no single generic driver
    that works for all Android devices. Each manufacturer writes its own proprietary
    drivers and distributes them over the internet, so it's important to identify
    the specific device drivers that need to be installed. Of course, some Android
    forensic toolkits (which we will discuss in the following chapters) do come with
    some generic drivers or a set of the most widely used drivers; they may not work
    with all models of the Android phone.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确识别设备，计算机可能需要安装某些驱动程序。如果没有必要的驱动程序，计算机可能无法识别并正常与连接的设备工作。问题在于，由于Android允许制造商进行修改和定制，因此没有通用的驱动程序适用于所有Android设备。每个制造商编写自己的专有驱动程序并通过互联网发布，因此，确定需要安装的特定设备驱动程序非常重要。当然，一些Android取证工具包（我们将在后续章节中讨论）确实提供了一些通用驱动程序或一组最广泛使用的驱动程序；但它们可能无法适用于所有型号的Android手机。
- en: Some Windows operating systems are able to autodetect and install drivers once
    the device is plugged in, but more often than not they fail. The device drivers
    for all manufacturers can be found on their respective websites.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 一些Windows操作系统在设备插入后能够自动检测并安装驱动程序，但大多数情况下它们会失败。所有制造商的设备驱动程序都可以在各自的官方网站上找到。
- en: Accessing the connected device
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问连接的设备
- en: 'If you haven''t done so already, connect the unlocked Android device to the
    computer directly using the USB cable. The Android device will appear as a new
    drive and you will be able to access the files on the external storage. If the
    device is locked, then at this point, you will not be able to access any files
    and may need to use the Turn on USB storage option, which can be enabled on the
    phone, as shown in the following screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有这样做，请直接使用USB电缆将解锁的Android设备连接到计算机。Android设备将显示为一个新驱动器，你将能够访问外部存储上的文件。如果设备被锁定，则此时你将无法访问任何文件，可能需要使用“开启USB存储”选项，这个选项可以在手机上启用，如下图所示：
- en: '![](img/32c7722a-6859-4e09-8d09-922b25024de5.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/32c7722a-6859-4e09-8d09-922b25024de5.png)'
- en: USB mass storage in Android 4.1 version
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Android 4.1版本中的USB大容量存储
- en: 'With some Android phones (especially with HTC), the device may expose more
    than one functionality when connected with a USB cable. For instance, as shown
    in the following screenshot, when an HTC device is connected it presents a menu
    with four options. The default selection is Charge only. When the Disk drive option
    is selected, it is mounted as a disk drive:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些Android手机（尤其是HTC手机），当设备通过USB电缆连接时，它可能会暴露出多个功能。例如，如下图所示，当HTC设备连接时，它会呈现一个包含四个选项的菜单。默认选择是仅充电。当选择磁盘驱动器选项时，它将作为磁盘驱动器挂载：
- en: '![](img/ec34f18c-7553-44e3-a6db-d8f1d6205684.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ec34f18c-7553-44e3-a6db-d8f1d6205684.png)'
- en: HTC mobile USB options
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: HTC手机的USB选项
- en: When the device is mounted as a disk drive, you will be able to access the SD
    card present on the device. From a forensic point of view, the SD card has significant
    value as it may contain files that are important to an investigation; however,
    the core application data stored under `/data/data` will remain on the device
    and cannot be accessed with these methods.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当设备作为磁盘驱动器挂载时，你将能够访问设备上存在的SD卡。从法医角度来看，SD卡具有重要价值，因为它可能包含对调查重要的文件；然而，存储在`/data/data`下的核心应用数据将保留在设备上，并无法通过这些方法访问。
- en: The Android debug bridge
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android调试桥
- en: Considered to be one of the most crucial components in Android forensics, the
    **Android debug bridge** (**ADB**) is a command-line tool that allows you to communicate
    with the Android device and control it. We will learn about the ADB in detail
    in upcoming chapters; for now, we will focus on a basic introduction to the ADB.
    You can access the ADB tool under `/platform-tools/`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 被认为是Android取证中最关键的组件之一，**Android调试桥**（**ADB**）是一个命令行工具，允许你与Android设备进行通信并控制它。在接下来的章节中，我们将详细了解ADB；现在，我们将专注于ADB的基本介绍。你可以在`/platform-tools/`下访问ADB工具。
- en: Before we discuss anything about the ADB, we need to have an understanding of
    the **USB debugging** option.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论任何关于ADB的内容之前，我们需要先了解**USB调试**选项。
- en: USB debugging
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: USB调试
- en: 'The primary function of this option is to enable communication between the
    Android device and the workstation on which the Android SDK is installed. On a
    Samsung phone, you can access this under Settings | Developer Options, as shown
    in the following screenshot:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项的主要功能是启用Android设备与安装了Android SDK的工作站之间的通信。在Samsung手机上，你可以在“设置 | 开发者选项”中找到这个选项，如下图所示：
- en: '![](img/73540294-59bb-4c6c-8649-a885589841b8.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/73540294-59bb-4c6c-8649-a885589841b8.png)'
- en: The USB debugging option in a Samsung S8 device
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Samsung S8设备中的USB调试选项
- en: Other Android phones may have different environments and configuration features.
    You may have to force the Developer Options option by accessing build mode.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 其他Android手机可能有不同的环境和配置特性。你可能需要通过访问构建模式来强制启用“开发者选项”。
- en: However, starting from Android 4.2, the Developer Options menu is hidden to
    make sure that users do not enable it by accident. To enable it, go to Settings
    | About Phone and then tap the Build Number field seven times. After this, Developer
    Options will be available in the Settings menu. Prior to Android 4.2.2, enabling
    this option was the only requirement for communicating with the device over ADB;
    however, starting from Android 4.2.2, Google has introduced the secure USB debugging
    option. This feature only allows hosts that are explicitly authorized by the user
    to connect to the device using ADB.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，从 Android 4.2 开始，开发者选项菜单被隐藏，以确保用户不会意外启用它。要启用它，请进入设置 | 关于手机，然后连续点击“版本号”字段七次。完成此操作后，开发者选项将出现在设置菜单中。在
    Android 4.2.2 之前，启用此选项是与设备通过 ADB 通信的唯一要求；然而，从 Android 4.2.2 开始，Google 引入了安全的 USB
    调试选项。此功能仅允许用户明确授权的主机通过 ADB 连接设备。
- en: 'Thus, when you connect the device to a new workstation via USB in order to
    access ADB, you need to first unlock the device and authorize access by pressing
    OK in the confirmation window, as shown in the following screenshot. If Always
    allow from this computer is checked, the device will not prompt for authorization
    in the future:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当你通过 USB 将设备连接到新工作站以访问 ADB 时，你需要首先解锁设备，并通过在确认窗口中按 OK 来授权访问，如下图所示。如果勾选了“始终允许来自此计算机的访问”，则以后设备将不会再提示授权：
- en: '![](img/4df919bd-ed19-45c7-8caa-4800946a8835.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4df919bd-ed19-45c7-8caa-4800946a8835.png)'
- en: Secure USB debugging
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 安全的 USB 调试
- en: When the USB debugging option is selected, the device will run the **adb daemon**
    (`adbd`) in the background and will continuously look for a USB connection. The
    daemon will usually run under a nonprivileged shell user account and thus will
    not provide access to the complete data; however, on rooted phones, `adbd` will
    run under the root account and therefore provide access to all the data. It is
    not recommended that you root a device to gain full access unless all other forensic
    methods fail. Should you elect to root an Android device, the methods must be
    well-documented and tested prior to attempting it on real evidence. Rooting will
    be discussed at the end of this chapter.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择 USB 调试选项时，设备将运行 **adb 守护进程** (`adbd`) 在后台，并持续寻找 USB 连接。该守护进程通常在一个没有特权的 shell
    用户账户下运行，因此不会提供对完整数据的访问权限；然而，在 root 设备上，`adbd` 会以 root 账户运行，从而提供对所有数据的访问权限。除非所有其他取证方法都失败，否则不推荐将设备
    root 以获取完全访问权限。如果你选择将 Android 设备 root，必须在尝试应用到真实证据之前对方法进行详细记录和测试。关于 root 的内容将在本章末尾讨论。
- en: On the workstation where the Android SDK is installed, `adbd` will run as a
    background process. Also, on the same workstation, a client program, which can
    be invoked from a shell by issuing the `adb` command, will run. When the `adb`
    client is started, it first checks whether an `adb` daemon is already running.
    If the response is negative, it initiates a new process to start the `adb` daemon.
    The `adb` client program communicates with local `adbd` over port `5037`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装了 Android SDK 的工作站上，`adbd` 将作为后台进程运行。同时，在同一工作站上，还会有一个客户端程序，可以通过在 shell 中输入
    `adb` 命令来启动。当 `adb` 客户端启动时，它会首先检查是否已经有 `adb` 守护进程在运行。如果没有，它会启动一个新的进程来启动 `adb`
    守护进程。`adb` 客户端程序通过端口 `5037` 与本地的 `adbd` 通信。
- en: Accessing the device using adb
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 adb 访问设备
- en: Once the environment setup is complete and the Android device is in USB debugging
    mode, connect the Android device to the forensic workstation with a USB cable
    and start using `adb`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦环境设置完成，且 Android 设备处于 USB 调试模式，使用 USB 电缆将 Android 设备连接到取证工作站并开始使用 `adb`。
- en: Detecting connected devices
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测连接的设备
- en: 'The following `adb` command provides a list of all the devices connected to
    the forensic workstation. This will also list the emulator if it is running at
    the time of issuing the command. Also remember that, if the necessary drivers
    are not installed, then the following command will show a blank message. If you
    encounter this situation, download the necessary drivers from the manufacturer
    and install them:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 `adb` 命令提供了所有连接到取证工作站的设备列表。如果在发出命令时模拟器正在运行，它也会被列出。另外请记住，如果未安装必要的驱动程序，则该命令将显示空白消息。如果遇到这种情况，请从制造商处下载并安装必要的驱动程序：
- en: '![](img/6b952415-ff44-418b-9067-88e9374f0c87.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6b952415-ff44-418b-9067-88e9374f0c87.png)'
- en: We now have a list of devices connected to the workstation. Next, we will see
    how to kill the local ADB server.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经获得了连接到工作站的设备列表。接下来，我们将查看如何停止本地 ADB 服务器。
- en: Killing the local ADB server
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 杀死本地 ADB 服务器
- en: 'The following command kills the local `adb` service:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于终止本地的 `adb` 服务：
- en: '[PRE0]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After killing the local `adb` service, issue the `adb` devices command. You
    will see that the server is started, as shown in the following screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在终止本地 `adb` 服务后，执行 `adb devices` 命令。你将看到服务器已启动，如以下截图所示：
- en: '![](img/b2236193-c3b2-47d0-8782-3c6d0ff11c66.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2236193-c3b2-47d0-8782-3c6d0ff11c66.png)'
- en: We will now access the ADB shell on the Android device.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将访问 Android 设备上的 ADB shell。
- en: Accessing the adb shell
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问 adb shell
- en: The ADB shell command allows you to access the shell on an Android device and
    interact with the device.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`adb` shell 命令允许你访问 Android 设备上的 shell，并与设备进行交互。'
- en: 'The following is the command to access the `adb` shell and execute a basic
    `ls` command to see the contents of the current directory:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是访问 `adb` shell 并执行基本 `ls` 命令以查看当前目录内容的命令：
- en: '[PRE1]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The Android emulator can be used by you to execute and understand `adb` commands
    before using them on the device. In [Chapter 9](bf232566-3a17-4914-992b-80674dd379de.xhtml),
    *Android Data Extraction Techniques*, we will explain more about leveraging adb
    to install applications, copy files and folders from the device, view device logs,
    and so on.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Android 模拟器可供你执行并理解 `adb` 命令，然后再在设备上使用它们。在[第 9 章](bf232566-3a17-4914-992b-80674dd379de.xhtml)《*Android
    数据提取技术*》中，我们将详细介绍如何利用 adb 安装应用程序、从设备中复制文件和文件夹、查看设备日志等。
- en: Basic Linux commands
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本 Linux 命令
- en: 'We will now take a quick look at some commonly used Linux commands and their
    usage with respect to an Android device:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将快速浏览一些常用的 Linux 命令及其在 Android 设备上的使用：
- en: '`ls`: The `ls` command (with no option) lists the files and directories present
    in the current directory. With the `-l` option, this command shows files and directories
    and also their size, modified date and time, the owner of the file and its permission,
    and so on, as shown in the following command-line output:'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ls`：`ls` 命令（不带任何选项）列出当前目录中存在的文件和目录。使用 `-l` 选项时，该命令会显示文件和目录的详细信息，如大小、修改日期和时间、文件所有者及其权限等，如以下命令行输出所示：'
- en: '[PRE2]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Similarly, the following are a few options that can be used along with the `ls`
    command:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，以下是一些可以与 `ls` 命令一起使用的选项：
- en: '| **Option** | **Description** |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| **选项** | **描述** |'
- en: '| `a` | Lists hidden files |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| `a` | 列出隐藏文件 |'
- en: '| `c` | Displays files by timestamp |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| `c` | 按时间戳显示文件 |'
- en: '| `d` | Displays only directories |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| `d` | 只显示目录 |'
- en: '| `n` | Displays the long-format listing, with GID and UID numbers. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| `n` | 显示长格式列表，包括 GID 和 UID 编号 |'
- en: '| `R` | Displays subdirectories as well |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| `R` | 显示子目录 |'
- en: '| `t` | Displays files based on timestamp |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| `t` | 根据时间戳显示文件 |'
- en: '| `u` | Displays the file access time |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| `u` | 显示文件访问时间 |'
- en: 'Depending on the requirements, one or more of the following options can be
    used by the investigator to view the details:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 根据需求，调查员可以使用以下一个或多个选项来查看详细信息：
- en: '`cat`: The `cat` command reads one or more files and prints them to standard
    output, as shown in the following command lines:'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cat`：`cat` 命令用于读取一个或多个文件并将其内容输出到标准输出，示例如下所示：'
- en: '[PRE3]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To combine multiple files into one, we can use the `>` operator. To append to
    an existing file, we can use the `>>` operator.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要将多个文件合并为一个文件，我们可以使用 `>` 运算符。要向现有文件追加内容，我们可以使用 `>>` 运算符。
- en: '`cd`: The `cd` command is used to change from one directory to another. This
    is more frequently used while navigating from one folder to another. The following
    example shows the commands used to change to the `system` folder:'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cd`：`cd` 命令用于在不同目录之间切换。通常在从一个文件夹切换到另一个文件夹时使用。以下示例展示了用于切换到 `system` 文件夹的命令：'
- en: '[PRE4]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`cp`: The `cp` command can be used to copy a file from one location to another.
    The syntax for this command is as follows:'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cp`：`cp` 命令可以用于将文件从一个位置复制到另一个位置。该命令的语法如下：'
- en: '[PRE5]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`chmod`: The `chmod` command is used to change the access permissions to filesystem
    objects (files and directories). It may also alter special mode flags. The syntax
    for this command is as follows:'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chmod`：`chmod` 命令用于更改文件系统对象（文件和目录）的访问权限。它还可以更改特殊模式标志。该命令的语法如下：'
- en: '[PRE6]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: For example, `chmod 777` on a file gives read, write, and execute permissions
    to everyone.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`chmod 777` 命令为文件赋予所有人读取、写入和执行权限。
- en: '`dd`: The `dd` command is used to copy a file, converting and formatting it
    according to the operands. With Android, the `dd` command can be used to create
    a bit-by-bit image of the Android device. More details of imaging are covered
    in [*Chapter 4*](f082adcc-6892-4e66-80cc-49b9752cb56a.xhtml), *Data Acquisition
    from iOS Backups*. The following is the syntax that needs to be used with this
    command:'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dd`：`dd` 命令用于复制文件，并根据操作数进行转换和格式化。在 Android 上，`dd` 命令可以用来创建 Android 设备的逐位镜像。关于镜像的更多细节，请参阅
    [*第 4 章*](f082adcc-6892-4e66-80cc-49b9752cb56a.xhtml)，*来自 iOS 备份的数据获取*。以下是需要与此命令一起使用的语法：'
- en: '[PRE7]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`rm`: The `rm` command can be used to delete files or directories. The following
    is the syntax for this command:'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rm`：`rm` 命令可以用来删除文件或目录。以下是此命令的语法：'
- en: '[PRE8]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`grep`: The `grep` command is used to search files or output for a particular
    pattern. The syntax for this command is as follows:'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grep`：`grep` 命令用于在文件或输出中搜索特定的模式。该命令的语法如下：'
- en: '[PRE9]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`pwd`: The `pwd` command displays the current working directory. For example,
    the following command-line output shows that the current working directory is
    `/system`:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pwd`：`pwd` 命令用于显示当前工作目录。例如，以下命令行输出显示当前工作目录为 `/system`：'
- en: '[PRE10]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '`mkdir`: The `mkdir` command is used to create a new directory. The following
    is the syntax for this command:'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mkdir`：`mkdir` 命令用于创建新目录。以下是此命令的语法：'
- en: '[PRE11]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '`exit`: The `exit` command can be used to exit the shell you are in. Just type
    `exit` in the shell to exit from it.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exit`：`exit` 命令用于退出当前所在的 shell。在 shell 中输入 `exit` 即可退出。'
- en: Next, we will see how to handle an Android device efficiently before the investigation.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到如何在调查前高效地处理 Android 设备。
- en: Handling an Android device
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理 Android 设备
- en: Handling an Android device in a proper manner prior to the forensic investigation
    is a very important task. Care should be taken to make sure that our unintentional
    actions don't result in data modification or any other unwanted happenings. The
    following sections throw light on certain issues that need to be considered while
    handling the device in the initial stages of a forensic investigation.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行法医调查之前，正确处理 Android 设备是非常重要的任务。应小心确保我们的无意操作不会导致数据修改或其他不必要的事件。以下章节将重点介绍在法医调查的初期阶段处理设备时需要考虑的一些问题。
- en: With improvements in technology, the concept of *device locking* has effectively
    changed over the last few years. Most users now have a passcode locking mechanism
    enabled on their device because of the increase in general security awareness.
    Before we look at some of the techniques used to bypass locked Android devices,
    it is important for us not to miss an opportunity to disable the passcode when
    there is a chance.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 随着技术的进步，*设备锁定* 的概念在过去几年发生了显著变化。由于安全意识的普遍提高，大多数用户现在在其设备上启用了密码锁定机制。在我们研究一些绕过锁定
    Android 设备的技术之前，重要的是当有机会时，我们不要错过禁用密码锁定的机会。
- en: 'When an Android device that is to be analyzed is first accessed, check whether
    the device is still active (unlocked). If so, change the settings of the device
    to enable greater access to the device. When the device is still active, consider
    performing the following tasks:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 当第一次访问要分析的 Android 设备时，检查设备是否仍然处于活动状态（未锁定）。如果是，请更改设备设置，以便获得更多的设备访问权限。当设备仍然处于活动状态时，可以考虑执行以下任务：
- en: '**Enabling USB debugging**: Once the USB debugging option is enabled, it gives
    greater access to the device through the `adb` connection. This is of great significance
    when it comes to extracting data from the device. The location of the option to
    enable USB debugging might change from device to device, but it''s usually under
    Developer Options in Settings. Most methods for physically acquiring Android devices
    require USB debugging to be enabled.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用 USB 调试**：一旦启用了 USB 调试选项，就可以通过 `adb` 连接获得更多对设备的访问权限。这对于从设备提取数据至关重要。启用 USB
    调试的选项位置可能因设备而异，但通常位于设置中的开发者选项下。大多数物理获取 Android 设备的方法都需要启用 USB 调试。'
- en: '**Enabling the Stay awake setting**: If the Stay awake option is selected and
    the device is connected for charging, then the device never locks. Again, if the
    device locks, the acquisition can be halted.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用保持唤醒设置**：如果选中保持唤醒选项，并且设备正在充电，则设备永远不会锁定。如果设备锁定，数据采集过程可能会被中断。'
- en: '**Increasing screen timeout**: This is the time for which the device will be
    effectively active once it is unlocked. The location to access this setting varies
    depending upon the model of the device. On a Samsung Galaxy S3 phone, you can
    access this setting by navigating to Settings | Display | ScreenTimeout.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增加屏幕超时**：这是设备解锁后有效激活的时间。访问此设置的位置会根据设备型号有所不同。在三星 Galaxy S3 手机上，您可以通过导航至 设置
    | 显示 | 屏幕超时 来访问此设置。'
- en: Apart from these, as mentioned in [*Chapter 1*](3bd35df5-095f-4aac-a214-31a25983715b.xhtml),
    *Introduction to Mobile Forensics*, the device needs to be isolated from the network
    to make sure that remote wipe options do not work on the device. The Android Device
    Manager allows the phone to be remotely wiped or locked. This can be done by signing
    in to the Google account, which is configured on the mobile. More details about
    this are supplied in the following section. If the Android device is not set up
    to allow remote wiping, the device can only be locked using the Android Device
    Manager. There are also several **mobile device management** (**MDM**) software
    products available on the market, which allow users to remotely lock or wipe the
    Android device. Some of these may not require specific settings to be enabled
    on the device.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，如 [*第1章*](3bd35df5-095f-4aac-a214-31a25983715b.xhtml) 中所述，*移动法证简介*，设备需要与网络隔离，以确保远程擦除选项无法在设备上生效。安卓设备管理器允许远程擦除或锁定手机。这可以通过登录到配置在手机上的
    Google 账户来完成。更多的细节将在后续章节中提供。如果安卓设备未设置为允许远程擦除，则只能通过安卓设备管理器对设备进行锁定。此外，市场上还有一些 **移动设备管理**
    (**MDM**) 软件产品，允许用户远程锁定或擦除安卓设备。某些产品可能不需要在设备上启用特定设置。
- en: Using the available remote wipe software, it is possible to delete all the data,
    including emails, applications, photos, contacts, and other files, as well as
    those found on the SD card. To isolate the device from the network, you can put
    the device in airplane mode and disable Wi-Fi as an extra precaution. Enabling
    airplane mode and disabling Wi-Fi works well, as the device will not be able to
    communicate over a cellular network and cannot be accessed via Wi-Fi. Removing
    the SIM card from the phone is also an option, but that does not effectively stop
    the device from communicating over Wi-Fi or other cellular networks. To place
    the device in airplane mode, press and hold the Power Off button and select Airplane
    mode.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用可用的远程擦除软件，可以删除所有数据，包括电子邮件、应用程序、照片、联系人以及其他文件，以及存储在 SD 卡上的文件。为了将设备与网络隔离，您可以将设备设置为飞行模式并禁用
    Wi-Fi，作为额外的预防措施。启用飞行模式并禁用 Wi-Fi 是有效的，因为设备将无法通过蜂窝网络进行通信，并且无法通过 Wi-Fi 访问。移除手机的 SIM
    卡也是一个选项，但这并不能有效阻止设备通过 Wi-Fi 或其他蜂窝网络进行通信。要将设备设置为飞行模式，请按住电源按钮并选择飞行模式。
- en: All these steps can be done when the Android device is not locked; however,
    during the investigation, we commonly encounter devices that are locked. Therefore,
    it's important to understand how to bypass the lock code if it is enabled on an
    Android device.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当安卓设备未锁定时，可以执行所有这些步骤；然而，在调查过程中，我们常常会遇到被锁定的设备。因此，了解如何绕过锁定密码（如果已启用）变得尤为重要。
- en: Screen lock bypassing techniques
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 屏幕锁定绕过技术
- en: Because of the increase in user awareness and the ease of functionality, there
    has been an exponential increase in the usage of passcode options to lock Android
    devices. This means that bypassing the device's screen lock during a forensic
    investigation becomes increasingly important. The applicability of the screen
    lock bypass techniques discussed so far is based on the situation. Note that some
    of these methods may result in us making changes to the device. Make sure that
    you test and validate all the steps listed on non-evidentiary Android devices.
    You must have authorization to make the required changes to the device, document
    all steps taken, and be able to describe the steps taken if courtroom testimony
    is required.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 由于用户意识的提高以及功能的简易性，使用密码选项来锁定安卓设备的数量呈指数增长。这意味着在法证调查过程中绕过设备屏幕锁定变得越来越重要。迄今为止讨论的屏幕锁定绕过技术的适用性取决于具体情况。需要注意的是，这些方法中的一些可能会导致我们对设备进行更改。请确保在非证据性质的安卓设备上测试并验证所有列出的步骤。您必须获得授权才能对设备进行必要的更改，记录所有采取的步骤，并能够在需要法庭证词时描述所采取的步骤。
- en: 'Currently, there are three types of screen lock mechanisms offered by Android.
    Although there are some devices that have voice-lock, face-lock, and fingerprint-lock
    options, we will limit our discussion to the following three options, since these
    are the most widely used on all Android devices:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，安卓提供三种类型的屏幕锁机制。尽管有些设备提供语音锁、面部识别锁和指纹锁等选项，但我们将仅讨论以下三种，因为这三种是所有安卓设备中最广泛使用的：
- en: '**Pattern lock**: The user sets a pattern or design on the phone and the same
    pattern must be drawn to unlock the device. Android was the first smartphone to
    introduce a pattern lock.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图案锁**：用户在手机上设置一个图案或设计，必须画出相同的图案才能解锁设备。安卓是首个引入图案锁的智能手机操作系统。'
- en: '**PIN code**: This is the most common lock option and is found on many mobile
    phones. The PIN code is a four-digit number that needs to be entered to unlock
    the device.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PIN码**：这是最常见的锁定选项，许多手机都有此功能。PIN码是一个四位数字，需要输入该数字才能解锁设备。'
- en: '**Passcode**: This is an alphanumeric passcode. Unlike the PIN, which takes
    four digits, the alphanumeric passcode includes letters as well as digits.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码**：这是一个由字母和数字组成的密码。与仅包含四位数字的PIN码不同，字母数字密码包括字母和数字。'
- en: The following section details some techniques you can use to bypass these Android
    lock mechanisms. Depending on the situation, these techniques might help an investigator
    to bypass the screen lock.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分详细介绍了几种技术，你可以用来绕过这些安卓锁屏机制。根据情况，这些技术可能帮助调查人员绕过屏幕锁。
- en: Using ADB to bypass the screen lock
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ADB绕过屏幕锁
- en: If USB debugging appears to be enabled on the Android device, it is wise to
    take advantage of it by connecting with `adb` using a USB connection, as discussed
    in the earlier sections of this chapter. You should connect the device to the
    forensic workstation and issue the `adb` devices command. If the device shows
    up, it implies that USB debugging is enabled. If the Android device is locked,
    you must attempt to bypass the screen lock. The following two methods may allow
    you to bypass the screen lock when USB debugging is enabled.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安卓设备上启用了USB调试，明智的做法是利用这一点，通过USB连接使用`adb`进行连接，正如本章前面部分所讨论的那样。你应该将设备连接到取证工作站并执行`adb`
    devices命令。如果设备显示出来，则说明USB调试已启用。如果安卓设备被锁定，你必须尝试绕过屏幕锁。以下两种方法可能在启用USB调试时帮助你绕过屏幕锁。
- en: Deleting the gesture.key file
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除gesture.key文件
- en: 'Deleting the `gesture.key` file will remove the pattern lock on the device;
    however, it''s important to note that this will permanently change the device,
    as the pattern lock is gone. This should be considered if you are conducting covert
    operations. The following shows how the process is done:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 删除`gesture.key`文件将删除设备上的图案锁；然而，需要注意的是，这会永久改变设备，因为图案锁已被移除。如果你正在进行秘密操作，这一点应考虑在内。以下是该过程的步骤：
- en: Connect the device to the forensic workstation (a Windows machine, in our example)
    using a USB cable.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用USB线将设备连接到取证工作站（本示例中为Windows机器）。
- en: 'Open the command prompt and execute the following instructions:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并执行以下指令：
- en: '[PRE12]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Reboot the device. If the pattern lock still appears, just draw any random design
    and the device should unlock without any trouble.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启设备。如果图案锁仍然出现，只需随便画一个图案，设备应该能够顺利解锁。
- en: This method works when the device is rooted. This method may not be successful
    on unrooted devices. Rooting an Android device should not be performed without
    proper authorization, as the device is altered.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当设备已被root时，这种方法有效。在未root的设备上，此方法可能无法成功。未经适当授权，不应对安卓设备进行root操作，因为这会改变设备的原始状态。
- en: Updating the settings.db file
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新settings.db文件
- en: 'To update the `settings.db` file, go through the following steps:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新`settings.db`文件，请按以下步骤操作：
- en: Connect the device to the forensic workstation using a USB cable.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用USB线将设备连接到取证工作站。
- en: 'Open the command prompt and execute the following: `/data/data/com.android.providers.settings/databases
    sqlite3 settings.db`:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并执行以下指令：`/data/data/com.android.providers.settings/databases sqlite3
    settings.db`：
- en: '![](img/856dc999-8d82-45b4-9d57-11c9c6f1abe4.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](img/856dc999-8d82-45b4-9d57-11c9c6f1abe4.png)'
- en: Exit and reboot the device.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 退出并重启设备。
- en: The Android device should be unlocked. If it is not, attempt to remove the `gesture.key`
    as explained earlier.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安卓设备应处于解锁状态。如果未解锁，尝试按照之前的说明删除`gesture.key`文件。
- en: We will have a look at the recovery mode and ADB connection in the following
    section.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将查看恢复模式和ADB连接。
- en: Checking for the modified recovery mode and ADB connection
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查修改后的恢复模式和 ADB 连接
- en: In Android, recovery refers to the dedicated partition where the recovery console
    is present. The two main functions of recovery are deleting all user data and
    installing updates. For instance, when you factory-reset your phone, recovery
    boots up and deletes all the data. Similarly, when updates are to be installed
    on the phone, it is done in recovery mode.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Android 中，恢复指的是存放恢复控制台的专用分区。恢复的两个主要功能是删除所有用户数据和安装更新。例如，当你恢复出厂设置时，恢复分区会启动并删除所有数据。同样，当需要安装更新时，也是通过恢复模式来完成的。
- en: 'There are many enthusiastic Android users who install custom ROM through a
    modified recovery module. This modified recovery module is mainly used to make
    the process of installing custom ROM easy. Recovery mode can be accessed in different
    ways, depending on the manufacturer of the device; information on which method
    is right for which manufacturer''s devices is easily available on the internet.
    Usually, this is done by holding different keys together, such as the Volume button
    and Power button. Once in recovery mode, connect the device to the workstation
    and try to access the `adb` connection. If the device has a recovery mode that
    is not modified, you may not be able to access the `adb` connection. Modified
    recovery versions of the device present the user with different options as shown
    in the following screenshot:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多热衷的 Android 用户通过修改的恢复模块安装自定义 ROM。这个修改过的恢复模块主要是为了简化安装自定义 ROM 的过程。恢复模式的访问方式因设备制造商而异；关于哪种方法适用于哪种制造商的设备的信息可以在互联网上轻松找到。通常，这可以通过同时按住不同的按钮来完成，比如音量键和电源键。进入恢复模式后，将设备连接到工作站并尝试访问
    `adb` 连接。如果设备的恢复模式未被修改，你可能无法访问 `adb` 连接。设备的修改版恢复版本会为用户提供不同的选项，如下图所示：
- en: '![](img/b241b78f-fe58-44e5-b75a-fd1984664839.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b241b78f-fe58-44e5-b75a-fd1984664839.png)'
- en: Next, we will see how to flash the recovery partition.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到如何刷新恢复分区。
- en: Flashing a new recovery partition
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 刷新新的恢复分区
- en: There are mechanisms available to flash the recovery partition of an Android
    device with a modified image. The fastboot utility facilitates this process. Fastboot
    is a diagnostic protocol that comes with the SDK package and is used primarily
    to modify the flash filesystem through a USB connection from a host computer.
    For this, you need to start the device in boot loader mode, in which only the
    most basic hardware initialization is performed.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 有可用机制可以通过修改的镜像刷新 Android 设备的恢复分区。fastboot 工具可以方便地完成这一过程。Fastboot 是一个诊断协议，随 SDK
    包提供，主要用于通过主机计算机的 USB 连接修改闪存文件系统。为此，你需要将设备启动到引导加载程序模式，在此模式下只执行最基本的硬件初始化。
- en: Once the protocol is enabled on the device, it will accept a specific set of
    commands that are sent to it via the USB cable using a command line. Flashing
    or rewriting a partition with a binary image stored on the computer is one such
    command that is allowed. Once the recovery is flashed, boot the device in recovery
    mode, mount the `/data` and `/system` partitions, and use `adb` to remove the
    `gesture.key` file. Reboot the phone and you should be able to bypass the screen
    lock; however, this works only if the device bootloader is unlocked. Also, flashing
    permanently alters the device. Instead of flashing, you could use the fastboot
    `boot` command to boot to a recovery image temporarily to delete the key file
    without permanently changing the recovery partition.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在设备上启用该协议，它将接受通过 USB 数据线发送的特定命令集。这些命令通过命令行发送。刷新或重写一个分区，使用保存在计算机上的二进制镜像文件就是一个允许的命令。一旦恢复分区被刷新，启动设备进入恢复模式，挂载
    `/data` 和 `/system` 分区，并使用 `adb` 删除 `gesture.key` 文件。重启手机后，应该能够绕过屏幕锁；然而，这只有在设备的引导加载程序解锁的情况下才能生效。此外，刷新操作会永久改变设备。你也可以使用
    fastboot `boot` 命令临时启动恢复镜像，在不永久改变恢复分区的情况下删除键文件。
- en: Using automated tools
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自动化工具
- en: 'There are several automated solutions available on the market for unlocking
    Android devices. Commercial tools, such as Cellebrite and XRY, are capable of
    bypassing the screen locks, but most of them require USB debugging to be enabled.
    We will now examine how to unlock an Android device using the UFED user lock code
    recovery tool. This tool only works on those devices that support USB OTG. This
    process also requires a UFED camera, Cable No. 500-Bypass lock, and Cable No.
    501-Bypass lock. Once the tool is installed on the workstation, go through the
    following steps to unlock the Android device:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有几种自动化解决方案可以解锁安卓设备。像 Cellebrite 和 XRY 这样的商业工具能够绕过屏幕锁定，但大多数工具都要求启用 USB 调试。接下来，我们将探讨如何使用
    UFED 用户锁定代码恢复工具解锁安卓设备。此工具仅适用于支持 USB OTG 的设备。此过程还需要 UFED 相机、500号绕过锁定电缆和501号绕过锁定电缆。工具安装在工作站后，按照以下步骤解锁安卓设备：
- en: 'Run the tool on the workstation and press `1`, as shown in the following screenshot:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在工作站上运行该工具并按 `1`，如下图所示：
- en: '![](img/d451d87c-63de-4905-a9cb-34ee27dae914.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d451d87c-63de-4905-a9cb-34ee27dae914.png)'
- en: UFED user lock code recovery tool
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: UFED 用户锁定代码恢复工具
- en: Now, connect side A of Cable No. 500-Bypasslock to a USB port of the workstation.
    Also, connect side B of Cable No. 500-Bypasslock to Cable No. 501- OTG and then
    connect the other end to the device.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将 500号绕过锁定电缆的 A 端连接到工作站的 USB 端口。同时，将 500号绕过锁定电缆的 B 端连接到 501号 OTG 电缆，然后将另一端连接到设备。
- en: Once connected, the tool prompts you to select the recovery profile. Select
    `[1] Manually select the recovery profile.`.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接后，工具会提示你选择恢复配置文件。选择 `[1] 手动选择恢复配置文件`。
- en: Now, select the lock type used on the device and the recovery profile, and proceed
    by following the instructions on the screen.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择设备上使用的锁定类型和恢复配置文件，并按照屏幕上的指示进行操作。
- en: After this, make sure that the keypad appears on the device screen and that
    it's ready to accept the PIN code.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，确保设备屏幕上出现了数字键盘，并准备好接受 PIN 码。
- en: Close any message windows that may appear. Press `1` and hit *Enter*. Now, make
    five incorrect login attempts by entering random input, and click on Forgot pattern
    at the bottom of the device.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭任何可能出现的消息窗口。按 `1` 并按 *Enter*。现在，通过输入随机内容进行五次错误的登录尝试，然后点击设备底部的“忘记图案”。
- en: Follow the instructions on the screen, wait for the camera window to open, and
    then click on the camera window.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照屏幕上的指示操作，等待相机窗口打开，然后点击相机窗口。
- en: Use the cursor to select any nonempty area on the device's screen by placing
    the green square over it—for example, select any number on the screen. This is
    used by the tool to detect whether the device is unlocked. Press *Enter* to start
    the process.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用光标选择设备屏幕上任意非空区域，将绿色方框覆盖其上——例如，选择屏幕上的任意数字。工具将使用此信息来检测设备是否已解锁。按 *Enter* 键开始过程。
- en: The tool will try a number of combinations to unlock the device. Once unlocked,
    it will prompt you to end the process.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工具将尝试多种组合来解锁设备。解锁成功后，它会提示你结束该过程。
- en: We will now learn about the Android Device Manager and how to unlock a device
    using it.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将了解 Android 设备管理器以及如何使用它解锁设备。
- en: Using Android Device Manager
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Android 设备管理器
- en: 'Most of the latest Android phones come with a service called Android Device
    Manager, which helps the owner of a device to locate their lost phone. This service
    can also be used to unlock a device; however, this is possible only when you know
    the Google account credentials that are configured on the device. If you have
    access to the account credentials, then follow these steps to unlock the device:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数最新的安卓手机都配备了一项名为 Android 设备管理器的服务，该服务帮助设备拥有者定位丢失的手机。此服务还可以用来解锁设备；然而，只有在你知道配置在设备上的
    Google 账户凭据时，才能实现此功能。如果你可以访问账户凭据，请按照以下步骤解锁设备：
- en: Visit [http://google.com/android/devicemanager](http://google.com/android/devicemanager)
    on your workstation.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在工作站上访问 [http://google.com/android/devicemanager](http://google.com/android/devicemanager)。
- en: Sign in using the Google account that is configured on the device.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用配置在设备上的 Google 账户登录。
- en: 'Select the device you need to unlock and click on Lock, as shown in the following
    screenshot:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择需要解锁的设备并点击“锁定”，如下图所示：
- en: '![](img/96e9d1fa-43c6-4269-8d04-a531816e05b6.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/96e9d1fa-43c6-4269-8d04-a531816e05b6.png)'
- en: Android Device Manager
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: Android 设备管理器
- en: Enter a temporary password and click on Lock again.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入临时密码后，再次点击“锁定”。
- en: Once it's successful, enter the temporary password on the device to unlock it.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功后，在设备上输入临时密码以解锁设备。
- en: This can be done without knowing the credentials of the computer that the login
    is saved on (that is, the suspect's PC).
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以在不知道保存登录凭据的计算机（即嫌疑人的电脑）凭证的情况下完成。
- en: Bypass using Find My Mobile (for Samsung phones only)
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用“查找我的手机”绕过（仅限三星手机）
- en: Using Find My Mobile is a technique that's worth attempting if you're handling
    a Samsung device; however, it only works if the device owner is already logged
    into the Samsung account on the device and you know the Samsung credentials that
    are configured on the device.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“查找我的手机”是一个值得尝试的技术，尤其是当你处理三星设备时；但是，它仅在设备所有者已登录三星账户并且你知道设备上配置的三星账户凭据时有效。
- en: 'To start the process, access the Find My Mobile service from the web browser
    and then log in using the Samsung account credentials registered on the device,
    as follows:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始此过程，请从网页浏览器访问“查找我的手机”服务，然后使用在设备上注册的三星账户凭据登录，如下所示：
- en: 'Tap on the Lock My Screen option located on the left side.:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击位于左侧的“锁定我的屏幕”选项：
- en: '![](img/6bf2591e-f260-40e7-8fb0-50ff9711e467.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6bf2591e-f260-40e7-8fb0-50ff9711e467.png)'
- en: Now, enter any temporary PIN and then tap on the Lock button. (You may also
    see the unlock my screen option for some devices, which also serves the same purpose). The
    phone can now be unlocked with the temporary PIN that was set earlier.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，输入任意临时 PIN，然后点击“锁定”按钮。（某些设备上可能会看到“解锁我的屏幕”选项，它也具有相同的功能）。现在，可以使用之前设置的临时 PIN
    解锁手机。
- en: Next, let's take a look at a smudge attack.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看一下污迹攻击。
- en: Smudge attack
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 污迹攻击
- en: In rare cases, a smudge attack may be used to deduce the password of a touchscreen
    mobile device. This attack relies on identifying the smudges left behind by the
    user's fingers. While this may present a bypass method, it must be said that a
    smudge attack is unlikely to work since most Android devices are touchscreen and
    smudges will also be present from using the device; however, it has been demonstrated
    that, under proper lighting, the smudges that are left behind can be easily detected,
    as shown in the following screenshot.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在少数情况下，污迹攻击可能用于推测触摸屏移动设备的密码。这种攻击依赖于识别用户手指留下的污迹。虽然这种方法可能提供绕过方式，但必须指出，由于大多数 Android
    设备是触摸屏的，且使用设备时也会留下污迹，污迹攻击不太可能成功；然而，已经证明，在适当的光线下，留下的污迹是可以轻松检测到的，如以下截图所示。
- en: 'By analyzing the smudge marks, we can discern the pattern that is used to unlock
    the screen. This attack is more likely to work while discerning the pattern lock
    on the Android device. In some cases, PIN codes can also be recovered depending
    upon the cleanliness of the screen. So, during a forensic investigation, care
    should be taken when the device is first handled to make sure that the screen
    is not touched:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 通过分析污迹痕迹，我们可以辨识出用于解锁屏幕的图案。这种攻击在识别 Android 设备上的图案锁时更可能有效。在某些情况下，也可以通过屏幕的清洁程度来恢复
    PIN 码。因此，在进行取证调查时，应小心首次处理设备时，确保屏幕未被触碰：
- en: '![](img/53acfd74-b095-4bf7-a99d-10bac648fb6b.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/53acfd74-b095-4bf7-a99d-10bac648fb6b.png)'
- en: Smudges visible on a device under proper lighting
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在适当光线下设备上可见的污迹
- en: We will now be looking at the next method, which is the forgot password option.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将讨论下一个方法，即忘记密码选项。
- en: Using the forgot password/forgot pattern option
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用忘记密码/忘记图案选项
- en: 'If you know the username and password of the primary Gmail address that is
    configured on the device, you can change the PIN, password, or swipe on the device.
    After making a certain number of failed attempts to unlock the screen, Android
    provides an option called Forgot pattern? or Forgot password?, as shown in the
    following screenshot:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你知道设备上配置的主 Gmail 地址的用户名和密码，你可以更改 PIN、密码或解锁设备。在进行一定次数的解锁失败后，Android 会提供一个选项，叫做“忘记图案？”或“忘记密码？”，如下图所示：
- en: '![](img/43b264a2-7044-445f-9ae5-40705fd65345.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/43b264a2-7044-445f-9ae5-40705fd65345.png)'
- en: Forgot pattern option on an Android device
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: Android 设备上的忘记图案选项
- en: Tap on that link and sign in using the Gmail username and password. This will
    allow you to create a new pattern lock or passcode for the device.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 点击该链接并使用 Gmail 用户名和密码登录。这将允许你为设备创建新的图案锁或密码。
- en: Note that this works only on devices running Android 4.4 or earlier.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这只适用于运行 Android 4.4 或更早版本的设备。
- en: Bypassing third-party lock screens by booting into safe mode
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过启动安全模式绕过第三方锁屏
- en: 'If the screen lock is a third-party app, rather than the in-built lock, it
    can be bypassed by booting into safe mode and disabling it. To boot into safe
    mode on an Android device 4.1 or later, press and hold the *Power* button until
    the Power options menu appears. Then, press and hold the *Power* button and you''ll
    be prompted to reboot your Android device into safe mode. Tap the OK button, as
    shown in the following screenshot:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 如果屏幕锁是第三方应用程序，而不是内置锁屏，可以通过进入安全模式并禁用它来绕过。要在 Android 4.1 或更高版本的设备上进入安全模式，按住 *电源*
    按钮，直到出现电源选项菜单。然后，再按住 *电源* 按钮，你将被提示重新启动 Android 设备进入安全模式。点击 OK 按钮，如下图所示：
- en: '![](img/45d280e4-f582-47e0-bd32-d10c8af469f6.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45d280e4-f582-47e0-bd32-d10c8af469f6.png)'
- en: Safe mode in Android
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: Android 中的安全模式
- en: Once you're in safe mode, you can disable the third-party lock screen app or
    uninstall it completely. After this, reboot the device and you should be able
    to access it without any lock screen.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入安全模式，你可以禁用第三方锁屏应用，或者将其完全卸载。之后，重启设备，你应该能在没有任何锁屏的情况下访问设备。
- en: Secure USB debugging bypass using ADB keys
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ADB 密钥绕过安全 USB 调试
- en: As mentioned earlier, while using USB debugging, if the Always allow from this
    computer option is checked, the device will not prompt for authorization in the
    future. This is done by storing certain keys, namely `adbkey` and `adbkey.pub`,
    on the computer. Any attempt to connect to `adb` from an untrusted computer is
    denied. In this case, the `adbkey` and the `adbkey.pub` files can be pulled from
    the suspect's computer and copied to the investigator's workstation. The device
    will then assume that it is communicating with a known, authorized computer. The
    `adbkey` and `adbkey.pub` files can be found at `C:Users<username>.android` on
    Windows machines.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，在使用 USB 调试时，如果选中了“始终允许来自此计算机的连接”选项，设备将不会在未来提示授权。这是通过将某些密钥，即 `adbkey` 和
    `adbkey.pub`，存储在计算机上实现的。任何来自不信任计算机的 `adb` 连接尝试都会被拒绝。在这种情况下，可以从嫌疑人的计算机中提取 `adbkey`
    和 `adbkey.pub` 文件，并将其复制到调查员的工作站。设备将认为它正在与已知的、授权的计算机通信。`adbkey` 和 `adbkey.pub`
    文件可以在 Windows 计算机的 `C:Users<username>.android` 目录下找到。
- en: Secure USB debugging bypass in Android 4.4.2
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Android 4.4.2 中绕过安全 USB 调试
- en: 'As explained in earlier sections, the secure USB debugging feature introduced
    in Android 4.4.2 allows only authorized workstations to connect to the device;
    however, there''s a bug in this feature, as reported at [https://labs.mwrinfosecurity.com/](https://labs.mwrinfosecurity.com/),
    which allows a user to bypass the Secure USB debugging feature and connect the
    device to any workstation. Here are the steps to follow to bypass Secure USB debugging
    on an Android device:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如前文所述，Android 4.4.2 中引入的安全 USB 调试功能仅允许授权的工作站连接到设备；然而，正如 [https://labs.mwrinfosecurity.com/](https://labs.mwrinfosecurity.com/)
    所报道的，这一功能存在一个漏洞，允许用户绕过安全 USB 调试功能，并将设备连接到任何工作站。以下是绕过 Android 设备上安全 USB 调试功能的步骤：
- en: On an unlocked device, attempt to use `adb`. An error message will be shown
    by the device.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在解锁的设备上，尝试使用 `adb`。设备将显示错误信息。
- en: 'Now, navigate to either the emergency dialer or the lock-screen camera and
    execute the following commands:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，导航到紧急拨号器或锁屏相机，并执行以下命令：
- en: '[PRE13]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The confirmation dialog will be triggered and the workstation can now be authorized
    without unlocking the device. The confirmation dialog box will be displayed on
    the emergency dialer, as shown in the following screenshot:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认对话框将被触发，工作站现在可以在不解锁设备的情况下授权。确认对话框将显示在紧急拨号器上，如下图所示：
- en: '![](img/c1ae9227-03b0-4a25-b965-ae68de0b7608.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1ae9227-03b0-4a25-b965-ae68de0b7608.png)'
- en: Secure USB debugging in Android 4.2.2
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Android 4.2.2 中的安全 USB 调试
- en: 'Once connected to the device through `adb`, try to bypass the lock screen using
    the following command:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦通过 `adb` 连接到设备，尝试使用以下命令绕过锁屏：
- en: '[PRE14]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Next, let's see how to bypass the screen lock by crashing the lock screen.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看一下如何通过崩溃锁屏界面来绕过屏幕锁定。
- en: Crashing the lock screen UI in Android 5.x
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Android 5.x 中崩溃锁屏 UI
- en: 'On devices running Android 5.0 to 5.1.1, the password lock screen (not the
    PIN or pattern locks) can be bypassed by crashing the screen UI. This can be accomplished
    by performing the following steps, as explained at [https://android.gadgethacks.com/](https://android.gadgethacks.com/):'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行 Android 5.0 至 5.1.1 的设备上，密码锁屏（而非 PIN 或图案锁）可以通过崩溃屏幕 UI 来绕过。通过执行以下步骤可以实现这一点，如
    [https://android.gadgethacks.com/](https://android.gadgethacks.com/) 中所解释：
- en: Click on the Emergency Call option on the lock screen and then enter any random
    input (for example, 10 asterisks) on the dialer screen.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在锁屏界面点击紧急呼叫选项，然后在拨号屏幕上输入任何随机内容（例如，10 个星号）。
- en: 'Double-tap the field to highlight the entered text, as shown in the following
    screenshot, and select Copy. Now, paste it into the same field:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击该字段以高亮显示已输入的文本，如下图所示，并选择复制。现在，将其粘贴回同一字段：
- en: '![](img/efbd2799-8164-4768-8b11-fc83fec2cc35.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/efbd2799-8164-4768-8b11-fc83fec2cc35.png)'
- en: Crashing lock screen UI
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 崩溃的锁屏界面
- en: Repeat this process to add more characters. Do this until the field no longer
    highlights the characters on double-tapping.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复此过程以添加更多字符。直到双击该字段时，字段不再高亮显示字符为止。
- en: Go back to the lock screen and open the camera shortcut. Now, pull down the
    notifications screen and tap the Settings icon. You will then be prompted to enter
    a password.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回锁屏界面并打开相机快捷方式。然后，下拉通知屏幕并点击设置图标。接下来，系统会提示你输入密码。
- en: Press and hold the input field and select Paste, repeat this process multiple
    times. Once enough characters are pasted into the field, the lock screen will
    crash, allowing you to access the device.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住输入框并选择粘贴，重复此过程多次。一旦足够的字符被粘贴到输入框中，锁屏界面将崩溃，从而让你能够访问设备。
- en: Now, let's look at some more techniques.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看一些其他技巧。
- en: Other techniques
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他技巧
- en: All of the aforementioned techniques and available commercial tools are useful
    to any forensic examiner, like you, trying to get access to the data on an Android
    device; however, there could be situations where none of these techniques work.
    To obtain a complete physical image of the device, techniques such as chip-off
    and JTAG may be required when commercial and open source solutions fail. A short
    description of these techniques is included here.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 上述所有技巧和现有的商业工具对于任何想要访问 Android 设备数据的取证检查员（像你一样）都非常有用；然而，也有可能出现这些技巧都无法奏效的情况。为了获取设备的完整物理镜像，当商业和开源解决方案失败时，可能需要使用芯片脱落（chip-off）和
    JTAG 等技术。这里简要介绍了这些技术。
- en: While the chip-off technique removes the memory chip from a circuit and tries
    to read it, the JTAG technique involves probing the JTAG **test access ports**
    (**TAPs**) and soldering connectors to the JTAG ports in order to read data from
    the device memory. The chip-off technique is more destructive because, once the
    chip is removed from a device, it is difficult to restore the device to its original
    functional state. Also, expertise is needed to carefully remove the chip from
    the device by desoldering the chip from the circuit board. The heat required to
    remove the chip can also damage or destroy the data stored on that chip, which
    means that this technique should be used only when the data is not retrievable
    by open source or commercial tools or the device is damaged beyond repair. When
    using the JTAG technique, JTAG ports help you to access the memory chip to retrieve
    a physical image of the data without needing to remove the chip. To turn off screen
    lock on a device, you can identify where the lock code is stored in the physical
    memory dump, turn off the locking, and copy that data back to the device. Commercial
    tools, such as Cellebrite Physical Analyzer, can accept `.bin` files from chip-off
    and JTAG acquisitions and crack the lock code for you. Once the code is either
    manually removed or cracked, you can analyze the device using normal techniques.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 芯片脱落技术将内存芯片从电路中拆除并尝试读取，而 JTAG 技术则通过探测 JTAG **测试访问端口**（**TAPs**）并将连接器焊接到 JTAG
    端口上，从而读取设备内存中的数据。芯片脱落技术更具破坏性，因为一旦芯片从设备中拆除，恢复设备的原始功能状态就变得非常困难。此外，需要专业技术人员通过去焊芯片从电路板上小心移除芯片。拆除芯片所需的高温也可能损坏或摧毁芯片上存储的数据，这意味着当数据无法通过开源或商业工具恢复，或设备已损坏到无法修复的程度时，才应使用此技术。使用
    JTAG 技术时，JTAG 端口帮助你访问内存芯片，从而无需拆除芯片即可提取设备数据的物理镜像。要关闭设备的屏幕锁定，你可以识别出锁定代码在物理内存转储中的存储位置，关闭锁定，并将该数据复制回设备。商业工具，如
    Cellebrite Physical Analyzer，可以接受来自芯片脱落和 JTAG 获取的`.bin`文件，并为你破解锁定代码。一旦代码被手动移除或破解，你就可以使用常规技术分析设备。
- en: Both the chip-off and JTAG techniques require extensive research and experience
    to be attempted on a real device. A great resource for JTAG and chip-off on devices
    can be found at [https://forensicswiki.xyz/page/Main_Page](https://forensicswiki.xyz/page/Main_Page).
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 芯片脱落和 JTAG 技术都需要大量的研究和经验，才能在真实设备上尝试。关于设备的 JTAG 和芯片脱落的宝贵资源可以在[https://forensicswiki.xyz/page/Main_Page](https://forensicswiki.xyz/page/Main_Page)找到。
- en: In this section, we looked into various ways to bypass a screen lock on Android
    device. We will now learn what Android rooting is all about.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了绕过 Android 设备屏幕锁的各种方式。现在我们将了解 Android root 权限到底是什么。
- en: Gaining root access
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取 root 访问权限
- en: As a mobile device forensic examiner, it is essential for you to know everything
    that relates to twisting and tweaking the device. This will help you to understand
    the internal workings of the device in detail and understand many issues that
    you may face during your investigation. Rooting Android phones has become a common
    phenomenon, and you can expect to encounter rooted phones during forensic examinations.
    Where applicable, you may also need to root the device in order to acquire data
    for forensic examination. This means that it's important to know the ins and outs
    of rooted devices and how they are different from other phones. The following
    sections cover information about Android rooting and other related concepts.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名移动设备取证检查员，了解所有与设备调整和修改相关的内容至关重要。这将帮助你更详细地理解设备的内部工作原理，并了解你在调查过程中可能遇到的许多问题。Root
    Android 手机已经成为一种普遍现象，你可能会在取证检查中遇到 root 手机。在适用的情况下，你可能还需要 root 设备以便获取取证数据。这意味着，了解
    root 设备的详细情况及其与其他手机的区别非常重要。以下章节将介绍 Android root 及其他相关概念。
- en: What is rooting?
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 root？
- en: The default administrative account in Unix-like operating systems is called
    **root**. In Linux, the root user has the power to start/stop any system service,
    edit/delete any file, change the privileges of other users, and so on. We have
    already learned that Android uses the Linux kernel, and so most Linux concepts are
    applicable to Android as well; however, most Android phones do not let you log
    in as a root user by default.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 类 Unix 操作系统中的默认管理员账户叫做 **root**。在 Linux 中，root 用户有权启动/停止任何系统服务，编辑/删除任何文件，改变其他用户的权限等等。我们已经了解到
    Android 使用的是 Linux 内核，因此大多数 Linux 的概念同样适用于 Android；然而，大多数 Android 手机默认不允许你以 root
    用户身份登录。
- en: Rooting an Android phone is all about gaining access to the device to perform
    actions that are not normally allowed on the device. Manufacturers want devices
    to function in a certain manner for normal users. Rooting a device may void a
    warranty, since using root opens the system to vulnerabilities and provides the
    user with superuser capabilities.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 Android 手机的 root 权限就是为了访问设备，执行设备上通常不允许的操作。制造商希望设备按一定方式工作，以供普通用户使用。Root 设备可能会使保修失效，因为使用
    root 会使系统暴露于漏洞之中，并赋予用户超级用户权限。
- en: Imagine a malicious application gaining access to an entire Android system with
    root access. Remember that, in Android, each application is treated as a separate
    user and is issued a UID. This means that applications have access to limited
    resources and the concept of application isolation is enforced. Essentially, rooting
    an Android device allows superuser capabilities and provides open access to the
    Android device.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一个恶意应用程序获得了 Android 系统的 root 访问权限。请记住，在 Android 中，每个应用程序都被视为一个独立的用户，并且会被分配一个
    UID。这意味着应用程序只能访问有限的资源，并且强制执行应用程序隔离的概念。实际上，root Android 设备使得超级用户权限成为可能，并提供对 Android
    设备的开放访问。
- en: Superuser capabilities are similar to the admin capability on a Windows machine,
    and give privileged access to perform actions that may not be done by a normal
    user. In mobiles, this superuser access is disabled by design, but rooting a phone
    allows you to gain this privilege.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 超级用户权限类似于 Windows 计算机上的管理员权限，能够执行普通用户无法完成的操作。在移动设备中，这种超级用户访问权限是设计上禁用的，但 root
    手机则可以让你获得这一特权。
- en: Understanding the rooting process
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 root 过程
- en: Even though hardware manufacturers try to impose enough restrictions to restrict
    access to the root, hackers have always found different ways to get access to
    the root. The process of rooting varies depending on the underlying device manufacturer;
    however, rooting any device usually involves exploiting a security bug in the
    device's firmware, then copying the `su` (superuser) binary to a location in the
    current process's path (`/system/xbin/su`), and granting it executable permissions
    with the `chmod` command.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管硬件制造商尽力通过足够的限制来阻止访问 root，黑客们总是能找到不同的方式来获取 root 权限。Root 过程因底层设备制造商而异；然而，root
    任何设备通常涉及利用设备固件中的安全漏洞，然后将`su`（超级用户）二进制文件复制到当前进程路径中的一个位置（`/system/xbin/su`），并使用`chmod`命令授予其可执行权限。
- en: For the sake of simplicity, imagine that an Android device has three to four
    partitions, which run programs not entirely related to Android (Android being
    one among them).
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简单起见，可以想象一台安卓设备有三到四个分区，这些分区运行的程序并不完全与安卓相关（安卓只是其中之一）。
- en: The boot loader is present in the first partition and is the first program that
    runs when the phone is powered on. The primary job of this boot loader is to boot
    other partitions and load the Android partition, commonly referred to as ROM by
    default. To see the boot loader menu, a specific key combination is required,
    such as holding the power button and pressing the volume up button. This menu
    provides options for you to boot into other partitions, such as the recovery partition.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 引导加载程序位于第一个分区，是手机开机时首先运行的程序。这个引导加载程序的主要任务是启动其他分区并加载安卓分区，通常被称为ROM。要查看引导加载程序菜单，需要按特定的组合键，比如同时按住电源键并按音量加键。这个菜单提供了进入其他分区的选项，比如恢复分区。
- en: 'The recovery partition deals with installing upgrades to the phone, which are
    written directly to the Android ROM partition. This is the mode that you see when
    you install any official update on the device. Device manufacturers make sure
    that only official updates are installed through the recovery partition. This
    means that bypassing this restriction would allow you to install/flash any unlocked
    Android ROM. Modified recovery programs are those that not only allow an easier
    rooting process, but also provide various options that are not seen in the normal
    recovery mode. The following screenshot shows the normal recovery mode:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复分区负责安装手机的升级，这些升级会直接写入安卓ROM分区。这是你在设备上安装任何官方更新时所看到的模式。设备制造商会确保只有官方更新可以通过恢复分区安装。这意味着，绕过这一限制可以让你安装/刷入任何解锁的安卓ROM。修改版恢复程序不仅允许更简便的root过程，还提供了在正常恢复模式下看不到的各种选项。以下截图展示了正常恢复模式：
- en: '![](img/276340e8-f14d-469a-969a-61d74a747da6.png)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![](img/276340e8-f14d-469a-969a-61d74a747da6.png)'
- en: Normal Android system recovery mode
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 正常的安卓系统恢复模式
- en: 'The following screenshot shows the modified recovery mode:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了修改版恢复模式：
- en: '![](img/b2aad127-aa2e-48cd-94df-bc7dab921af8.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2aad127-aa2e-48cd-94df-bc7dab921af8.png)'
- en: The modified recovery mode
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 修改版恢复模式
- en: The most commonly used recovery program in the Android world is Clockwork recovery,
    also called **ClockworkMod**. Most rooting methods begin by flashing a modified
    recovery to the recovery partition. After that, you can issue an update, which
    can root the device; however, you don't need to perform all the actions manually,
    as software is available for most models that can root your phone with a single
    click.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在安卓世界中，最常用的恢复程序是Clockwork恢复，也叫**ClockworkMod**。大多数root方法都是通过刷入修改版恢复到恢复分区开始的。之后，你可以发布更新，这个更新可以让设备获取root权限；然而，你不需要手动执行所有操作，因为市面上已有大多数型号的手机都可以通过软件一键root。
- en: Starting from Android 7.x, Google started strictly enforcing **verified boot**
    on devices. Verified boot guarantees that the software on the device is not modified
    before booting into the normal mode. This is implemented in such a way that each
    stage verifies the integrity and authenticity of the next stage before executing
    it. If a particular partition or segment is modified, the integrity check fails
    and the mobile may not boot into normal mode. More information about verified
    boot can be found at [https://source.android.com/security/verifiedboot/verified-boot](https://source.android.com/security/verifiedboot/verified-boot).
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 从安卓7.x开始，谷歌开始严格执行**验证启动**。验证启动确保设备上的软件在启动到正常模式之前没有被修改。这一机制通过每个阶段验证下一个阶段的完整性和真实性后再执行。如果某个分区或段落被修改，完整性检查将失败，手机可能无法正常启动。有关验证启动的更多信息，可以参考[https://source.android.com/security/verifiedboot/verified-boot](https://source.android.com/security/verifiedboot/verified-boot)。
- en: This also means that rooting such Android devices is going to be extremely difficult
    because rooting involves tweaking the Android OS. Marshmallow was the first Android
    version to provide alerts on system integrity, but since Android 7.x, this has
    been made mandatory.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 这也意味着，root这类安卓设备将变得极为困难，因为root涉及到对安卓操作系统的修改。Marshmallow是第一个提供系统完整性警告的安卓版本，但自安卓7.x版本起，这一功能已经成为强制性要求。
- en: Rooting an Android device
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对安卓设备进行root
- en: We will now look at the different methods available to root an Android device.
    The primary factor that influences your choice of method is whether the underlying
    boot loader is locked or unlocked. Gaining root access on a device with an unlocked
    boot loader is very easy, while gaining root access to a device with a locked
    boot loader is not so straightforward, which means that unlocking your Android
    phone’s bootloader is often the first step to rooting and flashing custom ROMs.
    This can be done either through fastboot mode (discussed in earlier sections)
    or by following a vendor-specific boot loader unlock procedure. Once the device
    bootloader is unlocked, the next step is to copy the `su` binary and grant it
    executable permissions. This can be done in many ways.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一下获取 Android 设备 root 权限的不同方法。影响你选择方法的主要因素是底层的引导加载程序是锁定还是解锁。对于解锁的引导加载程序，获取
    root 权限非常容易，而对于锁定的引导加载程序，获取 root 权限则不那么简单，这意味着解锁 Android 手机的引导加载程序通常是获取 root 权限和刷入自定义
    ROM 的第一步。可以通过 fastboot 模式（在前面章节中有讨论）或遵循特定厂商的引导加载程序解锁程序来完成。一旦设备的引导加载程序被解锁，下一步就是复制
    `su` 二进制文件并授予执行权限。可以通过多种方式完成此操作。
- en: 'The following is how to root a Samsung Galaxy S7 (International SM-G930F/FD/X,
    Korean SM-G930K/L/S, and Canadian SM-G930W8 Exynos models):'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何获取三星 Galaxy S7（国际版 SM-G930F/FD/X、韩国版 SM-G930K/L/S 和加拿大版 SM-G930W8 Exynos
    型号）的 root 权限：
- en: Make sure OEM unlock is enabled in the Developer options.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在开发者选项中启用了 OEM 解锁。
- en: Download ODIN (available at [https://build.nethunter.com/samsung-tools/Odin_3.12.3.zip](https://build.nethunter.com/samsung-tools/Odin_3.12.3.zip))
    and extract the contents of the archive to the directory of your choice.
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 ODIN（可通过 [https://build.nethunter.com/samsung-tools/Odin_3.12.3.zip](https://build.nethunter.com/samsung-tools/Odin_3.12.3.zip)
    获取），并将压缩包内容提取到你选择的目录中。
- en: Download the TWRP image (available at [https://twrp.me/samsung/samsunggalaxys7.html](https://twrp.me/samsung/samsunggalaxys7.html)).
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 TWRP 镜像（可通过 [https://twrp.me/samsung/samsunggalaxys7.html](https://twrp.me/samsung/samsunggalaxys7.html)
    获取）。
- en: Reboot your device into download mode. To do this, hold the Volume down + Home
    buttons while your device reboots. Once you see the download mode warning screen,
    press Volume up to continue.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启设备进入下载模式。为此，在设备重启时按住音量下 + Home 按钮。当你看到下载模式警告屏幕时，按音量上继续。
- en: Start Odin and put the TWRP image in the AP slot; don't forget to disable Auto-Reboot.
    Start flashing the recovery.
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启动 Odin 并将 TWRP 镜像放入 AP 插槽；不要忘记禁用自动重启。开始刷入恢复模式。
- en: To exit download mode, hold Volume down + Home + Power; when the screen blanks,
    immediately change Volume down to Volume up.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要退出下载模式，请按住音量下 + Home + 电源；当屏幕变黑时，立即将音量下改为音量上。
- en: Allow system modifications by swiping right.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过右滑允许系统修改。
- en: Download SuperSU (available at [https://download.chainfire.eu/supersu](https://download.chainfire.eu/supersu)).
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 SuperSU（可通过 [https://download.chainfire.eu/supersu](https://download.chainfire.eu/supersu)
    获取）。
- en: Transfer the archive with SuperSU to the device via MTP and install it via the
    corresponding TWRP option.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 MTP 将包含 SuperSU 的压缩包传输到设备，并通过相应的 TWRP 选项进行安装。
- en: 'Rooting is a highly device-specific process and hence the forensic investigator
    needs to be cautious before applying these techniques on any Android device. Rooting
    a device has both advantages and disadvantages associated with it. The following
    are the advantages of rooting:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: Root（获取 root 权限）是一个高度依赖设备的过程，因此取证调查员在将这些技术应用到任何 Android 设备之前需要小心。Root 设备有其优点和缺点。以下是获取
    root 权限的优点：
- en: Rooting allows modification of the software on the device to the deepest level—for
    example, you can overclock or underclock the device's CPU.
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Root 允许对设备上的软件进行最深层次的修改——例如，你可以超频或降频设备的 CPU。
- en: It allows restrictions imposed on the device by carriers, manufacturers, and
    so on, to be bypassed.
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许绕过运营商、制造商等对设备的限制。
- en: For extreme customization, new customized ROMs can be downloaded and installed.
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于极端自定义，可以下载并安装新的自定义 ROM。
- en: 'The following are the disadvantages of rooting:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是获取 root 权限的缺点：
- en: Rooting a device must be done with extreme care as errors may result in irreparable
    damage to the software on the phone, turning the device into a useless brick.
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取 root 权限必须小心谨慎，因为错误可能导致手机软件无法修复的损坏，将设备变成一个毫无用处的“砖头”。
- en: Rooting might void the warranty of a device.
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Root 可能会使设备的保修失效。
- en: Rooting results in increased exposure to malware and other attacks. Malware
    with access to the entire Android system can create havoc.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Root 操作会导致设备暴露于恶意软件和其他攻击中。能够访问整个 Android 系统的恶意软件可能会造成严重破坏。
- en: 'Once the device is rooted, applications such as the **Superuser app** are available
    to provide and deny root privileges. This app helps you to grant and manage superuser
    rights on the device, as shown in the following screenshot:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设备被 root，像 **Superuser 应用程序** 这样的应用程序就可以提供或拒绝 root 权限。这个应用程序帮助你在设备上授予和管理超级用户权限，如下图所示：
- en: '![](img/d7232d9e-6d6f-415a-b11f-fad93ceda817.png)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d7232d9e-6d6f-415a-b11f-fad93ceda817.png)'
- en: Application requesting root access
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 请求 root 权限的应用程序
- en: We will now look at root access.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看 root 访问。
- en: Root access - ADB shell
  id: totrans-302
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Root 访问 - ADB shell
- en: 'A normal Android phone does not allow you to access certain directories and
    files on the device. For example, try to access the `/data/data` folder on an
    Android device that is not rooted. You will see the following message:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 普通的 Android 手机不允许你访问设备上的某些目录和文件。例如，尝试访问一个未 root 的 Android 设备上的 `/data/data`
    文件夹，你将看到如下信息：
- en: '![](img/a8a87e66-a5db-4249-b65a-61d8702c50f8.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8a87e66-a5db-4249-b65a-61d8702c50f8.png)'
- en: Permission denial without root access
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 没有 root 权限时的权限拒绝
- en: 'On a rooted phone, you can run the `adb` shell as root by issuing the following
    command:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在已 root 的手机上，你可以通过执行以下命令以 root 身份运行 `adb` shell：
- en: '[PRE15]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The following screenshot shows the output of the preceding command:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了前面命令的输出：
- en: '![](img/0139ceda-331a-4745-bbb0-b8658299a245.png)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0139ceda-331a-4745-bbb0-b8658299a245.png)'
- en: Successful execution of shell command on a rooted device
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在已 root 设备上成功执行的 shell 命令
- en: Thus, rooting a phone enables you to access folders and data that are otherwise
    not accessible. Also note that `#` symbolizes root or superuser access, while
    `$` reflects a normal user, as shown in the preceding command lines.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，root 手机可以让你访问本来无法访问的文件夹和数据。还要注意，`#` 表示 root 或超级用户权限，而 `$` 则表示普通用户，如前面的命令行所示。
- en: Android 7.0 (Nougat) and later versions support **file-based encryption** (**FBE**),
    which allows the encryption of different files with different keys. For a forensic
    investigator like you, it is important to note that it is not possible to apply
    a permanent root to an FBE-enabled device for acquisition purposes. Instead, it
    is recommended that you use a custom recovery methodology, because the recovery
    partition runs with root privileges.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: Android 7.0（Nougat）及更高版本支持 **基于文件的加密**（**FBE**），允许使用不同的密钥加密不同的文件。对于像你这样的取证调查员来说，重要的是要注意，对于启用了
    FBE 的设备，无法应用永久的 root 权限来进行采集。因此，建议使用自定义恢复方法，因为恢复分区是以 root 权限运行的。
- en: Summary
  id: totrans-313
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to set up a proper forensic workstation before
    conducting investigations on an Android device. Start with a sterile forensic
    workstation that has the necessary basic software and device drivers installed
    on it. If the method of forensic acquisition requires the Android device to be
    unlocked, you need to determine the best method by which to gain access to the
    device. If the device has the USB debugging feature enabled, then bypassing the
    screen-lock is just a cakewalk. We learned about the various screen lock bypass
    techniques and helped you to determine which one to use under different circumstances.
    Depending on the forensic acquisition method and the scope of the investigation,
    rooting the device should provide complete access to the files present on the
    device. We also learned about rooting and how it can be used to gain complete
    access to the device's filesystem and perform actions that are not normally allowed.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在对 Android 设备进行调查之前，设置一个合适的取证工作站。首先，从一个已安装了必要基本软件和设备驱动程序的无菌取证工作站开始。如果取证采集方法要求解锁
    Android 设备，则需要确定最佳的方法来访问设备。如果设备启用了 USB 调试功能，那么绕过屏幕锁定就非常简单。我们学习了各种屏幕锁定绕过技巧，并帮助你根据不同情况确定使用哪种方法。根据取证采集方法和调查范围，对设备进行
    root 应该能提供对设备文件的完全访问权限。我们还学习了 root 操作，以及它如何用于获取对设备文件系统的完全访问权限并执行通常不允许的操作。
- en: Now that the basic concepts of gaining access to an Android device have been
    covered, we will cover acquisition techniques and describe how data is pulled
    using each method in [*Chapter 9*](bf232566-3a17-4914-992b-80674dd379de.xhtml),
    *Android Data Extraction Techniques*.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经覆盖了访问 Android 设备的基本概念，接下来将介绍采集技术，并描述如何使用每种方法在 [*第9章*](bf232566-3a17-4914-992b-80674dd379de.xhtml)
    中提取数据，*Android 数据提取技术*。
