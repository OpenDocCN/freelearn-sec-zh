- en: '*Chapter 3*: Reconnaissance and Information Gathering'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 3 章*：侦察与信息收集'
- en: In this chapter, we will learn about the basics of networking. Without having
    a solid understanding of computer networks, you will not be able to go very far
    in the field of penetration testing and ethical hacking. We will cover some basic
    details about how networking works. We will also take a look at the different
    abstraction layers in networking and the role of each layer.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习网络的基础知识。如果没有对计算机网络的深入理解，你将无法在渗透测试和伦理黑客领域走得更远。我们将覆盖一些关于网络如何工作的基本细节。我们还将看看网络中的不同抽象层及每一层的作用。
- en: 'Every ethical hacking process starts with gathering relevant information about
    the target, and this chapter is dedicated to what type of information we can obtain
    and how this information can be useful to us. We will discuss the standard OSI
    model that''s used to describe the network layers and how this model can be helpful
    for us. In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每一个伦理黑客过程都从收集目标的相关信息开始，本章将专门讲解我们能获取哪些信息以及这些信息对我们有什么帮助。我们将讨论用于描述网络层的标准 OSI 模型以及这个模型如何对我们有帮助。在本章中，我们将覆盖以下主题：
- en: What is a computer network?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是计算机网络？
- en: Classifying networks
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络分类
- en: Network stack
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络堆栈
- en: Network entities
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络实体
- en: Protection
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护
- en: Changing MAC
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改 MAC 地址
- en: What is a computer network?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是计算机网络？
- en: 'In the **Information Technology** (**IT**) domain, **networking** means the
    *ability* of two or more devices to be able to *communicate* and *exchange data*
    with each other. In the early days of computing, computers were unable to talk
    to each other and were standalone systems. Their functionalities were very limited.
    As the technology advanced, the need for communication between devices grew. In
    its simplest form, two computers that connect with each over a *medium* form a
    network. This medium is the *link* through which these devices talk with each
    other. As we proceed, you will see that things become very complicated very quickly
    in computer networks:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在**信息技术**（**IT**）领域，**网络**意味着两台或更多设备能够*相互通信*和*交换数据*的*能力*。在计算机早期，计算机之间无法相互通信，它们是独立的系统，功能非常有限。随着技术的进步，设备之间的通信需求也随之增长。在最简单的形式下，两台计算机通过*介质*连接在一起，形成一个网络。这个介质就是这些设备之间通信的*连接*。随着我们深入，你会看到计算机网络变得非常复杂：
- en: '![Figure 3.1 – The simplest form of a network – two interconnected computers'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.1 – 网络的最简单形式 – 两台互联的计算机'
- en: '](image/B14788_03_01.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_01.jpg)'
- en: Figure 3.1 – The simplest form of a network – two interconnected computers
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – 网络的最简单形式 – 两台互联的计算机
- en: 'As you will see in the following chapters, most modern-day computer networks
    are not built like this. For your computer to talk to other computers, it will
    need as many links as it has computers, and this can quickly become unmanageable.
    We will learn more about how we can avoid this problem by using a middle node
    called router in the *Components of a computer network* section. So, what happens
    when you want a network with 10 devices? For this, we could have cables running
    from every device to every other device and let them talk. The following diagram
    shows four computers talking with each other. As you can imagine, such a system
    would become exponentially unmanageable. This has several drawbacks. For example,
    it adds complexity to the system and wastes a lot of resources as you will need
    to maintain a cable between two computers, even if they *talk* for a very small
    amount of time:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在接下来的章节中看到的那样，大多数现代计算机网络并不是这样构建的。为了让你的计算机能够与其他计算机通信，它需要与每一台计算机建立连接，而这很快就会变得难以管理。我们将在*计算机网络组件*章节中学习更多关于如何通过使用一个叫做路由器的中间节点来避免这个问题。那么，当你想要一个有
    10 台设备的网络时，会发生什么呢？为此，我们可以让每台设备通过电缆与其他每一台设备连接，让它们相互通信。以下图示展示了四台计算机之间的相互通信。正如你能想象的那样，这样的系统会变得指数级难以管理。这有几个缺点。例如，它增加了系统的复杂性，并且浪费了大量资源，因为你需要维持两台计算机之间的电缆，即使它们*仅仅*进行短暂的通信：
- en: '![Figure 3.2 – Network with four nodes'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.2 – 四个节点的网络'
- en: '](image/B14788_03_02.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_02.jpg)'
- en: Figure 3.2 – Network with four nodes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – 四个节点的网络
- en: 'To get rid of this redundancy, we can introduce a central device that will
    be responsible for allowing different devices to talk to each other. There are
    different types of central devices, all of which we will explore in the *Components
    of a basic computer network* section:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了消除这种冗余，我们可以引入一个中央设备，负责允许不同的设备相互通信。中央设备有不同类型，我们将在*基本计算机网络的组成部分*部分中进行探索：
- en: '![Figure 3.3 – Network with a central device'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.3 – 带有中央设备的网络'
- en: '](image/B14788_03_03.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_03.jpg)'
- en: Figure 3.3 – Network with a central device
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 – 带有中央设备的网络
- en: The preceding diagram resembles the network we have in our homes. A central
    device – in our case, the **router** – helps us communicate with other devices.
    This is a very primitive form of a network; networks in real life are much more
    complex than this. Coming back to the idea of what constitutes a network, a **network**
    is simply two devices that communicate and share data with each other through
    a **medium**. Now that we have seen what a network is and started talking about
    what goes into constructing one, let's look at the components in detail.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的示意图类似于我们家中的网络。一个中央设备——在我们的案例中是**路由器**——帮助我们与其他设备进行通信。这是网络的非常原始的形式；现实中的网络要比这复杂得多。回到网络的构成，**网络**仅仅是指两个设备通过**媒介**互相通信并共享数据。现在我们已经了解了什么是网络，并开始讨论构建网络的组成部分，让我们详细看看这些组件。
- en: Components of a basic computer network
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本计算机网络的组成部分
- en: In this section, we will learn about the different components of a computer
    network. In computer network literature, you will often see the term *node* being
    used to represent a computer in a network. In networking domains, a specific nomenclature
    is used to identify particular devices in a network. We will look at these terms
    next.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习计算机网络的不同组件。在计算机网络文献中，您经常会看到用*节点*来表示网络中的计算机。在网络领域，通常使用特定的术语来标识网络中的特定设备。接下来我们将学习这些术语。
- en: Node
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 节点
- en: A node is usually a device that is connected to the *central* device. In a sense,
    it is a computer that takes part in a communication network. This works for simple
    and small networks, but as more and more devices get added to a network, different
    devices start taking up different roles, so we can only simplify a device's role
    in a network as a node up to a certain point. In qualifying scenarios, nodes can
    be your laptop, desktop PC, printer, tablet, phone, or any other network connected
    device.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 节点通常是连接到*中央*设备的设备。从某种意义上说，它是一个参与通信网络的计算机。这适用于简单的小型网络，但随着越来越多的设备加入网络，设备开始承担不同的角色，因此我们只能将设备在网络中的角色简化为节点，直到某个程度。在特定的情况下，节点可以是你的笔记本电脑、台式电脑、打印机、平板、手机或任何其他网络连接设备。
- en: Server
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务器
- en: Servers are computers that hold some information that can be shared over the
    network to devices that need them. Servers are usually *online*, which means that
    they *serve* devices by being continuously available to other devices.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器是存储一些可以通过网络共享给需要的设备的信息的计算机。服务器通常是*在线*的，意味着它们通过持续可用来*服务*设备。
- en: Transmission media
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 传输媒介
- en: The resource/link through which devices in a network are connected to each other
    and can communicate is called *transmission media*. It can be both wired and wireless.
    An example of wired transmission media is an *Ethernet cable*, which is typically
    used in local networks. *Wi-Fi* is an example of wireless transmission media.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 设备通过传输媒介连接并可以互相通信，这个媒介被称为*传输媒介*。它可以是有线的也可以是无线的。有线传输媒介的例子是*以太网电缆*，通常用于局域网。*Wi-Fi*是无线传输媒介的一个例子。
- en: Network interface card
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络接口卡
- en: To participate in a network, the connecting node/device must have something
    called a **Network Interface Card** (**NIC**). The role of NIC is to take what
    you want to transfer and convert it into a form that's accepted by the transmission
    media.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要参与网络，连接的节点/设备必须拥有一个叫做**网络接口卡**（**NIC**）的东西。NIC的作用是将你想要传输的内容转换成传输媒介所能接受的形式。
- en: Hub
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集线器
- en: A hub is a central device in a network. If you want to communicate with a node
    in a network, you probably won't have a direct link to the node. Instead, you
    should have a link through some central device – in this case, a hub. Your message/data
    will go to a hub, which will then broadcast it to the whole network. Depending
    on the content of the message, the respective device will answer.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 集线器是网络中的一个中心设备。如果你想与网络中的一个节点进行通信，你可能无法直接连接到该节点。相反，你应该通过某个中心设备建立连接——在这种情况下，就是集线器。你的信息/数据会发送到集线器，集线器再将其广播到整个网络。根据信息的内容，相应的设备会作出回应。
- en: Switch
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 交换机
- en: A switch is a special type of hub. In contrast to a hub, which broadcasts the
    message to all the nodes, a switch only sends the message to the intended receiver.
    This greatly decreases traffic on the network since the devices that are not intended
    shouldn't receive the message.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 交换机是集线器的一种特殊类型。与集线器将信息广播到所有节点不同，交换机只将信息发送给目标接收者。这大大减少了网络上的流量，因为那些不相关的设备不应该接收该信息。
- en: Router
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 路由器
- en: So far, we have been talking about a single network. What if a computer wants
    to talk with a computer that is not present in your network? What if this computer
    is in France and the intended receiver computer is in a network in the United
    States? We can extend the concept of interconnection of computers to interconnection
    of networks. Routers are devices that help us communicate with external networks.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们讨论的是单一网络。如果一台计算机想与不在你网络中的另一台计算机通信怎么办？如果这台计算机位于法国，而目标接收计算机位于美国的网络中怎么办？我们可以将计算机互联的概念扩展到网络互联。路由器是帮助我们与外部网络通信的设备。
- en: Gateway
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网关
- en: A gateway is the endpoint router in a network. All the traffic coming in or
    going out of a network goes through it. It acts as a mediator between the internet
    and local devices. To the devices outside our own network, the gateway is the
    main communication point for any device in the local network.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 网关是网络中的终端路由器。所有进出网络的流量都经过它。它充当互联网和本地设备之间的中介。对于我们网络外的设备来说，网关是本地网络中任何设备的主要通信点。
- en: Firewall
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 防火墙
- en: 'A firewall is an optional device in some networks. Firewalls can be software-based,
    such as your operating system''s firewall, or they can be a hardware-based device
    for the whole network. The role of a firewall is to enhance the security of the
    system and to monitor the network traffic. This ensures that no unauthorized access
    is made to a network. Firewalls typically block all incoming connection requests
    to your local network, except those that have been authorized and mentioned in
    the rule engine of the firewall:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙是某些网络中的可选设备。防火墙可以是基于软件的，例如操作系统的防火墙，或者是针对整个网络的硬件设备。防火墙的作用是增强系统的安全性并监控网络流量。这确保了没有未经授权的访问进入网络。防火墙通常会阻止所有进入本地网络的连接请求，除非这些请求已在防火墙的规则引擎中授权并列明：
- en: '![Figure 3.4 – Components in a network'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.4 – 网络中的组件'
- en: '](image/B14788_03_04.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_04.jpg)'
- en: Figure 3.4 – Components in a network
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – 网络中的组件
- en: As the name implies, it serves as an entry point, as well as an exit point,
    to a local network. For practical reasons and for small networks, the small components
    of a network such as a router, switch, gateway, and sometimes even a firewall
    are merged into a single physical device.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，它作为本地网络的入口和出口。出于实际考虑以及小型网络的需求，网络中的小型组件（如路由器、交换机、网关，有时甚至是防火墙）常常被合并为一个物理设备。
- en: In this section, we learned about the different components of a network and
    what the role of each component is. Next, we will talk about how these different
    networks are classified.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了网络中不同组件的作用及其功能。接下来，我们将讨论这些不同网络是如何分类的。
- en: Classifying network
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络分类
- en: As more and more computers start connecting, it becomes essential to classify
    them into different classes so that we can use them. There are various methods
    we can use for classification; however, the most common one is network classification
    based on geography. We will discuss this next.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 随着越来越多的计算机开始连接，分类它们变得至关重要，以便我们能够使用它们。有多种分类方法；然而，最常见的方法是基于地理位置的网络分类。我们接下来将讨论这一点。
- en: Local area network
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 局域网
- en: When you connect your laptop or phone to a Wi-Fi router located in your home,
    you are essentially participating in a **local area network** (**LAN**). There
    are multiple types of connections you can make to a LAN, such as by using Wi-Fi,
    which is a wireless connection, or by using a wired connection such as an ethernet
    cable. There is no hard definition of what constitutes a LAN. However, a LAN is
    usually composed of devices that are in the same proximity in a building. LAN
    can be as simple as two devices connecting to a router or as complicated as LANs
    in universities and offices.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将笔记本电脑或手机连接到家中的Wi-Fi路由器时，实际上你是在参与一个**局域网**（**LAN**）。你可以通过多种方式连接到局域网，例如使用Wi-Fi（无线连接）或使用有线连接，如以太网电缆。局域网没有严格的定义，但通常由位于同一建筑物内的设备组成。局域网可以简单到只有两个设备连接到路由器，也可以复杂到大学和办公室的局域网。
- en: Ethernet
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 以太网
- en: Ethernet is one of the most used technologies in LAN. Modern ethernet protocols
    offer very high speeds in a LAN. It is highly reliable and secure compared to
    wireless mediums. The ethernet protocol defines how the data will be transferred
    over LAN. Modern-day ethernet can provide speeds in the order of Gigabits per
    second.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以太网是局域网中最常用的技术之一。现代的以太网协议提供了非常高的局域网速度。与无线媒介相比，它在可靠性和安全性方面更为出色。以太网协议定义了数据在局域网上如何传输。现代以太网可以提供千兆位每秒的传输速度。
- en: Wi-Fi
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Wi-Fi
- en: Complementary to ethernet, which uses physical cables to connect devices to
    a network, Wi-Fi allows devices to connect with each other over a wireless medium.
    This removes the need for wires. It should be noted the even though it is wireless,
    communication between devices on a LAN is not direct. The data still goes through
    a central router, called an **Access Point** (**AP**), which forwards the data
    to the intended recipient.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与使用物理电缆将设备连接到网络的以太网互补，Wi-Fi允许设备通过无线媒介相互连接。这消除了对电线的需求。需要注意的是，尽管它是无线的，但局域网内设备之间的通信并非直接。数据仍然会通过一个中央路由器，称为**接入点**（**AP**），然后将数据转发给预定的接收者。
- en: 'A comparison between these two mediums is as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种媒介的比较如下：
- en: '![Table 1.1 – Wi-Fi versus ethernet'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![表格 1.1 – Wi-Fi 与以太网的对比'
- en: '](image/Table_011.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Table_011.jpg)'
- en: Table 1.1 – Wi-Fi versus ethernet
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 1.1 – Wi-Fi 与以太网的对比
- en: Both mediums have their own pros and cons. Wireless is much easier to use for
    an average user and gives them more freedom of movement in the network, while
    cable-based ethernet is much faster and is often used when the need for mobility
    is low in a network. Now that we have learned about LAN, we will start looking
    at other geographical-based networks.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种媒介各有优缺点。无线网络对普通用户来说更易于使用，并且在网络中提供了更多的活动自由，而基于电缆的以太网则更快，通常在对移动性需求较低的网络中使用。现在我们已经了解了局域网，接下来我们将开始了解其他基于地理位置的网络。
- en: Personal area network
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 个人区域网络
- en: In contrast to LAN, a **personal area network** (**PAN**) is usually very small.
    The range of PANs are in the order of tens of meters only. An example of a PAN
    would be two Bluetooth-based devices talking to each other. In rare cases, PANs
    are also connected to LANs.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 与局域网相比，**个人区域网络**（**PAN**）通常非常小。个人区域网络的范围通常只有几十米。例如，两个基于蓝牙的设备彼此通信就是一个个人区域网络。在少数情况下，个人区域网络也与局域网相连。
- en: Metropolitan area networks
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 城市区域网络
- en: Sometimes, we tend to merge several small local area networks into a single
    category. They are usually called **metropolitan area networks** (**MANs**). An
    example of a MAN would be government offices located in different areas of a city
    connected to a single network. These networks are usually restricted to a city.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，我们倾向于将几个小型局域网合并成一个单独的类别。它们通常被称为**城市区域网络**（**MANs**）。一个城市区域网络的例子是分布在城市不同地区的政府办公室连接到一个单一的网络。这些网络通常局限于一个城市。
- en: Wide area network
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 广域网
- en: As the name indicates, a **wide area network** (**WAN**) is a network that spans
    a large geographical area. A WAN usually constitutes a network within a country.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，**广域网**（**WAN**）是一个覆盖广泛地理区域的网络。广域网通常构成一个国家内部的网络。
- en: Internet
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 互联网
- en: 'So far, we have only discussed networks in one geographical location. Inter-network,
    or the internet, is a giant network that connects different networks located in
    different geographical locations to each other. With this huge network, you can
    communicate with any device anywhere in the world, provided it is also connected
    to the internet. Different WANs are connected to each other through very high-speed
    fiber optic networks:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只讨论了同一地理位置内的网络。互联网络，或者说互联网，是一个庞大的网络，连接了位于不同地理位置的多个网络。通过这个巨大的网络，你可以与全球任何地方的设备进行通信，前提是该设备也连接到了互联网。不同的广域网通过高速光纤网络相互连接：
- en: '![Figure 3.5 – Networks by scale'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.5 – 按规模划分的网络'
- en: '](image/B14788_03_05.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_05.jpg)'
- en: Figure 3.5 – Networks by scale
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – 按规模划分的网络
- en: So far, we have discussed the physical components of and different types of
    networks. This gave us an overview of networking in computers. Now that we are
    aware of the basics of networking, we can start diving deeper into how data is
    transferred from one device to another in a network.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了网络的物理组件和不同类型的网络。这为我们提供了计算机网络的概述。现在，我们已经了解了网络的基础知识，接下来可以深入探讨数据是如何在网络中从一个设备传输到另一个设备的。
- en: Network stack
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络栈
- en: The previous section gave us a high-level introduction to networking. Now, we
    will learn about how the actual bits and pieces are transferred over a network.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 前一节为我们提供了网络的高层次介绍。现在，我们将学习实际的数据如何在网络上进行传输。
- en: Introduction to OSI model
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OSI模型介绍
- en: 'From the time you type a message on an application to the time that it gets
    delivered to its intended recipient, your message passes though different layers
    in a communication system. To help us understand all the communication processes
    and mediums your data passes though before it reaches its destination, a framework
    was conceptualized to describe the functionality of a networking system. This
    model is called the **Open Systems Interconnected** (**OSI**) model. This model
    is not necessarily applied to the internet alone and can be applied to any modern
    communication system:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 从你在应用程序中输入一条消息，到它传送到目标接收者的过程，你的消息经过了通信系统中的不同层级。为了帮助我们理解数据在到达目的地之前，经过的所有通信过程和媒介，提出了一个框架，用于描述网络系统的功能。这个框架被称为**开放系统互联**（**OSI**）模型。这个模型不仅仅应用于互联网，也适用于任何现代通信系统：
- en: '![Figure 3.6 – 7-layer OSI stack'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.6 – 7层OSI模型栈'
- en: '](image/B14788_03_06.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_06.jpg)'
- en: Figure 3.6 – 7-layer OSI stack
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 7层OSI模型栈
- en: The OSI model contains 7 layers that conceptualize how data is transferred over
    any electronic communication medium. Let's look at these layers in more detail.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: OSI模型包含7个层级，用来概念化数据如何通过任何电子通信媒介进行传输。让我们更详细地看看这些层级。
- en: Application layer
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用层
- en: The application layer is the top-most layer of the OSI stack. This is the layer
    that the user interacts with. Any internet-connected device you use probably has
    an application layer interface. It serves as an input/output endpoint to the user.
    Any data you send is added to the application layer and any data you receive from
    the others is displayed over this layer.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 应用层是OSI模型中的最上层。这是用户与之交互的层。你使用的任何连接到互联网的设备可能都具有应用层接口。它充当着与用户的输入/输出端点。你发送的任何数据都会加入到应用层，接收到的任何来自其他设备的数据也会在这一层上显示。
- en: Presentation layer
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表示层
- en: This layer resides below the application layer and is responsible for converting
    data into a useful format. The data from the application layer comes in different
    formats and is usually not in the most readable form for the communication system.
    Here, data gets converted into a suitable form. Also, the user data in not encrypted
    from the application layer. At the presentation layer, encryption is usually added
    to the data for security purposes.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这一层位于应用层下方，负责将数据转换为有用的格式。来自应用层的数据通常采用不同的格式，并且通常不适合通信系统的最易读形式。在这里，数据会被转换为合适的格式。另外，用户数据在应用层并未加密。在表示层，通常会对数据进行加密，以确保安全。
- en: Session layer
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 会话层
- en: Below the presentation layer is the session layer. Once the data is ready to
    be sent, the sending device and the receiving device must establish a connection
    so that they can send data over the channel. The session layer helps do just that
    – it establishes a connection from your device to the recipient device.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在表示层下方是会话层。一旦数据准备好发送，发送设备和接收设备必须建立连接，以便它们能够通过通道发送数据。会话层帮助完成这一任务——它在您的设备与接收设备之间建立连接。
- en: Transport layer
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 传输层
- en: Once the session has been established between two devices, the data is ready
    to be sent over the channel. The transport layer takes the actual data to be sent
    and divides it into smaller and manageable chunks, called *segments*, that can
    be sent over the link. It is also responsible for receiving segments of data from
    other devices and assembling it back for your consumption.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦两个设备之间的会话建立，数据就准备好通过通道发送。传输层将要发送的实际数据分割成较小且可管理的块，称为*段*，可以通过链路发送。它还负责接收来自其他设备的数据段，并将其重新组合，以供您使用。
- en: The transport layer is also responsible for flow and error control. Different
    transmission media has different speeds and different error rates. It is the job
    of the transport layer to ensure that proper data is transmitted.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 传输层还负责流量控制和错误控制。不同的传输介质具有不同的速度和错误率。传输层的任务是确保正确的数据传输。
- en: Network layer
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络层
- en: The role of the network layer comes into play when we want to communicate with
    devices that are not present on the same network. The network layer breaks down
    *segments* from the transport layer into even smaller *packets*. The network layer
    also determines the best possible route for the packet to take to reach its destination.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们要与不在同一网络上的设备进行通信时，网络层的作用便会发挥出来。网络层将来自传输层的*段*分解成更小的*数据包*。网络层还确定数据包到达目的地的最佳路径。
- en: Data link layer
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据链路层
- en: This is somewhat similar to the network layer; however, it facilitates communication
    between devices in the same network. The data link layer breaks down packets into
    frames.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这在某种程度上类似于网络层；然而，它促进了同一网络内设备之间的通信。数据链路层将数据包分解成帧。
- en: Physical layer
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 物理层
- en: This is the lowermost layer of the stack and is where the data entered by the
    user is converted into physical signals that can be transported over transmission
    media. In the case of a digital system, this means that 0s and 1s of data are
    converted into their suitable representations in physical systems, such as voltage
    levels.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这是堆栈的最低层，是用户输入的数据被转换成可以通过传输介质传输的物理信号的地方。在数字系统中，这意味着数据的0和1被转换成其在物理系统中的适当表示，例如电压水平。
- en: Complete cycle
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完整周期
- en: 'The complete cycle for communication is as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通信的完整周期如下：
- en: '![Figure 3.7 – Data transmission in the OSI stack'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.7 – OSI栈中的数据传输'
- en: '](image/B14788_03_07.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_07.jpg)'
- en: Figure 3.7 – Data transmission in the OSI stack
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.7 – OSI栈中的数据传输
- en: The data that's entered by user goes from the application layer to the physical
    layer and then from the physical layer to the application layer at the other end.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 用户输入的数据从应用层到物理层，再从物理层到达另一端的应用层。
- en: TCP/IP model
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TCP/IP模型
- en: 'The previously shown model is a very generic model that conceptualizes communication
    in any medium. However, how computer networks work is a special case of the OSI
    model and is commonly referred to as the TCP/IP model. You will often see this
    model mentioned in the literature instead of the more generic OSI model:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 前面展示的模型是一个非常通用的模型，概念化了任何媒介中的通信。然而，计算机网络的工作方式是OSI模型的一个特殊情况，通常被称为TCP/IP模型。您经常会在文献中看到这个模型，而不是更通用的OSI模型：
- en: '![Figure 3.8 – TCP/IP stack'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.8 – TCP/IP堆栈'
- en: '](image/B14788_03_08.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_08.jpg)'
- en: Figure 3.8 – TCP/IP stack
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.8 – TCP/IP堆栈
- en: In contrast to the OSI model, which has seven layers, the internet stack has
    four layers. Let's look at them in more detail.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 与拥有七层的OSI模型相比，互联网协议栈有四层。我们来更详细地了解一下它们。
- en: Application layer
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用层
- en: This is the topmost layer. This layer is responsible for process-to-process
    communication. Common application layer protocols include HTTP, FTP, SSH, DNS,
    and others.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最上层。此层负责进程间通信。常见的应用层协议包括HTTP、FTP、SSH、DNS等。
- en: Transport layer
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 传输层
- en: TCP and UDP are common protocols at this layer. This layer is responsible for
    end-to-end communication and error control. TCP is connection oriented, while
    UDP is a connectionless protocol.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: TCP 和 UDP 是这一层常见的协议。这一层负责端到端的通信和错误控制。TCP 是面向连接的，而 UDP 是无连接的协议。
- en: Internet layer
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络层
- en: This layer parallels the network layer in the OSI stack. It defines protocols
    that are responsible for logically transferring data from one node to another.
    One of the most famous protocols at this layer is the IP protocol, which uses
    IP addresses to communicate between devices.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这一层与 OSI 堆栈中的网络层平行。它定义了负责从一个节点到另一个节点逻辑传输数据的协议。在这一层，最著名的协议之一就是 IP 协议，它使用 IP 地址在设备之间进行通信。
- en: Network access layer
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络接入层
- en: This layer combines the data link and the physical layer in the OSI stack.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这一层将 OSI 堆栈中的数据链路层和物理层结合在一起。
- en: Mapping the OSI and TCP/IP stack
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OSI 和 TCP/IP 堆栈映射
- en: 'The layer mapping for the OSI and TCP/IP stack is as follows:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: OSI 和 TCP/IP 堆栈的层级映射如下：
- en: '![Figure 3.9 – Mapping for the TCP/IP and OSI stack'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.9 – TCP/IP 和 OSI 堆栈的映射'
- en: '](image/B14788_03_09.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_09.jpg)'
- en: Figure 3.9 – Mapping for the TCP/IP and OSI stack
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9 – TCP/IP 和 OSI 堆栈的映射
- en: The preceding image shows how the OSI stack is mapped to the TCP/IP stack for
    use in network communication. As we mentioned previously, even though the OSI
    model is a more generic model, the functionality of some of the layers in the
    OSI model can be merged into one layer in the TCP/IP stack. Now that we have learned
    how the data moves in a network at a conceptual level, we will dig more deeply
    into the actual bits and pieces of communication at the byte level.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图像展示了 OSI 堆栈如何映射到 TCP/IP 堆栈，以便在网络通信中使用。正如我们之前提到的，尽管 OSI 模型是一个更通用的模型，但 OSI
    模型中的某些层的功能可以合并到 TCP/IP 堆栈的一个层中。现在，我们已经了解了数据在网络中如何按概念级别流动，接下来我们将深入探讨字节级别的实际通信内容。
- en: Network entities
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络实体
- en: Before proceeding, we will introduce a few network-related concepts that will
    be used throughout this book. Having prior knowledge of them is essential so that
    you have a complete understanding of this book.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们将介绍一些本书中将会用到的网络相关概念。了解这些概念是至关重要的，只有这样，你才能全面理解本书的内容。
- en: Private IP address
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 私有 IP 地址
- en: An **internet protocol** (**IP**) address is a unique identifier that identifies
    a device in a network. An IP address is a 32-bit number. Whenever you connect
    to a new network, you are either assigned a new IP address by a **Dynamic Host
    Control Protocol** (**DHCP**) server or you get an IP address stored in your system
    configuration if it is available. This is usually called a local/private IP address.
    More often than not, you will see this address in the form **192.168.1.x**.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**互联网协议**（**IP**）地址是一个唯一标识符，用于标识网络中的设备。IP 地址是一个 32 位的数字。每当你连接到一个新网络时，你要么通过**动态主机配置协议**（**DHCP**）服务器分配一个新的
    IP 地址，要么如果系统配置中有可用的 IP 地址，则使用该地址。这通常被称为本地/私有 IP 地址。你通常会看到这种地址的形式是**192.168.1.x**。'
- en: Important Note about IP Addresses
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 IP 地址的重要说明
- en: IP addresses are 32-bit, which means that there are only 2^32 = 4,294,967,295
    internet addresses available. The IP address is an old protocol and when it was
    developed, there were not many internet-connected devices. At the time, 4 billion
    devices was considered a sufficient number. However, as we have seen recently,
    there are far more than 4 billion devices in the world today, so how do all the
    devices get their addresses? This is done through the **Network Address Translation**
    (**NAT**) protocol, which we will look at in a moment.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: IP 地址是 32 位的，这意味着只有 2^32 = 4,294,967,295 个互联网地址可用。IP 地址是一个古老的协议，当它被开发时，互联网连接的设备数量并不多。当时，40
    亿个设备被认为是足够的。然而，正如我们最近看到的，现在世界上有远超过 40 亿个设备，那么这些设备是如何获得其地址的呢？这就是通过**网络地址转换**（**NAT**）协议完成的，我们稍后将对此进行讲解。
- en: 'In addition to a private IP address, we also have a public IP address. To avoid
    the problem of running out of IP addresses with each new device getting a new
    unique IP address, we use a protocol called the NAT protocol. Instead of giving
    each device a new IP address, when you get an internet connection from your **Internet
    Service Provider** (**ISP**), you will only get one public IP address. This will
    be associated with your router/gateway. This IP address will be accessible to
    all the other networks on the internet. So, every device within this network will
    use this public/gateway IP address to communicate with any device in the network.
    The following diagram illustrates this:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 除了私有IP地址，我们还有公有IP地址。为了避免每次新设备连接时分配一个新的唯一IP地址而导致IP地址耗尽的问题，我们使用了一种名为NAT协议的技术。在NAT协议下，当你从**互联网服务提供商**（**ISP**）获得互联网连接时，你只会获得一个公有IP地址。这个IP地址将与您的路由器/网关关联，并且可以被互联网上的其他网络访问。所以，这个网络中的每个设备都会使用这个公有/网关IP地址与网络中的其他设备进行通信。下面的图示说明了这一点：
- en: '![Figure 3.10 – Public and private IPs'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.10 – 公有IP与私有IP地址'
- en: '](image/B14788_03_10.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_10.jpg)'
- en: Figure 3.10 – Public and private IPs
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10 – 公有IP与私有IP地址
- en: Let's consider your home LAN network, which contains four devices – three PCs
    and one router/gateway. When you get an internet subscription from your ISP, you
    will get a public IP address or a WAN IP address. In the preceding example, the
    public IP is **169.2.4.55**. This is associated with your router. If you connect
    to the router and go on the internet and search for your public IP, you will get
    this IP. You can also find this IP on your router's setting page. In addition
    to the public IP, each node in the network will have a private IP address. This
    address is not visible to the devices outside of this LAN. The private IP addresses
    in the preceding example are **192.168.1.40**, **60**, and **80**. Each of these
    devices will appear to have an IP address of **169.2.4.55** to the devices external
    to this network.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一下你的家庭局域网（LAN），它包含四个设备——三台PC和一个路由器/网关。当你从ISP处订阅互联网服务时，你将获得一个公有IP地址或广域网（WAN）IP地址。在前面的例子中，公有IP是**169.2.4.55**，它与您的路由器关联。如果你连接到路由器并上网，然后搜索你的公有IP地址，你将看到这个IP地址。你也可以在路由器的设置页面找到这个IP地址。除了公有IP外，网络中的每个节点还会有一个私有IP地址。这个地址对局域网外的设备是不可见的。前述例子中的私有IP地址是**192.168.1.40**、**60**和**80**。这些设备在网络外部看起来都会有一个**169.2.4.55**的IP地址。
- en: So, to external devices, all these internal PCs will look like one device. So,
    how does the data coming and going in and out of a network know which PC to go
    to? This is done using a **media access control** (**MAC**) address. Inside the
    internal network, the devices only work though MAC addresses. MAC addresses will
    be explained in the *MAC address* section.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对外部设备来说，这些内部PC看起来就像是一个设备。那么，如何知道数据进出网络时该到哪台PC呢？这是通过**媒体访问控制**（**MAC**）地址来完成的。在内部网络中，设备之间的通信仅通过MAC地址进行。MAC地址将在*MAC地址*部分进行解释。
- en: Public versus private IP addresses
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公有IP与私有IP地址
- en: 'The main differences between public and private IP addresses are as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 公有IP与私有IP地址的主要区别如下：
- en: '![Table 3.2 – Differences between public and private IP addresses'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![表格3.2 – 公有IP与私有IP地址的区别'
- en: '](image/Table_02.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/Table_02.jpg)'
- en: Table 3.2 – Differences between public and private IP addresses
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 表格3.2 – 公有IP与私有IP地址的区别
- en: The IP addresses we have seen so far are IPV4 addresses, which are quite popular.
    However, there are other addresses as well. Let's take a look.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们看到的IP地址是IPv4地址，它们非常普及。然而，还有其他类型的地址。让我们来了解一下。
- en: IPv4 versus IPv6
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IPv4与IPv6
- en: So far, the IP addresses we have learned about are called IPv4 addresses. There
    is another version of the IP address called IPv6\. These are 128-bit addresses.
    They have been created to be used in future computing systems. However, their
    adoption has been slow due to the use of the NAT protocol. Currently, only 40%
    of the internet supports IPv6 addresses.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们学习的IP地址是IPv4地址。还有一种称为IPv6的IP地址。这些是128位地址，旨在用于未来的计算机系统。然而，由于NAT协议的使用，IPv6的普及速度较慢。目前，只有40%的互联网支持IPv6地址。
- en: MAC address
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MAC地址
- en: 'A MAC address is also called a hardware address and is usually associated with
    the NIC card. Each NIC has its own MAC address. A MAC address is a physical number
    that''s assigned by the manufacturer. Each manufacturer is assigned a pool of
    numbers that it can use to manufacture its products. A MAC address is a 48-bit
    number:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: MAC地址也叫硬件地址，通常与NIC卡相关联。每个NIC都有自己的MAC地址。MAC地址是由制造商分配的一个物理地址，每个制造商会被分配一个数字池，用来制造产品。MAC地址是一个48位的数字：
- en: '![Figure 3.11 – MAC address bytes'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.11 – MAC地址字节'
- en: '](image/B14788_03_11.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_11.jpg)'
- en: Figure 3.11 – MAC address bytes
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11 – MAC地址字节
- en: Next, let's discuss ports.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来讨论端口。
- en: Ports
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 端口
- en: While a MAC address uniquely identifies a NIC, which the data uses to identify
    the correct device it should go to, a port identifies a unique service running
    on a PC. It serves as a logical endpoint of communication. Each device has multiple
    applications sending or receiving data over a network. For example, you could
    be browsing on your PC while you have a download running in the background and
    another service is uploading data to a server. Once the data reaches your PC,
    it uses ports to distinguish between the different processes the data belongs
    to. There are total of 65,535 ports on a system. Some of the first 1,024 are reserved
    and it is not recommended to use these ports.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然MAC地址唯一标识一个网络接口卡（NIC），它被数据用来识别数据应该传送到哪个设备，但端口标识了PC上正在运行的唯一服务。它作为通信的逻辑终点。每个设备都有多个应用程序通过网络发送或接收数据。例如，你可能在浏览网页，同时后台有一个下载任务在运行，另一个服务正在向服务器上传数据。当数据到达你的PC时，它会通过端口区分数据属于哪个进程。系统上共有65,535个端口，其中前1,024个是保留端口，不建议使用这些端口。
- en: Protection
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护
- en: So far in this chapter, we have learned about the basics of computer networking,
    which are essential to understanding the rest of this book. Now, we will start
    looking at what parameters can be used to track us and how we can protect ourselves.
    In the previous chapter, we learned that the first step in ethical hacking is
    information gathering. But before we start gathering information, we must make
    sure that our identity is protected. Otherwise, we can be easily tracked. Your
    identity can be tracked back to you with a number of parameters. The most common
    is your IP address and your MAC address.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在本章中我们已经学习了计算机网络的基础知识，这些是理解本书其余部分的关键。现在，我们将开始查看可以用来追踪我们的参数，以及如何保护自己。在上一章中，我们了解了道德黑客的第一步是信息收集。但在开始收集信息之前，我们必须确保我们的身份得到保护。否则，我们很容易被追踪到。你的身份可以通过多个参数被追踪回来。最常见的是你的IP地址和MAC地址。
- en: To mask your public IP address, you can use **Virtual Private Networks** (**VPNs**).
    We will not be discussing VPNs as they are not in the scope of this book. One
    important thing to note here is that you should not put complete trust in your
    VPN provider. From a security point of view, using a VPN simply means that you
    are handing over your trust from your **internet service provider** (**ISP**)
    to another company that provides VPN services. You should be very careful about
    your choice in VPNs and from cybersecurity aspect, you should be very cautious
    about free VPNs as a lot of them are bundled with either malware or use your PC
    resources for other purposes, such as bitcoin mining. Some VPNs leak your **domain
    name server** (**DNS**), a server used for mapping website names to IP addresses,
    even though they might claim to mask your identity.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 为了隐藏你的公网IP地址，你可以使用**虚拟私人网络**（**VPN**）。我们将不会讨论VPN，因为它不在本书的范围内。这里有一个重要的事项需要注意，那就是你不应完全信任你的VPN提供商。从安全角度来看，使用VPN仅仅意味着你将信任从你的**互联网服务提供商**（**ISP**）转移到提供VPN服务的另一家公司。你应该非常小心选择VPN，特别是在网络安全的角度，应该谨慎使用免费VPN，因为许多免费VPN会捆绑恶意软件，或者使用你的计算机资源进行其他目的，比如比特币挖矿。有些VPN会泄露你的**域名服务器**（**DNS**），这是一个用于将网站名称映射到IP地址的服务器，尽管它们可能声称能隐藏你的身份。
- en: 'However, when we are scanning our local networks, we can be traced with our
    MAC address. In [*Chapter 2*](B14788_02_Final_JC_ePub.xhtml#_idTextAnchor054),
    *Getting Started – Setting Up Your Lab Environment*, we installed two virtual
    machines: Kali and Windows 10\. The Kali machine will be our attack machine. Our
    machine has a NIC, which is used to communicate with other devices. This NIC has
    a MAC address. In the *Changing our MAC address* section, we will try to spoof
    a MAC address so that we can change it when scanning. By doing this, even if the
    **intrusion detection system** (**IDS**) finds out that we were scanning a port
    on a PC, it will not find out our real MAC address.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当我们扫描本地网络时，我们可能会被MAC地址追踪。在[*第2章*](B14788_02_Final_JC_ePub.xhtml#_idTextAnchor054)，*入门
    – 设置实验环境*中，我们安装了两台虚拟机：Kali和Windows 10。Kali机器将作为我们的攻击机器。我们的机器有一块网卡，用于与其他设备通信。这块网卡有一个MAC地址。在*更改我们的MAC地址*部分中，我们将尝试伪造一个MAC地址，以便在扫描时更改它。这样，即使**入侵检测系统**（**IDS**）发现我们正在扫描某台PC的端口，也无法发现我们的真实MAC地址。
- en: Changing our MAC address
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改我们的MAC地址
- en: 'In this section, we will try to change our MAC address on the Kali machine.
    Let''s start our Kali machine and open up a Terminal. To change the MAC address,
    you will need to install the **net-tools** package. In most Linux distributions,
    this tool is already available. However, if it is not installed, you can install
    it using the following commands:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将尝试在Kali机器上更改我们的MAC地址。首先启动我们的Kali机器并打开一个终端。要更改MAC地址，你需要安装**net-tools**工具包。在大多数Linux发行版中，这个工具已经可用。不过，如果没有安装，你可以使用以下命令进行安装：
- en: sudo apt-get update -y
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt-get update -y
- en: sudo apt-get install -y net-tools
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: sudo apt-get install -y net-tools
- en: 'It will prompt you for a password, which is **kali**. Once the tools have been
    installed, you can view the MAC address with the following command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 它会提示你输入密码，密码是**kali**。一旦工具安装完成，你可以使用以下命令查看MAC地址：
- en: sudo ifconfig
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: sudo ifconfig
- en: 'If everything goes well, you will see an output similar to the following:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你将看到类似如下的输出：
- en: '![Figure 3.12 – ifconfig command output'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.12 – ifconfig命令输出'
- en: '](image/B14788_03_12.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_12.jpg)'
- en: Figure 3.12 – ifconfig command output
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.12 – ifconfig命令输出
- en: There is a lot to unpack here, so let's break it down. There are two values
    here called **eth0** and **lo**. **eth0** is the name of the NIC, whereas **lo**
    is the loopback adapter. For now, we can ignore the loopback adapter. The **inet**
    field represents the private IP address of the Kali machine. **inet6** is the
    IPv6 address of the Kali machine. **ether** is the MAC address, and this is the
    field we want to change.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有很多内容需要解释，我们来逐一拆解。这里有两个值，分别是**eth0**和**lo**。**eth0**是网卡的名称，而**lo**是回环适配器。现在，我们可以忽略回环适配器。**inet**字段代表Kali机器的私有IP地址，**inet6**是Kali机器的IPv6地址，**ether**是MAC地址，这也是我们想要更改的字段。
- en: 'If you want to change the MAC address, you can''t do so while the NIC is turned
    on. First, you have to shut down the network interface. To shut down the interface,
    you can use the following command:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要更改MAC地址，不能在网卡开启的情况下进行。首先，你必须关闭网络接口。要关闭接口，你可以使用以下命令：
- en: sudo ifconfig eth0 down
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: sudo ifconfig eth0 down
- en: This command will shut down the NIC named **eth0**. If you don't see an error
    in the command's output, this means that the command ran successfully.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将关闭名为**eth0**的网卡。如果在命令输出中没有看到错误信息，这意味着命令执行成功。
- en: 'Now, if you type in the **ifconfig** command again, you will see the following
    output:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你再次输入**ifconfig**命令，你将看到以下输出：
- en: '![Figure 3.13 – Shutting down a network interface card'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.13 – 关闭网络接口卡'
- en: '](image/B14788_03_13.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_13.jpg)'
- en: Figure 3.13 – Shutting down a network interface card
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.13 – 关闭网络接口卡
- en: 'Now, you will only see the loopback adapter and that **eth0** has been turned
    off. To change the MAC address, you can run the following command. Let''s say
    you want your new MAC address to be **00:11:22:33:44:55**. Here, you can do the
    following:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你只会看到回环适配器，并且**eth0**已经被关闭。要更改MAC地址，你可以运行以下命令。假设你想要新的MAC地址是**00:11:22:33:44:55**。你可以这样做：
- en: sudo ifconfig eth0 hw ether 00:11:22:33:44:55
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: sudo ifconfig eth0 hw ether 00:11:22:33:44:55
- en: 'This command changes the **eth0** interface and the **ether** parameter of
    this NIC:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令更改**eth0**接口和该网卡的**ether**参数：
- en: '![Figure 3.14 – Changing MAC address'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.14 – 更改MAC地址'
- en: '](image/B14788_03_14.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_14.jpg)'
- en: Figure 3.14 – Changing MAC address
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14 – 更改MAC地址
- en: 'Now, if there is no error, this means that the command ran successfully. At
    this point, we can turn on the interface again by running the following command:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果没有错误，这意味着命令已成功运行。在此时，我们可以通过运行以下命令再次启用接口：
- en: sudo ifconfig eth0 up
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: sudo ifconfig eth0 up
- en: 'Now, let''s run the **ifconfig** command again to see if our changes took place:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们再次运行 **ifconfig** 命令，看看我们的更改是否生效：
- en: '![Figure 3.15 – Changed MAC address'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.15 – 已更改的 MAC 地址'
- en: '](image/B14788_03_15.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_15.jpg)'
- en: Figure 3.15 – Changed MAC address
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.15 – 已更改的 MAC 地址
- en: Here, you can see that the MAC address has been changed successfully. Now, if
    we want to scan something in a network, this MAC address will be shown instead
    of our real MAC address.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到 MAC 地址已成功更改。现在，如果我们想在网络中扫描某些内容，这个 MAC 地址将会显示出来，而不是我们的真实 MAC 地址。
- en: Creating a Python script
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Python 脚本
- en: So far, we have written manual commands to change our MAC. Ideally, we would
    like to write a Python script that will help us to change it. To do this, we need
    to find a way to run bash commands with the help of Python. Luckily, Python has
    a standard library that it uses to run system commands called **subprocess**.
    This library allows you to interact with the underlying OS.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经编写了手动命令来更改我们的 MAC 地址。理想情况下，我们希望编写一个 Python 脚本来帮助我们更改它。为此，我们需要找到一种方法，通过
    Python 运行 bash 命令。幸运的是，Python 有一个标准库，用于运行系统命令，叫做 **subprocess**。这个库允许你与底层操作系统进行交互。
- en: 'To import this library into your module, you can simply write the following
    command:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 要将这个库导入到你的模块中，你只需写下以下命令：
- en: import subprocess
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: import subprocess
- en: 'To run a command, **subprocess** has a method called **run**. Using this method,
    you can execute system commands on your operating system. If you want to see the
    information about **eth0**, you can run the following command:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行命令，**subprocess** 有一个叫做 **run** 的方法。使用这个方法，你可以在操作系统上执行系统命令。如果你想查看 **eth0**
    的信息，可以运行以下命令：
- en: subprocess.run(
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: subprocess.run(
- en: '["ifconfig", "eth0"],'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '["ifconfig", "eth0"],'
- en: shell=True,
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: shell=True,
- en: )
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: This function requires a list of commands. The other parameter, **shell=true**,
    means that we want to see the output printed to the console.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数需要一个命令列表。另一个参数 **shell=true** 表示我们希望将输出打印到控制台。
- en: 'If you run the previous file, you will see an output similar to running the
    **ifconfig eth0** command. Note that you need to be a root user to run the command,
    so it should look like this:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你运行前面的文件，你将看到类似运行 **ifconfig eth0** 命令的输出。请注意，你需要是 root 用户才能运行此命令，因此它应该像这样：
- en: sudo python3 main.py
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: sudo python3 main.py
- en: 'Here''s the output:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出结果：
- en: '![Figure 3.16 – Running system commands using Python'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.16 – 使用 Python 运行系统命令'
- en: '](image/B14788_03_16.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_16.jpg)'
- en: Figure 3.16 – Running system commands using Python
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.16 – 使用 Python 运行系统命令
- en: 'Now that you know how to run system commands using Python, you can repeat the
    preceding commands using Python. The full code is as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何使用 Python 运行系统命令，你可以使用 Python 重复前面的命令。完整的代码如下：
- en: import subprocess
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: import subprocess
- en: 'if __name__ == "__main__":'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 'if __name__ == "__main__":'
- en: interface = "eth0"
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: interface = "eth0"
- en: new_mac = "22:11:22:33:44:57"
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: new_mac = "22:11:22:33:44:57"
- en: print("Shutting down the interface")
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: print("正在关闭接口")
- en: subprocess.run(["ifconfig", "eth0", "down"])
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: subprocess.run(["ifconfig", "eth0", "down"])
- en: print("changing the interface hw address of ", interface, " to ", new_mac)
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: print("正在更改接口硬件地址为 ", interface, " 到 ", new_mac)
- en: subprocess.run(["ifconfig", interface, "hw", "ether", new_mac])
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: subprocess.run(["ifconfig", interface, "hw", "ether", new_mac])
- en: print("MAC address changed to ", new_mac)
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: print("MAC 地址已更改为 ", new_mac)
- en: subprocess.run(["ifconfig", interface, "up"])
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: subprocess.run(["ifconfig", interface, "up"])
- en: print("network interfaced turned on")
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: print("网络接口已启用")
- en: 'If you check the interface again, you will be able to see the new MAC address:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你再次检查接口，你将能够看到新的 MAC 地址：
- en: '![Figure 3.17 – New MAC address'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.17 – 新的 MAC 地址'
- en: '](image/B14788_03_17.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B14788_03_17.jpg)'
- en: Figure 3.17 – New MAC address
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.17 – 新的 MAC 地址
- en: Now that we have learned how to run commands on a system and how to change MAC
    address of a system using Python, we will stop our discussion here. In next chapter,
    we will look at information gathering.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学会了如何在系统上运行命令，以及如何使用 Python 更改系统的 MAC 地址，我们将在这里停止讨论。在下一章，我们将探讨信息收集。
- en: Summary
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the basics of networking and how we can protect
    ourselves on a local network by spoofing our MAC address for scanning purposes.
    This chapter helped us get a deeper insight into the networking aspects of the
    computer system, as well as how we can use Python to protect and mask our identity
    in a local network. In the next chapter, we will learn about scanning local networks.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学习了关于网络基础知识以及如何通过欺骗我们的MAC地址来保护自己在本地网络上进行扫描。这一章帮助我们更深入地了解计算机系统的网络方面，以及如何使用Python在本地网络中保护和掩盖我们的身份。在下一章中，我们将学习关于扫描本地网络的内容。
